endp
_cff_size_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_cff_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['loc_47A3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+290h]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_F4],', 'edx']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['404h']
mov ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_46B8']
jmp ['$Exit$14']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '52Ch']
push ['eax']
call ['_cff_make_private_dict']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['esi,', 'esp']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+64h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_4705']
jmp ['$Exit$14']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+768h]']
mov ['[ebp+var_F8],', 'eax']
jmp ['short', 'loc_4725']
mov ['ecx,', '[ebp+var_F8]']
sub ['ecx,', '1']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jbe ['short', 'loc_479A']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+edx*4+768h]']
mov ['[ebp+var_FC],', 'ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
call ['_cff_make_private_dict']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[ebp+var_24]']
lea ['eax,', '[edx+ecx*4]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+64h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_4795']
jmp ['short', '$Exit$14']
jmp ['loc_4716']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+28h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN12']
dd ['offset', '$LN10']
dd ['0FFFFFF14h,', '0C4h']
dd ['offset', '$LN11']
align ['4']
endp
_cff_size_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_48BF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_48BF']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+768h]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_4899']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_48BF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4890']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_size_request proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
and ['eax,', '2']
jz ['short', 'loc_495F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+214h]']
mov ['[ebp+var_10],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+68h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_494A']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0FFFFFFFFh']
jmp ['short', 'loc_495F']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cff_size_select']
add ['esp,', '8']
jmp ['loc_4A9A']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_FT_Request_Metrics']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_4A98']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+290h]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+570h]']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+768h]']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_49F6']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '0']
jbe ['loc_4A98']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+eax*4+768h]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_38]']
jz ['short', 'loc_4A57']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_4A69']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_40],', 'edx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_49ED']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13_0']
dd ['offset', '$LN12_0']
db ['0Fh', 'dup(0CCh)']
endp
_cff_size_select proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_Select_Metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cff_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_4C4B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+570h]']
mov ['[ebp+var_18],', 'edx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+768h]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_4BA9']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jbe ['loc_4C4B']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+edx*4+768h]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+44h]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_24]']
jz ['short', 'loc_4C0A']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_4C1C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4BA0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cff_slot_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['dword', 'ptr', '[ecx+24h],', '0']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_cff_slot_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0B88h]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4D1B']
push ['offset', '$SG11296']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_4D1B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+9Ch]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+24h],', 'eax']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_face_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_1D],', '1']
mov ['[ebp+var_1E],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_24],', 'eax']
push ['offset', '$SG11376']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_4DA9']
push ['offset', '$SG11378']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG11379']
push ['1F7h']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$110']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+60h]']
mov ['[ebp+var_28],', 'eax']
push ['offset', '$SG11388']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_18],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_4DA9']
push ['offset', '$SG11390']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '31h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_4E02']
push ['offset', '$SG11395']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4DE4']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4E22']
jmp ['$Exit$110']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['loc_4F83']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+94h],', '4F54544Fh']
jz ['short', 'loc_4EA7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '31h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_4E84']
push ['offset', '$SG11409']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4E66']
push ['offset', '$SG11410']
push ['20Dh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$110']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_4EB4']
xor ['eax,', 'eax']
jmp ['loc_5B3D']
mov ['[ebp+var_1E],', '1']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['68656164h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_4F23']
mov ['[ebp+var_1D],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4F21']
jmp ['$Exit$110']
jmp ['short', 'loc_4F4D']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4F4D']
jmp ['$Exit$110']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['43464620h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4F81']
jmp ['$Exit$110']
jmp ['short', 'loc_4FA6']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4F9F']
jmp ['$Exit$110']
mov ['[ebp+var_C],', '0']
mov ['[ebp+Dst],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_38],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0BA4h']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4FD9']
jmp ['$Exit$110']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+Dst]']
mov ['[edx+290h],', 'eax']
movzx ['ecx,', '[ebp+var_1D]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cff_font_load']
add ['esp,', '14h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5010']
jmp ['$Exit$110']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+0B88h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0B8Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '52Ch']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[ecx+84h],', '0FFFFh']
jnz ['short', 'loc_5089']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_5089']
push ['offset', '$SG11440']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG11441']
push ['25Fh']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$110']
mov ['edx,', '4']
imul ['eax,', 'edx,', '31h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_50A7']
push ['offset', '$SG11448']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_5089']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_50BD']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+520h]']
add ['ecx,', '186h']
cmp ['[ebp+var_44],', 'ecx']
jnb ['short', 'loc_5116']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_5114']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '31h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_5110']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
push ['offset', '$SG11457']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_50EA']
jmp ['short', 'loc_50B4']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+40h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_514E']
movzx ['edx,', '[ebp+var_1D]']
test ['edx,', 'edx']
jz ['short', 'loc_5135']
mov ['[ebp+var_B8],', '3E8h']
jmp ['short', 'loc_5142']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+44h]']
mov ['[ebp+var_B8],', 'ecx']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_B8]']
mov ['[edx+44h],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '30h']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '48h']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '44h']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jge ['short', 'loc_5182']
mov ['edx,', '[ebp+var_4C]']
mov ['eax,', '[edx+0Ch]']
neg ['eax']
mov ['[ebp+var_BC],', 'eax']
jmp ['short', 'loc_518E']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_BC],', 'edx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '(offset', 'loc_FFFB+5)']
jz ['loc_524D']
mov ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[edx]']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_54]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4C]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+var_50]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_50]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_50]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+4]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_50]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+768h]']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_5280']
mov ['ecx,', '[ebp+var_40]']
sub ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '0']
jbe ['loc_54C6']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+edx*4+768h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '52Ch']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+40h]']
test ['ecx,', 'ecx']
jz ['loc_5366']
mov ['edx,', '[ebp+var_60]']
movzx ['eax,', 'byte', 'ptr', '[edx+40h]']
test ['eax,', 'eax']
jz ['loc_5364']
mov ['ecx,', '[ebp+var_60]']
cmp ['dword', 'ptr', '[ecx+44h],', '1']
jbe ['short', 'loc_5309']
mov ['edx,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[edx+44h],', '1']
jbe ['short', 'loc_5309']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[eax+44h]']
cmp ['edx,', '[ecx+44h]']
jnb ['short', 'loc_52F2']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_C0],', 'ecx']
jmp ['short', 'loc_52FE']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[edx+44h]']
mov ['[ebp+var_C0],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
mov ['[ebp+var_74],', 'ecx']
jmp ['short', 'loc_5310']
mov ['[ebp+var_74],', '1']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '30h']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '30h']
push ['ecx']
call ['_FT_Matrix_Multiply_Scaled']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '30h']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '48h']
push ['ecx']
call ['_FT_Vector_Transform_Scaled']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[edx+44h]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx+44h],', 'eax']
jmp ['short', 'loc_53A6']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '30h']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '30h']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+48h]']
mov ['edx,', '[eax+4Ch]']
mov ['eax,', '[ebp+var_5C]']
mov ['[eax+48h],', 'ecx']
mov ['[eax+4Ch],', 'edx']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[edx+44h]']
mov ['[ecx+44h],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '30h']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '48h']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '44h']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_64]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jge ['short', 'loc_53DA']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[edx+0Ch]']
neg ['eax']
mov ['[ebp+var_C4],', 'eax']
jmp ['short', 'loc_53E6']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_C4],', 'edx']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '(offset', 'loc_FFFB+5)']
jz ['loc_54A5']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+var_64]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_64]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+var_64]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_64]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+var_68]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+4]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+4],', 'eax']
jmp ['loc_5277']
movzx ['edx,', '[ebp+var_1D]']
test ['edx,', 'edx']
jz ['loc_58F7']
mov ['[ebp+var_78],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFh']
jz ['short', 'loc_5507']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+490h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+10h],', 'edx']
jmp ['short', 'loc_5516']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+4A0h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+54h]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+34h],', 'edx']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+58h]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+5Ch]']
add ['edx,', '0FFFFh']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'edx']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+60h]']
add ['edx,', '0FFFFh']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+40h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_34]']
mov ['ax,', '[edx+44h]']
mov ['[ecx+44h],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+40h]']
mov ['[ecx+46h],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+38h]']
mov ['[ecx+48h],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+44h]']
imul ['eax,', 'edx,', '0Ch']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4Ah],', 'ax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+4Ah]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+46h]']
mov ['edx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[edx+48h]']
sub ['eax,', 'edx']
cmp ['ecx,', 'eax']
jge ['short', 'loc_55D3']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+46h]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+48h]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4Ah],', 'cx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+20h]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+50h],', 'cx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+24h]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+52h],', 'cx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_cff_index_get_name']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['loc_5777']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_84],', 'eax']
mov ['[ebp+var_88],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_remove_subset_prefix']
add ['esp,', '4']
mov ['eax,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_568E']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jz ['short', 'loc_568E']
mov ['ecx,', '[ebp+var_88]']
mov ['[ebp+var_84],', 'ecx']
cmp ['[ebp+var_7C],', '0']
jz ['loc_5775']
cmp ['[ebp+var_84],', '0']
jz ['loc_5775']
mov ['edx,', '[ebp+var_80]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['loc_5775']
mov ['ecx,', '[ebp+var_80]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_84]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_56E0']
mov ['edx,', '[ebp+var_84]']
add ['edx,', '1']
mov ['[ebp+var_84],', 'edx']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_56A5']
mov ['ecx,', '[ebp+var_80]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jz ['short', 'loc_56F6']
mov ['eax,', '[ebp+var_80]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_5701']
mov ['edx,', '[ebp+var_80]']
add ['edx,', '1']
mov ['[ebp+var_80],', 'edx']
jmp ['short', 'loc_56A5']
mov ['eax,', '[ebp+var_84]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jz ['short', 'loc_571D']
mov ['edx,', '[ebp+var_84]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Dh']
jnz ['short', 'loc_5731']
mov ['ecx,', '[ebp+var_84]']
add ['ecx,', '1']
mov ['[ebp+var_84],', 'ecx']
jmp ['loc_56A5']
mov ['edx,', '[ebp+var_84]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_576E']
mov ['ecx,', '[ebp+var_80]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_576E']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_cff_strcpy']
add ['esp,', '8']
mov ['[ebp+var_78],', 'eax']
mov ['edx,', '[ebp+var_78]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_remove_style']
add ['esp,', '8']
jmp ['short', 'loc_5775']
jmp ['loc_56A5']
jmp ['short', 'loc_57B5']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+0ACh]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_57B5']
mov ['edx,', '[ebp+var_8C]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_cff_strcpy']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+14h],', 'eax']
cmp ['[ebp+var_78],', '0']
jz ['short', 'loc_57C6']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_78]']
mov ['[edx+18h],', 'eax']
jmp ['short', 'loc_57DD']
push ['offset', '$SG11517']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_cff_strcpy']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+18h],', 'eax']
mov ['[ebp+var_3C],', '811h']
movzx ['eax,', '[ebp+var_1E]']
test ['eax,', 'eax']
jz ['short', 'loc_57F5']
mov ['ecx,', '[ebp+var_3C]']
or ['ecx,', '8']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_5809']
mov ['ecx,', '[ebp+var_3C]']
or ['ecx,', '4']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
or ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
mov ['[ebp+var_3C],', '0']
mov ['edx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jz ['short', 'loc_5831']
mov ['eax,', '[ebp+var_3C]']
or ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['[ebp+Str1],', 'eax']
cmp ['[ebp+Str1],', '0']
jz ['short', 'loc_588C']
push ['offset', '$SG11525']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_5883']
push ['offset', '$SG11526']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_588C']
mov ['eax,', '[ebp+var_3C]']
or ['eax,', '2']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
and ['ecx,', '2']
jnz ['short', 'loc_58EE']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_58EE']
mov ['esi,', 'esp']
push ['4']
push ['offset', '$SG11530']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_58E5']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG11531']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_58EE']
mov ['ecx,', '[ebp+var_3C]']
or ['ecx,', '2']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[ecx+84h],', '0FFFFh']
jnz ['short', 'loc_5917']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
or ['eax,', '200h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[edx+84h],', '0FFFFh']
jz ['short', 'loc_5940']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_5940']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
or ['edx,', '1000h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '74h']
mov ['[ebp+var_B0],', 'ecx']
mov ['[ebp+var_AC],', '0']
jmp ['short', 'loc_5967']
mov ['edx,', '[ebp+var_AC]']
add ['edx,', '1']
mov ['[ebp+var_AC],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_AC]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_59C2']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_AC]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_A8],', 'edx']
mov ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '3']
jnz ['short', 'loc_59AD']
mov ['edx,', '[ebp+var_A8]']
movzx ['eax,', 'word', 'ptr', '[edx+0Ah]']
cmp ['eax,', '1']
jnz ['short', 'loc_59AD']
jmp ['$Skip_Unicode$111']
mov ['ecx,', '[ebp+var_A8]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jnz ['short', 'loc_59C0']
jmp ['$Skip_Unicode$111']
jmp ['short', 'loc_5958']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_59DE']
mov ['ecx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[ecx+5B0h],', '0FFFFh']
jz ['short', 'loc_59DE']
jmp ['$Exit$110']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '3']
mov ['[ebp+var_98],', 'ax']
mov ['ecx,', '1']
mov ['[ebp+var_96],', 'cx']
mov ['[ebp+var_9C],', '756E6963h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+24h]']
mov ['[ebp+var_AC],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_A0]']
push ['ecx']
push ['0']
push ['offset', '_cff_cmap_unicode_class_rec']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5A4C']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '0A3h']
jz ['short', 'loc_5A4C']
jmp ['$Exit$110']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+5Ch],', '0']
jnz ['short', '$Skip_Unicode$111']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_AC]']
cmp ['edx,', '[ecx+24h]']
jz ['short', '$Skip_Unicode$111']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_AC]']
mov ['ecx,', '[ecx+eax*4]']
mov ['[edx+5Ch],', 'ecx']
mov ['edx,', '[ebp+var_B0]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jbe ['$Exit$110']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '7']
mov ['[ebp+var_98],', 'cx']
mov ['edx,', '[ebp+var_B0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_5ACF']
xor ['eax,', 'eax']
mov ['[ebp+var_96],', 'ax']
mov ['[ebp+var_9C],', '41444F42h']
mov ['[ebp+var_B4],', 'offset', '_cff_cmap_encoding_class_rec']
jmp ['short', 'loc_5B1D']
mov ['ecx,', '[ebp+var_B0]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnz ['short', 'loc_5AFD']
mov ['edx,', '1']
mov ['[ebp+var_96],', 'dx']
mov ['[ebp+var_9C],', '41444245h']
mov ['[ebp+var_B4],', 'offset', '_cff_cmap_encoding_class_rec']
jmp ['short', 'loc_5B1D']
mov ['eax,', '2']
mov ['[ebp+var_96],', 'ax']
mov ['[ebp+var_9C],', '41444243h']
mov ['[ebp+var_B4],', 'offset', '_cff_cmap_encoding_class_rec']
push ['0']
lea ['ecx,', '[ebp+var_A0]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN109']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN108']
dd ['offset', '$LN106']
dd ['0FFFFFF60h,', '0Ch']
dd ['offset', '$LN107']
db ['0Ah', 'dup(0CCh)']
endp
_cff_face_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_5BC2']
jmp ['short', 'loc_5C3A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+214h]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5BF5']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_5C3A']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_cff_font_done']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+290h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_5C13']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_driver_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+20h],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx+24h],', '1F4h']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax+24h],', '190h']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx+24h],', '3E8h']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx+24h],', '113h']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx+24h],', '683h']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx+24h],', '113h']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx+24h],', '91Dh']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx+24h],', '0']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_driver_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cff_check_points proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_5D51']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'word', 'ptr', '[ecx+16h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['eax,', 'word', 'ptr', '[ecx+3Ah]']
add ['edx,', '[ebp+arg_4]']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
cmp ['eax,', '[edx+4]']
ja ['short', 'loc_5D63']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_5D63']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_5D7B']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_FT_GlyphLoader_CheckPoints']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_builder_add_point proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+41h]']
test ['eax,', 'eax']
jz ['short', 'loc_5E11']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
lea ['edx,', '[ecx+edx*8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_8]']
sar ['edx,', '0Ah']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'edx']
movzx ['ecx,', '[ebp+arg_C]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5E02']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_5E09']
mov ['[ebp+var_10],', '2']
mov ['edx,', '[ebp+var_C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['dx,', '[ecx+2]']
add ['dx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cff_builder_add_point1	proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cff_check_points']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_5E64']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cff_builder_add_point']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_cff_builder_start_point proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+40h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5ECC']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+40h],', '1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cff_builder_add_contour']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_5ECC']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cff_builder_add_point1']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cff_builder_close_contour proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_5F1D']
jmp ['loc_6020']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '1']
jg ['short', 'loc_5F31']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_5F48']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'word', 'ptr', '[ecx+edx*2-4]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
cmp ['edx,', '1']
jle ['short', 'loc_5FC8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
lea ['edx,', '[ecx+edx*8-8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx-1]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnz ['short', 'loc_5FC8']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_5FC8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '1']
jnz ['short', 'loc_5FC8']
mov ['ecx,', '[ebp+var_4]']
mov ['dx,', '[ecx+2]']
sub ['dx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
test ['edx,', 'edx']
jle ['short', 'loc_6020']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
sub ['ecx,', '1']
cmp ['[ebp+var_8],', 'ecx']
jnz ['short', 'loc_6005']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', '[edx]']
sub ['ax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['ax,', '[edx+2]']
sub ['ax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2],', 'ax']
jmp ['short', 'loc_6020']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0Ch]']
mov ['[ecx+edx*2-2],', 'ax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_cff_lookup_glyph_by_stdcharcode proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+488h],', '0']
jnz ['short', 'loc_6051']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_60B4']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_6060']
cmp ['[ebp+arg_4],', '0FFh']
jle ['short', 'loc_6065']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_60B4']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cff_get_standard_encoding']
add ['esp,', '4']
mov ['word', 'ptr', '[ebp+var_8],', 'ax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_6087']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_60B1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+488h]']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
movzx ['eax,', 'word', 'ptr', '[ebp+var_8]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_60AF']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_60B4']
jmp ['short', 'loc_607E']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cff_get_glyph_data proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_6149']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+80h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_6173']
jmp ['short', 'loc_6173']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '498h']
push ['ecx']
call ['_cff_index_access_element']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
db ['0Fh', 'dup(0CCh)']
endp
_cff_free_glyph_data proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_6229']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+80h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_624A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '498h']
push ['eax']
call ['_cff_index_forget_element']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_0']
db ['7', 'dup(0CCh)']
endp
_cff_decoder_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_4],', 'ecx']
push ['3A4h']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_cff_builder_init']
add ['esp,', '14h']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+5Ch]']
mov ['[ecx+37Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+51Ch]']
mov ['[ecx+38Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+37Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+558h]']
push ['ecx']
call ['_cff_compute_bias']
add ['esp,', '8']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+384h],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[eax+398h],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_decoder_prepare proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '52Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+768h],', '0']
jz ['loc_645B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0B6Ch']
push ['ecx']
call ['_cff_fd_select_get']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'al']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['eax,', '[ebp+var_8]']
cmp ['edx,', '[eax+768h]']
jb ['short', 'loc_63FA']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_63D7']
push ['offset', '$SG12076']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_63B9']
push ['offset', '$SG12077']
push ['1B1h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$14_0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_641D']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_14+3]']
push ['eax']
push ['offset', '$SG12083']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_63FA']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+76Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+44h],', '0']
jz ['short', 'loc_645B']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_645B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_18],', 'ecx']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+edx*4+4]']
mov ['[eax+48h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+220h]']
mov ['[eax+378h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+238h]']
mov ['[eax+388h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+378h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
mov ['ecx,', '[eax+558h]']
push ['ecx']
call ['_cff_compute_bias']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+380h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+210h]']
mov ['[eax+2E8h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+214h]']
mov ['[eax+2ECh],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+3A0h],', 'ecx']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cff_slot_load	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4CCh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4CC]']
mov ['ecx,', '133h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_3B8],', 'ecx']
mov ['edx,', '[ebp+var_3B8]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_3C0],', 'eax']
mov ['[ebp+var_3BB],', '0']
mov ['ecx,', '[ebp+var_3C0]']
cmp ['dword', 'ptr', '[ecx+5B0h],', '0FFFFh']
jz ['short', 'loc_659F']
mov ['edx,', '[ebp+var_3C0]']
cmp ['dword', 'ptr', '[edx+48Ch],', '0']
jz ['short', 'loc_659F']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_659D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_3C0]']
add ['ecx,', '480h']
push ['ecx']
call ['_cff_charset_cid_to_gindex']
add ['esp,', '8']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_659D']
push ['offset', '$SG12224']
push ['0A48h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_72BE']
jmp ['short', 'loc_65C9']
mov ['edx,', '[ebp+var_3C0]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+0Ch]']
jb ['short', 'loc_65C9']
push ['offset', '$SG12227']
push ['0A4Ch']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_72BE']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '400h']
jz ['short', 'loc_65DD']
mov ['edx,', '[ebp+arg_C]']
or ['edx,', '3']
mov ['[ebp+arg_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0A4h],', '(offset', 'loc_FFFB+5)']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0A8h],', '(offset', 'loc_FFFB+5)']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_661B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+0A4h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
mov ['[edx+0A8h],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['loc_68DB']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_3EC],', 'eax']
mov ['ecx,', '[ebp+var_3EC]']
mov ['edx,', '[ecx+214h]']
mov ['[ebp+var_3F0],', 'edx']
mov ['eax,', '[ebp+var_3EC]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_3F4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+2Ch],', '0FFFFFFFFh']
jz ['loc_68DB']
mov ['eax,', '[ebp+var_3F0]']
cmp ['dword', 'ptr', '[eax+60h],', '0']
jz ['loc_68DB']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '8']
jnz ['loc_68DB']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_408]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+var_3F4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+var_3B8]']
push ['eax']
mov ['ecx,', '[ebp+var_3F0]']
mov ['edx,', '[ecx+48h]']
call ['edx']
add ['esp,', '1Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['loc_68DB']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+6Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+6Ch],', 'dx']
movzx ['ecx,', '[ebp+var_406]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+18h],', 'ecx']
movzx ['eax,', '[ebp+var_408]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'eax']
movsx ['edx,', '[ebp+var_404]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
movsx ['ecx,', '[ebp+var_402]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+24h],', 'ecx']
movzx ['eax,', '[ebp+var_400]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
movsx ['edx,', '[ebp+var_3FE]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2Ch],', 'edx']
movsx ['ecx,', '[ebp+var_3FC]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+30h],', 'ecx']
movzx ['eax,', '[ebp+var_3FA]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+48h],', '62697473h']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10h']
jz ['short', 'loc_6789']
movsx ['ecx,', '[ebp+var_3FE]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+64h],', 'ecx']
movsx ['eax,', '[ebp+var_3FC]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+68h],', 'eax']
jmp ['short', 'loc_67A3']
movsx ['edx,', '[ebp+var_404]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+64h],', 'edx']
movsx ['ecx,', '[ebp+var_402]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+68h],', 'ecx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_418]']
push ['eax']
lea ['ecx,', '[ebp+var_424]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_3B8]']
push ['eax']
mov ['ecx,', '[ebp+var_3B8]']
mov ['edx,', '[ecx+214h]']
mov ['eax,', '[edx+70h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', '[ebp+var_418]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+38h],', 'ecx']
mov ['eax,', '[ebp+var_3B8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+124h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6813']
mov ['edx,', '[ebp+var_3B8]']
movzx ['eax,', 'word', 'ptr', '[edx+14Ah]']
test ['eax,', 'eax']
jle ['short', 'loc_6813']
mov ['[ebp+var_4C9],', '1']
jmp ['short', 'loc_681A']
mov ['[ebp+var_4C9],', '0']
mov ['cl,', '[ebp+var_4C9]']
mov ['[ebp+var_40D],', 'cl']
movzx ['edx,', '[ebp+var_40D]']
test ['edx,', 'edx']
jz ['short', 'loc_6878']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_418]']
push ['eax']
lea ['ecx,', '[ebp+var_424]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_3B8]']
push ['eax']
mov ['ecx,', '[ebp+var_3B8]']
mov ['edx,', '[ecx+214h]']
mov ['eax,', '[edx+70h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', '[ebp+var_418]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+3Ch],', 'ecx']
jmp ['short', 'loc_68D3']
mov ['eax,', '[ebp+var_3B8]']
movzx ['ecx,', 'word', 'ptr', '[eax+16Ch]']
cmp ['ecx,', '0FFFFh']
jz ['short', 'loc_68B1']
mov ['edx,', '[ebp+var_3B8]']
movsx ['eax,', 'word', 'ptr', '[edx+1B2h]']
mov ['ecx,', '[ebp+var_3B8]']
movsx ['edx,', 'word', 'ptr', '[ecx+1B4h]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+3Ch],', 'eax']
jmp ['short', 'loc_68D3']
mov ['edx,', '[ebp+var_3B8]']
movsx ['eax,', 'word', 'ptr', '[edx+0DCh]']
mov ['ecx,', '[ebp+var_3B8]']
movsx ['edx,', 'word', 'ptr', '[ecx+0DEh]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+3Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_72BE']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '4000h']
jz ['short', 'loc_6902']
push ['offset', '$SG12265']
push ['0AC0h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_72BE']
mov ['eax,', '[ebp+var_3C0]']
cmp ['dword', 'ptr', '[eax+768h],', '0']
jz ['loc_6A56']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_3C0]']
add ['edx,', '0B6Ch']
push ['edx']
call ['_cff_fd_select_get']
add ['esp,', '8']
mov ['[ebp+var_431],', 'al']
movzx ['eax,', '[ebp+var_431]']
mov ['ecx,', '[ebp+var_3C0]']
cmp ['eax,', '[ecx+768h]']
jb ['short', 'loc_695E']
mov ['edx,', '[ebp+var_3C0]']
mov ['eax,', '[edx+768h]']
sub ['eax,', '1']
mov ['[ebp+var_431],', 'al']
mov ['ecx,', '[ebp+var_3C0]']
mov ['edx,', '[ecx+570h]']
mov ['[ebp+var_42C],', 'edx']
movzx ['eax,', '[ebp+var_431]']
mov ['ecx,', '[ebp+var_3C0]']
mov ['edx,', '[ecx+eax*4+76Ch]']
mov ['eax,', '[edx+44h]']
mov ['[ebp+var_430],', 'eax']
movzx ['ecx,', '[ebp+var_431]']
mov ['edx,', '[ebp+var_3C0]']
mov ['eax,', '[edx+ecx*4+76Ch]']
add ['eax,', '30h']
mov ['ecx,', '[eax]']
mov ['[ebp+var_3D4],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_3D0],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_3CC],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_3C8],', 'edx']
movzx ['eax,', '[ebp+var_431]']
mov ['ecx,', '[ebp+var_3C0]']
mov ['edx,', '[ecx+eax*4+76Ch]']
mov ['eax,', '[edx+48h]']
mov ['ecx,', '[edx+4Ch]']
mov ['[ebp+var_3E4],', 'eax']
mov ['[ebp+var_3E0],', 'ecx']
mov ['edx,', '[ebp+var_42C]']
cmp ['edx,', '[ebp+var_430]']
jz ['short', 'loc_6A54']
mov ['eax,', '[ebp+var_430]']
push ['eax']
mov ['ecx,', '[ebp+var_42C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0A4h]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0A4h],', 'eax']
mov ['edx,', '[ebp+var_430]']
push ['edx']
mov ['eax,', '[ebp+var_42C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A8h]']
push ['edx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0A8h],', 'eax']
mov ['[ebp+var_3BB],', '1']
jmp ['short', 'loc_6AA3']
mov ['edx,', '[ebp+var_3C0]']
add ['edx,', '55Ch']
mov ['eax,', '[edx]']
mov ['[ebp+var_3D4],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_3D0],', 'ecx']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_3CC],', 'eax']
mov ['ecx,', '[edx+0Ch]']
mov ['[ebp+var_3C8],', 'ecx']
mov ['edx,', '[ebp+var_3C0]']
mov ['eax,', '[edx+574h]']
mov ['ecx,', '[edx+578h]']
mov ['[ebp+var_3E4],', 'eax']
mov ['[ebp+var_3E0],', 'ecx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+6Eh],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+6Ch],', 'cx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '2']
jnz ['short', 'loc_6AC6']
mov ['[ebp+var_4CA],', '1']
jmp ['short', 'loc_6ACD']
mov ['[ebp+var_4CA],', '0']
mov ['cl,', '[ebp+var_4CA]']
mov ['[ebp+var_3B9],', 'cl']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '1']
jnz ['short', 'loc_6AEA']
mov ['[ebp+var_4CB],', '1']
jmp ['short', 'loc_6AF1']
mov ['[ebp+var_4CB],', '0']
mov ['al,', '[ebp+var_4CB]']
mov ['[ebp+var_3BA],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ebp+var_3B9]']
mov ['[ecx+0A0h],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_3BA]']
mov ['[eax+0A1h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+48h],', '6F75746Ch']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '10h']
and ['eax,', '0Fh']
push ['eax']
movzx ['ecx,', '[ebp+var_3B9]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_3B8]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cff_decoder_init']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '100h']
jz ['short', 'loc_6B66']
mov ['[ebp+var_BF],', '1']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '400h']
mov ['[ebp+var_36E],', 'cl']
lea ['edx,', '[ebp+var_448]']
push ['edx']
lea ['eax,', '[ebp+var_43C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_3B8]']
push ['edx']
call ['_cff_get_glyph_data']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6BA4']
jmp ['$Glyph_Build_Finished$79']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cff_decoder_prepare']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6BC9']
jmp ['$Glyph_Build_Finished$79']
mov ['eax,', '[ebp+var_448]']
push ['eax']
mov ['ecx,', '[ebp+var_43C]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_decoder_parse_charstrings']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFh']
cmp ['eax,', '0A4h']
jnz ['short', 'loc_6C35']
mov ['[ebp+var_3B9],', '0']
mov ['[ebp+var_3BB],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ebp+var_3B9]']
mov ['[ecx+0A0h],', 'dl']
mov ['eax,', '[ebp+var_448]']
push ['eax']
mov ['ecx,', '[ebp+var_43C]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_decoder_parse_charstrings']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_448]']
push ['eax']
lea ['ecx,', '[ebp+var_43C]']
push ['ecx']
mov ['edx,', '[ebp+var_3B8]']
push ['edx']
call ['_cff_free_glyph_data']
add ['esp,', '0Ch']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6C5D']
jmp ['$Glyph_Build_Finished$79']
mov ['eax,', '[ebp+var_3B8]']
mov ['ecx,', '[eax+80h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_6C8B']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+88h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8Ch],', '0']
jmp ['short', '$Glyph_Build_Finished$79']
mov ['ecx,', '[ebp+var_3C0]']
add ['ecx,', '498h']
mov ['[ebp+var_450],', 'ecx']
mov ['edx,', '[ebp+var_450]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', '$Glyph_Build_Finished$79']
mov ['eax,', '[ebp+var_450]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_450]']
mov ['eax,', '[edx+1Ch]']
mov ['edx,', '[ebp+arg_8]']
mov ['ecx,', '[ecx+edx*4]']
lea ['edx,', '[eax+ecx-1]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+88h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_448]']
mov ['[ecx+8Ch],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_6CF2']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cff_builder_done']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jnz ['loc_6DC4']
mov ['ecx,', '[ebp+var_3B8]']
mov ['edx,', '[ecx+80h]']
cmp ['dword', 'ptr', '[edx+30h],', '0']
jz ['loc_6DC4']
mov ['eax,', '[ebp+var_3B8]']
mov ['ecx,', '[eax+80h]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[edx]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_6DC4']
mov ['ecx,', '[ebp+var_390]']
mov ['[ebp+var_464],', 'ecx']
mov ['[ebp+var_460],', '0']
mov ['edx,', '[ebp+var_388]']
mov ['[ebp+var_45C],', 'edx']
mov ['eax,', '[ebp+var_384]']
mov ['[ebp+var_458],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_464]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_3B8]']
mov ['ecx,', '[eax+80h]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_3B8]']
mov ['edx,', '[ecx+80h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_464]']
mov ['[ebp+var_390],', 'eax']
mov ['ecx,', '[ebp+var_45C]']
mov ['[ebp+var_388],', 'ecx']
mov ['edx,', '[ebp+var_458]']
mov ['[ebp+var_384],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['loc_72BB']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '400h']
jz ['short', 'loc_6E52']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+9Ch]']
mov ['[ebp+var_46C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_390]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C8]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_46C]']
add ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_3D4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_3D0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_3CC]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_3C8]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_46C]']
mov ['edx,', '[ebp+var_3E4]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_3E0]']
mov ['[ecx+20h],', 'eax']
mov ['ecx,', '[ebp+var_46C]']
mov ['byte', 'ptr', '[ecx+8],', '1']
jmp ['loc_72BB']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
mov ['[ebp+var_488],', 'edx']
mov ['eax,', '[ebp+var_488]']
mov ['ecx,', '[ebp+var_C8]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C8]']
mov ['[edx+38h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+9Ch]']
mov ['byte', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_3B8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+124h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6EB1']
mov ['edx,', '[ebp+var_3B8]']
movzx ['eax,', 'word', 'ptr', '[edx+14Ah]']
test ['eax,', 'eax']
jle ['short', 'loc_6EB1']
mov ['[ebp+var_4CC],', '1']
jmp ['short', 'loc_6EB8']
mov ['[ebp+var_4CC],', '0']
mov ['cl,', '[ebp+var_4CC]']
mov ['[ebp+var_499],', 'cl']
movzx ['edx,', '[ebp+var_499]']
test ['edx,', 'edx']
jz ['short', 'loc_6F3B']
xor ['eax,', 'eax']
mov ['[ebp+var_4A4],', 'ax']
xor ['ecx,', 'ecx']
mov ['[ebp+var_4B0],', 'cx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_4B0]']
push ['edx']
lea ['eax,', '[ebp+var_4A4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_3B8]']
push ['edx']
mov ['eax,', '[ebp+var_3B8]']
mov ['ecx,', '[eax+214h]']
mov ['edx,', '[ecx+70h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_4A4]']
mov ['ecx,', '[ebp+var_488]']
mov ['[ecx+18h],', 'eax']
movzx ['edx,', '[ebp+var_4B0]']
mov ['eax,', '[ebp+var_488]']
mov ['[eax+1Ch],', 'edx']
jmp ['short', 'loc_6F9C']
mov ['ecx,', '[ebp+var_3B8]']
movzx ['edx,', 'word', 'ptr', '[ecx+16Ch]']
cmp ['edx,', '0FFFFh']
jz ['short', 'loc_6F77']
mov ['eax,', '[ebp+var_3B8]']
movsx ['ecx,', 'word', 'ptr', '[eax+1B2h]']
mov ['edx,', '[ebp+var_3B8]']
movsx ['eax,', 'word', 'ptr', '[edx+1B4h]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_488]']
mov ['[edx+1Ch],', 'ecx']
jmp ['short', 'loc_6F9C']
mov ['eax,', '[ebp+var_3B8]']
movsx ['ecx,', 'word', 'ptr', '[eax+0DCh]']
mov ['edx,', '[ebp+var_3B8]']
movsx ['eax,', 'word', 'ptr', '[edx+0DEh]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_488]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_488]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+3Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+48h],', '6F75746Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+7Ch],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_6FE3']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+0Eh]']
cmp ['eax,', '18h']
jge ['short', 'loc_6FE3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+7Ch]']
or ['edx,', '100h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+7Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+7Ch]']
or ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+7Ch],', 'edx']
cmp ['[ebp+var_3D4],', '(offset', 'loc_FFFB+5)']
jnz ['short', 'loc_701C']
cmp ['[ebp+var_3C8],', '(offset', 'loc_FFFB+5)']
jnz ['short', 'loc_701C']
cmp ['[ebp+var_3D0],', '0']
jnz ['short', 'loc_701C']
cmp ['[ebp+var_3CC],', '0']
jz ['short', 'loc_7032']
lea ['ecx,', '[ebp+var_3D4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6Ch']
push ['edx']
call ['_FT_Outline_Transform']
add ['esp,', '8']
cmp ['[ebp+var_3E4],', '0']
jnz ['short', 'loc_7044']
cmp ['[ebp+var_3E0],', '0']
jz ['short', 'loc_7061']
mov ['eax,', '[ebp+var_3E0]']
push ['eax']
mov ['ecx,', '[ebp+var_3E4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6Ch']
push ['edx']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_488]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_494],', 'ecx']
mov ['[ebp+var_490],', '0']
lea ['edx,', '[ebp+var_3D4]']
push ['edx']
lea ['eax,', '[ebp+var_494]']
push ['eax']
call ['_FT_Vector_Transform']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_494]']
add ['ecx,', '[ebp+var_3E4]']
mov ['edx,', '[ebp+var_488]']
mov ['[edx+10h],', 'ecx']
mov ['[ebp+var_494],', '0']
mov ['eax,', '[ebp+var_488]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_490],', 'ecx']
lea ['edx,', '[ebp+var_3D4]']
push ['edx']
lea ['eax,', '[ebp+var_494]']
push ['eax']
call ['_FT_Vector_Transform']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_490]']
add ['ecx,', '[ebp+var_3E0]']
mov ['edx,', '[ebp+var_488]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '1']
jz ['short', 'loc_7100']
movzx ['ecx,', '[ebp+var_3BB]']
test ['ecx,', 'ecx']
jz ['loc_720E']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6Ch']
mov ['[ebp+var_4BC],', 'edx']
mov ['eax,', '[ebp+var_4BC]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4C0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0A4h]']
mov ['[ebp+var_4C4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A8h]']
mov ['[ebp+var_4C8],', 'edx']
movzx ['eax,', '[ebp+var_3B9]']
test ['eax,', 'eax']
jz ['short', 'loc_714D']
cmp ['[ebp+var_36C],', '0']
jnz ['short', 'loc_71CA']
mov ['ecx,', '[ebp+var_4BC]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['[ebp+var_4B8],', 'edx']
jmp ['short', 'loc_717D']
mov ['eax,', '[ebp+var_4B8]']
sub ['eax,', '1']
mov ['[ebp+var_4B8],', 'eax']
mov ['ecx,', '[ebp+var_4C0]']
add ['ecx,', '8']
mov ['[ebp+var_4C0],', 'ecx']
cmp ['[ebp+var_4B8],', '0']
jle ['short', 'loc_71CA']
mov ['edx,', '[ebp+var_4C4]']
push ['edx']
mov ['eax,', '[ebp+var_4C0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4C0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4C8]']
push ['eax']
mov ['ecx,', '[ebp+var_4C0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4C0]']
mov ['[ecx+4],', 'eax']
jmp ['short', 'loc_715F']
mov ['edx,', '[ebp+var_4C4]']
push ['edx']
mov ['eax,', '[ebp+var_488]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_488]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4C8]']
push ['eax']
mov ['ecx,', '[ebp+var_488]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_488]']
mov ['[ecx+1Ch],', 'eax']
lea ['edx,', '[ebp+var_480]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6Ch']
push ['eax']
call ['_FT_Outline_Get_CBox']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_478]']
sub ['ecx,', '[ebp+var_480]']
mov ['edx,', '[ebp+var_488]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_474]']
sub ['eax,', '[ebp+var_47C]']
mov ['ecx,', '[ebp+var_488]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_488]']
mov ['eax,', '[ebp+var_480]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_488]']
mov ['edx,', '[ebp+var_474]']
mov ['[ecx+0Ch],', 'edx']
movzx ['eax,', '[ebp+var_499]']
test ['eax,', 'eax']
jz ['short', 'loc_729A']
mov ['ecx,', '[ebp+var_488]']
mov ['eax,', '[ecx+10h]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+var_488]']
mov ['ecx,', '[edx+8]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_488]']
mov ['[edx+14h],', 'ecx']
jmp ['short', 'loc_72BB']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10h']
jz ['short', 'loc_72BB']
mov ['ecx,', '[ebp+var_488]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_488]']
push ['eax']
call ['_ft_synthesize_vertical_metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN78']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN77']
dd ['offset', '$LN64']
dd ['0FFFFFC2Ch,', '10h']
dd ['offset', '$LN65']
dd ['0FFFFFC1Ch,', '8']
dd ['offset', '$LN66']
dd ['0FFFFFBF8h,', '10h']
dd ['offset', '$LN67']
dd ['0FFFFFBE8h,', '2']
dd ['offset', '$LN68']
dd ['0FFFFFBDCh,', '2']
dd ['offset', '$LN69']
dd ['0FFFFFBC4h,', '4']
dd ['offset', '$LN70']
dd ['0FFFFFBB8h,', '4']
dd ['offset', '$LN71']
dd ['0FFFFFB9Ch,', '10h']
dd ['offset', '$LN72']
dd ['0FFFFFB80h,', '10h']
dd ['offset', '$LN73']
dd ['0FFFFFB6Ch,', '8']
dd ['offset', '$LN74']
dd ['0FFFFFB5Ch,', '2']
dd ['offset', '$LN75']
dd ['0FFFFFB50h,', '2']
dd ['offset', '$LN76']
db ['0Eh', 'dup(0CCh)']
endp
_cff_get_standard_encoding proc	near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '100h']
jnb ['short', 'loc_7440']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:_cff_standard_encoding[eax*2]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_7447']
mov ['[ebp+var_4],', '0']
mov ['ax,', 'word', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_cff_index_get_string proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+520h]']
jnb ['short', 'loc_7489']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+524h]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_7490']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cff_index_get_sid_string proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_4],', '0FFFFh']
jnz ['short', 'loc_74AD']
xor ['eax,', 'eax']
jmp ['short', 'loc_74FB']
cmp ['[ebp+arg_4],', '186h']
jbe ['short', 'loc_74CD']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '187h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cff_index_get_string']
add ['esp,', '8']
jmp ['short', 'loc_74FB']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0B8Ch],', '0']
jnz ['short', 'loc_74DD']
xor ['eax,', 'eax']
jmp ['short', 'loc_74FB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B8Ch]']
mov ['eax,', '[edx+14h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_cff_index_access_element proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['loc_7715']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['loc_7715']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['loc_75F1']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
imul ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[edx+eax+3]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_759E']
jmp ['$Exit$30']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cff_index_read_offset']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_75BC']
jmp ['$Exit$30']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_75EF']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cff_index_read_offset']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_75EF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jb ['short', 'loc_75C2']
jmp ['short', 'loc_762F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_762F']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_762F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+8]']
jb ['short', 'loc_7606']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
cmp ['[ebp+var_18],', 'ecx']
ja ['short', 'loc_7651']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+10h],', 'eax']
jbe ['short', 'loc_7684']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax+10h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['offset', '$SG10456']
call ['_FT_Message']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_7701']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_7701']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_76BA']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[edx+eax-1]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_76FF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx-1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_76FD']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_76FF']
jmp ['short', '$Exit$30']
jmp ['short', 'loc_7713']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', '$Exit$30']
push ['offset', '$SG10467']
push ['230h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN28']
dd ['offset', '$LN27']
db ['0Eh', 'dup(0CCh)']
endp
_cff_index_forget_element proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_77A8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cff_index_get_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+Dst]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+Dst],', '0']
lea ['ecx,', '[ebp+Size]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_index_access_element']
add ['esp,', '10h']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_7810']
jmp ['short', '$Exit$10']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_784D']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+Size]']
mov ['byte', 'ptr', '[edx],', '0']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_index_forget_element']
add ['esp,', '8']
mov ['eax,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN8']
dd ['offset', '$LN5_1']
dd ['0FFFFFFE4h,', '4']
dd ['offset', '$LN6_1']
dd ['0FFFFFFD8h,', '4']
dd ['offset', '$LN7_1']
db ['0Bh', 'dup(0CCh)']
endp
_cff_charset_cid_to_gindex proc	near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
ja ['short', 'loc_78F9']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cff_font_load	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '78h']
push ['edi']
lea ['edi,', '[ebp+var_78]']
mov ['ecx,', '1Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
push ['0BA4h']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
push ['20h']
push ['0']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '52Ch']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
push ['offset', '?cff_header_fields@?1??cff_font_load@@9@9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_799D']
jmp ['$Exit$60']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+10h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_79C1']
mov ['edx,', '[ebp+Dst]']
movzx ['eax,', 'byte', 'ptr', '[edx+12h]']
cmp ['eax,', '4']
jl ['short', 'loc_79C1']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'byte', 'ptr', '[ecx+13h]']
cmp ['edx,', '4']
jle ['short', 'loc_7A02']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_79DF']
push ['offset', '$SG10966']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_79C1']
push ['offset', '$SG10967']
push ['5BFh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$60']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+12h]']
sub ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7A27']
jmp ['$Exit$60']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '14h']
push ['ecx']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['loc_7ACA']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '4B8h']
push ['eax']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_7ACA']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_7ACA']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '54h']
push ['ecx']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_7ACA']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '528h']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '524h']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_cff_index_get_pointers']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7ACF']
jmp ['$Exit$60']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_34]']
mov ['[edx+520h],', 'eax']
movzx ['ecx,', '[ebp+arg_10]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7B32']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_44]']
cmp ['ecx,', '[eax+1Ch]']
jl ['short', 'loc_7B24']
mov ['edx,', '[ebp+var_44]']
push ['edx']
push ['offset', '$SG10975']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG10976']
push ['5E1h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$60']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+8],', 'edx']
jmp ['short', 'loc_7B6E']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+1Ch],', '1']
jbe ['short', 'loc_7B6E']
push ['offset', '$SG10979']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10980']
push ['5F1h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$60']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_7B79']
jmp ['$Exit$60']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_7B97']
push ['offset', '$SG10986']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_7B79']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '4B8h']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '52Ch']
push ['eax']
call ['_cff_subfont_load']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7BD4']
jmp ['$Exit$60']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+70h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7BF8']
jmp ['$Exit$60']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '498h']
push ['edx']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7C1E']
jmp ['$Exit$60']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFh']
jz ['loc_7DDE']
mov ['[ebp+var_70],', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+0A4h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7C5F']
jmp ['$Exit$60']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_68]']
push ['edx']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7C7F']
jmp ['$Exit$60']
cmp ['[ebp+var_60],', '100h']
jbe ['short', 'loc_7CAF']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_7CA6']
push ['offset', '$SG11004']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_7C88']
jmp ['$Fail_CID$61']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_60]']
mov ['[eax+768h],', 'ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_60]']
push ['eax']
push ['0']
push ['23Ch']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7CE6']
jmp ['$Fail_CID$61']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_7CF8']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '1']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_60]']
jnb ['short', 'loc_7D19']
imul ['ecx,', '[ebp+var_74],', '23Ch']
add ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+edx*4+76Ch],', 'ecx']
jmp ['short', 'loc_7CEF']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_7D2B']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ebp+var_60]']
jnb ['short', 'loc_7D96']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+eax*4+76Ch]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_7D65']
mov ['edx,', '[ebp+var_74]']
push ['edx']
push ['offset', '$SG11019']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_7D43']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
lea ['edx,', '[ebp+var_68]']
push ['edx']
mov ['eax,', '[ebp+var_70]']
push ['eax']
call ['_cff_subfont_load']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7D94']
jmp ['short', '$Fail_CID$61']
jmp ['short', 'loc_7D22']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+0A8h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+4A0h]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0B6Ch']
push ['eax']
call ['_CFF_Load_FD_Select']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_cff_index_done']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7DDC']
jmp ['$Exit$60']
jmp ['short', 'loc_7DEB']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+768h],', '0']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+70h],', '0']
jnz ['short', 'loc_7E20']
push ['offset', '$SG11024']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG11025']
push ['64Ah']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$60']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+4A0h]']
mov ['[ecx+0Ch],', 'eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '51Ch']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '54h']
push ['edx']
call ['_cff_index_get_pointers']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7E58']
jmp ['$Exit$60']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jbe ['loc_7F0D']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+84h],', '0FFFFh']
jz ['short', 'loc_7E82']
movzx ['edx,', '[ebp+arg_10]']
test ['edx,', 'edx']
jz ['short', 'loc_7E82']
mov ['[ebp+var_76],', '1']
jmp ['short', 'loc_7E86']
mov ['[ebp+var_76],', '0']
mov ['al,', '[ebp+var_76]']
mov ['[ebp+var_75],', 'al']
movzx ['ecx,', '[ebp+var_75]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+68h]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '480h']
push ['edx']
call ['_cff_charset_load']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7EC4']
jmp ['short', '$Exit$60']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFh']
jnz ['short', 'loc_7F0D']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '480h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '74h']
push ['edx']
call ['_cff_encoding_load']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7F0D']
jmp ['short', '$Exit$60']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_cff_index_get_name']
add ['esp,', '8']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+518h],', 'eax']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_cff_index_done']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN59']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '78h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN58']
dd ['offset', '$LN55']
dd ['0FFFFFFC4h,', '20h']
dd ['offset', '$LN56']
dd ['0FFFFFF98h,', '20h']
dd ['offset', '$LN57']
db ['0Ch', 'dup(0CCh)']
endp
_cff_font_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '54h']
push ['edx']
call ['_cff_index_done']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4B8h']
push ['eax']
call ['_cff_index_done']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '14h']
push ['ecx']
call ['_cff_index_done']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '498h']
push ['edx']
call ['_cff_index_done']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+768h],', '0']
jbe ['short', 'loc_808C']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_8029']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+768h]']
jnb ['short', 'loc_8053']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4+76Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_subfont_done']
add ['esp,', '8']
jmp ['short', 'loc_8020']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+76Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx+76Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_8053']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '74h']
push ['edx']
call ['_cff_encoding_done']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '480h']
push ['edx']
call ['_cff_charset_done']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '52Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_subfont_done']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0B6Ch']
push ['ecx']
call ['_CFF_Done_FD_Select']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0B90h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+0B90h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_80E0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+518h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+518h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_8107']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+51Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+51Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_812E']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+524h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+524h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_8155']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+528h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+528h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_817C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0BA0h],', '0']
jz ['short', 'loc_81F7']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B9Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0BA0h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0B9Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+0B9Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_81D0']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cff_fd_select_get proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_1C],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_1C],', '0']
jz ['short', 'loc_8249']
cmp ['byte', 'ptr', '[ebp+var_1C],', '3']
jz ['short', 'loc_825D']
jmp ['loc_8357']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[eax+ecx]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
jmp ['loc_8357']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+14h]']
jnb ['short', 'loc_827C']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+18h]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
jmp ['loc_8357']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_82D2']
jmp ['loc_8357']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_8345']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['[eax+18h],', 'cl']
jmp ['short', 'loc_8357']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jb ['loc_82C5']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_parser_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['1A0h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '10h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+194h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+198h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+19Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx],', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_cff_parser_run	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+194h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['$Exit$98']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '1Bh']
jb ['loc_851E']
cmp ['[ebp+var_10],', '1Fh']
jz ['loc_851E']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+194h]']
sub ['edx,', 'eax']
sar ['edx,', '2']
cmp ['edx,', '60h']
jl ['short', 'loc_845F']
jmp ['$Stack_Overflow$99']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+194h]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+194h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+194h],', 'ecx']
cmp ['[ebp+var_10],', '1Eh']
jnz ['short', 'loc_84E5']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jb ['short', 'loc_849E']
jmp ['$Exit$98']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
sar ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0Fh']
jnz ['short', 'loc_84BB']
jmp ['short', 'loc_84E3']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
and ['eax,', '0Fh']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0Fh']
jnz ['short', 'loc_84D8']
jmp ['short', 'loc_84E3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_8491']
jmp ['short', 'loc_8519']
cmp ['[ebp+var_10],', '1Ch']
jnz ['short', 'loc_84F6']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_8519']
cmp ['[ebp+var_10],', '1Dh']
jnz ['short', 'loc_8507']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_8519']
cmp ['[ebp+var_10],', '0F6h']
jbe ['short', 'loc_8519']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_8951']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+194h]']
sub ['ecx,', 'edx']
sar ['ecx,', '2']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+194h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_10],', '0Ch']
jnz ['short', 'loc_857D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jb ['short', 'loc_8565']
jmp ['$Syntax_Error$100']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', '100h']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '[eax+198h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_1C],', 'offset', '_cff_field_handlers']
jmp ['short', 'loc_859E']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '20h']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['$Found$101']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_14]']
jnz ['loc_893D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+19Ch]']
mov ['edx,', '[ebp+var_1C]']
add ['ecx,', '[edx+8]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_85F0']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
push ['offset', '$SG10117']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_85CB']
mov ['edx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[edx],', '6']
jz ['short', 'loc_8607']
cmp ['[ebp+var_18],', '1']
jnb ['short', 'loc_8607']
jmp ['$Stack_Underflow$102']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '5']
ja ['loc_8918']
mov ['eax,', '[ebp+var_30]']
jmp ['ds:$LN96[eax*4]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
push ['ecx']
call ['_cff_parse_num']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
jmp ['short', '$Store_Number$103']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
push ['edx']
call ['_cff_parse_fixed']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
jmp ['short', '$Store_Number$103']
push ['3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
push ['eax']
call ['_cff_parse_fixed_scaled']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['dl,', '[ecx+0Ch]']
mov ['[ebp+var_34],', 'dl']
cmp ['[ebp+var_34],', '1']
jz ['short', 'loc_8685']
cmp ['[ebp+var_34],', '2']
jz ['short', 'loc_868F']
cmp ['[ebp+var_34],', '4']
jz ['short', 'loc_869B']
jmp ['short', 'loc_86A5']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_86AD']
mov ['edx,', '[ebp+var_24]']
mov ['ax,', 'word', 'ptr', '[ebp+var_20]']
mov ['[edx],', 'ax']
jmp ['short', 'loc_86AD']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_86AD']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '4']
ja ['loc_87DE']
mov ['edx,', '[ebp+var_38]']
jmp ['ds:$LN97[edx*4]']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_870A']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_86F2']
mov ['[ebp+var_3C],', 'offset', '$SG10152']
jmp ['short', 'loc_86F9']
mov ['[ebp+var_3C],', 'offset', '$SG10153']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
push ['offset', '$SG10154']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', '$LN50']
jmp ['loc_87DE']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_8735']
mov ['eax,', '[ebp+var_20]']
push ['eax']
push ['offset', '$SG10160']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', '$LN45']
jmp ['loc_87DE']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_8760']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['offset', '$SG10166']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', '$LN40']
jmp ['short', 'loc_87DE']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_8799']
cvtsi2sd ['xmm0,', '[ebp+var_20]']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+54h+var_54],', 'xmm0']
push ['offset', '$SG10173']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', '$LN35']
jmp ['short', 'loc_87DE']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_87DA']
cvtsi2sd ['xmm0,', '[ebp+var_20]']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
divsd ['xmm0,', 'ds:__real@408f400000000000']
sub ['esp,', '8']
movsd ['[esp+54h+var_54],', 'xmm0']
push ['offset', '$SG10180']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', '$LN30']
jmp ['loc_893B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+19Ch]']
mov ['edx,', '[ebp+var_1C]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_28],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+14h]']
jbe ['short', 'loc_8812']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_8830']
push ['offset', '$SG10191']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_8812']
mov ['edx,', '[ebp+var_28]']
mov ['al,', 'byte', 'ptr', '[ebp+var_18]']
mov ['[edx],', 'al']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_18],', '0']
jbe ['loc_88F4']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_cff_parse_num']
add ['esp,', '4']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['dl,', '[ecx+0Ch]']
mov ['[ebp+var_44],', 'dl']
cmp ['[ebp+var_44],', '1']
jz ['short', 'loc_888B']
cmp ['[ebp+var_44],', '2']
jz ['short', 'loc_8895']
cmp ['[ebp+var_44],', '4']
jz ['short', 'loc_88A1']
jmp ['short', 'loc_88AB']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_88B3']
mov ['edx,', '[ebp+var_24]']
mov ['ax,', 'word', 'ptr', '[ebp+var_20]']
mov ['[edx],', 'ax']
jmp ['short', 'loc_88B3']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_88B3']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_88D5']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['offset', '$SG10215']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_88B3']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
add ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_8843']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_8912']
push ['offset', '$SG10220']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_88F4']
jmp ['short', 'loc_893B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_893B']
jmp ['short', '$Exit$98']
jmp ['short', '$Found$101']
jmp ['loc_8595']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+194h],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_8418']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_89B8']
push ['offset', '$SG10224']
push ['488h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$98']
push ['offset', '$SG10225']
push ['48Ch']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$98']
push ['offset', '$SG10226']
push ['490h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$98']
pop ['edi']
pop ['esi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN60']
dd ['offset', '$LN59_0']
dd ['offset', '$LN61']
dd ['offset', '$LN61']
dd ['offset', '$LN24']
dd ['offset', '$LN35']
dd ['offset', '$LN30']
dd ['offset', '$LN45']
dd ['offset', '$LN50']
db ['8', 'dup(0CCh)']
endp
_cff_get_kerning proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+214h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_8A61']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+54h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cff_glyph_load	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_8AC5']
push ['offset', '$SG9119']
push ['0A5h']
push ['25h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '25h']
jmp ['loc_8B53']
mov ['edx,', '4']
imul ['eax,', 'edx,', '2Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_8AE7']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG9124']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_8AC5']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_8AFA']
mov ['eax,', '[ebp+arg_C]']
or ['eax,', '3']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '1']
jz ['short', 'loc_8B09']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8B35']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_8B35']
push ['offset', '$SG9130']
push ['0B5h']
push ['23h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '23h']
jmp ['short', 'loc_8B53']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_cff_slot_load']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_cff_get_advances proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
or ['edx,', '100h']
mov ['[ebp+arg_C],', 'edx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_8BB1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_8C0C']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_cff_glyph_load']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_8BE2']
jmp ['short', 'loc_8C0C']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '10h']
jz ['short', 'loc_8BF5']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_8BFE']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_8BA8']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cff_get_glyph_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0B8Ch],', '0']
jnz ['short', 'loc_8C84']
push ['offset', '$SG9167']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9168']
push ['0F6h']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
mov ['[ebp+var_10],', 'eax']
jmp ['short', '$Exit$5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+488h]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[ecx+edx*2]']
mov ['word', 'ptr', '[ebp+var_C],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_8CC6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ft_mem_strcpyn']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_get_name_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+Str2],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '480h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+60h]']
mov ['[ebp+var_1C],', 'ecx']
push ['offset', '$SG9194']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_8D28']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_8D5C']
xor ['eax,', 'eax']
jmp ['loc_8DF5']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_8D6E']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_8DF3']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_18]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_14],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
cmp ['eax,', '186h']
jle ['short', 'loc_8DB1']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
sub ['ecx,', '187h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_cff_index_get_string']
add ['esp,', '8']
mov ['[ebp+Str2],', 'eax']
jmp ['short', 'loc_8DCD']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+14h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jnz ['short', 'loc_8DD5']
jmp ['short', 'loc_8D65']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_8DEE']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_8DF5']
jmp ['loc_8D65']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_cff_ps_has_glyph_names	proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '200h']
jle ['short', 'loc_8E2E']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_8E35']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_ps_get_font_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_4],', '0']
jz ['loc_8F81']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0B90h],', '0']
jnz ['loc_8F81']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '52Ch']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_1C],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8EC6']
jmp ['$Fail$9']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+18h]']
mov ['[eax+18h],', 'dl']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[ecx+20h]']
mov ['[eax+1Ah],', 'dx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[ecx+24h]']
mov ['[eax+1Ch],', 'dx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+0B90h],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', '$Fail$9']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '8']
mov ['esi,', '[edx+0B90h]']
mov ['edi,', '[ebp+arg_4]']
rep ['movsd']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN7_2']
dd ['offset', '$LN6_2']
align ['4']
endp
_cff_get_ps_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+518h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cff_get_cmap_info proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', 'offset', '_cff_cmap_encoding_class_rec']
jz ['short', 'loc_90CA']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', 'offset', '_cff_cmap_unicode_class_rec']
jz ['short', 'loc_90CA']
push ['offset', '$SG9265']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
push ['offset', '$SG9268']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_90CA']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_90CA']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_get_ros	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['$Fail$16']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '52Ch']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFh']
jnz ['short', 'loc_914E']
push ['offset', '$SG9288']
push ['1D3h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['$Fail$16']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_918D']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0B94h],', '0']
jnz ['short', 'loc_917F']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+84h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0B94h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0B94h]']
mov ['[eax],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_91CC']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0B98h],', '0']
jnz ['short', 'loc_91BE']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+88h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0B98h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0B98h]']
mov ['[edx],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', '$Fail$16']
mov ['edx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[edx+8Ch],', '80000000h']
jl ['short', 'loc_91F0']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+8Ch],', '7FFFFFFFh']
jle ['short', 'loc_921C']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_9218']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8Ch]']
push ['ecx']
push ['offset', '$SG9303']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_91F0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+8Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_get_is_cid	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '0']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9296']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '52Ch']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[ecx+84h],', '0FFFFh']
jz ['short', 'loc_9296']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cff_get_cid_from_glyph_index proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', '$Fail$7']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '52Ch']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFh']
jnz ['short', 'loc_9313']
push ['offset', '$SG9332']
push ['225h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$7']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+0Ch]']
jbe ['short', 'loc_933A']
push ['offset', '$SG9335']
push ['22Bh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+488h]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', '$Fail$7']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_property_set proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
push ['offset', '$SG9353']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_9556']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_10],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_18],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_28],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_1C],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_94A1']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_94A1']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_18]']
jg ['short', 'loc_94A1']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_20]']
jg ['short', 'loc_94A1']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_28]']
jg ['short', 'loc_94A1']
cmp ['[ebp+var_14],', '1F4h']
jg ['short', 'loc_94A1']
cmp ['[ebp+var_1C],', '1F4h']
jg ['short', 'loc_94A1']
cmp ['[ebp+var_24],', '1F4h']
jg ['short', 'loc_94A1']
cmp ['[ebp+var_2C],', '1F4h']
jle ['short', 'loc_94BD']
push ['offset', '$SG9366']
push ['261h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_95FC']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+eax+24h],', 'edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+eax+24h],', 'edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+eax+24h],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+ecx+24h],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+ecx+24h],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+edx+24h],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+eax+24h],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+ecx+24h],', 'eax']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_95FC']
jmp ['short', 'loc_95BF']
push ['offset', '$SG9369']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_9594']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[eax],', '1']
jz ['short', 'loc_9582']
mov ['[ebp+var_4],', '7']
jmp ['short', 'loc_958D']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx]']
mov ['[ecx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_95FC']
jmp ['short', 'loc_95BF']
push ['offset', '$SG9376']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_95BF']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_34]']
mov ['dl,', '[ecx]']
mov ['[eax+20h],', 'dl']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_95FC']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '2Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_95E1']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['offset', '$SG9383']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_95BF']
push ['offset', '$SG9384']
push ['288h']
push ['0Ch']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Ch']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_property_get proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
push ['offset', '$SG9397']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_974D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '24h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['edx,', '[esi+edx]']
mov ['[eax+ecx],', 'edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['eax,', '[esi+eax]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['ecx,', '[esi+ecx]']
mov ['[eax+edx],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['eax,', '[esi+eax]']
mov ['[ecx+edx],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['ecx,', '[esi+ecx]']
mov ['[eax+edx],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['ecx,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['eax,', '[esi+eax]']
mov ['[ecx+edx],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '6']
mov ['eax,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['edx,', '[esi+edx]']
mov ['[eax+ecx],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '7']
mov ['edx,', '[ebp+var_10]']
mov ['esi,', '[ebp+var_C]']
mov ['ecx,', '[esi+ecx]']
mov ['[edx+eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_97EE']
jmp ['short', 'loc_97B1']
push ['offset', '$SG9403']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_9780']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_97EE']
jmp ['short', 'loc_97B1']
push ['offset', '$SG9409']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_97B1']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+20h]']
mov ['byte', 'ptr', '[ebp+var_1C+3],', 'cl']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_1C+3]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_97EE']
mov ['edx,', '4']
imul ['eax,', 'edx,', '2Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_97D3']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
push ['offset', '$SG9417']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_97B1']
push ['offset', '$SG9418']
push ['2BDh']
push ['0Ch']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Ch']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cff_get_interface proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '_cff_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9843']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_98A7']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_984D']
xor ['eax,', 'eax']
jmp ['short', 'loc_98A7']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_9860']
xor ['eax,', 'eax']
jmp ['short', 'loc_98A7']
push ['offset', '$SG9448']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_989D']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_98A4']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_10]']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cff_parse_integer proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_8],', '1Ch']
jnz ['short', 'loc_993A']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_990C']
jmp ['$Bad$19']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movsx ['ecx,', 'dx']
mov ['[ebp+var_C],', 'ecx']
jmp ['$Exit$20']
cmp ['[ebp+var_8],', '1Dh']
jnz ['short', 'loc_99A2']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
cmp ['edx,', '[ebp+arg_4]']
jbe ['short', 'loc_9950']
jmp ['$Bad$19']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$20']
cmp ['[ebp+var_8],', '0F7h']
jge ['short', 'loc_99B8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '8Bh']
mov ['[ebp+var_C],', 'eax']
jmp ['short', '$Exit$20']
cmp ['[ebp+var_8],', '0FBh']
jge ['short', 'loc_99F2']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_99CE']
jmp ['short', '$Bad$19']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '0F7h']
shl ['edx,', '8']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
lea ['edx,', '[edx+ecx+6Ch]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', '$Exit$20']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
cmp ['eax,', '[ebp+arg_4]']
jbe ['short', 'loc_99FF']
jmp ['short', '$Bad$19']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '0FBh']
neg ['ecx']
shl ['ecx,', '8']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
sub ['ecx,', 'eax']
sub ['ecx,', '6Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_9A54']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_9A4E']
push ['offset', '$SG9498']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_9A30']
jmp ['short', '$Exit$20']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cff_parse_real	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_24],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9AAC']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_C],', '4']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9AF9']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_9AF9']
jmp ['$Bad$75']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
mov ['ecx,', '[ebp+var_C]']
sar ['edx,', 'cl']
and ['edx,', '0Fh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '4']
sub ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_8],', '0Eh']
jnz ['short', 'loc_9B2D']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_9B6A']
cmp ['[ebp+var_8],', '9']
jbe ['short', 'loc_9B37']
jmp ['short', 'loc_9B6F']
jmp ['short', 'loc_9B6A']
cmp ['[ebp+var_14],', '0CCCCCCCh']
jl ['short', 'loc_9B4B']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_9B6A']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_9B57']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9B6A']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
imul ['eax,', '[ebp+var_14],', '0Ah']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_9ADD']
cmp ['[ebp+var_8],', '0Ah']
jnz ['loc_9C00']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9B95']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_4]']
jb ['short', 'loc_9B95']
jmp ['$Bad$75']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_C]']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '4']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_8],', '0Ah']
jb ['short', 'loc_9BC2']
jmp ['short', 'loc_9C00']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_9BD9']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9BD9']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_9BFB']
cmp ['[ebp+var_14],', '0CCCCCCCh']
jge ['short', 'loc_9BFB']
cmp ['[ebp+var_30],', '9']
jge ['short', 'loc_9BFB']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
imul ['ecx,', '[ebp+var_14],', '0Ah']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_9B79']
cmp ['[ebp+var_8],', '0Ch']
jnz ['short', 'loc_9C14']
mov ['[ebp+var_20],', '1']
mov ['[ebp+var_8],', '0Bh']
cmp ['[ebp+var_8],', '0Bh']
jnz ['short', 'loc_9C8F']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9C36']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_9C36']
jmp ['$Bad$75']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
mov ['ecx,', '[ebp+var_C]']
sar ['edx,', 'cl']
and ['edx,', '0Fh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '4']
sub ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_8],', '0Ah']
jb ['short', 'loc_9C63']
jmp ['short', 'loc_9C81']
cmp ['[ebp+var_18],', '3E8h']
jle ['short', 'loc_9C75']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_9C7F']
imul ['ecx,', '[ebp+var_18],', '0Ah']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_9C1A']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_9C8F']
mov ['edx,', '[ebp+var_18]']
neg ['edx']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9C9A']
jmp ['$Exit$76']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_9CB2']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_9CAD']
jmp ['$Underflow$77']
jmp ['short', 'loc_9CB2']
jmp ['$Overflow$78']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_28]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['loc_9E0A']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_30],', '5']
jg ['loc_9DA4']
cmp ['[ebp+var_14],', '7FFFh']
jle ['short', 'loc_9D11']
push ['0Ah']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_9DA2']
cmp ['[ebp+var_18],', '0']
jle ['short', 'loc_9D88']
cmp ['[ebp+var_18],', '5']
jge ['short', 'loc_9D25']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_9D2C']
mov ['[ebp+var_3C],', '5']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
sub ['edx,', '[ebp+var_30]']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_9D7D']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_34]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_14]']
imul ['edx,', 'ds:_power_tens[ecx*4]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '7FFFh']
jle ['short', 'loc_9D7B']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_9D86']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_30]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_9D91']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_9E05']
mov ['ecx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_14]']
cdq
idiv ['ds:off_3690[ecx*4]']
cmp ['eax,', '7FFFh']
jle ['short', 'loc_9DE0']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', 'ds:off_3694[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_9E05']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', 'ds:off_3690[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '5']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['$Exit$76']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_30],', 'ecx']
cmp ['[ebp+var_2C],', '5']
jle ['short', 'loc_9E27']
jmp ['$Overflow$78']
cmp ['[ebp+var_2C],', '0FFFFFFFBh']
jge ['short', 'loc_9E32']
jmp ['$Underflow$77']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_9E54']
mov ['ecx,', '[ebp+var_2C]']
neg ['ecx']
mov ['eax,', '[ebp+var_14]']
cdq
idiv ['ds:_power_tens[ecx*4]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '0Ah']
jnz ['short', 'loc_9E71']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '0']
jle ['short', 'loc_9EAA']
mov ['ecx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_14]']
cdq
idiv ['ds:_power_tens[ecx*4]']
cmp ['eax,', '7FFFh']
jle ['short', 'loc_9E8E']
jmp ['short', '$Exit$76']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', 'ds:_power_tens[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['short', '$Exit$76']
mov ['edx,', '[ebp+var_30]']
neg ['edx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', 'ds:_power_tens[edx*4]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '7FFFh']
jle ['short', 'loc_9EC8']
jmp ['short', '$Overflow$78']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '10h']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_9EDF']
mov ['edx,', '[ebp+var_10]']
neg ['edx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_9F6B']
mov ['[ebp+var_10],', '7FFFFFFFh']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_9F0C']
push ['offset', '$SG9597']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_9EEE']
jmp ['short', '$Exit$76']
mov ['[ebp+var_10],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_9F37']
push ['offset', '$SG9602']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_9F19']
jmp ['short', '$Exit$76']
mov ['[ebp+var_10],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_9F62']
push ['offset', '$SG9607']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_9F44']
jmp ['$Exit$76']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_parse_num	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '1Eh']
jnz ['short', 'loc_9FC6']
push ['0']
push ['0']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx]']
push ['eax']
call ['_cff_parse_real']
add ['esp,', '10h']
sar ['eax,', '10h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_9FEF']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx]']
push ['eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
call ['_cff_parse_integer']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_do_fixed	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '1Eh']
jnz ['short', 'loc_A05A']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx]']
push ['eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
call ['_cff_parse_real']
add ['esp,', '10h']
jmp ['loc_A0ED']
jmp ['loc_A0ED']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax]']
push ['edx']
call ['_cff_parse_integer']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_A09A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', 'ds:_power_tens[eax*4]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '7FFFh']
jle ['short', 'loc_A0AE']
mov ['[ebp+var_4],', '7FFFFFFFh']
jmp ['short', '$Overflow$13']
jmp ['short', 'loc_A0C0']
cmp ['[ebp+var_4],', '0FFFF8001h']
jge ['short', 'loc_A0C0']
mov ['[ebp+var_4],', '80000001h']
jmp ['short', '$Overflow$13']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '10h']
jmp ['short', 'loc_A0ED']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_A0E6']
push ['offset', '$SG9634']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', '$Overflow$13']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_parse_fixed proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_do_fixed']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cff_parse_fixed_scaled	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_do_fixed']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cff_parse_fixed_dynamic proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_A16D']
push ['offset', '$SG9655']
push ['1D4h']
push ['offset', '$SG9656']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_A150']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '1Eh']
jnz ['short', 'loc_A1B4']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax]']
push ['edx']
call ['_cff_parse_real']
add ['esp,', '10h']
jmp ['loc_A285']
jmp ['loc_A285']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx]']
push ['eax']
call ['_cff_parse_integer']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '7FFFh']
jle ['loc_A276']
mov ['[ebp+var_8],', '5']
jmp ['short', 'loc_A1FC']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0Ah']
jge ['short', 'loc_A215']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', 'ds:_power_tens[edx*4]']
jge ['short', 'loc_A213']
jmp ['short', 'loc_A215']
jmp ['short', 'loc_A1F3']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
cdq
idiv ['ds:off_3690[ecx*4]']
cmp ['eax,', '7FFFh']
jle ['short', 'loc_A250']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', 'ds:off_3694[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
jmp ['short', 'loc_A285']
jmp ['short', 'loc_A274']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '5']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:off_3690[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
jmp ['short', 'loc_A285']
jmp ['short', 'loc_A285']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '10h']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cff_parse_font_matrix proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+19Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '30h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '48h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_18],', '0A1h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '28h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+194h],', 'eax']
jb ['$Exit$17']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+40h],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
call ['_cff_parse_fixed_dynamic']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_20]']
neg ['edx']
mov ['[ebp+var_20],', 'edx']
js ['short', 'loc_A340']
cmp ['[ebp+var_20],', '9']
jle ['short', 'loc_A3AE']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_A362']
mov ['edx,', '[ebp+var_20]']
push ['edx']
push ['offset', '$SG9690']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_A340']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '(offset', 'loc_FFFB+5)']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+0Ch],', '(offset', 'loc_FFFB+5)']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', '1']
jmp ['$Exit$17']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_cff_parse_fixed_scaled']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['_cff_parse_fixed_scaled']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_cff_parse_fixed_scaled']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_cff_parse_fixed_scaled']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_cff_parse_fixed_scaled']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', 'ds:_power_tens[eax*4]']
mov ['[edx],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['loc_A5D6']
mov ['ecx,', '[ebp+var_C]']
cvtsi2sd ['xmm0,', 'dword', 'ptr', '[ecx+4]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_3C],', 'eax']
cvtsi2sd ['xmm1,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_3C]']
shr ['ecx,', '1Fh']
addsd ['xmm1,', 'ds:__xmm@41f00000000000000000000000000000[ecx*8]']
divsd ['xmm0,', 'xmm1']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+5Ch+var_5C],', 'xmm0']
mov ['edx,', '[ebp+var_C]']
cvtsi2sd ['xmm0,', 'dword', 'ptr', '[edx]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_40],', 'ecx']
cvtsi2sd ['xmm1,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_40]']
shr ['edx,', '1Fh']
addsd ['xmm1,', 'ds:__xmm@41f00000000000000000000000000000[edx*8]']
divsd ['xmm0,', 'xmm1']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+64h+var_64],', 'xmm0']
mov ['eax,', '[ebp+var_8]']
cvtsi2sd ['xmm0,', 'dword', 'ptr', '[eax+0Ch]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_44],', 'edx']
cvtsi2sd ['xmm1,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '1Fh']
addsd ['xmm1,', 'ds:__xmm@41f00000000000000000000000000000[eax*8]']
divsd ['xmm0,', 'xmm1']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+6Ch+var_6C],', 'xmm0']
mov ['ecx,', '[ebp+var_8]']
cvtsi2sd ['xmm0,', 'dword', 'ptr', '[ecx+8]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_48],', 'eax']
cvtsi2sd ['xmm1,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_48]']
shr ['ecx,', '1Fh']
addsd ['xmm1,', 'ds:__xmm@41f00000000000000000000000000000[ecx*8]']
divsd ['xmm0,', 'xmm1']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+74h+var_74],', 'xmm0']
mov ['edx,', '[ebp+var_8]']
cvtsi2sd ['xmm0,', 'dword', 'ptr', '[edx+4]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4C],', 'ecx']
cvtsi2sd ['xmm1,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_4C]']
shr ['edx,', '1Fh']
addsd ['xmm1,', 'ds:__xmm@41f00000000000000000000000000000[edx*8]']
divsd ['xmm0,', 'xmm1']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+7Ch+var_7C],', 'xmm0']
mov ['eax,', '[ebp+var_8]']
cvtsi2sd ['xmm0,', 'dword', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_50],', 'edx']
cvtsi2sd ['xmm1,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_50]']
shr ['eax,', '1Fh']
addsd ['xmm1,', 'ds:__xmm@41f00000000000000000000000000000[eax*8]']
divsd ['xmm0,', 'xmm1']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+84h+var_84],', 'xmm0']
push ['offset', '$SG9702']
call ['_FT_Message']
add ['esp,', '34h']
xor ['ecx,', 'ecx']
jnz ['loc_A466']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15']
dd ['offset', '$LN14_0']
db ['0Ch', 'dup(0CCh)']
endp
_cff_parse_font_bbox proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+19Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '54h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0A1h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+194h],', 'ecx']
jb ['loc_A792']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_cff_parse_fixed']
add ['esp,', '4']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_cff_parse_fixed']
add ['esp,', '4']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_cff_parse_fixed']
add ['esp,', '4']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_cff_parse_fixed']
add ['esp,', '4']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_A78E']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+0Ch]']
cdq
and ['edx,', '0FFFFh']
add ['eax,', 'edx']
sar ['eax,', '10h']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
cdq
and ['edx,', '0FFFFh']
add ['eax,', 'edx']
sar ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0FFFFh']
add ['eax,', 'edx']
sar ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx]']
cdq
and ['edx,', '0FFFFh']
add ['eax,', 'edx']
sar ['eax,', '10h']
push ['eax']
push ['offset', '$SG9717']
call ['_FT_Message']
add ['esp,', '14h']
xor ['edx,', 'edx']
jnz ['short', 'loc_A725']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cff_parse_private_dict	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+19Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_C],', '0A1h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+194h],', 'eax']
jb ['short', 'loc_A85A']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_cff_parse_num']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+78h],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_cff_parse_num']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+74h],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_A84F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+74h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+78h]']
push ['ecx']
push ['offset', '$SG9731']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_A823']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_parse_cid_ros proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+19Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_C],', '0A1h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+194h],', 'eax']
jb ['loc_A9C2']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_cff_parse_num']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+84h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_cff_parse_num']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+88h],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1Eh']
jnz ['short', 'loc_A92E']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_A92A']
push ['offset', '$SG9748']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_A90C']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_cff_parse_num']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8Ch],', '0']
jge ['short', 'loc_A97B']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_A977']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8Ch]']
push ['eax']
push ['offset', '$SG9754']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_A94F']
mov ['[ebp+var_C],', '0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '32h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_A9BE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+88h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+84h]']
push ['eax']
push ['offset', '$SG9759']
call ['_FT_Message']
add ['esp,', '10h']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_A982']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cff_index_read_offset proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_AA5F']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_AA3E']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ch]']
cmp ['[ebp+var_1C],', 'edx']
jge ['short', 'loc_AA5F']
mov ['eax,', '[ebp+var_18]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[ebp+ecx+var_10]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_AA35']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_1']
dd ['offset', '$LN7_3']
endp
_cff_index_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
push ['20h']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+4],', 'eax']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['word', 'ptr', '[ebp+var_14],', 'ax']
cmp ['[ebp+var_8],', '0']
jnz ['$Exit$21']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
test ['ecx,', 'ecx']
jle ['$Exit$21']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_18+3],', 'al']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AB47']
jmp ['$Exit$21']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_18+3]']
cmp ['ecx,', '1']
jl ['short', 'loc_AB59']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_18+3]']
cmp ['edx,', '4']
jle ['short', 'loc_AB78']
push ['offset', '$SG10275']
push ['0FDh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$21']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['al,', 'byte', 'ptr', '[ebp+var_18+3]']
mov ['[edx+0Ch],', 'al']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
add ['ecx,', '1']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_18+3]']
imul ['ecx,', 'edx']
mov ['[ebp+var_1C],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_1C]']
lea ['eax,', '[ecx+edx+3]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+10h],', 'eax']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_18+3]']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', 'edx']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_ABD3']
jmp ['$Exit$21']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cff_index_read_offset']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_ABEE']
jmp ['short', '$Exit$21']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_AC10']
push ['offset', '$SG10281']
push ['110h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$21']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+14h],', 'eax']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_AC4E']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '1Ch']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AC4C']
jmp ['short', '$Exit$21']
jmp ['short', '$Exit$21']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AC88']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_AC67']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN18']
db ['6', 'dup(0CCh)']
endp
_cff_index_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_AD46']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jz ['short', 'loc_AD15']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_AD15']
push ['20h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_cff_index_load_offsets	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jbe ['$Exit$31']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jnz ['$Exit$31']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+0Ch]']
mov ['[ebp+var_15],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
movzx ['ecx,', '[ebp+var_15]']
imul ['eax,', 'ecx']
mov ['[ebp+var_1C],', 'eax']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
push ['ecx']
push ['0']
push ['4']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_AE24']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_AE24']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AE29']
jmp ['$Exit$31']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_24],', 'edx']
mov ['al,', '[ebp+var_15]']
mov ['[ebp+var_2C],', 'al']
cmp ['[ebp+var_2C],', '1']
jz ['short', 'loc_AE65']
cmp ['[ebp+var_2C],', '2']
jz ['short', 'loc_AEA5']
cmp ['[ebp+var_2C],', '3']
jz ['loc_AEFC']
jmp ['loc_AF60']
jmp ['short', 'loc_AE79']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '4']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_AEA0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+ecx],', 'edx']
jmp ['short', 'loc_AE67']
jmp ['loc_AFD6']
jmp ['short', 'loc_AEB9']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '2']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '4']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_AEF7']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
mov ['eax,', '4']
imul ['edx,', 'eax,', '0']
movzx ['eax,', 'cx']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+edx],', 'eax']
jmp ['short', 'loc_AEA7']
jmp ['loc_AFD6']
jmp ['short', 'loc_AF10']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '3']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '4']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_24]']
jnb ['short', 'loc_AF5E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '10h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+ecx],', 'edx']
jmp ['short', 'loc_AEFE']
jmp ['short', 'loc_AFD6']
jmp ['short', 'loc_AF74']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '4']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '4']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_AFD6']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
or ['ecx,', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+eax],', 'ecx']
jmp ['short', 'loc_AF62']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B009']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_AFE8']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN29_0']
dd ['offset', '$LN28_0']
db ['6', 'dup(0CCh)']
endp
_cff_index_get_pointers	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['short', 'loc_B0AF']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cff_index_load_offsets']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B0AF']
jmp ['$Exit$27']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jbe ['$Exit$27']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
push ['eax']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['$Exit$27']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_B119']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
push ['ecx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['$Exit$27']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jz ['short', 'loc_B16F']
mov ['edx,', '4']
imul ['eax,', 'edx,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_B164']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['offset', '$SG10409']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_B142']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_B18B']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '[ebp+var_20]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+edx],', 'eax']
jmp ['short', 'loc_B19F']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_20]']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+ecx],', 'edx']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_B1B1']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[edx+8]']
ja ['loc_B293']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[edx+eax*4]']
sub ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', 'loc_B1E2']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_B1F6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ecx+14h]']
jbe ['short', 'loc_B1F6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_B20D']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_B288']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_2C]']
add ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+eax*4],', 'edx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_20]']
jz ['short', 'loc_B288']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_1C]']
mov ['esi,', '[ebp+var_14]']
mov ['eax,', '[ecx+eax*4]']
sub ['eax,', '[esi+edx*4-4]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4-4]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+ecx*4]']
mov ['byte', 'ptr', '[eax+ecx],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+edx*4],', 'ecx']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'edx']
jmp ['loc_B1A8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', '$Exit$27']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN25']
dd ['offset', '$LN24_0']
align ['4']
endp
_CFF_Done_FD_Select proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_B30B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_CFF_Load_FD_Select proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_B38B']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'al']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B390']
jmp ['$Exit$20_0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['byte', 'ptr', '[ebp+var_18],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_18],', '0']
jz ['short', 'loc_B3B9']
cmp ['byte', 'ptr', '[ebp+var_18],', '3']
jz ['short', 'loc_B3C4']
jmp ['loc_B45D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'eax']
jmp ['short', '$Load_Data$21']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
movzx ['eax,', 'ax']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B3E5']
jmp ['$Exit$20_0']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_B429']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_B409']
push ['offset', '$SG10549']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_B3EB']
push ['offset', '$SG10550']
push ['2B7h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$20_0']
imul ['ecx,', '[ebp+var_14],', '3']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B45B']
jmp ['short', '$Exit$20_0']
jmp ['short', '$Exit$20_0']
push ['offset', '$SG10555']
push ['2C3h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN18_0']
dd ['offset', '$LN17']
db ['6', 'dup(0CCh)']
endp
_cff_charset_compute_cids proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_18],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jbe ['short', 'loc_B4F4']
jmp ['$Exit$15']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_B506']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_B536']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
movzx ['edx,', 'word', 'ptr', '[ebp+var_18]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_B534']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_10]']
mov ['ax,', '[ecx+edx*2]']
mov ['word', 'ptr', '[ebp+var_18],', 'ax']
jmp ['short', 'loc_B4FD']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
movzx ['edx,', 'word', 'ptr', '[ebp+var_18]']
add ['edx,', '1']
push ['edx']
push ['0']
push ['2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B562']
jmp ['short', '$Exit$15']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_B576']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_B599']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['dx,', 'word', 'ptr', '[ebp+var_14]']
mov ['[eax+ecx*2],', 'dx']
jmp ['short', 'loc_B56D']
movzx ['eax,', 'word', 'ptr', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN13_1']
dd ['offset', '$LN12_1']
align ['4']
endp
_cff_charset_free_cids proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_B5EF']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+10h],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cff_charset_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cff_charset_free_cids']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_B650']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cff_charset_load proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_10],', '2']
jbe ['loc_B922']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_B712']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['eax,', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B717']
jmp ['$Exit$52']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B742']
jmp ['$Exit$52']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
xor ['edx,', 'edx']
mov ['[ecx+eax],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_B779']
cmp ['[ebp+var_24],', '0']
jbe ['loc_B8F1']
cmp ['[ebp+var_24],', '2']
jbe ['short', 'loc_B7E7']
jmp ['loc_B8F1']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_B7E2']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[edx+edx-2]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B7A1']
jmp ['$Exit$52']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_B7B3']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_B7D6']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+8]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+edx*2],', 'ax']
jmp ['short', 'loc_B7AA']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
jmp ['loc_B91D']
mov ['[ebp+var_18],', '1']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['loc_B8EF']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['[ebp+var_14],', 'ax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B819']
jmp ['$Exit$52']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '2']
jnz ['short', 'loc_B844']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
movzx ['ecx,', 'ax']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B842']
jmp ['$Exit$52']
jmp ['short', 'loc_B865']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B865']
jmp ['$Exit$52']
movzx ['edx,', '[ebp+var_14]']
mov ['eax,', '0FFFFh']
sub ['eax,', '[ebp+var_1C]']
cmp ['edx,', 'eax']
jbe ['short', 'loc_B8A0']
movzx ['ecx,', '[ebp+var_14]']
mov ['edx,', '0FFFFh']
sub ['edx,', 'ecx']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['offset', '$SG10701']
call ['_FT_Message']
add ['esp,', '0Ch']
movzx ['ecx,', '[ebp+var_14]']
mov ['edx,', '0FFFFh']
sub ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_B8C7']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['dx,', '[ebp+var_14]']
add ['dx,', '1']
mov ['[ebp+var_14],', 'dx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_B8EA']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_1C]']
ja ['short', 'loc_B8EA']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_18]']
mov ['dx,', '[ebp+var_14]']
mov ['[eax+ecx*2],', 'dx']
jmp ['short', 'loc_B8A9']
jmp ['loc_B7EE']
jmp ['short', 'loc_B91D']
push ['offset', '$SG10707']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10708']
push ['3BAh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$52']
jmp ['loc_BADD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_B950']
cmp ['[ebp+var_28],', '1']
jz ['loc_B9CF']
cmp ['[ebp+var_28],', '2']
jz ['loc_BA4E']
jmp ['loc_BAC1']
cmp ['[ebp+arg_4],', '0E5h']
jbe ['short', 'loc_B985']
push ['offset', '$SG10717']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10718']
push ['3D1h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$52']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
push ['2']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_B9B0']
jmp ['$Exit$52']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '1']
push ['edx']
push ['offset', '_cff_isoadobe_charset']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_BADD']
cmp ['[ebp+arg_4],', '0A6h']
jbe ['short', 'loc_BA04']
push ['offset', '$SG10724']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10725']
push ['3E3h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$52']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['2']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_BA2F']
jmp ['$Exit$52']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
push ['eax']
push ['offset', '_cff_expert_charset']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_BADD']
cmp ['[ebp+arg_4],', '57h']
jbe ['short', 'loc_BA7D']
push ['offset', '$SG10731']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10732']
push ['3F5h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['short', '$Exit$52']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
push ['2']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_BAA5']
jmp ['short', '$Exit$52']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '1']
push ['edx']
push ['offset', '_cff_expertsubset_charset']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_BADD']
push ['offset', '$SG10737']
push ['403h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['short', '$Exit$52']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jz ['short', '$Exit$52']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cff_charset_compute_cids']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_BB61']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_BB02']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_BB23']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN50_0']
dd ['offset', '$LN49']
db ['0Eh', 'dup(0CCh)']
endp
_cff_encoding_done proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_encoding_load proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_BC22']
push ['offset', '$SG10772']
push ['436h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$58']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_BC34']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '100h']
jnb ['short', 'loc_BC5C']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*2+0Ch],', 'dx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*2+20Ch],', 'dx']
jmp ['short', 'loc_BC2B']
cmp ['[ebp+arg_14],', '1']
jbe ['loc_BFBD']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_BCC8']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['eax,', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_BCC8']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BCCD']
jmp ['$Exit$58']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
and ['eax,', '7Fh']
mov ['[ebp+var_3C],', 'eax']
jz ['short', 'loc_BCE9']
cmp ['[ebp+var_3C],', '1']
jz ['loc_BD8D']
jmp ['loc_BEA3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BD13']
jmp ['$Exit$58']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_BD2E']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_10]']
ja ['short', 'loc_BD7C']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_BD7A']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '[ebp+var_14]']
mov ['[edx+ecx*2+20Ch],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+var_14]']
mov ['dx,', '[edx+esi*2]']
mov ['[ecx+eax*2+0Ch],', 'dx']
jmp ['short', 'loc_BD25']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
jmp ['loc_BECF']
mov ['[ebp+var_28],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_BDB9']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jnb ['loc_BE8B']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BDE6']
jmp ['$Exit$58']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BE07']
jmp ['$Exit$58']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_BE24']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_24]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_BE3E']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_28]']
cmp ['[ebp+var_2C],', 'ecx']
jnb ['short', 'loc_BE86']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_BE84']
cmp ['[ebp+var_1C],', '100h']
jnb ['short', 'loc_BE84']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_2C]']
mov ['[ecx+eax*2+20Ch],', 'dx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', '[ebp+var_2C]']
mov ['cx,', '[ecx+esi*2]']
mov ['[eax+edx*2+0Ch],', 'cx']
jmp ['short', 'loc_BE2C']
jmp ['loc_BDA7']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+8],', '100h']
jbe ['short', 'loc_BEA1']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '100h']
jmp ['short', 'loc_BECF']
push ['offset', '$SG10817']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10818']
push ['4AEh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$58']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
and ['edx,', '80h']
jz ['loc_BFB8']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['edx,', 'al']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BF01']
jmp ['$Exit$58']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_BF13']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jnb ['loc_BFB8']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BF40']
jmp ['$Exit$58']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['[ebp+var_18],', 'ax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BF5F']
jmp ['$Exit$58']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[ebp+var_18]']
mov ['[edx+ecx*2+0Ch],', 'ax']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_BF80']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_BFB3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
movzx ['ecx,', '[ebp+var_18]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_BFB1']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', 'word', 'ptr', '[ebp+var_30]']
mov ['[eax+edx*2+20Ch],', 'cx']
jmp ['short', 'loc_BFB3']
jmp ['short', 'loc_BF77']
jmp ['loc_BF0A']
jmp ['$Exit$58']
mov ['edx,', '[ebp+arg_14]']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_BFD4']
cmp ['[ebp+var_40],', '1']
jz ['short', 'loc_BFEF']
jmp ['loc_C0CA']
push ['200h']
push ['offset', '_cff_standard_encoding']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', '$Populate$59']
push ['200h']
push ['offset', '_cff_expert_encoding']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cff_charset_compute_cids']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_C037']
jmp ['$Exit$58']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_C049']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '100h']
jnb ['short', 'loc_C0C8']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2+0Ch]']
mov ['[ebp+var_34],', 'ecx']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_C080']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cff_charset_cid_to_gindex']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_C0A6']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[edx+ecx*2+20Ch],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_C0C3']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2+20Ch],', 'ax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2+0Ch],', 'ax']
jmp ['loc_C040']
jmp ['short', '$Exit$58']
push ['offset', '$SG10855']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10856']
push ['50Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN57_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN56_0']
dd ['offset', '$LN55_0']
db ['0Ah', 'dup(0CCh)']
endp
_cff_subfont_load proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1CCh']
push ['edi']
lea ['edi,', '[ebp+var_1CC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_1B4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0B0h']
mov ['[ebp+var_1CC],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1000h']
lea ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_cff_parser_init']
add ['esp,', '10h']
push ['0B0h']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+20h],', '0FF9C0000h']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+24h],', '320000h']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+2Ch],', '2']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+30h],', '(offset', 'loc_FFFB+5)']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+3Ch],', '(offset', 'loc_FFFB+5)']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+9Ch],', '2210h']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFh']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+8],', '0FFFFh']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFh']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+10h],', '0FFFFh']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+14h],', '0FFFFh']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+80h],', '0FFFFh']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+84h],', '0FFFFh']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+88h],', '0FFFFh']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0ACh],', '0FFFFh']
lea ['ecx,', '[ebp+var_1C0]']
push ['ecx']
lea ['edx,', '[ebp+var_1B4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cff_index_access_element']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_C2F9']
mov ['edx,', '4']
imul ['eax,', 'edx,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_C2CF']
push ['offset', '$SG10883']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C2B1']
mov ['edx,', '[ebp+var_1B4]']
add ['edx,', '[ebp+var_1C0]']
push ['edx']
mov ['eax,', '[ebp+var_1B4]']
push ['eax']
lea ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_cff_parser_run']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
lea ['edx,', '[ebp+var_1B4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cff_index_forget_element']
add ['esp,', '8']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C317']
jmp ['$Exit$27_0']
mov ['ecx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[ecx+84h],', '0FFFFh']
jz ['short', 'loc_C32E']
jmp ['$Exit$27_0']
mov ['edx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[edx+74h],', '0']
jz ['loc_C480']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jz ['loc_C480']
push ['168h']
push ['0']
mov ['ecx,', '[ebp+var_1CC]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_1CC]']
mov ['dword', 'ptr', '[edx+0C8h],', '7']
mov ['eax,', '[ebp+var_1CC]']
mov ['dword', 'ptr', '[eax+0CCh],', '1']
mov ['ecx,', '[ebp+var_1CC]']
mov ['dword', 'ptr', '[ecx+14Ch],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_1CC]']
mov ['dword', 'ptr', '[edx+154h],', '0F5Ch']
mov ['eax,', '[ebp+var_1CC]']
mov ['dword', 'ptr', '[eax+0C4h],', '27A000h']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_1CC]']
push ['edx']
push ['2000h']
lea ['eax,', '[ebp+var_1A8]']
push ['eax']
call ['_cff_parser_init']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '[ecx+74h]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_C40E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+78h]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C413']
jmp ['$Exit$27_0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '30h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_C431']
push ['offset', '$SG10898']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C413']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
lea ['edx,', '[ebp+var_1A8]']
push ['edx']
call ['_cff_parser_run']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C46C']
jmp ['$Exit$27_0']
mov ['ecx,', '[ebp+var_1CC]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
and ['edx,', '0FFFFFFFEh']
mov ['eax,', '[ebp+var_1CC]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_1CC]']
cmp ['dword', 'ptr', '[ecx+15Ch],', '0']
jz ['short', '$Exit$27_0']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '[edx+74h]']
mov ['ecx,', '[ebp+var_1CC]']
add ['eax,', '[ecx+15Ch]']
push ['eax']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C4BF']
jmp ['short', '$Exit$27_0']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '218h']
push ['ecx']
call ['_cff_index_init']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C4E2']
jmp ['short', '$Exit$27_0']
push ['0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '238h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '218h']
push ['eax']
call ['_cff_index_get_pointers']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '1CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN25_0']
dd ['offset', '$LN22']
dd ['0FFFFFE4Ch,', '4']
dd ['offset', '$LN23']
dd ['0FFFFFE40h,', '4']
dd ['offset', '$LN24_1']
align ['4']
endp
_cff_subfont_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C5AD']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '218h']
push ['eax']
call ['_cff_index_done']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+238h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+238h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_C586']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_FT_MulFix_i386	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
imul ['edx']
mov ['ecx,', 'edx']
sar ['ecx,', '1Fh']
add ['ecx,', '8000h']
add ['eax,', 'ecx']
adc ['edx,', '0']
shr ['eax,', '10h']
shl ['edx,', '10h']
add ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_size_get_globals_funcs proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0B88h]']
mov ['[ebp+var_C],', 'edx']
push ['offset', '$SG11139']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_C683']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_C683']
mov ['ecx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_C683']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_C68A']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cff_make_private_dict proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0B0h']
mov ['[ebp+var_4],', 'eax']
push ['0C4h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax]']
mov ['[edx+8],', 'cl']
mov ['edx,', '[ebp+Dst]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C6FD']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_C71D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['dx,', '[esi+edx*4+4]']
mov ['[ecx+eax*2+0Ch],', 'dx']
jmp ['short', 'loc_C6F4']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ecx+1]']
mov ['[eax+9],', 'dl']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C745']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_C765']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['ax,', '[esi+eax*4+3Ch]']
mov ['[edx+ecx*2+28h],', 'ax']
jmp ['short', 'loc_C73C']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[edx+2]']
mov ['[ecx+0Ah],', 'al']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C78D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_C7AD']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['cx,', '[esi+ecx*4+64h]']
mov ['[eax+edx*2+3Ch],', 'cx']
jmp ['short', 'loc_C784']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax+3]']
mov ['[edx+0Bh],', 'cl']
mov ['edx,', '[ebp+Dst]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Bh]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C7D5']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_C7F8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['dx,', '[esi+edx*4+9Ch]']
mov ['[ecx+eax*2+58h],', 'dx']
jmp ['short', 'loc_C7CC']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C4h]']
mov ['[eax+6Ch],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C8h]']
mov ['[eax+70h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0CCh]']
mov ['[eax+74h],', 'edx']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_4]']
mov ['ax,', '[eax+0D0h]']
mov ['[edx+ecx+78h],', 'ax']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['cx,', '[ecx+0D4h]']
mov ['[eax+edx+7Ah],', 'cx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax+0D8h]']
mov ['[edx+7Ch],', 'cl']
mov ['edx,', '[ebp+Dst]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C884']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_C8AA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['dx,', '[esi+edx*4+0DCh]']
mov ['[ecx+eax*2+80h],', 'dx']
jmp ['short', 'loc_C87B']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ecx+0D9h]']
mov ['[eax+7Dh],', 'dl']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7Dh]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C8D5']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_C8FB']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['ax,', '[esi+eax*4+110h]']
mov ['[edx+ecx*2+9Ah],', 'ax']
jmp ['short', 'loc_C8CC']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[edx+144h]']
mov ['[ecx+7Eh],', 'al']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+150h]']
mov ['[ecx+0B8h],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14Ch]']
mov ['[ecx+4],', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_strcpy	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
db ['0Eh', 'dup(0CCh)']
endp
_remove_subset_prefix proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_C+3],', '1']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['ecx,', 'ecx']
jz ['loc_CAA1']
cmp ['[ebp+var_8],', '7']
jl ['loc_CA98']
mov ['edx,', '1']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+Str]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '2Bh']
jnz ['short', 'loc_CA98']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_CA30']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '6']
jge ['short', 'loc_CA58']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '41h']
jl ['short', 'loc_CA52']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Ah']
jle ['short', 'loc_CA56']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
jmp ['short', 'loc_CA27']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['edx,', 'edx']
jz ['short', 'loc_CA96']
mov ['[ebp+var_4],', '7']
jmp ['short', 'loc_CA72']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jge ['short', 'loc_CA8D']
mov ['edx,', '[ebp+Str]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax]']
mov ['[edx-7],', 'cl']
jmp ['short', 'loc_CA69']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '7']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_CA9C']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
jmp ['loc_C9F4']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_remove_style	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jle ['loc_CBAA']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_CB13']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_8]']
jg ['short', 'loc_CB3D']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_CB3B']
jmp ['short', 'loc_CB3D']
jmp ['short', 'loc_CB0A']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_8]']
jle ['short', 'loc_CBAA']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_CB9A']
mov ['edx,', '[ebp+Str]']
add ['edx,', '[ebp+var_C]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Dh']
jz ['short', 'loc_CB8F']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jz ['short', 'loc_CB8F']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Fh']
jz ['short', 'loc_CB8F']
mov ['edx,', '[ebp+Str]']
add ['edx,', '[ebp+var_C]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Bh']
jnz ['short', 'loc_CB9A']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_CB51']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_CBAA']
mov ['edx,', '[ebp+Str]']
add ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx+1],', '0']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cf2_setError	proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_CBD5']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_CBD5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_arrstack_init proc	near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CBF9']
push ['offset', '$SG12487']
push ['3Dh']
push ['offset', '$SG12488']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CBDF']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+10h],', '0Ah']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_arrstack_finalize proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CC89']
push ['offset', '$SG12499']
push ['51h']
push ['offset', '$SG12500']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_CC6F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CCAB']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cf2_arrstack_setCount proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CCFC']
push ['offset', '$SG12546']
push ['8Fh']
push ['offset', '$SG12547']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CCDF']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+0Ch]']
jbe ['short', 'loc_CD24']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_arrstack_setNumElements']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_CD24']
jmp ['short', 'loc_CD2D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+14h],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cf2_arrstack_clear proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CD5C']
push ['offset', '$SG12558']
push ['0A0h']
push ['offset', '$SG12559']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CD3F']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cf2_arrstack_size proc	near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CD9C']
push ['offset', '$SG12568']
push ['0AAh']
push ['offset', '$SG12569']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CD7F']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+14h]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_cf2_arrstack_getBuffer	proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CDDC']
push ['offset', '$SG12578']
push ['0B3h']
push ['offset', '$SG12579']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CDBF']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+1Ch]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_cf2_arrstack_getPointer proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CE24']
push ['offset', '$SG12591']
push ['0C1h']
push ['offset', '$SG12592']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CE07']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+14h]']
jb ['short', 'loc_CE66']
push ['offset', '$SG12594']
push ['0C6h']
push ['82h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '82h']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_cf2_setError']
add ['esp,', '8']
mov ['[ebp+arg_4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+1Ch]']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cf2_arrstack_push proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+Dst],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CEBD']
push ['offset', '$SG12606']
push ['0D7h']
push ['offset', '$SG12607']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CEA0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+14h]']
cmp ['eax,', '[edx+0Ch]']
jnz ['short', 'loc_CEF1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+10h]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_arrstack_setNumElements']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_CEF1']
jmp ['short', 'loc_CF54']
cmp ['[ebp+Src],', '0']
jnz ['short', 'loc_CF0E']
push ['offset', '$SG12615']
push ['0E4h']
push ['offset', '$SG12616']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_CEF1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+14h]']
imul ['eax,', '[edx+8]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+14h],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_buf_readByte proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_CFA7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
jmp ['short', 'loc_CFCC']
jmp ['short', 'loc_CFCC']
push ['offset', '$SG15335']
push ['62h']
push ['55h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '55h']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_cf2_setError']
add ['esp,', '8']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cf2_buf_isEnd	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
jb ['short', 'loc_CFFB']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_CFFF']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cf2_decoder_parse_charstrings proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '80h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_80]']
mov ['ecx,', '20h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D046']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jnz ['short', 'loc_D05D']
push ['offset', '$SG13466']
push ['132h']
push ['offset', '$SG13467']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D037']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['eax,', '[edx+0B9Ch]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
cmp ['dword', 'ptr', '[edx+0B9Ch],', '0']
jnz ['loc_D111']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['dword', 'ptr', '[ecx+0BA0h],', 'offset', '_cf2_free_instance']
lea ['edx,', '[ebp+var_10]']
push ['edx']
push ['1F8h']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['[edx+0B9Ch],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D0DE']
push ['offset', '$SG13475']
push ['141h']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
jmp ['loc_D37D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ecx+0B9Ch]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '64h']
push ['edx']
call ['_cf2_outline_init']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+84h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+80h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+60h]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_D164']
push ['offset', '$SG13491']
push ['162h']
push ['offset', '$SG13492']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_D142']
push ['10h']
push ['0']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_30],', 'ecx']
push ['18h']
push ['0']
lea ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_79]']
push ['eax']
lea ['ecx,', '[ebp+var_6D]']
push ['ecx']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
lea ['eax,', '[ebp+Buf1]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_getScaleAndHintFlag']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[edx+8],', '0']
movzx ['eax,', '[ebp+var_6D]']
test ['eax,', 'eax']
jz ['short', 'loc_D1DA']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
or ['edx,', '1']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+8],', 'edx']
movzx ['ecx,', '[ebp+var_79]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D1FC']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx+20h]']
test ['eax,', 'eax']
jnz ['short', 'loc_D1FC']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
or ['edx,', '2']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['edx,', '[esi+edx+24h]']
mov ['[eax+ecx+90h],', 'edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['eax,', '[esi+eax+24h]']
mov ['[edx+ecx+90h],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['ecx,', '[esi+ecx+24h]']
mov ['[eax+edx+90h],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['eax,', '[esi+eax+24h]']
mov ['[ecx+edx+90h],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['ecx,', '[esi+ecx+24h]']
mov ['[eax+edx+90h],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['ecx,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['eax,', '[esi+eax+24h]']
mov ['[ecx+edx+90h],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '6']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['edx,', '[esi+edx+24h]']
mov ['[eax+ecx+90h],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '7']
mov ['edx,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_20]']
mov ['ecx,', '[esi+ecx+24h]']
mov ['[edx+eax+90h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_getUnitsPerEm']
add ['esp,', '4']
movzx ['eax,', 'ax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+58h],', 'eax']
movzx ['edx,', '[ebp+var_79]']
test ['edx,', 'edx']
jz ['short', 'loc_D340']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
lea ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_cf2_checkTransform']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_D340']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_D37D']
lea ['eax,', '[ebp+var_64]']
push ['eax']
lea ['ecx,', '[ebp+Buf1]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_cf2_getGlyphOutline']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_D368']
mov ['eax,', '3']
jmp ['short', 'loc_D37D']
mov ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '64h']
push ['edx']
call ['_cf2_setGlyphWidth']
add ['esp,', '8']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '80h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN25_1']
dd ['offset', '$LN19_1']
dd ['0FFFFFFC8h,', '10h']
dd ['offset', '$LN20_0']
dd ['0FFFFFFA8h,', '18h']
dd ['offset', '$LN21']
dd ['0FFFFFF9Ch,', '4']
dd ['offset', '$LN22_0']
dd ['0FFFFFF93h,', '1']
dd ['offset', '$LN23_0']
db ['87h,', '0FFh']
dw ['0FFFFh']
dd ['1']
dd ['offset', '$LN24_2']
align ['4']
endp
_cf2_getSubfont	proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D441']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D458']
push ['offset', '$SG13507']
push ['19Ah']
push ['offset', '$SG13508']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D42F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_getPpemY	proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D49A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_D49A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
cmp ['dword', 'ptr', '[edx+58h],', '0']
jnz ['short', 'loc_D4B1']
push ['offset', '$SG13517']
push ['1A6h']
push ['offset', '$SG13518']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_D47F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+58h]']
movzx ['eax,', 'word', 'ptr', '[eax+0Eh]']
shl ['eax,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_getStdVW	proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D4F1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D508']
push ['offset', '$SG13529']
push ['1BCh']
push ['offset', '$SG13530']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D4DF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
mov ['eax,', '[eax+184h]']
shl ['eax,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_getStdHW	proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D541']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D558']
push ['offset', '$SG13541']
push ['1C6h']
push ['offset', '$SG13542']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D52F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
mov ['eax,', '[eax+180h]']
shl ['eax,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_getBlueMetrics proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D591']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D5A8']
push ['offset', '$SG13559']
push ['1D4h']
push ['offset', '$SG13560']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D57F']
push ['3E80000h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
mov ['ecx,', '[eax+174h]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3A0h]']
mov ['edx,', '[ecx+178h]']
shl ['edx,', '10h']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3A0h]']
mov ['eax,', '[edx+17Ch]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_cf2_getBlueValues proc	near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D621']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D638']
push ['offset', '$SG13579']
push ['1E7h']
push ['offset', '$SG13580']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D60F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0B0h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3A0h]']
add ['ecx,', '0B4h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_getOtherBlues proc	near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D691']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D6A8']
push ['offset', '$SG13594']
push ['1F4h']
push ['offset', '$SG13595']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D67F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0B1h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3A0h]']
add ['ecx,', '0ECh']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_getFamilyBlues proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D701']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D718']
push ['offset', '$SG13609']
push ['201h']
push ['offset', '$SG13610']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D6EF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0B2h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3A0h]']
add ['ecx,', '114h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_getFamilyOtherBlues proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D771']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D788']
push ['offset', '$SG13624']
push ['20Eh']
push ['offset', '$SG13625']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D75F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0B3h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3A0h]']
add ['ecx,', '14Ch']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_getLanguageGroup proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_D7E1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_D7F8']
push ['offset', '$SG13635']
push ['219h']
push ['offset', '$SG13636']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D7CF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
mov ['eax,', '[eax+200h]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_cf2_initGlobalRegionBuffer proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_D83C']
push ['offset', '$SG13648']
push ['226h']
push ['offset', '$SG13649']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_D81F']
push ['10h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[edx+384h]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+37Ch]']
jb ['short', 'loc_D874']
mov ['eax,', '1']
jmp ['short', 'loc_D8D4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38Ch],', '0']
jnz ['short', 'loc_D897']
push ['offset', '$SG13655']
push ['22Eh']
push ['offset', '$SG13656']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D874']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38Ch]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[eax+edx*4]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38Ch]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[edx+ecx*4+4]']
mov ['[eax+8],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cf2_getSeacComponent proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_D92C']
push ['offset', '$SG13672']
push ['245h']
push ['offset', '$SG13673']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_D90F']
push ['10h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
call ['_cff_lookup_glyph_by_stdcharcode']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_D975']
push ['offset', '$SG13675']
push ['24Bh']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
jmp ['short', 'loc_D9E7']
lea ['edx,', '[ebp+var_18]']
push ['edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cff_get_glyph_data']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_D99E']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_D9E7']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_D9C0']
push ['offset', '$SG13681']
push ['256h']
push ['offset', '$SG13682']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_D99E']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+4]']
mov ['[ecx+0Ch],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15_0']
dd ['offset', '$LN13_2']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN14_2']
db ['5', 'dup(0CCh)']
endp
_cf2_freeSeacComponent proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_DA5C']
push ['offset', '$SG13692']
push ['264h']
push ['offset', '$SG13693']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_DA3F']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cff_free_glyph_data']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_cf2_initLocalRegionBuffer proc	near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_DAAC']
push ['offset', '$SG13707']
push ['271h']
push ['offset', '$SG13708']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_DA8F']
push ['10h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[edx+380h]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+378h]']
jb ['short', 'loc_DAE4']
mov ['eax,', '1']
jmp ['short', 'loc_DB44']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+388h],', '0']
jnz ['short', 'loc_DB07']
push ['offset', '$SG13714']
push ['279h']
push ['offset', '$SG13715']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_DAE4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+388h]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[eax+edx*4]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+388h]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[edx+ecx*4+4]']
mov ['[eax+8],', 'edx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cf2_getDefaultWidthX proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_DB71']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_DB88']
push ['offset', '$SG13724']
push ['286h']
push ['offset', '$SG13725']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_DB5F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
mov ['eax,', '[eax+210h]']
shl ['eax,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_getNominalWidthX proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_DBC1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3A0h],', '0']
jnz ['short', 'loc_DBD8']
push ['offset', '$SG13736']
push ['290h']
push ['offset', '$SG13737']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_DBAF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3A0h]']
mov ['eax,', '[eax+214h]']
shl ['eax,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_outline_reset proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_DC2D']
push ['offset', '$SG13748']
push ['29Dh']
push ['offset', '$SG13749']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_DC10']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FT_GlyphLoader_Rewind']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cf2_outline_close proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_DC8D']
push ['offset', '$SG13758']
push ['2ABh']
push ['offset', '$SG13759']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_DC70']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cff_builder_close_contour']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FT_GlyphLoader_Add']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_builder_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+40h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+41h],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+64h]']
mov ['[eax],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['loc_DD88']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+9Ch]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '38h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_GlyphLoader_Rewind']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+44h],', '0']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_DD88']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_DD88']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[eax+48h],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+9Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+24h]']
mov ['[edx+44h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cff_builder_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_DE1E']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '6Ch']
mov ['ecx,', '[edx+10h]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ecx+10h]']
mov ['[eax+10h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cff_compute_bias proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '1']
jnz ['short', 'loc_DE46']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_DE71']
cmp ['[ebp+arg_4],', '4D8h']
jnb ['short', 'loc_DE58']
mov ['[ebp+var_4],', '6Bh']
jmp ['short', 'loc_DE71']
cmp ['[ebp+arg_4],', '846Ch']
jnb ['short', 'loc_DE6A']
mov ['[ebp+var_4],', '46Bh']
jmp ['short', 'loc_DE71']
mov ['[ebp+var_4],', '8000h']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cff_builder_add_contour proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+41h]']
test ['eax,', 'eax']
jnz ['short', 'loc_DEC2']
mov ['ecx,', '[ebp+var_4]']
mov ['dx,', '[ecx]']
add ['dx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'dx']
xor ['eax,', 'eax']
jmp ['loc_DF55']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['short', 'loc_DEFB']
xor ['edx,', 'edx']
jnz ['short', 'loc_DEF2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'word', 'ptr', '[ecx+14h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['eax,', 'word', 'ptr', '[ecx+38h]']
lea ['ecx,', '[edx+eax+1]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
cmp ['ecx,', '[eax+8]']
ja ['short', 'loc_DEFB']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_DF11']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FT_GlyphLoader_CheckPoints']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_DF52']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
test ['edx,', 'edx']
jle ['short', 'loc_DF42']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx]']
mov ['edx,', '[ebp+var_4]']
mov ['edx,', '[edx+0Ch]']
mov ['[edx+eax*2-2],', 'cx']
mov ['eax,', '[ebp+var_4]']
mov ['cx,', '[eax]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cff_cmap_encoding_init	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '74h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '20Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_cmap_encoding_done	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
pop ['ebp']
retn
align ['4']
endp
_cff_cmap_encoding_char_index proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_4],', '100h']
jnb ['short', 'loc_E007']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_cmap_encoding_char_next proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+var_8],', '0FFh']
jnb ['short', 'loc_E097']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '100h']
jb ['short', 'loc_E06C']
jmp ['short', 'loc_E097']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_E08C']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_E097']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_E061']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cff_sid_to_glyph_name proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+290h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '480h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_cff_index_get_sid_string']
add ['esp,', '8']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cff_cmap_unicode_init proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+64h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+290h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '480h']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0B8Ch]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_E198']
push ['offset', '$SG12419']
push ['9Ch']
push ['0A3h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A3h']
jmp ['short', 'loc_E1C6']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['0']
push ['offset', '_cff_sid_to_glyph_name']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_cff_cmap_unicode_done proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+64h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_E201']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cff_cmap_unicode_char_index proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0B8Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cff_cmap_unicode_char_next proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+290h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0B8Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cf2_arrstack_setNumElements proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_E350']
push ['offset', '$SG12516']
push ['62h']
push ['offset', '$SG12517']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_E336']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
imul ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '7FFFFFFFh']
xor ['edx,', 'edx']
div ['dword', 'ptr', '[ecx+8]']
cmp ['[ebp+arg_4],', 'eax']
jbe ['short', 'loc_E387']
jmp ['$exit$17']
cmp ['[ebp+var_14],', '0']
jg ['short', 'loc_E3A1']
push ['offset', '$SG12528']
push ['6Fh']
push ['offset', '$SG12529']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_E387']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', '$exit$17']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_E428']
push ['offset', '$SG12534']
push ['79h']
push ['82h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '82h']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+14h],', 'edx']
xor ['al,', 'al']
jmp ['short', 'loc_E455']
mov ['al,', '1']
jmp ['short', 'loc_E455']
push ['offset', '$SG12535']
push ['84h']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_cf2_setError']
add ['esp,', '8']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN15_1']
dd ['offset', '$LN14_3']
db ['0Eh', 'dup(0CCh)']
endp
_cf2_blues_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '9Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_9C]']
mov ['ecx,', '27h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
push ['134h']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+30h]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getBlueMetrics']
add ['esp,', '10h']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getBlueValues']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getOtherBlues']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getFamilyBlues']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getFamilyOtherBlues']
add ['esp,', '0Ch']
mov ['[ebp+var_78],', '0FF880000h']
mov ['[ebp+var_7C],', '3700000h']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cf2_getLanguageGroup']
add ['esp,', '4']
cmp ['eax,', '1']
jnz ['loc_E6A1']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_E5F5']
cmp ['[ebp+var_18],', '4']
jnz ['loc_E6A1']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx+eax]']
shl ['edx,', '10h']
cmp ['edx,', '[ebp+var_78]']
jge ['loc_E6A1']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx+eax]']
shl ['edx,', '10h']
cmp ['edx,', '[ebp+var_78]']
jge ['loc_E6A1']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx+eax]']
shl ['edx,', '10h']
cmp ['edx,', '[ebp+var_7C]']
jle ['loc_E6A1']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[edx+ecx]']
shl ['eax,', '10h']
cmp ['eax,', '[ebp+var_7C]']
jle ['loc_E6A1']
mov ['ecx,', '[ebp+var_78]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+38h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+38h]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '8000h']
and ['eax,', '0FFFF0000h']
sub ['eax,', '8000h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['[edx+40h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+30h],', '31h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0BCh]']
mov ['edx,', '[ebp+var_7C]']
lea ['eax,', '[edx+ecx*2+1]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+24h],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '8000h']
and ['eax,', '0FFFF0000h']
add ['eax,', '8000h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['[edx+2Ch],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx+1Ch],', '32h']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+9],', '1']
jmp ['loc_ECCD']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_E6B3']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '2']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ebp+var_18]']
jnb ['loc_E812']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ecx+eax*4]']
shl ['edx,', '10h']
mov ['eax,', '[ebp+Dst]']
imul ['ecx,', '[eax+4],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+ecx+44h],', 'edx']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[edx+ecx*4+4]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+edx+48h],', 'eax']
mov ['edx,', '[ebp+Dst]']
imul ['eax,', '[edx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['esi,', '[ebp+Dst]']
mov ['eax,', '[ecx+eax+48h]']
sub ['eax,', '[esi+edx+44h]']
mov ['[ebp+var_8],', 'eax']
jns ['short', 'loc_E73C']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '33h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_E733']
push ['offset', '$SG12923']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_E715']
jmp ['loc_E6AA']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jle ['short', 'loc_E74A']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_E7A0']
mov ['eax,', '[ebp+Dst]']
imul ['ecx,', '[eax+4],', '14h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0BCh]']
mov ['edx,', '[ebp+Dst]']
mov ['ecx,', '[edx+ecx+48h]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+Dst]']
imul ['ecx,', '[eax+4],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+ecx+48h],', 'edx']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0BCh]']
mov ['eax,', '[ebp+Dst]']
mov ['edx,', '[eax+edx+44h]']
lea ['eax,', '[edx+ecx*2]']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+edx+44h],', 'eax']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_E7D3']
mov ['edx,', '[ebp+Dst]']
imul ['eax,', '[edx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[ecx+eax+54h],', '1']
mov ['edx,', '[ebp+Dst]']
imul ['eax,', '[edx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['esi,', '[ebp+Dst]']
mov ['eax,', '[esi+eax+48h]']
mov ['[ecx+edx+4Ch],', 'eax']
jmp ['short', 'loc_E7FE']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+edx+54h],', '0']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['eax,', '[ebp+Dst]']
imul ['ecx,', '[eax+4],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['esi,', '[ebp+Dst]']
mov ['edx,', '[esi+edx+44h]']
mov ['[eax+ecx+4Ch],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+4],', 'ecx']
jmp ['loc_E6AA']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_E824']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '2']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[ebp+var_24]']
jnb ['loc_E8FA']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax+edx*4]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+Dst]']
imul ['eax,', '[edx+4],', '14h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+eax+44h],', 'ecx']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ecx+eax*4+4]']
shl ['edx,', '10h']
mov ['eax,', '[ebp+Dst]']
imul ['ecx,', '[eax+4],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+ecx+48h],', 'edx']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['eax,', '[ebp+Dst]']
imul ['ecx,', '[eax+4],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['esi,', '[ebp+Dst]']
mov ['edx,', '[eax+edx+48h]']
sub ['edx,', '[esi+ecx+44h]']
mov ['[ebp+var_8],', 'edx']
jns ['short', 'loc_E8AD']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '33h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_E8A4']
push ['offset', '$SG12940']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_E886']
jmp ['loc_E81B']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jle ['short', 'loc_E8BB']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+Dst]']
imul ['eax,', '[edx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[ecx+eax+54h],', '1']
mov ['edx,', '[ebp+Dst]']
imul ['eax,', '[edx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
imul ['edx,', '[ecx+4],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['esi,', '[ebp+Dst]']
mov ['eax,', '[esi+eax+48h]']
mov ['[ecx+edx+4Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+4],', 'edx']
jmp ['loc_E81B']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
push ['edx']
push ['(offset', 'loc_FFFB+5)']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_E922']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_EB8A']
imul ['eax,', '[ebp+var_74],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+eax+4Ch]']
mov ['[ebp+var_90],', 'edx']
imul ['eax,', '[ebp+var_74],', '14h']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+54h]']
test ['edx,', 'edx']
jz ['loc_EAAB']
mov ['[ebp+var_84],', '7FFFFFFFh']
mov ['[ebp+var_80],', '0']
jmp ['short', 'loc_E972']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '2']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_80]']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['loc_EA19']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+edx*4+4]']
shl ['ecx,', '10h']
mov ['[ebp+var_88],', 'ecx']
mov ['edx,', '[ebp+var_90]']
sub ['edx,', '[ebp+var_88]']
jns ['short', 'loc_E9B5']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '[ebp+var_88]']
neg ['eax']
mov ['[ebp+var_94],', 'eax']
jmp ['short', 'loc_E9C7']
mov ['ecx,', '[ebp+var_90]']
sub ['ecx,', '[ebp+var_88]']
mov ['[ebp+var_94],', 'ecx']
mov ['edx,', '[ebp+var_94]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
cmp ['eax,', '[ebp+var_84]']
jge ['short', 'loc_EA14']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[ebp+var_10]']
jge ['short', 'loc_EA14']
imul ['edx,', '[ebp+var_74],', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_88]']
mov ['[eax+edx+4Ch],', 'ecx']
mov ['edx,', '[ebp+var_8C]']
mov ['[ebp+var_84],', 'edx']
cmp ['[ebp+var_8C],', '0']
jnz ['short', 'loc_EA14']
jmp ['short', 'loc_EA19']
jmp ['loc_E969']
cmp ['[ebp+var_30],', '2']
jb ['loc_EAA6']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ecx+eax]']
shl ['edx,', '10h']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '[ebp+var_88]']
jns ['short', 'loc_EA5E']
mov ['ecx,', '[ebp+var_90]']
sub ['ecx,', '[ebp+var_88]']
neg ['ecx']
mov ['[ebp+var_98],', 'ecx']
jmp ['short', 'loc_EA70']
mov ['edx,', '[ebp+var_90]']
sub ['edx,', '[ebp+var_88]']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[ebp+var_84]']
jge ['short', 'loc_EAA6']
mov ['edx,', '[ebp+var_8C]']
cmp ['edx,', '[ebp+var_10]']
jge ['short', 'loc_EAA6']
imul ['eax,', '[ebp+var_74],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_88]']
mov ['[ecx+eax+4Ch],', 'edx']
jmp ['loc_EB85']
mov ['[ebp+var_84],', '7FFFFFFFh']
mov ['[ebp+var_80],', '2']
jmp ['short', 'loc_EAC7']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '2']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_80]']
cmp ['ecx,', '[ebp+var_30]']
jnb ['loc_EB85']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+edx*4]']
shl ['ecx,', '10h']
mov ['[ebp+var_88],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0BCh]']
mov ['ecx,', '[ebp+var_88]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '[ebp+var_88]']
jns ['short', 'loc_EB21']
mov ['ecx,', '[ebp+var_90]']
sub ['ecx,', '[ebp+var_88]']
neg ['ecx']
mov ['[ebp+var_9C],', 'ecx']
jmp ['short', 'loc_EB33']
mov ['edx,', '[ebp+var_90]']
sub ['edx,', '[ebp+var_88]']
mov ['[ebp+var_9C],', 'edx']
mov ['eax,', '[ebp+var_9C]']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[ebp+var_84]']
jge ['short', 'loc_EB80']
mov ['edx,', '[ebp+var_8C]']
cmp ['edx,', '[ebp+var_10]']
jge ['short', 'loc_EB80']
imul ['eax,', '[ebp+var_74],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_88]']
mov ['[ecx+eax+4Ch],', 'edx']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_8C],', '0']
jnz ['short', 'loc_EB80']
jmp ['short', 'loc_EB85']
jmp ['loc_EABE']
jmp ['loc_E919']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_EBC0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['(offset', 'loc_FFFB+5)']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+Dst]']
cmp ['[edx+0Ch],', 'eax']
jle ['short', 'loc_EBC0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
push ['(offset', 'loc_FFFB+5)']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax+0Ch]']
jge ['short', 'loc_EC11']
mov ['edx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[edx+8],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
push ['eax']
push ['999Ah']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '999Ah']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+18h],', '7FFFh']
jle ['short', 'loc_EC11']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+18h],', '7FFFh']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Eh]']
test ['eax,', 'eax']
jz ['short', 'loc_EC29']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_EC3B']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '1']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax+4]']
jnb ['loc_ECCD']
imul ['edx,', '[ebp+var_74],', '14h']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+54h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_EC91']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
push ['eax']
imul ['ecx,', '[ebp+var_74],', '14h']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+ecx+4Ch]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
sub ['eax,', '[ecx+18h]']
add ['eax,', '8000h']
and ['eax,', '0FFFF0000h']
imul ['edx,', '[ebp+var_74],', '14h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+edx+50h],', 'eax']
jmp ['short', 'loc_ECC8']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
push ['eax']
imul ['ecx,', '[ebp+var_74],', '14h']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+ecx+4Ch]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+18h]']
lea ['eax,', '[eax+edx+8000h]']
and ['eax,', '0FFFF0000h']
imul ['ecx,', '[ebp+var_74],', '14h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx+50h],', 'eax']
jmp ['loc_EC32']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN68_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '9Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN67_0']
dd ['offset', '$LN59_1']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN60_0']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN61_0']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN62']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN63']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN64_0']
dd ['0FFFFFFA0h,', '4']
dd ['offset', '$LN65_0']
dd ['0FFFFFF94h,', '4']
dd ['offset', '$LN66_0']
db ['0Eh', 'dup(0CCh)']
endp
_cf2_blues_capture proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['byte', 'ptr', '[ebp+var_10+3],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_hint_isTop']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_EE36']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_cf2_hint_isBottom']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_EE4D']
push ['offset', '$SG13013']
push ['1E4h']
push ['offset', '$SG13014']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_EE10']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_EE63']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+4]']
jnb ['loc_F0A7']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+54h]']
test ['eax,', 'eax']
jz ['loc_EF8C']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cf2_hint_isBottom']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_EF8C']
imul ['eax,', '[ebp+var_14],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+44h]']
sub ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax+8]']
jg ['loc_EF8C']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+48h]']
add ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['[ecx+8],', 'eax']
jg ['loc_EF8C']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
test ['eax,', 'eax']
jz ['short', 'loc_EEEF']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+50h]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_EF77']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+ecx+48h]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+10h]']
jl ['short', 'loc_EF62']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '8000h']
and ['ecx,', '0FFFF0000h']
imul ['edx,', '[ebp+var_14],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax+edx+50h]']
sub ['edx,', '(offset', 'loc_FFFB+5)']
cmp ['ecx,', 'edx']
jge ['short', 'loc_EF46']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '8000h']
and ['ecx,', '0FFFF0000h']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_EF5A']
imul ['edx,', '[ebp+var_14],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx+50h]']
sub ['ecx,', '(offset', 'loc_FFFB+5)']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_EF77']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '8000h']
and ['ecx,', '0FFFF0000h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[edx+0Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_10+3],', '1']
jmp ['loc_F0A7']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+54h]']
test ['eax,', 'eax']
jnz ['loc_F0A2']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_cf2_hint_isTop']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_F0A2']
imul ['eax,', '[ebp+var_14],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+44h]']
sub ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
cmp ['edx,', '[eax+8]']
jg ['loc_F0A2']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+48h]']
add ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['[ecx+8],', 'eax']
jg ['loc_F0A2']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
test ['eax,', 'eax']
jz ['short', 'loc_F009']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+50h]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_F090']
imul ['ecx,', '[ebp+var_14],', '14h']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[edx+8]']
sub ['edx,', '[eax+ecx+44h]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+10h]']
jl ['short', 'loc_F07B']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '8000h']
and ['edx,', '0FFFF0000h']
imul ['eax,', '[ebp+var_14],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax+50h]']
add ['eax,', '(offset', 'loc_FFFB+5)']
cmp ['edx,', 'eax']
jle ['short', 'loc_F05F']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '8000h']
and ['edx,', '0FFFF0000h']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_F073']
imul ['eax,', '[ebp+var_14],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+50h]']
add ['edx,', '(offset', 'loc_FFFB+5)']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_F090']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '8000h']
and ['edx,', '0FFFF0000h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_10+3],', '1']
jmp ['short', 'loc_F0A7']
jmp ['loc_EE5A']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_10+3]']
test ['edx,', 'edx']
jz ['short', 'loc_F10B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_F0DD']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_hint_lock']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_F10B']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_cf2_hint_lock']
add ['esp,', '4']
mov ['al,', 'byte', 'ptr', '[ebp+var_10+3]']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cf2_hint_isValid proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_F135']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_F139']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_hint_isTop	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
and ['ecx,', '0Ah']
jz ['short', 'loc_F167']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_F16B']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_hint_isBottom proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
and ['ecx,', '5']
jz ['short', 'loc_F197']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_F19B']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_hint_lock	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_hintmap_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['0F1Ch']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[edx+8Ch]']
mov ['[ecx+0Dh],', 'al']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_10]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+8],', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cf2_hintmap_build proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jnz ['short', 'loc_F2AC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_cf2_hintmap_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_F2AC']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_hintmask_init']
add ['esp,', '8']
push ['1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_cf2_hintmap_build']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_cf2_hintmask_isValid']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F300']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_arrstack_size']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_cf2_arrstack_size']
add ['esp,', '4']
add ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_cf2_hintmask_setAll']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_cf2_hintmask_isValid']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_F300']
jmp ['loc_F6F6']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['ecx,', '7']
mov ['esi,', '[ebp+arg_C]']
lea ['edi,', '[ebp+Dst]']
rep ['movsd']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_hintmask_getMaskPtr']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cf2_arrstack_size']
add ['esp,', '4']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[edx+8]']
jbe ['short', 'loc_F34F']
jmp ['loc_F6F6']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0CDh]']
test ['edx,', 'edx']
jz ['short', 'loc_F39D']
lea ['eax,', '[ebp+var_54]']
push ['eax']
call ['_cf2_hint_initZero']
add ['esp,', '4']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '0F4h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_hintmap_insertHint']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '0E0h']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_hintmap_insertHint']
add ['esp,', '0Ch']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_39],', '80h']
jmp ['short', 'loc_F3B3']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_34]']
jnb ['loc_F4BC']
movzx ['eax,', '[ebp+var_39]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
and ['eax,', 'edx']
jz ['loc_F495']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_70]']
push ['eax']
call ['_cf2_hint_init']
add ['esp,', '1Ch']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_cf2_hint_init']
add ['esp,', '1Ch']
lea ['edx,', '[ebp+var_70]']
push ['edx']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_F46B']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_F46B']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '0C4h']
push ['edx']
call ['_cf2_blues_capture']
add ['esp,', '0Ch']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_F495']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
lea ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_hintmap_insertHint']
add ['esp,', '0Ch']
movzx ['ecx,', '[ebp+var_39]']
not ['ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
and ['eax,', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
and ['edx,', '7']
cmp ['edx,', '7']
jnz ['short', 'loc_F4AF']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_39],', '80h']
jmp ['short', 'loc_F4B7']
mov ['cl,', '[ebp+var_39]']
shr ['cl,', '1']
mov ['[ebp+var_39],', 'cl']
jmp ['loc_F3AA']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jz ['loc_F54C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_F4F9']
mov ['ecx,', '14h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx+24h],', '0']
jg ['short', 'loc_F4F9']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '14h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax+24h],', '0']
jge ['short', 'loc_F547']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
call ['_cf2_hint_initZero']
add ['esp,', '4']
mov ['[ebp+var_A8],', '31h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_98],', 'ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['_cf2_hint_initZero']
add ['esp,', '4']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_hintmap_insertHint']
add ['esp,', '0Ch']
jmp ['loc_F61C']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_hintmask_getMaskPtr']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_39],', '80h']
jmp ['short', 'loc_F571']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_34]']
jnb ['loc_F61C']
movzx ['eax,', '[ebp+var_39]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
and ['eax,', 'edx']
jz ['short', 'loc_F5F5']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
call ['_cf2_hint_init']
add ['esp,', '1Ch']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_FC]']
push ['ecx']
call ['_cf2_hint_init']
add ['esp,', '1Ch']
lea ['edx,', '[ebp+var_FC]']
push ['edx']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_hintmap_insertHint']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_38]']
and ['edx,', '7']
cmp ['edx,', '7']
jnz ['short', 'loc_F60F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_39],', '80h']
jmp ['short', 'loc_F617']
mov ['cl,', '[ebp+var_39]']
shr ['cl,', '1']
mov ['[ebp+var_39],', 'cl']
jmp ['loc_F568']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_hintmap_adjustHints']
add ['esp,', '4']
movzx ['eax,', '[ebp+arg_14]']
test ['eax,', 'eax']
jnz ['loc_F6E1']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_F646']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[edx+14h]']
jnb ['loc_F6E1']
imul ['ecx,', '[ebp+var_38],', '14h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1Ch]']
push ['eax']
call ['_cf2_hint_isSynthetic']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F6DC']
imul ['edx,', '[ebp+var_38],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_arrstack_getPointer']
add ['esp,', '8']
mov ['[ebp+var_104],', 'eax']
imul ['eax,', '[ebp+var_38],', '14h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Ch]']
push ['edx']
call ['_cf2_hint_isTop']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_F6BF']
imul ['ecx,', '[ebp+var_38],', '14h']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+ecx+28h]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_F6D3']
imul ['edx,', '[ebp+var_38],', '14h']
mov ['eax,', '[ebp+var_104]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+edx+28h]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_104]']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['loc_F63D']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+0Ch],', '1']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_cf2_hintmask_setNew']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN42']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN41']
dd ['offset', '$LN33']
dd ['0FFFFFFACh,', '14h']
dd ['offset', '$LN34']
db ['90h']
db ['3', 'dup(0FFh)']
dd ['14h']
dd ['offset', '$LN35_0']
dd ['0FFFFFF74h,', '14h']
dd ['offset', '$LN36']
dd ['0FFFFFF58h,', '14h']
dd ['offset', '$LN37']
dd ['0FFFFFF3Ch,', '14h']
dd ['offset', '$LN38']
dd ['0FFFFFF20h,', '14h']
dd ['offset', '$LN39']
dd ['0FFFFFF04h,', '14h']
dd ['offset', '$LN40_0']
db ['0Ah', 'dup(0CCh)']
endp
_cf2_glyphpath_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['2E08h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
push ['8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '2D5Ch']
push ['edx']
call ['_cf2_arrstack_init']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '2D5Ch']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '1E40h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '1E40h']
push ['ecx']
call ['_cf2_hintmap_init']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '2D5Ch']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '1E40h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0F24h']
push ['eax']
call ['_cf2_hintmap_init']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '2D5Ch']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '1E40h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '8']
push ['edx']
call ['_cf2_hintmap_init']
add ['esp,', '14h']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+2D7Ch],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2D80h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+2D84h],', 'edx']
mov ['eax,', '[ebp+arg_24]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+2D88h],', 'ecx']
mov ['[eax+2D8Ch],', 'edx']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_10]']
mov ['[ecx+2D94h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[eax+2D98h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_18]']
mov ['[edx+2D9Ch],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_1C]']
mov ['[ecx+2DA0h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_20]']
mov ['[eax+2DA4h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+8Dh]']
mov ['[edx+2D92h],', 'cl']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0B8h]']
mov ['[edx+2DA8h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0BCh]']
mov ['[edx+2DACh],', 'ecx']
mov ['edx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[edx+2DA8h],', '0']
jge ['short', 'loc_F9A1']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+2DA8h]']
neg ['ecx']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_F9AD']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+2DA8h]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[ecx+2DACh],', '0']
jge ['short', 'loc_F9C9']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+2DACh]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_F9D5']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+2DACh]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jle ['short', 'loc_FA0D']
mov ['ecx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[ecx+2DA8h],', '0']
jge ['short', 'loc_F9F9']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+2DA8h]']
neg ['eax']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_FA05']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+2DA8h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_FA3B']
mov ['ecx,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[ecx+2DACh],', '0']
jge ['short', 'loc_FA29']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+2DACh]']
neg ['eax']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_FA35']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+2DACh]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+2DB0h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+2DB4h],', '199Ah']
mov ['ecx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[ecx+2D93h],', '1']
mov ['edx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[edx+2D90h],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+2D91h],', '0']
mov ['ecx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[ecx+2DE0h],', '0']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cf2_glyphpath_finalize	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2D5Ch']
push ['eax']
call ['_cf2_arrstack_finalize']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_cf2_glyphpath_moveTo proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_closeOpenPath']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+2DD8h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+2DC8h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+2DDCh],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+2DCCh],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2D93h],', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
call ['_cf2_hintmap_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_FB26']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2D9Ch]']
push ['ecx']
call ['_cf2_hintmask_isNew']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_FB5F']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DA0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2D9Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D98h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2D94h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_cf2_hintmap_build']
add ['esp,', '18h']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '8']
mov ['edi,', '[ebp+arg_0]']
add ['edi,', '0F24h']
mov ['ecx,', '3C7h']
rep ['movsd']
pop ['edi']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_glyphpath_lineTo proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2D9Ch]']
push ['ecx']
call ['_cf2_hintmask_isNew']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_FBD2']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2D91h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_FBD2']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_FBD9']
mov ['[ebp+var_40],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_40]']
mov ['[ebp+var_39],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DC8h]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_FC08']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DCCh]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_FC08']
movzx ['ecx,', '[ebp+var_39]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_FC08']
jmp ['loc_FDB6']
lea ['edx,', '[ebp+var_14]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DCCh]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DC8h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_computeOffset']
add ['esp,', '1Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DC8h]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DCCh]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+2D93h]']
test ['eax,', 'eax']
jz ['short', 'loc_FCB3']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_pushMove']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+2D93h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+2D90h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+2DC0h],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['[eax+2DC4h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2DE0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FD1C']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_cf2_hintmap_isValid']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_FCF7']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jz ['short', 'loc_FCF7']
push ['offset', '$SG14364']
push ['6A0h']
push ['offset', '$SG14365']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_FCC1']
push ['0']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_pushPrevElem']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+2DE0h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2DE4h],', '2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+2DE8h],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ecx+2DECh],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx+2DF0h],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['[ecx+2DF4h],', 'eax']
movzx ['ecx,', '[ebp+var_39]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FD9E']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DA0h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D9Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2D98h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2D94h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
call ['_cf2_hintmap_build']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+2DC8h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+2DCCh],', 'edx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17_0']
dd ['offset', '$LN13_3']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN14_4']
dd ['0FFFFFFDCh,', '8']
dd ['offset', '$LN15_2']
db ['0CCh']
db ['3', 'dup(0FFh)']
dd ['8']
dd ['offset', '$LN16_2']
db ['30h,', '0']
db ['6', 'dup(0CCh)']
endp
_cf2_glyphpath_curveTo proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '70h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_70]']
mov ['ecx,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DCCh]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DC8h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_glyphpath_computeOffset']
add ['esp,', '1Ch']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_computeOffset']
add ['esp,', '1Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ecx+4]']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_getWindingMomentum']
add ['esp,', '10h']
add ['eax,', '[esi+10h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DC8h]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DCCh]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
add ['edx,', '[ebp+var_20]']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2D93h]']
test ['edx,', 'edx']
jz ['short', 'loc_FF60']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_glyphpath_pushMove']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2D93h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+2D90h],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4C]']
mov ['[edx+2DC0h],', 'eax']
mov ['ecx,', '[ebp+var_48]']
mov ['[edx+2DC4h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+2DE0h]']
test ['eax,', 'eax']
jz ['short', 'loc_FFC9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
call ['_cf2_hintmap_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_FFA4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_FFA4']
push ['offset', '$SG14396']
push ['6F7h']
push ['offset', '$SG14397']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_FF6E']
push ['0']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_pushPrevElem']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+2DE0h],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2DE4h],', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_3C]']
mov ['[eax+2DE8h],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[eax+2DECh],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax+2DF0h],', 'ecx']
mov ['edx,', '[ebp+var_48]']
mov ['[eax+2DF4h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+2DF8h],', 'ecx']
mov ['edx,', '[ebp+var_58]']
mov ['[eax+2DFCh],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_6C]']
mov ['[eax+2E00h],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['[eax+2E04h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2D9Ch]']
push ['ecx']
call ['_cf2_hintmask_isNew']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_10086']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DA0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2D9Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D98h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2D94h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_cf2_hintmap_build']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[eax+2DC8h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_18]']
mov ['[edx+2DCCh],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '70h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN18_2']
dd ['offset', '$LN10_0']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN11_0']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN12_2']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN13_4']
dd ['0FFFFFFC4h,', '8']
dd ['offset', '$LN14_5']
dd ['0FFFFFFB4h,', '8']
dd ['offset', '$LN15_3']
dd ['0FFFFFFA4h,', '8']
dd ['offset', '$LN16_3']
dd ['0FFFFFF94h,', '8']
dd ['offset', '$LN17_1']
db ['32h,', '0']
db ['0']
db ['4', 'dup(0CCh)']
endp
_cf2_glyphpath_closeOpenPath proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2D90h]']
test ['ecx,', 'ecx']
jz ['loc_10201']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+2D91h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DDCh]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DD8h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_lineTo']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+2DE0h]']
test ['eax,', 'eax']
jz ['short', 'loc_101D9']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DC4h]']
push ['edx']
mov ['eax,', '[ecx+2DC0h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2DB8h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_pushPrevElem']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+2D93h],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+2D90h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2D91h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+2DE0h],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_cf2_getGlyphOutline proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+Buf1]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+Buf1]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_font_setup']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_10270']
jmp ['$exit$13']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+0C0h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+8Dh]']
mov ['byte', 'ptr', '[ebp+var_24+3],', 'al']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['short', 'loc_102F3']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '64h']
push ['edx']
call ['_cf2_outline_reset']
add ['esp,', '4']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '64h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_interpT2CharString']
add ['esp,', '20h']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_102CE']
jmp ['short', '$exit$13']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_24+3]']
test ['eax,', 'eax']
jnz ['short', 'loc_102D8']
jmp ['short', 'loc_102F3']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jl ['short', 'loc_102E3']
jmp ['short', 'loc_102F3']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+0C0h],', '1']
mov ['byte', 'ptr', '[ebp+var_24+3],', '0']
jmp ['short', 'loc_10286']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '64h']
push ['eax']
call ['_cf2_outline_close']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
push ['ecx']
call ['_cf2_setError']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_1']
dd ['offset', '$LN9_1']
dd ['0FFFFFFE4h,', '4']
dd ['offset', '$LN10_1']
align ['4']
endp
_cf2_hintmask_init proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['1Ch']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_hintmask_isValid proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['al,', '[eax+4]']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_hintmask_isNew proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['al,', '[eax+5]']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_hintmask_setNew proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+5],', 'cl']
pop ['ebp']
retn
align ['4']
endp
_cf2_hintmask_getMaskPtr proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_hintmask_setAll proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['ecx,', '[ebp+arg_4]']
neg ['ecx']
and ['ecx,', '7']
mov ['eax,', '1']
shl ['eax,', 'cl']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_hintmask_setCounts']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1042E']
jmp ['loc_104C1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
ja ['short', 'loc_1044E']
push ['offset', '$SG14531']
push ['0B9h']
push ['offset', '$SG14532']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1042E']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0Ch']
jb ['short', 'loc_10472']
push ['offset', '$SG14537']
push ['0BBh']
push ['offset', '$SG14538']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_10452']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_10488']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+0Ch]']
jnb ['short', 'loc_1049F']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+10h],', '0FFh']
jmp ['short', 'loc_1047F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
not ['ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax+0Fh]']
and ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx+0Fh],', 'al']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_cf2_interpT2CharString	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '3F70h']
call ['__chkstk']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3F70]']
mov ['ecx,', '0FDCh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_cf2_getNominalWidthX']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+arg_18]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_2C],', '1312D00h']
mov ['[ebp+Dst],', '0']
mov ['[ebp+var_68],', '0FFFFFFFFh']
push ['10h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_50]']
push ['edx']
call ['_cf2_arrstack_init']
add ['esp,', '10h']
push ['14h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
call ['_cf2_arrstack_init']
add ['esp,', '10h']
push ['14h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_B4]']
push ['edx']
call ['_cf2_arrstack_init']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_D8]']
push ['ecx']
call ['_cf2_hintmask_init']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0C4h']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_init']
add ['esp,', '28h']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_cf2_getDefaultWidthX']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_cf2_stack_init']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_1064E']
push ['offset', '$SG14720']
push ['214h']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
push ['0Bh']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_cf2_arrstack_setCount']
add ['esp,', '8']
lea ['edx,', '[ebp+var_50]']
push ['edx']
call ['_cf2_arrstack_getBuffer']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['[ebp+var_68],', '0']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1069B']
jmp ['$exit$480']
mov ['edx,', '1']
test ['edx,', 'edx']
jz ['loc_12688']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_buf_isEnd']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_106CD']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_106C7']
mov ['[ebp+var_25],', '0Bh']
jmp ['short', 'loc_106CB']
mov ['[ebp+var_25],', '0Eh']
jmp ['short', 'loc_106DC']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
mov ['[ebp+var_25],', 'al']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_106E9']
jmp ['$exit$480']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
jnz ['short', 'loc_10713']
push ['offset', '$SG14734']
push ['23Dh']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
movzx ['edx,', '[ebp+var_25]']
mov ['[ebp+var_3F40],', 'edx']
cmp ['[ebp+var_3F40],', '1Fh']
ja ['loc_1243C']
mov ['eax,', '[ebp+var_3F40]']
movzx ['ecx,', 'ds:$LN464[eax]']
jmp ['ds:$LN478[ecx*4]']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_10761']
movzx ['ecx,', '[ebp+var_25]']
push ['ecx']
push ['offset', '$SG14744']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', '$LN415']
jmp ['loc_12677']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_107A9']
movzx ['edx,', '[ebp+var_25]']
cmp ['edx,', '12h']
jnz ['short', 'loc_10790']
mov ['[ebp+var_3F44],', 'offset', '$SG14750']
jmp ['short', 'loc_1079A']
mov ['[ebp+var_3F44],', 'offset', '$SG14751']
mov ['eax,', '[ebp+var_3F44]']
push ['eax']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', '$LN410']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_cf2_hintmask_isValid']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_107EA']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_107E1']
push ['offset', '$SG14757']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_107C3']
jmp ['loc_12677']
push ['0']
lea ['ecx,', '[ebp+var_59]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_doStems']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2F1h]']
test ['edx,', 'edx']
jz ['short', 'loc_10824']
jmp ['$exit$480']
jmp ['loc_12677']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_10868']
movzx ['edx,', '[ebp+var_25]']
cmp ['edx,', '17h']
jnz ['short', 'loc_1084F']
mov ['[ebp+var_3F48],', 'offset', '$SG14764']
jmp ['short', 'loc_10859']
mov ['[ebp+var_3F48],', 'offset', '$SG14765']
mov ['eax,', '[ebp+var_3F48]']
push ['eax']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', '$LN399']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_cf2_hintmask_isValid']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_108A9']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_108A0']
push ['offset', '$SG14771']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_10882']
jmp ['loc_12677']
push ['0']
lea ['ecx,', '[ebp+var_59]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_doStems']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2F1h]']
test ['edx,', 'edx']
jz ['short', 'loc_108E3']
jmp ['$exit$480']
jmp ['loc_12677']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_10906']
push ['offset', '$SG14778']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$LN388']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '1']
jbe ['short', 'loc_10939']
movzx ['ecx,', '[ebp+var_59]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10939']
push ['0']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_59],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+84h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2F1h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_10956']
jmp ['$exit$480']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_popFixed']
add ['esp,', '4']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+arg_18],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_moveTo']
add ['esp,', '0Ch']
jmp ['loc_12677']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_2EF4],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_109B4']
push ['offset', '$SG14788']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_10996']
mov ['[ebp+var_2EF0],', '0']
jmp ['short', 'loc_109D3']
mov ['ecx,', '[ebp+var_2EF0]']
add ['ecx,', '2']
mov ['[ebp+var_2EF0],', 'ecx']
mov ['edx,', '[ebp+var_2EF0]']
cmp ['edx,', '[ebp+var_2EF4]']
jnb ['short', 'loc_10A2F']
mov ['eax,', '[ebp+var_2EF0]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+arg_14],', 'eax']
mov ['edx,', '[ebp+var_2EF0]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
lea ['eax,', '[ebp+var_2EE8]']
push ['eax']
call ['_cf2_glyphpath_lineTo']
add ['esp,', '0Ch']
jmp ['short', 'loc_109C4']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_2EFC],', 'eax']
movzx ['eax,', '[ebp+var_25]']
cmp ['eax,', '6']
jnz ['short', 'loc_10A67']
mov ['[ebp+var_3F4C],', '1']
jmp ['short', 'loc_10A71']
mov ['[ebp+var_3F4C],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_3F4C]']
mov ['[ebp+var_2EFD],', 'cl']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_10ABE']
movzx ['ecx,', '[ebp+var_2EFD]']
test ['ecx,', 'ecx']
jz ['short', 'loc_10AA5']
mov ['[ebp+var_3F50],', 'offset', '$SG14800']
jmp ['short', 'loc_10AAF']
mov ['[ebp+var_3F50],', 'offset', '$SG14801']
mov ['edx,', '[ebp+var_3F50]']
push ['edx']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_10A7D']
mov ['[ebp+var_2EF8],', '0']
jmp ['short', 'loc_10ADD']
mov ['ecx,', '[ebp+var_2EF8]']
add ['ecx,', '1']
mov ['[ebp+var_2EF8],', 'ecx']
mov ['edx,', '[ebp+var_2EF8]']
cmp ['edx,', '[ebp+var_2EFC]']
jnb ['loc_10B76']
mov ['eax,', '[ebp+var_2EF8]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
mov ['[ebp+var_2F04],', 'eax']
movzx ['edx,', '[ebp+var_2EFD]']
test ['edx,', 'edx']
jz ['short', 'loc_10B21']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '[ebp+var_2F04]']
mov ['[ebp+arg_14],', 'eax']
jmp ['short', 'loc_10B2D']
mov ['ecx,', '[ebp+arg_18]']
add ['ecx,', '[ebp+var_2F04]']
mov ['[ebp+arg_18],', 'ecx']
movzx ['edx,', '[ebp+var_2EFD]']
test ['edx,', 'edx']
jnz ['short', 'loc_10B44']
mov ['[ebp+var_3F54],', '1']
jmp ['short', 'loc_10B4E']
mov ['[ebp+var_3F54],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_3F54]']
mov ['[ebp+var_2EFD],', 'al']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
lea ['eax,', '[ebp+var_2EE8]']
push ['eax']
call ['_cf2_glyphpath_lineTo']
add ['esp,', '0Ch']
jmp ['loc_10ACE']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_2F08],', 'eax']
mov ['[ebp+var_2F0C],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_10BE2']
movzx ['edx,', '[ebp+var_25]']
cmp ['edx,', '18h']
jnz ['short', 'loc_10BC9']
mov ['[ebp+var_3F58],', 'offset', '$SG14815']
jmp ['short', 'loc_10BD3']
mov ['[ebp+var_3F58],', 'offset', '$SG14816']
mov ['eax,', '[ebp+var_3F58]']
push ['eax']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10BA3']
mov ['edx,', '[ebp+var_2F0C]']
add ['edx,', '6']
cmp ['edx,', '[ebp+var_2F08]']
ja ['loc_10D1D']
mov ['eax,', '[ebp+var_2F0C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_2F10],', 'eax']
mov ['edx,', '[ebp+var_2F0C]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_2F14],', 'eax']
mov ['ecx,', '[ebp+var_2F0C]']
add ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_2F10]']
mov ['[ebp+var_2F18],', 'eax']
mov ['eax,', '[ebp+var_2F0C]']
add ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_2F14]']
mov ['[ebp+var_2F1C],', 'eax']
mov ['edx,', '[ebp+var_2F0C]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_2F18]']
mov ['[ebp+var_2F20],', 'eax']
mov ['ecx,', '[ebp+var_2F0C]']
add ['ecx,', '5']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_2F1C]']
mov ['[ebp+var_2F24],', 'eax']
mov ['eax,', '[ebp+var_2F24]']
push ['eax']
mov ['ecx,', '[ebp+var_2F20]']
push ['ecx']
mov ['edx,', '[ebp+var_2F1C]']
push ['edx']
mov ['eax,', '[ebp+var_2F18]']
push ['eax']
mov ['ecx,', '[ebp+var_2F14]']
push ['ecx']
mov ['edx,', '[ebp+var_2F10]']
push ['edx']
lea ['eax,', '[ebp+var_2EE8]']
push ['eax']
call ['_cf2_glyphpath_curveTo']
add ['esp,', '1Ch']
mov ['ecx,', '[ebp+var_2F20]']
mov ['[ebp+arg_14],', 'ecx']
mov ['edx,', '[ebp+var_2F24]']
mov ['[ebp+arg_18],', 'edx']
mov ['eax,', '[ebp+var_2F0C]']
add ['eax,', '6']
mov ['[ebp+var_2F0C],', 'eax']
jmp ['loc_10BE6']
movzx ['ecx,', '[ebp+var_25]']
cmp ['ecx,', '18h']
jnz ['short', 'loc_10D72']
mov ['edx,', '[ebp+var_2F0C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+arg_14],', 'eax']
mov ['ecx,', '[ebp+var_2F0C]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+arg_18],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_lineTo']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_10DC2']
movzx ['eax,', '[ebp+var_25]']
cmp ['eax,', '1Dh']
jnz ['short', 'loc_10DA9']
mov ['[ebp+var_3F5C],', 'offset', '$SG14833']
jmp ['short', 'loc_10DB3']
mov ['[ebp+var_3F5C],', 'offset', '$SG14834']
mov ['ecx,', '[ebp+var_3F5C]']
push ['ecx']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$LN355']
cmp ['[ebp+var_68],', '0Ah']
jle ['short', 'loc_10DEB']
push ['offset', '$SG14836']
push ['2F5h']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_cf2_arrstack_getPointer']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_popInt']
add ['esp,', '4']
mov ['[ebp+var_2F28],', 'eax']
mov ['al,', '[ebp+var_25]']
mov ['[ebp+var_3F60],', 'al']
cmp ['[ebp+var_3F60],', '1Dh']
jz ['short', 'loc_10E27']
jmp ['short', 'loc_10E95']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_10E55']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_2F28]']
add ['ecx,', '[eax+384h]']
push ['ecx']
push ['offset', '$SG14847']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_10E27']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_2F28]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_cf2_initGlobalRegionBuffer']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_10E93']
push ['offset', '$SG14849']
push ['30Ah']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
jmp ['short', 'loc_10F01']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_10EC3']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_2F28]']
add ['eax,', '[edx+380h]']
push ['eax']
push ['offset', '$SG14855']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10E95']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_2F28]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_cf2_initLocalRegionBuffer']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_10F01']
push ['offset', '$SG14857']
push ['317h']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '1']
mov ['[ebp+var_68],', 'edx']
jmp ['loc_1069B']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_10F2D']
push ['offset', '$SG14863']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$LN335']
cmp ['[ebp+var_68],', '1']
jge ['short', 'loc_10F56']
push ['offset', '$SG14865']
push ['326h']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
lea ['edx,', '[ebp+var_50]']
push ['edx']
call ['_cf2_arrstack_getPointer']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
jmp ['loc_1069B']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_buf_readByte']
add ['esp,', '4']
mov ['[ebp+var_2F29],', 'al']
movzx ['ecx,', '[ebp+var_2F29]']
mov ['[ebp+var_3F64],', 'ecx']
cmp ['[ebp+var_3F64],', '25h']
ja ['$LN121']
mov ['edx,', '[ebp+var_3F64]']
movzx ['eax,', 'ds:$LN465[edx]']
jmp ['ds:$LN479[eax*4]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_10FD5']
push ['offset', '$SG14879']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN326']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_10FFC']
push ['offset', '$SG14885']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN321']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1101E']
push ['offset', '$SG14890']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11000']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11045']
push ['offset', '$SG14896']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN312']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11067']
push ['offset', '$SG14901']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11049']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1108E']
push ['offset', '$SG14907']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN303']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_110B0']
push ['offset', '$SG14912']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11092']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_110D7']
push ['offset', '$SG14918']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN294']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_110F9']
push ['offset', '$SG14923']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_110DB']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11120']
push ['offset', '$SG14929']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN285']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11142']
push ['offset', '$SG14934']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11124']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11169']
push ['offset', '$SG14940']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN276']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1118B']
push ['offset', '$SG14945']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_1116D']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_111B2']
push ['offset', '$SG14951']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN267']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_111D4']
push ['offset', '$SG14956']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_111B6']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_111FB']
push ['offset', '$SG14962']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN258']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1121D']
push ['offset', '$SG14967']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_111FF']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11244']
push ['offset', '$SG14973']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN249']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11266']
push ['offset', '$SG14978']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11248']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1128D']
push ['offset', '$SG14984']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN240']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_112AF']
push ['offset', '$SG14989']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11291']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_112D6']
push ['offset', '$SG14995']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN231']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_112F8']
push ['offset', '$SG15000']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_112DA']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1131F']
push ['offset', '$SG15006']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN222']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11341']
push ['offset', '$SG15011']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11323']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11368']
push ['offset', '$SG15017']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN213']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1138A']
push ['offset', '$SG15022']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_1136C']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_113B1']
push ['offset', '$SG15028']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN204']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_113D3']
push ['offset', '$SG15033']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_113B5']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_113FA']
push ['offset', '$SG15039']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN195']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1141C']
push ['offset', '$SG15044']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_113FE']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11443']
push ['offset', '$SG15050']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN186']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11465']
push ['offset', '$SG15055']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11447']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1148C']
push ['offset', '$SG15061']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN177']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_114AE']
push ['offset', '$SG15066']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11490']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_114D5']
push ['offset', '$SG15072']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN168']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_114F7']
push ['offset', '$SG15077']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_114D9']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1151E']
push ['offset', '$SG15083']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN159']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11540']
push ['offset', '$SG15088']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11522']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11567']
push ['offset', '$SG15094']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN150']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11589']
push ['offset', '$SG15099']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_1156B']
jmp ['loc_116E0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_115B0']
push ['offset', '$SG15107']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN141']
push ['0']
push ['offset', '?readFromStack@?FB@??cf2_interpT2CharString@@9@9']
lea ['ecx,', '[ebp+var_2EE8]']
push ['ecx']
lea ['edx,', '[ebp+arg_18]']
push ['edx']
lea ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_doFlex']
add ['esp,', '18h']
jmp ['loc_1069B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_115F9']
push ['offset', '$SG15115']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', '$LN136']
push ['0']
push ['offset', '?readFromStack@?FD@??cf2_interpT2CharString@@9@9']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
lea ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_doFlex']
add ['esp,', '18h']
jmp ['loc_116E0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_11642']
push ['offset', '$SG15123']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$LN131']
push ['0']
push ['offset', '?readFromStack@?FF@??cf2_interpT2CharString@@9@9']
lea ['eax,', '[ebp+var_2EE8]']
push ['eax']
lea ['ecx,', '[ebp+arg_18]']
push ['ecx']
lea ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_doFlex']
add ['esp,', '18h']
jmp ['loc_1069B']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1168B']
push ['offset', '$SG15131']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN126']
push ['1']
push ['offset', '?readFromStack@?FH@??cf2_interpT2CharString@@9@9']
lea ['ecx,', '[ebp+var_2EE8]']
push ['ecx']
lea ['edx,', '[ebp+arg_18]']
push ['edx']
lea ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_doFlex']
add ['esp,', '18h']
jmp ['loc_1069B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_116DC']
movzx ['ecx,', '[ebp+var_2F29]']
push ['ecx']
push ['offset', '$SG15137']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', '$LN121']
jmp ['loc_12677']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_11703']
push ['offset', '$SG15143']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$LN116']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_11729']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '5']
jnz ['short', 'loc_11747']
movzx ['edx,', '[ebp+var_59]']
test ['edx,', 'edx']
jnz ['short', 'loc_11747']
push ['0']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_59],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+84h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2F1h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11764']
jmp ['$exit$480']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_closeOpenPath']
add ['esp,', '4']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '1']
jbe ['loc_118D9']
movzx ['ecx,', '[ebp+arg_10]']
test ['ecx,', 'ecx']
jz ['short', 'loc_117AF']
push ['offset', '$SG15155']
push ['44Ch']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_popInt']
add ['esp,', '4']
mov ['[ebp+var_2F30],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_popInt']
add ['esp,', '4']
mov ['[ebp+var_2F34],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_popFixed']
add ['esp,', '4']
mov ['[ebp+arg_18],', 'eax']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_popFixed']
add ['esp,', '4']
mov ['[ebp+arg_14],', 'eax']
lea ['eax,', '[ebp+var_2F48]']
push ['eax']
mov ['ecx,', '[ebp+var_2F30]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_cf2_getSeacComponent']
add ['esp,', '0Ch']
mov ['[ebp+var_2F5C],', 'eax']
cmp ['[ebp+var_2F5C],', '0']
jz ['short', 'loc_11828']
mov ['eax,', '[ebp+var_2F5C]']
mov ['[ebp+var_8],', 'eax']
jmp ['$exit$480']
lea ['ecx,', '[ebp+var_2F54]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_2F48]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_interpT2CharString']
add ['esp,', '20h']
lea ['edx,', '[ebp+var_2F48]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_cf2_freeSeacComponent']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_2F48]']
push ['ecx']
mov ['edx,', '[ebp+var_2F34]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_cf2_getSeacComponent']
add ['esp,', '0Ch']
mov ['[ebp+var_2F5C],', 'eax']
cmp ['[ebp+var_2F5C],', '0']
jz ['short', 'loc_1189E']
mov ['ecx,', '[ebp+var_2F5C]']
mov ['[ebp+var_8],', 'ecx']
jmp ['$exit$480']
lea ['edx,', '[ebp+var_2F54]']
push ['edx']
push ['0']
push ['0']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+var_2F48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_interpT2CharString']
add ['esp,', '20h']
lea ['ecx,', '[ebp+var_2F48]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_cf2_freeSeacComponent']
add ['esp,', '8']
jmp ['$exit$480']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_1191D']
movzx ['edx,', '[ebp+var_25]']
cmp ['edx,', '14h']
jnz ['short', 'loc_11904']
mov ['[ebp+var_3F68],', 'offset', '$SG15163']
jmp ['short', 'loc_1190E']
mov ['[ebp+var_3F68],', 'offset', '$SG15164']
mov ['eax,', '[ebp+var_3F68]']
push ['eax']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', '$LN103']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '1']
jbe ['short', 'loc_1196F']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_cf2_hintmask_isValid']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1196F']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_11966']
push ['offset', '$SG15170']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_11948']
jmp ['loc_12677']
push ['0']
lea ['edx,', '[ebp+var_59]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_doStems']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+84h]']
movzx ['eax,', 'byte', 'ptr', '[edx+2F1h]']
test ['eax,', 'eax']
jz ['short', 'loc_119A9']
jmp ['$exit$480']
movzx ['ecx,', '[ebp+var_25]']
cmp ['ecx,', '13h']
jnz ['short', 'loc_119ED']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
call ['_cf2_arrstack_size']
add ['esp,', '4']
mov ['esi,', 'eax']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
call ['_cf2_arrstack_size']
add ['esp,', '4']
add ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_cf2_hintmask_read']
add ['esp,', '0Ch']
jmp ['loc_11A83']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_18C]']
push ['ecx']
lea ['edx,', '[ebp+var_10A8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_3E7C]']
push ['ecx']
call ['_cf2_hintmap_init']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_10]']
push ['edx']
lea ['eax,', '[ebp+var_3EA0]']
push ['eax']
call ['_cf2_hintmask_init']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_cf2_arrstack_size']
add ['esp,', '4']
mov ['esi,', 'eax']
lea ['edx,', '[ebp+var_B4]']
push ['edx']
call ['_cf2_arrstack_size']
add ['esp,', '4']
add ['esi,', 'eax']
push ['esi']
mov ['eax,', '[ebp+Dst]']
push ['eax']
lea ['ecx,', '[ebp+var_3EA0]']
push ['ecx']
call ['_cf2_hintmask_read']
add ['esp,', '0Ch']
push ['0']
push ['0']
lea ['edx,', '[ebp+var_3EA0]']
push ['edx']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
lea ['edx,', '[ebp+var_3E7C]']
push ['edx']
call ['_cf2_hintmap_build']
add ['esp,', '18h']
jmp ['loc_12677']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_11AA6']
push ['offset', '$SG15181']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$LN90']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '2']
jbe ['short', 'loc_11AD9']
movzx ['ecx,', '[ebp+var_59]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_11AD9']
push ['0']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_59],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+84h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2F1h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11AF6']
jmp ['$exit$480']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_popFixed']
add ['esp,', '4']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+arg_18],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_popFixed']
add ['esp,', '4']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+arg_14],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
lea ['eax,', '[ebp+var_2EE8]']
push ['eax']
call ['_cf2_glyphpath_moveTo']
add ['esp,', '0Ch']
jmp ['loc_12677']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11B54']
push ['offset', '$SG15189']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$LN83']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '1']
jbe ['short', 'loc_11B87']
movzx ['edx,', '[ebp+var_59]']
test ['edx,', 'edx']
jnz ['short', 'loc_11B87']
push ['0']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_59],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+84h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2F1h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11BA4']
jmp ['$exit$480']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_popFixed']
add ['esp,', '4']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_moveTo']
add ['esp,', '0Ch']
jmp ['loc_12677']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_3EA8],', 'eax']
mov ['[ebp+var_3EAC],', '0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11C0C']
push ['offset', '$SG15199']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_11BEE']
mov ['ecx,', '[ebp+var_3EAC]']
add ['ecx,', '6']
cmp ['ecx,', '[ebp+var_3EA8]']
jnb ['short', 'loc_11C7E']
mov ['edx,', '[ebp+var_3EAC]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+arg_14],', 'eax']
mov ['ecx,', '[ebp+var_3EAC]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+arg_18],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_lineTo']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_3EAC]']
add ['eax,', '2']
mov ['[ebp+var_3EAC],', 'eax']
jmp ['short', 'loc_11C10']
mov ['ecx,', '[ebp+var_3EAC]']
cmp ['ecx,', '[ebp+var_3EA8]']
jnb ['loc_11DB2']
mov ['edx,', '[ebp+var_3EAC]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_3EB0],', 'eax']
mov ['ecx,', '[ebp+var_3EAC]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_3EB4],', 'eax']
mov ['eax,', '[ebp+var_3EAC]']
add ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EB0]']
mov ['[ebp+var_3EB8],', 'eax']
mov ['edx,', '[ebp+var_3EAC]']
add ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EB4]']
mov ['[ebp+var_3EBC],', 'eax']
mov ['ecx,', '[ebp+var_3EAC]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EB8]']
mov ['[ebp+var_3EC0],', 'eax']
mov ['eax,', '[ebp+var_3EAC]']
add ['eax,', '5']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EBC]']
mov ['[ebp+var_3EC4],', 'eax']
mov ['edx,', '[ebp+var_3EC4]']
push ['edx']
mov ['eax,', '[ebp+var_3EC0]']
push ['eax']
mov ['ecx,', '[ebp+var_3EBC]']
push ['ecx']
mov ['edx,', '[ebp+var_3EB8]']
push ['edx']
mov ['eax,', '[ebp+var_3EB4]']
push ['eax']
mov ['ecx,', '[ebp+var_3EB0]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_curveTo']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+var_3EC0]']
mov ['[ebp+arg_14],', 'eax']
mov ['ecx,', '[ebp+var_3EC4]']
mov ['[ebp+arg_18],', 'ecx']
mov ['edx,', '[ebp+var_3EAC]']
add ['edx,', '6']
mov ['[ebp+var_3EAC],', 'edx']
jmp ['loc_11C7E']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_3EC8],', 'eax']
mov ['[ebp+var_3ECC],', '0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_11DFD']
push ['offset', '$SG15219']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_11DDF']
mov ['edx,', '[ebp+var_3ECC]']
cmp ['edx,', '[ebp+var_3EC8]']
jnb ['loc_11F47']
mov ['eax,', '[ebp+var_3EC8]']
sub ['eax,', '[ebp+var_3ECC]']
and ['eax,', '1']
jz ['short', 'loc_11E51']
mov ['ecx,', '[ebp+var_3ECC]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_3ED0],', 'eax']
mov ['eax,', '[ebp+var_3ECC]']
add ['eax,', '1']
mov ['[ebp+var_3ECC],', 'eax']
jmp ['short', 'loc_11E5A']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ebp+var_3ED0],', 'ecx']
mov ['edx,', '[ebp+var_3ECC]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_3ED4],', 'eax']
mov ['ecx,', '[ebp+var_3ECC]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3ED0]']
mov ['[ebp+var_3ED8],', 'eax']
mov ['eax,', '[ebp+var_3ECC]']
add ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3ED4]']
mov ['[ebp+var_3EDC],', 'eax']
mov ['edx,', '[ebp+var_3ED8]']
mov ['[ebp+var_3EE0],', 'edx']
mov ['eax,', '[ebp+var_3ECC]']
add ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EDC]']
mov ['[ebp+var_3EE4],', 'eax']
mov ['edx,', '[ebp+var_3EE4]']
push ['edx']
mov ['eax,', '[ebp+var_3EE0]']
push ['eax']
mov ['ecx,', '[ebp+var_3EDC]']
push ['ecx']
mov ['edx,', '[ebp+var_3ED8]']
push ['edx']
mov ['eax,', '[ebp+var_3ED4]']
push ['eax']
mov ['ecx,', '[ebp+var_3ED0]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_curveTo']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+var_3EE0]']
mov ['[ebp+arg_14],', 'eax']
mov ['ecx,', '[ebp+var_3EE4]']
mov ['[ebp+arg_18],', 'ecx']
mov ['edx,', '[ebp+var_3ECC]']
add ['edx,', '4']
mov ['[ebp+var_3ECC],', 'edx']
jmp ['loc_11E01']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_3EE8],', 'eax']
mov ['[ebp+var_3EEC],', '0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_11F92']
push ['offset', '$SG15238']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_11F74']
mov ['edx,', '[ebp+var_3EEC]']
cmp ['edx,', '[ebp+var_3EE8]']
jnb ['loc_120DC']
mov ['eax,', '[ebp+var_3EE8]']
sub ['eax,', '[ebp+var_3EEC]']
and ['eax,', '1']
jz ['short', 'loc_11FE6']
mov ['ecx,', '[ebp+var_3EEC]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_3EF4],', 'eax']
mov ['eax,', '[ebp+var_3EEC]']
add ['eax,', '1']
mov ['[ebp+var_3EEC],', 'eax']
jmp ['short', 'loc_11FEF']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ebp+var_3EF4],', 'ecx']
mov ['edx,', '[ebp+var_3EEC]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_3EF0],', 'eax']
mov ['ecx,', '[ebp+var_3EEC]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EF0]']
mov ['[ebp+var_3EF8],', 'eax']
mov ['eax,', '[ebp+var_3EEC]']
add ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EF4]']
mov ['[ebp+var_3EFC],', 'eax']
mov ['edx,', '[ebp+var_3EEC]']
add ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3EF8]']
mov ['[ebp+var_3F00],', 'eax']
mov ['ecx,', '[ebp+var_3EFC]']
mov ['[ebp+var_3F04],', 'ecx']
mov ['edx,', '[ebp+var_3F04]']
push ['edx']
mov ['eax,', '[ebp+var_3F00]']
push ['eax']
mov ['ecx,', '[ebp+var_3EFC]']
push ['ecx']
mov ['edx,', '[ebp+var_3EF8]']
push ['edx']
mov ['eax,', '[ebp+var_3EF4]']
push ['eax']
mov ['ecx,', '[ebp+var_3EF0]']
push ['ecx']
lea ['edx,', '[ebp+var_2EE8]']
push ['edx']
call ['_cf2_glyphpath_curveTo']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+var_3F00]']
mov ['[ebp+arg_14],', 'eax']
mov ['ecx,', '[ebp+var_3F04]']
mov ['[ebp+arg_18],', 'ecx']
mov ['edx,', '[ebp+var_3EEC]']
add ['edx,', '4']
mov ['[ebp+var_3EEC],', 'edx']
jmp ['loc_11F96']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_3F08],', 'eax']
mov ['[ebp+var_3F0C],', '0']
movzx ['edx,', '[ebp+var_25]']
cmp ['edx,', '1Fh']
jnz ['short', 'loc_1211E']
mov ['[ebp+var_3F6C],', '1']
jmp ['short', 'loc_12128']
mov ['[ebp+var_3F6C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_3F6C]']
mov ['[ebp+var_3F0D],', 'al']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_12175']
movzx ['eax,', '[ebp+var_3F0D]']
test ['eax,', 'eax']
jz ['short', 'loc_1215C']
mov ['[ebp+var_3F70],', 'offset', '$SG15258']
jmp ['short', 'loc_12166']
mov ['[ebp+var_3F70],', 'offset', '$SG15259']
mov ['ecx,', '[ebp+var_3F70]']
push ['ecx']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_12134']
mov ['eax,', '[ebp+var_3F0C]']
cmp ['eax,', '[ebp+var_3F08]']
jnb ['loc_123C2']
movzx ['ecx,', '[ebp+var_3F0D]']
test ['ecx,', 'ecx']
jz ['loc_12281']
mov ['edx,', '[ebp+var_3F0C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_3F14],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ebp+var_3F20],', 'ecx']
mov ['edx,', '[ebp+var_3F0C]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F14]']
mov ['[ebp+var_3F18],', 'eax']
mov ['ecx,', '[ebp+var_3F0C]']
add ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F20]']
mov ['[ebp+var_3F24],', 'eax']
mov ['eax,', '[ebp+var_3F0C]']
add ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F24]']
mov ['[ebp+var_3F28],', 'eax']
mov ['edx,', '[ebp+var_3F08]']
sub ['edx,', '[ebp+var_3F0C]']
cmp ['edx,', '5']
jnz ['short', 'loc_12269']
mov ['eax,', '[ebp+var_3F0C]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F18]']
mov ['[ebp+var_3F1C],', 'eax']
mov ['edx,', '[ebp+var_3F0C]']
add ['edx,', '1']
mov ['[ebp+var_3F0C],', 'edx']
jmp ['short', 'loc_12275']
mov ['eax,', '[ebp+var_3F18]']
mov ['[ebp+var_3F1C],', 'eax']
mov ['[ebp+var_3F0D],', '0']
jmp ['loc_12363']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ebp+var_3F14],', 'ecx']
mov ['edx,', '[ebp+var_3F0C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_3F20],', 'eax']
mov ['ecx,', '[ebp+var_3F0C]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F14]']
mov ['[ebp+var_3F18],', 'eax']
mov ['eax,', '[ebp+var_3F0C]']
add ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F20]']
mov ['[ebp+var_3F24],', 'eax']
mov ['edx,', '[ebp+var_3F0C]']
add ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F18]']
mov ['[ebp+var_3F1C],', 'eax']
mov ['ecx,', '[ebp+var_3F08]']
sub ['ecx,', '[ebp+var_3F0C]']
cmp ['ecx,', '5']
jnz ['short', 'loc_12350']
mov ['edx,', '[ebp+var_3F0C]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_3F24]']
mov ['[ebp+var_3F28],', 'eax']
mov ['ecx,', '[ebp+var_3F0C]']
add ['ecx,', '1']
mov ['[ebp+var_3F0C],', 'ecx']
jmp ['short', 'loc_1235C']
mov ['edx,', '[ebp+var_3F24]']
mov ['[ebp+var_3F28],', 'edx']
mov ['[ebp+var_3F0D],', '1']
mov ['eax,', '[ebp+var_3F28]']
push ['eax']
mov ['ecx,', '[ebp+var_3F1C]']
push ['ecx']
mov ['edx,', '[ebp+var_3F24]']
push ['edx']
mov ['eax,', '[ebp+var_3F18]']
push ['eax']
mov ['ecx,', '[ebp+var_3F20]']
push ['ecx']
mov ['edx,', '[ebp+var_3F14]']
push ['edx']
lea ['eax,', '[ebp+var_2EE8]']
push ['eax']
call ['_cf2_glyphpath_curveTo']
add ['esp,', '1Ch']
mov ['ecx,', '[ebp+var_3F1C]']
mov ['[ebp+arg_14],', 'ecx']
mov ['edx,', '[ebp+var_3F28]']
mov ['[ebp+arg_18],', 'edx']
mov ['eax,', '[ebp+var_3F0C]']
add ['eax,', '4']
mov ['[ebp+var_3F0C],', 'eax']
jmp ['loc_12179']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
mov ['esi,', 'eax']
shl ['esi,', '8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_buf_readByte']
add ['esp,', '4']
or ['esi,', 'eax']
movsx ['ecx,', 'si']
mov ['[ebp+var_3F2C],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_12420']
mov ['ecx,', '[ebp+var_3F2C]']
push ['ecx']
push ['offset', '$SG15282']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_123FB']
mov ['eax,', '[ebp+var_3F2C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_pushInt']
add ['esp,', '8']
jmp ['loc_1069B']
movzx ['edx,', '[ebp+var_25]']
cmp ['edx,', '0F6h']
jg ['short', 'loc_12498']
movzx ['eax,', '[ebp+var_25]']
sub ['eax,', '8Bh']
mov ['[ebp+var_3F30],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1247C']
mov ['eax,', '[ebp+var_3F30]']
push ['eax']
push ['offset', '$SG15290']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_12457']
mov ['edx,', '[ebp+var_3F30]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_pushInt']
add ['esp,', '8']
jmp ['loc_12672']
movzx ['ecx,', '[ebp+var_25]']
cmp ['ecx,', '0FAh']
jg ['loc_1253A']
movzx ['edx,', '[ebp+var_25]']
mov ['[ebp+var_3F34],', 'edx']
mov ['eax,', '[ebp+var_3F34]']
sub ['eax,', '0F7h']
mov ['[ebp+var_3F34],', 'eax']
mov ['ecx,', '[ebp+var_3F34]']
shl ['ecx,', '8']
mov ['[ebp+var_3F34],', 'ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
add ['eax,', '[ebp+var_3F34]']
mov ['[ebp+var_3F34],', 'eax']
mov ['eax,', '[ebp+var_3F34]']
add ['eax,', '6Ch']
mov ['[ebp+var_3F34],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_1251E']
mov ['eax,', '[ebp+var_3F34]']
push ['eax']
push ['offset', '$SG15298']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_124F9']
mov ['edx,', '[ebp+var_3F34]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_pushInt']
add ['esp,', '8']
jmp ['loc_12672']
movzx ['ecx,', '[ebp+var_25]']
cmp ['ecx,', '0FEh']
jg ['loc_125DE']
movzx ['edx,', '[ebp+var_25]']
mov ['[ebp+var_3F38],', 'edx']
mov ['eax,', '[ebp+var_3F38]']
sub ['eax,', '0FBh']
mov ['[ebp+var_3F38],', 'eax']
mov ['ecx,', '[ebp+var_3F38]']
shl ['ecx,', '8']
mov ['[ebp+var_3F38],', 'ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
add ['eax,', '[ebp+var_3F38]']
mov ['[ebp+var_3F38],', 'eax']
mov ['eax,', '[ebp+var_3F38]']
neg ['eax']
sub ['eax,', '6Ch']
mov ['[ebp+var_3F38],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_125C2']
mov ['eax,', '[ebp+var_3F38]']
push ['eax']
push ['offset', '$SG15306']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1259D']
mov ['edx,', '[ebp+var_3F38]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_pushInt']
add ['esp,', '8']
jmp ['loc_12672']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
mov ['esi,', 'eax']
shl ['esi,', '18h']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
shl ['eax,', '10h']
or ['esi,', 'eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_buf_readByte']
add ['esp,', '4']
shl ['eax,', '8']
or ['esi,', 'eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
or ['esi,', 'eax']
mov ['[ebp+var_3F3C],', 'esi']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_1265B']
cvtsi2sd ['xmm0,', '[ebp+var_3F3C]']
divsd ['xmm0,', 'ds:__real@40f0000000000000']
sub ['esp,', '8']
movsd ['[esp+3F80h+var_3F80],', 'xmm0']
push ['offset', '$SG15318']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_12625']
mov ['edx,', '[ebp+var_3F3C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_cf2_stack_pushFixed']
add ['esp,', '8']
jmp ['loc_1069B']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_cf2_stack_clear']
add ['esp,', '4']
jmp ['loc_1069B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_126A6']
push ['offset', '$SG15323']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_12688']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_2EE8]']
push ['ecx']
call ['_cf2_glyphpath_finalize']
add ['esp,', '4']
lea ['edx,', '[ebp+var_B4]']
push ['edx']
call ['_cf2_arrstack_finalize']
add ['esp,', '4']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
call ['_cf2_arrstack_finalize']
add ['esp,', '4']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_cf2_arrstack_finalize']
add ['esp,', '4']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_cf2_stack_free']
add ['esp,', '4']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_1271D']
push ['offset', '$SG15328']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_126FF']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN477']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3F70h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN476']
dd ['offset', '$LN466']
dd ['0FFFFFFA7h,', '1']
dd ['offset', '$LN467']
dd ['0FFFFFF74h,', '20h']
dd ['offset', '$LN468']
dd ['0FFFFFF4Ch,', '20h']
dd ['offset', '$LN469']
dd ['0FFFFFF28h,', '1Ch']
dd ['offset', '$LN470']
dd ['0FFFFD118h,', '2E08h']
dd ['offset', '$LN471']
dd ['0FFFFD0B8h,', '10h']
dd ['offset', '$LN472']
dd ['0FFFFD0ACh,', '4']
dd ['offset', '$LN473']
dd ['0FFFFC184h,', '0F1Ch']
dd ['offset', '$LN474']
dd ['0FFFFC160h,', '1Ch']
dd ['offset', '$LN475']
align ['4']
dd ['offset', '$LN410']
dd ['offset', '$LN399']
dd ['offset', '$LN388']
dd ['offset', '$LN381']
dd ['offset', '$LN373']
dd ['offset', '$LN363']
dd ['offset', '$LN355']
dd ['offset', '$LN335']
dd ['offset', '$LN329']
dd ['offset', '$LN116']
dd ['offset', '$LN103']
dd ['offset', '$LN90']
dd ['offset', '$LN83']
dd ['offset', '$LN76_0']
dd ['offset', '$LN67_1']
dd ['offset', '$LN58_0']
dd ['offset', '$LN36_0']
dd ['offset', '$LN49_0']
db ['3,', '4,', '5,', '5']
db ['6,', '0,', '7,', '8']
db ['9,', '0,', '0Ah,', '0']
db ['0,', '0,', '1,', '0Bh']
db ['0Bh,', '0Ch,', '0Dh,', '2']
db ['6,', '0Eh,', '0Fh,', '10h']
db ['11h,', '7,', '12h,', '12h']
dd ['offset', '$LN321']
dd ['offset', '$LN312']
dd ['offset', '$LN303']
dd ['offset', '$LN294']
dd ['offset', '$LN285']
dd ['offset', '$LN276']
dd ['offset', '$LN267']
dd ['offset', '$LN258']
dd ['offset', '$LN249']
dd ['offset', '$LN240']
dd ['offset', '$LN231']
dd ['offset', '$LN222']
dd ['offset', '$LN213']
dd ['offset', '$LN204']
dd ['offset', '$LN195']
dd ['offset', '$LN186']
dd ['offset', '$LN177']
dd ['offset', '$LN168']
dd ['offset', '$LN159']
dd ['offset', '$LN150']
dd ['offset', '$LN141']
dd ['offset', '$LN136']
dd ['offset', '$LN131']
dd ['offset', '$LN126']
dd ['offset', '$LN121']
db ['2,', '3,', '19h,', '19h']
db ['19h,', '4,', '5,', '6']
db ['7,', '19h,', '8,', '9']
db ['19h,', '19h,', '0Ah,', '19h']
db ['0Bh,', '0Ch,', '0Dh,', '0Eh']
db ['0Fh,', '19h,', '10h,', '11h']
db ['12h,', '13h,', '14h,', '19h']
db ['19h,', '19h,', '15h,', '16h']
db ['17h,', '18h']
db ['0Ah', 'dup(0CCh)']
endp
_cf2_computeDarkening proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_1297F']
movzx ['ecx,', '[ebp+arg_14]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1297F']
jmp ['loc_12C40']
cmp ['[ebp+arg_0],', '28Fh']
jge ['short', 'loc_1298D']
jmp ['loc_12C40']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jz ['loc_12C2E']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_MSB']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_MSB']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['[ebp+var_C],', 'esi']
cmp ['[ebp+var_C],', '2Eh']
jl ['short', 'loc_12A66']
mov ['eax,', '[ebp+var_28]']
shl ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_12A79']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '10h']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_12AA1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '10h']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
jmp ['loc_12C15']
mov ['edx,', '[ebp+var_18]']
shl ['edx,', '10h']
cmp ['[ebp+var_8],', 'edx']
jge ['short', 'loc_12B16']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_10]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_12AE1']
jmp ['short', '$Try_x3$19']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'esi']
jmp ['loc_12C15']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '10h']
cmp ['[ebp+var_8],', 'edx']
jge ['short', 'loc_12B8B']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_12B56']
jmp ['short', '$Try_x4$20']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'esi']
jmp ['loc_12C15']
mov ['edx,', '[ebp+var_28]']
shl ['edx,', '10h']
cmp ['[ebp+var_8],', 'edx']
jge ['short', '$Use_y4$21']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_12BCB']
jmp ['short', '$Use_y4$21']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'esi']
jmp ['short', 'loc_12C15']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '10h']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
add ['eax,', '[ecx]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_font_setup	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_5],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+5Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+60h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cf2_getSubfont']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+88h]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_12CCB']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+88h],', 'edx']
mov ['[ebp+var_5],', '1']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getPpemY']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
cmp ['edx,', '[ebp+var_18]']
jz ['short', 'loc_12CF2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+54h],', 'ecx']
mov ['[ebp+var_5],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
and ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8Ch],', 'al']
push ['10h']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['loc_12DB7']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
mov ['edx,', '[ebp+Buf1]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[edx+14h]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '24h']
mov ['eax,', '[ebp+Buf1]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
mov ['ecx,', '[eax+4]']
mov ['[edx+4],', 'ecx']
mov ['ecx,', '[eax+8]']
mov ['[edx+8],', 'ecx']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['ecx,', '[eax+10h]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[eax+14h]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '10000h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+3Ch],', '10000h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+40h],', '0']
mov ['[ebp+var_5],', '1']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Eh]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
and ['edx,', '2']
cmp ['eax,', 'edx']
jz ['short', 'loc_12DE4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8Eh],', 'cl']
mov ['[ebp+var_5],', '1']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['loc_13008']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_12E06']
mov ['[ebp+var_24],', '3E8h']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+54h],', '40000h']
jge ['short', 'loc_12E1B']
mov ['[ebp+var_28],', '40000h']
jmp ['short', 'loc_12E24']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '3E80000h']
cdq
idiv ['[ebp+var_24]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cf2_getStdVW']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0B0h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0B0h],', '0']
jg ['short', 'loc_12E71']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['4B0000h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0B0h],', 'eax']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_12EE8']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
shl ['ecx,', '10h']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
cmp ['[ebp+var_C],', 'eax']
jle ['short', 'loc_12E97']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_12EAD']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
shl ['ecx,', '10h']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '90h']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0B8h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0B0h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_cf2_computeDarkening']
add ['esp,', '1Ch']
jmp ['short', 'loc_12F23']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '90h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8Eh]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0B8h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0B0h]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_cf2_computeDarkening']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cf2_getStdHW']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_12F64']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+0B0h],', 'ecx']
jle ['short', 'loc_12F64']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['4B0000h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0B4h],', 'eax']
jmp ['short', 'loc_12F7E']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
push ['6E0000h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0B4h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '90h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8Eh]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0BCh']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B4h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_cf2_computeDarkening']
add ['esp,', '1Ch']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0B8h],', '0']
jnz ['short', 'loc_12FD2']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0BCh],', '0']
jz ['short', 'loc_12FDE']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+8Dh],', '1']
jmp ['short', 'loc_12FE8']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+8Dh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0C0h],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0C4h']
push ['edx']
call ['_cf2_blues_init']
add ['esp,', '8']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_checkTransform proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_13041']
push ['offset', '$SG13273']
push ['3Eh']
push ['offset', '$SG13274']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_13027']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jle ['short', 'loc_13056']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jg ['short', 'loc_1306F']
push ['offset', '$SG13277']
push ['41h']
push ['24h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '24h']
jmp ['loc_13130']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_13081']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['short', 'loc_13095']
push ['offset', '$SG13283']
push ['43h']
push ['offset', '$SG13284']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_1306F']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_130AB']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_130BF']
push ['offset', '$SG13290']
push ['44h']
push ['offset', '$SG13291']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13099']
cmp ['[ebp+arg_4],', '7FFFh']
jle ['short', 'loc_130E7']
push ['offset', '$SG13293']
push ['47h']
push ['0A4h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A4h']
jmp ['short', 'loc_13130']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '10h']
push ['eax']
push ['7D00000h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_4]']
jg ['short', 'loc_13113']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_4]']
jle ['short', 'loc_1312E']
push ['offset', '$SG13300']
push ['4Ch']
push ['0A4h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A4h']
jmp ['short', 'loc_13130']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_setGlyphWidth proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1317A']
push ['offset', '$SG13312']
push ['59h']
push ['offset', '$SG13313']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13160']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8000h']
shr ['eax,', '10h']
movsx ['ecx,', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2E8h],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cf2_free_instance proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_131D4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cf2_builder_moveTo proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13205']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jnz ['short', 'loc_1321C']
push ['offset', '$SG13340']
push ['82h']
push ['offset', '$SG13341']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_131F6']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+20h],', '1']
jz ['short', 'loc_13240']
push ['offset', '$SG13346']
push ['83h']
push ['offset', '$SG13347']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_13220']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_cff_builder_close_contour']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+40h],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_builder_lineTo proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_132AC']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jnz ['short', 'loc_132C3']
push ['offset', '$SG13363']
push ['98h']
push ['offset', '$SG13364']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_1329D']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+20h],', '2']
jz ['short', 'loc_132E7']
push ['offset', '$SG13369']
push ['99h']
push ['offset', '$SG13370']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_132C7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+40h]']
test ['edx,', 'edx']
jnz ['short', 'loc_13339']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_cff_builder_start_point']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13339']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_13337']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_13372']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_cff_builder_add_point1']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13372']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_13372']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_builder_cubeTo proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_133BC']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jnz ['short', 'loc_133D3']
push ['offset', '$SG13391']
push ['0C4h']
push ['offset', '$SG13392']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_133AD']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+20h],', '4']
jz ['short', 'loc_133F7']
push ['offset', '$SG13397']
push ['0C5h']
push ['offset', '$SG13398']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_133D7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+40h]']
test ['edx,', 'edx']
jnz ['short', 'loc_1344C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_cff_builder_start_point']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1344C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_13447']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
jmp ['loc_134CF']
push ['3']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_cff_check_points']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1347B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_13479']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_134CF']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_cff_builder_add_point']
add ['esp,', '10h']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_cff_builder_add_point']
add ['esp,', '10h']
push ['1']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_cff_builder_add_point']
add ['esp,', '10h']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cf2_outline_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['20h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx],', 'offset', '_cf2_builder_moveTo']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '_cf2_builder_lineTo']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+0Ch],', 'offset', '_cf2_builder_cubeTo']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_getScaleAndHintFlag proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1354E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_13565']
push ['offset', '$SG13430']
push ['105h']
push ['offset', '$SG13431']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1353F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['dl,', '[eax+0A0h]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_10]']
mov ['al,', '[ecx+0A1h]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_135D1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ecx+0A4h]']
add ['eax,', '20h']
cdq
and ['edx,', '3Fh']
add ['eax,', 'edx']
sar ['eax,', '6']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ecx+0A8h]']
add ['eax,', '20h']
cdq
and ['edx,', '3Fh']
add ['eax,', 'edx']
sar ['eax,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_135E3']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '400h']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '400h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_cf2_getUnitsPerEm proc	near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_135FE']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_13615']
push ['offset', '$SG13443']
push ['120h']
push ['offset', '$SG13444']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_135EF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movzx ['ecx,', 'word', 'ptr', '[eax+44h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1363E']
push ['offset', '$SG13449']
push ['121h']
push ['offset', '$SG13450']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13619']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['ax,', '[ecx+44h]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_cf2_getWindingMomentum	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '10h']
imul ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sar ['edx,', '10h']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '10h']
imul ['edx,', 'ecx']
sub ['eax,', 'edx']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_hint_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['14h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_arrstack_getPointer']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0FFEB0000h']
jnz ['short', 'loc_13708']
movzx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jz ['short', 'loc_136FA']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx],', '1']
jmp ['short', 'loc_13703']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx],', '0']
jmp ['loc_137AB']
cmp ['[ebp+var_4],', '0FFEC0000h']
jnz ['short', 'loc_1373B']
movzx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jz ['short', 'loc_13724']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx],', '0']
jmp ['short', 'loc_13739']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx],', '2']
jmp ['short', 'loc_137AB']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_13777']
movzx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jz ['short', 'loc_13760']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx],', '4']
jmp ['short', 'loc_13775']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx],', '8']
jmp ['short', 'loc_137AB']
movzx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jz ['short', 'loc_13796']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx],', '4']
jmp ['short', 'loc_137AB']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[edx],', '8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_hint_isTop']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_137D6']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+0BCh]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+8]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+8]']
add ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+arg_14]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_13844']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_13844']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_cf2_hint_isTop']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1382A']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+0Ch],', 'ecx']
jmp ['short', 'loc_13836']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_cf2_hint_lock']
add ['esp,', '4']
jmp ['short', 'loc_1385D']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0Ch],', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cf2_hint_initZero proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['14h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_cf2_hint_isPair proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
and ['ecx,', '0Ch']
jz ['short', 'loc_138A7']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_138AB']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_hint_isPairTop proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
and ['ecx,', '8']
jz ['short', 'loc_138D7']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_138DB']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_hint_isLocked proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
and ['ecx,', '10h']
jz ['short', 'loc_13907']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_1390B']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_hint_isSynthetic proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
and ['ecx,', '20h']
jz ['short', 'loc_13937']
mov ['byte', 'ptr', '[ebp+var_4+3],', '1']
jmp ['short', 'loc_1393B']
mov ['byte', 'ptr', '[ebp+var_4+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_cf2_hintmap_isValid proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['al,', '[eax+0Ch]']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_hintmap_map proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_1397B']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Dh]']
test ['edx,', 'edx']
jnz ['short', 'loc_13998']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
jmp ['loc_13A9D']
jmp ['loc_13A9D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+18h],', '0C0h']
jb ['short', 'loc_139C4']
push ['offset', '$SG13890']
push ['13Dh']
push ['offset', '$SG13891']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_139A1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '1']
cmp ['[ebp+var_4],', 'edx']
jnb ['short', 'loc_139F6']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
imul ['ecx,', 'eax,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+ecx+24h]']
jl ['short', 'loc_139F6']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_139C8']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_13A17']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+edx+24h]']
jge ['short', 'loc_13A17']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_139F6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+18h],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_13A6F']
mov ['edx,', '14h']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax+24h]']
jge ['short', 'loc_13A6F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '14h']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ecx+eax+24h]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '14h']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx+28h]']
jmp ['short', 'loc_13A9D']
jmp ['short', 'loc_13A9D']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx+2Ch]']
push ['ecx']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+edx+24h]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx+28h]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cf2_hintmap_adjustHints proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '6Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_6C]']
mov ['ecx,', '1Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_cf2_arrstack_clear']
add ['esp,', '4']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_13AE4']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+14h]']
jnb ['loc_13FDB']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
call ['_cf2_hint_isPair']
add ['esp,', '4']
mov ['[ebp+var_9],', 'al']
movzx ['edx,', '[ebp+var_9]']
test ['edx,', 'edx']
jz ['short', 'loc_13B1D']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_13B23']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_13B4B']
push ['offset', '$SG13918']
push ['185h']
push ['offset', '$SG13919']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13B29']
imul ['eax,', '[ebp+var_4],', '14h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Ch]']
push ['edx']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_13B81']
push ['offset', '$SG13924']
push ['186h']
push ['offset', '$SG13925']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_13B4F']
imul ['edx,', '[ebp+var_8],', '14h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_13BB7']
push ['offset', '$SG13930']
push ['187h']
push ['offset', '$SG13931']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_13B85']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1Ch]']
push ['eax']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['esi,', 'al']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1Ch]']
push ['eax']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['ecx,', 'al']
cmp ['esi,', 'ecx']
jz ['short', 'loc_13C04']
push ['offset', '$SG13936']
push ['189h']
push ['offset', '$SG13937']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13BBB']
imul ['eax,', '[ebp+var_4],', '14h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Ch]']
push ['edx']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_13E6C']
imul ['ecx,', '[ebp+var_4],', '14h']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax+edx+28h]']
and ['edx,', '0FFFF0000h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+ecx+28h]']
sub ['ecx,', 'edx']
mov ['[ebp+var_10],', 'ecx']
imul ['edx,', '[ebp+var_8],', '14h']
imul ['eax,', '[ebp+var_8],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax+28h]']
and ['eax,', '0FFFF0000h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+edx+28h]']
sub ['edx,', 'eax']
mov ['[ebp+var_14],', 'edx']
xor ['eax,', 'eax']
sub ['eax,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'eax']
xor ['ecx,', 'ecx']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_13C87']
mov ['[ebp+var_58],', '0']
jmp ['short', 'loc_13C92']
mov ['edx,', '10000h']
sub ['edx,', '[ebp+var_10]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_13CA7']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_13CB2']
mov ['ecx,', '10000h']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_24]']
jge ['short', 'loc_13CC8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_60],', 'ecx']
jmp ['short', 'loc_13CCE']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_1C]']
jle ['short', 'loc_13CE4']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_64],', 'edx']
jmp ['short', 'loc_13CEA']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_64]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_34],', '8000h']
mov ['[ebp+var_38],', '8000h']
mov ['[ebp+var_39],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_13D33']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
imul ['edx,', 'ecx,', '14h']
imul ['eax,', '[ebp+var_8],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax+28h]']
add ['eax,', '[ebp+var_28]']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+edx+28h],', 'eax']
jl ['short', 'loc_13D84']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13D5C']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '14h']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+28h]']
add ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+eax+28h],', 'ecx']
jg ['short', 'loc_13D7C']
mov ['eax,', '[ebp+var_2C]']
neg ['eax']
cmp ['eax,', '[ebp+var_28]']
jge ['short', 'loc_13D6E']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_68],', 'ecx']
jmp ['short', 'loc_13D74']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_13D82']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_13DDA']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13DAD']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '14h']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+28h]']
add ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+eax+28h],', 'ecx']
jg ['short', 'loc_13DCF']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
neg ['ecx']
cmp ['[ebp+var_28],', 'ecx']
jge ['short', 'loc_13DC3']
mov ['[ebp+var_69],', '1']
jmp ['short', 'loc_13DC7']
mov ['[ebp+var_69],', '0']
mov ['dl,', '[ebp+var_69]']
mov ['[ebp+var_39],', 'dl']
jmp ['short', 'loc_13DDA']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_39],', '1']
movzx ['eax,', '[ebp+var_39]']
test ['eax,', 'eax']
jz ['short', 'loc_13E32']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '1']
cmp ['[ebp+var_8],', 'edx']
jnb ['short', 'loc_13E32']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
imul ['ecx,', 'eax,', '14h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1Ch]']
push ['eax']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_13E32']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+Src],', 'edx']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '[ebp+var_30]']
mov ['[ebp+var_44],', 'eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_cf2_arrstack_push']
add ['esp,', '8']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+28h]']
add ['eax,', '[ebp+var_30]']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx+28h],', 'eax']
movzx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jz ['short', 'loc_13E6C']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+28h]']
add ['eax,', '[ebp+var_30]']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx+28h],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13EA6']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
imul ['ecx,', 'eax,', '14h']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[eax+ecx+28h]']
cmp ['ecx,', '[esi+edx+28h]']
jle ['short', 'loc_13EA6']
push ['offset', '$SG13976']
push ['1F5h']
push ['offset', '$SG13977']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13E6C']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jb ['short', 'loc_13EE1']
imul ['ecx,', '[ebp+var_4],', '14h']
imul ['edx,', '[ebp+var_8],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[eax+ecx+28h]']
cmp ['ecx,', '[esi+edx+28h]']
jle ['short', 'loc_13EE1']
push ['offset', '$SG13982']
push ['1F7h']
push ['offset', '$SG13983']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_13EAA']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_13F58']
imul ['eax,', '[ebp+var_4],', '14h']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
imul ['edx,', 'ecx,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax+24h]']
cmp ['eax,', '[esi+edx+24h]']
jz ['short', 'loc_13F58']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+24h]']
sub ['ecx,', '[esi+eax+24h]']
push ['ecx']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
imul ['ecx,', 'eax,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['edx,', '[eax+edx+28h]']
sub ['edx,', '[esi+ecx+28h]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
imul ['edx,', 'ecx,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx+2Ch],', 'eax']
movzx ['edx,', '[ebp+var_9]']
test ['edx,', 'edx']
jz ['short', 'loc_13FD6']
imul ['eax,', '[ebp+var_8],', '14h']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
imul ['edx,', 'ecx,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax+24h]']
cmp ['eax,', '[esi+edx+24h]']
jz ['short', 'loc_13FCD']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+24h]']
sub ['ecx,', '[esi+eax+24h]']
push ['ecx']
imul ['edx,', '[ebp+var_8],', '14h']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
imul ['ecx,', 'eax,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['edx,', '[eax+edx+28h]']
sub ['edx,', '[esi+ecx+28h]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
imul ['edx,', 'ecx,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_13ADB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_cf2_arrstack_size']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_13FF8']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jbe ['loc_140F9']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_cf2_arrstack_getPointer']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jb ['short', 'loc_14048']
push ['offset', '$SG13997']
push ['21Ah']
push ['offset', '$SG13998']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_14023']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
imul ['eax,', 'edx,', '14h']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+28h]']
mov ['edx,', '[ebp+var_50]']
mov ['edx,', '[edx+4]']
lea ['ecx,', '[ecx+edx+8000h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+eax+28h],', 'ecx']
jl ['short', 'loc_140F4']
imul ['eax,', '[ebp+var_8],', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+28h]']
mov ['eax,', '[ebp+var_50]']
add ['edx,', '[eax+4]']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+ecx+28h],', 'edx']
imul ['ecx,', '[ebp+var_8],', '14h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1Ch]']
push ['eax']
call ['_cf2_hint_isPair']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_140F4']
cmp ['[ebp+var_8],', '0']
ja ['short', 'loc_140CA']
push ['offset', '$SG14006']
push ['225h']
push ['offset', '$SG14007']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_140AD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
imul ['ecx,', 'eax,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+28h]']
mov ['ecx,', '[ebp+var_50]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
imul ['ecx,', 'edx,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx+28h],', 'eax']
jmp ['loc_13FEF']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN75_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '6Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN74_0']
dd ['offset', '$LN73_0']
align ['4']
endp
_cf2_hintmap_insertHint	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1419F']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1419F']
push ['offset', '$SG14024']
push ['23Eh']
push ['offset', '$SG14025']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_14162']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_141C2']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_141D9']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_cf2_hint_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_141D9']
mov ['[ebp+var_5],', '0']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_14206']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jge ['short', 'loc_14206']
push ['offset', '$SG14033']
push ['24Fh']
push ['offset', '$SG14034']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_141D9']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1421C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1423E']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+edx+24h]']
cmp ['edx,', '[ecx+8]']
jl ['short', 'loc_1423C']
jmp ['short', 'loc_1423E']
jmp ['short', 'loc_14213']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_142A1']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+edx+24h]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_14261']
jmp ['loc_14507']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_14281']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+ecx+24h]']
cmp ['ecx,', '[eax+8]']
jg ['short', 'loc_14281']
jmp ['loc_14507']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
call ['_cf2_hint_isPairTop']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_142A1']
jmp ['loc_14507']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_cf2_hintmap_isValid']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_14358']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_cf2_hint_isLocked']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_14358']
movzx ['edx,', '[ebp+var_5]']
test ['edx,', 'edx']
jz ['short', 'loc_1433C']
mov ['eax,', '[ebp+var_10]']
mov ['eax,', '[eax+8]']
mov ['ecx,', '[ebp+var_C]']
add ['eax,', '[ecx+8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_hintmap_map']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+0Ch],', 'ecx']
jmp ['short', 'loc_14358']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_hintmap_map']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_1437B']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '14h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+0Ch]']
cmp ['ecx,', '[edx+eax+28h]']
jge ['short', 'loc_1437B']
jmp ['loc_14507']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+14h]']
jnb ['short', 'loc_143C0']
movzx ['ecx,', '[ebp+var_5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_143A8']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[eax+0Ch]']
cmp ['eax,', '[ecx+edx+28h]']
jle ['short', 'loc_143A6']
jmp ['loc_14507']
jmp ['short', 'loc_143C0']
imul ['ecx,', '[ebp+var_4],', '14h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[edx+0Ch]']
cmp ['edx,', '[eax+ecx+28h]']
jle ['short', 'loc_143C0']
jmp ['loc_14507']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
movzx ['edx,', '[ebp+var_5]']
test ['edx,', 'edx']
jz ['short', 'loc_143E2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_143EB']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+var_4]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_20],', '0C0h']
jl ['short', 'loc_1442D']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '34h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_14424']
push ['offset', '$SG14065']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_14406']
jmp ['loc_14507']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_14488']
imul ['eax,', '[ebp+var_1C],', '14h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Ch]']
imul ['eax,', '[ebp+var_20],', '14h']
mov ['ecx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+eax+1Ch]']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[edx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_1442D']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[edx+10h]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_14507']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
imul ['edx,', 'ecx,', '14h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[edx+10h]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_cf2_glyphpath_hintPoint proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D7Ch]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D80h]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['[ebp+var_C],', 'esi']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cf2_hintmap_map']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+44h]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['esi,', '[ecx+2D88h]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'esi']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+40h]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+48h]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['edx,', '[ebp+arg_0]']
add ['esi,', '[edx+2D8Ch]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+4],', 'esi']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
endp
_cf2_glyphpath_computeIntersection proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
add ['edx,', '10h']
sar ['edx,', '5']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
add ['edx,', '10h']
sar ['edx,', '5']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
add ['edx,', '10h']
sar ['edx,', '5']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
add ['edx,', '10h']
sar ['edx,', '5']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
add ['edx,', '10h']
sar ['edx,', '5']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
add ['edx,', '10h']
sar ['edx,', '5']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
sub ['esi,', 'eax']
mov ['[ebp+var_34],', 'esi']
jnz ['short', 'loc_146EB']
xor ['al,', 'al']
jmp ['loc_14978']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
sub ['esi,', 'eax']
push ['esi']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx]']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_147B3']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
jns ['short', 'loc_1478E']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
neg ['edx']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_1479B']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[eax+2DB4h]']
jge ['short', 'loc_147B3']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_1480B']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax+4]']
jns ['short', 'loc_147E2']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax+4]']
neg ['ecx']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_147F1']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[edx+2DB4h]']
jge ['short', 'loc_1480B']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_14859']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx]']
sub ['eax,', '[edx]']
jns ['short', 'loc_14834']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx]']
sub ['eax,', '[edx]']
neg ['eax']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_14841']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx]']
sub ['eax,', '[edx]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ecx+2DB4h]']
jge ['short', 'loc_14859']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_148B1']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
jns ['short', 'loc_14888']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
neg ['edx']
mov ['[ebp+var_48],', 'edx']
jmp ['short', 'loc_14897']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[eax+2DB4h]']
jge ['short', 'loc_148B1']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+4]']
mov ['[edx+4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_C]']
add ['eax,', '[ecx]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+arg_14]']
mov ['ecx,', '[edx]']
sub ['ecx,', 'eax']
jns ['short', 'loc_148E6']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_C]']
add ['eax,', '[ecx]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+arg_14]']
mov ['ecx,', '[edx]']
sub ['ecx,', 'eax']
neg ['ecx']
mov ['[ebp+var_4C],', 'ecx']
jmp ['short', 'loc_148FF']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_C]']
add ['eax,', '[ecx]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+arg_14]']
mov ['ecx,', '[edx]']
sub ['ecx,', 'eax']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4C]']
cmp ['eax,', '[edx+2DB0h]']
jg ['short', 'loc_14972']
mov ['ecx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+arg_C]']
add ['eax,', '[edx+4]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx+4]']
sub ['edx,', 'eax']
jns ['short', 'loc_14948']
mov ['eax,', '[ebp+arg_8]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+arg_C]']
add ['eax,', '[ecx+4]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+arg_14]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', 'eax']
neg ['ecx']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_14964']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_C]']
add ['eax,', '[ecx+4]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+arg_14]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[edx+2DB0h]']
jle ['short', 'loc_14976']
xor ['al,', 'al']
jmp ['short', 'loc_14978']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN25_2']
dd ['offset', '$LN22_1']
dd ['0FFFFFFE4h,', '8']
dd ['offset', '$LN23_1']
dd ['0FFFFFFD4h,', '8']
dd ['offset', '$LN24_3']
align ['2']
endp
_cf2_glyphpath_pushPrevElem proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_40],', '0']
mov ['[ebp+var_49],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+2DE4h],', '2']
jz ['short', 'loc_14A3E']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+2DE4h],', '4']
jz ['short', 'loc_14A3E']
push ['offset', '$SG14238']
push ['4DFh']
push ['offset', '$SG14239']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_14A0F']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+2DE4h],', '2']
jnz ['short', 'loc_14A68']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2DE8h']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2DF0h']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_14A7F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2DF8h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2E00h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnz ['short', 'loc_14A99']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_14AD2']
lea ['edx,', '[ebp+var_44]']
push ['edx']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_computeIntersection']
add ['esp,', '18h']
mov ['[ebp+var_49],', 'al']
movzx ['edx,', '[ebp+var_49]']
test ['edx,', 'edx']
jz ['short', 'loc_14AD2']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DD0h]']
mov ['edx,', '[eax+2DD4h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DE4h]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_14B08']
cmp ['[ebp+var_50],', '4']
jz ['loc_14BBB']
jmp ['loc_14C71']
mov ['[ebp+var_C],', '2']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jz ['short', 'loc_14B47']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DF4h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DF0h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0F24h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
jmp ['short', 'loc_14B6F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DF4h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DF0h]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_24]']
jnz ['short', 'loc_14B7F']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_14BB6']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+2DD0h],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ecx+2DD4h],', 'eax']
jmp ['loc_14C71']
mov ['[ebp+var_C],', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DF4h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DF0h]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DFCh]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DF8h]']
push ['edx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2E04h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2E00h]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+2DD0h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ecx+2DD4h],', 'eax']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_14C85']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jz ['loc_14D45']
movzx ['eax,', '[ebp+arg_14]']
test ['eax,', 'eax']
jz ['short', 'loc_14CB5']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0F24h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
jmp ['short', 'loc_14CD6']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+2DD0h]']
jnz ['short', 'loc_14CF2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+2DD4h]']
jz ['short', 'loc_14D45']
mov ['[ebp+var_C],', '2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DD0h]']
mov ['eax,', '[ecx+2DD4h]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_28],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+2DD0h],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ecx+2DD4h],', 'eax']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_14D5B']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_44]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[edx+4],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN29_1']
dd ['offset', '$LN27_0']
dd ['0FFFFFFBCh,', '8']
dd ['offset', '$LN28_1']
endp
_cf2_glyphpath_pushMove	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DD0h]']
mov ['edx,', '[eax+2DD4h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
call ['_cf2_hintmap_isValid']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_14E2F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DDCh]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DD8h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_glyphpath_moveTo']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_glyphpath_hintPoint']
add ['esp,', '14h']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+2DD0h],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[eax+2DD4h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+2DB8h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[eax+2DBCh],', 'edx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_4']
dd ['offset', '$LN4_1']
db ['0Dh', 'dup(0CCh)']
endp
_cf2_glyphpath_computeOffset proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_14F33']
mov ['edx,', '[ebp+var_4]']
neg ['edx']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2D92h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_14F58']
jmp ['loc_151C5']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[edx+4]']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cf2_getWindingMomentum']
add ['esp,', '10h']
add ['eax,', '[esi+10h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_4],', '0']
jl ['loc_150A1']
cmp ['[ebp+var_8],', '0']
jl ['loc_15019']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
cmp ['[ebp+var_4],', 'eax']
jle ['short', 'loc_14FB4']
mov ['ecx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[edx],', '0']
jmp ['short', 'loc_15014']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jle ['short', 'loc_14FDC']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DA8h]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DACh]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_15014']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DA8h]']
push ['edx']
push ['0B333h']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DACh]']
push ['eax']
push ['4CCDh']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
jmp ['loc_1509C']
imul ['edx,', '[ebp+var_8],', '0FEh']
cmp ['[ebp+var_4],', 'edx']
jle ['short', 'loc_15036']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[ecx],', '0']
jmp ['short', 'loc_1509C']
mov ['edx,', '[ebp+var_8]']
neg ['edx']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '1']
cmp ['edx,', 'eax']
jle ['short', 'loc_15064']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DA8h]']
neg ['edx']
mov ['eax,', '[ebp+arg_14]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DACh]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_1509C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DA8h]']
push ['edx']
push ['0FFFF4CCEh']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DACh]']
push ['eax']
push ['4CCDh']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
jmp ['loc_151C5']
cmp ['[ebp+var_8],', '0']
jl ['loc_15138']
mov ['edx,', '[ebp+var_4]']
neg ['edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
cmp ['edx,', 'eax']
jle ['short', 'loc_150D4']
mov ['ecx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DACh]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_15133']
imul ['edx,', '[ebp+var_4],', '0FEh']
cmp ['[ebp+var_8],', 'edx']
jle ['short', 'loc_150FB']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DA8h]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2DACh]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_15133']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DA8h]']
push ['ecx']
push ['0B333h']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DACh]']
push ['ecx']
push ['1B333h']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_18]']
mov ['[edx],', 'eax']
jmp ['loc_151C5']
mov ['eax,', '[ebp+var_4]']
neg ['eax']
imul ['ecx,', '[ebp+var_8],', '0FEh']
cmp ['eax,', 'ecx']
jle ['short', 'loc_15160']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DACh]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_18]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_151C5']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
imul ['ecx,', '[ebp+var_4],', '0FEh']
cmp ['eax,', 'ecx']
jle ['short', 'loc_1518D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DA8h]']
neg ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DACh]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_151C5']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DA8h]']
push ['eax']
push ['0FFFF4CCEh']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DACh]']
push ['eax']
push ['1B333h']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_cf2_stack_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_10],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['18Ch']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ft_mem_qalloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_15248']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+188h],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_5']
dd ['offset', '$LN4_2']
db ['6', 'dup(0CCh)']
endp
_cf2_stack_free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_152C0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_0],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_152A5']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cf2_stack_count proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
sub ['edx,', 'eax']
sar ['edx,', '3']
mov ['eax,', 'edx']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_stack_pushInt proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '30h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+188h],', 'eax']
jnz ['short', 'loc_15354']
push ['offset', '$SG15370']
push ['64h']
push ['82h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '82h']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
jmp ['short', 'loc_15387']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['dword', 'ptr', '[edx+4],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+188h]']
add ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+188h],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_stack_pushFixed proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '30h']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+188h],', 'eax']
jnz ['short', 'loc_153E4']
push ['offset', '$SG15377']
push ['74h']
push ['82h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '82h']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
jmp ['short', 'loc_15417']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+188h]']
add ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+188h],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cf2_stack_popInt proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+188h],', 'eax']
jnz ['short', 'loc_15479']
push ['offset', '$SG15382']
push ['84h']
push ['0A1h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A1h']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['short', 'loc_154E1']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '-1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+188h]']
cmp ['dword', 'ptr', '[ecx+edx+4],', '2']
jz ['short', 'loc_154C1']
push ['offset', '$SG15384']
push ['89h']
push ['0A0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A0h']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['short', 'loc_154E1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
sub ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+188h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['eax,', '[edx]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_cf2_stack_popFixed proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+188h],', 'eax']
jnz ['short', 'loc_1554D']
push ['offset', '$SG15389']
push ['9Ah']
push ['0A1h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A1h']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_cf2_setError']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['loc_155E1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
sub ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+188h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_1558F']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_1557F']
jmp ['short', 'loc_155D6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['eax,', '[edx]']
shl ['eax,', '10h']
jmp ['short', 'loc_155E1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+188h]']
cmp ['dword', 'ptr', '[ecx],', '0']
jge ['short', 'loc_155BA']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+188h]']
mov ['ecx,', '[eax]']
neg ['ecx']
add ['ecx,', '2000h']
sar ['ecx,', '0Eh']
neg ['ecx']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_155D1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+188h]']
mov ['ecx,', '[eax]']
add ['ecx,', '2000h']
sar ['ecx,', '0Eh']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_155E1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+188h]']
mov ['eax,', '[eax]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_cf2_stack_getReal proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['eax,', '30h']
jbe ['short', 'loc_15638']
push ['offset', '$SG15410']
push ['0B2h']
push ['offset', '$SG15411']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_15610']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_stack_count']
add ['esp,', '4']
cmp ['[ebp+arg_4],', 'eax']
jb ['short', 'loc_1567D']
push ['offset', '$SG15413']
push ['0B6h']
push ['82h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '82h']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_cf2_setError']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['short', 'loc_156F5']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*8+0Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_156A7']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_15698']
jmp ['short', 'loc_156EB']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+edx*8+8]']
shl ['eax,', '10h']
jmp ['short', 'loc_156F5']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+ecx*8+8],', '0']
jge ['short', 'loc_156D0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+8]']
neg ['edx']
add ['edx,', '2000h']
sar ['edx,', '0Eh']
neg ['edx']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_156E6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+8]']
add ['edx,', '2000h']
sar ['edx,', '0Eh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_156F5']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax*8+8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cf2_stack_clear proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+188h],', 'eax']
pop ['ebp']
retn
align ['4']
endp
_cf2_hintmask_setCounts	proc near	
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '60h']
jbe ['short', 'loc_1575C']
push ['offset', '$SG14482']
push ['73h']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_cf2_setError']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['short', 'loc_15788']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '7']
shr ['edx,', '3']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+4],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+5],', '1']
mov ['eax,', '[ebp+arg_4]']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_cf2_hintmask_read proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_hintmask_setCounts']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_157C0']
jmp ['loc_15889']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
ja ['short', 'loc_157E0']
push ['offset', '$SG14497']
push ['96h']
push ['offset', '$SG14498']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_157C0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_15802']
push ['offset', '$SG14503']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_157E4']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_15818']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+0Ch]']
jnb ['short', 'loc_15867']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_cf2_buf_readByte']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'al']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_15861']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
push ['eax']
push ['offset', '$SG14512']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_15838']
jmp ['short', 'loc_1580F']
mov ['edx,', '4']
imul ['eax,', 'edx,', '35h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_15885']
push ['offset', '$SG14517']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_15867']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cf2_doStems	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cf2_stack_count']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '1']
mov ['[ebp+var_D],', 'cl']
mov ['edx,', '[ebp+arg_14]']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+var_D]']
test ['eax,', 'eax']
jz ['short', 'loc_15916']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_15916']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+84h]']
push ['edx']
call ['_cf2_getNominalWidthX']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'esi']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+84h]']
movzx ['eax,', 'byte', 'ptr', '[edx+2F1h]']
test ['eax,', 'eax']
jz ['short', 'loc_1592F']
jmp ['$exit$13_0']
movzx ['ecx,', '[ebp+var_D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_15940']
mov ['[ebp+var_34],', '1']
jmp ['short', 'loc_15947']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_15958']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_159BE']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+Src],', '0']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'edx']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_cf2_arrstack_push']
add ['esp,', '8']
jmp ['short', 'loc_1594F']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_cf2_stack_clear']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[eax],', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_2']
dd ['offset', '$LN10_2']
align ['4']
endp
_cf2_doFlex	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '7Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+ecx+var_40],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['[ebp+ecx+var_40],', 'eax']
mov ['[ebp+var_48],', '0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_15A82']
mov ['[ebp+var_64],', '1']
jmp ['short', 'loc_15A89']
mov ['[ebp+var_64],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_64]']
mov ['[ebp+var_49],', 'dl']
movzx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jz ['short', 'loc_15AA0']
mov ['[ebp+var_68],', '9']
jmp ['short', 'loc_15AA7']
mov ['[ebp+var_68],', '0Ah']
mov ['ecx,', '[ebp+var_68]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_15ABF']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_15B11']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[ebp+edx*4+var_40]']
mov ['[ebp+ecx*4+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '[ebp+var_54]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_15B0F']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_54]']
add ['eax,', '[ebp+ecx*4+var_38]']
mov ['edx,', '[ebp+var_54]']
mov ['[ebp+edx*4+var_38],', 'eax']
jmp ['short', 'loc_15AB6']
movzx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jz ['short', 'loc_15B2A']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Bh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+edx+var_40],', 'ecx']
movzx ['edx,', '[ebp+arg_14]']
test ['edx,', 'edx']
jz ['loc_15C46']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ah']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+ecx+var_40]']
sub ['eax,', '[edx]']
jns ['short', 'loc_15B61']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ah']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+edx+var_40]']
sub ['ecx,', '[eax]']
neg ['ecx']
mov ['[ebp+var_70],', 'ecx']
jmp ['short', 'loc_15B75']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Ah']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+eax+var_40]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Bh']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+ecx+var_40]']
sub ['eax,', '[edx]']
jns ['short', 'loc_15BA0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Bh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+edx+var_40]']
sub ['ecx,', '[eax]']
neg ['ecx']
mov ['[ebp+var_74],', 'ecx']
jmp ['short', 'loc_15BB4']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Bh']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+eax+var_40]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_70]']
cmp ['eax,', '[ebp+var_74]']
jle ['short', 'loc_15BC2']
mov ['[ebp+var_75],', '1']
jmp ['short', 'loc_15BC6']
mov ['[ebp+var_75],', '0']
mov ['cl,', '[ebp+var_75]']
mov ['[ebp+var_59],', 'cl']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
mov ['[ebp+var_60],', 'eax']
movzx ['ecx,', '[ebp+var_59]']
test ['ecx,', 'ecx']
jz ['short', 'loc_15C15']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Ah']
mov ['ecx,', '[ebp+eax+var_40]']
add ['ecx,', '[ebp+var_60]']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Ch']
mov ['[ebp+eax+var_40],', 'ecx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+edx+var_40],', 'ecx']
jmp ['short', 'loc_15C41']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+eax+var_40],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Bh']
mov ['edx,', '[ebp+ecx+var_40]']
add ['edx,', '[ebp+var_60]']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Dh']
mov ['[ebp+ecx+var_40],', 'edx']
jmp ['loc_15CF1']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Ah']
mov ['ecx,', '[ebp+arg_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_15C92']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cf2_stack_getReal']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ah']
add ['eax,', '[ebp+edx+var_40]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ch']
mov ['[ebp+edx+var_40],', 'eax']
jmp ['short', 'loc_15CA3']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+ecx+var_40],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Bh']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_15CE0']
mov ['edx,', '4']
imul ['esi,', 'edx,', '0Bh']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_cf2_stack_getReal']
add ['esp,', '8']
add ['eax,', '[ebp+esi+var_40]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '0Dh']
mov ['[ebp+ecx+var_40],', 'eax']
jmp ['short', 'loc_15CF1']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+eax+var_40],', 'edx']
mov ['[ebp+var_58],', '0']
jmp ['short', 'loc_15D03']
mov ['eax,', '[ebp+var_58]']
add ['eax,', '1']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '2']
jge ['short', 'loc_15D4D']
imul ['ecx,', '[ebp+var_58],', '6']
mov ['edx,', '[ebp+ecx*4+var_24]']
push ['edx']
imul ['eax,', '[ebp+var_58],', '6']
mov ['ecx,', '[ebp+eax*4+var_28]']
push ['ecx']
imul ['edx,', '[ebp+var_58],', '6']
mov ['eax,', '[ebp+edx*4+var_2C]']
push ['eax']
imul ['ecx,', '[ebp+var_58],', '6']
mov ['edx,', '[ebp+ecx*4+var_30]']
push ['edx']
imul ['eax,', '[ebp+var_58],', '6']
mov ['ecx,', '[ebp+eax*4+var_34]']
push ['ecx']
imul ['edx,', '[ebp+var_58],', '6']
mov ['eax,', '[ebp+edx*4+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_cf2_glyphpath_curveTo']
add ['esp,', '1Ch']
jmp ['short', 'loc_15CFA']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cf2_stack_clear']
add ['esp,', '4']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+ecx+var_40]']
mov ['[edx],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+edx+var_40]']
mov ['[eax],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN30_2']
dd ['offset', '$LN29_2']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
assume ['cs:_rdata']
public ['__real@408f400000000000']
assume ['cs:_rdata']
public ['__real@40f0000000000000']
assume ['cs:_rdata']
public ['__xmm@41f00000000000000000000000000000']
dd ['0']
dd ['41F00000h']
extrn ['_memcmp:near']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['__imp__strncmp:near']
extrn ['_FT_MulDiv:near']
extrn ['_FT_DivFix:near']
extrn ['_FT_RoundFix:near']
extrn ['_FT_Vector_Transform:near']
extrn ['_FT_Get_Module:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_qalloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_mem_strdup:near']
extrn ['_ft_mem_strcpyn:near']
extrn ['_FT_GlyphLoader_Rewind:near']
extrn ['_FT_GlyphLoader_CheckPoints:near']
extrn ['_FT_GlyphLoader_Add:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_CMap_New:near']
extrn ['_FT_Get_Module_Interface:near']
extrn ['_ft_module_get_service:near']
extrn ['_FT_Select_Metrics:near']
extrn ['_FT_Request_Metrics:near']
extrn ['_ft_synthesize_vertical_metrics:near']
extrn ['_FT_Message:near']
extrn ['_FT_Panic:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Skip:near']
extrn ['_FT_Stream_Pos:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_EnterFrame:near']
extrn ['_FT_Stream_ExitFrame:near']
extrn ['_FT_Stream_ExtractFrame:near']
extrn ['_FT_Stream_ReleaseFrame:near']
extrn ['_FT_Stream_GetUShort:near']
extrn ['_FT_Stream_ReadChar:near']
extrn ['_FT_Stream_ReadUShort:near']
extrn ['_FT_Stream_ReadFields:near']
extrn ['_FT_Matrix_Multiply_Scaled:near']
extrn ['_FT_Vector_Transform_Scaled:near']
extrn ['_FT_MSB:near']
extrn ['_FT_Outline_Get_CBox:near']
extrn ['_FT_Outline_Translate:near']
extrn ['_FT_Outline_Transform:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['__chkstk:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
extrn ['__fltused:near']
end

endp
_FT_Outline_Get_BBox proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', '7FFFFFFFh']
mov ['[ebp+var_14],', '7FFFFFFFh']
mov ['[ebp+var_10],', '80000001h']
mov ['[ebp+var_C],', '80000001h']
mov ['[ebp+var_30],', '7FFFFFFFh']
mov ['[ebp+var_2C],', '7FFFFFFFh']
mov ['[ebp+var_28],', '80000001h']
mov ['[ebp+var_24],', '80000001h']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_7A']
push ['offset', '$SG7254']
push ['1BFh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_266']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_9C']
push ['offset', '$SG7256']
push ['1C2h']
push ['14h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '14h']
jmp ['loc_266']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B1']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'word', 'ptr', '[edx]']
test ['eax,', 'eax']
jg ['short', 'loc_DF']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['eax,', 'eax']
jmp ['loc_266']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_38],', 'eax']
xor ['ecx,', 'ecx']
mov ['[ebp+var_3C],', 'cx']
jmp ['short', 'loc_FC']
mov ['dx,', '[ebp+var_3C]']
add ['dx,', '1']
mov ['[ebp+var_3C],', 'dx']
movzx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
cmp ['eax,', 'edx']
jge ['loc_1D3']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_18]']
jge ['short', 'loc_121']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_10]']
jle ['short', 'loc_133']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_147']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_C]']
jle ['short', 'loc_15B']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10F']
movzx ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+edx]']
and ['edx,', '3']
cmp ['edx,', '1']
jnz ['short', 'loc_1C5']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_30]']
jge ['short', 'loc_187']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_28]']
jle ['short', 'loc_199']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_1AD']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_24]']
jle ['short', 'loc_1C1']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_24],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_175']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '8']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_F0']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_30]']
jl ['short', 'loc_1F3']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_28]']
jg ['short', 'loc_1F3']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_2C]']
jl ['short', 'loc_1F3']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_24]']
jle ['short', 'loc_24A']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_48],', 'ecx']
lea ['edx,', '[ebp+var_5C]']
push ['edx']
push ['offset', '_bbox_interface']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Outline_Decompose']
add ['esp,', '0Ch']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_22E']
mov ['eax,', '[ebp+var_40]']
jmp ['short', 'loc_266']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_54]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_4C]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_48]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_264']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ecx+0Ch],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN32']
dd ['offset', '$LN29']
dd ['0FFFFFFD0h,', '10h']
dd ['offset', '$LN30']
dd ['0FFFFFFA4h,', '18h']
dd ['offset', '$LN31']
align ['10h']
endp
_BBox_Move_To	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_2EB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+10h]']
jle ['short', 'loc_303']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+0Ch]']
jge ['short', 'loc_31D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+14h]']
jle ['short', 'loc_337']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+14h],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_2D3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
pop ['ebp']
retn
align ['10h']
endp
_BBox_Line_To	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
xor ['eax,', 'eax']
pop ['ebp']
retn
align ['10h']
endp
_BBox_Conic_Check proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_3B4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_3C6']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_BBox_Conic_To	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_3EB']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+10h]']
jle ['short', 'loc_403']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+0Ch]']
jge ['short', 'loc_41D']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+14h]']
jle ['short', 'loc_437']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+14h],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_3D3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx+8]']
jl ['short', 'loc_455']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx+10h]']
jle ['short', 'loc_47D']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_BBox_Conic_Check']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+0Ch]']
jl ['short', 'loc_499']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+14h]']
jle ['short', 'loc_4C4']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_BBox_Conic_Check']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['[edx+4],', 'ecx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_cubic_peak	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_514']
mov ['eax,', '[ebp+arg_0]']
neg ['eax']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_51A']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_52A']
mov ['edx,', '[ebp+arg_4]']
neg ['edx']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_530']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_540']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_546']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+arg_C],', '0']
jge ['short', 'loc_556']
mov ['eax,', '[ebp+arg_C]']
neg ['eax']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_55C']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_C]']
or ['edx,', '[ebp+var_10]']
or ['edx,', '[ebp+var_14]']
or ['edx,', '[ebp+var_18]']
push ['edx']
call ['_FT_MSB']
add ['esp,', '4']
mov ['ecx,', '1Bh']
sub ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_5BC']
cmp ['[ebp+var_8],', '2']
jle ['short', 'loc_58E']
mov ['[ebp+var_8],', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
shl ['edx,', 'cl']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
shl ['eax,', 'cl']
mov ['[ebp+arg_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
shl ['edx,', 'cl']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
shl ['eax,', 'cl']
mov ['[ebp+arg_C],', 'eax']
jmp ['short', 'loc_5F0']
mov ['ecx,', '[ebp+var_8]']
neg ['ecx']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', 'cl']
mov ['[ebp+arg_0],', 'edx']
mov ['ecx,', '[ebp+var_8]']
neg ['ecx']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', 'cl']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
neg ['ecx']
mov ['edx,', '[ebp+arg_8]']
sar ['edx,', 'cl']
mov ['[ebp+arg_8],', 'edx']
mov ['ecx,', '[ebp+var_8]']
neg ['ecx']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', 'cl']
mov ['[ebp+arg_C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_600']
cmp ['[ebp+arg_8],', '0']
jle ['loc_6F9']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+arg_C]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_66B']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+arg_8]']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_6C4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+arg_C]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_6DC']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_8]']
jl ['short', 'loc_6DC']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_6F9']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[ebp+arg_C]']
jnz ['short', 'loc_6F4']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_C]']
jg ['short', 'loc_6F4']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_6F9']
jmp ['loc_5F0']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_70C']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
sar ['edx,', 'cl']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_719']
mov ['ecx,', '[ebp+var_8]']
neg ['ecx']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', 'cl']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_BBox_Cubic_Check proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jg ['short', 'loc_747']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx]']
jle ['short', 'loc_77D']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '[ecx]']
push ['edx']
call ['_cubic_peak']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_14]']
add ['eax,', '[ecx]']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_791']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_7C9']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cubic_peak']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_BBox_Cubic_To	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jl ['short', 'loc_817']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+10h]']
jg ['short', 'loc_817']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jl ['short', 'loc_817']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+10h]']
jle ['short', 'loc_845']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
push ['eax']
call ['_BBox_Cubic_Check']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+0Ch]']
jl ['short', 'loc_87D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+14h]']
jg ['short', 'loc_87D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+0Ch]']
jl ['short', 'loc_87D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+14h]']
jle ['short', 'loc_8AF']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_BBox_Cubic_Check']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['[edx+4],', 'ecx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '_BBox_Line_To']
dd ['offset', '_BBox_Conic_To']
dd ['offset', '_BBox_Cubic_To']
dd ['2', 'dup(0)']
assume ['cs:_data']
align ['10h']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_FT_MulDiv:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Outline_Decompose:near']
extrn ['_FT_MSB:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['___security_cookie:near']
end

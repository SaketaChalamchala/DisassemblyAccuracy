endp
_FT_Stream_OpenGzip proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_172A']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1749']
push ['offset', '$SG8470']
push ['264h']
push ['28h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '28h']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$23']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_gzip_check_header']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_176C']
jmp ['$Exit$23']
push ['28h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+1Ch],', 'edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['2054h']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_qalloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_17E9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_gzip_file_init']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_17E0']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_14],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_17C0']
jmp ['$Exit$23']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_gzip_get_uncompressed_size']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['loc_18EE']
cmp ['[ebp+var_18],', '0A000h']
jnb ['loc_18EE']
mov ['[ebp+var_1C],', '0']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['loc_18E7']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_gzip_file_io']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_18BA']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_gzip_file_done']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_14],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_1864']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '_ft_gzip_stream_close']
jmp ['short', '$Exit$23']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_gzip_file_io']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_1C],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_18CC']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '7FFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', 'offset', '_ft_gzip_stream_io']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '_ft_gzip_stream_close']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21']
dd ['offset', '$LN20']
db ['6', 'dup(0CCh)']
endp
_FT_Gzip_Uncompress proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_198C']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_198C']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_19A8']
push ['offset', '$SG8514']
push ['2CAh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_1AB8']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_1C],', 'offset', '_ft_gzip_alloc']
mov ['[ebp+var_18],', 'offset', '_ft_gzip_free']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'edx']
push ['38h']
push ['offset', '$SG8521']
push ['0Fh']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_inflateInit2_']
add ['esp,', '10h']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_1A10']
push ['offset', '$SG8523']
push ['2DAh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_1AB8']
push ['4']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_inflate']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '1']
jz ['short', 'loc_1A42']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_inflateEnd']
add ['esp,', '4']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_1A40']
mov ['[ebp+var_44],', '0FFFFFFFBh']
jmp ['short', 'loc_1A59']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax],', 'ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_inflateEnd']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0FFFFFFFCh']
jnz ['short', 'loc_1A78']
push ['offset', '$SG8528']
push ['2EBh']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
jmp ['short', 'loc_1AB8']
cmp ['[ebp+var_44],', '0FFFFFFFBh']
jnz ['short', 'loc_1A97']
push ['offset', '$SG8530']
push ['2EEh']
push ['0Ah']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Ah']
jmp ['short', 'loc_1AB8']
cmp ['[ebp+var_44],', '0FFFFFFFDh']
jnz ['short', 'loc_1AB6']
push ['offset', '$SG8532']
push ['2F1h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['short', 'loc_1AB8']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN13']
dd ['offset', '$LN12']
align ['4']
endp
_inflate	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1B2B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_1B2B']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_1B35']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_21B1']
cmp ['[ebp+arg_4],', '4']
jnz ['short', 'loc_1B44']
mov ['[ebp+var_C],', '0FFFFFFFBh']
jmp ['short', 'loc_1B4B']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFBh']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_21B1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0Dh']
ja ['loc_21A5']
mov ['ecx,', '[ebp+var_10]']
jmp ['ds:$LN47[ecx*4]']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_1B95']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
and ['ecx,', '0Fh']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_18],', '8']
jz ['short', 'loc_1BF5']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_1BFC']
mov ['[ebp+var_1C],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1C2A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', 'offset', '$SG8144']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax+4],', '5']
jmp ['loc_21AC']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[edx+4]']
shr ['eax,', '4']
add ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
cmp ['eax,', '[edx+10h]']
jbe ['short', 'loc_1C6C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ecx],', '0Dh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '$SG8147']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ecx+4],', '5']
jmp ['loc_21AC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_1C89']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['eax,', '[ecx+4]']
shl ['eax,', '8']
add ['eax,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['ecx,', '1Fh']
div ['ecx']
test ['edx,', 'edx']
jz ['short', 'loc_1D09']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', 'offset', '$SG8152']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax+4],', '5']
jmp ['loc_21AC']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '20h']
jnz ['short', 'loc_1D22']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_21AC']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '2']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1D3F']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '3']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1DA1']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['ecx,', 'byte', 'ptr', '[edx]']
shl ['ecx,', '10h']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1E0C']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['ecx,', 'byte', 'ptr', '[edx]']
shl ['ecx,', '8']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '5']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1E77']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['ecx,', 'byte', 'ptr', '[edx]']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+8]']
mov ['[eax+30h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '6']
mov ['eax,', '2']
jmp ['loc_21B1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '0Dh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG8168']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_21B1']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_inflate_blocks']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFDh']
jnz ['short', 'loc_1F55']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx+4],', '0']
jmp ['loc_21AC']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1F61']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_1F6F']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_inflate_blocks_reset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_1FB2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '0Ch']
jmp ['loc_21AC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ecx],', '8']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_1FCF']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ecx],', '9']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_2031']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
shl ['eax,', '10h']
add ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ecx],', '0Ah']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_209C']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
shl ['eax,', '8']
add ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['dword', 'ptr', '[ecx],', '0Bh']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_2107']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_21B1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['eax,', 'byte', 'ptr', '[ecx]']
add ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[ecx+4]']
cmp ['ecx,', '[eax+8]']
jz ['short', 'loc_218B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax],', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', 'offset', '$SG8188']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax+4],', '5']
jmp ['short', 'loc_21AC']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx],', '0Ch']
mov ['eax,', '1']
jmp ['short', 'loc_21B1']
mov ['eax,', '0FFFFFFFDh']
jmp ['short', 'loc_21B1']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_21B1']
jmp ['loc_1B58']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN30']
dd ['offset', '$LN26']
dd ['offset', '$LN24']
dd ['offset', '$LN22_0']
dd ['offset', '$LN20_0']
dd ['offset', '$LN18']
dd ['offset', '$LN17']
dd ['offset', '$LN12_0']
dd ['offset', '$LN10']
dd ['offset', '$LN8']
dd ['offset', '$LN6']
dd ['offset', '$LN3']
dd ['offset', '$LN2']
db ['0Ch', 'dup(0CCh)']
endp
_inflateEnd	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2220']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_2220']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jnz ['short', 'loc_2227']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_2277']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_2249']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_inflate_blocks_free']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_inflateReset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_229E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_22A5']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_2304']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_22D8']
mov ['[ebp+var_4],', '7']
jmp ['short', 'loc_22DF']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_inflate_blocks_reset']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_adler32	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFh']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
shr ['ecx,', '10h']
and ['ecx,', '0FFFFh']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_2355']
mov ['eax,', '1']
jmp ['loc_25E1']
cmp ['[ebp+arg_8],', '0']
jbe ['loc_25D8']
cmp ['[ebp+arg_8],', '15B0h']
jnb ['short', 'loc_2370']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_2377']
mov ['[ebp+var_10],', '15B0h']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+var_C],', '10h']
jl ['loc_2586']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Ah']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Bh']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Eh']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Fh']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '10h']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '10h']
mov ['[ebp+var_C],', 'ecx']
jmp ['loc_2386']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_25B5']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jnz ['short', 'loc_258C']
mov ['eax,', '[ebp+var_4]']
xor ['edx,', 'edx']
mov ['ecx,', '0FFF1h']
div ['ecx']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
xor ['edx,', 'edx']
mov ['ecx,', '0FFF1h']
div ['ecx']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_2355']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_inflateInit2_	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_263E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movsx ['ecx,', '$SG8110[edx]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_263E']
cmp ['[ebp+arg_C],', '38h']
jz ['short', 'loc_2648']
mov ['eax,', '0FFFFFFFAh']
jmp ['loc_279A']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2658']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_279A']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jnz ['short', 'loc_267F']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+20h],', 'offset', '_zcalloc']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jnz ['short', 'loc_2692']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+24h],', 'offset', '_zcfree']
mov ['esi,', 'esp']
push ['18h']
push ['1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+1Ch],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_26CD']
mov ['eax,', '0FFFFFFFCh']
jmp ['loc_279A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2702']
mov ['eax,', '[ebp+arg_4]']
neg ['eax']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['dword', 'ptr', '[edx+0Ch],', '1']
cmp ['[ebp+arg_4],', '8']
jl ['short', 'loc_270E']
cmp ['[ebp+arg_4],', '0Fh']
jle ['short', 'loc_2721']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflateEnd']
add ['esp,', '4']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_279A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_2742']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2749']
mov ['[ebp+var_8],', 'offset', '_adler32']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
shl ['eax,', 'cl']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_blocks_new']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+14h],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_278C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflateEnd']
add ['esp,', '4']
mov ['eax,', '0FFFFFFFCh']
jmp ['short', 'loc_279A']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflateReset']
add ['esp,', '4']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_zcalloc	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_gzip_alloc']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_zcfree		proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ft_gzip_free']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_inflate_trees_bits proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['esi,', 'esp']
push ['4']
push ['13h']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2845']
mov ['eax,', '0FFFFFFFCh']
jmp ['short', 'loc_28C3']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
push ['0']
push ['13h']
push ['13h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_huft_build']
add ['esp,', '28h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFDh']
jnz ['short', 'loc_2882']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx+18h],', 'offset', '$SG7591']
jmp ['short', 'loc_28A1']
cmp ['[ebp+var_4],', '0FFFFFFFBh']
jz ['short', 'loc_2890']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_28A1']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7596']
mov ['[ebp+var_4],', '0FFFFFFFDh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN8_0']
endp
_inflate_trees_dynamic proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['esi,', 'esp']
push ['4']
push ['120h']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_295B']
mov ['eax,', '0FFFFFFFCh']
jmp ['loc_2AC6']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
push ['offset', '_cplext']
push ['offset', '_cplens']
push ['101h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_huft_build']
add ['esp,', '28h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_299F']
mov ['edx,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_29EF']
cmp ['[ebp+var_4],', '0FFFFFFFDh']
jnz ['short', 'loc_29B1']
mov ['eax,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7627']
jmp ['short', 'loc_29C8']
cmp ['[ebp+var_4],', '0FFFFFFFCh']
jz ['short', 'loc_29C8']
mov ['ecx,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[ecx+18h],', 'offset', '$SG7631']
mov ['[ebp+var_4],', '0FFFFFFFDh']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_2AC6']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
push ['offset', '_cpdext']
push ['offset', '_cpdist']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_huft_build']
add ['esp,', '28h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2A3F']
mov ['ecx,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_2AA5']
cmp ['[ebp+arg_0],', '101h']
jbe ['short', 'loc_2AA5']
cmp ['[ebp+var_4],', '0FFFFFFFDh']
jnz ['short', 'loc_2A51']
mov ['edx,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '$SG7637']
jmp ['short', 'loc_2A81']
cmp ['[ebp+var_4],', '0FFFFFFFBh']
jnz ['short', 'loc_2A6A']
mov ['eax,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7641']
mov ['[ebp+var_4],', '0FFFFFFFDh']
jmp ['short', 'loc_2A81']
cmp ['[ebp+var_4],', '0FFFFFFFCh']
jz ['short', 'loc_2A81']
mov ['ecx,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[ecx+18h],', 'offset', '$SG7645']
mov ['[ebp+var_4],', '0FFFFFFFDh']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_2AC6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17_0']
dd ['offset', '$LN16']
endp
_inflate_trees_fixed proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:_fixed_bl']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', 'ds:_fixed_bd']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', 'offset', '_fixed_tl']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', 'offset', '_fixed_td']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_inflate_blocks_new proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['esi,', 'esp']
push ['40h']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2B90']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_2C98']
mov ['esi,', 'esp']
push ['5A0h']
push ['8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+24h],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2BEA']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_2C98']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+28h],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_2C62']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['short', 'loc_2C98']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+38h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_inflate_blocks_reset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_inflate_blocks	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+30h]']
jnb ['short', 'loc_2D1C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_94],', 'ecx']
jmp ['short', 'loc_2D2B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_94]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '1']
test ['edx,', 'edx']
jz ['loc_40D6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_98],', 'ecx']
cmp ['[ebp+var_98],', '9']
ja ['loc_4074']
mov ['edx,', '[ebp+var_98]']
jmp ['ds:$LN117[edx*4]']
cmp ['[ebp+var_C],', '3']
jnb ['loc_2E09']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2D7F']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_2DD8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['$LN75']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '7']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1']
mov ['[ebp+var_9C],', 'edx']
cmp ['[ebp+var_9C],', '3']
ja ['loc_2FEC']
mov ['eax,', '[ebp+var_9C]']
jmp ['ds:$LN118[eax*4]']
mov ['ecx,', '[ebp+var_8]']
shr ['ecx,', '3']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '3']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '7']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
shr ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '1']
jmp ['loc_2FEC']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_48]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['_inflate_trees_fixed']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_inflate_codes_new']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_2F27']
mov ['[ebp+arg_8],', '0FFFFFFFCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '6']
jmp ['loc_2FEC']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '3']
jmp ['loc_2FEC']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '9']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '$SG7934']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
jmp ['loc_40D1']
cmp ['[ebp+var_C],', '20h']
jnb ['loc_3094']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_300A']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_3063']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '8']
mov ['[ebp+var_C],', 'edx']
jmp ['$LN63']
mov ['eax,', '[ebp+var_8]']
not ['eax']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFFFh']
cmp ['eax,', 'ecx']
jz ['short', 'loc_3121']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7944']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_3151']
mov ['[ebp+var_A0],', '2']
jmp ['short', 'loc_317C']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_3166']
mov ['[ebp+var_A4],', '7']
jmp ['short', 'loc_3170']
mov ['[ebp+var_A4],', '0']
mov ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_A0]']
mov ['[eax],', 'ecx']
jmp ['loc_40D1']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_31EB']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
cmp ['[ebp+var_1C],', '0']
jnz ['loc_3370']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+2Ch]']
jnz ['short', 'loc_324E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+30h]']
cmp ['edx,', '[ecx+28h]']
jz ['short', 'loc_324E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[edx+30h]']
jnb ['short', 'loc_3236']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
sub ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
jmp ['short', 'loc_3245']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_A8]']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '0']
jnz ['loc_3370']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
mov ['[ebp+arg_8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+30h]']
jnb ['short', 'loc_32A0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_AC],', 'ecx']
jmp ['short', 'loc_32AF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_AC],', 'eax']
mov ['ecx,', '[ebp+var_AC]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[edx+2Ch]']
jnz ['short', 'loc_3311']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+30h]']
cmp ['eax,', '[edx+28h]']
jz ['short', 'loc_3311']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+30h]']
jnb ['short', 'loc_32F9']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
sub ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_3308']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
sub ['edx,', '[ebp+var_18]']
mov ['[ebp+var_B0],', 'edx']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_3370']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['[ebp+arg_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_14]']
jbe ['short', 'loc_338E']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_1C]']
jbe ['short', 'loc_339C']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '[ebp+var_4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+var_4]']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_B4]']
mov ['[eax+4],', 'ecx']
cmp ['[ebp+var_B4],', '0']
jz ['short', 'loc_33FD']
jmp ['loc_40D1']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_3412']
mov ['[ebp+var_B8],', '7']
jmp ['short', 'loc_341C']
mov ['[ebp+var_B8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_B8]']
mov ['[eax],', 'ecx']
jmp ['loc_40D1']
cmp ['[ebp+var_C],', '0Eh']
jnb ['loc_34CF']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3445']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_349E']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '8']
mov ['[ebp+var_C],', 'edx']
jmp ['$LN47_0']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '3FFFh']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '1Fh']
cmp ['eax,', '1Dh']
ja ['short', 'loc_34FC']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '5']
and ['ecx,', '1Fh']
cmp ['ecx,', '1Dh']
jbe ['short', 'loc_356F']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7973']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '1Fh']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '5']
and ['ecx,', '1Fh']
lea ['edx,', '[eax+ecx+102h]']
mov ['[ebp+var_4],', 'edx']
mov ['esi,', 'esp']
push ['4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_BC],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_BC]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_BC],', '0']
jnz ['short', 'loc_3624']
mov ['[ebp+arg_8],', '0FFFFFFFCh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '0Eh']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '0Eh']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
shr ['edx,', '0Ah']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax+8],', 'edx']
jnb ['loc_3746']
cmp ['[ebp+var_C],', '3']
jnb ['loc_3704']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_367A']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_36D3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['loc_3661']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['eax,', 'ds:_border[ecx*4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+0Ch]']
mov ['[ecx+eax*4],', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$LN39']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '13h']
jnb ['short', 'loc_377A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', 'ds:_border[eax*4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['dword', 'ptr', '[eax+ecx*4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
jmp ['short', 'loc_3746']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+10h],', '7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '14h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_inflate_trees_bits']
add ['esp,', '14h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['loc_3849']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0FFFFFFFDh']
jnz ['short', 'loc_37F0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '9']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
and ['edx,', '1Fh']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '5']
and ['eax,', '1Fh']
lea ['ecx,', '[edx+eax+102h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+8],', 'ecx']
jnb ['loc_3C0A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_4]']
jnb ['loc_3935']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_38AB']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_3904']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['loc_3890']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
and ['eax,', 'ds:_inflate_mask[edx*4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[edx+eax*8]']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_5C],', 'ecx']
cmp ['[ebp+var_5C],', '10h']
jnb ['short', 'loc_39A1']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
shr ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['eax,', '[ebp+var_5C]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
jmp ['loc_3C05']
cmp ['[ebp+var_5C],', '12h']
jnz ['short', 'loc_39B3']
mov ['[ebp+var_C0],', '7']
jmp ['short', 'loc_39BF']
mov ['ecx,', '[ebp+var_5C]']
sub ['ecx,', '0Eh']
mov ['[ebp+var_C0],', 'ecx']
mov ['edx,', '[ebp+var_C0]']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_5C],', '12h']
jnz ['short', 'loc_39DA']
mov ['[ebp+var_C4],', '0Bh']
jmp ['short', 'loc_39E4']
mov ['[ebp+var_C4],', '3']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_54]']
cmp ['[ebp+var_C],', 'ecx']
jnb ['loc_3A95']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3A0B']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_3A64']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '8']
mov ['[ebp+var_C],', 'edx']
jmp ['loc_39ED']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
shr ['eax,', 'cl']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[ebp+var_8]']
and ['eax,', 'ds:_inflate_mask[edx*4]']
add ['eax,', '[ebp+var_58]']
mov ['[ebp+var_58],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_54]']
shr ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_54]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '[ebp+var_58]']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '1Fh']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '5']
and ['ecx,', '1Fh']
lea ['eax,', '[eax+ecx+102h]']
cmp ['edx,', 'eax']
ja ['short', 'loc_3B16']
cmp ['[ebp+var_5C],', '10h']
jnz ['loc_3BAB']
cmp ['[ebp+var_54],', '1']
jnb ['loc_3BAB']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '9']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '$SG8022']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
cmp ['[ebp+var_5C],', '10h']
jnz ['short', 'loc_3BC6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_54]']
mov ['edx,', '[eax+ecx*4-4]']
mov ['[ebp+var_C8],', 'edx']
jmp ['short', 'loc_3BD0']
mov ['[ebp+var_C8],', '0']
mov ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[edx+eax*4],', 'ecx']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_58]']
sub ['eax,', '1']
mov ['[ebp+var_58],', 'eax']
jnz ['short', 'loc_3BD9']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_54]']
mov ['[ecx+8],', 'edx']
jmp ['$LN28']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['[ebp+var_64],', '9']
mov ['[ebp+var_70],', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
push ['edx']
lea ['eax,', '[ebp+var_88]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
lea ['edx,', '[ebp+var_70]']
push ['edx']
lea ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '5']
and ['eax,', '1Fh']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '1Fh']
add ['ecx,', '101h']
push ['ecx']
call ['_inflate_trees_dynamic']
add ['esp,', '24h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['loc_3D0F']
cmp ['[ebp+var_4],', '0FFFFFFFDh']
jnz ['short', 'loc_3CB0']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_88]']
push ['ecx']
mov ['edx,', '[ebp+var_7C]']
push ['edx']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
push ['ecx']
call ['_inflate_codes_new']
add ['esp,', '14h']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0']
jnz ['short', 'loc_3D9D']
mov ['[ebp+arg_8],', '0FFFFFFFCh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_90]']
mov ['[ecx+4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_codes']
add ['esp,', '0Ch']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '1']
jz ['short', 'loc_3E4A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['[ebp+arg_8],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_inflate_codes_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ecx+30h]']
jnb ['short', 'loc_3EAF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_CC],', 'ecx']
jmp ['short', 'loc_3EBE']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_CC],', 'eax']
mov ['ecx,', '[ebp+var_CC]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jnz ['short', 'loc_3EDE']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['loc_40D1']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+30h]']
jnb ['short', 'loc_3F2F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
sub ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_3F3E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
sub ['edx,', '[ebp+var_18]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+30h]']
cmp ['eax,', '[edx+34h]']
jz ['short', 'loc_3FAE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['[ebp+arg_8],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_40D6']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['short', 'loc_40D6']
mov ['[ebp+arg_8],', '0FFFFFFFEh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['short', 'loc_40D6']
jmp ['loc_2D34']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN116']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN115']
dd ['offset', '$LN107']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN108']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN109']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN110']
dd ['0FFFFFF9Ch,', '4']
dd ['offset', '$LN111']
db ['90h']
db ['3', 'dup(0FFh)']
dd ['4']
dd ['offset', '$LN112']
dd ['0FFFFFF84h,', '4']
dd ['offset', '$LN113']
dd ['0FFFFFF78h,', '4']
dd ['offset', '$LN114']
db ['6Ch,', '0']
db ['0']
db ['6Ch,', '0']
db ['0']
dd ['offset', '$LN63']
dd ['offset', '$LN58']
dd ['offset', '$LN47_0']
dd ['offset', '$LN39']
dd ['offset', '$LN28']
dd ['offset', '$LN8_1']
dd ['offset', '$LN5']
dd ['offset', '$LN3_0']
dd ['offset', '$LN2_0']
dd ['offset', '$LN68']
dd ['offset', '$LN66']
dd ['offset', '$LN65']
endp
_inflate_blocks_reset proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_41D1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '4']
jz ['short', 'loc_41E1']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '5']
jnz ['short', 'loc_4203']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '6']
jnz ['short', 'loc_421E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_inflate_codes_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+34h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_428B']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+30h],', 'eax']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_inflate_blocks_free proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_blocks_reset']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_inflate_codes_new proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['esi,', 'esp']
push ['1Ch']
push ['1']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4395']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['al,', '[ebp+arg_0]']
mov ['[edx+10h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[ebp+arg_4]']
mov ['[ecx+11h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_inflate_codes	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+30h]']
jnb ['short', 'loc_441B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
sub ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_4427']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
sub ['edx,', '[ebp+var_20]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['loc_4FA4']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '9']
ja ['loc_4F42']
mov ['ecx,', '[ebp+var_34]']
jmp ['ds:$LN73[ecx*4]']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+14h]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_4]']
jnb ['loc_4526']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_449C']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_44F5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_14]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_10]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_4481']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
and ['eax,', 'ds:_inflate_mask[edx*4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+8]']
lea ['eax,', '[edx+eax*8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+1]']
mov ['edx,', '[ebp+var_10]']
shr ['edx,', 'cl']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', 'ecx']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_4586']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '6']
jmp ['loc_4F9F']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '10h']
jz ['short', 'loc_45B4']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0Fh']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '2']
jmp ['loc_4F9F']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '40h']
jnz ['short', 'loc_45DC']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*8]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+8],', 'ecx']
jmp ['loc_4F9F']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '20h']
jz ['short', 'loc_45F2']
mov ['ecx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[ecx],', '7']
jmp ['loc_4F9F']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7775']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_4]']
jnb ['loc_4713']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4689']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_46E2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_14]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_10]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_466E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
and ['eax,', 'ds:_inflate_mask[edx*4]']
mov ['ecx,', '[ebp+var_2C]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
shr ['eax,', 'cl']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+11h]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '3']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_4]']
jnb ['loc_4810']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4786']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_47DF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_14]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_10]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_476B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
and ['eax,', 'ds:_inflate_mask[edx*4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+8]']
lea ['eax,', '[edx+eax*8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+1]']
mov ['edx,', '[ebp+var_10]']
shr ['edx,', 'cl']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', 'ecx']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '10h']
jz ['short', 'loc_487E']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '4']
jmp ['loc_4F9F']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '40h']
jnz ['short', 'loc_48A6']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx*8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+8],', 'eax']
jmp ['loc_4F9F']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG7796']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_4]']
jnb ['loc_49C7']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_493D']
mov ['[ebp+arg_8],', '0']
jmp ['short', 'loc_4996']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_14]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+var_10]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_4922']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
and ['eax,', 'ds:_inflate_mask[edx*4]']
mov ['ecx,', '[ebp+var_2C]']
add ['eax,', '[ecx+0Ch]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
shr ['eax,', 'cl']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '5']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[edx+28h]']
jnb ['short', 'loc_4A28']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+2Ch]']
sub ['eax,', '[edx+28h]']
add ['eax,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_4A09']
mov ['ecx,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['loc_4BF3']
cmp ['[ebp+var_24],', '0']
jnz ['loc_4B9F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+2Ch]']
jnz ['short', 'loc_4A8F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+30h]']
cmp ['eax,', '[edx+28h]']
jz ['short', 'loc_4A8F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+30h]']
jnb ['short', 'loc_4A7D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
sub ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_4A89']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
sub ['edx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['loc_4B9F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+30h]']
jnb ['short', 'loc_4ADE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
sub ['edx,', '[ebp+var_20]']
sub ['edx,', '1']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_4AEA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+2Ch]']
jnz ['short', 'loc_4B40']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+30h]']
cmp ['ecx,', '[eax+28h]']
jz ['short', 'loc_4B40']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ecx+30h]']
jnb ['short', 'loc_4B2E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_4B3A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_4B9F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['[ebp+arg_8],', '0']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_28]']
mov ['al,', '[edx]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ecx+2Ch]']
jnz ['short', 'loc_4BDF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+4],', 'eax']
jmp ['loc_4A28']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx],', '0']
jmp ['loc_4F9F']
cmp ['[ebp+var_24],', '0']
jnz ['loc_4D6B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+2Ch]']
jnz ['short', 'loc_4C5B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+30h]']
cmp ['ecx,', '[eax+28h]']
jz ['short', 'loc_4C5B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ecx+30h]']
jnb ['short', 'loc_4C49']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
sub ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
jmp ['short', 'loc_4C55']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['loc_4D6B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+30h]']
jnb ['short', 'loc_4CAA']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
sub ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_4CB6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
sub ['edx,', '[ebp+var_20]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ecx+2Ch]']
jnz ['short', 'loc_4D0C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+30h]']
cmp ['edx,', '[ecx+28h]']
jz ['short', 'loc_4D0C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+30h]']
jnb ['short', 'loc_4CFA']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
sub ['edx,', '[ebp+var_20]']
sub ['edx,', '1']
mov ['[ebp+var_4C],', 'edx']
jmp ['short', 'loc_4D06']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_4D6B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['[ebp+arg_8],', '0']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[eax+8]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[ecx],', '0']
jmp ['loc_4F9F']
cmp ['[ebp+var_14],', '7']
jbe ['short', 'loc_4DBE']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '8']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+30h]']
jnb ['short', 'loc_4E03']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
sub ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_4E0F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
sub ['edx,', '[ebp+var_20]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+30h]']
cmp ['eax,', '[edx+34h]']
jz ['short', 'loc_4E7C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['[ebp+arg_8],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['loc_4FA4']
mov ['[ebp+arg_8],', '0FFFFFFFDh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['short', 'loc_4FA4']
mov ['[ebp+arg_8],', '0FFFFFFFEh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+34h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_inflate_flush']
add ['esp,', '0Ch']
jmp ['short', 'loc_4FA4']
jmp ['loc_442D']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN49']
dd ['offset', '$LN40']
dd ['offset', '$LN35']
dd ['offset', '$LN28_0']
dd ['offset', '$LN23']
dd ['offset', '$LN12_1']
dd ['offset', '$LN6_0']
dd ['offset', '$LN3_1']
dd ['offset', '$LN2_1']
db ['8', 'dup(0CCh)']
endp
_inflate_codes_free proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_inflate_flush	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+34h]']
ja ['short', 'loc_505A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_5063']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+10h]']
jbe ['short', 'loc_5080']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5093']
cmp ['[ebp+arg_8],', '0FFFFFFFBh']
jnz ['short', 'loc_5093']
mov ['[ebp+arg_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_50F2']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+3Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+30h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+2Ch]']
jnz ['loc_5202']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+34h]']
cmp ['ecx,', '[eax+2Ch]']
jnz ['short', 'loc_514A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[edx+34h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
sub ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+10h]']
jbe ['short', 'loc_516A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_517D']
cmp ['[ebp+arg_8],', '0FFFFFFFBh']
jnz ['short', 'loc_517D']
mov ['[ebp+arg_8],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
sub ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jz ['short', 'loc_51DC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+30h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_huft_build	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '13Ch']
push ['edi']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_80],', '0']
lea ['eax,', '[ebp+var_4C]']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+eax*4+var_4C]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx]']
mov ['[ebp+eax*4+var_4C],', 'ecx']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_60]']
sub ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
jnz ['short', 'loc_5393']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_4C]']
cmp ['edx,', '[ebp+arg_4]']
jnz ['short', 'loc_53E6']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
jmp ['loc_59F9']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['[ebp+var_6C],', 'eax']
mov ['[ebp+var_64],', '1']
jmp ['short', 'loc_5400']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1']
mov ['[ebp+var_64],', 'ecx']
cmp ['[ebp+var_64],', '0Fh']
ja ['short', 'loc_5414']
mov ['edx,', '[ebp+var_64]']
cmp ['[ebp+edx*4+var_4C],', '0']
jz ['short', 'loc_5412']
jmp ['short', 'loc_5414']
jmp ['short', 'loc_53F7']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
cmp ['ecx,', '[ebp+var_64]']
jnb ['short', 'loc_5428']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+var_6C],', 'edx']
mov ['[ebp+var_60],', '0Fh']
jmp ['short', 'loc_543A']
mov ['eax,', '[ebp+var_60]']
sub ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_544E']
mov ['ecx,', '[ebp+var_60]']
cmp ['[ebp+ecx*4+var_4C],', '0']
jz ['short', 'loc_544C']
jmp ['short', 'loc_544E']
jmp ['short', 'loc_5431']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_6C]']
cmp ['eax,', '[ebp+var_60]']
jbe ['short', 'loc_5462']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[ebp+var_6C]']
mov ['[edx],', 'eax']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_64]']
shl ['edx,', 'cl']
mov ['[ebp+var_120],', 'edx']
jmp ['short', 'loc_5493']
mov ['eax,', '[ebp+var_64]']
add ['eax,', '1']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_120]']
shl ['ecx,', '1']
mov ['[ebp+var_120],', 'ecx']
mov ['edx,', '[ebp+var_64]']
cmp ['edx,', '[ebp+var_60]']
jnb ['short', 'loc_54BC']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_120]']
sub ['ecx,', '[ebp+eax*4+var_4C]']
mov ['[ebp+var_120],', 'ecx']
jns ['short', 'loc_54BA']
mov ['eax,', '0FFFFFFFDh']
jmp ['loc_59F9']
jmp ['short', 'loc_547C']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+var_120]']
sub ['eax,', '[ebp+edx*4+var_4C]']
mov ['[ebp+var_120],', 'eax']
jns ['short', 'loc_54DB']
mov ['eax,', '0FFFFFFFDh']
jmp ['loc_59F9']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+ecx*4+var_4C]']
add ['edx,', '[ebp+var_120]']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+eax*4+var_4C],', 'edx']
mov ['[ebp+var_64],', '0']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+ecx+var_114],', 'edx']
lea ['eax,', '[ebp+var_48]']
mov ['[ebp+var_74],', 'eax']
lea ['ecx,', '[ebp+var_10C]']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_60]']
sub ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
jz ['short', 'loc_5555']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '[eax]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_11C]']
mov ['eax,', '[ebp+var_64]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
add ['ecx,', '4']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '4']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_551A']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_60],', '0']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_5591']
mov ['[ebp+var_12C],', '1']
jmp ['short', 'loc_559B']
mov ['[ebp+var_12C],', '0']
cmp ['[ebp+var_12C],', '0']
jz ['short', 'loc_55CE']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[ebp+edx*4+var_114]']
mov ['ecx,', '[ebp+arg_24]']
mov ['edx,', '[ebp+var_60]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+eax*4+var_114]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+edx*4+var_114],', 'ecx']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
cmp ['ecx,', '[ebp+arg_4]']
jb ['short', 'loc_5562']
mov ['edx,', '[ebp+var_58]']
mov ['eax,', '[ebp+edx*4+var_114]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_60],', '0']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+edx+var_114],', 'eax']
mov ['ecx,', '[ebp+arg_24]']
mov ['[ebp+var_74],', 'ecx']
mov ['[ebp+var_5C],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_6C]']
neg ['edx']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['[ebp+ecx+var_C8],', '0']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_124],', '0']
jmp ['short', 'loc_564C']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '1']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_58]']
jg ['loc_59CE']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+ecx*4+var_4C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_130],', '0']
jz ['loc_59C9']
mov ['edx,', '[ebp+var_D0]']
add ['edx,', '[ebp+var_6C]']
cmp ['[ebp+var_68],', 'edx']
jle ['loc_584C']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
add ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_58]']
sub ['edx,', '[ebp+var_D0]']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
cmp ['eax,', '[ebp+var_6C]']
jbe ['short', 'loc_56D0']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_134],', 'ecx']
jmp ['short', 'loc_56DC']
mov ['edx,', '[ebp+var_124]']
mov ['[ebp+var_134],', 'edx']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_68]']
sub ['ecx,', '[ebp+var_D0]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_64]']
shl ['edx,', 'cl']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
cmp ['[ebp+var_54],', 'eax']
jbe ['short', 'loc_577C']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_54]']
sub ['edx,', 'ecx']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_68]']
lea ['ecx,', '[ebp+eax*4+var_4C]']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_64]']
cmp ['edx,', '[ebp+var_124]']
jnb ['short', 'loc_577C']
mov ['eax,', '[ebp+var_64]']
add ['eax,', '1']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_64]']
cmp ['ecx,', '[ebp+var_124]']
jnb ['short', 'loc_577C']
mov ['edx,', '[ebp+var_54]']
shl ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_11C]']
add ['eax,', '4']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
mov ['edx,', '[ebp+var_54]']
cmp ['edx,', '[ecx]']
ja ['short', 'loc_576C']
jmp ['short', 'loc_577C']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[ebp+var_54]']
sub ['ecx,', '[eax]']
mov ['[ebp+var_54],', 'ecx']
jmp ['short', 'loc_5732']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_64]']
shl ['edx,', 'cl']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_124]']
cmp ['ecx,', '5A0h']
jbe ['short', 'loc_57A9']
mov ['eax,', '0FFFFFFFDh']
jmp ['loc_59F9']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_1C]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_78]']
mov ['[ebp+eax*4+var_C8],', 'ecx']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_124]']
mov ['ecx,', '[ebp+arg_20]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_583F']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+edx*4+var_114],', 'eax']
mov ['cl,', 'byte', 'ptr', '[ebp+var_6C]']
mov ['byte', 'ptr', '[ebp+var_84+1],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+var_64]']
mov ['byte', 'ptr', '[ebp+var_84],', 'dl']
mov ['ecx,', '[ebp+var_D0]']
sub ['ecx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_60]']
shr ['eax,', 'cl']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_78]']
sub ['edx,', '[ebp+ecx*4+var_CC]']
sar ['edx,', '3']
sub ['edx,', '[ebp+var_64]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+eax*4+var_CC]']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[ebp+var_84]']
mov ['[ecx+edx*8],', 'eax']
mov ['eax,', '[ebp+var_80]']
mov ['[ecx+edx*8+4],', 'eax']
jmp ['short', 'loc_5847']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+var_78]']
mov ['[ecx],', 'edx']
jmp ['loc_5681']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '[ebp+var_D0]']
mov ['byte', 'ptr', '[ebp+var_84+1],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_24]']
lea ['eax,', '[edx+ecx*4]']
cmp ['[ebp+var_74],', 'eax']
jb ['short', 'loc_5872']
mov ['byte', 'ptr', '[ebp+var_84],', '0C0h']
jmp ['short', 'loc_58ED']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_58BC']
mov ['eax,', '[ebp+var_74]']
cmp ['dword', 'ptr', '[eax],', '100h']
jnb ['short', 'loc_5893']
mov ['[ebp+var_138],', '0']
jmp ['short', 'loc_589D']
mov ['[ebp+var_138],', '60h']
mov ['cl,', 'byte', 'ptr', '[ebp+var_138]']
mov ['byte', 'ptr', '[ebp+var_84],', 'cl']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
jmp ['short', 'loc_58ED']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx+eax*4]']
add ['edx,', '50h']
mov ['byte', 'ptr', '[ebp+var_84],', 'dl']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '4']
mov ['[ebp+var_74],', 'ecx']
mov ['ecx,', '[ebp+var_68]']
sub ['ecx,', '[ebp+var_D0]']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[ebp+var_D0]']
shr ['eax,', 'cl']
mov ['[ebp+var_64],', 'eax']
jmp ['short', 'loc_5919']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '[ebp+var_54]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_64]']
cmp ['edx,', '[ebp+var_124]']
jnb ['short', 'loc_593C']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ebp+var_84]']
mov ['[ecx+eax*8],', 'edx']
mov ['edx,', '[ebp+var_80]']
mov ['[ecx+eax*8+4],', 'edx']
jmp ['short', 'loc_5910']
mov ['ecx,', '[ebp+var_68]']
sub ['ecx,', '1']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['[ebp+var_64],', 'eax']
jmp ['short', 'loc_5956']
mov ['ecx,', '[ebp+var_64]']
shr ['ecx,', '1']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_60]']
and ['edx,', '[ebp+var_64]']
jz ['short', 'loc_5969']
mov ['eax,', '[ebp+var_60]']
xor ['eax,', '[ebp+var_64]']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_594E']
mov ['ecx,', '[ebp+var_60]']
xor ['ecx,', '[ebp+var_64]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_D0]']
shl ['edx,', 'cl']
sub ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_60]']
and ['eax,', '[ebp+var_70]']
mov ['ecx,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+ecx*4+var_114]']
jz ['short', 'loc_59C4']
mov ['edx,', '[ebp+var_5C]']
sub ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_D0]']
sub ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_D0],', 'eax']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_D0]']
shl ['edx,', 'cl']
sub ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
jmp ['short', 'loc_5985']
jmp ['loc_5662']
jmp ['loc_5643']
cmp ['[ebp+var_120],', '0']
jz ['short', 'loc_59E9']
cmp ['[ebp+var_58],', '1']
jz ['short', 'loc_59E9']
mov ['[ebp+var_13C],', '0FFFFFFFBh']
jmp ['short', 'loc_59F3']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_13C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN68_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN67']
dd ['offset', '$LN63_0']
dd ['0FFFFFF7Ch,', '8']
dd ['offset', '$LN64']
dd ['0FFFFFF38h,', '3Ch']
dd ['offset', '$LN65_0']
dd ['0FFFFFEECh,', '40h']
dd ['offset', '$LN66_0']
align ['2']
db ['8', 'dup(0CCh)']
endp
_ft_gzip_alloc	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
imul ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN4']
dd ['offset', '$LN3_2']
align ['4']
endp
_ft_gzip_free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_5AE7']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_ft_gzip_check_header proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5B6C']
push ['4']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5B71']
jmp ['$Exit$26']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'byte', 'ptr', '[ebp+ecx+var_14]']
cmp ['edx,', '1Fh']
jnz ['short', 'loc_5BBD']
mov ['eax,', '1']
shl ['eax,', '0']
movzx ['ecx,', 'byte', 'ptr', '[ebp+eax+var_14]']
cmp ['ecx,', '8Bh']
jnz ['short', 'loc_5BBD']
mov ['edx,', '1']
shl ['edx,', '1']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_14]']
cmp ['eax,', '8']
jnz ['short', 'loc_5BBD']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_14]']
and ['eax,', '0E0h']
jz ['short', 'loc_5BDC']
push ['offset', '$SG8280']
push ['0D8h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$26']
push ['6']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
movzx ['ecx,', 'byte', 'ptr', '[ebp+eax+var_14]']
and ['ecx,', '4']
jz ['short', 'loc_5C39']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadUShortLE']
add ['esp,', '8']
movzx ['ecx,', 'ax']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5C34']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5C39']
jmp ['$Exit$26']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_14]']
and ['eax,', '8']
jz ['short', 'loc_5C73']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['eax,', 'al']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5C69']
jmp ['short', '$Exit$26']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_5C71']
jmp ['short', 'loc_5C73']
jmp ['short', 'loc_5C4B']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_14]']
and ['eax,', '10h']
jz ['short', 'loc_5CAD']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['eax,', 'al']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5CA3']
jmp ['short', '$Exit$26']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_5CAB']
jmp ['short', 'loc_5CAD']
jmp ['short', 'loc_5C85']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
movzx ['eax,', 'byte', 'ptr', '[ebp+edx+var_14]']
and ['eax,', '2']
jz ['short', '$Exit$26']
push ['2']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN24_0']
dd ['offset', '$LN22_1']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN23_0']
db ['5', 'dup(0CCh)']
endp
_ft_gzip_file_init proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2048h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2050h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2050h]']
mov ['[ecx+204Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2048h],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_gzip_check_header']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5DB6']
jmp ['$Exit$6']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+44h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', 'offset', '_ft_gzip_alloc']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+24h],', 'offset', '_ft_gzip_free']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[edx+28h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1048h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
push ['38h']
push ['offset', '$SG8326']
push ['0FFFFFFF1h']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_inflateInit2_']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_5E20']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', '$Exit$6']
push ['offset', '$SG8327']
push ['136h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_ft_gzip_file_done proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_inflateEnd']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ft_gzip_file_reset proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+44h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5F97']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_inflateReset']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
mov ['eax,', '[ebp+var_C]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1048h']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2048h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2050h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2050h]']
mov ['[eax+204Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2048h],', '0']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_ft_gzip_file_fill_input proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_603C']
mov ['esi,', 'esp']
push ['1000h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '48h']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_603A']
push ['offset', '$SG8359']
push ['17Dh']
push ['55h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '55h']
jmp ['loc_60BE']
jmp ['short', 'loc_6099']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+4]']
sub ['eax,', '[edx+8]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '1000h']
jbe ['short', 'loc_605B']
mov ['[ebp+var_C],', '1000h']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_607A']
push ['offset', '$SG8363']
push ['186h']
push ['55h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '55h']
jmp ['short', 'loc_60BE']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+8]']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '48h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '48h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_ft_gzip_file_fill_output proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1048h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+204Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+204Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '1000h']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jbe ['loc_61D6']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_6157']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_gzip_file_fill_input']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6157']
jmp ['short', 'loc_61D6']
push ['0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_inflate']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '1']
jnz ['short', 'loc_61AF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+2050h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+2050h]']
cmp ['ecx,', '[eax+204Ch]']
jnz ['short', 'loc_61AB']
push ['offset', '$SG8378']
push ['1B0h']
push ['55h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '55h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_61D6']
jmp ['short', 'loc_61D1']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_61D1']
push ['offset', '$SG8381']
push ['1B5h']
push ['55h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '55h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_61D6']
jmp ['loc_612A']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_ft_gzip_file_skip_output proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+2050h]']
sub ['edx,', '[ecx+204Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_6232']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+204Ch]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+204Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2048h]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+2048h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'edx']
jnz ['short', 'loc_6269']
jmp ['short', 'loc_6282']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_gzip_file_fill_output']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_6280']
jmp ['short', 'loc_6282']
jmp ['short', 'loc_620F']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ft_gzip_file_io proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+2048h]']
jnb ['short', 'loc_62DE']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_gzip_file_reset']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_62DE']
jmp ['$Exit$13']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+2048h]']
jbe ['short', 'loc_6313']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[edx+2048h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ft_gzip_file_skip_output']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6313']
jmp ['$Exit$13']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_631E']
jmp ['$Exit$13']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+2050h]']
sub ['ecx,', '[eax+204Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+arg_C]']
jb ['short', 'loc_6341']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+204Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+204Ch]']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+204Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2048h]']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2048h],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+arg_C],', 'ecx']
jnz ['short', 'loc_63A4']
jmp ['short', '$Exit$13']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_gzip_file_fill_output']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_63BB']
jmp ['short', '$Exit$13']
jmp ['loc_631E']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ft_gzip_stream_close proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_6431']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_gzip_file_done']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_640C']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_ft_gzip_stream_io proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_gzip_file_io']
add ['esp,', '10h']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_ft_gzip_get_uncompressed_size proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
sub ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_64F8']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_64E8']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_1']
dd ['offset', '$LN5_1']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_qalloc:near']
extrn ['_ft_mem_free:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Skip:near']
extrn ['_FT_Stream_Pos:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_ReadChar:near']
extrn ['_FT_Stream_ReadULong:near']
extrn ['_FT_Stream_ReadUShortLE:near']
extrn ['_FT_Throw:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['___security_cookie:near']
end

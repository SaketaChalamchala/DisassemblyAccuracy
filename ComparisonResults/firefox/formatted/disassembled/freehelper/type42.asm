endp
_T42_Face_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '74h']
push ['edi']
lea ['edi,', '[ebp+var_74]']
mov ['ecx,', '1Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '84h']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1F4h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+60h]']
mov ['[ebp+var_20],', 'ecx']
push ['offset', '$SG8238']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_FE0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+1E4h],', 'eax']
push ['offset', '$SG8240']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+1E8h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1E8h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1071']
push ['offset', '$SG8243']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8244']
push ['0C3h']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$50']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '36h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_108F']
push ['offset', '$SG8250']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_1071']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_T42_Open_Face']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_10AD']
jmp ['$Exit$50']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_10B8']
jmp ['$Exit$50']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_10EA']
push ['offset', '$SG8254']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8255']
push ['0D6h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$50']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+11Ch]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
or ['edx,', '211h']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+18h]']
test ['edx,', 'edx']
jz ['short', 'loc_1139']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '800h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG8258']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['loc_121A']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_28],', '0']
jz ['loc_1218']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_1218']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_11BC']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_1213']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '20h']
jz ['short', 'loc_11D2']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Dh']
jnz ['short', 'loc_11DD']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_1213']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jz ['short', 'loc_11F3']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_11FE']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1213']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1211']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+18h],', 'eax']
jmp ['short', 'loc_1218']
jmp ['loc_118A']
jmp ['short', 'loc_1235']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+0E8h],', '0']
jz ['short', 'loc_1235']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0E8h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['[ebp+var_50],', '9']
push ['offset', '$SG8279']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1ECh]']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1F0h]']
mov ['[ebp+var_48],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_129D']
mov ['edx,', '[ebp+var_50]']
or ['edx,', '10h']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1F4h']
push ['edx']
push ['0']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_FT_Open_Face']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_12CD']
jmp ['$Exit$50']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1F4h]']
mov ['eax,', '[edx+58h]']
push ['eax']
call ['_FT_Done_Size']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1F4h]']
add ['edx,', '34h']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '34h']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1F4h]']
mov ['edx,', '[ebp+var_14]']
mov ['ax,', '[ecx+44h]']
mov ['[edx+44h],', 'ax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1F4h]']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[edx+46h]']
mov ['[eax+46h],', 'cx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1F4h]']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[eax+48h]']
mov ['[ecx+48h],', 'dx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1F4h]']
mov ['edx,', '[ebp+var_14]']
mov ['ax,', '[ecx+4Ah]']
mov ['[edx+4Ah],', 'ax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1F4h]']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[edx+4Ch]']
mov ['[eax+4Ch],', 'cx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1F4h]']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[eax+4Eh]']
mov ['[ecx+4Eh],', 'dx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
mov ['dx,', '[ecx+1Ah]']
mov ['[eax+50h],', 'dx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
mov ['dx,', '[ecx+1Ch]']
mov ['[eax+52h],', 'dx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_13C0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
or ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1F4h]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '2']
jz ['short', 'loc_13E0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1F4h]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_1400']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
or ['eax,', '20h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['$Exit$50']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '3']
mov ['[ebp+var_5C],', 'dx']
mov ['eax,', '1']
mov ['[ebp+var_5A],', 'ax']
mov ['[ebp+var_60],', '756E6963h']
push ['0']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1468']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFh']
cmp ['ecx,', '0A3h']
jz ['short', 'loc_1468']
jmp ['$Exit$50']
mov ['[ebp+var_8],', '0']
mov ['edx,', '7']
mov ['[ebp+var_5C],', 'dx']
mov ['[ebp+var_70],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0ECh]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
sub ['edx,', '1']
mov ['[ebp+var_74],', 'edx']
cmp ['[ebp+var_74],', '3']
ja ['short', 'loc_150A']
mov ['eax,', '[ebp+var_74]']
jmp ['ds:$LN49[eax*4]']
mov ['[ebp+var_60],', '41444F42h']
xor ['ecx,', 'ecx']
mov ['[ebp+var_5A],', 'cx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_70],', 'eax']
jmp ['short', 'loc_150A']
mov ['[ebp+var_60],', '41444245h']
mov ['ecx,', '1']
mov ['[ebp+var_5A],', 'cx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_70],', 'eax']
jmp ['short', 'loc_150A']
mov ['[ebp+var_60],', '41444243h']
mov ['ecx,', '2']
mov ['[ebp+var_5A],', 'cx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_70],', 'eax']
jmp ['short', 'loc_150A']
mov ['[ebp+var_60],', '6C617431h']
mov ['ecx,', '3']
mov ['[ebp+var_5A],', 'cx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', '$Exit$50']
push ['0']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_70]']
push ['edx']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN48']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '74h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN47']
dd ['offset', '$LN45']
dd ['0FFFFFF9Ch,', '0Ch']
dd ['offset', '$LN46']
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN3']
dd ['offset', '$LN5']
db ['8', 'dup(0CCh)']
endp
_T42_Face_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_15BC']
jmp ['loc_183F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '84h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+1F4h],', '0']
jz ['short', 'loc_15F5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1F4h]']
push ['ecx']
call ['_FT_Done_Face']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_15F5']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_1614']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1635']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_1656']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_1677']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+128h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+128h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1698']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+124h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+124h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_16BF']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+120h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+120h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_16E6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+108h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+108h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_170D']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+10Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_1734']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0FCh]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+0FCh],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_175B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+100h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+100h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1782']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0E8h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0E8h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_17A9']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1ECh]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1ECh],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_17D0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+22Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+22Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_17F7']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+228h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_T42_Size_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+1F4h]']
push ['eax']
call ['_FT_New_Size']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_FT_Activate_Size']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
endp
_T42_Size_Request proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
push ['edi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
call ['_FT_Activate_Size']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1F4h]']
push ['ecx']
call ['_FT_Request_Size']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_1969']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1F4h]']
mov ['esi,', '[eax+58h]']
add ['esi,', '0Ch']
mov ['edi,', '[ebp+arg_0]']
add ['edi,', '0Ch']
mov ['ecx,', '7']
rep ['movsd']
mov ['eax,', '[ebp+var_C]']
pop ['edi']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_T42_Size_Select proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
push ['edi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
call ['_FT_Activate_Size']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1F4h]']
push ['ecx']
call ['_FT_Select_Size']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_19F9']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1F4h]']
mov ['esi,', '[eax+58h]']
add ['esi,', '0Ch']
mov ['edi,', '[ebp+arg_0]']
add ['edi,', '0Ch']
mov ['ecx,', '7']
rep ['movsd']
mov ['eax,', '[ebp+var_C]']
pop ['edi']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_T42_Size_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+1F4h]']
add ['ecx,', '6Ch']
push ['ecx']
call ['_FT_List_Find']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1A7D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
call ['_FT_Done_Size']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_T42_GlyphSlot_Init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+54h],', '0']
jnz ['short', 'loc_1AF0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+1F4h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+54h]']
mov ['[ecx+0A0h],', 'edx']
jmp ['short', 'loc_1B15']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+1F4h]']
push ['edx']
call ['_FT_New_GlyphSlot']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+0A0h],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_1']
align ['4']
endp
_T42_GlyphSlot_Load proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '36h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_1BAA']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8478']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_1B88']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A0h]']
push ['edx']
call ['_t42_glyphslot_clear']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
or ['eax,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A0h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+48h]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['loc_1D32']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[edx+0A0h]']
add ['esi,', '18h']
mov ['edi,', '[ebp+arg_0]']
add ['edi,', '18h']
mov ['ecx,', '8']
rep ['movsd']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+38h]']
mov ['[edx+38h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A0h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+3Ch]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0A0h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+48h]']
mov ['[ecx+48h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
add ['ecx,', '6Ch']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6Ch']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ecx+10h]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0A0h]']
add ['eax,', '4Ch']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4Ch']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['edx,', '[eax+10h]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[eax+14h]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A0h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+64h]']
mov ['[eax+64h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0A0h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+68h]']
mov ['[ecx+68h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+80h]']
mov ['[edx+80h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A0h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+84h]']
mov ['[eax+84h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0A0h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+88h]']
mov ['[ecx+88h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8Ch]']
mov ['[edx+8Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_T42_GlyphSlot_Done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0A0h]']
push ['edx']
call ['_FT_Done_GlyphSlot']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_T42_Driver_Init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
push ['offset', '$SG8384']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1DF1']
push ['offset', '$SG8386']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8387']
push ['1EEh']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
jmp ['short', 'loc_1DFE']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[eax+1Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_T42_Driver_Done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_t42_parser_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+48h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+50h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+54h],', '0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1EB7']
push ['11h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1EBC']
jmp ['$Exit$24']
push ['11h']
push ['offset', '$SG8781']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_1F12']
mov ['edx,', '4']
imul ['eax,', 'edx,', '36h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_1EF4']
push ['offset', '$SG8786']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1ED6']
push ['offset', '$SG8787']
push ['0B3h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1F3B']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1F40']
jmp ['$Exit$24']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_1F90']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4Ch],', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+50h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+54h],', '1']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1F8E']
jmp ['short', '$Exit$24']
jmp ['short', 'loc_1FDB']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1FD0']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1FD2']
jmp ['short', '$Exit$24']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[edx+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+50h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2035']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+54h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2035']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2014']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN22']
dd ['offset', '$LN21']
align ['4']
endp
_t42_parser_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+54h]']
test ['eax,', 'eax']
jnz ['short', 'loc_20B5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_2094']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_t42_parse_dict	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '14h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_8]']
jnb ['$Exit$27']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '46h']
jnz ['loc_22C5']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '19h']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_22C5']
mov ['esi,', 'esp']
push ['0Dh']
push ['offset', '$SG9172']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_22C5']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['loc_226E']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '6Bh']
jnz ['short', 'loc_2223']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '5']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_2223']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG9179']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_2223']
jmp ['short', 'loc_226E']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_2249']
jmp ['$Exit$27']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_21DE']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_22B8']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_1C],', '3']
jnz ['short', 'loc_22B8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
jmp ['loc_2424']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['loc_2401']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '2']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_2401']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_231A']
jmp ['$Exit$27']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_10]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '0']
jle ['loc_23FF']
cmp ['[ebp+var_2C],', '16h']
jge ['loc_23FF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['loc_23FF']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_2359']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_C]']
jge ['loc_23FF']
imul ['ecx,', '[ebp+var_30],', '24h']
add ['ecx,', 'offset', '_t42_keywords']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2382']
jmp ['short', 'loc_2350']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_38]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_23FA']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
cmp ['[ebp+var_2C],', 'eax']
jnz ['short', 'loc_23FA']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_23FA']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_t42_load_keyword']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_23F8']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_2447']
jmp ['short', 'loc_23FF']
jmp ['loc_2350']
jmp ['short', 'loc_2424']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_2424']
jmp ['short', '$Exit$27']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2147']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN25']
dd ['offset', '$LN24']
align ['4']
endp
_t42_loader_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
push ['130h']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+90h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+0D4h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0A0h],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_t42_loader_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8Ch],', '0']
jz ['short', 'loc_2520']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '5Ch']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['edx,', 'edx']
jnz ['short', 'loc_24F6']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0F8h],', '0']
jz ['short', 'loc_2551']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0F8h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2524']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0C4h],', '0']
jz ['short', 'loc_2581']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '94h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0C4h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jnz ['short', 'loc_2555']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+12Ch],', '0']
jz ['short', 'loc_25B2']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0FCh']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+12Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['edx,', 'edx']
jnz ['short', 'loc_2585']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_t42_parser_done']
add ['esp,', '4']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T42_Open_Face	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '84h']
mov ['[ebp+var_140],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_144],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_134]']
push ['eax']
call ['_t42_loader_init']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_13C],', 'ecx']
lea ['edx,', '[ebp+var_14C]']
push ['edx']
push ['0Ch']
mov ['eax,', '[ebp+var_144]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1ECh],', 'eax']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_2667']
jmp ['$Exit$24_0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1F0h],', '0Ch']
mov ['eax,', '[ebp+var_154]']
push ['eax']
mov ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
push ['eax']
mov ['ecx,', '[ebp+var_13C]']
push ['ecx']
call ['_t42_parser_init']
add ['esp,', '10h']
mov ['[ebp+var_14C],', 'eax']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_26AC']
jmp ['$Exit$24_0']
mov ['edx,', '[ebp+var_13C]']
mov ['eax,', '[edx+50h]']
push ['eax']
mov ['ecx,', '[ebp+var_13C]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
lea ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_t42_parse_dict']
add ['esp,', '10h']
mov ['[ebp+var_14C],', 'eax']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_26E7']
jmp ['$Exit$24_0']
mov ['edx,', '[ebp+var_140]']
movzx ['eax,', 'byte', 'ptr', '[edx+12Dh]']
cmp ['eax,', '2Ah']
jz ['short', 'loc_2733']
mov ['ecx,', '[ebp+var_140]']
movzx ['edx,', 'byte', 'ptr', '[ecx+12Dh]']
push ['edx']
push ['offset', '$SG8176']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8177']
push ['48h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_14C],', 'eax']
jmp ['$Exit$24_0']
mov ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax+11Ch],', 'ecx']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_2772']
push ['offset', '$SG8179']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8180']
push ['53h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_14C],', 'eax']
mov ['[ebp+var_60],', '0']
mov ['edx,', '[ebp+var_140]']
mov ['eax,', '[ebp+var_6C]']
mov ['[edx+108h],', 'eax']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ebp+var_54]']
mov ['[ecx+124h],', 'edx']
mov ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+128h],', 'ecx']
mov ['edx,', '[ebp+var_140]']
mov ['eax,', '[ebp+var_A0]']
mov ['[edx+10Ch],', 'eax']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ebp+var_88]']
mov ['[ecx+120h],', 'edx']
mov ['[ebp+var_A0],', '0']
mov ['[ebp+var_88],', '0']
mov ['eax,', '[ebp+var_140]']
cmp ['dword', 'ptr', '[eax+0ECh],', '1']
jnz ['$Exit$24_0']
mov ['[ebp+var_160],', '0']
mov ['[ebp+var_164],', '0']
mov ['[ebp+var_158],', '0']
jmp ['short', 'loc_2820']
mov ['ecx,', '[ebp+var_158]']
add ['ecx,', '1']
mov ['[ebp+var_158],', 'ecx']
mov ['edx,', '[ebp+var_158]']
cmp ['edx,', '[ebp+var_C8]']
jge ['loc_2984']
mov ['eax,', '[ebp+var_140]']
mov ['ecx,', '[eax+0FCh]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_158]']
mov ['[ecx+eax*2],', 'dx']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ecx+100h]']
mov ['eax,', '[ebp+var_158]']
mov ['dword', 'ptr', '[edx+eax*4],', 'offset', '$SG8193']
mov ['ecx,', '[ebp+var_158]']
mov ['edx,', '[ebp+var_C0]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_16C],', 'eax']
cmp ['[ebp+var_16C],', '0']
jz ['loc_297F']
mov ['[ebp+var_15C],', '0']
jmp ['short', 'loc_28A0']
mov ['ecx,', '[ebp+var_15C]']
add ['ecx,', '1']
mov ['[ebp+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_140]']
mov ['eax,', '[ebp+var_15C]']
cmp ['eax,', '[edx+11Ch]']
jge ['loc_297F']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ecx+120h]']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_168],', 'ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
mov ['eax,', '[ebp+var_16C]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_297A']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ecx+0FCh]']
mov ['eax,', '[ebp+var_158]']
mov ['cx,', 'word', 'ptr', '[ebp+var_15C]']
mov ['[edx+eax*2],', 'cx']
mov ['edx,', '[ebp+var_140]']
mov ['eax,', '[edx+100h]']
mov ['ecx,', '[ebp+var_158]']
mov ['edx,', '[ebp+var_168]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_168]']
push ['eax']
push ['offset', '$SG8207']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2978']
mov ['ecx,', '[ebp+var_158]']
cmp ['ecx,', '[ebp+var_160]']
jge ['short', 'loc_295B']
mov ['edx,', '[ebp+var_158]']
mov ['[ebp+var_160],', 'edx']
mov ['eax,', '[ebp+var_158]']
cmp ['eax,', '[ebp+var_164]']
jl ['short', 'loc_2978']
mov ['ecx,', '[ebp+var_158]']
add ['ecx,', '1']
mov ['[ebp+var_164],', 'ecx']
jmp ['short', 'loc_297F']
jmp ['loc_2891']
jmp ['loc_2811']
mov ['edx,', '[ebp+var_140]']
mov ['eax,', '[ebp+var_160]']
mov ['[edx+0F4h],', 'eax']
mov ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ebp+var_164]']
mov ['[ecx+0F8h],', 'edx']
mov ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_DC]']
mov ['[eax+0F0h],', 'ecx']
lea ['edx,', '[ebp+var_134]']
push ['edx']
call ['_t42_loader_done']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22_0']
db ['0FEh,', '2', 'dup(0FFh)']
dd ['offset', '$SG9374']
dd ['offset', '$LN20']
dd ['0FFFFFEB4h,', '4']
dd ['offset', '$LN21_0']
align ['4']
endp
_t42_glyphslot_clear proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_glyphslot_free_bitmap']
add ['esp,', '4']
push ['20h']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['14h']
push ['0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6Ch']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
push ['18h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+64h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+80h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+84h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+88h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+98h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+48h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+3Ch],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_t42_parse_font_matrix proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1B4h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1C4h']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
push ['3']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
push ['6']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '6']
jge ['short', 'loc_2B84']
push ['offset', '$SG8833']
push ['109h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
jmp ['loc_2D69']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
cmp ['[ebp+ecx+var_30],', '0']
jge ['short', 'loc_2BA6']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+eax+var_30]']
neg ['ecx']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_2BB5']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+eax+var_30]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2BF0']
push ['offset', '$SG8835']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8836']
push ['112h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_2D69']
mov ['edx,', '[ebp+var_38]']
push ['edx']
push ['3E8h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+44h],', 'ax']
cmp ['[ebp+var_38],', '10000h']
jz ['loc_2CFA']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['[ebp+edx+var_30],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['[ebp+ecx+var_30],', 'eax']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+eax+var_30]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['[ebp+edx+var_30],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['[ebp+ecx+var_30],', 'eax']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['[ebp+edx+var_30],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
cmp ['[ebp+ecx+var_30],', '0']
jge ['short', 'loc_2CE4']
mov ['[ebp+var_44],', '0FFFF0000h']
jmp ['short', 'loc_2CEB']
mov ['[ebp+var_44],', '10000h']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+eax+var_30],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+eax+var_30]']
mov ['[ecx],', 'edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+eax+var_30]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+eax+var_30]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+ecx+var_30]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+ecx+var_30]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax],', 'edx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+edx+var_30]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11']
dd ['offset', '$LN10']
db ['7', 'dup(0CCh)']
endp
_t42_parse_encoding proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jb ['short', 'loc_2E3D']
push ['offset', '$SG8850']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8851']
push ['142h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
jmp ['loc_334E']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '30h']
cmp ['ecx,', '0Ah']
jb ['short', 'loc_2E5A']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Bh']
jnz ['loc_3278']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '174h']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '5Ch']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_31],', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Bh']
jnz ['short', 'loc_2EA1']
mov ['[ebp+var_18],', '100h']
mov ['[ebp+var_31],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_2EBC']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_C]']
jb ['short', 'loc_2EE3']
jmp ['loc_334E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+58h],', 'eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
push ['2']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2F6A']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2F6A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_2F78']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+0Ch],', 'ecx']
jmp ['loc_334E']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_2F8A']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_2FBD']
mov ['[ebp+var_38],', 'offset', '$SG8877']
mov ['esi,', 'esp']
push ['8']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2F81']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_325E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '64h']
jnz ['short', 'loc_307B']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '3']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_307B']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '65h']
jnz ['short', 'loc_307B']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '66h']
jnz ['short', 'loc_307B']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
push ['ecx']
call ['_t42_is_space']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_307B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '36h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '6']
jl ['short', 'loc_3069']
push ['offset', '$SG8888']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_304B']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_325E']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Dh']
jnz ['short', 'loc_30B6']
mov ['edx,', '4']
imul ['eax,', 'edx,', '36h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '6']
jl ['short', 'loc_30A4']
push ['offset', '$SG8894']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3086']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_325E']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '30h']
cmp ['ecx,', '0Ah']
jb ['short', 'loc_30D0']
movzx ['edx,', '[ebp+var_31]']
test ['edx,', 'edx']
jz ['loc_321B']
movzx ['eax,', '[ebp+var_31]']
test ['eax,', 'eax']
jz ['short', 'loc_30E0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_3113']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_31EF']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Fh']
jnz ['loc_31EF']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jge ['loc_31EF']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_C]']
jb ['short', 'loc_317D']
jmp ['loc_334E']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_318B']
jmp ['loc_334E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_31D1']
jmp ['loc_334E']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_40]']
mov ['byte', 'ptr', '[eax+ecx],', '0']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_3219']
movzx ['eax,', '[ebp+var_31]']
test ['eax,', 'eax']
jz ['short', 'loc_3219']
push ['offset', '$SG8909']
push ['1D4h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_334E']
jmp ['short', 'loc_3241']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_3241']
jmp ['loc_334E']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2FDC']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+170h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_334E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '11h']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_32B6']
mov ['esi,', 'esp']
push ['10h']
push ['offset', '$SG8915']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_32B6']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+170h],', '2']
jmp ['loc_334E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Fh']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_32F1']
mov ['esi,', 'esp']
push ['0Eh']
push ['offset', '$SG8919']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_32F1']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+170h],', '4']
jmp ['short', 'loc_334E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '12h']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_332C']
mov ['esi,', 'esp']
push ['11h']
push ['offset', '$SG8923']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_332C']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+170h],', '3']
jmp ['short', 'loc_334E']
push ['offset', '$SG8925']
push ['1F7h']
push ['0A2h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A2h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN48_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN47_0']
dd ['offset', '$LN46_0']
db ['0Ah', 'dup(0CCh)']
endp
_t42_parse_charstrings proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0C8h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '94h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0FCh']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_2D],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_24]']
jb ['short', 'loc_344B']
push ['offset', '$SG9060']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9061']
push ['2FFh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', '30h']
cmp ['edx,', '0Ah']
jnb ['short', 'loc_348F']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+90h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_348A']
jmp ['loc_3BDC']
jmp ['loc_35A3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Ch']
jnz ['loc_3577']
mov ['[ebp+var_34],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_34CD']
jmp ['loc_3BDC']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_24]']
jnb ['short', 'loc_3575']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['short', 'loc_350F']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
jmp ['short', 'loc_3532']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Eh']
jnz ['short', 'loc_3532']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+90h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_3575']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_3558']
jmp ['loc_3BDC']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_34ED']
jmp ['short', 'loc_35A3']
push ['offset', '$SG9079']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9080']
push ['329h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_24]']
jb ['short', 'loc_35D9']
push ['offset', '$SG9082']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9083']
push ['330h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+90h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_360E']
jmp ['$Fail$44']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+90h]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3643']
jmp ['$Fail$44']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3670']
jmp ['$Fail$44']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_24]']
jb ['short', 'loc_36A4']
jmp ['loc_3922']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '65h']
jnz ['short', 'loc_3702']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '3']
cmp ['ecx,', '[ebp+var_24]']
jnb ['short', 'loc_3702']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '6Eh']
jnz ['short', 'loc_3702']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '64h']
jnz ['short', 'loc_3702']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
push ['edx']
call ['_t42_is_space']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_3702']
jmp ['loc_3922']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Eh']
jnz ['short', 'loc_3712']
jmp ['loc_3922']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_24]']
jb ['short', 'loc_3760']
push ['offset', '$SG9094']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9095']
push ['364h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_376E']
jmp ['loc_3BDC']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Fh']
jnz ['loc_391D']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '2']
cmp ['ecx,', '[ebp+var_24]']
jb ['short', 'loc_37B4']
push ['offset', '$SG9100']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9101']
push ['372h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_37FD']
jmp ['$Fail$44']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[eax+ecx*4]']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[edx+eax],', '0']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Eh']
jnz ['short', 'loc_3843']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
push ['offset', '$SG9105']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3843']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_2D],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_24]']
jb ['short', 'loc_38B1']
push ['offset', '$SG9108']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9109']
push ['391h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_38F1']
jmp ['$Fail$44']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[eax+ecx*4]']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[edx+eax],', '0']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[edx+90h]']
jb ['short', 'loc_391D']
jmp ['short', 'loc_3922']
jmp ['loc_3677']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+90h],', 'edx']
movzx ['eax,', '[ebp+var_2D]']
test ['eax,', 'eax']
jnz ['short', 'loc_3962']
push ['offset', '$SG9113']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9114']
push ['3A8h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$44']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
push ['offset', '$SG9118']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['loc_3BD1']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_39D5']
jmp ['$Fail$44']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3A21']
jmp ['$Fail$44']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3A63']
jmp ['$Fail$44']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
push ['3']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3AA5']
jmp ['$Fail$44']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3AF3']
jmp ['$Fail$44']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3B41']
jmp ['$Fail$44']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3B88']
jmp ['short', '$Fail$44']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3BD1']
jmp ['short', '$Fail$44']
jmp ['short', 'loc_3BDC']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_t42_parse_sfnts proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_40],', '0']
mov ['[ebp+var_41],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_3C8B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
cmp ['[ebp+var_58],', '5Bh']
jz ['short', 'loc_3C7E']
mov ['[ebp+var_5C],', '1']
jmp ['short', 'loc_3C85']
mov ['[ebp+var_5C],', '0']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_3CB7']
push ['offset', '$SG8953']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8954']
push ['22Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_10]']
jnb ['loc_4271']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Dh']
jnz ['short', 'loc_3D23']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
jmp ['$Exit$53']
jmp ['loc_3F18']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Ch']
jnz ['loc_3E08']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_3D58']
jmp ['$Exit$53']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx]']
sub ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jnz ['short', 'loc_3D99']
push ['offset', '$SG8966']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8967']
push ['24Ah']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3DC5']
jmp ['$Fail$52']
mov ['[ebp+var_41],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['esi,', 'esp']
push ['1']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['loc_3F18']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jnb ['loc_3F18']
movzx ['ecx,', '[ebp+var_41]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3E4E']
push ['offset', '$SG8976']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8977']
push ['25Eh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_3E9B']
push ['offset', '$SG8979']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8980']
push ['266h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_3EC1']
jmp ['loc_42B7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_3F07']
push ['offset', '$SG8983']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8984']
push ['273h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
jmp ['short', 'loc_3F18']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_2C]']
lea ['ecx,', '[eax+edx+1]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_3F4A']
push ['offset', '$SG8987']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8988']
push ['27Dh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '1']
jz ['short', 'loc_3F69']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx-1]']
test ['edx,', 'edx']
jnz ['short', 'loc_3F69']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_3F9B']
push ['offset', '$SG8991']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8992']
push ['289h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_3FAD']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_2C]']
jge ['loc_4254']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_3FDE']
cmp ['[ebp+var_60],', '1']
jz ['loc_40D1']
cmp ['[ebp+var_60],', '2']
jz ['loc_41F8']
jmp ['loc_424F']
cmp ['[ebp+var_24],', '0Ch']
jnb ['short', 'loc_400B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1ECh]']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_24]']
mov ['al,', '[eax]']
mov ['[edx+ecx],', 'al']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_3FA4']
jmp ['loc_40D1']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1ECh]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '4']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+1ECh]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
add ['edx,', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_48],', '1']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '4']
add ['edx,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+1F0h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+1F0h]']
jnb ['short', 'loc_4095']
push ['offset', '$SG9005']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9006']
push ['2A1h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['$Fail$52']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1ECh]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1F0h]']
push ['edx']
push ['0Ch']
push ['1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1ECh],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_40D1']
jmp ['$Fail$52']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[edx+1F0h]']
jnb ['short', 'loc_4109']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1ECh]']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_24]']
mov ['al,', '[eax]']
mov ['[edx+ecx],', 'al']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
jmp ['loc_3FA4']
jmp ['loc_41F8']
mov ['[ebp+var_4C],', '0']
jmp ['short', 'loc_411B']
mov ['edx,', '[ebp+var_4C]']
add ['edx,', '1']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_4C]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_41AA']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1ECh]']
mov ['eax,', '[ebp+var_4C]']
shl ['eax,', '4']
lea ['ecx,', '[edx+eax+18h]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_54]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_54]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_50],', 'edx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '3']
and ['edx,', '0FFFFFFFCh']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+1F0h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1F0h],', 'edx']
jmp ['loc_4112']
mov ['[ebp+var_48],', '2']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1ECh]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1F0h]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '4']
add ['ecx,', '0Ch']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1ECh],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_41F8']
jmp ['$Fail$52']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[edx+1F0h]']
jb ['short', 'loc_422F']
push ['offset', '$SG9033']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9034']
push ['2D0h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
jmp ['short', '$Fail$52']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1ECh]']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_24]']
mov ['al,', '[eax]']
mov ['[edx+ecx],', 'al']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
jmp ['loc_3FA4']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_3CEB']
push ['offset', '$SG9035']
push ['2DBh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'eax']
movzx ['ecx,', '[ebp+var_41]']
test ['ecx,', 'ecx']
jz ['short', 'loc_42B7']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_40],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_429C']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN50']
dd ['offset', '$LN48_1']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN49_0']
db ['0Ch', 'dup(0CCh)']
endp
_t42_is_space	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '20h']
jz ['short', 'loc_435D']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '9']
jz ['short', 'loc_435D']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_435D']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_435D']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0Ch']
jz ['short', 'loc_435D']
movzx ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jz ['short', 'loc_435D']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4364']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_t42_load_keyword proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+8],', '0Bh']
jnz ['short', 'loc_43CF']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$16']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '2']
jz ['short', 'loc_43F9']
cmp ['[ebp+var_1C],', '3']
jz ['short', 'loc_43EC']
cmp ['[ebp+var_1C],', '5']
jz ['short', 'loc_4407']
jmp ['short', 'loc_4415']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '84h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_4420']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0A4h']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_4420']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1CCh']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_4420']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '84h']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+8],', '9']
jz ['short', 'loc_4438']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+8],', '0Ah']
jnz ['short', 'loc_4463']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+44h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$16']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+40h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN14']
dd ['offset', '$LN13']
align ['4']
endp
_t42_get_glyph_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1A4h]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ft_mem_strcpyn']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_t42_get_name_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_452B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+1A0h]']
jge ['short', 'loc_45AA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1A4h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+eax]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_45A5']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_45A5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1A8h]']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__atol']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_45AC']
jmp ['loc_4522']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_t42_get_ps_font_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+16Ch]']
pop ['ebp']
retn
align ['4']
endp
_t42_ps_get_font_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '84h']
mov ['ecx,', '8']
mov ['edi,', '[ebp+arg_4]']
rep ['movsd']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebp']
retn
align ['4']
endp
_t42_ps_get_font_extra proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+0A4h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cx']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_t42_ps_has_glyph_names	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '1']
pop ['ebp']
retn
endp
_t42_ps_get_font_private proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '0A8h']
mov ['ecx,', '31h']
mov ['edi,', '[ebp+arg_4]']
rep ['movsd']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebp']
retn
align ['4']
endp
_T42_Get_Interface proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_t42_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcmp:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['__imp__strncmp:near']
extrn ['__imp__atol:near']
extrn ['_FT_Open_Face:near']
extrn ['_FT_Done_Face:near']
extrn ['_FT_Select_Size:near']
extrn ['_FT_Request_Size:near']
extrn ['_FT_DivFix:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_Get_Module:near']
extrn ['_FT_New_Size:near']
extrn ['_FT_Done_Size:near']
extrn ['_FT_Activate_Size:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_mem_strcpyn:near']
extrn ['_FT_CMap_New:near']
extrn ['_FT_Get_Module_Interface:near']
extrn ['_ft_module_get_service:near']
extrn ['_FT_New_GlyphSlot:near']
extrn ['_FT_Done_GlyphSlot:near']
extrn ['_ft_glyphslot_free_bitmap:near']
extrn ['_FT_Message:near']
extrn ['_FT_Throw:near']
extrn ['_FT_List_Find:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Skip:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_EnterFrame:near']
extrn ['_FT_Stream_ExitFrame:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

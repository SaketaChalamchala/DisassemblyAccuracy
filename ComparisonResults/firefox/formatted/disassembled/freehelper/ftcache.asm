endp
_FTC_Manager_New proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_A27']
push ['offset', '$SG8025']
push ['16Fh']
push ['21h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '21h']
jmp ['loc_B20']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_A33']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_A4F']
push ['offset', '$SG8028']
push ['172h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_B20']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['0B4h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A7A']
jmp ['$Exit$13']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_A87']
mov ['[ebp+arg_4],', '2']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_A94']
mov ['[ebp+arg_8],', '4']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_AA1']
mov ['[ebp+arg_C],', '30D40h']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_10]']
mov ['[ecx+0B0h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[eax+0ACh],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_ftc_face_list_class']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '5Ch']
push ['edx']
call ['_FTC_MruList_Init']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '_ftc_size_list_class']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '84h']
push ['eax']
call ['_FTC_MruList_Init']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN11']
dd ['offset', '$LN10']
db ['0Ah', 'dup(0CCh)']
endp
_FTC_Manager_Reset proc	near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B6F']
jmp ['short', 'loc_BA2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '84h']
push ['eax']
call ['_FTC_MruList_Reset']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '5Ch']
push ['ecx']
call ['_FTC_MruList_Reset']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FTC_Manager_FlushN']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_FTC_Manager_Done proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_BDD']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_BE2']
jmp ['loc_CD1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_C12']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_C19']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_C78']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4+18h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_C73']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_C],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_C4A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*4+18h],', '0']
jmp ['loc_BF4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '84h']
push ['ecx']
call ['_FTC_MruList_Done']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '5Ch']
push ['edx']
call ['_FTC_MruList_Done']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_0],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CB6']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_FTC_Manager_LookupFace	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_D14']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_D30']
push ['offset', '$SG7982']
push ['13Dh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_E11']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_D5B']
push ['offset', '$SG7985']
push ['142h']
push ['27h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '27h']
jmp ['loc_E11']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '64h']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', 'offset', '_ftc_face_node_compare']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_DDB']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['[ebp+var_18]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_DCB']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_1C]']
jz ['short', 'loc_DC3']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', '$_MruOk$19']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_1C]']
jnz ['short', 'loc_D8D']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '5Ch']
push ['edx']
call ['_FTC_MruList_New']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
jnz ['loc_D5B']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_E0E']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17']
dd ['offset', '$LN16']
db ['4', 'dup(0CCh)']
endp
_FTC_Manager_LookupSize	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_E84']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_EA0']
push ['offset', '$SG7899']
push ['0BEh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_F87']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_ECB']
push ['offset', '$SG7902']
push ['0C3h']
push ['27h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '27h']
jmp ['loc_F87']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8Ch']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', 'offset', '_ftc_size_node_compare']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_F4E']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['[ebp+var_18]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_F3E']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_1C]']
jz ['short', 'loc_F36']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', '$_MruOk$19_0']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_1C]']
jnz ['short', 'loc_F00']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '84h']
push ['edx']
call ['_FTC_MruList_New']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
jnz ['loc_ECB']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_F84']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17_0']
dd ['offset', '$LN16_0']
endp
_FTC_Node_Unref	proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_FF4']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_FF4']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+10h]']
mov ['edx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+58h]']
jnb ['short', 'loc_FF4']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+12h]']
sub ['cx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+12h],', 'cx']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_FTC_Manager_RemoveFaceID proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_101B']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_101D']
jmp ['short', 'loc_106B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '_ftc_face_node_compare']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '5Ch']
push ['ecx']
call ['_FTC_MruList_RemoveSelection']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1047']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+58h]']
jnb ['short', 'loc_106B']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4+18h]']
push ['edx']
call ['_FTC_Cache_RemoveFaceID']
add ['esp,', '8']
jmp ['short', 'loc_103E']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_FTC_CMapCache_New proc	near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '_ftc_cmap_cache_class']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FTC_Manager_RegisterCache']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_FTC_CMapCache_Lookup proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '80h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_80]']
mov ['ecx,', '20h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_10F6']
mov ['[ebp+var_2C],', '1']
mov ['[ebp+arg_8],', '0']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1125']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_111A']
push ['offset', '$SG8476']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_10FC']
xor ['eax,', 'eax']
jmp ['loc_1460']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1132']
xor ['eax,', 'eax']
jmp ['loc_1460']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '3']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '7']
xor ['ecx,', 'edx']
imul ['eax,', '[ebp+arg_8],', '0D3h']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_C]']
shr ['edx,', '7']
add ['ecx,', 'edx']
mov ['[ebp+var_28],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_48],', 'ecx']
mov ['[ebp+var_4C],', 'offset', '_ftc_cmap_node_compare']
mov ['[ebp+var_51],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_48]']
and ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_44]']
cmp ['eax,', '[ecx]']
jnb ['short', 'loc_11AD']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_78],', 'ecx']
jmp ['short', 'loc_11B9']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_48]']
and ['eax,', '[edx+4]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_78]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_11E1']
jmp ['$_NewNode$47']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+var_48]']
jnz ['short', 'loc_1214']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_51]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['[ebp+var_4C]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1214']
jmp ['short', 'loc_121F']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '8']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_11CE']
movzx ['ecx,', '[ebp+var_51]']
test ['ecx,', 'ecx']
jz ['short', 'loc_129A']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_48]']
and ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_44]']
cmp ['eax,', '[ecx]']
jnb ['short', 'loc_1249']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_7C],', 'ecx']
jmp ['short', 'loc_1255']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_48]']
and ['eax,', '[edx+4]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_7C]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_3C]']
jz ['short', 'loc_129A']
mov ['edx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_128D']
push ['offset', '$SG8509']
call ['_FT_Message']
add ['esp,', '4']
jmp ['short', '$_NewNode$47']
jmp ['short', 'loc_1298']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_126A']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_12C2']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_3C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '8']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[eax+8]']
jz ['short', 'loc_12EF']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
jmp ['short', '$_Ok$48']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_FTC_Cache_NewNode']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_1C],', 'edx']
xor ['eax,', 'eax']
jnz ['loc_1166']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1325']
jmp ['$Exit$49']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ecx+1Ch]']
cmp ['edx,', '80h']
jb ['short', 'loc_134D']
push ['offset', '$SG8526']
push ['11Dh']
push ['offset', '$SG8527']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_1325']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ecx+1Ch]']
cmp ['edx,', '80h']
jb ['short', 'loc_136B']
mov ['[ebp+var_80],', '1']
jmp ['short', 'loc_1372']
mov ['[ebp+var_80],', '0']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_137F']
xor ['eax,', 'eax']
jmp ['loc_1460']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+20h]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0FFFFh']
jnz ['$Exit$49']
mov ['[ebp+var_24],', '0']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+30h]']
push ['edx']
call ['_FTC_Manager_LookupFace']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_13CF']
jmp ['$Exit$49']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[eax+24h]']
jnb ['short', 'loc_1448']
mov ['[ebp+var_74],', '0']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+5Ch]']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_70]']
cmp ['edx,', '[ebp+var_74]']
jz ['short', 'loc_1417']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1417']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_FT_Set_Charmap']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_FT_Get_Char_Index']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_70]']
cmp ['ecx,', '[ebp+var_74]']
jz ['short', 'loc_1448']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1448']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_FT_Set_Charmap']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_1C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_24]']
mov ['[eax+edx*2+20h],', 'cx']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN46']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '80h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN45']
dd ['offset', '$LN41']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN42']
dd ['0FFFFFFAFh,', '1']
dd ['offset', '$LN43']
dd ['0FFFFFF98h,', '4']
dd ['offset', '$LN44']
db ['9', 'dup(0CCh)']
endp
_FTC_ImageCache_New proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '_ftc_basic_image_cache_class']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FTC_GCache_New']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_FTC_ImageCache_Lookup proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A8]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_30],', '0']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_155D']
push ['offset', '$SG9107']
push ['124h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_34],', 'eax']
jmp ['$Exit$52']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1575']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
sub ['eax,', '80000000h']
cmp ['eax,', '0FFFFFFFFh']
jbe ['short', 'loc_15B1']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_15AD']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0']
push ['ecx']
push ['offset', '$SG9119']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_1585']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_15FB']
mov ['[ebp+var_9C],', '0']
jmp ['short', 'loc_160B']
imul ['edx,', '[ebp+var_10],', '21h']
imul ['eax,', '[ebp+var_C],', '3Dh']
xor ['edx,', 'eax']
mov ['[ebp+var_9C],', 'edx']
mov ['ecx,', '[ebp+var_20]']
sar ['ecx,', '3']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '7']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_1C]']
imul ['eax,', '[ebp+var_18],', '7']
add ['ecx,', '[ebp+var_9C]']
add ['eax,', 'ecx']
imul ['ecx,', '[ebp+var_8],', '1Fh']
add ['eax,', '[ebp+arg_8]']
add ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_3C],', 'edx']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_44],', 'offset', '_ftc_basic_family_compare']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '48h']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_58],', 'ecx']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[edx]']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_60],', '0']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_16CE']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_60],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['[ebp+var_58]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_16BE']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+var_5C]']
jz ['short', 'loc_16B6']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_4C],', 'edx']
jmp ['short', '$_MruOk$53']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+var_5C]']
jnz ['short', 'loc_1680']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '40h']
push ['edx']
call ['_FTC_MruList_New']
add ['esp,', '0Ch']
mov ['[ebp+var_34],', 'eax']
xor ['eax,', 'eax']
jnz ['loc_164F']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_4C]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_34],', '0']
jnz ['loc_1936']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_64]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_84],', 'offset', '_FTC_GNode_Compare']
mov ['[ebp+var_89],', '0']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_7C]']
cmp ['edx,', '[eax]']
jnb ['short', 'loc_176B']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+edx+1]']
and ['eax,', '[ebp+var_80]']
mov ['[ebp+var_A0],', 'eax']
jmp ['short', 'loc_177A']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_A0]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_17A5']
jmp ['$_NewNode$54']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', '[ebp+var_80]']
jnz ['short', 'loc_17DE']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_89]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['[ebp+var_84]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_17DE']
jmp ['short', 'loc_17E9']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '8']
mov ['[ebp+var_6C],', 'edx']
jmp ['short', 'loc_1792']
movzx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jz ['short', 'loc_1870']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_7C]']
cmp ['edx,', '[eax]']
jnb ['short', 'loc_1819']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+edx+1]']
and ['eax,', '[ebp+var_80]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_1828']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['[ebp+var_A4],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_A4]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_74]']
jz ['short', 'loc_1870']
mov ['ecx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_1863']
push ['offset', '$SG9182']
call ['_FT_Message']
add ['esp,', '4']
jmp ['short', '$_NewNode$54']
jmp ['short', 'loc_186E']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
add ['eax,', '8']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_1840']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ecx]']
jz ['short', 'loc_1898']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_94]']
add ['ecx,', '8']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_94]']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[edx+8]']
jz ['short', 'loc_18D4']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_98]']
push ['edx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
jmp ['short', '$_Ok$55']
lea ['eax,', '[ebp+var_74]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
push ['edx']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
call ['_FTC_Cache_NewNode']
add ['esp,', '10h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_30],', 'ecx']
xor ['edx,', 'edx']
jnz ['loc_171B']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[ebp+var_A8]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_A8],', '0']
jnz ['short', 'loc_1936']
mov ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '40h']
push ['edx']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['loc_1634']
cmp ['[ebp+var_34],', '0']
jnz ['short', '$Exit$52']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', '$Exit$52']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['cx,', '[eax+12h]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+12h],', 'cx']
mov ['eax,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN50']
dd ['offset', '$LN46_0']
dd ['0FFFFFFB4h,', '4']
dd ['offset', '$LN47']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN48']
dd ['0FFFFFF77h,', '1']
dd ['offset', '$LN49']
align ['4']
endp
_FTC_ImageCache_LookupScaler proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A8]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_30],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1A24']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1A43']
push ['offset', '$SG9216']
push ['16Dh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_34],', 'eax']
jmp ['$Exit$53']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_1A5B']
mov ['ecx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[ecx],', '0']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jbe ['short', 'loc_1A8A']
mov ['edx,', '4']
imul ['eax,', 'edx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_1A86']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0']
push ['ecx']
push ['offset', '$SG9227']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_1A61']
mov ['eax,', '18h']
imul ['ecx,', 'eax,', '0']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ecx+4]']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ecx+14h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1AD0']
mov ['[ebp+var_9C],', '0']
jmp ['short', 'loc_1AE0']
imul ['edx,', '[ebp+var_10],', '21h']
imul ['eax,', '[ebp+var_C],', '3Dh']
xor ['edx,', 'eax']
mov ['[ebp+var_9C],', 'edx']
mov ['ecx,', '[ebp+var_20]']
sar ['ecx,', '3']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '7']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_1C]']
imul ['eax,', '[ebp+var_18],', '7']
add ['ecx,', '[ebp+var_9C]']
add ['eax,', 'ecx']
imul ['ecx,', '[ebp+var_8],', '1Fh']
add ['eax,', '[ebp+arg_C]']
add ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_3C],', 'edx']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_44],', 'offset', '_ftc_basic_family_compare']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '48h']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_58],', 'ecx']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_54]']
mov ['eax,', '[edx]']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_60],', '0']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_1BA3']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_60],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['[ebp+var_58]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1B93']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+var_5C]']
jz ['short', 'loc_1B8B']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_4C],', 'edx']
jmp ['short', '$_MruOk$54']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+var_5C]']
jnz ['short', 'loc_1B55']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '40h']
push ['edx']
call ['_FTC_MruList_New']
add ['esp,', '0Ch']
mov ['[ebp+var_34],', 'eax']
xor ['eax,', 'eax']
jnz ['loc_1B24']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_4C]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_34],', '0']
jnz ['loc_1E0B']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_64]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_84],', 'offset', '_FTC_GNode_Compare']
mov ['[ebp+var_89],', '0']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_7C]']
cmp ['edx,', '[eax]']
jnb ['short', 'loc_1C40']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+edx+1]']
and ['eax,', '[ebp+var_80]']
mov ['[ebp+var_A0],', 'eax']
jmp ['short', 'loc_1C4F']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_A0]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_1C7A']
jmp ['$_NewNode$55']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', '[ebp+var_80]']
jnz ['short', 'loc_1CB3']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_89]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['[ebp+var_84]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1CB3']
jmp ['short', 'loc_1CBE']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '8']
mov ['[ebp+var_6C],', 'edx']
jmp ['short', 'loc_1C67']
movzx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jz ['short', 'loc_1D45']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_7C]']
cmp ['edx,', '[eax]']
jnb ['short', 'loc_1CEE']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+edx+1]']
and ['eax,', '[ebp+var_80]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_1CFD']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_80]']
and ['edx,', '[ecx+4]']
mov ['[ebp+var_A4],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_A4]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_74]']
jz ['short', 'loc_1D45']
mov ['ecx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_1D38']
push ['offset', '$SG9290']
call ['_FT_Message']
add ['esp,', '4']
jmp ['short', '$_NewNode$55']
jmp ['short', 'loc_1D43']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
add ['eax,', '8']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_1D15']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ecx]']
jz ['short', 'loc_1D6D']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_94]']
add ['ecx,', '8']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_94]']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[edx+8]']
jz ['short', 'loc_1DA9']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_98]']
push ['edx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
jmp ['short', '$_Ok$56']
lea ['eax,', '[ebp+var_74]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
push ['edx']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
call ['_FTC_Cache_NewNode']
add ['esp,', '10h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_30],', 'ecx']
xor ['edx,', 'edx']
jnz ['loc_1BF0']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[ebp+var_A8]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_A8],', '0']
jnz ['short', 'loc_1E0B']
mov ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '40h']
push ['edx']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['loc_1B09']
cmp ['[ebp+var_34],', '0']
jnz ['short', '$Exit$53']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_14],', '0']
jz ['short', '$Exit$53']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['cx,', '[eax+12h]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+12h],', 'cx']
mov ['eax,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN52']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN51_0']
dd ['offset', '$LN47_0']
dd ['0FFFFFFB4h,', '4']
dd ['offset', '$LN48_0']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN49_0']
dd ['0FFFFFF77h,', '1']
dd ['offset', '$LN50_0']
db ['0Dh', 'dup(0CCh)']
endp
_FTC_SBitCache_New proc	near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '_ftc_basic_sbit_cache_class']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FTC_GCache_New']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_FTC_SBitCache_Lookup proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A8]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_34],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1F37']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1F59']
push ['offset', '$SG9334']
push ['1DDh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_2373']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
sub ['eax,', '80000000h']
cmp ['eax,', '0FFFFFFFFh']
jbe ['short', 'loc_1F9E']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_1F9A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0']
push ['ecx']
push ['offset', '$SG9343']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_1F72']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_18],', '1']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1FE8']
mov ['[ebp+var_9C],', '0']
jmp ['short', 'loc_1FF8']
imul ['edx,', '[ebp+var_14],', '21h']
imul ['eax,', '[ebp+var_10],', '3Dh']
xor ['edx,', 'eax']
mov ['[ebp+var_9C],', 'edx']
mov ['ecx,', '[ebp+var_24]']
sar ['ecx,', '3']
mov ['edx,', '[ebp+var_24]']
shl ['edx,', '7']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_20]']
imul ['eax,', '[ebp+var_1C],', '7']
add ['ecx,', '[ebp+var_9C]']
add ['eax,', 'ecx']
imul ['ecx,', '[ebp+var_C],', '1Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_8]']
shr ['edx,', '4']
add ['eax,', 'edx']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_44],', 'offset', '_ftc_basic_family_compare']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '48h']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[ebp+var_58],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_60],', '0']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_20C0']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_60],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
call ['[ebp+var_58]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_20B0']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_5C]']
jz ['short', 'loc_20A8']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_54]']
push ['edx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_4C],', 'eax']
jmp ['short', '$_MruOk$52']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_5C]']
jnz ['short', 'loc_2072']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '40h']
push ['eax']
call ['_FTC_MruList_New']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
xor ['ecx,', 'ecx']
jnz ['loc_2041']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_4C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['loc_2328']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_64]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_80],', 'ecx']
mov ['[ebp+var_84],', 'offset', '_FTC_SNode_Compare']
mov ['[ebp+var_89],', '0']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_7C]']
cmp ['eax,', '[ecx]']
jnb ['short', 'loc_215D']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_A0],', 'ecx']
jmp ['short', 'loc_216C']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_A0]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_2197']
jmp ['$_NewNode$53']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+var_80]']
jnz ['short', 'loc_21D0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_89]']
push ['ecx']
mov ['edx,', '[ebp+var_7C]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['[ebp+var_84]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_21D0']
jmp ['short', 'loc_21DB']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '8']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_2184']
movzx ['ecx,', '[ebp+var_89]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2262']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_7C]']
cmp ['eax,', '[ecx]']
jnb ['short', 'loc_220B']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_A4],', 'ecx']
jmp ['short', 'loc_221A']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_A4]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_74]']
jz ['short', 'loc_2262']
mov ['edx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_2255']
push ['offset', '$SG9406']
call ['_FT_Message']
add ['esp,', '4']
jmp ['short', '$_NewNode$53']
jmp ['short', 'loc_2260']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_6C],', 'ecx']
jmp ['short', 'loc_2232']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_228A']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_74]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_94],', 'ecx']
mov ['edx,', '[ebp+var_94]']
add ['edx,', '8']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax+8]']
jz ['short', 'loc_22C6']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_98]']
push ['eax']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
jmp ['short', '$_Ok$54']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_FTC_Cache_NewNode']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_74]']
mov ['[ebp+var_34],', 'edx']
xor ['eax,', 'eax']
jnz ['loc_210D']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_A8]']
mov ['[eax+8],', 'ecx']
cmp ['[ebp+var_A8],', '0']
jnz ['short', 'loc_2328']
mov ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '40h']
push ['eax']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_2026']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2338']
jmp ['short', '$Exit$55']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[edx+18h]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_34]']
lea ['edx,', '[ecx+eax+20h]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', '$Exit$55']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['cx,', '[eax+12h]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_34]']
mov ['[edx+12h],', 'cx']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN50_1']
dd ['offset', '$LN46_1']
dd ['0FFFFFFB4h,', '4']
dd ['offset', '$LN47_1']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN48_1']
dd ['0FFFFFF77h,', '1']
dd ['offset', '$LN49_1']
align ['4']
endp
_FTC_SBitCache_LookupScaler proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_A8]']
mov ['ecx,', '2Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_34],', '0']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_2427']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2433']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_244F']
push ['offset', '$SG9444']
push ['228h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_2858']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx],', '0']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jbe ['short', 'loc_2487']
mov ['edx,', '4']
imul ['eax,', 'edx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_2483']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0']
push ['ecx']
push ['offset', '$SG9452']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_245E']
mov ['eax,', '18h']
imul ['ecx,', 'eax,', '0']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ecx+4]']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ecx+14h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_24CD']
mov ['[ebp+var_9C],', '0']
jmp ['short', 'loc_24DD']
imul ['edx,', '[ebp+var_14],', '21h']
imul ['eax,', '[ebp+var_10],', '3Dh']
xor ['edx,', 'eax']
mov ['[ebp+var_9C],', 'edx']
mov ['ecx,', '[ebp+var_24]']
sar ['ecx,', '3']
mov ['edx,', '[ebp+var_24]']
shl ['edx,', '7']
xor ['ecx,', 'edx']
add ['ecx,', '[ebp+var_20]']
imul ['eax,', '[ebp+var_1C],', '7']
add ['ecx,', '[ebp+var_9C]']
add ['eax,', 'ecx']
imul ['ecx,', '[ebp+var_C],', '1Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_C]']
shr ['edx,', '4']
add ['eax,', 'edx']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_44],', 'offset', '_ftc_basic_family_compare']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '48h']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[ebp+var_58],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_60],', '0']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_25A5']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_60],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
call ['[ebp+var_58]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2595']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_5C]']
jz ['short', 'loc_258D']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_54]']
push ['edx']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_4C],', 'eax']
jmp ['short', '$_MruOk$53_0']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_5C]']
jnz ['short', 'loc_2557']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '40h']
push ['eax']
call ['_FTC_MruList_New']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
xor ['ecx,', 'ecx']
jnz ['loc_2526']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_4C]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['loc_280D']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_64]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_80],', 'ecx']
mov ['[ebp+var_84],', 'offset', '_FTC_SNode_Compare']
mov ['[ebp+var_89],', '0']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_7C]']
cmp ['eax,', '[ecx]']
jnb ['short', 'loc_2642']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_A0],', 'ecx']
jmp ['short', 'loc_2651']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_A0]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_267C']
jmp ['$_NewNode$54_0']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+var_80]']
jnz ['short', 'loc_26B5']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_89]']
push ['ecx']
mov ['edx,', '[ebp+var_7C]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['[ebp+var_84]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_26B5']
jmp ['short', 'loc_26C0']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '8']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_2669']
movzx ['ecx,', '[ebp+var_89]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2747']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_7C]']
cmp ['eax,', '[ecx]']
jnb ['short', 'loc_26F0']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_A4],', 'ecx']
jmp ['short', 'loc_26FF']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '[edx+4]']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_A4]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_74]']
jz ['short', 'loc_2747']
mov ['edx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_273A']
push ['offset', '$SG9515']
call ['_FT_Message']
add ['esp,', '4']
jmp ['short', '$_NewNode$54_0']
jmp ['short', 'loc_2745']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_6C],', 'ecx']
jmp ['short', 'loc_2717']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_276F']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_74]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_94],', 'ecx']
mov ['edx,', '[ebp+var_94]']
add ['edx,', '8']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax+8]']
jz ['short', 'loc_27AB']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_98]']
push ['eax']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
jmp ['short', '$_Ok$55_0']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_FTC_Cache_NewNode']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_74]']
mov ['[ebp+var_34],', 'edx']
xor ['eax,', 'eax']
jnz ['loc_25F2']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_A8]']
mov ['[eax+8],', 'ecx']
cmp ['[ebp+var_A8],', '0']
jnz ['short', 'loc_280D']
mov ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '40h']
push ['eax']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_250B']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_281D']
jmp ['short', '$Exit$56']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[edx+18h]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_34]']
lea ['edx,', '[ecx+eax+20h]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'edx']
cmp ['[ebp+arg_14],', '0']
jz ['short', '$Exit$56']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['cx,', '[eax+12h]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_34]']
mov ['[edx+12h],', 'cx']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN52_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN51_2']
dd ['offset', '$LN47_2']
dd ['0FFFFFFB4h,', '4']
dd ['offset', '$LN48_2']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN49_2']
dd ['0FFFFFF77h,', '1']
dd ['offset', '$LN50_2']
db ['0Dh', 'dup(0CCh)']
endp
_FTC_MruNode_Prepend proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2933']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
jmp ['short', 'loc_2944']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_FTC_MruNode_Up	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_298D']
push ['offset', '$SG7343']
push ['4Fh']
push ['offset', '$SG7344']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_2973']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_29EE']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_FTC_MruNode_Remove proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2A44']
push ['offset', '$SG7362']
push ['81h']
push ['offset', '$SG7363']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_2A27']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_2AC3']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_2A91']
push ['offset', '$SG7369']
push ['9Eh']
push ['offset', '$SG7370']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2A72']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jz ['short', 'loc_2AB4']
push ['offset', '$SG7375']
push ['9Fh']
push ['offset', '$SG7376']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_2A95']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
jmp ['short', 'loc_2AD3']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_4]']
jnz ['short', 'loc_2AD3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_FTC_MruList_Init proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[edx+10h]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_10]']
mov ['[edx+24h],', 'eax']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_FTC_MruList_Reset proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_2B65']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
jmp ['short', 'loc_2B47']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2B84']
push ['offset', '$SG7402']
push ['0BEh']
push ['offset', '$SG7403']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_2B65']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_FTC_MruList_Done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FTC_MruList_Reset']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_FTC_MruList_New proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax+4]']
jb ['loc_2CC1']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jbe ['loc_2CC1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_2C26']
push ['offset', '$SG7423']
push ['0F9h']
push ['offset', '$SG7424']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_2C09']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jz ['short', 'loc_2C77']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
call ['_FTC_MruNode_Up']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2C77']
jmp ['$Exit$21']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_FTC_MruNode_Remove']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_2CBF']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2CE3']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2CE3']
jmp ['short', '$Exit$21']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2D11']
jmp ['short', '$Fail$22']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_FTC_MruNode_Prepend']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_2D83']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jz ['short', 'loc_2D66']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_10],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2D66']
jmp ['short', '$Exit$21']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN18_1']
db ['6', 'dup(0CCh)']
endp
_FTC_MruList_Remove proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
call ['_FTC_MruNode_Remove']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+20h],', '0']
jz ['short', 'loc_2E21']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_4],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2E21']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_FTC_MruList_RemoveSelection proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2EBE']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2EA3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2EBE']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2E79']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2F12']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_4]']
jz ['short', 'loc_2F12']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2F0A']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2ECC']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_FTC_Cache_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ftc_cache_init']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_FTC_Cache_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ftc_cache_done']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_FTC_Cache_NewNode proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2FCC']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '0FFh']
cmp ['ecx,', '40h']
jz ['short', 'loc_2FCE']
jmp ['short', 'loc_302B']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_FTC_Manager_FlushN']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jbe ['short', 'loc_2FF2']
xor ['ecx,', 'ecx']
jz ['short', 'loc_2FF2']
mov ['byte', 'ptr', '$SG9216,', '1']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_2FFA']
jmp ['short', 'loc_302B']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_3026']
mov ['eax,', '[ebp+var_18]']
shl ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_1C]']
jb ['short', 'loc_301D']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[edx+14h]']
jbe ['short', 'loc_3026']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_2F95']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_303A']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_304E']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ftc_cache_add']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15']
dd ['offset', '$LN14']
db ['0Fh', 'dup(0CCh)']
endp
_FTC_Cache_RemoveFaceID	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[eax+edx+1]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_30EF']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_317B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_21],', '0']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_3124']
jmp ['short', 'loc_3176']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_21]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_316B']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+8]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_3174']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '8']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_3110']
jmp ['loc_30E6']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_31F7']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_10],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_ftc_node_mru_unlink']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
jmp ['short', 'loc_317B']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ftc_cache_resize']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN14_0']
dd ['offset', '$LN13']
db ['0Fh', 'dup(0CCh)']
endp
_FTC_Manager_Compress proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3273']
jmp ['short', 'loc_32F0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax+0Ch]']
jb ['short', 'loc_3290']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3292']
jmp ['short', 'loc_32F0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jnz ['short', 'loc_32AC']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_32B5']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx+12h]']
test ['eax,', 'eax']
jg ['short', 'loc_32D6']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ftc_node_destroy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_32F0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', '[edx+0Ch]']
ja ['short', 'loc_329B']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_FTC_Manager_FlushN proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_332E']
xor ['eax,', 'eax']
jmp ['short', 'loc_3388']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_3385']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+12h]']
test ['edx,', 'edx']
jg ['short', 'loc_3373']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ftc_node_destroy']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_337D']
jmp ['short', 'loc_3385']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_333E']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_FTC_Manager_RegisterCache proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '6']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['$Exit$14']
cmp ['[ebp+arg_4],', '0']
jz ['$Exit$14']
cmp ['[ebp+arg_8],', '0']
jz ['$Exit$14']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+58h],', '10h']
jb ['short', 'loc_342A']
push ['offset', '$SG8093']
push ['251h']
push ['70h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '70h']
mov ['[ebp+var_8],', 'eax']
push ['offset', '$SG8094']
call ['_FT_Message']
add ['esp,', '4']
jmp ['$Exit$14']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['$Exit$14']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '20h']
imul ['esi,', 'edx,', '0']
add ['esi,', '[ebp+arg_4]']
mov ['edi,', '[ebp+var_10]']
add ['edi,', '10h']
mov ['ecx,', '8']
rep ['movsd']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['[edx+38h],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_34E3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_10],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_34C6']
jmp ['short', '$Exit$14']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+eax*4+18h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3510']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12_0']
dd ['offset', '$LN11_0']
db ['6', 'dup(0CCh)']
endp
_FTC_GNode_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+8],', 'edx']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_FTC_GNode_Compare proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ftc_gnode_compare']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_FTC_GNode_UnselectFamily proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_360F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_360F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '40h']
push ['edx']
call ['_FTC_MruList_Remove']
add ['esp,', '8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_FTC_GNode_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FTC_GNode_UnselectFamily']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_FTC_Family_Init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_FTC_GCache_New	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FTC_Manager_RegisterCache']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_FTC_INode_Free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ftc_inode_free']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_FTC_INode_New	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_14],', '0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['20h']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_37A4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+3Ch]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_FTC_GNode_Init']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+14h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_37A4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FTC_INode_Free']
add ['esp,', '8']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
db ['0Ah', 'dup(0CCh)']
endp
_FTC_SNode_Free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ftc_snode_free']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_FTC_SNode_New	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+3Ch]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_20],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_3888']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_24]']
jb ['short', 'loc_38A7']
push ['offset', '$SG8853']
push ['0E2h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$14_0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['120h']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['$Exit$14_0']
mov ['eax,', '[ebp+var_18]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', 'edx']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '10h']
jbe ['short', 'loc_38F3']
mov ['[ebp+var_2C],', '10h']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FTC_GNode_Init']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+1Ch],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_3922']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_2C]']
jnb ['short', 'loc_393A']
mov ['eax,', '[ebp+var_28]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+eax+20h],', '0FFh']
jmp ['short', 'loc_3919']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ftc_snode_load']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', '$Exit$14_0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FTC_SNode_Free']
add ['esp,', '8']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN12_1']
dd ['offset', '$LN11_1']
db ['0Ah', 'dup(0CCh)']
endp
_FTC_SNode_Compare proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ftc_snode_compare']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_ftc_inode_free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_3A39']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_FT_Done_Glyph']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FTC_GNode_Done']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_3A49']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_inode_new	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FTC_INode_New']
add ['esp,', '0Ch']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ftc_inode_weight proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '62697473h']
jz ['short', 'loc_3B1A']
cmp ['[ebp+var_18],', '6F75746Ch']
jz ['short', 'loc_3B3E']
jmp ['short', 'loc_3B5C']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_labs']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
imul ['eax,', '[ecx+1Ch]']
add ['eax,', '34h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3B5C']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'word', 'ptr', '[eax+16h]']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'word', 'ptr', '[eax+14h]']
lea ['edx,', '[edx+ecx*2+28h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '20h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ftc_snode_free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_3BD0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jbe ['short', 'loc_3BF9']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3BD6']
jmp ['short', 'loc_3BBE']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FTC_GNode_Done']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_3C09']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_snode_new	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FTC_SNode_New']
add ['esp,', '0Ch']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ftc_snode_weight proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '20h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+1Ch],', '10h']
jbe ['short', 'loc_3CDC']
push ['offset', '$SG8893']
push ['123h']
push ['offset', '$SG8894']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_3CBC']
mov ['[ebp+var_14],', '120h']
jmp ['short', 'loc_3CFB']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '10h']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_8],', '0']
jbe ['short', 'loc_3D35']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_3D33']
mov ['ecx,', '[ebp+var_C]']
movsx ['edx,', 'word', 'ptr', '[ecx+6]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jge ['short', 'loc_3D22']
mov ['eax,', '[ebp+var_10]']
neg ['eax']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
imul ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_3CE9']
mov ['eax,', '[ebp+var_14]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ftc_snode_compare proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_3D90']
mov ['edx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_3DB5']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_4]']
cmp ['ecx,', '[edx+1Ch]']
jnb ['short', 'loc_3DB5']
mov ['[ebp+var_35],', '1']
jmp ['short', 'loc_3DB9']
mov ['[ebp+var_35],', '0']
mov ['al,', '[ebp+var_35]']
mov ['[ebp+var_11],', 'al']
movzx ['ecx,', '[ebp+var_11]']
test ['ecx,', 'ecx']
jz ['loc_3EE7']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx+18h]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax+20h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['loc_3EE7']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0FFh']
jnz ['loc_3EE7']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+12h]']
add ['cx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+12h],', 'cx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_30],', '4']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+30h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ftc_snode_load']
add ['esp,', '10h']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3E54']
mov ['ecx,', '[ebp+var_28]']
and ['ecx,', '0FFh']
cmp ['ecx,', '40h']
jz ['short', 'loc_3E56']
jmp ['short', 'loc_3EB4']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_FTC_Manager_FlushN']
add ['esp,', '8']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jbe ['short', 'loc_3E7B']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_3E7B']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx],', '1']
cmp ['[ebp+var_34],', '0']
jnz ['short', 'loc_3E83']
jmp ['short', 'loc_3EB4']
mov ['edx,', '[ebp+var_34]']
cmp ['edx,', '[ebp+var_30]']
jnz ['short', 'loc_3EAF']
mov ['eax,', '[ebp+var_30]']
shl ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_34]']
jb ['short', 'loc_3EA6']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx+14h]']
jbe ['short', 'loc_3EAF']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_30],', 'edx']
jmp ['loc_3E22']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+12h]']
sub ['cx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+12h],', 'cx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3ED2']
mov ['[ebp+var_11],', '0']
jmp ['short', 'loc_3EE7']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ecx+10h],', 'edx']
mov ['al,', '[ebp+var_11]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20_0']
dd ['offset', '$LN19_0']
db ['0Fh', 'dup(0CCh)']
endp
_ftc_gnode_compare proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_3F6D']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+14h]']
cmp ['eax,', '[edx+4]']
jnz ['short', 'loc_3F8E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+18h]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_3F8E']
mov ['byte', 'ptr', '[ebp+var_C+3],', '1']
jmp ['short', 'loc_3F92']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_ftc_gcache_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FTC_Cache_Init']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4006']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '40h']
push ['eax']
call ['_FTC_MruList_Init']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_ftc_gcache_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FTC_Cache_Done']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '40h']
push ['edx']
call ['_FTC_MruList_Done']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_ftc_cache_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '7']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8],', '10h']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
push ['10h']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
db ['6', 'dup(0CCh)']
endp
_ftc_cache_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
jz ['short', 'loc_4175']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FTC_Cache_Clear']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_412D']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_node_destroy proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+10h]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4+18h]']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx+10h]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ftc_node_mru_unlink']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ftc_node_hash_unlink']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ftc_scaler_lookup_size	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FTC_Manager_LookupFace']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_426F']
jmp ['$Exit$12']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_New_Size']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_428A']
jmp ['short', '$Exit$12']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_FT_Activate_Size']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_42BE']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Set_Pixel_Sizes']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_42E9']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Set_Char_Size']
add ['esp,', '14h']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', '$Exit$12']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FT_Done_Size']
add ['esp,', '4']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN10_0']
dd ['offset', '$LN8']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN9']
db ['0Eh', 'dup(0CCh)']
endp
_ftc_size_node_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_439F']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Done_Size']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_ftc_size_node_compare proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['loc_4485']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['loc_4485']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_4485']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_4425']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_442C']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_443E']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_4445']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jnz ['short', 'loc_4485']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_4472']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_4485']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+14h]']
cmp ['eax,', '[edx+14h]']
jnz ['short', 'loc_4485']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_FT_Activate_Size']
add ['esp,', '4']
mov ['al,', '1']
jmp ['short', 'loc_4487']
xor ['al,', 'al']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_ftc_size_node_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '18h']
imul ['ecx,', 'eax,', '0']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ecx+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ecx+14h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_ftc_scaler_lookup_size']
add ['esp,', '0Ch']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_ftc_size_node_reset proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_FT_Done_Size']
add ['esp,', '4']
mov ['edx,', '18h']
imul ['eax,', 'edx,', '0']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['edx,', '[eax+10h]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[eax+14h]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ftc_scaler_lookup_size']
add ['esp,', '0Ch']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_ftc_size_node_compare_faceid proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_460C']
mov ['byte', 'ptr', '[ebp+var_C+3],', '1']
jmp ['short', 'loc_4610']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_ftc_face_node_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0ACh]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0B0h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_46B0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
cmp ['dword', 'ptr', '[edx+58h],', '0']
jz ['short', 'loc_46B0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+58h]']
push ['edx']
call ['_FT_Done_Size']
add ['esp,', '4']
mov ['eax,', '[ebp+var_10]']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_face_node_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
push ['offset', '_ftc_size_node_compare_faceid']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '84h']
push ['ecx']
call ['_FTC_MruList_RemoveSelection']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_FT_Done_Face']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_face_node_compare proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_476C']
mov ['byte', 'ptr', '[ebp+var_C+3],', '1']
jmp ['short', 'loc_4770']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_ftc_node_mru_link proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FTC_MruNode_Prepend']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+14h],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_ftc_node_mru_unlink proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FTC_MruNode_Remove']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+14h],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_ftc_cache_resize proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+ecx+1]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jge ['loc_4960']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jb ['short', 'loc_48BA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_1C],', 'ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', 'ds:4[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
lea ['edx,', '[ecx+ecx+2]']
push ['edx']
push ['4']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_48BA']
jmp ['loc_4A58']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_48D9']
jmp ['short', 'loc_490E']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
and ['edx,', '[eax+0Ch]']
jz ['short', 'loc_4903']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_490C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_48C9']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['eax,', '[ebp+var_18]']
mov ['[ecx+edx*4+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_10]']
jb ['short', 'loc_4950']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+edx+1]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
jmp ['short', 'loc_495B']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
jmp ['loc_4A53']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+var_14]']
jle ['loc_4A51']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
cmp ['edx,', '8']
ja ['short', 'loc_4988']
jmp ['loc_4A58']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_49E9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_34],', 'ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_49D0']
jmp ['loc_4A58']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
shr ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_49F2']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4A16']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
add ['edx,', '8']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_4A01']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_2C]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
sub ['eax,', '2']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_4A53']
jmp ['short', 'loc_4A58']
jmp ['loc_483A']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN26']
dd ['offset', '$LN24']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN25']
endp
_ftc_node_hash_unlink proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+0Ch]']
and ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax]']
jnb ['short', 'loc_4AE7']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+edx+1]']
mov ['ecx,', '[ebp+arg_0]']
and ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_4AF6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4B37']
mov ['edx,', '4']
imul ['eax,', 'edx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_4B31']
push ['offset', '$SG8224']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4B13']
jmp ['short', 'loc_4B7E']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_4B41']
jmp ['short', 'loc_4B4E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_4B05']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ftc_cache_resize']
add ['esp,', '4']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_ftc_node_hash_link proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+0Ch]']
and ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax]']
jnb ['short', 'loc_4BD0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+edx+1]']
mov ['ecx,', '[ebp+arg_0]']
and ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4BDF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ftc_cache_resize']
add ['esp,', '4']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_FTC_Cache_Clear proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['loc_4D51']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['loc_4D51']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[ecx+eax+1]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4C96']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnb ['loc_4D45']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_4D30']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_ftc_node_mru_unlink']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'edx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_4CB9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+edx*4],', '0']
jmp ['loc_4C8D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ftc_cache_resize']
add ['esp,', '4']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_ftc_cache_add	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+38h]']
mov ['[edx+10h],', 'cx']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+12h],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ftc_node_hash_link']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ftc_node_mru_link']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+10h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+0Ch]']
jb ['short', 'loc_4E22']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', '[eax+12h]']
add ['cx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+12h],', 'cx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FTC_Manager_Compress']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_8]']
mov ['dx,', '[ecx+12h]']
sub ['dx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+12h],', 'dx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_cmap_node_free proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_4E57']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_ftc_cmap_node_new proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_1C],', '0']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['120h']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_4F37']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
shr ['ecx,', '7']
shl ['ecx,', '7']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+1Ch],', 'ecx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4F1C']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '80h']
jnb ['short', 'loc_4F37']
mov ['ecx,', '0FFFFh']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_1C]']
mov ['[eax+edx*2+20h],', 'cx']
jmp ['short', 'loc_4F13']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_0']
dd ['offset', '$LN7_0']
db ['6', 'dup(0CCh)']
endp
_ftc_cmap_node_weight proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '14h']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_ftc_cmap_node_compare proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4FD9']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+14h]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_501B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+18h]']
cmp ['eax,', '[edx+4]']
jnz ['short', 'loc_501B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+1Ch]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '80h']
jnb ['short', 'loc_5012']
mov ['byte', 'ptr', '[ebp+var_10+3],', '1']
jmp ['short', 'loc_5016']
mov ['byte', 'ptr', '[ebp+var_10+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_10+3]']
jmp ['short', 'loc_501D']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ftc_cmap_node_remove_faceid proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_505D']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_506E']
mov ['byte', 'ptr', '[ebp+var_C+3],', '1']
jmp ['short', 'loc_5072']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_ftc_sbit_copy_bitmap proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jge ['short', 'loc_50B5']
mov ['edx,', '[ebp+var_10]']
neg ['edx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
imul ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_50FB']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_1']
db ['0Ah', 'dup(0CCh)']
endp
_ftc_snode_load	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+1Ch]']
jb ['short', 'loc_51AA']
push ['offset', '$SG8775']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8776']
push ['77h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_5412']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[edx+18h]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+20h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5205']
jmp ['$BadGlyph$24']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+54h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4Ch']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[eax+48h],', '62697473h']
jz ['short', 'loc_524A']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_5241']
push ['offset', '$SG8790']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_5223']
jmp ['$BadGlyph$24']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+40h]']
add ['edx,', '20h']
sar ['edx,', '6']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+44h]']
add ['ecx,', '20h']
sar ['ecx,', '6']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_52ED']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[edx+4]']
jnz ['short', 'loc_52ED']
mov ['ecx,', '[ebp+var_30]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_52ED']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'byte', 'ptr', '[edx+64h]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ecx+64h]']
jnz ['short', 'loc_52ED']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+68h]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[edx+68h]']
jnz ['short', 'loc_52ED']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_34]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_34]']
jnz ['short', 'loc_52ED']
movsx ['eax,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_38]']
jz ['short', 'loc_5314']
mov ['edx,', '4']
imul ['eax,', 'edx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_530B']
push ['offset', '$SG8818']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_52ED']
jmp ['$BadGlyph$24']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_30]']
mov ['cl,', '[eax+4]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_30]']
mov ['cl,', '[eax]']
mov ['[edx+1],', 'cl']
mov ['edx,', '[ebp+var_30]']
movsx ['ax,', 'byte', 'ptr', '[edx+8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+6],', 'ax']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[eax+64h]']
mov ['[edx+2],', 'cl']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[eax+68h]']
mov ['[edx+3],', 'cl']
mov ['edx,', '[ebp+var_20]']
mov ['al,', 'byte', 'ptr', '[ebp+var_34]']
mov ['[edx+8],', 'al']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[ecx+9],', 'dl']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_30]']
mov ['dl,', '[ecx+12h]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'word', 'ptr', '[eax+10h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+5],', 'cl']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_ftc_sbit_copy_bitmap']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_53CF']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'word', 'ptr', '[eax+6]']
test ['ecx,', 'ecx']
jge ['short', 'loc_53B5']
mov ['edx,', '[ebp+var_20]']
movsx ['eax,', 'word', 'ptr', '[edx+6]']
neg ['eax']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_53BF']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'word', 'ptr', '[ecx+6]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
imul ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_540F']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '0FFh']
cmp ['eax,', '40h']
jz ['short', 'loc_540F']
mov ['ecx,', '[ebp+var_20]']
mov ['byte', 'ptr', '[ecx],', '0FFh']
mov ['edx,', '[ebp+var_20]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_540F']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22']
dd ['offset', '$LN21_0']
db ['7', 'dup(0CCh)']
endp
_ftc_basic_family_compare proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+8]']
jnz ['loc_551F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+18h]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['loc_551F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+1Ch]']
cmp ['ecx,', '[eax+10h]']
jnz ['short', 'loc_551F']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jz ['short', 'loc_54BE']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_54C5']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_54D7']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_54DE']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_10]']
jnz ['short', 'loc_551F']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jnz ['short', 'loc_550B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+24h]']
cmp ['edx,', '[ecx+18h]']
jnz ['short', 'loc_551F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+1Ch]']
jnz ['short', 'loc_551F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+2Ch]']
cmp ['edx,', '[ecx+20h]']
jnz ['short', 'loc_551F']
mov ['byte', 'ptr', '[ebp+var_14+3],', '1']
jmp ['short', 'loc_5523']
mov ['byte', 'ptr', '[ebp+var_14+3],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_ftc_basic_family_init proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
push ['edi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FTC_Family_Init']
add ['esp,', '8']
mov ['esi,', '[ebp+var_8]']
add ['esi,', '8']
mov ['edi,', '[ebp+var_4]']
add ['edi,', '14h']
mov ['ecx,', '7']
rep ['movsd']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_ftc_basic_family_get_count proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', '0']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FTC_Manager_LookupFace']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_55F4']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_55F9']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_5646']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+10h],', '0FFFFFFFFh']
ja ['short', 'loc_560B']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jge ['short', 'loc_5634']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '11h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_5630']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
push ['offset', '$SG9015']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_560B']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5643']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13_2']
dd ['offset', '$LN12_2']
align ['4']
endp
_ftc_basic_family_load_bitmap proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '14h']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_FTC_Manager_LookupSize']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_56FA']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
or ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_FT_Load_Glyph']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_56FA']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6_1']
dd ['offset', '$LN5_2']
db ['0Fh', 'dup(0CCh)']
endp
_ftc_basic_family_load_glyph proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
mov ['[ebp+var_C],', 'ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+30h]']
push ['edx']
call ['_FTC_Manager_LookupSize']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['$Exit$13_0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_FT_Load_Glyph']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', '$Exit$13_0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+54h]']
cmp ['dword', 'ptr', '[ecx+48h],', '62697473h']
jz ['short', 'loc_57D3']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+54h]']
cmp ['dword', 'ptr', '[eax+48h],', '6F75746Ch']
jnz ['short', 'loc_57FB']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+54h]']
push ['eax']
call ['_FT_Get_Glyph']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_57F9']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx],', 'edx']
jmp ['short', '$Exit$13_0']
jmp ['short', '$Exit$13_0']
push ['offset', '$SG9059']
push ['0BEh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11_3']
dd ['offset', '$LN9_1']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN10_1']
align ['4']
endp
_ftc_basic_gnode_compare_faceid	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_589C']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_58AD']
mov ['byte', 'ptr', '[ebp+var_10+2],', '1']
jmp ['short', 'loc_58B1']
mov ['byte', 'ptr', '[ebp+var_10+2],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10+2]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_10+3]']
test ['edx,', 'edx']
jz ['short', 'loc_58CF']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FTC_GNode_UnselectFamily']
add ['esp,', '8']
mov ['al,', 'byte', 'ptr', '[ebp+var_10+3]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcpy:near']
extrn ['_labs:near']
extrn ['_FT_Done_Face:near']
extrn ['_FT_Set_Char_Size:near']
extrn ['_FT_Set_Pixel_Sizes:near']
extrn ['_FT_Load_Glyph:near']
extrn ['_FT_Set_Charmap:near']
extrn ['_FT_Get_Char_Index:near']
extrn ['_FT_Get_Glyph:near']
extrn ['_FT_Done_Glyph:near']
extrn ['_FT_New_Size:near']
extrn ['_FT_Done_Size:near']
extrn ['_FT_Activate_Size:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_FT_Message:near']
extrn ['_FT_Panic:near']
extrn ['_FT_Throw:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
end

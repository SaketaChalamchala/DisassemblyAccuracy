endp
_FT_OpenType_Validate proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_A2']
push ['offset', '$SG7053']
push ['2Bh']
push ['23h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '23h']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$11']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_C0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_C0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_C0']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_C0']
cmp ['[ebp+arg_18],', '0']
jnz ['short', 'loc_D9']
push ['offset', '$SG7057']
push ['35h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$11']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+60h]']
mov ['[ebp+var_C],', 'ecx']
push ['offset', '$SG7065']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D9']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13A']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '1Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$11']
push ['offset', '$SG7068']
push ['44h']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['8']
endp
_FT_OpenType_Free proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_17B']
jmp ['short', 'loc_19F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_4],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_184']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_FT_Throw:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_module_get_service:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
end

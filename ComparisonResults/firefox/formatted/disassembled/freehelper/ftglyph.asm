endp
_FT_Get_Glyph	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4A']
push ['offset', '$SG7259']
push ['16Eh']
push ['25h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '25h']
jmp ['loc_162']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_74']
push ['offset', '$SG7261']
push ['173h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_162']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+48h],', '62697473h']
jnz ['short', 'loc_89']
mov ['[ebp+var_18],', 'offset', '_ft_bitmap_glyph_class']
jmp ['short', 'loc_C5']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+48h],', '6F75746Ch']
jnz ['short', 'loc_9E']
mov ['[ebp+var_18],', 'offset', '_ft_outline_glyph_class']
jmp ['short', 'loc_C5']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Lookup_Renderer']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_C5']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '14h']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_E7']
push ['offset', '$SG7269']
push ['189h']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$17']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_new_glyph']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_106']
jmp ['short', '$Exit$17']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+40h]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+44h]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+10h],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_157']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Done_Glyph']
add ['esp,', '4']
jmp ['short', '$Exit$17']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15']
dd ['offset', '$LN14']
align ['10h']
endp
_FT_Glyph_Copy	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1D0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1D0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1EF']
push ['offset', '$SG7238']
push ['13Fh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$14']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_207']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_226']
push ['offset', '$SG7243']
push ['147h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$14']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ft_new_glyph']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_250']
jmp ['short', '$Exit$14']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[eax+10h]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_296']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2AA']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Done_Glyph']
add ['esp,', '4']
jmp ['short', '$Exit$14']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
align ['10h']
endp
_FT_Glyph_Transform proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_32B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_347']
push ['offset', '$SG7284']
push ['1AFh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_3AE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_394']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_392']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_FT_Vector_Transform']
add ['esp,', '8']
jmp ['short', 'loc_3AE']
push ['offset', '$SG7290']
push ['1BFh']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_FT_Glyph_Get_CBox proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_3D7']
jmp ['loc_4D7']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_40D']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_412']
jmp ['loc_4D7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['short', 'loc_429']
jmp ['loc_4D7']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_451']
cmp ['[ebp+arg_4],', '3']
jnz ['short', 'loc_491']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFFFC0h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '0FFFFFFC0h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '3Fh']
and ['ecx,', '0FFFFFFC0h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '3Fh']
and ['ecx,', '0FFFFFFC0h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+0Ch],', 'ecx']
cmp ['[ebp+arg_4],', '2']
jz ['short', 'loc_49D']
cmp ['[ebp+arg_4],', '3']
jnz ['short', 'loc_4D7']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+0Ch],', 'ecx']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_FT_Glyph_To_Bitmap proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_E0],', '0']
mov ['[ebp+var_F4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_536']
jmp ['$Bad$23']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_F0],', 'ecx']
cmp ['[ebp+var_F0],', '0']
jnz ['short', 'loc_54F']
jmp ['$Bad$23']
mov ['edx,', '[ebp+var_F0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_FC],', 'edx']
cmp ['[ebp+var_FC],', '0']
jz ['short', 'loc_57E']
cmp ['[ebp+var_F8],', '0']
jnz ['short', 'loc_583']
jmp ['$Bad$23']
cmp ['[ebp+var_F8],', 'offset', '_ft_bitmap_glyph_class']
jnz ['short', 'loc_594']
jmp ['$Exit$24']
mov ['eax,', '[ebp+var_F8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_5A5']
jmp ['$Bad$23']
push ['0A0h']
push ['0']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['28h']
push ['0']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_60],', 'eax']
lea ['ecx,', '[ebp+var_E8]']
push ['ecx']
push ['offset', '_ft_bitmap_glyph_class']
mov ['edx,', '[ebp+var_FC]']
push ['edx']
call ['_ft_new_glyph']
add ['esp,', '0Ch']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_61E']
jmp ['$Exit$24']
mov ['eax,', '[ebp+var_E8]']
mov ['[ebp+var_F4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_645']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
call ['_FT_Glyph_Transform']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+var_F0]']
push ['ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jnz ['short', 'loc_69B']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['eax,', '[ebp+var_F0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_Render_Glyph_Internal']
add ['esp,', '0Ch']
mov ['[ebp+var_E0],', 'eax']
movzx ['edx,', '[ebp+arg_C]']
test ['edx,', 'edx']
jnz ['short', 'loc_6DC']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_6DC']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
neg ['ecx']
mov ['[ebp+var_108],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
neg ['eax']
mov ['[ebp+var_104],', 'eax']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
call ['_FT_Glyph_Transform']
add ['esp,', '0Ch']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_6E7']
jmp ['short', '$Exit$24']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_ft_bitmap_glyph_init']
add ['esp,', '8']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_70E']
jmp ['short', '$Exit$24']
mov ['edx,', '[ebp+var_F0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx+10h]']
mov ['edx,', '[ebp+var_F4]']
mov ['[edx+0Ch],', 'eax']
mov ['[edx+10h],', 'ecx']
movzx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_73D']
mov ['ecx,', '[ebp+var_F0]']
push ['ecx']
call ['_FT_Done_Glyph']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_F4]']
mov ['[edx],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_769']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_769']
mov ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_FT_Done_Glyph']
add ['esp,', '4']
mov ['eax,', '[ebp+var_E0]']
jmp ['short', 'loc_790']
push ['offset', '$SG7346']
push ['259h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_E0],', 'eax']
jmp ['short', '$Exit$24']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN21']
dd ['offset', '$LN17']
dd ['0FFFFFF28h,', '28h']
dd ['offset', '$LN18']
dd ['0FFFFFF18h,', '4']
dd ['offset', '$LN19']
dd ['0FFFFFEF8h,', '8']
dd ['offset', '$LN20']
align ['10h']
endp
_FT_Done_Glyph	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_88A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_86F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_0],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_86F']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_bitmap_glyph_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '62697473h']
jz ['short', 'loc_8F8']
push ['offset', '$SG7113']
push ['46h']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+64h]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+68h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+9Ch]']
mov ['eax,', '[edx+4]']
and ['eax,', '1']
jz ['short', 'loc_96C']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4Ch']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1Ch']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ecx+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ecx+14h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '0FFFFFFFEh']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['[eax+4],', 'ecx']
jmp ['short', '$Exit$6']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
push ['ecx']
call ['_FT_Bitmap_New']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1Ch']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_FT_Bitmap_Copy']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_bitmap_glyph_copy proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1Ch']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Bitmap_Copy']
add ['esp,', '0Ch']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_bitmap_glyph_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Bitmap_Done']
add ['esp,', '8']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_bitmap_glyph_bbox proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_outline_glyph_init proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '6Ch']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+48h],', '6F75746Ch']
jz ['short', 'loc_B39']
push ['offset', '$SG7160']
push ['0ABh']
push ['12h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '12h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$5']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_FT_Outline_New']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B66']
jmp ['short', '$Exit$5']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Outline_Copy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_outline_glyph_done proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_FT_Outline_Done']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_outline_glyph_copy proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+16h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Outline_New']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C3D']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '14h']
push ['edx']
call ['_FT_Outline_Copy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_outline_glyph_transform proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C7A']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '14h']
push ['edx']
call ['_FT_Outline_Transform']
add ['esp,', '8']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_C9C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
push ['ecx']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_outline_glyph_bbox proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '14h']
push ['edx']
call ['_FT_Outline_Get_CBox']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_outline_glyph_prepare proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+48h],', '6F75746Ch']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '14h']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '6Ch']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[edx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+7Ch]']
and ['ecx,', '0FFFFFFFEh']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+7Ch],', 'ecx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_new_glyph	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_DC6']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_rdata']
public ['_ft_outline_glyph_class']
dd ['6F75746Ch']
dd ['offset', '_ft_outline_glyph_init']
dd ['offset', '_ft_outline_glyph_done']
dd ['offset', '_ft_outline_glyph_copy']
dd ['offset', '_ft_outline_glyph_transform']
dd ['offset', '_ft_outline_glyph_bbox']
dd ['offset', '_ft_outline_glyph_prepare']
public ['_ft_bitmap_glyph_class']
dd ['62697473h']
dd ['offset', '_ft_bitmap_glyph_init']
dd ['offset', '_ft_bitmap_glyph_done']
dd ['offset', '_ft_bitmap_glyph_copy']
dd ['0']
dd ['offset', '_ft_bitmap_glyph_bbox']
dd ['0']
assume ['cs:_data']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memset:near']
extrn ['_FT_Vector_Transform:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Outline_New:near']
extrn ['_FT_Outline_Done:near']
extrn ['_FT_Outline_Get_CBox:near']
extrn ['_FT_Outline_Translate:near']
extrn ['_FT_Outline_Copy:near']
extrn ['_FT_Outline_Transform:near']
extrn ['_FT_Bitmap_New:near']
extrn ['_FT_Bitmap_Copy:near']
extrn ['_FT_Bitmap_Done:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_free:near']
extrn ['_FT_Lookup_Renderer:near']
extrn ['_FT_Render_Glyph_Internal:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['___security_cookie:near']
end

endp
_tt_face_lookup_table proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['byte', 'ptr', '[ebp+var_C+3],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_31A0']
movsx ['edx,', 'byte', 'ptr', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '8']
movsx ['ecx,', 'al']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
shr ['edx,', '10h']
movsx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '18h']
movsx ['edx,', 'cl']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8112']
call ['_FT_Message']
add ['esp,', '18h']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_315B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+98h]']
shl ['edx,', '4']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_31CE']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '10h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_3216']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_3214']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_3210']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_3207']
push ['offset', '$SG8122']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_31E9']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_3266']
mov ['byte', 'ptr', '[ebp+var_C+3],', '1']
jmp ['short', 'loc_31C5']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['edx,', 'edx']
jz ['short', 'loc_3242']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_323C']
push ['offset', '$SG8128']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_321E']
jmp ['short', 'loc_3264']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_3260']
push ['offset', '$SG8134']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_3242']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_tt_face_goto_table proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_lookup_table']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_32DA']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_32BA']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_32D8']
jmp ['short', '$Exit$7']
jmp ['short', '$Exit$7']
push ['offset', '$SG8153']
push ['91h']
push ['8Eh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Eh']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_face_load_font_dir proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_3357']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '$SG8315']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_3335']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_33A1']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['offset', '?offset_table_fields@?1??tt_face_load_font_dir@@9@9']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_33A6']
jmp ['$Exit$48']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_33C9']
movzx ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '$SG8324']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_33A6']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_33EF']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['offset', '$SG8329']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_33CD']
cmp ['[ebp+var_18],', '4F54544Fh']
jz ['short', 'loc_343C']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
call ['_check_table_dir']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_343C']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_3433']
push ['offset', '$SG8341']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_3415']
jmp ['$Exit$48']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[ebp+var_14]']
mov ['[eax+98h],', 'cx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+94h],', 'eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+98h]']
push ['eax']
push ['0']
push ['10h']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+9Ch],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_348B']
jmp ['$Exit$48']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_34CA']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+98h]']
shl ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_34CF']
jmp ['$Exit$48']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_34F9']
push ['offset', '$SG8353']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_34DB']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_350F']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
movzx ['edx,', '[ebp+var_14]']
cmp ['[ebp+var_34],', 'edx']
jge ['loc_35FC']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+0Ch]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_3585']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_30]']
cmp ['[edx+8],', 'ecx']
jbe ['short', 'loc_358C']
jmp ['loc_3506']
jmp ['short', 'loc_35F7']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_35EA']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
shr ['edx,', '8']
movsx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
shr ['edx,', '10h']
movsx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
shr ['edx,', '18h']
movsx ['eax,', 'dl']
push ['eax']
push ['offset', '$SG8372']
call ['_FT_Message']
add ['esp,', '20h']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_358C']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '10h']
mov ['[ebp+var_30],', 'edx']
jmp ['loc_3506']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_3626']
push ['offset', '$SG8377']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_3608']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN47']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN46']
dd ['offset', '$LN44']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN45']
db ['9', 'dup(0CCh)']
endp
_tt_face_load_any proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_36FA']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_lookup_table']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_36E3']
push ['offset', '$SG8395']
push ['1E8h']
push ['8Eh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Eh']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$9']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[edx+8]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_3706']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_3720']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_3720']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
xor ['eax,', 'eax']
jmp ['short', 'loc_3755']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_372E']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_ReadAt']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_tt_face_load_head proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['68656164h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_load_generic_header']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_tt_face_load_cmap proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1F8h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['636D6170h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_37E0']
jmp ['short', '$Exit$5']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1F4h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1F8h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', '$Exit$5']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1F8h],', '0']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_face_load_maxp proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '104h']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['6D617870h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3880']
jmp ['$Exit$22']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '?maxp_fields@?1??tt_face_load_maxp@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_38A3']
jmp ['$Exit$22']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+6],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Ah],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+12h],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+16h],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+18h],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1Ah],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+1Ch],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1Eh],', 'cx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '(offset', 'loc_FFFE+2)']
jl ['loc_39E1']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['offset', '?maxp_fields_extra@?1??tt_face_load_maxp@@9@9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_394A']
jmp ['$Exit$22']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
cmp ['ecx,', '40h']
jge ['short', 'loc_3962']
mov ['edx,', '40h']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+14h],', 'dx']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+10h]']
cmp ['edx,', '0FFFBh']
jbe ['short', 'loc_399F']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_398F']
push ['offset', '$SG8646']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_3971']
mov ['eax,', '0FFFBh']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'ax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+1Eh]']
cmp ['eax,', '64h']
jle ['short', 'loc_39E1']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_39D1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+1Eh]']
push ['ecx']
push ['offset', '$SG8652']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_39AB']
mov ['eax,', '64h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1Eh],', 'ax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_3A07']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
push ['edx']
push ['offset', '$SG8657']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_39E1']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_tt_face_load_name proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '158h']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['6E616D65h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1FCh]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3A97']
jmp ['$Exit$19']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
push ['offset', '?name_table_fields@?1??tt_face_load_name@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3AC9']
jmp ['$Exit$19']
mov ['ecx,', '[ebp+var_30]']
imul ['edx,', '[ecx+4],', '0Ch']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+edx+6]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_28]']
jbe ['short', 'loc_3B1C']
push ['offset', '$SG8729']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8730']
push ['327h']
push ['91h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '91h']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$19']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['dword', 'ptr', '[eax+4],', '0']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
push ['0']
push ['14h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3B6F']
imul ['edx,', '[ebp+var_2C],', '0Ch']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3B74']
jmp ['$Exit$19']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_34],', 'edx']
jmp ['short', 'loc_3B88']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jbe ['loc_3C17']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
push ['offset', '?name_record_fields@?1??tt_face_load_name@@9@9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3BB2']
jmp ['short', 'loc_3B7F']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3BBF']
jmp ['short', 'loc_3B7F']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_34]']
add ['eax,', '[ecx+0Ch]']
mov ['edx,', '[ebp+var_34]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_24]']
jb ['short', 'loc_3BF1']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
mov ['ecx,', '[ebp+var_34]']
add ['eax,', '[ecx+0Ch]']
cmp ['eax,', '[ebp+var_28]']
jbe ['short', 'loc_3C09']
mov ['edx,', '[ebp+var_34]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+8],', 'ax']
jmp ['loc_3B7F']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '14h']
mov ['[ebp+var_34],', 'edx']
jmp ['loc_3B7F']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_34]']
sub ['ecx,', '[eax+0Ch]']
mov ['eax,', 'ecx']
cdq
mov ['ecx,', '14h']
idiv ['ecx']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_30]']
mov ['ax,', '[edx+4]']
mov ['[ecx+154h],', 'ax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17']
dd ['offset', '$LN15']
dd ['0FFFFFFE4h,', '4']
dd ['offset', '$LN16']
db ['8', 'dup(0CCh)']
endp
_tt_face_load_os2 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['4F532F32h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1FCh]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3CF5']
jmp ['$Exit$31']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '16Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '?os2_fields@?1??tt_face_load_os2@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3D24']
jmp ['$Exit$31']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+50h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+54h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+58h],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+5Ah],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+5Ch],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+5Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+60h],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+62h],', 'cx']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+64h],', 'ax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '1']
jl ['short', 'loc_3E04']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['offset', '?os2_fields_extra1@?1??tt_face_load_os2@@9@9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3DA8']
jmp ['$Exit$31']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2']
jl ['short', 'loc_3E04']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '?os2_fields_extra2@?1??tt_face_load_os2@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3DD6']
jmp ['$Exit$31']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '5']
jl ['short', 'loc_3E04']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['offset', '?os2_fields_extra5@?1??tt_face_load_os2@@9@9']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3E04']
jmp ['$Exit$31']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_3E2A']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+46h]']
push ['edx']
push ['offset', '$SG9069']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_3E04']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_3E54']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+48h]']
push ['ecx']
push ['offset', '$SG9074']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_3E2E']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_3E7E']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+4Ch]']
push ['eax']
push ['offset', '$SG9079']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3E58']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_3EA8']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+4Eh]']
push ['edx']
push ['offset', '$SG9084']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_3E82']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_3ED2']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+40h]']
push ['ecx']
push ['offset', '$SG9089']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_3EAC']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_face_load_post proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1D4h']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['706F7374h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3F4A']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_3FD6']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '?post_fields@?1??tt_face_load_post@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3F6D']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_3FD6']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_3F91']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['offset', '$SG9155']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_3F6D']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_3FD0']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_3FB8']
mov ['[ebp+var_C],', 'offset', '$SG9160']
jmp ['short', 'loc_3FBF']
mov ['[ebp+var_C],', 'offset', '$SG9161']
mov ['eax,', '[ebp+var_C]']
push ['eax']
push ['offset', '$SG9162']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3F95']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_tt_face_load_pclt proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '224h']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['50434C54h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_403D']
jmp ['short', '$Exit$5_0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '?pclt_fields@?1??tt_face_load_pclt@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_face_free_name proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '158h']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_411C']
jmp ['short', 'loc_40C9']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '14h']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_40FB']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+10h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_40CF']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+8],', 'cx']
jmp ['short', 'loc_40B7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_40FB']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+4],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+8],', '0']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_tt_face_load_gasp proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_1C],', '0']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['67617370h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_41B1']
jmp ['$Exit$22_0']
push ['4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_41CD']
jmp ['$Exit$22_0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+21Ch],', 'ax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+21Eh],', 'ax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+21Ch]']
cmp ['ecx,', '2']
jl ['short', 'loc_423F']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+21Eh],', 'dx']
push ['offset', '$SG9272']
push ['4EEh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$22_0']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+21Eh]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_426E']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['offset', '$SG9277']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_424C']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+220h],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_42B7']
mov ['edx,', '[ebp+var_18]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_42BC']
jmp ['$Exit$22_0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+220h]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_42DA']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_434E']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+ecx*4],', 'ax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+ecx*4+2],', 'ax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_4348']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*4+2]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
push ['offset', '$SG9292']
call ['_FT_Message']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['short', 'loc_430F']
jmp ['short', 'loc_42D1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN20']
dd ['offset', '$LN19']
align ['4']
endp
_tt_face_load_bhed proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['62686564h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_load_generic_header']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_check_table_dir proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_18],', 'ax']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '0Ch']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4431']
jmp ['$Exit$60']
xor ['edx,', 'edx']
mov ['[ebp+var_14],', 'dx']
jmp ['short', 'loc_4445']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
movzx ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
cmp ['ecx,', 'eax']
jge ['loc_4650']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
push ['offset', '?table_dir_entry_fields@?1??check_table_dir@@9@9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_44DE']
mov ['ax,', '[ebp+var_14]']
sub ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_44CA']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '1']
jnz ['short', 'loc_44A5']
mov ['[ebp+var_48],', 'offset', '$SG8201']
jmp ['short', 'loc_44AC']
mov ['[ebp+var_48],', 'offset', '$SG8202']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
movzx ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '$SG8203']
call ['_FT_Message']
add ['esp,', '10h']
xor ['edx,', 'edx']
jnz ['short', 'loc_4482']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[ebp+var_14]']
mov ['[eax+4],', 'cx']
jmp ['loc_4650']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx+4]']
ja ['short', 'loc_44F7']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+var_30]']
cmp ['[ebp+var_34],', 'edx']
jbe ['short', 'loc_4525']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_451A']
movzx ['edx,', '[ebp+var_14]']
push ['edx']
push ['offset', '$SG8210']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_44F7']
jmp ['loc_4439']
jmp ['short', 'loc_4531']
mov ['cx,', '[ebp+var_18]']
add ['cx,', '1']
mov ['[ebp+var_18],', 'cx']
cmp ['[ebp+var_3C],', '68656164h']
jz ['short', 'loc_4547']
cmp ['[ebp+var_3C],', '62686564h']
jnz ['loc_4629']
mov ['[ebp+var_1C],', '1']
cmp ['[ebp+var_30],', '36h']
jnb ['short', 'loc_459A']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_4572']
push ['offset', '$SG8230']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4554']
push ['offset', '$SG8231']
push ['0F4h']
push ['8Eh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Eh']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$60']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_45CF']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_45D4']
jmp ['$Exit$60']
cmp ['[ebp+var_44],', '5F0F3CF5h']
jz ['short', 'loc_45FF']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_45FB']
push ['offset', '$SG8241']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_45DD']
movzx ['eax,', '[ebp+var_14]']
add ['eax,', '1']
shl ['eax,', '4']
add ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4627']
jmp ['$Exit$60']
jmp ['short', 'loc_464B']
cmp ['[ebp+var_3C],', '53494E47h']
jnz ['short', 'loc_463B']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_464B']
cmp ['[ebp+var_3C],', '4D455441h']
jnz ['short', 'loc_464B']
mov ['[ebp+var_24],', '1']
jmp ['loc_4439']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[ebp+var_18]']
mov ['[edx+4],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jnz ['short', 'loc_46A7']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_4684']
push ['offset', '$SG8263']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_4666']
push ['offset', '$SG8264']
push ['10Eh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$60']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_46B9']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_46C4']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_46C4']
mov ['[ebp+var_C],', '0']
jmp ['short', '$Exit$60']
jmp ['short', '$Exit$60']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_46E2']
push ['offset', '$SG8272']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_46C4']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_4704']
push ['offset', '$SG8277']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_46E6']
push ['offset', '$SG8278']
push ['120h']
push ['8Eh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Eh']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN59']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN58']
dd ['offset', '$LN56']
dd ['0FFFFFFC4h,', '10h']
dd ['offset', '$LN57']
db ['0Ch', 'dup(0CCh)']
endp
_tt_face_load_generic_header proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_47D4']
jmp ['$Exit$13']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0A0h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['offset', '?header_fields@?1??tt_face_load_generic_header@@9@9']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4800']
jmp ['short', '$Exit$13']
mov ['edx,', '4']
imul ['eax,', 'edx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_4826']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+12h]']
push ['edx']
push ['offset', '$SG8518']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_4800']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '16h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_4850']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+32h]']
push ['ecx']
push ['offset', '$SG8523']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_482A']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_tt_face_load_hhea proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_48D8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '128h']
mov ['[ebp+var_C],', 'ecx']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['76686561h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_48D0']
jmp ['$Fail$20']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4918']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['68686561h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_490C']
jmp ['$Fail$20']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0D8h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['offset', '?metrics_header_fields@?1??tt_face_load_hhea@@9@9']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_493B']
jmp ['$Fail$20']
mov ['edx,', '4']
imul ['eax,', 'edx,', '17h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_4961']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+4]']
push ['edx']
push ['offset', '$SG9464']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_493B']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '17h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_498B']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+6]']
push ['ecx']
push ['offset', '$SG9469']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_4965']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '17h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_49B5']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+22h]']
push ['eax']
push ['offset', '$SG9474']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_498F']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_tt_face_load_hmtx proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_4A36']
mov ['[ebp+var_8],', '766D7478h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '314h']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2B4h']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_4A54']
mov ['[ebp+var_8],', '686D7478h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '310h']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2ACh']
mov ['[ebp+var_1C],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_4A86']
jmp ['short', '$Fail$9']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7']
dd ['offset', '$LN6']
db ['9', 'dup(0CCh)']
endp
_tt_face_get_metrics proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_10],', 'ecx']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_4B3E']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '128h']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+314h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2B4h]']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_4B61']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0D8h']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+310h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2ACh]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax+22h]']
mov ['[ebp+var_24],', 'cx']
movzx ['edx,', '[ebp+var_24]']
test ['edx,', 'edx']
jle ['$NoData$21']
movzx ['eax,', '[ebp+var_24]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_4C01']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4']
cmp ['ecx,', '[ebp+var_20]']
jbe ['short', 'loc_4BA6']
jmp ['$NoData$21']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4BF7']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'ax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4BF7']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'ax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4BFC']
jmp ['$NoData$21']
jmp ['loc_4CAD']
movzx ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_18]']
lea ['ecx,', '[eax+edx*4-4]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '4']
cmp ['edx,', '[ebp+var_20]']
jbe ['short', 'loc_4C1F']
jmp ['$NoData$21']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4C54']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'ax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4C56']
jmp ['short', '$NoData$21']
movzx ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+var_18]']
lea ['edx,', '[ecx+eax*2+4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_4C7E']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'cx']
jmp ['short', 'loc_4CAD']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4CAD']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'ax']
jmp ['short', 'loc_4CBF']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'cx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN19_0']
dd ['offset', '$LN18_0']
align ['4']
endp
_tt_face_build_cmaps proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0ACh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_AC]']
mov ['ecx,', '2Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1F4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[edx+1F8h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4D67']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
cmp ['eax,', '[ebp+var_C]']
jbe ['short', 'loc_4D83']
push ['offset', '$SG12437']
push ['0DA4h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_50A9']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['edx,', '8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '1']
shl ['ecx,', '0']
movzx ['eax,', 'byte', 'ptr', '[eax+ecx-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
test ['ecx,', 'ecx']
jz ['short', 'loc_4E0A']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['edx,', '8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '1']
shl ['ecx,', '0']
movzx ['eax,', 'byte', 'ptr', '[eax+ecx-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
push ['ecx']
push ['offset', '$SG12450']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG12451']
push ['0DACh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_50A9']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'byte', 'ptr', '[eax+edx-2]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '1']
shl ['edx,', '0']
movzx ['ecx,', 'byte', 'ptr', '[ecx+edx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_4E49']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jbe ['loc_50A7']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
cmp ['ecx,', '[ebp+var_C]']
ja ['loc_50A7']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'byte', 'ptr', '[eax+edx-2]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '1']
shl ['edx,', '0']
movzx ['ecx,', 'byte', 'ptr', '[ecx+edx-2]']
or ['eax,', 'ecx']
mov ['[ebp+var_20],', 'ax']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'byte', 'ptr', '[eax+edx-2]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '1']
shl ['edx,', '0']
movzx ['ecx,', 'byte', 'ptr', '[ecx+edx-2]']
or ['eax,', 'ecx']
mov ['[ebp+var_1E],', 'ax']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '1']
shl ['eax,', '0']
movzx ['edx,', 'byte', 'ptr', '[edx+eax-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '1']
shl ['edx,', '1']
movzx ['eax,', 'byte', 'ptr', '[eax+edx-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '1']
imul ['eax,', '3']
movzx ['edx,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'edx']
mov ['[ebp+var_30],', 'ecx']
jz ['loc_50A2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1F8h]']
sub ['ecx,', '2']
cmp ['[ebp+var_30],', 'ecx']
ja ['loc_50A2']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_30]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'byte', 'ptr', '[eax+edx]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '1']
shl ['edx,', '0']
movzx ['ecx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_38],', 'edx']
mov ['[ebp+var_3C],', 'offset', '_tt_cmap_classes']
jmp ['short', 'loc_4F8C']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '4']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['loc_5078']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_38]']
cmp ['[ecx+28h],', 'edx']
jnz ['loc_5073']
mov ['[ebp+var_A0],', '0']
push ['0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['edx,', '[ebp+var_98]']
push ['edx']
call ['_ft_validator_init']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+108h]']
mov ['[ebp+var_48],', 'ecx']
lea ['edx,', '[ebp+var_98]']
push ['0']
push ['edx']
call ['__setjmp3']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_5019']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_4C],', '0']
jnz ['short', 'loc_504F']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_FT_CMap_New']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_504D']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[ebp+var_A8]']
mov ['[eax+14h],', 'edx']
jmp ['short', 'loc_5071']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '14h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_506D']
push ['offset', '$SG12519']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_504F']
jmp ['short', 'loc_5078']
jmp ['loc_4F83']
mov ['ecx,', '[ebp+var_3C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_50A2']
mov ['edx,', '4']
imul ['eax,', 'edx,', '14h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_509E']
push ['offset', '$SG12526']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_5080']
jmp ['loc_4E40']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN30']
dd ['offset', '$LN27']
dd ['0FFFFFF68h,', '54h']
dd ['offset', '$LN28']
dd ['0FFFFFF58h,', '4']
dd ['offset', '$LN29']
db ['0Fh', 'dup(0CCh)']
endp
_tt_get_cmap_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
_tt_cmap0_validate proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_51C2']
push ['offset', '$SG9615']
push ['60h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax+44h]']
ja ['short', 'loc_5216']
cmp ['[ebp+var_8],', '106h']
jnb ['short', 'loc_5237']
push ['offset', '$SG9624']
push ['66h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+48h],', '1']
jl ['short', 'loc_52A4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_525B']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '100h']
jnb ['short', 'loc_52A4']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+50h]']
jb ['short', 'loc_52A2']
push ['offset', '$SG9633']
push ['73h']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_5252']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_tt_cmap0_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '100h']
jnb ['short', 'loc_52F1']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+6]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_52F8']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_tt_cmap0_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '100h']
jnb ['short', 'loc_5379']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_5377']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_5379']
jmp ['short', 'loc_534B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap0_get_info proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap2_validate proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_5434']
push ['offset', '$SG9696']
push ['12Ah']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax+44h]']
ja ['short', 'loc_5488']
cmp ['[ebp+var_8],', '206h']
jnb ['short', 'loc_54AC']
push ['offset', '$SG9705']
push ['130h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_54D4']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '100h']
jnb ['loc_5566']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '2']
jl ['short', 'loc_554A']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '7']
jz ['short', 'loc_554A']
push ['offset', '$SG9717']
push ['13Eh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '3']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_10]']
jbe ['short', 'loc_5561']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_54CB']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '206h']
cmp ['[ebp+var_4],', 'eax']
jz ['short', 'loc_558A']
push ['offset', '$SG9723']
push ['146h']
push ['offset', '$SG9724']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_5566']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_18]']
lea ['edx,', '[ecx+eax*8+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+44h]']
cmp ['[ebp+var_1C],', 'ecx']
jbe ['short', 'loc_55D0']
push ['offset', '$SG9726']
push ['14Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_55E2']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_10]']
ja ['loc_5805']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movsx ['ecx,', 'dx']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_56C9']
jmp ['loc_55D9']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '2']
jl ['short', 'loc_570D']
cmp ['[ebp+var_24],', '100h']
jnb ['short', 'loc_56E9']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '100h']
jbe ['short', 'loc_570D']
push ['offset', '$SG9762']
push ['161h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
cmp ['[ebp+var_2C],', '0']
jz ['loc_5800']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax-2]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_1C]']
jb ['short', 'loc_573F']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_34]']
lea ['eax,', '[edx+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
cmp ['eax,', 'ecx']
jbe ['short', 'loc_5763']
push ['offset', '$SG9767']
push ['16Ch']
push ['9']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '9']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['loc_5800']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_38]']
jnb ['short', 'loc_5800']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_57FB']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_30]']
and ['eax,', '0FFFFh']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_3C]']
cmp ['edx,', '[ecx+50h]']
jb ['short', 'loc_57FB']
push ['offset', '$SG9783']
push ['17Ch']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['loc_577C']
jmp ['loc_55D9']
xor ['eax,', 'eax']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_tt_cmap2_get_subheader	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_4],', '(offset', 'loc_FFFE+2)']
jnb ['$Exit$8']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFh']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
shr ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '206h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_58BB']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
test ['ecx,', 'ecx']
jz ['short', 'loc_58B9']
jmp ['short', '$Exit$8']
jmp ['short', 'loc_5900']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
and ['ecx,', '0FFFFFFF8h']
add ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnz ['short', 'loc_5900']
jmp ['short', '$Exit$8']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_tt_cmap2_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_tt_cmap2_get_subheader']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['loc_5AAA']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '0FFh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '2']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movsx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_1C]']
jnb ['short', 'loc_5AAA']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_5AAA']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_24]']
lea ['ecx,', '[eax+edx*2]']
add ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5AAA']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_20]']
and ['edx,', '0FFFFh']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap2_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '(offset', 'loc_FFFE+2)']
jnb ['$Exit$14']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_tt_cmap2_get_subheader']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['$Next_SubHeader$15']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '2']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '2']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movsx ['eax,', 'cx']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '0FFh']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_5C00']
jmp ['$Next_SubHeader$15']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_1C]']
jnb ['short', 'loc_5C17']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_5C20']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_28]']
lea ['ecx,', '[eax+edx*2]']
add ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_10]']
and ['edx,', '0FFFFFF00h']
add ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_5C52']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', '$Next_SubHeader$15']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_5CAD']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '[ebp+var_24]']
and ['ecx,', '0FFFFh']
mov ['[ebp+var_8],', 'ecx']
jz ['short', 'loc_5CAD']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', '$Exit$14']
jmp ['short', 'loc_5C40']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFFFFF00h']
add ['eax,', '100h']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_5AF4']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap2_get_info proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '2']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap4_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '6']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
sar ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_tt_cmap4_set_range proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_5F84']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx*2+0Eh]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*2+2]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movsx ['eax,', 'cx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '1']
cmp ['[ebp+arg_4],', 'edx']
jb ['short', 'loc_5F3F']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0FFFFh']
jnz ['short', 'loc_5F3F']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0FFFFh']
jnz ['short', 'loc_5F3F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+1F4h]']
mov ['eax,', '[ebp+var_14]']
add ['edx,', '[eax+1F8h]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_5F3F']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+2]']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_5F3F']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+30h],', '1']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+var_10],', '0FFFFh']
jz ['short', 'loc_5F76']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_5F59']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_5F60']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+24h],', 'eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_5F87']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_5DEE']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap4_next	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0FFFFh']
jb ['short', 'loc_5FBD']
jmp ['$Fail$21']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+28h]']
jnb ['short', 'loc_5FDD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_C]']
ja ['loc_60CB']
cmp ['[ebp+var_8],', '0']
jz ['loc_6095']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_6082']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_10]']
and ['ecx,', '0FFFFh']
mov ['[ebp+var_18],', 'ecx']
jz ['short', 'loc_6082']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+1Ch],', 'edx']
jmp ['loc_6114']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_C]']
jbe ['short', 'loc_6020']
jmp ['short', 'loc_60CB']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_10]']
and ['edx,', '0FFFFh']
mov ['[ebp+var_1C],', 'edx']
jz ['short', 'loc_60BA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+1Ch],', 'eax']
jmp ['short', 'loc_6114']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_C]']
jbe ['short', 'loc_6095']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_cmap4_set_range']
add ['esp,', '8']
test ['eax,', 'eax']
jge ['short', 'loc_60E7']
jmp ['short', '$Fail$21']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+28h]']
jnb ['short', 'loc_60FB']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_5FDD']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap4_validate proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '64h']
push ['edi']
lea ['edi,', '[ebp+var_64]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_617B']
push ['offset', '$SG10076']
push ['34Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax+44h]']
jbe ['short', 'loc_61FF']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+48h],', '1']
jl ['short', 'loc_61F3']
push ['offset', '$SG10085']
push ['355h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+44h]']
sub ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '10h']
jnb ['short', 'loc_6229']
push ['offset', '$SG10088']
push ['35Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+48h],', '2']
jl ['short', 'loc_629B']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jz ['short', 'loc_629B']
push ['offset', '$SG10097']
push ['364h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
shr ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
lea ['ecx,', 'ds:10h[eax*4]']
cmp ['[ebp+var_8],', 'ecx']
jnb ['short', 'loc_62D8']
push ['offset', '$SG10099']
push ['36Ah']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '2']
jl ['loc_6410']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_28]']
or ['ecx,', '[ebp+var_30]']
and ['ecx,', '1']
jz ['short', 'loc_63B0']
push ['offset', '$SG10123']
push ['377h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+var_28]']
shr ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_30]']
shr ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_20]']
ja ['short', 'loc_63EC']
mov ['eax,', '[ebp+var_28]']
shl ['eax,', '1']
cmp ['eax,', '[ebp+var_20]']
jb ['short', 'loc_63EC']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_63EC']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_2C]']
shl ['edx,', 'cl']
cmp ['[ebp+var_28],', 'edx']
jz ['short', 'loc_6410']
push ['offset', '$SG10126']
push ['382h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Eh']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*2+10h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_18]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+48h],', '2']
jl ['short', 'loc_64B2']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax*2-2]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
cmp ['edx,', '0FFFFh']
jz ['short', 'loc_64B2']
push ['offset', '$SG10134']
push ['390h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_48],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_64EA']
mov ['edx,', '[ebp+var_40]']
add ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_682E']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '2']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_50]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '2']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_54]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_58]']
add ['ecx,', '2']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_58]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_58]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movsx ['ecx,', 'dx']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '2']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_5C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_5C]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_38]']
jbe ['short', 'loc_65F8']
push ['offset', '$SG10174']
push ['3A6h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_34]']
cmp ['edx,', '[ebp+var_48]']
ja ['short', 'loc_6659']
cmp ['[ebp+var_40],', '0']
jbe ['short', 'loc_6659']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['short', 'loc_6635']
push ['offset', '$SG10177']
push ['3AFh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_6659']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_34]']
ja ['short', 'loc_6645']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_38]']
jbe ['short', 'loc_6650']
mov ['ecx,', '[ebp+var_24]']
or ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_6659']
mov ['edx,', '[ebp+var_24]']
or ['edx,', '2']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_3C],', '0']
jz ['loc_67CA']
cmp ['[ebp+var_3C],', '0FFFFh']
jz ['loc_67CA']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+48h],', '1']
jl ['short', 'loc_66C7']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_1C]']
jb ['short', 'loc_66A1']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*2+2]']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
cmp ['edx,', 'eax']
jbe ['short', 'loc_66C5']
push ['offset', '$SG10186']
push ['3C5h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_6725']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '1']
cmp ['[ebp+var_40],', 'edx']
jnz ['short', 'loc_66E4']
cmp ['[ebp+var_34],', '0FFFFh']
jnz ['short', 'loc_66E4']
cmp ['[ebp+var_38],', '0FFFFh']
jz ['short', 'loc_6725']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_1C]']
jb ['short', 'loc_6701']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[edx+ecx*2+2]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_6725']
push ['offset', '$SG10193']
push ['3D6h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['loc_67C8']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_60],', 'ecx']
jmp ['short', 'loc_6743']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_67C8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_64],', 'ecx']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_67C3']
mov ['edx,', '[ebp+var_64]']
add ['edx,', '[ebp+var_4C]']
and ['edx,', '0FFFFh']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_64]']
cmp ['ecx,', '[eax+50h]']
jb ['short', 'loc_67C3']
push ['offset', '$SG10210']
push ['3E7h']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['loc_673A']
jmp ['short', 'loc_681D']
cmp ['[ebp+var_3C],', '0FFFFh']
jnz ['short', 'loc_681D']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '2']
jge ['short', 'loc_67F9']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
cmp ['[ebp+var_40],', 'ecx']
jnz ['short', 'loc_67F9']
cmp ['[ebp+var_34],', '0FFFFh']
jnz ['short', 'loc_67F9']
cmp ['[ebp+var_38],', '0FFFFh']
jz ['short', 'loc_681D']
push ['offset', '$SG10216']
push ['3F4h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_48],', 'ecx']
jmp ['loc_64E1']
mov ['eax,', '[ebp+var_24]']
pop ['edi']
add ['esp,', '64h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_tt_cmap4_char_map_linear proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '6']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_28]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_28]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
jnz ['short', 'loc_68BA']
xor ['eax,', 'eax']
jmp ['loc_6B0B']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_68CB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_68D6']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0FFFFh']
ja ['loc_6AF2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '0Eh']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[edx+eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_6911']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_1C]']
jnb ['loc_6ADD']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '2']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_28]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_28]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_8]']
jb ['loc_6AD8']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_C]']
ja ['loc_6AD8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_2C]']
lea ['ecx,', '[eax+edx-2]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_28]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_28]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movsx ['ecx,', 'dx']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_28]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_28]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '1']
cmp ['[ebp+var_18],', 'eax']
jb ['short', 'loc_6A62']
cmp ['[ebp+var_8],', '0FFFFh']
jnz ['short', 'loc_6A62']
cmp ['[ebp+var_C],', '0FFFFh']
jnz ['short', 'loc_6A62']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+1F4h]']
mov ['edx,', '[ebp+var_30]']
add ['ecx,', '[edx+1F8h]']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_6A62']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_28]']
lea ['edx,', '[ecx+eax+2]']
cmp ['edx,', '[ebp+var_34]']
jbe ['short', 'loc_6A62']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+var_10],', '0FFFFh']
jnz ['short', 'loc_6A70']
jmp ['loc_6908']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_6AC7']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_10]']
lea ['edx,', '[ecx+eax*2]']
add ['edx,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_28]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_28]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_6AC5']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFh']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_6AD6']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_14]']
and ['ecx,', '0FFFFh']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_6ADD']
jmp ['loc_6908']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_6AEB']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_6AED']
jmp ['short', 'loc_6AF2']
jmp ['loc_68CD']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_6B08']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_6B08']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_24]']
pop ['edi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_tt_cmap4_char_map_binary proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '6']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_4],', 'eax']
jnz ['short', 'loc_6B82']
xor ['eax,', 'eax']
jmp ['loc_7299']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_C],', '0FFFFh']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_6BA8']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_18]']
jnb ['loc_71FA']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_18]']
shr ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx*2+0Eh]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_30]']
lea ['edx,', '[ecx+eax+2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_6C4E']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'ecx']
jmp ['loc_71F5']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_C]']
jbe ['short', 'loc_6C64']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['loc_71F5']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movsx ['ecx,', 'dx']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
cmp ['[ebp+var_20],', 'eax']
jb ['short', 'loc_6D25']
cmp ['[ebp+var_8],', '0FFFFh']
jnz ['short', 'loc_6D25']
cmp ['[ebp+var_C],', '0FFFFh']
jnz ['short', 'loc_6D25']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+1F4h]']
mov ['edx,', '[ebp+var_34]']
add ['ecx,', '[edx+1F8h]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_6D25']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_30]']
lea ['edx,', '[ecx+eax+2]']
cmp ['edx,', '[ebp+var_38]']
jbe ['short', 'loc_6D25']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '2']
jz ['loc_7181']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_10],', '0FFFFh']
jnz ['short', 'loc_6D4C']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_6D5D']
mov ['edx,', '[ebp+var_3C]']
sub ['edx,', '1']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '0']
jbe ['loc_6E70']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_3C]']
lea ['ecx,', '[edx+eax*2+0Ch]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_40]']
jbe ['short', 'loc_6DB9']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_30],', 'eax']
jmp ['loc_6E70']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_30]']
lea ['ecx,', '[eax+edx+2]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movsx ['edx,', 'ax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0FFFFh']
jz ['short', 'loc_6E6B']
mov ['ecx,', '[ebp+var_3C]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_6D54']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
cmp ['[ebp+var_20],', 'edx']
jnz ['loc_70A0']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_18]']
jz ['loc_6F5E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_18]']
lea ['ecx,', '[edx+eax*2+0Eh]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_30]']
lea ['ecx,', '[eax+edx+2]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movsx ['edx,', 'ax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_6F78']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[ebp+var_24]']
jnb ['loc_7084']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_3C]']
lea ['edx,', '[eax+ecx*2+0Eh]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_30]']
lea ['edx,', '[ecx+eax+2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_4C]']
jnb ['short', 'loc_7000']
jmp ['loc_7084']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movsx ['eax,', 'cx']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0FFFFh']
jz ['short', 'loc_707F']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_20],', 'edx']
jmp ['loc_6F6F']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_18]']
jnz ['short', 'loc_70A0']
mov ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_20],', 'edx']
jmp ['loc_71FA']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_3C]']
jz ['loc_717F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[edx+eax*2+0Eh]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_30]']
lea ['ecx,', '[eax+edx+2]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movsx ['edx,', 'ax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_718C']
cmp ['[ebp+var_10],', '0FFFFh']
jnz ['short', 'loc_718C']
jmp ['short', 'loc_71FA']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_71E4']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+ecx*2]']
add ['eax,', '[ebp+var_30]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_71E2']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '[ebp+var_14]']
and ['ecx,', '0FFFFh']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_71F3']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '[ebp+var_14]']
and ['edx,', '0FFFFh']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_71FA']
jmp ['loc_6BB5']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_7296']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_C]']
jbe ['short', 'loc_7229']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_24]']
jnz ['short', 'loc_7229']
xor ['eax,', 'eax']
jmp ['short', 'loc_7299']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_tt_cmap4_set_range']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_724D']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_724B']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_7296']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax+18h],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_7267']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+1Ch],', 'eax']
jmp ['short', 'loc_7285']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_tt_cmap4_next']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_7296']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+18h]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap4_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '(offset', 'loc_FFFE+2)']
jb ['short', 'loc_72BC']
xor ['eax,', 'eax']
jmp ['short', 'loc_72EF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '1']
jz ['short', 'loc_72DD']
push ['0']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_cmap4_char_map_linear']
add ['esp,', '0Ch']
jmp ['short', 'loc_72EF']
jmp ['short', 'loc_72EF']
push ['0']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_cmap4_char_map_binary']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap4_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0FFFFh']
jb ['short', 'loc_731F']
xor ['eax,', 'eax']
jmp ['short', 'loc_7394']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
and ['edx,', '1']
jz ['short', 'loc_7341']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap4_char_map_linear']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_7391']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+18h]']
jnz ['short', 'loc_737C']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_tt_cmap4_next']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_737A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_7391']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap4_char_map_binary']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap4_get_info proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '4']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap6_validate proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ah']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_7455']
push ['offset', '$SG10536']
push ['5BCh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+44h]']
ja ['short', 'loc_74E9']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+eax+0Ah]']
cmp ['[ebp+var_8],', 'ecx']
jnb ['short', 'loc_750D']
push ['offset', '$SG10551']
push ['5C5h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['short', 'loc_758C']
jmp ['short', 'loc_7521']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jbe ['short', 'loc_758C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax+50h]']
jb ['short', 'loc_758A']
push ['offset', '$SG10565']
push ['5D1h']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_7518']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_tt_cmap6_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '6']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '2']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '2']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_7680']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_cmap6_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_C],', '(offset', 'loc_FFFE+2)']
jb ['short', 'loc_7750']
jmp ['$Exit$9_0']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_18]']
jnb ['short', 'loc_775E']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_777E']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_1C]']
jnb ['short', '$Exit$9_0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_77C8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', '$Exit$9_0']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_7775']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap6_get_info proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '6']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap8_validate proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2010h']
mov ['edx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+44h]']
jbe ['short', 'loc_78A0']
push ['offset', '$SG10675']
push ['67Eh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+44h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['[ebp+var_C],', 'eax']
ja ['short', 'loc_7911']
cmp ['[ebp+var_C],', '2010h']
jnb ['short', 'loc_7935']
push ['offset', '$SG10689']
push ['682h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2000h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+44h]']
sub ['eax,', '[ebp+var_4]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ch']
div ['ecx']
cmp ['[ebp+var_10],', 'eax']
jbe ['short', 'loc_79DE']
push ['offset', '$SG10702']
push ['68Ah']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_79F7']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jnb ['loc_7D41']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_1C]']
jbe ['short', 'loc_7B3D']
push ['offset', '$SG10745']
push ['69Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
cmp ['[ebp+var_14],', '0']
jbe ['short', 'loc_7B6F']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_28]']
ja ['short', 'loc_7B6F']
push ['offset', '$SG10747']
push ['69Eh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['loc_7D36']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[edx+50h]']
ja ['short', 'loc_7B9E']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+50h]']
sub ['edx,', '[ebp+var_34]']
cmp ['[ebp+var_20],', 'edx']
jb ['short', 'loc_7BC2']
push ['offset', '$SG10754']
push ['6A8h']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '0FFFF0000h']
jz ['loc_7C9D']
jmp ['short', 'loc_7BF1']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_24],', '0']
jbe ['loc_7C98']
mov ['edx,', '[ebp+var_18]']
shr ['edx,', '10h']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0FFFFh']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
shr ['ecx,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_2C]']
and ['ecx,', '7']
mov ['edx,', '80h']
sar ['edx,', 'cl']
and ['eax,', 'edx']
jnz ['short', 'loc_7C51']
push ['offset', '$SG10763']
push ['6B6h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_30]']
shr ['ecx,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_30]']
and ['ecx,', '7']
mov ['edx,', '80h']
sar ['edx,', 'cl']
and ['eax,', 'edx']
jnz ['short', 'loc_7C93']
push ['offset', '$SG10765']
push ['6B9h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['loc_7BDF']
jmp ['loc_7D36']
mov ['ecx,', '[ebp+var_1C]']
and ['ecx,', '0FFFF0000h']
jz ['short', 'loc_7CCC']
push ['offset', '$SG10768']
push ['6C3h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_7CE0']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_24],', '0']
jbe ['short', 'loc_7D36']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '0FFFFh']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
shr ['eax,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['ecx,', '[ebp+var_30]']
and ['ecx,', '7']
mov ['eax,', '80h']
sar ['eax,', 'cl']
and ['edx,', 'eax']
jz ['short', 'loc_7D34']
push ['offset', '$SG10774']
push ['6CAh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_7CCE']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_28],', 'edx']
jmp ['loc_79EE']
xor ['eax,', 'eax']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap8_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '200Ch']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_7DFD']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jbe ['loc_7F3A']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '4']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_7F1F']
jmp ['short', 'loc_7F3A']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_18]']
ja ['short', 'loc_7F35']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_7F3A']
jmp ['loc_7DF4']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_tt_cmap8_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '200Ch']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2010h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_8010']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jbe ['$Exit$9_1']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_24],', 'edx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_1C]']
jnb ['short', 'loc_8136']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_20]']
ja ['short', 'loc_8154']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'edx']
jz ['short', 'loc_8154']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$9_1']
jmp ['loc_8007']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap8_get_info proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '8']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap10_validate proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '14h']
mov ['edx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+44h]']
jbe ['short', 'loc_823E']
push ['offset', '$SG10938']
push ['766h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '10h']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+44h]']
sub ['edx,', '[ebp+arg_0]']
cmp ['[ebp+var_8],', 'edx']
ja ['short', 'loc_831C']
cmp ['[ebp+var_8],', '14h']
jb ['short', 'loc_831C']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '14h']
shr ['eax,', '1']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_8340']
push ['offset', '$SG10962']
push ['770h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+48h],', '1']
jl ['short', 'loc_83BF']
jmp ['short', 'loc_8354']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jbe ['short', 'loc_83BF']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+50h]']
jb ['short', 'loc_83BD']
push ['offset', '$SG10976']
push ['77Ch']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['short', 'loc_834B']
xor ['eax,', 'eax']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_tt_cmap10_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_14],', 'edx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_850C']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_tt_cmap10_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_8622']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_8642']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_18]']
jnb ['short', 'loc_8691']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8686']
jmp ['short', 'loc_8691']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_8639']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_tt_cmap10_get_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '0Ah']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap12_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '0Ch']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
_tt_cmap12_validate proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_87F4']
push ['offset', '$SG11126']
push ['821h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+44h]']
sub ['edx,', '[ebp+arg_0]']
cmp ['[ebp+var_8],', 'edx']
ja ['short', 'loc_88E2']
cmp ['[ebp+var_8],', '10h']
jb ['short', 'loc_88E2']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '10h']
xor ['edx,', 'edx']
mov ['ecx,', '0Ch']
div ['ecx']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_8906']
push ['offset', '$SG11150']
push ['82Dh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_891F']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_8AF1']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_8A65']
push ['offset', '$SG11190']
push ['83Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_8A97']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
ja ['short', 'loc_8A97']
push ['offset', '$SG11192']
push ['83Eh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['short', 'loc_8AE6']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[edx+50h]']
ja ['short', 'loc_8AC2']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+50h]']
sub ['edx,', '[ebp+var_24]']
cmp ['[ebp+var_1C],', 'edx']
jb ['short', 'loc_8AE6']
push ['offset', '$SG11199']
push ['848h']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_8916']
xor ['eax,', 'eax']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_tt_cmap12_next	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0FFFFFFFFh']
jb ['short', 'loc_8B3A']
jmp ['$Fail$12']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_8B5A']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+28h]']
jnb ['$Fail$12']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
imul ['ecx,', '[ebp+var_18],', '0Ch']
lea ['edx,', '[eax+ecx+10h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_8C89']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_8C94']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_C]']
ja ['short', 'loc_8CC9']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_1C],', 'eax']
jz ['short', 'loc_8CC7']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+24h],', 'eax']
jmp ['short', 'loc_8CD5']
jmp ['short', 'loc_8C8B']
jmp ['loc_8B51']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+18h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap12_char_map_binary proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_8D67']
xor ['eax,', 'eax']
jmp ['loc_8F7A']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_18],', '0FFFFFFFFh']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_8D85']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_20]']
jnb ['loc_8EF1']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
imul ['eax,', '[ebp+var_28],', '0Ch']
lea ['ecx,', '[edx+eax+10h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_8E7E']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_8EEC']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_8E91']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_8EEC']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+var_10]']
sub ['edx,', '[ebp+var_14]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_8EF1']
jmp ['loc_8D92']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_8F77']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_8F1C']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_C]']
jnz ['short', 'loc_8F1C']
xor ['eax,', 'eax']
jmp ['short', 'loc_8F7A']
mov ['edx,', '[ebp+var_2C]']
mov ['byte', 'ptr', '[edx+18h],', '1']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+24h],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_8F5D']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_tt_cmap12_next']
add ['esp,', '4']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_8F5B']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_8F66']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+20h],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_8F77']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+1Ch]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap12_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap12_char_map_binary']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap12_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0FFFFFFFFh']
jb ['short', 'loc_8FD3']
xor ['eax,', 'eax']
jmp ['short', 'loc_903F']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_9027']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_9027']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_tt_cmap12_next']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_901E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_901C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_9025']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_903C']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap12_char_map_binary']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_tt_cmap12_get_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '0Ch']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap13_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '0Ch']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
_tt_cmap13_validate proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_91A1']
push ['offset', '$SG11414']
push ['96Ah']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+44h]']
sub ['edx,', '[ebp+arg_0]']
cmp ['[ebp+var_8],', 'edx']
ja ['short', 'loc_928F']
cmp ['[ebp+var_8],', '10h']
jb ['short', 'loc_928F']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '10h']
xor ['edx,', 'edx']
mov ['ecx,', '0Ch']
div ['ecx']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_92B3']
push ['offset', '$SG11438']
push ['976h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_92CC']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_9487']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_9412']
push ['offset', '$SG11478']
push ['984h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_9444']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
ja ['short', 'loc_9444']
push ['offset', '$SG11480']
push ['987h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['short', 'loc_947C']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ecx+50h]']
jb ['short', 'loc_947C']
push ['offset', '$SG11484']
push ['98Ch']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_92C3']
xor ['eax,', 'eax']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_cmap13_next	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0FFFFFFFFh']
jb ['short', 'loc_94CA']
jmp ['$Fail$10']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_94EA']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+28h]']
jnb ['$Fail$10']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
imul ['ecx,', '[ebp+var_18],', '0Ch']
lea ['edx,', '[eax+ecx+10h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_9619']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_C]']
ja ['short', 'loc_964A']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_964A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+24h],', 'edx']
jmp ['short', 'loc_9656']
jmp ['loc_94E1']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap13_char_map_binary proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_96E7']
xor ['eax,', 'eax']
jmp ['loc_98EE']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_18],', '0FFFFFFFFh']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_9705']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_1C]']
jnb ['loc_9865']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_1C]']
shr ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
imul ['eax,', '[ebp+var_24],', '0Ch']
lea ['ecx,', '[edx+eax+10h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_97FE']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_9860']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_9811']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_9860']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_9865']
jmp ['loc_9712']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_98EB']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_18]']
jbe ['short', 'loc_9890']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_C]']
jnz ['short', 'loc_9890']
xor ['eax,', 'eax']
jmp ['short', 'loc_98EE']
mov ['ecx,', '[ebp+var_28]']
mov ['byte', 'ptr', '[ecx+18h],', '1']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+24h],', 'edx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_98D1']
mov ['eax,', '[ebp+var_28]']
push ['eax']
call ['_tt_cmap13_next']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_28]']
movzx ['edx,', 'byte', 'ptr', '[ecx+18h]']
test ['edx,', 'edx']
jz ['short', 'loc_98CF']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_98DA']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+20h],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_98EB']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_tt_cmap13_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap13_char_map_binary']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap13_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0FFFFFFFFh']
jb ['short', 'loc_9953']
xor ['eax,', 'eax']
jmp ['short', 'loc_99BF']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_99A7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_99A7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_tt_cmap13_next']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
test ['eax,', 'eax']
jz ['short', 'loc_999E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_999C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_99A5']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_99BC']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap13_char_map_binary']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_tt_cmap13_get_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+4],', '0Dh']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap14_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_9AAA']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_9AAA']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_9A89']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap14_ensure proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+1Ch]']
jbe ['short', 'loc_9B32']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+24h],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_9B29']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_9B35']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6_0']
dd ['offset', '$LN5']
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap14_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '6']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap14_validate proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ah']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+44h]']
jbe ['short', 'loc_9C44']
push ['offset', '$SG11720']
push ['0AF0h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+44h]']
sub ['ecx,', '[ebp+arg_0]']
cmp ['[ebp+var_8],', 'ecx']
ja ['short', 'loc_9D29']
cmp ['[ebp+var_8],', '0Ah']
jb ['short', 'loc_9D29']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '0Ah']
xor ['edx,', 'edx']
mov ['ecx,', '0Bh']
div ['ecx']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_9D4D']
push ['offset', '$SG11744']
push ['0AFAh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_9D66']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_A246']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '3']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['eax,', '10h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-3]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_9E7B']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_8]']
jb ['short', 'loc_9E9F']
push ['offset', '$SG11783']
push ['0B0Ch']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_9ECB']
push ['offset', '$SG11785']
push ['0B0Fh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['loc_A062']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+44h]']
sub ['edx,', '[ebp+var_24]']
shr ['edx,', '2']
cmp ['[ebp+var_28],', 'edx']
jbe ['short', 'loc_9F7D']
push ['offset', '$SG11803']
push ['0B1Fh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_9F8F']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_28]']
jnb ['loc_A062']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '3']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['[ebp+var_34],', 'ecx']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '110000h']
jb ['short', 'loc_A024']
push ['offset', '$SG11819']
push ['0B28h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_30]']
jnb ['short', 'loc_A050']
push ['offset', '$SG11821']
push ['0B2Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_34]']
lea ['ecx,', '[eax+edx+1]']
mov ['[ebp+var_30],', 'ecx']
jmp ['loc_9F86']
cmp ['[ebp+var_20],', '0']
jz ['loc_A241']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_20]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '4']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_3C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_3C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_3C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_3C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_48],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+44h]']
sub ['edx,', '[ebp+var_3C]']
shr ['edx,', '2']
cmp ['[ebp+var_40],', 'edx']
jbe ['short', 'loc_A10B']
push ['offset', '$SG11839']
push ['0B3Bh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_A11D']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_40]']
jnb ['loc_A241']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '3']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_3C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_3C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_3C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['[ebp+var_4C],', 'ecx']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '2']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_3C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_3C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_4C],', '110000h']
jb ['short', 'loc_A1CF']
push ['offset', '$SG11860']
push ['0B44h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4C]']
cmp ['eax,', '[ebp+var_48]']
jnb ['short', 'loc_A1FB']
push ['offset', '$SG11862']
push ['0B47h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_validator_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4C]']
add ['edx,', '1']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+48h],', '1']
jl ['short', 'loc_A23C']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_50]']
cmp ['edx,', '[ecx+50h]']
jb ['short', 'loc_A23C']
push ['offset', '$SG11865']
push ['0B4Dh']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_validator_error']
add ['esp,', '8']
jmp ['loc_A114']
jmp ['loc_9D5D']
xor ['eax,', 'eax']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_cmap14_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'ecx']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_tt_cmap14_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_tt_cmap14_get_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0Eh']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx],', '0FFFFFFFFh']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
_tt_cmap14_char_map_def_binary proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_A3EB']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_8]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['edx,', '10h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-3]']
or ['edx,', 'ecx']
mov ['[ebp+var_18],', 'edx']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_18]']
jnb ['short', 'loc_A3C9']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_A3E6']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_1C]']
cmp ['[ebp+arg_4],', 'ecx']
jbe ['short', 'loc_A3DF']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_A3E6']
mov ['eax,', '1']
jmp ['short', 'loc_A3ED']
jmp ['loc_A33F']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_tt_cmap14_char_map_nondef_binary proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_A532']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_8]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
imul ['ecx,', '[ebp+var_10],', '5']
add ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '3']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['eax,', '10h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-3]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_A4F2']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_A52D']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_A505']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_A52D']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
jmp ['short', 'loc_A534']
jmp ['loc_A47C']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap14_find_variant	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_A64F']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_8]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
imul ['ecx,', '[ebp+var_10],', '0Bh']
add ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '3']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['eax,', '10h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-3]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_A632']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_A64A']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_A645']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_A64A']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_A651']
jmp ['loc_A5BC']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_tt_cmap14_char_var_index proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '6']
push ['edx']
call ['_tt_cmap14_find_variant']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_A69E']
xor ['eax,', 'eax']
jmp ['loc_A7A6']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A786']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_8]']
push ['eax']
call ['_tt_cmap14_char_map_def_binary']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_A786']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_A7A6']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A7A4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '[ebp+var_C]']
push ['edx']
call ['_tt_cmap14_char_map_nondef_binary']
add ['esp,', '8']
jmp ['short', 'loc_A7A6']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_tt_cmap14_char_var_isdefault proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '6']
push ['edx']
call ['_tt_cmap14_find_variant']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_A7FE']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_A900']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A8D9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_tt_cmap14_char_map_def_binary']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_A8D9']
mov ['eax,', '1']
jmp ['short', 'loc_A900']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A8FD']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_tt_cmap14_char_map_nondef_binary']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_A8FD']
xor ['eax,', 'eax']
jmp ['short', 'loc_A900']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_cmap14_variants proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '0Ah']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_tt_cmap14_ensure']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_A973']
xor ['eax,', 'eax']
jmp ['loc_A9FC']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_A98E']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_A9EC']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+edx*4],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '8']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_A985']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_cmap14_char_variants proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '0Ah']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_tt_cmap14_ensure']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_AA69']
xor ['eax,', 'eax']
jmp ['loc_ABF7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_AA7D']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jbe ['loc_ABDF']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '3']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['eax,', '10h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-3]']
or ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_ABA0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_tt_cmap14_char_map_def_binary']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_ABC0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_ABDA']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_tt_cmap14_char_map_nondef_binary']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_ABDA']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '4']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_AA74']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+20h]']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_tt_cmap14_def_char_count proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '3']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_AC95']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_ACBF']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_AC8C']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_tt_cmap14_get_def_chars proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_tt_cmap14_def_char_count']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_tt_cmap14_ensure']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_AD77']
xor ['eax,', 'eax']
jmp ['loc_AE3A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_AD8B']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jbe ['loc_AE22']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '3']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+edx],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jnz ['short', 'loc_ADEF']
jmp ['loc_AD82']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+eax],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_cmap14_get_nondef_chars proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_tt_cmap14_ensure']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_AEE5']
xor ['eax,', 'eax']
jmp ['loc_AF6E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_AF00']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_AF5E']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '3']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+edx*4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_AEF7']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_tt_cmap14_variant_chars proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '6']
push ['edx']
call ['_tt_cmap14_find_variant']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_AFB8']
xor ['eax,', 'eax']
jmp ['loc_B5A7']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_B07F']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_B07F']
xor ['eax,', 'eax']
jmp ['loc_B5A7']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_B0A9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_cmap14_get_nondef_chars']
add ['esp,', '0Ch']
jmp ['loc_B5A7']
jmp ['loc_B5A7']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_B0D3']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_cmap14_get_def_chars']
add ['esp,', '0Ch']
jmp ['loc_B5A7']
jmp ['loc_B5A7']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '[ebp+var_C]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_tt_cmap14_def_char_count']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_B1D9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_cmap14_get_def_chars']
add ['esp,', '0Ch']
jmp ['loc_B5A7']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_B1FE']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_cmap14_get_nondef_chars']
add ['esp,', '0Ch']
jmp ['loc_B5A7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_24]']
lea ['edx,', '[ecx+eax+1]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_tt_cmap14_ensure']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_B224']
xor ['eax,', 'eax']
jmp ['loc_B5A7']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '3']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_30],', '1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['edx,', '10h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-3]']
or ['edx,', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['[ebp+var_4],', 'edx']
mov ['[ebp+var_34],', '1']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_24]']
cmp ['[ebp+var_28],', 'eax']
jbe ['loc_B399']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_B308']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_24]']
ja ['short', 'loc_B32A']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_3C]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_B2FF']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_B340']
jmp ['loc_B41C']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '3']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-3]']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-3]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_B417']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_20]']
jnb ['short', 'loc_B3B6']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_1C]']
jbe ['short', 'loc_B3C9']
jmp ['short', 'loc_B41C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '3']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['eax,', '10h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-3]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-3]']
or ['eax,', 'edx']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_B2E7']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_1C]']
ja ['loc_B4B2']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_B4AD']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['edx,', '10h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-3]']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ecx+eax*4],', 'edx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_B43D']
jmp ['loc_B597']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+var_18]']
ja ['loc_B597']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_B4D0']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_24]']
ja ['short', 'loc_B4F2']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ecx+eax*4],', 'edx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_B4C7']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_18]']
jnb ['loc_B597']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '3']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['edx,', '10h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-3]']
shl ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-3]']
or ['edx,', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_B567']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_24]']
ja ['short', 'loc_B589']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_3C]']
mov ['[eax+edx*4],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_B55E']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
jmp ['loc_B4F2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_3C]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
mov ['eax,', '[ebp+var_3C]']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_tt_face_load_kern proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['6B65726Eh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_B617']
jmp ['$Exit$25']
cmp ['[ebp+var_C],', '4']
jnb ['short', 'loc_B64B']
push ['offset', '$SG12574']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG12575']
push ['40h']
push ['8Eh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Eh']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$25']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2E4h']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_B680']
push ['offset', '$SG12579']
call ['_FT_Message']
add ['esp,', '4']
jmp ['$Exit$25']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+2E8h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2E4h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '20h']
jbe ['short', 'loc_B6EB']
mov ['[ebp+var_20],', '20h']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_B6FD']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_20]']
jnb ['loc_B958']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_1C]']
shl ['edx,', 'cl']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '6']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_B726']
jmp ['loc_B958']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_30],', '0Eh']
ja ['short', 'loc_B7A8']
jmp ['loc_B958']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '[ebp+var_30]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_B7BF']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_34]']
and ['edx,', '0FFFFFFF7h']
cmp ['edx,', '1']
jnz ['short', 'loc_B7D5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '8']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_B7DA']
jmp ['$NextTable$26']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '6']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_14]']
imul ['ecx,', '[ebp+var_2C],', '6']
cmp ['eax,', 'ecx']
jge ['short', 'loc_B836']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '6']
idiv ['ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_24]']
or ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_2C],', '0']
jbe ['$NextTable$26']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_B8C0']
mov ['eax,', '[ebp+var_40]']
sub ['eax,', '1']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jbe ['short', 'loc_B93E']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_48],', 'edx']
mov ['edx,', '[ebp+var_48]']
cmp ['edx,', '[ebp+var_44]']
ja ['short', 'loc_B92A']
jmp ['short', 'loc_B93E']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_44],', 'ecx']
jmp ['loc_B8B7']
cmp ['[ebp+var_40],', '0']
jnz ['short', '$NextTable$26']
mov ['edx,', '[ebp+var_28]']
or ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_B6F4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+2ECh],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+2F0h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+2F4h],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN23']
dd ['offset', '$LN22']
db ['0Dh', 'dup(0CCh)']
endp
_tt_face_done_kern proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2E4h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2E8h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2ECh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2F0h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2F4h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_face_get_kerning proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2E4h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[edx+2E8h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_C],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2ECh]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_BAA3']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
shl ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_8],', '0']
jbe ['loc_BDF0']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '6']
cmp ['eax,', '[ebp+var_14]']
ja ['loc_BDF0']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '2']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_30],', '0']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_14]']
jbe ['short', 'loc_BB82']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2F0h]']
and ['ecx,', '[ebp+var_C]']
jnz ['short', 'loc_BB95']
jmp ['$NextTable$27']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '8']
cmp ['edx,', '[ebp+var_1C]']
jbe ['short', 'loc_BBA5']
jmp ['$NextTable$27']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '[ebp+var_10]']
imul ['eax,', '[ebp+var_2C],', '6']
cmp ['edx,', 'eax']
jge ['short', 'loc_BC01']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '[ebp+var_10]']
cdq
mov ['ecx,', '6']
idiv ['ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_28]']
shr ['edx,', '8']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_BC15']
jmp ['loc_BDCA']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '10h']
or ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2F4h]']
and ['edx,', '[ebp+var_C]']
jz ['loc_BD14']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['loc_BD0F']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '[ebp+var_3C]']
shr ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
imul ['eax,', '[ebp+var_40],', '6']
add ['eax,', '[ebp+var_10]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '4']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_44]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_48],', 'edx']
mov ['edx,', '[ebp+var_48]']
cmp ['edx,', '[ebp+var_34]']
jnz ['short', 'loc_BCF1']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_44]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
or ['eax,', 'ecx']
movsx ['edx,', 'ax']
mov ['[ebp+var_30],', 'edx']
jmp ['$Found$28']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_34]']
jnb ['short', 'loc_BD04']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_BD0A']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_3C],', 'edx']
jmp ['loc_BC40']
jmp ['loc_BDCA']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_4C],', 'eax']
jmp ['short', 'loc_BD25']
mov ['ecx,', '[ebp+var_4C]']
sub ['ecx,', '1']
mov ['[ebp+var_4C],', 'ecx']
cmp ['[ebp+var_4C],', '0']
jbe ['loc_BDCA']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_34]']
jnz ['short', 'loc_BDBC']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movsx ['eax,', 'cx']
mov ['[ebp+var_30],', 'eax']
jmp ['short', '$Found$28']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_BD1C']
jmp ['short', '$NextTable$27']
mov ['edx,', '[ebp+var_28]']
and ['edx,', '8']
jz ['short', 'loc_BDDC']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$NextTable$27']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_BA92']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_sfnt_init_face	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+214h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_BE9E']
push ['offset', '$SG13685']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_BE84']
push ['offset', '$SG13687']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG13688']
push ['35Fh']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
jmp ['loc_BFE3']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+214h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['[ecx+1FCh],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+60h]']
mov ['[ebp+var_10],', 'edx']
push ['offset', '$SG13696']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+218h],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_BE9E']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_BEE9']
push ['offset', '$SG13701']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_BECB']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_sfnt_open_font']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_BF0E']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_BFE3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_BF3D']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG13707']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_BF17']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_BF4E']
mov ['[ebp+arg_8],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+8Ch]']
jl ['short', 'loc_BF75']
push ['offset', '$SG13710']
push ['377h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['short', 'loc_BFE3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+90h]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_BF9F']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_BFE3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+58h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_BFC9']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_BFE3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_sfnt_load_face	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '134h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_19],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+214h]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'edx']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_C04F']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+arg_C]']
jge ['short', 'loc_C081']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax+edx*8],', '69677066h']
jnz ['short', 'loc_C06C']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_C07F']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[edx+ecx*8],', '69677073h']
jnz ['short', 'loc_C07F']
mov ['[ebp+var_19],', '1']
jmp ['short', 'loc_C046']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_C0A3']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG13755']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_C081']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+80h]']
cmp ['dword', 'ptr', '[edx+30h],', '0']
jnz ['short', 'loc_C0E6']
push ['676C7966h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_tt_face_lookup_table']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_C0E6']
push ['43464620h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_tt_face_lookup_table']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_C0E6']
mov ['[ebp+var_71],', '0']
jmp ['short', 'loc_C0EA']
mov ['[ebp+var_71],', '1']
mov ['dl,', '[ebp+var_71]']
mov ['[ebp+var_15],', 'dl']
mov ['[ebp+var_16],', '0']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['73626978h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+1FCh]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_C127']
mov ['[ebp+var_78],', '1']
jmp ['short', 'loc_C12E']
mov ['[ebp+var_78],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_78]']
mov ['[ebp+var_17],', 'cl']
movzx ['edx,', '[ebp+var_17]']
test ['edx,', 'edx']
jz ['short', 'loc_C140']
mov ['[ebp+var_15],', '0']
movzx ['eax,', '[ebp+var_15]']
test ['eax,', 'eax']
jnz ['loc_C280']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+44h],', '0']
jz ['loc_C280']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_C177']
push ['offset', '$SG13781']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C159']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_C199']
push ['offset', '$SG13786']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C17B']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+44h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_C233']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C1DC']
mov ['[ebp+var_7C],', '1']
jmp ['short', 'loc_C1E3']
mov ['[ebp+var_7C],', '0']
cmp ['[ebp+var_7C],', '0']
jz ['short', 'loc_C1F2']
mov ['[ebp+var_80],', 'offset', '$SG13791']
jmp ['short', 'loc_C222']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_C20F']
mov ['[ebp+var_84],', 'offset', '$SG13792']
jmp ['short', 'loc_C219']
mov ['[ebp+var_84],', 'offset', '$SG13793']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
push ['offset', '$SG13794']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_C1BC']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_C255']
push ['offset', '$SG13799']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_C237']
xor ['eax,', 'eax']
jnz ['loc_C159']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C270']
mov ['[ebp+var_85],', '1']
jmp ['short', 'loc_C277']
mov ['[ebp+var_85],', '0']
mov ['cl,', '[ebp+var_85]']
mov ['[ebp+var_16],', 'cl']
movzx ['edx,', '[ebp+var_16]']
test ['edx,', 'edx']
jz ['short', 'loc_C294']
movzx ['eax,', '[ebp+var_17]']
test ['eax,', 'eax']
jz ['loc_C3BD']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_C2B2']
push ['offset', '$SG13810']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C294']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_C2D4']
push ['offset', '$SG13815']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C2B6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_C380']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C31A']
mov ['[ebp+var_8C],', '1']
jmp ['short', 'loc_C324']
mov ['[ebp+var_8C],', '0']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_C339']
mov ['[ebp+var_90],', 'offset', '$SG13820']
jmp ['short', 'loc_C36C']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_C356']
mov ['[ebp+var_94],', 'offset', '$SG13821']
jmp ['short', 'loc_C360']
mov ['[ebp+var_94],', 'offset', '$SG13822']
mov ['edx,', '[ebp+var_94]']
mov ['[ebp+var_90],', 'edx']
mov ['eax,', '[ebp+var_90]']
push ['eax']
push ['offset', '$SG13823']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_C2F7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_C3A6']
push ['offset', '$SG13828']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C388']
xor ['edx,', 'edx']
jnz ['loc_C294']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_C3BD']
jmp ['$Exit$518']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+0B2h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C3EA']
push ['offset', '$SG13832']
push ['410h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$518']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_C408']
push ['offset', '$SG13840']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C3EA']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_C42A']
push ['offset', '$SG13845']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C40C']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_C4D6']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C470']
mov ['[ebp+var_98],', '1']
jmp ['short', 'loc_C47A']
mov ['[ebp+var_98],', '0']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_C48F']
mov ['[ebp+var_9C],', 'offset', '$SG13850']
jmp ['short', 'loc_C4C2']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_C4AC']
mov ['[ebp+var_A0],', 'offset', '$SG13851']
jmp ['short', 'loc_C4B6']
mov ['[ebp+var_A0],', 'offset', '$SG13852']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
push ['offset', '$SG13853']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['loc_C44D']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_C4FC']
push ['offset', '$SG13858']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_C4DE']
xor ['eax,', 'eax']
jnz ['loc_C3EA']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_C526']
push ['offset', '$SG13866']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C508']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_C548']
push ['offset', '$SG13871']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C52A']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_C5F4']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C58E']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_C598']
mov ['[ebp+var_A4],', '0']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_C5AD']
mov ['[ebp+var_A8],', 'offset', '$SG13876']
jmp ['short', 'loc_C5E0']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_C5CA']
mov ['[ebp+var_AC],', 'offset', '$SG13877']
jmp ['short', 'loc_C5D4']
mov ['[ebp+var_AC],', 'offset', '$SG13878']
mov ['edx,', '[ebp+var_AC]']
mov ['[ebp+var_A8],', 'edx']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
push ['offset', '$SG13879']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_C56B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_C61A']
push ['offset', '$SG13884']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C5FC']
xor ['edx,', 'edx']
jnz ['loc_C508']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_C644']
push ['offset', '$SG13892']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_C626']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_C666']
push ['offset', '$SG13897']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_C648']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+30h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_C710']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C6AC']
mov ['[ebp+var_B0],', '1']
jmp ['short', 'loc_C6B6']
mov ['[ebp+var_B0],', '0']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_C6CB']
mov ['[ebp+var_B4],', 'offset', '$SG13902']
jmp ['short', 'loc_C6FC']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0FFh']
cmp ['eax,', '8Eh']
jnz ['short', 'loc_C6E6']
mov ['[ebp+var_B8],', 'offset', '$SG13903']
jmp ['short', 'loc_C6F0']
mov ['[ebp+var_B8],', 'offset', '$SG13904']
mov ['ecx,', '[ebp+var_B8]']
mov ['[ebp+var_B4],', 'ecx']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
push ['offset', '$SG13905']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['loc_C689']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_C736']
push ['offset', '$SG13910']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C718']
xor ['ecx,', 'ecx']
jnz ['loc_C626']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_C760']
push ['offset', '$SG13918']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C742']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_C782']
push ['offset', '$SG13923']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C764']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_C82E']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C7C8']
mov ['[ebp+var_BC],', '1']
jmp ['short', 'loc_C7D2']
mov ['[ebp+var_BC],', '0']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_C7E7']
mov ['[ebp+var_C0],', 'offset', '$SG13928']
jmp ['short', 'loc_C81A']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_C804']
mov ['[ebp+var_C4],', 'offset', '$SG13929']
jmp ['short', 'loc_C80E']
mov ['[ebp+var_C4],', 'offset', '$SG13930']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_C0],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['offset', '$SG13931']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['loc_C7A5']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_C854']
push ['offset', '$SG13936']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_C836']
xor ['eax,', 'eax']
jnz ['loc_C742']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
movzx ['edx,', '[ebp+var_16]']
test ['edx,', 'edx']
jnz ['loc_CF95']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_C895']
push ['offset', '$SG13945']
push ['offset', '$SG13946']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_C872']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_C8B7']
push ['offset', '$SG13951']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_C899']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_C963']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_C8FF']
mov ['[ebp+var_C8],', '1']
jmp ['short', 'loc_C909']
mov ['[ebp+var_C8],', '0']
cmp ['[ebp+var_C8],', '0']
jz ['short', 'loc_C91E']
mov ['[ebp+var_CC],', 'offset', '$SG13956']
jmp ['short', 'loc_C94F']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0FFh']
cmp ['eax,', '8Eh']
jnz ['short', 'loc_C939']
mov ['[ebp+var_D0],', 'offset', '$SG13957']
jmp ['short', 'loc_C943']
mov ['[ebp+var_D0],', 'offset', '$SG13958']
mov ['ecx,', '[ebp+var_D0]']
mov ['[ebp+var_CC],', 'ecx']
mov ['edx,', '[ebp+var_CC]']
push ['edx']
push ['offset', '$SG13959']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['loc_C8DC']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_C989']
push ['offset', '$SG13964']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_C96B']
xor ['ecx,', 'ecx']
jnz ['loc_C872']
cmp ['[ebp+var_C],', '0']
jnz ['loc_CB2F']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_C9C2']
push ['offset', '$SG13973']
push ['offset', '$SG13974']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C99F']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_C9E4']
push ['offset', '$SG13979']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_C9C6']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+5Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_CA92']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_CA2C']
mov ['[ebp+var_D4],', '1']
jmp ['short', 'loc_CA36']
mov ['[ebp+var_D4],', '0']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_CA4B']
mov ['[ebp+var_D8],', 'offset', '$SG13984']
jmp ['short', 'loc_CA7E']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_CA68']
mov ['[ebp+var_DC],', 'offset', '$SG13985']
jmp ['short', 'loc_CA72']
mov ['[ebp+var_DC],', 'offset', '$SG13986']
mov ['eax,', '[ebp+var_DC]']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
push ['offset', '$SG13987']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['loc_CA09']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_CAB8']
push ['offset', '$SG13992']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_CA9A']
xor ['eax,', 'eax']
jnz ['loc_C99F']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_CB2A']
push ['offset', '$SG13994']
push ['42Eh']
push ['93h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '93h']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+80h]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jz ['short', 'loc_CB2A']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+80h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['short', 'loc_CB2A']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+0FAh],', 'dx']
mov ['[ebp+var_C],', '0']
jmp ['loc_CBD7']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['loc_CBD7']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+94h],', '74727565h']
jnz ['short', 'loc_CB82']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_CB71']
push ['offset', '$SG14008']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_CB53']
mov ['[ebp+var_15],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_CBD7']
push ['offset', '$SG14010']
push ['449h']
push ['8Fh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Fh']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+80h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_CBD7']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+80h]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_CBD7']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0FAh],', 'ax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_CBE2']
jmp ['$Exit$518']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_CC05']
push ['offset', '$SG14020']
push ['offset', '$SG14021']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CBE2']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_CC27']
push ['offset', '$SG14026']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CC09']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_CCD5']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_CC6F']
mov ['[ebp+var_E0],', '1']
jmp ['short', 'loc_CC79']
mov ['[ebp+var_E0],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_CC8E']
mov ['[ebp+var_E4],', 'offset', '$SG14031']
jmp ['short', 'loc_CCC1']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_CCAB']
mov ['[ebp+var_E8],', 'offset', '$SG14032']
jmp ['short', 'loc_CCB5']
mov ['[ebp+var_E8],', 'offset', '$SG14033']
mov ['eax,', '[ebp+var_E8]']
mov ['[ebp+var_E4],', 'eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
push ['offset', '$SG14034']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['loc_CC4C']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_CCFB']
push ['offset', '$SG14039']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_CCDD']
xor ['eax,', 'eax']
jnz ['loc_CBE2']
cmp ['[ebp+var_C],', '0']
jnz ['loc_CE46']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_CD34']
push ['offset', '$SG14048']
push ['offset', '$SG14049']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_CD11']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_CD56']
push ['offset', '$SG14054']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_CD38']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+5Ch]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_CE04']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_CD9E']
mov ['[ebp+var_EC],', '1']
jmp ['short', 'loc_CDA8']
mov ['[ebp+var_EC],', '0']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_CDBD']
mov ['[ebp+var_F0],', 'offset', '$SG14059']
jmp ['short', 'loc_CDF0']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_CDDA']
mov ['[ebp+var_F4],', 'offset', '$SG14060']
jmp ['short', 'loc_CDE4']
mov ['[ebp+var_F4],', 'offset', '$SG14061']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_F0],', 'edx']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
push ['offset', '$SG14062']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_CD7B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_CE2A']
push ['offset', '$SG14067']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CE0C']
xor ['edx,', 'edx']
jnz ['loc_CD11']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_CE46']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax+124h],', '1']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_CE62']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jz ['short', 'loc_CE62']
jmp ['$Exit$518']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_CE80']
push ['offset', '$SG14077']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CE62']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_CEA2']
push ['offset', '$SG14082']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_CE84']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+28h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_CF4E']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_CEE8']
mov ['[ebp+var_F8],', '1']
jmp ['short', 'loc_CEF2']
mov ['[ebp+var_F8],', '0']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_CF07']
mov ['[ebp+var_FC],', 'offset', '$SG14087']
jmp ['short', 'loc_CF3A']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_CF24']
mov ['[ebp+var_100],', 'offset', '$SG14088']
jmp ['short', 'loc_CF2E']
mov ['[ebp+var_100],', 'offset', '$SG14089']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_FC],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
push ['offset', '$SG14090']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['loc_CEC5']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_CF74']
push ['offset', '$SG14095']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_CF56']
xor ['eax,', 'eax']
jnz ['loc_CE62']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_CF95']
mov ['ecx,', '0FFFFh']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+16Ch],', 'cx']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax+60h],', '0']
jz ['loc_D0E3']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_CFC0']
push ['offset', '$SG14105']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_CFA2']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_CFE2']
push ['offset', '$SG14110']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_CFC4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+60h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_D08E']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_D028']
mov ['[ebp+var_104],', '1']
jmp ['short', 'loc_D032']
mov ['[ebp+var_104],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_D047']
mov ['[ebp+var_108],', 'offset', '$SG14115']
jmp ['short', 'loc_D07A']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_D064']
mov ['[ebp+var_10C],', 'offset', '$SG14116']
jmp ['short', 'loc_D06E']
mov ['[ebp+var_10C],', 'offset', '$SG14117']
mov ['edx,', '[ebp+var_10C]']
mov ['[ebp+var_108],', 'edx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
push ['offset', '$SG14118']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_D005']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_D0B4']
push ['offset', '$SG14123']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D096']
xor ['edx,', 'edx']
jnz ['loc_CFA2']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D0E3']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0FFh']
cmp ['eax,', '8Eh']
jnz ['short', 'loc_D0DE']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_D0E3']
jmp ['$Exit$518']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_D101']
push ['offset', '$SG14134']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_D0E3']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_D123']
push ['offset', '$SG14139']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_D105']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+40h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_D1CF']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_D169']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_D173']
mov ['[ebp+var_110],', '0']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_D188']
mov ['[ebp+var_114],', 'offset', '$SG14144']
jmp ['short', 'loc_D1BB']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_D1A5']
mov ['[ebp+var_118],', 'offset', '$SG14145']
jmp ['short', 'loc_D1AF']
mov ['[ebp+var_118],', 'offset', '$SG14146']
mov ['edx,', '[ebp+var_118]']
mov ['[ebp+var_114],', 'edx']
mov ['eax,', '[ebp+var_114]']
push ['eax']
push ['offset', '$SG14147']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_D146']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_D1F5']
push ['offset', '$SG14152']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D1D7']
xor ['edx,', 'edx']
jnz ['loc_D0E3']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D228']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0FFh']
cmp ['eax,', '8Eh']
jz ['short', 'loc_D21B']
jmp ['$Exit$518']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+224h],', '0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_D246']
push ['offset', '$SG14162']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D228']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_D268']
push ['offset', '$SG14167']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D24A']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+3Ch]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_D314']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_D2AE']
mov ['[ebp+var_11C],', '1']
jmp ['short', 'loc_D2B8']
mov ['[ebp+var_11C],', '0']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_D2CD']
mov ['[ebp+var_120],', 'offset', '$SG14172']
jmp ['short', 'loc_D300']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '8Eh']
jnz ['short', 'loc_D2EA']
mov ['[ebp+var_124],', 'offset', '$SG14173']
jmp ['short', 'loc_D2F4']
mov ['[ebp+var_124],', 'offset', '$SG14174']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_120],', 'eax']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
push ['offset', '$SG14175']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['loc_D28B']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_D33A']
push ['offset', '$SG14180']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_D31C']
xor ['eax,', 'eax']
jnz ['loc_D228']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_D364']
push ['offset', '$SG14188']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_D346']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_D386']
push ['offset', '$SG14193']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_D368']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+38h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_D432']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_D3CC']
mov ['[ebp+var_128],', '1']
jmp ['short', 'loc_D3D6']
mov ['[ebp+var_128],', '0']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_D3EB']
mov ['[ebp+var_12C],', 'offset', '$SG14198']
jmp ['short', 'loc_D41E']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0FFh']
cmp ['ecx,', '8Eh']
jnz ['short', 'loc_D408']
mov ['[ebp+var_130],', 'offset', '$SG14199']
jmp ['short', 'loc_D412']
mov ['[ebp+var_130],', 'offset', '$SG14200']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+var_12C],', 'edx']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
push ['offset', '$SG14201']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['loc_D3A9']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_D458']
push ['offset', '$SG14206']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D43A']
xor ['edx,', 'edx']
jnz ['loc_D346']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+108h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+16Ch]']
cmp ['eax,', '0FFFFh']
jz ['loc_D576']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+1ACh]']
and ['edx,', '100h']
jz ['loc_D576']
movzx ['eax,', '[ebp+var_18]']
test ['eax,', 'eax']
jnz ['short', 'loc_D4E2']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '14h']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D4DE']
jmp ['$Exit$518']
xor ['eax,', 'eax']
jnz ['short', 'loc_D4BB']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jnz ['short', 'loc_D512']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '14h']
push ['edx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D50E']
jmp ['$Exit$518']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D4EB']
movzx ['edx,', '[ebp+var_19]']
test ['edx,', 'edx']
jnz ['short', 'loc_D541']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '18h']
push ['eax']
push ['11h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D53D']
jmp ['$Exit$518']
xor ['edx,', 'edx']
jnz ['short', 'loc_D51A']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_D571']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '18h']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D56D']
jmp ['$Exit$518']
xor ['eax,', 'eax']
jnz ['short', 'loc_D54A']
jmp ['loc_D694']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '14h']
push ['ecx']
push ['15h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D599']
jmp ['$Exit$518']
xor ['eax,', 'eax']
jnz ['short', 'loc_D576']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jnz ['short', 'loc_D5D5']
movzx ['edx,', '[ebp+var_18]']
test ['edx,', 'edx']
jnz ['short', 'loc_D5D5']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '14h']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D5D1']
jmp ['$Exit$518']
xor ['edx,', 'edx']
jnz ['short', 'loc_D5AE']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_D605']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '14h']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D601']
jmp ['$Exit$518']
xor ['eax,', 'eax']
jnz ['short', 'loc_D5DE']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '18h']
push ['ecx']
push ['16h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D628']
jmp ['$Exit$518']
xor ['eax,', 'eax']
jnz ['short', 'loc_D605']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['short', 'loc_D664']
movzx ['edx,', '[ebp+var_19]']
test ['edx,', 'edx']
jnz ['short', 'loc_D664']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '18h']
push ['eax']
push ['11h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D660']
jmp ['$Exit$518']
xor ['edx,', 'edx']
jnz ['short', 'loc_D63D']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_D694']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '18h']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_get_name']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D690']
jmp ['$Exit$518']
xor ['eax,', 'eax']
jnz ['short', 'loc_D66D']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+2DCh],', '2']
jz ['short', 'loc_D6BB']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+2DCh],', '3']
jnz ['short', 'loc_D6C6']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '4000h']
mov ['[ebp+var_2C],', 'eax']
movzx ['ecx,', '[ebp+var_15]']
cmp ['ecx,', '1']
jnz ['short', 'loc_D6D8']
mov ['edx,', '[ebp+var_2C]']
or ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '18h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_D702']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+1D4h],', '30000h']
jz ['short', 'loc_D702']
mov ['edx,', '[ebp+var_2C]']
or ['edx,', '200h']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+1E0h],', '0']
jz ['short', 'loc_D717']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+124h]']
test ['eax,', 'eax']
jz ['short', 'loc_D72E']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '20h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+2F0h],', '0']
jz ['short', 'loc_D743']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '40h']
mov ['[ebp+var_2C],', 'eax']
push ['676C7966h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_tt_face_lookup_table']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_D78E']
push ['66766172h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_tt_face_lookup_table']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_D78E']
push ['67766172h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_tt_face_lookup_table']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_D78E']
mov ['ecx,', '[ebp+var_2C]']
or ['ecx,', '100h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+8],', 'eax']
mov ['[ebp+var_2C],', '0']
movzx ['ecx,', '[ebp+var_15]']
cmp ['ecx,', '1']
jnz ['short', 'loc_D807']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+16Ch]']
cmp ['eax,', '0FFFFh']
jz ['short', 'loc_D807']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+1ACh]']
and ['edx,', '200h']
jz ['short', 'loc_D7D5']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_D7ED']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+1ACh]']
and ['edx,', '1']
jz ['short', 'loc_D7ED']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+1ACh]']
and ['edx,', '20h']
jz ['short', 'loc_D805']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_D837']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+0CCh]']
and ['edx,', '1']
jz ['short', 'loc_D81F']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+0CCh]']
and ['edx,', '2']
jz ['short', 'loc_D837']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_2C]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_tt_face_build_cmaps']
add ['esp,', '4']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_D85E']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx+24h]']
jge ['short', 'loc_D898']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'word', 'ptr', '[edx+0Ah]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
push ['edx']
call ['_sfnt_find_encoding']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+4],', 'eax']
jmp ['short', 'loc_D855']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+2E0h]']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jbe ['loc_D9FE']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+68h]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ecx+0B2h]']
mov ['[ebp+var_44],', 'dx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+16Eh]']
mov ['[ebp+var_48],', 'cx']
movzx ['edx,', '[ebp+var_44]']
test ['edx,', 'edx']
jz ['short', 'loc_D8F0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+16Ch]']
cmp ['ecx,', '0FFFFh']
jnz ['short', 'loc_D902']
mov ['edx,', '1']
mov ['[ebp+var_48],', 'dx']
mov ['eax,', '1']
mov ['[ebp+var_44],', 'ax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
push ['0']
push ['10h']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+20h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D92D']
jmp ['$Exit$518']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_D93F']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_3C]']
jnb ['loc_D9E6']
mov ['ecx,', '[ebp+var_38]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_28]']
add ['ecx,', '[edx+20h]']
mov ['[ebp+var_70],', 'ecx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+6Ch]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D988']
jmp ['$Exit$518']
mov ['edx,', '[ebp+var_54]']
sar ['edx,', '6']
mov ['eax,', '[ebp+var_70]']
mov ['[eax],', 'dx']
movsx ['ecx,', '[ebp+var_48]']
movzx ['edx,', '[ebp+var_68]']
imul ['ecx,', 'edx']
movzx ['eax,', '[ebp+var_44]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
add ['ecx,', 'eax']
movzx ['esi,', '[ebp+var_44]']
mov ['eax,', 'ecx']
cdq
idiv ['esi']
mov ['ecx,', '[ebp+var_70]']
mov ['[ecx+2],', 'ax']
movzx ['edx,', '[ebp+var_68]']
shl ['edx,', '6']
mov ['eax,', '[ebp+var_70]']
mov ['[eax+8],', 'edx']
movzx ['ecx,', '[ebp+var_66]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+var_70]']
mov ['[edx+0Ch],', 'ecx']
movzx ['eax,', '[ebp+var_66]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+var_70]']
mov ['[ecx+4],', 'eax']
jmp ['loc_D936']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+8]']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+8]']
and ['edx,', '2']
jnz ['short', 'loc_DA23']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '1']
jnz ['short', 'loc_DA23']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+8]']
or ['eax,', '1']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+8]']
and ['eax,', '1']
jz ['$Exit$518']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+0C4h]']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+34h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+0C6h]']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+0C8h]']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+3Ch],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+0CAh]']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+40h],', 'edx']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+0B2h]']
mov ['[ecx+44h],', 'ax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+0DCh]']
mov ['[ecx+46h],', 'ax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+0DEh]']
mov ['[ecx+48h],', 'ax']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+46h]']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'word', 'ptr', '[eax+48h]']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+0E0h]']
add ['edx,', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+4Ah],', 'dx']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+46h]']
test ['edx,', 'edx']
jnz ['loc_DB99']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'word', 'ptr', '[eax+48h]']
test ['ecx,', 'ecx']
jnz ['loc_DB99']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+16Ch]']
cmp ['eax,', '0FFFFh']
jz ['loc_DB99']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+1B2h]']
test ['edx,', 'edx']
jnz ['short', 'loc_DB17']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+1B4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_DB5E']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+1B2h]']
mov ['[edx+46h],', 'cx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+1B4h]']
mov ['[edx+48h],', 'cx']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+46h]']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+48h]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+1B6h]']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+4Ah],', 'ax']
jmp ['short', 'loc_DB99']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+1B8h]']
mov ['[edx+46h],', 'cx']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+1BAh]']
neg ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+48h],', 'ax']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+46h]']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+48h]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+4Ah],', 'ax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+0E2h]']
mov ['[edx+4Ch],', 'cx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+124h]']
test ['eax,', 'eax']
jz ['short', 'loc_DBCA']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+132h]']
mov ['[ebp+var_134],', 'edx']
jmp ['short', 'loc_DBD7']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'word', 'ptr', '[eax+4Ah]']
mov ['[ebp+var_134],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['ax,', 'word', 'ptr', '[ebp+var_134]']
mov ['[edx+4Eh],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[ecx+1DCh]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+1DEh]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
sub ['ecx,', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+50h],', 'cx']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[edx+1DEh]']
mov ['[ecx+52h],', 'ax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_DC36']
push ['offset', '$SG14334']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', '$Exit$518']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN517']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN516']
dd ['offset', '$LN514']
dd ['0FFFFFF98h,', '1Ch']
dd ['offset', '$LN515']
align ['4']
endp
_sfnt_done_face	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_DCBF']
jmp ['loc_DF6D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+214h]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_DD1C']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+50h],', '0']
jz ['short', 'loc_DCFB']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+50h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+64h],', '0']
jz ['short', 'loc_DD1C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+64h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_face_free_bdf_props']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_done_kern']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+90h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+90h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_DD34']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+9Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_DD68']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+98h],', 'cx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1F4h']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1F8h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2A8h']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2B0h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2ACh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2B4h],', '0']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+124h]']
test ['edx,', 'edx']
jz ['short', 'loc_DE7B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_DE23']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+150h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+150h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_DE4A']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+124h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+220h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+220h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_DE7B']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+21Eh],', 'cx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_DECC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+34h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_DECC']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_DEED']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_DF0E']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+298h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+298h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_DF39']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+214h],', '0']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_tt_face_free_bdf_props	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2F8h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+14h]']
test ['edx,', 'edx']
jz ['short', 'loc_DFE5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_DFC7']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_tt_face_find_bdf_prop proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2F8h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+14h]']
test ['edx,', 'edx']
jnz ['short', 'loc_E063']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_face_load_bdf_props']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_E063']
jmp ['$Exit$25_0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_C],', '6']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_E096']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_E09B']
jmp ['$Exit$25_0']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_E0B5']
jmp ['$Exit$25_0']
jmp ['short', 'loc_E0C0']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jbe ['loc_E155']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+0Eh]']
cmp ['[ebp+var_20],', 'eax']
jnz ['short', 'loc_E146']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', '$FoundStrike$26']
imul ['edx,', '[ebp+var_24],', '0Ah']
add ['edx,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_E0B7']
jmp ['$Exit$25_0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_E16B']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jbe ['$Exit$25_0']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+4]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax+4]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
and ['edx,', '10h']
jz ['loc_E347']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+6]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx+6]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx+6]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx+6]']
or ['eax,', 'edx']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['loc_E347']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
sub ['eax,', '[ebp+var_2C]']
cmp ['[ebp+var_1C],', 'eax']
jnb ['loc_E347']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
sub ['edx,', '[ebp+var_2C]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_E347']
mov ['eax,', '[ebp+var_28]']
and ['eax,', '0Fh']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '3']
ja ['loc_E347']
mov ['ecx,', '[ebp+var_34]']
jmp ['ds:$LN24_0[ecx*4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx+0Ch]']
jnb ['short', 'loc_E30F']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memchr']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_E30F']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+4],', 'ecx']
mov ['[ebp+var_C],', '0']
jmp ['short', '$Exit$25_0']
jmp ['short', 'loc_E347']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx+4],', 'edx']
mov ['[ebp+var_C],', '0']
jmp ['short', '$Exit$25_0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx+4],', 'edx']
mov ['[ebp+var_C],', '0']
jmp ['short', '$Exit$25_0']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '0Ah']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_E162']
mov ['eax,', '[ebp+var_C]']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_0']
dd ['offset', '$LN3']
dd ['offset', '$LN2']
db ['4', 'dup(0CCh)']
endp
_tt_name_entry_ascii_from_utf16	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
shr ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
push ['0']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_E3E8']
xor ['eax,', 'eax']
jmp ['loc_E46A']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_E3FA']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_E45E']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_E43E']
jmp ['short', 'loc_E45E']
cmp ['[ebp+var_C],', '20h']
jb ['short', 'loc_E44A']
cmp ['[ebp+var_C],', '7Fh']
jbe ['short', 'loc_E451']
mov ['[ebp+var_C],', '3Fh']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_10]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[ecx],', 'dl']
jmp ['short', 'loc_E3F1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN10']
db ['6', 'dup(0CCh)']
endp
_tt_name_entry_ascii_from_other	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
push ['0']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_E513']
xor ['eax,', 'eax']
jmp ['short', 'loc_E573']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_E525']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_E567']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_E547']
jmp ['short', 'loc_E567']
cmp ['[ebp+var_C],', '20h']
jb ['short', 'loc_E553']
cmp ['[ebp+var_C],', '7Fh']
jbe ['short', 'loc_E55A']
mov ['[ebp+var_C],', '3Fh']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_E51C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_0']
dd ['offset', '$LN10_0']
db ['0Eh', 'dup(0CCh)']
endp
_tt_face_get_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['[ebp+var_24],', '0FFFFFFFFh']
mov ['[ebp+var_28],', '0FFFFFFFFh']
mov ['[ebp+var_2C],', '0FFFFFFFFh']
mov ['[ebp+var_30],', '0FFFFFFFFh']
mov ['[ebp+var_31],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_E62E']
push ['offset', '$SG13185']
push ['0A4h']
push ['offset', '$SG13186']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_E611']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+164h]']
mov ['[ebp+var_1C],', 'ecx']
xor ['edx,', 'edx']
mov ['[ebp+var_18],', 'dx']
jmp ['short', 'loc_E65B']
mov ['ax,', '[ebp+var_18]']
add ['ax,', '1']
mov ['[ebp+var_18],', 'ax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '14h']
mov ['[ebp+var_1C],', 'ecx']
movzx ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+154h]']
cmp ['edx,', 'ecx']
jge ['loc_E747']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+6]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['loc_E742']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
test ['eax,', 'eax']
jle ['loc_E742']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_40],', '3']
ja ['loc_E742']
mov ['eax,', '[ebp+var_40]']
jmp ['ds:$LN50[eax*4]']
movzx ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_30],', 'ecx']
jmp ['loc_E742']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jnz ['short', 'loc_E6D0']
movzx ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_E6E2']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
test ['eax,', 'eax']
jnz ['short', 'loc_E6E2']
movzx ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_E742']
cmp ['[ebp+var_2C],', '0FFFFFFFFh']
jz ['short', 'loc_E6FB']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '3FFh']
cmp ['eax,', '9']
jnz ['short', 'loc_E742']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0']
jl ['short', 'loc_E742']
cmp ['[ebp+var_44],', '1']
jle ['short', 'loc_E719']
cmp ['[ebp+var_44],', '0Ah']
jz ['short', 'loc_E719']
jmp ['short', 'loc_E742']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '3FFh']
cmp ['ecx,', '9']
jnz ['short', 'loc_E731']
mov ['[ebp+var_45],', '1']
jmp ['short', 'loc_E735']
mov ['[ebp+var_45],', '0']
mov ['dl,', '[ebp+var_45]']
mov ['[ebp+var_31],', 'dl']
movzx ['eax,', '[ebp+var_18]']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_E646']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_28],', '0']
jl ['short', 'loc_E759']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_E7B4']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_E774']
movzx ['eax,', '[ebp+var_31]']
test ['eax,', 'eax']
jz ['short', 'loc_E7B4']
imul ['ecx,', '[ebp+var_2C],', '14h']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+164h]']
mov ['[ebp+var_1C],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_4C],', 'ecx']
cmp ['[ebp+var_4C],', '0']
jl ['short', 'loc_E7B2']
cmp ['[ebp+var_4C],', '1']
jle ['short', 'loc_E7A2']
cmp ['[ebp+var_4C],', '0Ah']
jz ['short', 'loc_E7AB']
jmp ['short', 'loc_E7B2']
mov ['[ebp+var_38],', 'offset', '_tt_name_entry_ascii_from_utf16']
jmp ['short', 'loc_E7B2']
mov ['[ebp+var_38],', 'offset', '_tt_name_entry_ascii_from_utf16']
jmp ['short', 'loc_E7F0']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_E7D3']
imul ['edx,', '[ebp+var_20],', '14h']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+164h]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_38],', 'offset', '_tt_name_entry_ascii_from_other']
jmp ['short', 'loc_E7F0']
cmp ['[ebp+var_30],', '0']
jl ['short', 'loc_E7F0']
imul ['ecx,', '[ebp+var_30],', '14h']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+164h]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_38],', 'offset', '_tt_name_entry_ascii_from_utf16']
cmp ['[ebp+var_1C],', '0']
jz ['$Exit$51']
cmp ['[ebp+var_38],', '0']
jz ['$Exit$51']
mov ['eax,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['loc_E8BA']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+168h]']
mov ['[ebp+var_3C],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'word', 'ptr', '[ecx+8]']
push ['edx']
push ['0']
push ['1']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx+10h],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_E887']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_E887']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_E8BA']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_E887']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx+8],', 'ax']
mov ['[ebp+var_14],', '0']
jmp ['short', '$Exit$51']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['[ebp+var_38]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN49']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN48']
dd ['offset', '$LN47_0']
align ['4']
dd ['offset', '$LN31_0']
dd ['offset', '$LN32']
dd ['offset', '$LN27_0']
endp
_sfnt_find_encoding proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', 'offset', '?tt_encodings@?1??sfnt_find_encoding@@9@9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '84h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_E95D']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_E98D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jnz ['short', 'loc_E98B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_E983']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
jnz ['short', 'loc_E98B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
jmp ['short', 'loc_E98F']
jmp ['short', 'loc_E954']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_sfnt_stream_close proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_E9B0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_compare_offsets proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jbe ['short', 'loc_EA46']
mov ['eax,', '1']
jmp ['short', 'loc_EA57']
jmp ['short', 'loc_EA57']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_EA55']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_EA57']
jmp ['short', 'loc_EA57']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_woff_open_font	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '98h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_98]']
mov ['ecx,', '26h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4C],', '0']
mov ['[ebp+Base],', '0']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_6C],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+68h]']
jz ['short', 'loc_EAD8']
push ['offset', '$SG13382']
push ['1C4h']
push ['offset', '$SG13383']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_EAB6']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_EB03']
push ['offset', '$SG13388']
push ['1C5h']
push ['offset', '$SG13389']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_EADC']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
push ['offset', '?woff_header_fields@?1??woff_open_font@@9@9']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_EB2D']
mov ['eax,', '[ebp+var_10]']
jmp ['loc_F527']
cmp ['[ebp+var_40],', '774F4646h']
jz ['short', 'loc_EB3F']
cmp ['[ebp+var_40],', '74746366h']
jnz ['short', 'loc_EB5B']
push ['offset', '$SG13403']
push ['1CCh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_F527']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_EBBE']
movzx ['edx,', '[ebp+var_38]']
test ['edx,', 'edx']
jz ['short', 'loc_EBBE']
movzx ['eax,', '[ebp+var_38]']
imul ['ecx,', 'eax,', '14h']
add ['ecx,', '2Ch']
cmp ['ecx,', '[ebp+var_3C]']
jnb ['short', 'loc_EBBE']
movzx ['edx,', '[ebp+var_38]']
shl ['edx,', '4']
add ['edx,', '0Ch']
cmp ['edx,', '[ebp+var_34]']
jnb ['short', 'loc_EBBE']
mov ['eax,', '[ebp+var_34]']
and ['eax,', '3']
jnz ['short', 'loc_EBBE']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_EBA6']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_EBBE']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_EBBE']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_EBB2']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_EBBE']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_EBDA']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_EBDA']
push ['offset', '$SG13408']
push ['1D8h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_F527']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_EC12']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['28h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_EC17']
jmp ['$Exit$108']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_60],', 'eax']
movzx ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_7C],', 'ecx']
mov ['[ebp+var_74],', '0']
cmp ['[ebp+var_7C],', '0']
jz ['short', 'loc_EC44']
mov ['edx,', '[ebp+var_7C]']
shr ['edx,', '1']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_EC2B']
mov ['ecx,', '[ebp+var_74]']
sub ['ecx,', '1']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_74]']
shl ['edx,', 'cl']
shl ['edx,', '4']
mov ['[ebp+var_70],', 'edx']
movzx ['eax,', '[ebp+var_38]']
shl ['eax,', '4']
sub ['eax,', '[ebp+var_70]']
mov ['[ebp+var_78],', 'eax']
mov ['ecx,', '[ebp+var_40]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_40]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_40]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_40]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_EC6A']
movzx ['edx,', '[ebp+var_38]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_60]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
mov ['al,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_ECBB']
mov ['eax,', '[ebp+var_70]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_60]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_70]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_ECE5']
mov ['ecx,', '[ebp+var_74]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_ED0E']
mov ['edx,', '[ebp+var_78]']
shr ['edx,', '8']
mov ['eax,', '[ebp+var_60]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
mov ['al,', 'byte', 'ptr', '[ebp+var_78]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_ED37']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['0']
movzx ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['0']
push ['18h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_EDA8']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['0']
movzx ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['0']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+Base],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_EDAD']
jmp ['$Exit$108']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_EDCB']
push ['offset', '$SG13458']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_EDAD']
movzx ['eax,', '[ebp+var_38]']
imul ['ecx,', 'eax,', '14h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_EDF1']
jmp ['$Exit$108']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_EE03']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
movzx ['ecx,', '[ebp+var_38]']
cmp ['[ebp+var_68],', 'ecx']
jge ['loc_EF2A']
imul ['edx,', '[ebp+var_68],', '18h']
add ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_80]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_80]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_80]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_80]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_80]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_EED8']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[edx]']
shr ['eax,', '8']
movsx ['ecx,', 'al']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[edx]']
shr ['eax,', '10h']
movsx ['ecx,', 'al']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[edx]']
shr ['eax,', '18h']
movsx ['ecx,', 'al']
push ['ecx']
push ['offset', '$SG13478']
call ['_FT_Message']
add ['esp,', '24h']
xor ['edx,', 'edx']
jnz ['short', 'loc_EE73']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_6C]']
ja ['short', 'loc_EF11']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
push ['offset', '$SG13480']
push ['21Eh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$108']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+Base]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax+edx*4],', 'ecx']
jmp ['loc_EDFA']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['offset', '_compare_offsets']
push ['4']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+Base]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__qsort']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', '[ebp+var_38]']
imul ['eax,', 'edx,', '14h']
add ['eax,', '2Ch']
mov ['[ebp+var_54],', 'eax']
movzx ['ecx,', '[ebp+var_38]']
shl ['ecx,', '4']
add ['ecx,', '0Ch']
mov ['[ebp+var_64],', 'ecx']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_EF84']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '1']
mov ['[ebp+var_68],', 'edx']
movzx ['eax,', '[ebp+var_38]']
cmp ['[ebp+var_68],', 'eax']
jge ['loc_F060']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+Base]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_54]']
jnz ['short', 'loc_F006']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_3C]']
ja ['short', 'loc_F006']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_84]']
cmp ['[ecx+4],', 'eax']
ja ['short', 'loc_F006']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+var_34]']
ja ['short', 'loc_F006']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ebp+var_34]']
sub ['edx,', '[ecx+0Ch]']
cmp ['[ebp+var_64],', 'edx']
ja ['short', 'loc_F006']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jbe ['short', 'loc_F025']
push ['offset', '$SG13488']
push ['240h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$108']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[ebp+var_64]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[edx+8]']
add ['eax,', '3']
and ['eax,', '0FFFFFFFCh']
add ['eax,', '[ebp+var_54]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '3']
and ['edx,', '0FFFFFFFCh']
add ['edx,', '[ebp+var_64]']
mov ['[ebp+var_64],', 'edx']
jmp ['loc_EF7B']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_F0A1']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_54]']
jnz ['short', 'loc_F079']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_3C]']
jbe ['short', 'loc_F098']
push ['offset', '$SG13492']
push ['259h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$108']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '[ebp+var_28]']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_F0EE']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '3']
and ['eax,', '0FFFFFFFCh']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_54]']
jnz ['short', 'loc_F0C6']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_3C]']
jbe ['short', 'loc_F0E5']
push ['offset', '$SG13496']
push ['269h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$108']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_64]']
cmp ['ecx,', '[ebp+var_34]']
jnz ['short', 'loc_F0FE']
mov ['edx,', '[ebp+var_54]']
cmp ['edx,', '[ebp+var_3C]']
jz ['short', 'loc_F11D']
push ['offset', '$SG13499']
push ['274h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$108']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_F12F']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
movzx ['ecx,', '[ebp+var_38]']
cmp ['[ebp+var_68],', 'ecx']
jge ['loc_F428']
imul ['edx,', '[ebp+var_68],', '18h']
add ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ecx]']
shr ['edx,', '10h']
mov ['eax,', '[ebp+var_60]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_60]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[ebp+var_88]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_F149']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+10h]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_60]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+10h]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ecx+10h]']
shr ['edx,', '8']
mov ['eax,', '[ebp+var_60]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
mov ['eax,', '[ebp+var_88]']
mov ['cl,', '[eax+10h]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_F1AE']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ecx+14h]']
shr ['edx,', '18h']
mov ['eax,', '[ebp+var_60]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+14h]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_60]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+14h]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+var_88]']
mov ['al,', '[edx+14h]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_F217']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+0Ch]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ecx+0Ch]']
shr ['edx,', '10h']
mov ['eax,', '[ebp+var_60]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+0Ch]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_60]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[ebp+var_88]']
mov ['dl,', '[ecx+0Ch]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_F280']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_F327']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_F32C']
jmp ['$Exit$108']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_F368']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+var_58]']
add ['ecx,', '[eax+14h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_F3E6']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
lea ['edx,', '[ebp+var_90]']
push ['edx']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+var_58]']
add ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_Gzip_Uncompress']
add ['esp,', '14h']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_F3B6']
jmp ['$Exit$108']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+var_90]']
cmp ['ecx,', '[eax+0Ch]']
jz ['short', 'loc_F3E6']
push ['offset', '$SG13541']
push ['2A0h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$108']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_88]']
add ['ecx,', '[edx+0Ch]']
mov ['[ebp+var_64],', 'ecx']
mov ['eax,', '[ebp+var_64]']
and ['eax,', '3']
jz ['short', 'loc_F423']
mov ['ecx,', '[ebp+var_58]']
add ['ecx,', '[ebp+var_64]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_64]']
add ['edx,', '1']
mov ['[ebp+var_64],', 'edx']
jmp ['short', 'loc_F407']
jmp ['loc_F126']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
call ['_FT_Stream_OpenMemory']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '_sfnt_stream_close']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
and ['edx,', '400h']
jz ['short', 'loc_F46C']
mov ['[ebp+var_98],', '1']
jmp ['short', 'loc_F476']
mov ['[ebp+var_98],', '0']
mov ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+68h]']
push ['edx']
call ['_FT_Stream_Free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+68h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
and ['eax,', '0FFFFFBFFh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4C],', '0']
xor ['ecx,', 'ecx']
jnz ['short', '$Exit$108']
mov ['edx,', '[ebp+Base]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+Base],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_F4C1']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_F524']
mov ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_58],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_F4E2']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
call ['_FT_Stream_Close']
add ['esp,', '4']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_5C],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_F509']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN107']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '98h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN106']
dd ['offset', '$LN103']
dd ['0FFFFFFBCh,', '2Ch']
dd ['offset', '$LN104']
dd ['0FFFFFF70h,', '4']
dd ['offset', '$LN105']
align ['4']
endp
_sfnt_open_font	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+84h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+88h],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+8Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F61C']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_F8F2']
cmp ['[ebp+var_14],', '774F4646h']
jnz ['short', 'loc_F697']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_F643']
push ['offset', '$SG13597']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_F625']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F668']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_F8F2']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_woff_open_font']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F689']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_F8F2']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['$retry$38']
cmp ['[ebp+var_14],', '(offset', 'loc_FFFE+2)']
jz ['short', 'loc_F70B']
cmp ['[ebp+var_14],', '74746366h']
jz ['short', 'loc_F70B']
cmp ['[ebp+var_14],', '4F54544Fh']
jz ['short', 'loc_F70B']
cmp ['[ebp+var_14],', '74727565h']
jz ['short', 'loc_F70B']
cmp ['[ebp+var_14],', '74797031h']
jz ['short', 'loc_F70B']
cmp ['[ebp+var_14],', '20000h']
jz ['short', 'loc_F70B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_F6EB']
push ['offset', '$SG13626']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_F6CD']
push ['offset', '$SG13627']
push ['310h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
jmp ['loc_F8F2']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+84h],', '74746366h']
cmp ['[ebp+var_14],', '74746366h']
jnz ['loc_F876']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_F743']
push ['offset', '$SG13644']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_F725']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '84h']
push ['eax']
push ['offset', '?ttc_header_fields@?1??sfnt_open_font@@9@9']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F772']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_F8F2']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+8Ch],', '0']
jnz ['short', 'loc_F79A']
push ['offset', '$SG13647']
push ['320h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_F8F2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
shr ['ecx,', '5']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx+8Ch],', 'ecx']
jbe ['short', 'loc_F7CA']
push ['offset', '$SG13650']
push ['328h']
push ['0Ah']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Ah']
jmp ['loc_F8F2']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8Ch]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+90h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F801']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_F8F2']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8Ch]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F82B']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_F8F2']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_F83D']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[eax+8Ch]']
jge ['short', 'loc_F868']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+90h]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_F834']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
jmp ['short', 'loc_F8EF']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '13h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '3']
jl ['short', 'loc_F894']
push ['offset', '$SG13665']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_F876']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+88h],', '(offset', 'loc_FFFE+2)']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+8Ch],', '1']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+90h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_F8D8']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_F8F2']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+90h]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+edx],', 'ecx']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN37']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN36']
dd ['offset', '$LN35']
db ['0Eh', 'dup(0CCh)']
endp
_tt_face_load_sbit proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2D4h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2D8h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2DCh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2E0h],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['43424C43h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_F9C7']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2DCh],', '2']
jmp ['short', 'loc_FA36']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['45424C43h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FA23']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['626C6F63h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_FA36']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2DCh],', '1']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FA7A']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['73626978h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_FA7A']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2DCh],', '3']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FA85']
jmp ['$Exit$43']
cmp ['[ebp+var_C],', '8']
jnb ['short', 'loc_FAB4']
push ['offset', '$SG14807']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG14808']
push ['52h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$43']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DCh]']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_34],', '0']
jbe ['loc_FDD5']
cmp ['[ebp+var_34],', '2']
jbe ['short', 'loc_FADF']
cmp ['[ebp+var_34],', '3']
jz ['loc_FC5A']
jmp ['loc_FDD5']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2D4h']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FB07']
jmp ['$Exit$43']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+2D8h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D4h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '0FFFF0000h']
cmp ['edx,', '20000h']
jz ['short', 'loc_FC00']
push ['offset', '$SG14843']
push ['6Dh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$43']
cmp ['[ebp+var_1C],', '(offset', 'loc_FFFE+2)']
jb ['short', 'loc_FC25']
push ['offset', '$SG14845']
push ['73h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$43']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
imul ['ecx,', '[ebp+var_20],', '30h']
add ['ecx,', '8']
cmp ['ecx,', '[ebp+var_C]']
jbe ['short', 'loc_FC49']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '8']
xor ['edx,', 'edx']
mov ['ecx,', '30h']
div ['ecx']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+2E0h],', 'eax']
jmp ['loc_FDEF']
push ['8']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FC76']
jmp ['$Exit$43']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['[ebp+var_24],', 'ax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['[ebp+var_28],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
movzx ['eax,', '[ebp+var_24]']
cmp ['eax,', '1']
jge ['short', 'loc_FCD9']
push ['offset', '$SG14860']
push ['96h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$43']
movzx ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '1']
jz ['short', 'loc_FCEB']
movzx ['edx,', '[ebp+var_28]']
cmp ['edx,', '3']
jnz ['short', 'loc_FCF4']
cmp ['[ebp+var_2C],', '(offset', 'loc_FFFE+2)']
jb ['short', 'loc_FD13']
push ['offset', '$SG14864']
push ['0A0h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$43']
movzx ['eax,', '[ebp+var_28]']
cmp ['eax,', '3']
jnz ['short', 'loc_FD3E']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_FD3A']
push ['offset', '$SG14870']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_FD1C']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
lea ['eax,', 'ds:8[edx*4]']
cmp ['eax,', '[ebp+var_C]']
jbe ['short', 'loc_FD5F']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '8']
shr ['ecx,', '2']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
sub ['eax,', '8']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FD89']
jmp ['$Exit$43']
mov ['ecx,', '[ebp+var_30]']
lea ['edx,', 'ds:8[ecx*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2D8h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2D4h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2D8h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FDC7']
jmp ['short', '$Exit$43']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+2E0h],', 'eax']
jmp ['short', 'loc_FDEF']
push ['offset', '$SG14880']
push ['0C0h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_FE21']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_FE1D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2E0h]']
push ['ecx']
push ['offset', '$SG14886']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_FDF5']
xor ['eax,', 'eax']
jmp ['short', 'loc_FE6A']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_FE67']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+2D4h],', '0']
jz ['short', 'loc_FE4D']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2D4h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2D8h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2DCh],', '0']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN42']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN41']
dd ['offset', '$LN40']
align ['4']
endp
_tt_face_free_sbit proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2D4h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+2D8h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+2DCh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2E0h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_tt_face_set_sbit_strike proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Match_Size']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_tt_face_load_strike_metrics proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+2E0h]']
jb ['short', 'loc_FF7D']
push ['offset', '$SG14912']
push ['0F2h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_10286']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2DCh]']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jbe ['loc_1026F']
cmp ['[ebp+var_34],', '2']
jbe ['short', 'loc_FFA8']
cmp ['[ebp+var_34],', '3']
jz ['loc_1006C']
jmp ['loc_1026F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2D4h]']
imul ['eax,', '[ebp+arg_4],', '30h']
lea ['ecx,', '[edx+eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '2Ch']
mov ['ecx,', '[ebp+var_4]']
movzx ['dx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'dx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '2Dh']
mov ['eax,', '[ebp+var_4]']
movzx ['cx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+2],', 'cx']
mov ['eax,', '1']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '11h']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+14h],', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '16h']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '1']
imul ['eax,', 'edx,', '12h']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
add ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '17h']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+eax]']
add ['ecx,', 'eax']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+18h],', 'ecx']
xor ['eax,', 'eax']
jmp ['loc_10286']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2D4h]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4+8]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '4']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['73626978h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_1011B']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_10286']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
cmp ['eax,', '[ebp+var_24]']
jbe ['short', 'loc_10142']
push ['offset', '$SG14953']
push ['121h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_10286']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
add ['eax,', '[ebp+var_C]']
push ['eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1017E']
push ['4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_10186']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_10286']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['[ebp+var_14],', 'ax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['[ebp+var_18],', 'ax']
mov ['ax,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'ax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+0B2h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D8h']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['ax,', '[ebp+var_14]']
mov ['[edx],', 'ax']
mov ['ecx,', '[ebp+arg_8]']
mov ['dx,', '[ebp+var_14]']
mov ['[ecx+2],', 'dx']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'word', 'ptr', '[ecx+4]']
imul ['eax,', 'edx']
shl ['eax,', '6']
xor ['edx,', 'edx']
div ['[ebp+var_10]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+0Ch],', 'eax']
movzx ['eax,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_1C]']
movsx ['ecx,', 'word', 'ptr', '[edx+6]']
imul ['eax,', 'ecx']
shl ['eax,', '6']
xor ['edx,', 'edx']
div ['[ebp+var_10]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+10h],', 'eax']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'word', 'ptr', '[ecx+4]']
mov ['ecx,', '[ebp+var_1C]']
movsx ['ecx,', 'word', 'ptr', '[ecx+6]']
sub ['edx,', 'ecx']
mov ['ecx,', '[ebp+var_1C]']
movsx ['ecx,', 'word', 'ptr', '[ecx+8]']
add ['edx,', 'ecx']
imul ['eax,', 'edx']
shl ['eax,', '6']
xor ['edx,', 'edx']
div ['[ebp+var_10]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+14h],', 'eax']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ah]']
imul ['eax,', 'edx']
shl ['eax,', '6']
xor ['edx,', 'edx']
div ['[ebp+var_10]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+18h],', 'eax']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_10286']
push ['offset', '$SG14961']
push ['13Fh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN13']
db ['5', 'dup(0CCh)']
endp
_tt_face_load_sbit_image proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2DCh]']
mov ['[ebp+var_60],', 'ecx']
cmp ['[ebp+var_60],', '0']
jbe ['short', 'loc_10374']
cmp ['[ebp+var_60],', '2']
jbe ['short', 'loc_10309']
cmp ['[ebp+var_60],', '3']
jz ['short', 'loc_1034F']
jmp ['short', 'loc_10374']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['_tt_sbit_decoder_init']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1034D']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_tt_sbit_decoder_load_image']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['_tt_sbit_decoder_done']
add ['esp,', '4']
jmp ['short', 'loc_1038E']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_face_load_sbix_image']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1038E']
push ['offset', '$SG15742']
push ['598h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['loc_1044F']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '100000h']
jnz ['loc_1044F']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+12h]']
cmp ['edx,', '7']
jnz ['loc_1044F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_5C],', 'edx']
lea ['eax,', '[ebp+var_54]']
push ['eax']
call ['_FT_Bitmap_New']
add ['esp,', '4']
push ['1']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['_FT_Bitmap_Convert']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_103FE']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
call ['_FT_Bitmap_Done']
add ['esp,', '8']
jmp ['short', 'loc_1044F']
mov ['eax,', '[ebp+arg_14]']
mov ['cl,', '[ebp+var_42]']
mov ['[eax+12h],', 'cl']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+var_4C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['dx,', '[ebp+var_44]']
mov ['[ecx+10h],', 'dx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
push ['edx']
call ['_ft_glyphslot_set_bitmap']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ecx+9Ch]']
mov ['eax,', '[edx+4]']
or ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['ecx,', '[edx+9Ch]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14_0']
db ['3', 'dup(0FFh)']
dd ['offset', '?woff_header_fields@?1??woff_open_font@@9@9+2Ch']
dd ['offset', '$LN12_1']
dd ['0FFFFFFACh,', '18h']
dd ['offset', '$LN13_0']
db ['8', 'dup(0CCh)']
endp
_tt_face_get_ps_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_104EF']
push ['offset', '$SG15951']
push ['1EBh']
push ['23h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '23h']
jmp ['loc_106B8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+108h]']
cmp ['[ebp+arg_4],', 'ecx']
jb ['short', 'loc_1051A']
push ['offset', '$SG15954']
push ['1EEh']
push ['10h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '10h']
jmp ['loc_106B8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+218h]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_10548']
push ['offset', '$SG15957']
push ['1F3h']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
jmp ['loc_106B8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '264h']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1D4h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '10000h']
jnz ['short', 'loc_105AF']
cmp ['[ebp+arg_4],', '102h']
jnb ['short', 'loc_105AA']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
jmp ['$End$20']
cmp ['[ebp+var_C],', '20000h']
jnz ['loc_10648']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_105E9']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_load_post_names']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_105E9']
jmp ['$End$20']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['[ebp+arg_4],', 'ecx']
jnb ['short', 'loc_10646']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[eax+ecx*2]']
mov ['word', 'ptr', '[ebp+var_18],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_18]']
cmp ['eax,', '102h']
jge ['short', 'loc_10630']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_18]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_10646']
movzx ['edx,', 'word', 'ptr', '[ebp+var_18]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ecx+edx*4-408h]']
mov ['[eax],', 'ecx']
jmp ['short', '$End$20']
cmp ['[ebp+var_C],', '28000h']
jnz ['short', '$End$20']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1067B']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_load_post_names']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1067B']
jmp ['short', '$End$20']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['[ebp+arg_4],', 'ecx']
jnb ['short', '$End$20']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[eax+ecx]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_face_free_ps_names proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '264h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_10812']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1D4h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '20000h']
jnz ['loc_107D7']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+4],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_1072E']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[edx],', 'cx']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_14],', 'ax']
jmp ['short', 'loc_1076B']
mov ['cx,', 'word', 'ptr', '[ebp+var_14]']
add ['cx,', '1']
mov ['word', 'ptr', '[ebp+var_14],', 'cx']
movzx ['edx,', 'word', 'ptr', '[ebp+var_14]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['edx,', 'ecx']
jge ['short', 'loc_107AB']
movzx ['edx,', 'word', 'ptr', '[ebp+var_14]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+edx*4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
mov ['dword', 'ptr', '[eax+ecx*4],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1077A']
jmp ['short', 'loc_1075F']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_107AB']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+2],', 'cx']
jmp ['short', 'loc_10812']
cmp ['[ebp+var_C],', '28000h']
jnz ['short', 'loc_10812']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_107E9']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx],', '0']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_get_sfnt_table	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '6']
ja ['loc_1091C']
mov ['ecx,', '[ebp+var_8]']
jmp ['ds:$LN19_1[ecx*4]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0A0h']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_10923']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0D8h']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_10923']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+124h]']
test ['edx,', 'edx']
jz ['short', 'loc_1089C']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '128h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_108A3']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_10923']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+16Ch]']
cmp ['eax,', '0FFFFh']
jnz ['short', 'loc_108C5']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_108D1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '16Ch']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_10923']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1D4h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_10923']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '104h']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_10923']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+224h],', '0']
jz ['short', 'loc_1090D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '224h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_10914']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_10923']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN3_0']
dd ['offset', '$LN5_1']
dd ['offset', '$LN7_1']
dd ['offset', '$LN6_1']
dd ['offset', '$LN4']
dd ['offset', '$LN2_0']
db ['4', 'dup(0CCh)']
endp
_sfnt_table_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1095B']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_10974']
push ['offset', '$SG14561']
push ['7Ah']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_10A01']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1098B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+98h]']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_109FF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+98h]']
cmp ['[ebp+arg_4],', 'ecx']
jb ['short', 'loc_109B8']
push ['offset', '$SG14565']
push ['81h']
push ['8Eh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8Eh']
jmp ['short', 'loc_10A01']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ecx+edx]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ecx+edx+8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ecx+edx+0Ch]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_sfnt_get_glyph_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_face_get_ps_name']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_10A54']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ft_mem_strcpyn']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_2']
dd ['offset', '$LN4_0']
db ['0Ah', 'dup(0CCh)']
endp
_sfnt_get_name_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+Str2],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jge ['short', 'loc_10ADB']
xor ['eax,', 'eax']
jmp ['loc_10B70']
jmp ['short', 'loc_10B1A']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+10h],', '0FFFFFFFFh']
jnb ['short', 'loc_10AEF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_10B1A']
mov ['edx,', '4']
imul ['eax,', 'edx,', '12h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_10B16']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
push ['0FFFFFFFFh']
push ['offset', '$SG14605']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_10AEF']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10B2C']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_10B6E']
lea ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_face_get_ps_name']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_10B53']
jmp ['short', 'loc_10B23']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_10B6C']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_10B70']
jmp ['short', 'loc_10B23']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN17_0']
dd ['offset', '$LN16_0']
align ['4']
endp
_sfnt_get_ps_name proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+298h],', '0']
jz ['short', 'loc_10BE3']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+298h]']
jmp ['loc_10F39']
mov ['[ebp+var_8],', '0FFFFFFFFh']
mov ['[ebp+var_C],', '0FFFFFFFFh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_10C03']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+154h]']
cmp ['[ebp+var_4],', 'ecx']
jge ['short', 'loc_10C91']
imul ['edx,', '[ebp+var_4],', '14h']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+164h]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+6]']
cmp ['edx,', '6']
jnz ['short', 'loc_10C8C']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jle ['short', 'loc_10C8C']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '3']
jnz ['short', 'loc_10C65']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
cmp ['edx,', '1']
jnz ['short', 'loc_10C65']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
cmp ['ecx,', '409h']
jnz ['short', 'loc_10C65']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_10C8C']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
test ['eax,', 'eax']
jnz ['short', 'loc_10C8C']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jnz ['short', 'loc_10C8C']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_10BFA']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jz ['loc_10E2D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_18],', 'edx']
imul ['eax,', '[ebp+var_8],', '14h']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+164h]']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_28],', '0']
jnz ['loc_10E28']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+168h]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_10D43']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_10D97']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_10],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10D43']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[eax+8],', 'dx']
mov ['ecx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[edx+10h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_10D71']
jmp ['$Exit$38']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_10DB4']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '2']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_20],', '0']
jbe ['short', 'loc_10E16']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_10E14']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jl ['short', 'loc_10E14']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '80h']
jge ['short', 'loc_10E14']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_38]']
mov ['al,', '[edx+eax]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_10DA2']
mov ['edx,', '[ebp+var_34]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
jmp ['$Exit$38']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
jz ['$Exit$38']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_3C],', 'edx']
imul ['eax,', '[ebp+var_C],', '14h']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+164h]']
mov ['[ebp+var_40],', 'eax']
mov ['edx,', '[ebp+var_40]']
movzx ['eax,', 'word', 'ptr', '[edx+8]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_4C],', '0']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+var_4C],', 'ecx']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_4C],', '0']
jnz ['$Exit$38']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+168h]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '0']
jnz ['short', 'loc_10ED0']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_10F21']
mov ['ecx,', '[ebp+var_40]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_40]']
mov ['[eax+8],', 'dx']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_40]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_10EE3']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_10],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_10F04']
jmp ['short', '$Exit$38']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_44]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+298h],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN37_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN36_0']
dd ['offset', '$LN34']
dd ['0FFFFFFB4h,', '4']
dd ['offset', '$LN35_0']
db ['4', 'dup(0CCh)']
endp
_sfnt_get_charset_id proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['offset', '$SG14699']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_find_bdf_prop']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_11026']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['offset', '$SG14701']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_face_find_bdf_prop']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_11026']
cmp ['[ebp+var_1C],', '1']
jnz ['short', 'loc_1100C']
cmp ['[ebp+var_C],', '1']
jnz ['short', 'loc_1100C']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_11026']
push ['offset', '$SG14705']
push ['176h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN9']
dd ['offset', '$LN7_2']
dd ['0FFFFFFE4h,', '8']
dd ['offset', '$LN8_1']
align ['4']
endp
_sfnt_get_interface proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_sfnt_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_tt_sbit_decoder_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['43424454h']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+1FCh]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1112F']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['45424454h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_11160']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['62646174h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1FCh]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1116B']
jmp ['$Exit$12']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+54h]']
add ['ecx,', '4Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+10h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+11h],', '0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+2D4h]']
mov ['[edx+24h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+2D4h]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+2D8h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'eax']
imul ['eax,', '[ebp+arg_8],', '30h']
add ['eax,', '37h']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+2D8h]']
jbe ['short', 'loc_11215']
push ['offset', '$SG15012']
push ['181h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$12']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
imul ['ecx,', '[ebp+arg_8],', '30h']
lea ['edx,', '[eax+ecx+8]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '22h']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['cl,', '[eax]']
mov ['[edx+12h],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+1Ch]']
cmp ['ecx,', '[eax+2D8h]']
ja ['short', 'loc_11328']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+2D8h]']
sub ['ecx,', '[eax+1Ch]']
shr ['ecx,', '3']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+20h],', 'ecx']
jbe ['short', '$Exit$12']
push ['offset', '$SG15035']
push ['192h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN10_2']
dd ['offset', '$LN9_0']
db ['6', 'dup(0CCh)']
endp
_tt_sbit_decoder_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_sbit_decoder_alloc_bitmap proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
test ['eax,', 'eax']
jnz ['short', 'loc_113F3']
push ['offset', '$SG15050']
push ['1ACh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$16']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+12h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '1Fh']
ja ['$LN3_1']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'ds:$LN14_1[edx]']
jmp ['ds:$LN15_2[eax*4]']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+12h],', '1']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '7']
shr ['eax,', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '2']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+10h],', 'dx']
jmp ['loc_11526']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+12h],', '3']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '3']
shr ['eax,', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '4']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+10h],', 'dx']
jmp ['loc_11526']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+12h],', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
shr ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '10h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+10h],', 'dx']
jmp ['short', 'loc_11526']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+12h],', '2']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
mov ['edx,', '100h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+10h],', 'dx']
jmp ['short', 'loc_11526']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx+12h],', '7']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '100h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+10h],', 'dx']
jmp ['short', 'loc_11526']
push ['offset', '$SG15064']
push ['1D7h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$16']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx]']
imul ['eax,', '[edx+8]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1153D']
jmp ['short', '$Exit$16']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
call ['_ft_glyphslot_alloc_bitmap']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1155D']
jmp ['short', '$Exit$16']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+11h],', '1']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7_3']
dd ['offset', '$LN6_3']
dd ['offset', '$LN5_3']
dd ['offset', '$LN4_1']
dd ['offset', '$LN3_1']
db ['5,', '5,', '5,', '3']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '5,', '4']
db ['0Ch', 'dup(0CCh)']
endp
_tt_sbit_decoder_load_metrics proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '5']
cmp ['ecx,', '[ebp+arg_8]']
jbe ['short', 'loc_115F1']
jmp ['$Fail$11']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movzx ['dx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'dx']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
movzx ['ax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'ax']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
movsx ['cx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_4]']
movsx ['ax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+6],', 'ax']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_4]']
movzx ['cx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'cx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '5']
mov ['[ebp+var_4],', 'eax']
movzx ['ecx,', '[ebp+arg_C]']
test ['ecx,', 'ecx']
jz ['short', 'loc_116CF']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '3']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_11680']
jmp ['short', '$Fail$11']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movsx ['ax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ah],', 'ax']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
movsx ['cx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'cx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
movzx ['dx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Eh],', 'dx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '3']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_116EA']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Ah],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Eh],', 'ax']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+10h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_11736']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_1171B']
push ['offset', '$SG15092']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', '$Fail$11']
push ['offset', '$SG15093']
push ['219h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_tt_sbit_decoder_load_image proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_1179C']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jbe ['loc_1182E']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_18]']
jb ['short', 'loc_11820']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_1C]']
ja ['short', 'loc_11820']
jmp ['short', '$FoundRange$53']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_11793']
jmp ['$NoBitmap$54']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_30],', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+1Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ebp+var_8]']
cmp ['[ebp+var_30],', 'edx']
jbe ['short', 'loc_118AC']
jmp ['$Failure$55']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_30]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
cmp ['ecx,', '[ebp+var_10]']
jbe ['short', 'loc_118C5']
jmp ['$NoBitmap$54']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_30],', 'edx']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
sub ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '12h']
ja ['$LN10_3']
mov ['ecx,', '[ebp+var_54]']
movzx ['edx,', 'ds:$LN48_0[ecx]']
jmp ['ds:$LN52[edx*4]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
cmp ['eax,', '[ebp+var_10]']
jbe ['short', 'loc_119D0']
jmp ['$NoBitmap$54']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_28],', 'edx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_11A91']
jmp ['$NoBitmap$54']
jmp ['loc_11EB6']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
cmp ['ecx,', '[ebp+var_10]']
jbe ['short', 'loc_11AA6']
jmp ['$NoBitmap$54']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_34],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_tt_sbit_decoder_load_metrics']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_11B1F']
jmp ['$NoBitmap$54']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_18]']
imul ['eax,', '[ebp+var_34]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['loc_11EB6']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
cmp ['edx,', '[ebp+var_10]']
jbe ['short', 'loc_11B59']
jmp ['$NoBitmap$54']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_2C]']
jnz ['short', 'loc_11BCE']
jmp ['$NoBitmap$54']
jmp ['loc_11EB6']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
cmp ['eax,', '[ebp+var_10]']
jbe ['short', 'loc_11BE3']
jmp ['$NoBitmap$54']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_3C],', 'edx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
cmp ['edx,', '[ebp+var_10]']
ja ['short', 'loc_11C59']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_8]']
sar ['eax,', '2']
sub ['eax,', '1']
cmp ['[ebp+var_3C],', 'eax']
jbe ['short', 'loc_11C5E']
jmp ['$NoBitmap$54']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_11C70']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_3C]']
jnb ['loc_11D2E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_11D20']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_11D2E']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_11C67']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_3C]']
jb ['short', 'loc_11D3B']
jmp ['$NoBitmap$54']
jmp ['loc_11EB6']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
cmp ['eax,', '[ebp+var_10]']
jbe ['short', 'loc_11D50']
jmp ['$NoBitmap$54']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['edx,', '18h']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-4]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx-4]']
or ['edx,', 'ecx']
mov ['[ebp+var_44],', 'edx']
push ['1']
mov ['edx,', '[ebp+var_10]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_sbit_decoder_load_metrics']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_11DC9']
jmp ['$NoBitmap$54']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-4]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx-4]']
or ['eax,', 'edx']
mov ['[ebp+var_4C],', 'eax']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_8]']
sar ['eax,', '1']
cmp ['[ebp+var_4C],', 'eax']
jbe ['short', 'loc_11E35']
jmp ['$NoBitmap$54']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_11E47']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
cmp ['edx,', '[ebp+var_4C]']
jnb ['short', 'loc_11E8F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-2]']
shl ['ecx,', '8']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-2]']
or ['ecx,', 'edx']
movzx ['eax,', 'cx']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_11E8D']
jmp ['short', 'loc_11E8F']
jmp ['short', 'loc_11E3E']
mov ['edx,', '[ebp+var_48]']
cmp ['edx,', '[ebp+var_4C]']
jb ['short', 'loc_11E9C']
jmp ['$NoBitmap$54']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '[ebp+var_48]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_11EB6']
jmp ['$NoBitmap$54']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_2C]']
jbe ['short', 'loc_11EC0']
jmp ['short', '$NoBitmap$54']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_11EF8']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
push ['offset', '$SG15597']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_11ED2']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_sbit_decoder_load_bitmap']
add ['esp,', '18h']
jmp ['short', 'loc_11F74']
push ['offset', '$SG15598']
push ['4E8h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['short', 'loc_11F74']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_11F59']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG15603']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', '$NoBitmap$54']
push ['offset', '$SG15604']
push ['4EEh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN50_0']
dd ['offset', '$LN49_0']
dd ['offset', '$LN34_0']
dd ['offset', '$LN31_1']
dd ['offset', '$LN28_0']
dd ['offset', '$LN19_2']
dd ['offset', '$LN10_3']
db ['4,', '5,', '5,', '5']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '5,', '5']
db ['5,', '5,', '4']
db ['5', 'dup(0CCh)']
endp
_tt_sbit_decoder_load_byte_aligned proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+12h]']
imul ['edx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_1206F']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_10]']
jg ['short', 'loc_1206F']
cmp ['[ebp+arg_10],', '0']
jl ['short', 'loc_1206F']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_C]']
jle ['short', 'loc_120B0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_1208D']
push ['offset', '$SG15142']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1206F']
push ['offset', '$SG15143']
push ['249h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$36']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '7']
sar ['edx,', '3']
imul ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_12106']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_120E3']
push ['offset', '$SG15150']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_120C5']
push ['offset', '$SG15151']
push ['250h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$36']
mov ['eax,', '[ebp+arg_10]']
imul ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
sar ['ecx,', '3']
add ['ecx,', '[ebp+var_8]']
add ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '7']
mov ['[ebp+arg_C],', 'edx']
jnz ['loc_121EE']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_12144']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_24],', '0']
jle ['loc_121E9']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_12165']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '8']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '8']
jl ['short', 'loc_121A4']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+edx],', 'al']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_1215C']
cmp ['[ebp+var_30],', '0']
jle ['short', 'loc_121E4']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
mov ['eax,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
mov ['esi,', '0FF00h']
mov ['ecx,', '[ebp+var_30]']
shr ['esi,', 'cl']
and ['eax,', 'esi']
or ['edx,', 'eax']
mov ['ecx,', '1']
imul ['eax,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+eax],', 'dl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jmp ['loc_12132']
jmp ['$Exit$36']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_12208']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_24],', '0']
jle ['$Exit$36']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_3C],', '0']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_12230']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '8']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '8']
jl ['short', 'loc_12286']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
or ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['edx,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_C]']
shr ['edx,', 'cl']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+edx],', 'al']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_3C]']
shl ['eax,', '8']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_12227']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_122AD']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '0FF00h']
mov ['ecx,', '[ebp+var_38]']
shr ['eax,', 'cl']
and ['edx,', 'eax']
or ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_3C],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_C]']
shr ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '1']
imul ['eax,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+eax],', 'dl']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '[ebp+var_38]']
cmp ['edx,', '8']
jle ['short', 'loc_12318']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
shl ['ecx,', '8']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_C]']
shr ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '1']
imul ['eax,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+eax],', 'dl']
jmp ['loc_121F6']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_12345']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_12341']
push ['offset', '$SG15186']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_12323']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_tt_sbit_decoder_load_bit_aligned proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+12h]']
imul ['edx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_123EE']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_10]']
jg ['short', 'loc_123EE']
cmp ['[ebp+arg_10],', '0']
jl ['short', 'loc_123EE']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_C]']
jle ['short', 'loc_1242F']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_1240C']
push ['offset', '$SG15217']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_123EE']
push ['offset', '$SG15218']
push ['2D4h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$37']
mov ['edx,', '[ebp+var_20]']
imul ['edx,', '[ebp+var_1C]']
add ['edx,', '7']
sar ['edx,', '3']
add ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_8]']
jbe ['short', 'loc_12485']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_12462']
push ['offset', '$SG15225']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_12444']
push ['offset', '$SG15226']
push ['2DBh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$37']
mov ['eax,', '[ebp+arg_10]']
imul ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
sar ['ecx,', '3']
add ['ecx,', '[ebp+var_8]']
add ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '7']
mov ['[ebp+arg_C],', 'edx']
xor ['eax,', 'eax']
mov ['[ebp+var_30],', 'ax']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_124CA']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_24],', '0']
jle ['$Exit$37']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['loc_125D6']
mov ['eax,', '8']
sub ['eax,', '[ebp+arg_C]']
cmp ['[ebp+var_20],', 'eax']
jge ['short', 'loc_124FF']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_1250A']
mov ['edx,', '8']
sub ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_1C]']
jnz ['short', 'loc_12534']
mov ['edx,', '[ebp+arg_4]']
movzx ['ax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_30],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_12582']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_1256D']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_1255D']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+var_30]']
or ['ecx,', 'eax']
mov ['[ebp+var_30],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '8']
sub ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_12582']
mov ['cx,', '[ebp+var_30]']
shr ['cx,', '8']
mov ['[ebp+var_30],', 'cx']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '[ebp+var_38]']
mov ['[ebp+var_28],', 'edx']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
sar ['eax,', 'cl']
and ['eax,', '0FFh']
mov ['edx,', '0FFh']
mov ['ecx,', '[ebp+var_38]']
shl ['edx,', 'cl']
not ['edx']
mov ['ecx,', '8']
sub ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[ebp+arg_C]']
shl ['edx,', 'cl']
and ['eax,', 'edx']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['edx,', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
mov ['dx,', '[ebp+var_30]']
shl ['dx,', '8']
mov ['[ebp+var_30],', 'dx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_125E1']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '8']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '8']
jl ['short', 'loc_12632']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+var_30]']
or ['ecx,', 'eax']
mov ['[ebp+var_30],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
sar ['eax,', 'cl']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['edx,', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
mov ['dx,', '[ebp+var_30]']
shl ['dx,', '8']
mov ['[ebp+var_30],', 'dx']
jmp ['short', 'loc_125D8']
cmp ['[ebp+var_38],', '0']
jle ['loc_126D8']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_126A8']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['short', 'loc_12665']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+var_30]']
or ['ecx,', 'eax']
mov ['[ebp+var_30],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
sar ['eax,', 'cl']
and ['eax,', '0FFh']
mov ['edx,', '0FF00h']
mov ['ecx,', '[ebp+var_38]']
shr ['edx,', 'cl']
and ['eax,', 'edx']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['edx,', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[eax],', 'dl']
mov ['ecx,', '8']
sub ['ecx,', '[ebp+var_38]']
add ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_28],', 'ecx']
mov ['dx,', '[ebp+var_30]']
shl ['dx,', '8']
mov ['[ebp+var_30],', 'dx']
jmp ['short', 'loc_126D8']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_28]']
sar ['eax,', 'cl']
and ['eax,', '0FFh']
mov ['edx,', '0FF00h']
mov ['ecx,', '[ebp+var_38]']
shr ['edx,', 'cl']
and ['eax,', 'edx']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['edx,', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_28],', 'ecx']
jmp ['loc_124B8']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_12705']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_12701']
push ['offset', '$SG15250']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_126E3']
mov ['eax,', '[ebp+var_4]']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_tt_sbit_decoder_load_compound proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx+4]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx+6]']
mov ['byte', 'ptr', '[ebp+var_10+2],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx+8]']
mov ['byte', 'ptr', '[ebp+var_10+1],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx+0Ah]']
mov ['byte', 'ptr', '[ebp+var_10],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx+0Ch]']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['dl,', '[ecx+0Eh]']
mov ['byte', 'ptr', '[ebp+var_14+2],', 'dl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '2']
cmp ['eax,', '[ebp+arg_8]']
jbe ['short', 'loc_1279B']
jmp ['$Fail$21_0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*4]']
cmp ['ecx,', '[ebp+arg_8]']
jbe ['short', 'loc_12804']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_127FB']
push ['offset', '$SG15291']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_127DD']
jmp ['$Fail$21_0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '3']
jl ['short', 'loc_12826']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['offset', '$SG15296']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_12804']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1283C']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['loc_128CE']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_1C+3],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_1C+2],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_1C+2]']
add ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_1C+3]']
add ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_sbit_decoder_load_image']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_128C9']
jmp ['short', 'loc_128CE']
jmp ['loc_12833']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '19h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '3']
jl ['short', 'loc_128EC']
push ['offset', '$SG15316']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_128CE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movsx ['ax,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['[edx+4],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movsx ['ax,', 'byte', 'ptr', '[ebp+var_10+2]']
mov ['[edx+6],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['ax,', 'byte', 'ptr', '[ebp+var_10+1]']
mov ['[edx+8],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movsx ['ax,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[edx+0Ah],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movsx ['ax,', 'byte', 'ptr', '[ebp+var_14+3]']
mov ['[edx+0Ch],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
movzx ['ax,', 'byte', 'ptr', '[ebp+var_14+2]']
mov ['[edx+0Eh],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movzx ['dx,', 'byte', 'ptr', '[edx+4]']
mov ['[ecx+2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
movzx ['cx,', 'byte', 'ptr', '[ecx]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_12993']
push ['offset', '$SG15320']
push ['36Ch']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$22_1']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_tt_sbit_decoder_load_bitmap proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+18h]']
jbe ['short', 'loc_129F9']
push ['offset', '$SG15341']
push ['3B2h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$34']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_12A35']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_12A3A']
jmp ['$Exit$34']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
sub ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '11h']
ja ['short', '$LN16_1']
mov ['edx,', '[ebp+var_3C]']
movzx ['eax,', 'ds:$LN26[edx]']
jmp ['ds:$LN32_0[eax*4]']
push ['0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_sbit_decoder_load_metrics']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_12AAC']
push ['1']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_tt_sbit_decoder_load_metrics']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_12AAC']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_12AB7']
jmp ['$Fail$35']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
sub ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_40],', '12h']
ja ['$LN3_2']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'ds:$LN27_1[eax]']
jmp ['ds:$LN33[ecx*4]']
mov ['[ebp+var_28],', 'offset', '_tt_sbit_decoder_load_byte_aligned']
jmp ['loc_12BAE']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
imul ['edx,', '[ebp+var_30]']
add ['edx,', '7']
shr ['edx,', '3']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '7']
shr ['eax,', '3']
imul ['eax,', '[ebp+var_30]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_38]']
jnb ['short', 'loc_12B42']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '[ebp+var_10]']
cmp ['[ebp+var_38],', 'edx']
jnz ['short', 'loc_12B42']
mov ['[ebp+var_28],', 'offset', '_tt_sbit_decoder_load_byte_aligned']
jmp ['short', 'loc_12B49']
mov ['[ebp+var_28],', 'offset', '_tt_sbit_decoder_load_bit_aligned']
jmp ['short', 'loc_12BAE']
mov ['[ebp+var_28],', 'offset', '_tt_sbit_decoder_load_bit_aligned']
jmp ['short', 'loc_12BAE']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_18]']
jbe ['short', 'loc_12B64']
jmp ['$Fail$35']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_28],', 'offset', '_tt_sbit_decoder_load_compound']
jmp ['short', 'loc_12BAE']
push ['offset', '$SG15376']
push ['414h']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$35']
push ['offset', '$SG15378']
push ['419h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$35']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+11h]']
test ['eax,', 'eax']
jnz ['short', 'loc_12BD0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_sbit_decoder_alloc_bitmap']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_12BD0']
jmp ['short', '$Fail$35']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['[ebp+var_28]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN30_0']
dd ['offset', '$LN28_1']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN29_0']
align ['4']
dd ['offset', '$LN17_1']
dd ['offset', '$LN16_1']
db ['2,', '1,', '1,', '0']
db ['1,', '2,', '2,', '2']
db ['2,', '2,', '2,', '2']
db ['0,', '1']
align ['4']
dd ['offset', '$LN11_2']
dd ['offset', '$LN8_3']
dd ['offset', '$LN7_4']
dd ['offset', '$LN5_4']
dd ['offset', '$LN4_2']
dd ['offset', '$LN3_2']
db ['2,', '0,', '1,', '3']
db ['4,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6']
db ['5,', '5,', '5']
db ['9', 'dup(0CCh)']
endp
_tt_face_load_sbix_image proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'eax']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx+2],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2D4h]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4+8]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['73626978h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1FCh]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_12D87']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_13094']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+10h]']
jbe ['short', 'loc_12DBD']
push ['offset', '$SG15649']
push ['513h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_13094']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_12DD9']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', 'ds:0Ch[edx*4]']
cmp ['ecx,', 'eax']
jnb ['short', 'loc_12DF5']
push ['offset', '$SG15652']
push ['517h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_13094']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[ecx+edx*4+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_12E2F']
push ['8']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_12E37']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_13094']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_12E85']
push ['offset', '$SG15660']
push ['523h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_13094']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_10]']
ja ['short', 'loc_12EA3']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ebp+var_C]']
cmp ['edx,', '8']
jb ['short', 'loc_12EA3']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_12EBF']
push ['offset', '$SG15663']
push ['527h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_13094']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_12EFA']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_12F02']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_13094']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
cwde
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
movsx ['edx,', 'ax']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '706E6720h']
ja ['short', 'loc_12F6A']
cmp ['[ebp+var_50],', '706E6720h']
jz ['loc_12FCF']
cmp ['[ebp+var_50],', '64757065h']
jz ['short', 'loc_12F81']
cmp ['[ebp+var_50],', '6A706720h']
jz ['loc_12FEB']
jmp ['loc_13007']
cmp ['[ebp+var_50],', '7267626Ch']
jz ['short', 'loc_12FEB']
cmp ['[ebp+var_50],', '74696666h']
jz ['short', 'loc_12FEB']
jmp ['loc_13007']
cmp ['[ebp+var_2C],', '4']
jge ['short', 'loc_12FB3']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
movzx ['eax,', 'ax']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
jmp ['$retry$28']
push ['offset', '$SG15683']
push ['53Ch']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_13021']
push ['offset', '$SG15690']
push ['54Bh']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_13021']
push ['offset', '$SG15707']
push ['552h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_13021']
push ['offset', '$SG15709']
push ['556h']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_13091']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_get_metrics']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_14]']
mov ['ax,', 'word', 'ptr', '[ebp+var_20]']
mov ['[edx+4],', 'ax']
mov ['ecx,', '[ebp+var_24]']
neg ['ecx']
mov ['edx,', '[ebp+arg_14]']
movzx ['eax,', 'word', 'ptr', '[edx]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx+6],', 'cx']
movzx ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
movzx ['ecx,', 'word', 'ptr', '[edx+0Ch]']
imul ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[edx+0B2h]']
cdq
idiv ['ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx+8],', 'ax']
mov ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN26_0']
dd ['offset', '$LN23_0']
dd ['0FFFFFFC4h,', '2']
dd ['offset', '$LN24_1']
dd ['0FFFFFFB8h,', '2']
dd ['offset', '$LN25']
db ['0Bh', 'dup(0CCh)']
endp
_load_format_20	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_20],', '0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
movzx ['ecx,', 'ax']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1315A']
jmp ['$Exit$53']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+108h]']
cmp ['[ebp+var_14],', 'eax']
jle ['short', 'loc_13188']
push ['offset', '$SG15767']
push ['0B5h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$53']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_14]']
push ['edx']
push ['0']
push ['2']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_131C6']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_131CB']
jmp ['$Fail$54']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_131DD']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_131FD']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_131D4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
xor ['ecx,', 'ecx']
mov ['[ebp+var_18],', 'cx']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_13221']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_1325E']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '102h']
jl ['short', 'loc_1325C']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '101h']
mov ['[ebp+var_2C],', 'ecx']
movzx ['edx,', '[ebp+var_18]']
cmp ['[ebp+var_2C],', 'edx']
jle ['short', 'loc_1325C']
mov ['ax,', 'word', 'ptr', '[ebp+var_2C]']
mov ['[ebp+var_18],', 'ax']
jmp ['short', 'loc_13218']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
movzx ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_13287']
jmp ['$Fail$54']
xor ['ecx,', 'ecx']
mov ['[ebp+var_30],', 'cx']
jmp ['short', 'loc_1329B']
mov ['dx,', '[ebp+var_30]']
add ['dx,', '1']
mov ['[ebp+var_30],', 'dx']
movzx ['eax,', '[ebp+var_30]']
movzx ['ecx,', '[ebp+var_18]']
cmp ['eax,', 'ecx']
jge ['loc_133FB']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_132C3']
jmp ['loc_133FB']
jmp ['short', 'loc_13318']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '18h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '6']
jl ['short', 'loc_132F3']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
push ['ecx']
push ['offset', '$SG15801']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_132C3']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ReadChar']
add ['esp,', '8']
movzx ['edx,', 'al']
mov ['[ebp+var_34],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_13318']
jmp ['$Fail1$55']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+arg_8]']
jg ['short', 'loc_13336']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_34]']
cmp ['eax,', 'edx']
jle ['short', 'loc_1338F']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
push ['offset', '$SG15809']
call ['_FT_Message']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
jns ['short', 'loc_13375']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_13389']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_34],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
push ['ecx']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
movzx ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+ecx*4],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_133E0']
mov ['eax,', '[ebp+var_34]']
push ['eax']
movzx ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_133E5']
jmp ['$Fail1$55']
movzx ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ebp+var_34]']
mov ['byte', 'ptr', '[ecx+edx],', '0']
jmp ['loc_1328F']
movzx ['eax,', '[ebp+var_30]']
movzx ['ecx,', '[ebp+var_18]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_1347F']
movzx ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
push ['edx']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
push ['offset', '$SG15817']
call ['_FT_Message']
add ['esp,', '0Ch']
jmp ['short', 'loc_1342F']
mov ['cx,', '[ebp+var_30]']
add ['cx,', '1']
mov ['[ebp+var_30],', 'cx']
movzx ['edx,', '[ebp+var_30]']
movzx ['eax,', '[ebp+var_18]']
cmp ['edx,', 'eax']
jge ['short', 'loc_1347F']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
push ['1']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
movzx ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+ecx*4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_13467']
jmp ['short', '$Fail1$55']
jmp ['short', 'loc_1347D']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[ecx+eax*4]']
mov ['byte', 'ptr', '[edx+eax],', '0']
jmp ['short', 'loc_13423']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '268h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['ax,', 'word', 'ptr', '[ebp+var_14]']
mov ['[edx],', 'ax']
mov ['ecx,', '[ebp+var_38]']
mov ['dx,', '[ebp+var_18]']
mov ['[ecx+2],', 'dx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+8],', 'eax']
xor ['eax,', 'eax']
jmp ['loc_1353D']
xor ['ecx,', 'ecx']
mov ['[ebp+var_3C],', 'cx']
jmp ['short', 'loc_134CD']
mov ['dx,', '[ebp+var_3C]']
add ['dx,', '1']
mov ['[ebp+var_3C],', 'dx']
movzx ['eax,', '[ebp+var_3C]']
movzx ['ecx,', '[ebp+var_18]']
cmp ['eax,', 'ecx']
jge ['short', '$Fail$54']
movzx ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_20]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_134D9']
jmp ['short', 'loc_134C1']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_20],', '0']
xor ['edx,', 'edx']
jnz ['short', '$Fail$54']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_1C],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_1351F']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN52_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN51_0']
dd ['offset', '$LN50_1']
align ['4']
endp
_load_format_25	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
movzx ['edx,', 'ax']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_135D9']
jmp ['$Exit$19_0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+108h]']
cmp ['[ebp+var_14],', 'ecx']
jg ['short', 'loc_135F1']
cmp ['[ebp+var_14],', '102h']
jle ['short', 'loc_13610']
push ['offset', '$SG15861']
push ['148h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$19_0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_13650']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_13652']
jmp ['short', '$Fail$20_0']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_13664']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_136A3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
add ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
js ['short', 'loc_13685']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_136A1']
push ['offset', '$SG15877']
push ['15Ch']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['short', '$Fail$20_0']
jmp ['short', 'loc_1365B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '268h']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['ax,', 'word', 'ptr', '[ebp+var_14]']
mov ['[edx],', 'ax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+4],', 'edx']
xor ['eax,', 'eax']
jmp ['short', 'loc_136E4']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_18],', '0']
xor ['edx,', 'edx']
jnz ['short', '$Fail$20_0']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17_2']
dd ['offset', '$LN16_2']
db ['0Eh', 'dup(0CCh)']
endp
_load_post_names proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['706F7374h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1FCh]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1378C']
jmp ['$Exit$12_0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1D4h]']
mov ['[ebp+var_C],', 'eax']
push ['20h']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_137C3']
jmp ['short', '$Exit$12_0']
cmp ['[ebp+var_C],', '20000h']
jnz ['short', 'loc_137E5']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_load_format_20']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_13821']
cmp ['[ebp+var_C],', '28000h']
jnz ['short', 'loc_13807']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_load_format_25']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_13821']
push ['offset', '$SG15906']
push ['195h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+264h],', '1']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN10_4']
dd ['offset', '$LN9_1']
db ['0Fh', 'dup(0CCh)']
endp
_tt_face_load_bdf_props	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2F8h']
mov ['[ebp+Dst],', 'eax']
push ['18h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['42444620h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_tt_face_goto_table']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_138F2']
cmp ['[ebp+var_C],', '8']
jb ['short', 'loc_138F2']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1390E']
push ['offset', '$SG16014']
push ['4Dh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_14],', 'eax']
jmp ['$Exit$14_0']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '2']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-2]']
shl ['edx,', '8']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[ecx+eax-2]']
or ['edx,', 'eax']
movzx ['ecx,', 'dx']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '2']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx-2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx-2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx-4]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-4]']
or ['ecx,', 'eax']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_1C],', '1']
jnz ['short', 'loc_13A0B']
cmp ['[ebp+var_24],', '8']
jb ['short', 'loc_13A0B']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '8']
shr ['ecx,', '2']
cmp ['ecx,', '[ebp+var_20]']
jb ['short', 'loc_13A0B']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
cmp ['edx,', '[ebp+var_C]']
jbe ['short', 'loc_13A10']
jmp ['$BadTable$15']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
add ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_18]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_13A5E']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '0']
jbe ['short', 'loc_13AA4']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+2]']
shl ['eax,', '8']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx+2]']
or ['eax,', 'ecx']
movzx ['edx,', 'ax']
mov ['[ebp+var_30],', 'edx']
imul ['eax,', '[ebp+var_30],', '0Ah']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_13A55']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[edx+8]']
jbe ['short', 'loc_13AB1']
jmp ['short', '$BadTable$15']
mov ['ecx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[ecx+14h],', '1']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_13AF9']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
push ['18h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['offset', '$SG16058']
push ['86h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_14],', 'eax']
jmp ['short', '$Exit$14_0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_3']
dd ['offset', '$LN11_4']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['__imp__memchr:near']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['__imp__strncmp:near']
extrn ['__imp__qsort:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_mem_strcpyn:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_CMap_New:near']
extrn ['_FT_Get_Module_Interface:near']
extrn ['_ft_module_get_service:near']
extrn ['_FT_Match_Size:near']
extrn ['_ft_glyphslot_alloc_bitmap:near']
extrn ['_ft_glyphslot_set_bitmap:near']
extrn ['_FT_Message:near']
extrn ['_FT_Panic:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Stream_Free:near']
extrn ['_FT_Stream_OpenMemory:near']
extrn ['_FT_Stream_Close:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Skip:near']
extrn ['_FT_Stream_Pos:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_ReadAt:near']
extrn ['_FT_Stream_EnterFrame:near']
extrn ['_FT_Stream_ExitFrame:near']
extrn ['_FT_Stream_ExtractFrame:near']
extrn ['_FT_Stream_ReleaseFrame:near']
extrn ['_FT_Stream_GetUShort:near']
extrn ['_FT_Stream_GetULong:near']
extrn ['_FT_Stream_ReadChar:near']
extrn ['_FT_Stream_ReadUShort:near']
extrn ['_FT_Stream_ReadULong:near']
extrn ['_FT_Stream_ReadFields:near']
extrn ['_ft_validator_init:near']
extrn ['_ft_validator_error:near']
extrn ['_FT_Gzip_Uncompress:near']
extrn ['_FT_Bitmap_New:near']
extrn ['_FT_Bitmap_Convert:near']
extrn ['_FT_Bitmap_Done:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['__setjmp3:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

endp
_FT_Init_FreeType proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
call ['_FT_New_Memory']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_138']
push ['offset', '$SG7023']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG7024']
push ['0F7h']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
jmp ['short', 'loc_170']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_New_Library']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_15F']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_FT_Done_Memory']
add ['esp,', '4']
jmp ['short', 'loc_16D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_Add_Default_Modules']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_FT_Done_FreeType proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1AA']
push ['offset', '$SG7032']
push ['110h']
push ['21h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '21h']
jmp ['short', 'loc_1CC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Done_Library']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Done_Memory']
add ['esp,', '4']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_FT_Add_Default_Modules	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', 'offset', '_ft_default_modules']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_258']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Add_Module']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_24D']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_249']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
push ['eax']
push ['offset', '$SG7016']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_21E']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1FB']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_autofit_module_class:near']
extrn ['_tt_driver_class:near']
extrn ['_t1_driver_class:near']
extrn ['_cff_driver_class:near']
extrn ['_t1cid_driver_class:near']
extrn ['_pfr_driver_class:near']
extrn ['_t42_driver_class:near']
extrn ['_winfnt_driver_class:near']
extrn ['_pcf_driver_class:near']
extrn ['_psaux_module_class:near']
extrn ['_psnames_module_class:near']
extrn ['_pshinter_module_class:near']
extrn ['_ft_raster1_renderer_class:near']
extrn ['_sfnt_module_class:near']
extrn ['_ft_smooth_renderer_class:near']
extrn ['_ft_smooth_lcd_renderer_class:near']
extrn ['_ft_smooth_lcdv_renderer_class:near']
extrn ['_bdf_driver_class:near']
extrn ['_FT_Add_Module:near']
extrn ['_FT_New_Library:near']
extrn ['_FT_Done_Library:near']
extrn ['_FT_New_Memory:near']
extrn ['_FT_Done_Memory:near']
extrn ['_FT_Message:near']
extrn ['_FT_Throw:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
end

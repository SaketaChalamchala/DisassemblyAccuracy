endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAssignedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jz ['short', 'loc_28A']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jz ['short', 'loc_28A']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_291']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C1h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C0h']
or ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSpecialCE32@Collation@icu_56@@SACI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
cmp ['eax,', '0C0h']
setnb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tagFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCE32Tag@Collation@icu_56@@SACIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4C7']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_4C7']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_4CE']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_584']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_584']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_584']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_58B']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSelfContainedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_615']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_615']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_615']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '4']
jz ['short', 'loc_615']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_61C']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isPrefixCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isContractionCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ce32HasContext@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_714']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '8']
jz ['short', 'loc_70B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '9']
jnz ['short', 'loc_714']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_71B']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF000000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000000h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF0000h']
shr ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
or ['eax,', '500h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexFromCE32@Collation@icu_56@@SAHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '0Dh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '1Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?digitFromCE32@Collation@icu_56@@SADI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFh']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0C0h']
jnb ['short', 'loc_925']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
jmp ['short', 'loc_953']
jmp ['short', 'loc_953']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0Fh']
cmp ['eax,', '1']
jnz ['short', 'loc_94E']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
jmp ['short', 'loc_953']
jmp ['short', 'loc_953']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JIIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_8]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '6']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z']
add ['esp,', '4']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Collation@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '12000000h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32@CollationData@icu_56@@QBEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0D800h']
jnb ['short', 'loc_BD5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '5']
mov ['eax,', '[ecx]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_D0],', 'eax']
jmp ['loc_CA9']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_C19']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
jmp ['loc_C9D']
cmp ['[ebp+arg_0],', '10FFFFh']
jbe ['short', 'loc_C2E']
mov ['[ebp+var_D8],', '80h']
jmp ['short', 'loc_C91']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_C4B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_C85']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_DC]']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_D04']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_D3E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDigit@CollationData@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '660h']
jge ['short', 'loc_DB4']
cmp ['[ebp+arg_0],', '39h']
jg ['short', 'loc_D9C']
cmp ['[ebp+arg_0],', '30h']
jl ['short', 'loc_D9C']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_DA6']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_DD4']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
mov ['[ebp+var_D4],', 'edx']
mov ['al,', 'byte', 'ptr', '[ebp+var_D4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E5E']
movsx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_E55']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDigit@CollationData@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E5E']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_E65']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ecx+edx]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readCE32@CollationData@icu_56@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
or ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[edx+eax*8]']
mov ['dword', 'ptr', '[ebp+var_18],', 'ecx']
mov ['edx,', '[edx+eax*8+4]']
mov ['dword', 'ptr', '[ebp+var_18+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_18+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z']
add ['esp,', '0Ch']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16@CollationData@icu_56@@QBEGH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+18h]']
call ['dword', 'ptr', 'ds:__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasLccc@CollationFCD@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '300h']
jl ['short', 'loc_1067']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', 'ds:?lcccIndex@CollationFCD@icu_56@@0QBEB[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1067']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_8]']
and ['edx,', 'dword', 'ptr', 'ds:?lcccBits@CollationFCD@icu_56@@0QBIB[eax*4]']
jz ['short', 'loc_1067']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_106E']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasTccc@CollationFCD@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jl ['short', 'loc_10DB']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', 'ds:?tcccIndex@CollationFCD@icu_56@@0QBEB[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_10DB']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_8]']
and ['edx,', 'dword', 'ptr', 'ds:?tcccBits@CollationFCD@icu_56@@0QBIB[eax*4]']
jz ['short', 'loc_10DB']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_10E2']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?mayHaveLccc@CollationFCD@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '300h']
jge ['short', 'loc_111B']
xor ['al,', 'al']
jmp ['short', 'loc_117A']
cmp ['[ebp+arg_0],', '0FFFFh']
jle ['short', 'loc_1135']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
movzx ['ecx,', 'ax']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', 'ds:?lcccIndex@CollationFCD@icu_56@@0QBEB[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_116D']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_8]']
and ['edx,', 'dword', 'ptr', 'ds:?lcccBits@CollationFCD@icu_56@@0QBIB[eax*4]']
jz ['short', 'loc_116D']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_1174']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1FFF01h']
cmp ['eax,', '0F01h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '8182h']
jz ['short', 'loc_11FA']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '8184h']
jz ['short', 'loc_11FA']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_1201']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationFCD@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['??0CEBuffer@CollationIterator@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+170h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+174h],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationIterator@icu_56@@6B@']
public ['??_7CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0']
dd ['offset', '__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVCollationIterator@icu_56@@@8']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollationIterator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationIterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jge ['short', 'loc_161B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['loc_186C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1640']
mov ['eax,', '1000100h']
mov ['edx,', '1']
jmp ['loc_186C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_16F3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_186C']
cmp ['[ebp+var_2C],', '0C0h']
jnz ['loc_17F4']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_1748']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
push ['1']
push ['1000100h']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_186C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_17F2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_186C']
jmp ['short', 'loc_17FD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_2C],', '0C1h']
jnz ['short', 'loc_1854']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_186C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '28h']
jl ['short', 'loc_18EC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_18FF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_1901']
jmp ['short', 'loc_1901']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEsLength@CollationIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEs@CollationIterator@icu_56@@QAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+168h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_1BA0']
mov ['ecx,', '[ebp+var_8]']
call ['?clearCEs@CollationIterator@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1BFD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1C86']
push ['offset', '??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['178h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1C7E']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1CAF']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1CAC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+178h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+180h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UTF16CollationIterator@icu_56@@6B@']
public ['??_7UTF16CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8UTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z']
dd ['offset', '?resetToOffset@UTF16CollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@UTF16CollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@UTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@UTF16CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@UTF16CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4UTF16CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVUTF16CollationIterator@icu_56@@@8']
dd ['offset', '??_R3UTF16CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUTF16CollationIterator@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UTF16CollationIterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UTF16CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UTF16CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UTF16CollationIterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UTF16CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setText@UTF16CollationIterator@icu_56@@QAEXPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@CollationIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+17Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+178h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+180h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF16CollationIterator@icu_56@@IAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+178h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+17Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+180h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUTF16CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1F2D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUTF16CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1FB6']
push ['offset', '??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['188h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1FAE']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1FDF']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1FDC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+188h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+18Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+190h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+194h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1DCh],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUTF16CollationIterator@icu_56@@6B@']
public ['??_7FCDUTF16CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8FCDUTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z']
dd ['offset', '?resetToOffset@FCDUTF16CollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@FCDUTF16CollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@FCDUTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@UTF16CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@FCDUTF16CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z$0']
dd ['offset', '__unwindtable$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUTF16CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUTF16CollationIterator@icu_56@@@8']
dd ['offset', '??_R3FCDUTF16CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUTF16CollationIterator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FCDUTF16CollationIterator@icu_56@@8']
dd ['5']
dd ['offset', '??_R2FCDUTF16CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUTF16CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UTF16CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUTF16CollationIterator@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3FCDUTF16CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF16CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['[eax+188h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+18Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+190h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+194h]']
mov ['[eax+194h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+198h]']
mov ['[eax+198h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '19Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1DCh]']
mov ['[eax+1DCh],', 'dl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUTF16CollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_23C5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFCDUTF16CollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_244E']
push ['offset', '??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['1E0h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2446']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_2477']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2474']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+178h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+17Ch]']
sub ['edx,', '[ecx+178h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*2]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_250F']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_252F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+180h]']
sub ['eax,', '[edx+178h]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_D0]']
mov ['[eax+180h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UTF16CollationIterator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16CollationIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8CollationIterator@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_25DA']
xor ['al,', 'al']
jmp ['short', 'loc_260D']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
sub ['edx,', '[ecx+178h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[eax+17Ch]']
sub ['eax,', '[ecx+178h]']
sar ['eax,', '1']
cmp ['edx,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resetToOffset@UTF16CollationIterator@icu_56@@UAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@CollationIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+178h]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+17Ch],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@UTF16CollationIterator@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[eax+17Ch]']
sub ['eax,', '[ecx+178h]']
sar ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleNextCE32@UTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jnz ['short', 'loc_2707']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '0C0h']
jmp ['short', 'loc_2758']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+17Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['edx,', '[edx]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+8]']
mov ['eax,', '[eax+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleGetTrailSurrogate@UTF16CollationIterator@icu_56@@MAE_WXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jnz ['short', 'loc_279F']
xor ['eax,', 'eax']
jmp ['short', 'loc_27D8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_14],', 'dx']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_27D4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['ax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?foundNULTerminator@UTF16CollationIterator@icu_56@@MAECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_2845']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_D0]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_D0]']
mov ['[ecx+180h],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_2847']
jmp ['short', 'loc_2847']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jnz ['short', 'loc_288F']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_294F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_28CA']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_28CA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
mov ['[eax+180h],', 'edx']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_294F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_294C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_294C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_294C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_20]']
lea ['eax,', '[eax+ecx-35FDC00h]']
jmp ['short', 'loc_294F']
jmp ['short', 'loc_294F']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jnz ['short', 'loc_2997']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_2A35']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_2A32']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jz ['short', 'loc_2A32']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['dx,', '[ecx-2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_2A32']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
movzx ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
lea ['eax,', '[eax+ecx-35FDC00h]']
jmp ['short', 'loc_2A35']
jmp ['short', 'loc_2A35']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?forwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['loc_2B2F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['loc_2B2F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2ABA']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_2ABA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
mov ['[eax+180h],', 'edx']
jmp ['short', 'loc_2B2F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_2B2A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_2B2A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_2B2A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
jmp ['loc_2A63']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?backwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['loc_2C0B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jz ['loc_2C0B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_DC]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_2C06']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jz ['short', 'loc_2C06']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx-2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_2C06']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
jmp ['loc_2B5B']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF16CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+188h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+18Ch]']
sub ['edx,', '[ecx+188h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*2]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+18Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+190h],', '0']
jnz ['short', 'loc_2CB9']
mov ['[ebp+var_DC],', '0']
jmp ['short', 'loc_2CD9']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+190h]']
sub ['eax,', '[edx+188h]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_DC]']
mov ['[eax+190h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+194h],', '0']
jnz ['short', 'loc_2D00']
mov ['[ebp+var_DC],', '0']
jmp ['short', 'loc_2D20']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+194h]']
sub ['eax,', '[edx+188h]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_DC]']
mov ['[eax+194h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+198h]']
mov ['[eax+198h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '19Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1DCh]']
mov ['[eax+1DCh],', 'dl']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2D9E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+178h]']
cmp ['edx,', '[ecx+18Ch]']
jnz ['loc_2E2D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+178h]']
sub ['edx,', '[ecx+188h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*2]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+178h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+17Ch]']
sub ['edx,', '[ecx+188h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*2]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_2DFC']
mov ['[ebp+var_DC],', '0']
jmp ['short', 'loc_2E1C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+180h]']
sub ['eax,', '[edx+188h]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_DC]']
mov ['[eax+180h],', 'ecx']
jmp ['short', 'loc_2EA4']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+178h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+17Ch]']
sub ['edx,', '[ecx+178h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+178h]']
lea ['edx,', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+17Ch],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+178h]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+180h],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z$1	proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z$1']
dd ['offset', '__unwindtable$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@PB_W@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1FCDUTF16CollationIterator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16CollationIterator@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1FCDUTF16CollationIterator@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??1FCDUTF16CollationIterator@icu_56@@UAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1FCDUTF16CollationIterator@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8FCDUTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8CollationIterator@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_306D']
xor ['al,', 'al']
jmp ['loc_319A']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+1DCh]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_3092']
xor ['al,', 'al']
jmp ['loc_319A']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_30D9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+178h]']
xor ['eax,', 'eax']
cmp ['edx,', '[ecx+18Ch]']
setz ['al']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+178h]']
xor ['ebx,', 'ebx']
cmp ['ecx,', '[edx+18Ch]']
setz ['bl']
cmp ['eax,', 'ebx']
jz ['short', 'loc_30D9']
xor ['al,', 'al']
jmp ['loc_319A']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_30FB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+178h]']
cmp ['edx,', '[ecx+18Ch]']
jnz ['short', 'loc_312C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
sub ['edx,', '[ecx+188h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[eax+17Ch]']
sub ['eax,', '[ecx+188h]']
sar ['eax,', '1']
cmp ['edx,', 'eax']
setz ['al']
jmp ['short', 'loc_319A']
jmp ['short', 'loc_319A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+18Ch]']
sub ['edx,', '[ecx+188h]']
sar ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[eax+18Ch]']
sub ['eax,', '[ecx+188h]']
sar ['eax,', '1']
cmp ['edx,', 'eax']
jnz ['short', 'loc_318D']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+17Ch]']
sub ['eax,', '[edx+178h]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+17Ch]']
sub ['ecx,', '[edx+178h]']
sar ['ecx,', '1']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_318D']
mov ['[ebp+var_D9],', '1']
jmp ['short', 'loc_3194']
mov ['[ebp+var_D9],', '0']
mov ['al,', '[ebp+var_D9]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resetToOffset@FCDUTF16CollationIterator@icu_56@@UAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@CollationIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+188h]']
add ['edx,', 'eax']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_D0]']
mov ['[eax+17Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_D0]']
mov ['[edx+18Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_D0]']
mov ['[ecx+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+194h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@FCDUTF16CollationIterator@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3295']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+178h]']
cmp ['edx,', '[ecx+18Ch]']
jnz ['short', 'loc_32AD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[eax+17Ch]']
sub ['eax,', '[ecx+188h]']
sar ['eax,', '1']
jmp ['short', 'loc_32ED']
jmp ['short', 'loc_32ED']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jnz ['short', 'loc_32D9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[eax+18Ch]']
sub ['eax,', '[ecx+188h]']
sar ['eax,', '1']
jmp ['short', 'loc_32ED']
jmp ['short', 'loc_32ED']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[eax+190h]']
sub ['eax,', '[ecx+188h]']
sar ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleNextCE32@FCDUTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jle ['loc_3439']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jnz ['short', 'loc_3350']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '0C0h']
jmp ['loc_34BD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+17Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?hasTccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_3435']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_33D4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_3435']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
call ['?hasLccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3435']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_340F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '0C0h']
jmp ['loc_34BD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+17Ch],', 'edx']
jmp ['short', 'loc_3492']
jmp ['short', 'loc_348D']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3485']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_3485']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+17Ch],', 'edx']
jmp ['short', 'loc_3492']
jmp ['short', 'loc_348D']
mov ['ecx,', '[ebp+var_8]']
call ['?switchToForward@FCDUTF16CollationIterator@icu_56@@AAEXXZ']
jmp ['loc_3317']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['edx,', '[edx]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+8]']
mov ['eax,', '[eax+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?foundNULTerminator@FCDUTF16CollationIterator@icu_56@@MAECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_3548']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_D0]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_D0]']
mov ['[ecx+194h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_D0]']
mov ['[eax+180h],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_354A']
jmp ['short', 'loc_354A']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jle ['loc_36D6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jnz ['short', 'loc_35A5']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_379D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?hasTccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3679']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3623']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_3677']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
call ['?hasLccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3677']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3653']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_379D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
jmp ['short', 'loc_36D2']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_36D2']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+180h],', '0']
jnz ['short', 'loc_36D2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_E8]']
mov ['[ecx+194h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_E8]']
mov ['[eax+180h],', 'ecx']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_379D']
jmp ['short', 'loc_372D']
jmp ['short', 'loc_3728']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3720']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_3720']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
jmp ['short', 'loc_372D']
jmp ['short', 'loc_3728']
mov ['ecx,', '[ebp+var_8]']
call ['?switchToForward@FCDUTF16CollationIterator@icu_56@@AAEXXZ']
jmp ['loc_3577']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_379A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jz ['short', 'loc_379A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_379A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_20]']
lea ['eax,', '[eax+ecx-35FDC00h]']
jmp ['short', 'loc_379D']
jmp ['short', 'loc_379D']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jge ['loc_38EE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jnz ['short', 'loc_3805']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_39BF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?hasLccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_38EA']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_388D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jz ['short', 'loc_38EA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx-2]']
push ['edx']
call ['?hasTccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_38EA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?previousSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_38BD']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_39BF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_394E']
jmp ['short', 'loc_3949']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3941']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jz ['short', 'loc_3941']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+17Ch],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_394E']
jmp ['short', 'loc_3949']
mov ['ecx,', '[ebp+var_8]']
call ['?switchToBackward@FCDUTF16CollationIterator@icu_56@@AAEXXZ']
jmp ['loc_37D7']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_39BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jz ['short', 'loc_39BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['dx,', '[ecx-2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_39BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+17Ch],', 'ecx']
movzx ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
lea ['eax,', '[eax+ecx-35FDC00h]']
jmp ['short', 'loc_39BF']
jmp ['short', 'loc_39BF']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?forwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['short', 'loc_3A1C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
test ['eax,', 'eax']
jl ['short', 'loc_3A1C']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_39FB']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?backwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['short', 'loc_3A78']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?previousCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
test ['eax,', 'eax']
jl ['short', 'loc_3A78']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_3A57']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?switchToForward@FCDUTF16CollationIterator@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jl ['short', 'loc_3B09']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+1DCh]']
test ['eax,', 'eax']
jnz ['short', 'loc_3AE3']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+17Ch]']
cmp ['eax,', '[edx+180h]']
jz ['short', 'loc_3B09']
mov ['ecx,', 'ds:?__LINE__Var@?1??switchToForward@FCDUTF16CollationIterator@icu_56@@AAEXXZ@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1GA@KKPHBLCG@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jge ['short', 'loc_3B79']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
mov ['[eax+18Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+190h]']
jnz ['short', 'loc_3B6D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+194h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '1']
jmp ['short', 'loc_3B77']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '0']
jmp ['short', 'loc_3BE1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+178h]']
cmp ['edx,', '[ecx+18Ch]']
jnz ['short', 'loc_3B8F']
jmp ['short', 'loc_3BC5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+18Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+178h]']
mov ['[eax+17Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+194h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GA@KKPHBLCG@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@']
unicode ['0,', '<checkDir', '>']
dw ['3Ch']
unicode ['0,', '<', '0', '||', '(checkDir', '==', '0', '&&', 'pos', '==', 'limit)>,0']
assume ['cs:_rdata']
public ['??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\utf16collationiterator.cp>']
unicode ['0,', '<p>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??switchToForward@FCDUTF16CollationIterator@icu_56@@AAEXXZ@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3D13']
xor ['al,', 'al']
jmp ['loc_3F09']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jle ['short', 'loc_3D35']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+17Ch]']
cmp ['ecx,', '[eax+180h]']
jnz ['short', 'loc_3D5B']
mov ['edx,', 'ds:?__LINE__Var@?1??nextSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z@4JA']
add ['edx,', '2']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DK@GGPGPLGM@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_1D],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+194h]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+198h]']
call ['dword', 'ptr', 'ds:__imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'ax']
movzx ['eax,', '[ebp+var_38]']
sar ['eax,', '8']
mov ['[ebp+var_41],', 'al']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jnz ['short', 'loc_3DD8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+17Ch]']
jz ['short', 'loc_3DD8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+190h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+180h],', 'eax']
jmp ['loc_3EC4']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jz ['loc_3E89']
movzx ['eax,', '[ebp+var_1D]']
movzx ['ecx,', '[ebp+var_41]']
cmp ['eax,', 'ecx']
jg ['short', 'loc_3E08']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
call ['?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3E89']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+194h]']
jz ['short', 'loc_3E4D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+194h]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+198h]']
call ['dword', 'ptr', 'ds:__imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
cmp ['ecx,', '0FFh']
jg ['short', 'loc_3E08']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+17Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?normalize@FCDUTF16CollationIterator@icu_56@@AAECPB_W0AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3E75']
xor ['al,', 'al']
jmp ['loc_3F09']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+178h]']
mov ['[eax+17Ch],', 'edx']
jmp ['short', 'loc_3EC4']
mov ['al,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[ebp+var_1D],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+194h]']
jz ['short', 'loc_3EA5']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jnz ['short', 'loc_3EBF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+190h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+180h],', 'eax']
jmp ['short', 'loc_3EC4']
jmp ['loc_3D6B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+180h]']
jnz ['short', 'loc_3EFD']
mov ['eax,', 'ds:?__LINE__Var@?1??nextSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z@4JA']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BK@EFDDGHJM@?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '0']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN20']
db ['4,', '2', 'dup(0)']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BK@EFDDGHJM@?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
unicode ['0,', '<pos', '!=', 'limit>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DK@GGPGPLGM@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
unicode ['0,', '<checkDir', '>']
dw ['3Eh']
unicode ['0,', '<', '0', '&&', 'pos', '!=', 'limit>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??nextSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?switchToBackward@FCDUTF16CollationIterator@icu_56@@AAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jg ['short', 'loc_4049']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+1DCh]']
test ['eax,', 'eax']
jnz ['short', 'loc_4023']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+17Ch]']
cmp ['eax,', '[edx+178h]']
jz ['short', 'loc_4049']
mov ['ecx,', 'ds:?__LINE__Var@?1??switchToBackward@FCDUTF16CollationIterator@icu_56@@AAEXXZ@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1GA@BDLMJIFG@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jle ['short', 'loc_40B9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
mov ['[eax+190h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+18Ch]']
jnz ['short', 'loc_40AD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+188h]']
mov ['[eax+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '0FFh']
jmp ['short', 'loc_40B7']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '0']
jmp ['short', 'loc_4121']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+178h]']
cmp ['edx,', '[ecx+18Ch]']
jnz ['short', 'loc_40CF']
jmp ['short', 'loc_4105']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+190h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+180h]']
mov ['[eax+17Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+188h]']
mov ['[eax+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GA@BDLMJIFG@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CI?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@']
unicode ['0,', '<checkDir', '>']
dw ['3Eh']
unicode ['0,', '<', '0', '||', '(checkDir', '==', '0', '&&', 'pos', '==', 'start)>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??switchToBackward@FCDUTF16CollationIterator@icu_56@@AAEXXZ@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_41DB']
xor ['al,', 'al']
jmp ['loc_43E5']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1DCh]']
test ['ecx,', 'ecx']
jge ['short', 'loc_41FD']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+17Ch]']
cmp ['ecx,', '[eax+178h]']
jnz ['short', 'loc_4223']
mov ['edx,', 'ds:?__LINE__Var@?1??previousSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z@4JA']
add ['edx,', '2']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DK@HBGMEGGB@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+17Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_1D],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+188h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+198h]']
call ['dword', 'ptr', 'ds:__imp_?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'ax']
mov ['al,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[ebp+var_41],', 'al']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jnz ['short', 'loc_429C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+17Ch]']
jz ['short', 'loc_429C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+178h],', 'eax']
jmp ['loc_43A0']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jz ['loc_4361']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_42BC']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '[ebp+var_1D]']
cmp ['eax,', 'ecx']
jg ['short', 'loc_42D4']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
call ['?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_4361']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FFh']
jle ['short', 'loc_4325']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+188h]']
jz ['short', 'loc_4325']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+188h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+198h]']
call ['dword', 'ptr', 'ds:__imp_?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'ax']
movzx ['ecx,', '[ebp+var_38]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_42D4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+17Ch]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?normalize@FCDUTF16CollationIterator@icu_56@@AAECPB_W0AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_434D']
xor ['al,', 'al']
jmp ['loc_43E5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+180h]']
mov ['[eax+17Ch],', 'edx']
jmp ['short', 'loc_43A0']
movzx ['eax,', '[ebp+var_38]']
sar ['eax,', '8']
mov ['[ebp+var_1D],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+188h]']
jz ['short', 'loc_4381']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jnz ['short', 'loc_439B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+18Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+178h],', 'eax']
jmp ['short', 'loc_43A0']
jmp ['loc_4233']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+17Ch]']
cmp ['edx,', '[ecx+178h]']
jnz ['short', 'loc_43D9']
mov ['eax,', 'ds:?__LINE__Var@?1??previousSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z@4JA']
add ['eax,', '22h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BK@NHFBPIFO@?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1DCh],', '0']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN21_0']
dd ['offset', '$LN20_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BK@NHFBPIFO@?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
unicode ['0,', '<pos', '!=', 'start>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1DK@HBGMEGGB@?$AAc?$AAh?$AAe?$AAc?$AAk?$AAD?$AAi?$AAr?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAo?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
unicode ['0,', '<checkDir', '>']
dw ['3Ch']
unicode ['0,', '<', '0', '&&', 'pos', '!=', 'start>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??previousSegment@FCDUTF16CollationIterator@icu_56@@AAECAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?normalize@FCDUTF16CollationIterator@icu_56@@AAECPB_W0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_44DD']
mov ['eax,', 'ds:?__LINE__Var@?1??normalize@FCDUTF16CollationIterator@icu_56@@AAECPB_W0AAW4UErrorCode@@@Z@4JA']
add ['eax,', '2']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1HG@HBCKIJKJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CK@LNGNHFMJ@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '19Ch']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+198h]']
call ['dword', 'ptr', 'ds:__imp_?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_452D']
xor ['al,', 'al']
jmp ['short', 'loc_4595']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+190h],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+178h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+178h]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+180h],', 'eax']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CK@LNGNHFMJ@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<U_SUCCESS(errorCode)>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??normalize@FCDUTF16CollationIterator@icu_56@@AAECPB_W0AAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__allshl:near']
extrn ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:near']
extrn ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:near']
extrn ['__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:near']
extrn ['?lcccBits@CollationFCD@icu_56@@0QBIB:near']
extrn ['?lcccIndex@CollationFCD@icu_56@@0QBEB:near']
extrn ['?tcccBits@CollationFCD@icu_56@@0QBIB:near']
extrn ['?tcccIndex@CollationFCD@icu_56@@0QBEB:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??8CollationIterator@icu_56@@UBECABV01@@Z:near']
extrn ['__purecall:near']
extrn ['?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?foundNULTerminator@CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ:near']
extrn ['?getDataCE32@CollationIterator@icu_56@@MBEIH@Z:near']
extrn ['?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z:near']
extrn ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1CollationIterator@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['?reset@CollationIterator@icu_56@@IAEXXZ:near']
extrn ['??0CollationIterator@icu_56@@IAE@ABV01@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['__imp___wassert:near']
extrn ['__imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z:near']
extrn ['__imp_?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z:near']
extrn ['__imp_?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z:near']
end

endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_internalInitStatics_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1334']
jmp ['loc_13B9']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_1398']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1398']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_13B9']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_13B9']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initializeStatics@@YAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?initializeStatics@@YAXAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A8]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_D8],', '0']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_FC],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_FC],', '0']
jz ['loc_154C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['edi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['ecx,', 'ds:?inclusionPat@?1??initializeStatics@@YAXAAW4UErrorCode@@@Z@4PBDB']
push ['ecx']
lea ['ecx,', '[ebp+var_198]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A0],', 'eax']
mov ['edx,', '[ebp+var_1A0]']
mov ['[ebp+var_1A4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_D8]']
or ['eax,', '1']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+var_1A4]']
push ['ecx']
mov ['ecx,', '[ebp+var_FC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_FC]']
mov ['dword', 'ptr', '[edx],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_FC]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['ecx,', '[ebp+var_FC]']
mov ['[ebp+var_1A8],', 'ecx']
jmp ['short', 'loc_1556']
mov ['[ebp+var_1A8],', '0']
mov ['edx,', '[ebp+var_1A8]']
mov ['[ebp+var_108],', 'edx']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_108]']
mov ['ds:_gInclusionSet,', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_D8]']
and ['ecx,', '1']
jz ['short', 'loc_15A2']
and ['[ebp+var_D8],', '0FFFFFFFEh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_198]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_gInclusionSet']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E4],', 'eax']
mov ['[ebp+var_4],', '3']
cmp ['[ebp+var_E4],', '0']
jz ['loc_1671']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['edi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['ecx,', 'ds:?recommendedPat@?1??initializeStatics@@YAXAAW4UErrorCode@@@Z@4PBDB']
push ['ecx']
lea ['ecx,', '[ebp+var_150]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A0],', 'eax']
mov ['edx,', '[ebp+var_1A0]']
mov ['[ebp+var_1A4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_D8]']
or ['eax,', '2']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+var_1A4]']
push ['ecx']
mov ['ecx,', '[ebp+var_E4]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_E4]']
mov ['dword', 'ptr', '[edx],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_E4]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['ecx,', '[ebp+var_E4]']
mov ['[ebp+var_1A8],', 'ecx']
jmp ['short', 'loc_167B']
mov ['[ebp+var_1A8],', '0']
mov ['edx,', '[ebp+var_1A8]']
mov ['[ebp+var_F0],', 'edx']
mov ['[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_F0]']
mov ['ds:_gRecommendedSet,', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_D8]']
and ['ecx,', '2']
jz ['short', 'loc_16C7']
and ['[ebp+var_D8],', '0FFFFFFFDh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_150]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_gRecommendedSet']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_gNfdNormalizer,', 'eax']
push ['offset', '?uspoof_cleanup@@YACXZ']
push ['1']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0FCh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$1 proc near
mov ['eax,', '[ebp-0D8h]']
and ['eax,', '1']
jz ['$LN9']
and ['dword', 'ptr', '[ebp-0D8h],', '0FFFFFFFEh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-198h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
retn
endp
__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E4h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$3 proc near
mov ['eax,', '[ebp-0D8h]']
and ['eax,', '2']
jz ['$LN13']
and ['dword', 'ptr', '[ebp-0D8h],', '0FFFFFFFDh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-150h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
retn
endp
__ehhandler$?initializeStatics@@YAXAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1ACh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?initializeStatics@@YAXAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z']
dd ['offset', '?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECH@Z']
dd ['offset', '??8UnicodeSet@icu_56@@UBECABV01@@Z']
dd ['offset', '?hashCode@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?size@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?isEmpty@UnicodeSet@icu_56@@UBECXZ']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECHH@Z']
dd ['offset', '?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z']
dd ['offset', '?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?clear@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?getRangeCount@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?compact@UnicodeSet@icu_56@@UAEAAV12@XZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?initializeStatics@@YAXAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$2']
dd ['3']
dd ['offset', '__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?initializeStatics@@YAXAAW4UErrorCode@@@Z$3']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeSet@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeSet@icu_56@@8']
dd ['1,', '6']
dd ['offset', '??_R2UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeSet@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeSet@icu_56@@8']
dd ['5,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0BACK@CDOMAMMN@?$FL?2u0030?9?2u0039?2u0041?9?2u005A?2u005@+40h']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?uspoof_cleanup@@YACXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:_gInclusionSet']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1BBB']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1BC5']
mov ['[ebp+var_F4],', '0']
mov ['ds:_gInclusionSet,', '0']
mov ['eax,', 'ds:_gRecommendedSet']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_1C14']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D4]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1C1E']
mov ['[ebp+var_F4],', '0']
mov ['ds:_gRecommendedSet,', '0']
mov ['ds:_gNfdNormalizer,', '0']
cmp ['ds:_gDefaultSpoofData,', '0']
jz ['short', 'loc_1C46']
mov ['ecx,', 'ds:_gDefaultSpoofData']
call ['?removeReference@SpoofData@icu_56@@QAEXXZ']
mov ['ds:_gDefaultSpoofData,', '0']
mov ['ecx,', 'offset', '_gSpoofInitStaticsOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['ecx,', 'offset', '_gSpoofInitDefaultOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1D03']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_open_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeDefaultData@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitDefaultOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D82']
xor ['eax,', 'eax']
jmp ['loc_1E83']
mov ['esi,', 'esp']
push ['20h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1DC3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', 'ds:_gDefaultSpoofData']
push ['ecx']
mov ['ecx,', '[ebp+var_EC]']
call ['??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_1DCD']
mov ['[ebp+var_100],', '0']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1DF3']
mov ['ecx,', 'ds:_gDefaultSpoofData']
call ['?addReference@SpoofData@icu_56@@QAEPAV12@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E17']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1E17']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E80']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1E6F']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_1E79']
mov ['[ebp+var_100],', '0']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initializeDefaultData@@YAXAAW4UErrorCode@@@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['ds:_gDefaultSpoofData,', 'eax']
push ['offset', '?uspoof_cleanup@@YACXZ']
push ['1']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_openFromSerialized_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F52']
xor ['eax,', 'eax']
jmp ['loc_218D']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['30h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_158],', 'eax']
cmp ['[ebp+var_158],', '0']
jz ['short', 'loc_1FAA']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_158]']
call ['??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_1FB4']
mov ['[ebp+var_16C],', '0']
mov ['eax,', '[ebp+var_16C]']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['20h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_140],', 'eax']
cmp ['[ebp+var_140],', '0']
jz ['short', 'loc_2007']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_140]']
call ['??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_2011']
mov ['[ebp+var_16C],', '0']
mov ['edx,', '[ebp+var_16C]']
mov ['[ebp+var_14C],', 'edx']
mov ['eax,', '[ebp+var_14C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_20D0']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+var_128]']
mov ['[ebp+var_134],', 'ecx']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_2072']
push ['1']
mov ['ecx,', '[ebp+var_134]']
call ['??_GSpoofData@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_207C']
mov ['[ebp+var_16C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_20BF']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_20C9']
mov ['[ebp+var_16C],', '0']
xor ['eax,', 'eax']
jmp ['loc_218D']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_20E0']
cmp ['[ebp+var_14],', '0']
jnz ['loc_2177']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'ecx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_211C']
push ['1']
mov ['ecx,', '[ebp+var_104]']
call ['??_GSpoofData@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_2126']
mov ['[ebp+var_16C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_2169']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_2173']
mov ['[ebp+var_16C],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_218D']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_218A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSpoofData@icu_56@@QAEPAXI@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SpoofData@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_21ED']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_clone_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2246']
xor ['eax,', 'eax']
jmp ['loc_230F']
mov ['esi,', 'esp']
push ['20h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F8],', 'eax']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_2284']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_F8]']
call ['??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_228E']
mov ['[ebp+var_10C],', '0']
mov ['edx,', '[ebp+var_10C]']
mov ['[ebp+var_104],', 'edx']
mov ['eax,', '[ebp+var_104]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_230C']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_22FB']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_2305']
mov ['[ebp+var_10C],', '0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_close_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_239F']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_23A9']
mov ['[ebp+var_F4],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_setChecks_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2425']
jmp ['short', 'loc_2443']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0BFFF0000h']
jz ['short', 'loc_243A']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_2443']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getChecks_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2493']
xor ['eax,', 'eax']
jmp ['short', 'loc_2499']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_setRestrictionLevel_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_24F7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_0']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getRestrictionLevel_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_257D']
mov ['eax,', '60000000h']
jmp ['short', 'loc_2583']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+18h]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_1']
dd ['offset', '$LN4_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_setAllowedLocales_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_25FD']
jmp ['short', 'loc_260D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getAllowedLocales_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_265F']
xor ['eax,', 'eax']
jmp ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getAllowedChars_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uspoof_getAllowedUnicodeSet_56']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getAllowedUnicodeSet_56	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2713']
xor ['eax,', 'eax']
jmp ['short', 'loc_2719']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_setAllowedChars_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uspoof_setAllowedUnicodeSet_56']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_setAllowedUnicodeSet_56	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_27CC']
jmp ['loc_28B0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeSet@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_27F3']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_28B0']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_282B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeSet@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2836']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_28B0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_288E']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_2898']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_check_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_2909']
xor ['eax,', 'eax']
jmp ['short', 'loc_297D']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jge ['short', 'loc_291C']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_297D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uspoof_checkUnicodeString_56']
add ['esp,', '10h']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_12C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_12C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6_2']
dd ['offset', '$LN5_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_checkUTF8_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2A0C']
xor ['eax,', 'eax']
jmp ['loc_2AA2']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_2A1D']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_138],', 'eax']
jmp ['short', 'loc_2A2F']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_138],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_138]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+var_130]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBDH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uspoof_checkUnicodeString_56']
add ['esp,', '10h']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_120],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_120]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7_1']
dd ['offset', '$LN6_3']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_areConfusable_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '160h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_160]']
mov ['ecx,', '58h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2B44']
xor ['eax,', 'eax']
jmp ['loc_2BFB']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jl ['short', 'loc_2B50']
cmp ['[ebp+arg_10],', '0FFFFFFFFh']
jge ['short', 'loc_2B60']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_2BFB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
cmp ['[ebp+arg_10],', '0FFFFFFFFh']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uspoof_areConfusableUnicodeString_56']
add ['esp,', '10h']
mov ['[ebp+var_15C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_15C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '160h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_0']
dd ['offset', '$LN6_4']
dd ['0FFFFFF70h,', '40h']
dd ['offset', '$LN7_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_areConfusableUTF8_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '190h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_190]']
mov ['ecx,', '64h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2CB0']
xor ['eax,', 'eax']
jmp ['loc_2DDD']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jl ['short', 'loc_2CBC']
cmp ['[ebp+arg_10],', '0FFFFFFFFh']
jge ['short', 'loc_2CCC']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_2DDD']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_2CDD']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_2CEF']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_190],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_190]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBDH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_10],', '0']
jl ['short', 'loc_2D37']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_2D49']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_190],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_190]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_178]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBDH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uspoof_areConfusableUnicodeString_56']
add ['esp,', '10h']
mov ['[ebp+var_9C],', 'eax']
mov ['eax,', '[ebp+var_9C]']
mov ['[ebp+var_168],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_168]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '190h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12']
dd ['offset', '$LN10']
dd ['0FFFFFF70h,', '40h']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_areConfusableUnicodeString_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '254h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_254]']
mov ['ecx,', '95h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2E93']
xor ['eax,', 'eax']
jmp ['loc_3186']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '7']
jnz ['short', 'loc_2EAE']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1Bh']
xor ['eax,', 'eax']
jmp ['loc_3186']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '8']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2EEC']
xor ['eax,', 'eax']
jmp ['loc_3186']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_30]']
call ['?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['ecx,', '[ebp+var_30]']
call ['?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ']
mov ['[ebp+var_3C],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_30]']
call ['?getScripts@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ']
mov ['ecx,', 'eax']
call ['?nextSetBit@ScriptSet@icu_56@@QBEHH@Z']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_30]']
call ['?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['ecx,', '[ebp+var_30]']
call ['?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ']
mov ['[ebp+var_54],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_30]']
call ['?getScripts@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ']
mov ['ecx,', 'eax']
call ['?nextSetBit@ScriptSet@icu_56@@QBEHH@Z']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '1']
jz ['loc_304B']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_3C],', '1']
jg ['loc_3021']
cmp ['[ebp+var_54],', '1']
jg ['short', 'loc_3021']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_60]']
jnz ['short', 'loc_3021']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_F0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3021']
mov ['eax,', '[ebp+var_24]']
or ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '1']
jz ['short', 'loc_305B']
mov ['eax,', '[ebp+var_24]']
jmp ['loc_3186']
cmp ['[ebp+var_3C],', '1']
jg ['short', 'loc_307B']
cmp ['[ebp+var_54],', '1']
jg ['short', 'loc_307B']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '4']
jz ['short', 'loc_307B']
mov ['[ebp+var_251],', '1']
jmp ['short', 'loc_3082']
mov ['[ebp+var_251],', '0']
mov ['dl,', '[ebp+var_251]']
mov ['[ebp+var_F9],', 'dl']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
jnz ['short', 'loc_30A8']
movsx ['eax,', '[ebp+var_F9]']
test ['eax,', 'eax']
jz ['loc_3183']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_144]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_18C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_18C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_18C]']
push ['eax']
lea ['ecx,', '[ebp+var_144]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3159']
mov ['eax,', '[ebp+var_24]']
or ['eax,', '2']
mov ['[ebp+var_24],', 'eax']
movsx ['eax,', '[ebp+var_F9]']
test ['eax,', 'eax']
jz ['short', 'loc_3159']
mov ['eax,', '[ebp+var_24]']
or ['eax,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_18C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_144]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '254h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20']
dd ['offset', '$LN16']
dd ['0FFFFFF10h,', '40h']
dd ['offset', '$LN17']
dd ['0FFFFFEBCh,', '40h']
dd ['offset', '$LN18']
dd ['0FFFFFE74h,', '40h']
dd ['offset', '$LN19']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_checkUnicodeString_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '21Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_21C]']
mov ['ecx,', '87h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_3268']
xor ['eax,', 'eax']
jmp ['loc_3709']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '90h']
jz ['short', 'loc_32CC']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_32AD']
jmp ['$cleanupAndReturn$71316']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_24]']
call ['?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['ecx,', '[ebp+var_24]']
call ['?setIdentifierProfile@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeSet@2@@Z']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_3311']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
call ['?getRestrictionLevel@IdentifierInfo@icu_56@@QBE?AW4URestrictionLevel@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[eax+18h]']
jle ['short', 'loc_32FA']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '10h']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '40000000h']
jz ['short', 'loc_3311']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '[ebp+var_30]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_3350']
mov ['ecx,', '[ebp+var_24]']
call ['?getNumerics@IdentifierInfo@icu_56@@QBEPBVUnicodeSet@2@XZ']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_3C]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '1']
jle ['short', 'loc_3350']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '80h']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '40h']
jz ['loc_33E5']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_60],', 'eax']
mov ['[ebp+var_48],', '0']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_60]']
jge ['short', 'loc_33E5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_54]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_48],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_33E3']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '40h']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_33E5']
jmp ['short', 'loc_337B']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '26h']
jz ['$cleanupAndReturn$71316']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', 'ds:_gNfdNormalizer']
mov ['edx,', '[eax]']
mov ['ecx,', 'ds:_gNfdNormalizer']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '20h']
jz ['loc_35D8']
mov ['[ebp+var_D8],', '0']
mov ['[ebp+var_E1],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C0],', '0']
mov ['eax,', '[ebp+var_C0]']
cmp ['eax,', '[ebp+var_B4]']
jge ['loc_35C3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C0]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_CC]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_C0]']
mov ['[ebp+var_C0],', 'ecx']
mov ['eax,', '[ebp+var_CC]']
push ['eax']
call ['_u_charType_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
cmp ['ecx,', '6']
jz ['short', 'loc_352C']
mov ['[ebp+var_D8],', '0']
movsx ['eax,', '[ebp+var_E1]']
test ['eax,', 'eax']
jz ['short', 'loc_3527']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_?clear@UnicodeSet@icu_56@@UAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E1],', '0']
jmp ['loc_348D']
cmp ['[ebp+var_D8],', '0']
jnz ['short', 'loc_3546']
mov ['eax,', '[ebp+var_CC]']
mov ['[ebp+var_D8],', 'eax']
jmp ['loc_348D']
movsx ['eax,', '[ebp+var_E1]']
test ['eax,', 'eax']
jnz ['short', 'loc_3574']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E1],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_CC]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_?contains@UnicodeSet@icu_56@@UBECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_35A2']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '20h']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_35C3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_CC]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_348D']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '6']
jz ['loc_36D6']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_363B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_362B']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['$cleanupAndReturn$71316']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_24]']
call ['?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['ecx,', '[ebp+var_24]']
call ['?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ']
mov ['[ebp+var_12C],', 'eax']
lea ['ecx,', '[ebp+var_14C]']
call ['??0ScriptSet@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
push ['ecx']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['ecx,', '[ebp+var_C]']
call ['?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z']
lea ['ecx,', '[ebp+var_14C]']
call ['?countMembers@ScriptSet@icu_56@@QBEHXZ']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '4']
jz ['short', 'loc_36A5']
cmp ['[ebp+var_158],', '2']
jl ['short', 'loc_36A5']
cmp ['[ebp+var_12C],', '1']
jnz ['short', 'loc_36A5']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
jz ['short', 'loc_36CB']
cmp ['[ebp+var_158],', '1']
jl ['short', 'loc_36CB']
cmp ['[ebp+var_12C],', '1']
jle ['short', 'loc_36CB']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
lea ['ecx,', '[ebp+var_14C]']
call ['??1ScriptSet@icu_56@@QAE@XZ']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3706']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '21Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN37']
dd ['offset', '$LN34']
dd ['0FFFFFEE0h,', '34h']
dd ['offset', '$LN35']
dd ['0FFFFFEB4h,', '18h']
dd ['offset', '$LN36']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getSkeleton_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '160h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_160]']
mov ['ecx,', '58h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_37D8']
xor ['eax,', 'eax']
jmp ['loc_38C2']
cmp ['[ebp+arg_C],', '0FFFFFFFFh']
jl ['short', 'loc_37F0']
cmp ['[ebp+arg_14],', '0']
jl ['short', 'loc_37F0']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_3800']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_3800']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_38C2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
cmp ['[ebp+arg_C],', '0FFFFFFFFh']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_15C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_15C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '160h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_1']
dd ['offset', '$LN6_5']
dd ['0FFFFFF70h,', '40h']
dd ['offset', '$LN7_3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1A0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1AC]']
mov ['ecx,', '68h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3994']
mov ['eax,', '[ebp+arg_C]']
jmp ['loc_3B3B']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_1AC],', 'eax']
cmp ['[ebp+var_1AC],', '9']
ja ['short', '$LN3']
mov ['ecx,', '[ebp+var_1AC]']
movzx ['edx,', 'ds:$LN15[ecx]']
jmp ['ds:$LN21_0[edx*4]']
mov ['[ebp+var_24],', '4000000h']
jmp ['short', 'loc_39F6']
mov ['[ebp+var_24],', '1000000h']
jmp ['short', 'loc_39F6']
mov ['[ebp+var_24],', '8000000h']
jmp ['short', 'loc_39F6']
mov ['[ebp+var_24],', '2000000h']
jmp ['short', 'loc_39F6']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_C]']
jmp ['loc_3B3B']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', 'ds:_gNfdNormalizer']
mov ['edx,', '[eax]']
mov ['ecx,', 'ds:_gNfdNormalizer']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_78],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
mov ['[ebp+var_78],', '0']
mov ['eax,', '[ebp+var_78]']
cmp ['eax,', '[ebp+var_CC]']
jge ['short', 'loc_3AD0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_78]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_D8]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_78]']
mov ['[ebp+var_78],', 'ecx']
lea ['eax,', '[ebp+var_C0]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z']
jmp ['short', 'loc_3A75']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['edx,', '[ebp+var_C0]']
push ['edx']
mov ['eax,', 'ds:_gNfdNormalizer']
mov ['edx,', '[eax]']
mov ['ecx,', 'ds:_gNfdNormalizer']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_1A4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1A4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1ACh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19_0']
dd ['offset', '$LN16_0']
dd ['0FFFFFF40h,', '40h']
dd ['offset', '$LN17_0']
align ['4']
dd ['offset', '$LN6_6']
dd ['offset', '$LN5_3']
dd ['offset', '$LN4_1']
dd ['offset', '$LN3']
db ['4,', '4,', '4,', '4']
db ['2,', '3']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-6Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0C0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getSkeletonUTF8_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_18C]']
mov ['ecx,', '63h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3CA0']
xor ['eax,', 'eax']
jmp ['loc_3E31']
cmp ['[ebp+arg_C],', '0FFFFFFFFh']
jl ['short', 'loc_3CB8']
cmp ['[ebp+arg_14],', '0']
jl ['short', 'loc_3CB8']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_3CC8']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_3CC8']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_3E31']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_3CD9']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_18C],', 'eax']
jmp ['short', 'loc_3CEB']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_18C],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_18C]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+var_184]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBDH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uspoof_getSkeletonUnicodeString_56@@YAAAVUnicodeString@icu_56@@PBUUSpoofChecker@@IABV12@AAV12@PAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3DA7']
mov ['[ebp+var_174],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_174]']
jmp ['loc_3E31']
mov ['[ebp+var_9C],', '0']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_9C]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_u_strToUTF8_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_9C]']
mov ['[ebp+var_168],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_90]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_168]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12_0']
dd ['offset', '$LN9_2']
dd ['0FFFFFF70h,', '40h']
dd ['offset', '$LN10_0']
dd ['0FFFFFF64h,', '4']
dd ['offset', '$LN11_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_serialize_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3F1D']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3F19']
mov ['eax,', 'ds:?__LINE__Var@?1??uspoof_serialize_56@@9@4JA']
add ['eax,', '3']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FG@NOAAMNGO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CG@GFHCBPDH@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AA?$CK?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['short', 'loc_3F70']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jge ['short', 'loc_3F41']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+Size]']
jmp ['short', 'loc_3F70']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Size]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_1CG@GFHCBPDH@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AA?$CK?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<U_FAILURE(*status)>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FG@NOAAMNGO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\uspoof.cpp>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??uspoof_serialize_56@@9@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getInclusionSet_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_gInclusionSet']
call ['dword', 'ptr', 'ds:__imp_?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getRecommendedSet_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_gRecommendedSet']
call ['dword', 'ptr', 'ds:__imp_?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getInclusionUnicodeSet_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['eax,', 'ds:_gInclusionSet']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_getRecommendedUnicodeSet_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?initializeStatics@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gSpoofInitStaticsOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['eax,', 'ds:_gRecommendedSet']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeSet@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['_ucln_i18n_registerCleanup_56:near']
extrn ['__imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??_GUnicodeSet@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUnicodeSet@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:near']
extrn ['?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECH@Z:near']
extrn ['??8UnicodeSet@icu_56@@UBECABV01@@Z:near']
extrn ['?hashCode@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?size@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?isEmpty@UnicodeSet@icu_56@@UBECXZ:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECHH@Z:near']
extrn ['?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:near']
extrn ['?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near']
extrn ['?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:near']
extrn ['?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:near']
extrn ['?removeReference@SpoofData@icu_56@@QAEXXZ:near']
extrn ['__imp_??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['?addReference@SpoofData@icu_56@@QAEPAV12@XZ:near']
extrn ['??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z:near']
extrn ['?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:near']
extrn ['??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z:near']
extrn ['??1SpoofData@icu_56@@QAE@XZ:near']
extrn ['??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z:near']
extrn ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z:near']
extrn ['?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z:near']
extrn ['?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z:near']
extrn ['__imp_?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ:near']
extrn ['__imp_?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z:near']
extrn ['__imp_?isBogus@UnicodeSet@icu_56@@QBECXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['__imp_?fromUTF8@UnicodeString@icu_56@@SA?AV12@ABVStringPiece@2@@Z:near']
extrn ['__imp_??0StringPiece@icu_56@@QAE@PBDH@Z:near']
extrn ['_strlen:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z:near']
extrn ['?nextSetBit@ScriptSet@icu_56@@QBEHH@Z:near']
extrn ['?getScripts@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ:near']
extrn ['?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ:near']
extrn ['?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z:near']
extrn ['??1ScriptSet@icu_56@@QAE@XZ:near']
extrn ['?countMembers@ScriptSet@icu_56@@QBEHXZ:near']
extrn ['?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z:near']
extrn ['??0ScriptSet@icu_56@@QAE@XZ:near']
extrn ['__imp_?contains@UnicodeSet@icu_56@@UBECH@Z:near']
extrn ['__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near']
extrn ['__imp_?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['_u_charType_56:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['?getNumerics@IdentifierInfo@icu_56@@QBEPBVUnicodeSet@2@XZ:near']
extrn ['?getRestrictionLevel@IdentifierInfo@icu_56@@QBE?AW4URestrictionLevel@@AAW4UErrorCode@@@Z:near']
extrn ['?setIdentifierProfile@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeSet@2@@Z:near']
extrn ['__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:near']
extrn ['?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z:near']
extrn ['_u_strToUTF8_56:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['__imp___wassert:near']
extrn ['__imp_?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ:near']
end

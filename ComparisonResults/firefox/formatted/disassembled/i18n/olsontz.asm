endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9TimeZone@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GOlsonTimeZone@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1OlsonTimeZone@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_311']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EOlsonTimeZone@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_39A']
push ['offset', '??1OlsonTimeZone@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0A0h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_392']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_3C3']
mov ['ecx,', '[ebp+var_8]']
call ['??1OlsonTimeZone@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3C0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+44h]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+46h]']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+48h]']
add ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z']
mov ['dword', 'ptr', '[ebp+var_D4],', 'eax']
mov ['dword', 'ptr', '[ebp+var_D4+4],', 'edx']
fild ['[ebp+var_D4]']
fmul ['ds:__real@408f400000000000']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
public ['__real@408f400000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movsx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jl ['short', 'loc_4C9']
movsx ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+60h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_4D3']
mov ['[ebp+var_DC],', '0']
mov ['edx,', '[ebp+var_DC]']
shl ['edx,', '1']
mov ['[ebp+var_14],', 'dx']
movsx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+5Ch]']
movsx ['ecx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_8]']
mov ['esi,', '[esi+5Ch]']
mov ['eax,', '[edx+eax*4]']
add ['eax,', '[esi+ecx*4+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movsx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jl ['short', 'loc_545']
movsx ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+60h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_54F']
mov ['[ebp+var_DC],', '0']
mov ['edx,', '[ebp+var_DC]']
shl ['edx,', '1']
mov ['[ebp+var_14],', 'dx']
movsx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+5Ch]']
mov ['eax,', '[edx+eax*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movsx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jl ['short', 'loc_5B5']
movsx ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+60h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_5BF']
mov ['[ebp+var_DC],', '0']
mov ['edx,', '[ebp+var_DC]']
shl ['edx,', '1']
mov ['[ebp+var_14],', 'dx']
movsx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+5Ch]']
mov ['eax,', '[edx+eax*4+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+5Ch]']
mov ['eax,', '[ecx]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+5Ch]']
mov ['eax,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCanonicalID@OlsonTimeZone@icu_56@@QBEPB_WXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+74h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0F0h+var_F0]']
mov ['ecx,', '[ebp+var_8]']
call ['?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0E4h+var_E4]']
mov ['ecx,', '[ebp+var_8]']
call ['?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Calendar@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*4+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+eax*4+7Ch],', '0']
jle ['short', 'loc_A56']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+8]']
mov ['[ebp+var_D0],', 'ecx']
jmp ['short', 'loc_A5F']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*4+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGetTime@Calendar@icu_56@@IBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+0E0h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalSetTime@Calendar@icu_56@@IAEXN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fstp ['qword', 'ptr', '[eax+0E0h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianYear@Calendar@icu_56@@IBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+110h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianMonth@Calendar@icu_56@@IBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+114h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+118h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+11Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getDefault@Locale@icu_56@@SAABV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movsx ['ecx,', '[ebp+arg_4]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '2']
add ['ecx,', '0FFFFFFFFh']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+eax*4+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+eax*4+7Ch],', '1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+64h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?weekNumber@Calendar@icu_56@@IAEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?weekNumber@Calendar@icu_56@@IAEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4ZoneMeta@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+74h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+48h],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+46h],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+44h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+50h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+58h],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+5Ch],', 'offset', '_ZEROS']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+64h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '264h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_270]']
mov ['ecx,', '99h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7OlsonTimeZone@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_F43']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_F61']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_F61']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_1571']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
call ['_ures_initStackObject_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_0L@DDPPGEMO@transPre32?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+4Ch],', 'eax']
mov ['eax,', '[ebp+var_24]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+44h],', 'ax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_FF4']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+44h],', 'ax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1029']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1029']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_1020']
cmp ['[ebp+var_24],', '7FFFh']
jg ['short', 'loc_1020']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '1']
jz ['short', 'loc_1029']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_05JIFNPOFN@trans?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+50h],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['cx,', 'word', 'ptr', '[ebp+var_24]']
mov ['[eax+46h],', 'cx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_1093']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+50h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+46h],', 'ax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_10C0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_10C0']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_10B7']
cmp ['[ebp+var_24],', '7FFFh']
jle ['short', 'loc_10C0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_0M@MGHGDNHG@transPost32?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+54h],', 'eax']
mov ['eax,', '[ebp+var_24]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+48h],', 'ax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_112B']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+54h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+48h],', 'ax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1160']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1160']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_1157']
cmp ['[ebp+var_24],', '7FFFh']
jg ['short', 'loc_1157']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '1']
jz ['short', 'loc_1160']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_0M@OFKCJMFA@typeOffsets?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+5Ch],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_11CE']
cmp ['[ebp+var_24],', '2']
jl ['short', 'loc_11C5']
cmp ['[ebp+var_24],', '7FFEh']
jg ['short', 'loc_11C5']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '1']
jz ['short', 'loc_11CE']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
movsx ['eax,', 'word', 'ptr', '[ebp+var_24]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+58h],', 'ax']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
cwde
test ['eax,', 'eax']
jle ['short', 'loc_126A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_07JOJDIHPJ@typeMap?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
call ['_ures_getBinary_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+60h],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_123E']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
jmp ['short', 'loc_126A']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_126A']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
cwde
cmp ['[ebp+var_24],', 'eax']
jz ['short', 'loc_126A']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
push ['offset', '??_C@_09OAKPIPBL@finalRule?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_08PFKHFAOL@finalRaw?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
call ['_ures_getInt_56']
add ['esp,', '8']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
push ['offset', '??_C@_09MKDNPOFA@finalYear?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
push ['ecx']
call ['_ures_getInt_56']
add ['esp,', '8']
mov ['[ebp+var_E8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_153B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
push ['1']
lea ['ecx,', '[ebp+var_130]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_130]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?loadRule@TimeZone@icu_56@@KAPAUUResourceBundle@@PBU3@ABVUnicodeString@2@PAU3@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_13C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_13C]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_148],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_1508']
cmp ['[ebp+var_24],', '0Bh']
jnz ['loc_1508']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_190]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
push ['88h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_25C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_25C],', '0']
jz ['loc_1488']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_148]']
mov ['edx,', '[ecx+28h]']
imul ['edx,', '3E8h']
push ['edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_148]']
mov ['eax,', '[edx+20h]']
imul ['eax,', '3E8h']
push ['eax']
mov ['ecx,', '[ebp+var_148]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_148]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_148]']
movzx ['eax,', 'byte', 'ptr', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_148]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[eax+0Ch]']
imul ['ecx,', '3E8h']
push ['ecx']
mov ['edx,', '[ebp+var_148]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_148]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_148]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+var_190]']
push ['edx']
mov ['eax,', '[ebp+var_DC]']
imul ['eax,', '3E8h']
push ['eax']
mov ['ecx,', '[ebp+var_25C]']
call ['??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z']
mov ['[ebp+var_270],', 'eax']
jmp ['short', 'loc_1492']
mov ['[ebp+var_270],', '0']
mov ['ecx,', '[ebp+var_270]']
mov ['[ebp+var_268],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_268]']
mov ['[edx+64h],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jnz ['short', 'loc_14C2']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_14ED']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_E8]']
mov ['[eax+70h],', 'ecx']
push ['1']
push ['0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+70h]']
push ['ecx']
call ['?fieldsToDay@Grego@icu_56@@SANHHH@Z']
add ['esp,', '0Ch']
fmul ['ds:__real@4194997000000000']
mov ['edx,', '[ebp+var_18]']
fstp ['qword', 'ptr', '[edx+68h]']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_190]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1511']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_13C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_130]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_154C']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_154C']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?getCanonicalCLDRID@ZoneMeta@icu_56@@SAPB_WABVUnicodeString@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+74h],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_158E']
mov ['ecx,', '[ebp+var_18]']
call ['?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN44']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '270h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
dd ['offset', '$LN43']
dd ['offset', '$LN38']
dd ['0FFFFFF3Ch,', '98h']
dd ['offset', '$LN39']
dd ['0FFFFFED0h,', '40h']
dd ['offset', '$LN40']
dd ['0FFFFFE70h,', '40h']
dd ['offset', '$LN41']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1BasicTimeZone@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-130h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-190h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-25Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-274h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['__real@4194997000000000']
assume ['cs:_rdata']
public ['??_C@_09MKDNPOFA@finalYear?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08PFKHFAOL@finalRaw?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_09OAKPIPBL@finalRule?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07JOJDIHPJ@typeMap?$AA@']
assume ['cs:_rdata']
public ['??_C@_0M@OFKCJMFA@typeOffsets?$AA@']
assume ['cs:_rdata']
public ['??_C@_0M@MGHGDNHG@transPost32?$AA@']
assume ['cs:_rdata']
public ['??_C@_05JIFNPOFN@trans?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0L@DDPPGEMO@transPre32?$AA@']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4OlsonTimeZone@icu_56@@6B@']
public ['??_7OlsonTimeZone@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ']
dd ['offset', '??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z']
dd ['offset', '?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z']
dd ['offset', '?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z']
dd ['offset', '?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z']
dd ['offset', '?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z']
dd ['offset', '?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ']
dd ['offset', '?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ']
dd ['offset', '?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z']
dd ['offset', '?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z']
dd ['offset', '?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ']
dd ['offset', '?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ']
dd ['offset', '?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
dd ['offset', '?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
dd ['offset', '?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z']
dd ['offset', '?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z']
dd ['offset', '?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z']
dd ['offset', '?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z']
dd ['offset', '?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$3']
dd ['offset', '__unwindtable$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4OlsonTimeZone@icu_56@@6B@']
dd ['offset', '??_R0?AVOlsonTimeZone@icu_56@@@8']
dd ['offset', '??_R3OlsonTimeZone@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVOlsonTimeZone@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3OlsonTimeZone@icu_56@@8']
dd ['5']
dd ['offset', '??_R2OlsonTimeZone@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2OlsonTimeZone@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@BasicTimeZone@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@TimeZone@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@OlsonTimeZone@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3OlsonTimeZone@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BasicTimeZone@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3BasicTimeZone@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVBasicTimeZone@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3BasicTimeZone@icu_56@@8']
dd ['4']
dd ['offset', '??_R2BasicTimeZone@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2BasicTimeZone@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@TimeZone@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TimeZone@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3TimeZone@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVTimeZone@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3TimeZone@icu_56@@8']
dd ['3']
dd ['offset', '??_R2TimeZone@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2TimeZone@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0BasicTimeZone@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7OlsonTimeZone@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BasicTimeZone@icu_56@@UAE@XZ']
endp
__ehhandler$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+74h]']
mov ['[eax+74h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['[eax+4Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['[eax+50h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[eax+54h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+44h]']
mov ['[eax+44h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+46h]']
mov ['[eax+46h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+48h]']
mov ['[eax+48h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+58h]']
mov ['[eax+58h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax+5Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+60h]']
mov ['[eax+60h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1BC9']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1BD3']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_1C00']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1C0A']
mov ['[ebp+var_E8],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_E8]']
mov ['[ecx+64h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+70h]']
mov ['[eax+70h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
fld ['qword', 'ptr', '[ecx+68h]']
fstp ['qword', 'ptr', '[eax+68h]']
mov ['ecx,', '[ebp+var_8]']
call ['?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1OlsonTimeZone@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1OlsonTimeZone@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7OlsonTimeZone@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1CF0']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1CFA']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1BasicTimeZone@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1OlsonTimeZone@icu_56@@UAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1BasicTimeZone@icu_56@@UAE@XZ']
endp
__ehhandler$??1OlsonTimeZone@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1OlsonTimeZone@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1OlsonTimeZone@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1OlsonTimeZone@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_1E15']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['___RTtypeid']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['___RTtypeid']
add ['esp,', '4']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??8type_info@@QBE_NABV0@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1E0C']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??8TimeZone@icu_56@@UBECABV01@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E0C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1E15']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_1E1C']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['0A0h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1EBE']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1EC8']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0 proc	near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0']
dd ['offset', '__unwindtable$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_1F93']
cmp ['[ebp+arg_8],', '0Bh']
jle ['short', 'loc_1FB7']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1FB1']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1FFF']
jmp ['short', 'loc_1FFF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?monthLength@Grego@icu_56@@SACHH@Z']
add ['esp,', '8']
movsx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
movzx ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?monthLength@Grego@icu_56@@SACHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isLeapYear@Grego@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', 'byte', 'ptr', 'ds:?MONTH_LENGTH@Grego@icu_56@@0QBCB[edx+ecx]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLeapYear@Grego@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3']
jnz ['short', 'loc_20B9']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_20B0']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '190h']
idiv ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_20B9']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_20C0']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_210F']
xor ['eax,', 'eax']
jmp ['loc_2220']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '1']
jz ['short', 'loc_2120']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_2167']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_2167']
cmp ['[ebp+arg_8],', '0Bh']
jg ['short', 'loc_2167']
cmp ['[ebp+arg_C],', '1']
jl ['short', 'loc_2167']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_18]']
jg ['short', 'loc_2167']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jl ['short', 'loc_2167']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '7']
jg ['short', 'loc_2167']
cmp ['[ebp+arg_14],', '0']
jl ['short', 'loc_2167']
cmp ['[ebp+arg_14],', '5265C00h']
jge ['short', 'loc_2167']
cmp ['[ebp+arg_18],', '1Ch']
jl ['short', 'loc_2167']
cmp ['[ebp+arg_18],', '1Fh']
jle ['short', 'loc_2177']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_2220']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_2187']
mov ['eax,', '[ebp+arg_4]']
neg ['eax']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_21DB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+70h]']
jl ['short', 'loc_21DB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+64h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2220']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?fieldsToDay@Grego@icu_56@@SANHHH@Z']
add ['esp,', '0Ch']
fmul ['ds:__real@4194997000000000']
fiadd ['[ebp+arg_14]']
fstp ['[ebp+var_18]']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
push ['1']
push ['3']
push ['1']
sub ['esp,', '8']
fld ['[ebp+var_18]']
fstp ['[esp+11Ch+var_11C]']
mov ['ecx,', '[ebp+var_8]']
call ['?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN9']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN10']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_22B2']
jmp ['short', 'loc_2325']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2303']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+68h]']
fcomp ['[ebp+arg_0]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_2303']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0F0h+var_F0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+64h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2325']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0Ch']
push ['4']
movzx ['edx,', '[ebp+arg_8]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['qword', 'ptr', '[esp]']
mov ['ecx,', '[ebp+var_8]']
call ['?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2376']
jmp ['short', 'loc_23ED']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_23CA']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+68h]']
fcomp ['[ebp+arg_0]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_23CA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0F4h+var_F4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+64h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+4Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_23ED']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0F4h+var_F4]']
mov ['ecx,', '[ebp+var_8]']
call ['?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
push ['0']
call ['_uprv_getUTCtime_56']
fmul ['ds:__real@408f400000000000']
sub ['esp,', '8']
fstp ['[esp+104h+var_104]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN3']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN4']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN5']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movsx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jl ['short', 'loc_252E']
movsx ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
movsx ['ecx,', 'ax']
cmp ['esi,', 'ecx']
jl ['short', 'loc_2554']
mov ['edx,', 'ds:?__LINE__Var@?1??transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z@4JA']
add ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@FELEKEAE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1FM@GBLELPEG@?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAt?$AAr?$AAa?$AAn@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+44h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_2593']
movsx ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4Ch]']
mov ['eax,', '[edx+eax*4]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
movsx ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
mov ['esi,', '[ebp+var_8]']
mov ['esi,', '[esi+4Ch]']
mov ['ecx,', '[esi+ecx*4+4]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
jmp ['short', 'loc_2602']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+44h]']
movsx ['edx,', '[ebp+arg_0]']
sub ['edx,', 'ecx']
mov ['[ebp+arg_0],', 'dx']
movsx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+46h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_25C3']
movsx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+50h]']
mov ['eax,', '[edx+eax*4]']
cdq
jmp ['short', 'loc_2602']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+46h]']
movsx ['edx,', '[ebp+arg_0]']
sub ['edx,', 'ecx']
mov ['[ebp+arg_0],', 'dx']
movsx ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+54h]']
mov ['eax,', '[edx+eax*4]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
movsx ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '1']
mov ['esi,', '[ebp+var_8]']
mov ['esi,', '[esi+54h]']
mov ['ecx,', '[esi+ecx*4+4]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
public ['??_C@_1FM@GBLELPEG@?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAt?$AAr?$AAa?$AAn@']
unicode ['0,', '<transIdx', '>']
dw ['3Eh']
unicode ['0,', '<=', '0', '&&', 'transIdx', '>']
dw ['3Ch']
unicode ['0,', '<', 'transitionCount()>,0']
assume ['cs:_rdata']
public ['??_C@_1FI@FELEKEAE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\olsontz.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '154h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '55h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
mov ['[ebp+var_14],', 'ax']
movsx ['eax,', '[ebp+var_14]']
test ['eax,', 'eax']
jle ['loc_2A32']
fld ['[ebp+arg_0]']
fdiv ['ds:__real@408f400000000000']
sub ['esp,', '8']
fstp ['[esp+168h+var_168]']
call ['_uprv_floor_56']
add ['esp,', '8']
fstp ['[ebp+var_24]']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_277E']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z']
mov ['dword', 'ptr', '[ebp+var_154],', 'eax']
mov ['dword', 'ptr', '[ebp+var_154+4],', 'edx']
fild ['[ebp+var_154]']
fcomp ['[ebp+var_24]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['short', 'loc_277E']
mov ['ecx,', '[ebp+var_8]']
call ['?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
jmp ['loc_2A30']
movsx ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'ax']
jmp ['short', 'loc_2797']
mov ['ax,', '[ebp+var_30]']
sub ['ax,', '1']
mov ['[ebp+var_30],', 'ax']
movsx ['eax,', '[ebp+var_30]']
test ['eax,', 'eax']
jl ['loc_2A00']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_29EC']
mov ['eax,', 'dword', 'ptr', '[ebp+var_40]']
sub ['eax,', '15180h']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_40+4]']
sbb ['ecx,', '0']
mov ['dword', 'ptr', '[ebp+var_154],', 'eax']
mov ['dword', 'ptr', '[ebp+var_154+4],', 'ecx']
fild ['[ebp+var_154]']
fcomp ['[ebp+var_24]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['loc_29EC']
movsx ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
mov ['[ebp+var_4C],', 'eax']
movsx ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
test ['eax,', 'eax']
setnz ['cl']
mov ['[ebp+var_55],', 'cl']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
mov ['[ebp+var_64],', 'eax']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
test ['eax,', 'eax']
setnz ['cl']
mov ['[ebp+var_6D],', 'cl']
movsx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jz ['short', 'loc_2859']
movsx ['ecx,', '[ebp+var_6D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2859']
mov ['byte', 'ptr', '[ebp+var_154+7],', '1']
jmp ['short', 'loc_2860']
mov ['byte', 'ptr', '[ebp+var_154+7],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_154+7]']
mov ['[ebp+var_79],', 'dl']
movsx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jnz ['short', 'loc_2882']
movsx ['ecx,', '[ebp+var_6D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2882']
mov ['byte', 'ptr', '[ebp+var_154+7],', '1']
jmp ['short', 'loc_2889']
mov ['byte', 'ptr', '[ebp+var_154+7],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_154+7]']
mov ['[ebp+var_85],', 'dl']
mov ['eax,', '[ebp+var_64]']
sub ['eax,', '[ebp+var_4C]']
js ['loc_2949']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3']
cmp ['eax,', '1']
jnz ['short', 'loc_28B4']
movsx ['eax,', '[ebp+var_79]']
test ['eax,', 'eax']
jnz ['short', 'loc_28CA']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3']
cmp ['eax,', '3']
jnz ['short', 'loc_28DC']
movsx ['eax,', '[ebp+var_85]']
test ['eax,', 'eax']
jz ['short', 'loc_28DC']
mov ['eax,', '[ebp+var_4C]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_2944']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3']
cmp ['eax,', '1']
jnz ['short', 'loc_28F2']
movsx ['eax,', '[ebp+var_85]']
test ['eax,', 'eax']
jnz ['short', 'loc_2905']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3']
cmp ['eax,', '3']
jnz ['short', 'loc_2917']
movsx ['eax,', '[ebp+var_79]']
test ['eax,', 'eax']
jz ['short', 'loc_2917']
mov ['eax,', '[ebp+var_64]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_2944']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0Ch']
cmp ['eax,', '0Ch']
jnz ['short', 'loc_2934']
mov ['eax,', '[ebp+var_4C]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_2944']
mov ['eax,', '[ebp+var_64]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['loc_29EC']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '3']
cmp ['eax,', '1']
jnz ['short', 'loc_295C']
movsx ['eax,', '[ebp+var_79]']
test ['eax,', 'eax']
jnz ['short', 'loc_2972']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '3']
cmp ['eax,', '3']
jnz ['short', 'loc_2984']
movsx ['eax,', '[ebp+var_85]']
test ['eax,', 'eax']
jz ['short', 'loc_2984']
mov ['eax,', '[ebp+var_64]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_29EC']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '3']
cmp ['eax,', '1']
jnz ['short', 'loc_299A']
movsx ['eax,', '[ebp+var_85]']
test ['eax,', 'eax']
jnz ['short', 'loc_29AD']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '3']
cmp ['eax,', '3']
jnz ['short', 'loc_29BF']
movsx ['eax,', '[ebp+var_79]']
test ['eax,', 'eax']
jz ['short', 'loc_29BF']
mov ['eax,', '[ebp+var_4C]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_29EC']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0Ch']
cmp ['eax,', '4']
jnz ['short', 'loc_29DC']
mov ['eax,', '[ebp+var_4C]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_29EC']
mov ['eax,', '[ebp+var_64]']
cdq
add ['eax,', 'dword', 'ptr', '[ebp+var_40]']
adc ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
fild ['[ebp+var_40]']
fcomp ['[ebp+var_24]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_29FB']
jmp ['short', 'loc_2A00']
jmp ['loc_278B']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_2A58']
mov ['ecx,', '[ebp+var_8]']
call ['?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['_uprv_getUTCtime_56']
fstp ['[ebp+var_18]']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2AD7']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+68h]']
fcomp ['[ebp+var_18]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_2AD7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2BFA']
lea ['eax,', '[ebp+var_60]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_18]']
fstp ['[esp+194h+var_194]']
call ['?timeToFields@Grego@icu_56@@SAXNAAH00000@Z']
add ['esp,', '20h']
push ['1']
push ['0']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?fieldsToDay@Grego@icu_56@@SANHHH@Z']
add ['esp,', '0Ch']
fmul ['ds:__real@40f5180000000000']
fstp ['[ebp+var_70]']
push ['1']
push ['0']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
push ['eax']
call ['?fieldsToDay@Grego@icu_56@@SANHHH@Z']
add ['esp,', '0Ch']
fmul ['ds:__real@40f5180000000000']
fstp ['[ebp+var_80]']
xor ['eax,', 'eax']
mov ['[ebp+var_8C],', 'ax']
jmp ['short', 'loc_2B52']
mov ['ax,', '[ebp+var_8C]']
add ['ax,', '1']
mov ['[ebp+var_8C],', 'ax']
movsx ['esi,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
cwde
cmp ['esi,', 'eax']
jge ['loc_2BF8']
movzx ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z']
mov ['dword', 'ptr', '[ebp+var_168],', 'eax']
mov ['dword', 'ptr', '[ebp+var_168+4],', 'edx']
fild ['[ebp+var_168]']
fstp ['[ebp+var_9C]']
fld ['[ebp+var_80]']
fcomp ['[ebp+var_9C]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_2BA4']
jmp ['short', 'loc_2BF8']
fld ['[ebp+var_70]']
fcomp ['[ebp+var_9C]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_2BC8']
movzx ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_2BEF']
fld ['[ebp+var_70]']
fcomp ['[ebp+var_9C]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_2BF3']
movsx ['eax,', '[ebp+var_8C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z']
test ['eax,', 'eax']
jz ['short', 'loc_2BF3']
mov ['al,', '1']
jmp ['short', 'loc_2BFA']
jmp ['loc_2B40']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN17']
dd ['offset', '$LN11_0']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN12_0']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN13']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN14']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN15']
dd ['0FFFFFFA0h,', '4']
dd ['offset', '$LN16']
align ['4']
assume ['cs:_rdata']
public ['__real@40f5180000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2CE0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2CE8']
mov ['ecx,', '[ebp+var_8]']
call ['?getDSTSavings@TimeZone@icu_56@@UBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
push ['0']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+108h+var_108]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_20],', '0']
setnz ['al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN3_0']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN4_0']
jb ['short', 'loc_2E03']
ja ['short', '$+2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_2DD6']
mov ['al,', '1']
jmp ['loc_2FDA']
push ['0']
push ['offset', '??_R0?AVOlsonTimeZone@icu_56@@@8']
push ['offset', '??_R0?AVTimeZone@icu_56@@@8']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2E00']
xor ['al,', 'al']
jmp ['loc_2FDA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+60h]']
cmp ['edx,', '[ecx+60h]']
jnz ['short', 'loc_2E15']
mov ['al,', '1']
jmp ['loc_2FDA']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jnz ['short', 'loc_2E27']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jnz ['short', 'loc_2E64']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2E39']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2E64']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2E6B']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2E6B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+64h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+64h]']
call ['??9TimeZone@icu_56@@QBECABV01@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2E6B']
xor ['al,', 'al']
jmp ['loc_2FDA']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_2E9E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+70h]']
cmp ['edx,', '[ecx+70h]']
jnz ['short', 'loc_2E97']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
fld ['qword', 'ptr', '[eax+68h]']
fld ['qword', 'ptr', '[ecx+68h]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jnp ['short', 'loc_2E9E']
xor ['al,', 'al']
jmp ['loc_2FDA']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+58h]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'word', 'ptr', '[edx+58h]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_2EE6']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+44h]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'word', 'ptr', '[edx+44h]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_2EE6']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+46h]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'word', 'ptr', '[edx+46h]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_2EE6']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+48h]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'word', 'ptr', '[edx+48h]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_2EED']
xor ['al,', 'al']
jmp ['loc_2FDA']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+44h]']
shl ['ecx,', '2']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
call ['?arrayEqual@@YACPBX0H@Z']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_2FCD']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+46h]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+50h]']
push ['eax']
call ['?arrayEqual@@YACPBX0H@Z']
add ['esp,', '0Ch']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_2FCD']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+48h]']
shl ['eax,', '2']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
call ['?arrayEqual@@YACPBX0H@Z']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2FCD']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+58h]']
shl ['ecx,', '2']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+5Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+5Ch]']
push ['edx']
call ['?arrayEqual@@YACPBX0H@Z']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2FCD']
mov ['ecx,', '[ebp+var_8]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
movsx ['ecx,', 'ax']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+60h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+60h]']
push ['edx']
call ['?arrayEqual@@YACPBX0H@Z']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2FCD']
mov ['[ebp+var_D9],', '1']
jmp ['short', 'loc_2FD4']
mov ['[ebp+var_D9],', '0']
mov ['al,', '[ebp+var_D9]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?arrayEqual@@YACPBX0H@Z	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+Buf1],', '0']
jnz ['short', 'loc_301E']
cmp ['[ebp+Buf2],', '0']
jnz ['short', 'loc_301E']
mov ['al,', '1']
jmp ['short', 'loc_305F']
cmp ['[ebp+Buf1],', '0']
jz ['short', 'loc_302A']
cmp ['[ebp+Buf2],', '0']
jz ['short', 'loc_3036']
cmp ['[ebp+Buf1],', '0']
jnz ['short', 'loc_303A']
cmp ['[ebp+Buf2],', '0']
jz ['short', 'loc_303A']
xor ['al,', 'al']
jmp ['short', 'loc_305F']
mov ['eax,', '[ebp+Buf1]']
cmp ['eax,', '[ebp+Buf2]']
jnz ['short', 'loc_3046']
mov ['al,', '1']
jmp ['short', 'loc_305F']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+7Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+88h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8Ch],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+90h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+80h],', 'ax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '94h']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '154h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '55h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jz ['short', 'loc_31BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+78h]']
mov ['[ebp+var_140],', 'ecx']
mov ['edx,', '[ebp+var_140]']
mov ['[ebp+var_14C],', 'edx']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_31B2']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_14C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_14C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_31BC']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+7Ch],', '0']
jz ['short', 'loc_3215']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+7Ch]']
mov ['[ebp+var_128],', 'ecx']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_134],', 'edx']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_320B']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_134]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_134]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_3215']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+84h],', '0']
jz ['short', 'loc_3274']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'edx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_326A']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_3274']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+90h],', '0']
jz ['short', 'loc_32D3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+90h]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_32C9']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_104]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_32D3']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jz ['loc_3386']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_32F5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+8Ch]']
cmp ['[ebp+var_14],', 'ecx']
jge ['short', 'loc_3374']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+edx*4],', '0']
jz ['short', 'loc_336F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_3365']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_336F']
mov ['[ebp+var_154],', '0']
jmp ['loc_32EC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+88h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
call ['?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '?initRules@icu_56@@YAXPAVOlsonTimeZone@1@AAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '94h']
push ['edx']
call ['??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initRules@icu_56@@YAXPAVOlsonTimeZone@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '388h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_394]']
mov ['ecx,', '0E2h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_34A3']
jmp ['loc_4209']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_388]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_390],', 'eax']
mov ['eax,', '[ebp+var_390]']
mov ['[ebp+var_394],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_394]']
push ['ecx']
lea ['edx,', '[ebp+var_60]']
push ['edx']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_388]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_340]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_390],', 'eax']
mov ['eax,', '[ebp+var_390]']
mov ['[ebp+var_394],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_394]']
push ['ecx']
lea ['edx,', '[ebp+var_60]']
push ['edx']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_340]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
call ['?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ']
imul ['eax,', '3E8h']
mov ['[ebp+var_FC],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ']
imul ['eax,', '3E8h']
mov ['[ebp+var_108],', 'eax']
mov ['esi,', 'esp']
push ['4Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
cmp ['[ebp+var_2EC],', '0']
jz ['short', 'loc_3658']
cmp ['[ebp+var_108],', '0']
jnz ['short', 'loc_3618']
lea ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_390],', 'eax']
jmp ['short', 'loc_3624']
lea ['ecx,', '[ebp+var_F0]']
mov ['[ebp+var_390],', 'ecx']
mov ['edx,', '[ebp+var_390]']
mov ['[ebp+var_2E0],', 'edx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
mov ['edx,', '[ebp+var_2E0]']
push ['edx']
mov ['ecx,', '[ebp+var_2EC]']
call ['??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z']
mov ['[ebp+var_394],', 'eax']
jmp ['short', 'loc_3662']
mov ['[ebp+var_394],', '0']
mov ['eax,', '[ebp+var_394]']
mov ['[ebp+var_2F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_2F8]']
mov ['[ecx+78h],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jnz ['short', 'loc_36E8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
cwde
mov ['[ebp+var_114],', 'eax']
cmp ['[ebp+var_114],', '0']
jle ['loc_3C9F']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+80h],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_120],', 'ax']
jmp ['short', 'loc_372D']
mov ['ax,', '[ebp+var_120]']
add ['ax,', '1']
mov ['[ebp+var_120],', 'ax']
movsx ['eax,', '[ebp+var_120]']
cmp ['eax,', '[ebp+var_114]']
jge ['short', 'loc_376D']
movsx ['eax,', '[ebp+var_120]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+60h]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
test ['eax,', 'eax']
jz ['short', 'loc_3753']
jmp ['short', 'loc_376D']
mov ['eax,', '[ebp+var_18]']
mov ['cx,', '[eax+80h]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+80h],', 'cx']
jmp ['short', 'loc_371B']
movsx ['eax,', '[ebp+var_120]']
cmp ['eax,', '[ebp+var_114]']
jnz ['short', 'loc_3781']
jmp ['loc_3C9F']
mov ['eax,', '[ebp+var_114]']
shl ['eax,', '3']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '0']
jnz ['short', 'loc_3803']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
xor ['eax,', 'eax']
mov ['[ebp+var_12C],', 'ax']
jmp ['short', 'loc_3820']
mov ['ax,', '[ebp+var_12C]']
add ['ax,', '1']
mov ['[ebp+var_12C],', 'ax']
movsx ['eax,', '[ebp+var_12C]']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx+58h]']
cmp ['eax,', 'edx']
jge ['loc_3B76']
mov ['[ebp+var_144],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['cx,', '[eax+80h]']
mov ['[ebp+var_120],', 'cx']
jmp ['short', 'loc_3865']
mov ['ax,', '[ebp+var_120]']
add ['ax,', '1']
mov ['[ebp+var_120],', 'ax']
movsx ['eax,', '[ebp+var_120]']
cmp ['eax,', '[ebp+var_114]']
jge ['short', 'loc_38EB']
movsx ['eax,', '[ebp+var_12C]']
movsx ['ecx,', '[ebp+var_120]']
mov ['edx,', '[ebp+var_18]']
mov ['edx,', '[edx+60h]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_38E6']
movzx ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z']
fstp ['[ebp+var_154]']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_38C2']
mov ['eax,', '[ebp+var_18]']
fld ['qword', 'ptr', '[eax+68h]']
fcomp ['[ebp+var_154]']
fnstsw ['ax']
test ['ah,', '1']
jnz ['short', 'loc_38E6']
mov ['eax,', '[ebp+var_144]']
mov ['ecx,', '[ebp+var_138]']
fld ['[ebp+var_154]']
fstp ['qword', 'ptr', '[ecx+eax*8]']
mov ['edx,', '[ebp+var_144]']
add ['edx,', '1']
mov ['[ebp+var_144],', 'edx']
jmp ['loc_3853']
cmp ['[ebp+var_144],', '0']
jle ['loc_3B71']
movsx ['eax,', '[ebp+var_12C]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+5Ch]']
mov ['eax,', '[edx+eax*4]']
imul ['eax,', '3E8h']
mov ['[ebp+var_FC],', 'eax']
movsx ['eax,', '[ebp+var_12C]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+5Ch]']
mov ['eax,', '[edx+eax*4+4]']
imul ['eax,', '3E8h']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jnz ['loc_3A36']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_18]']
mov ['dx,', '[ecx+58h]']
mov ['[eax+8Ch],', 'dx']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'word', 'ptr', '[eax+8Ch]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+88h],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jnz ['short', 'loc_39F1']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
mov ['[ebp+var_160],', '0']
jmp ['short', 'loc_3A0C']
mov ['eax,', '[ebp+var_160]']
add ['eax,', '1']
mov ['[ebp+var_160],', 'eax']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'word', 'ptr', '[eax+8Ch]']
cmp ['[ebp+var_160],', 'ecx']
jge ['short', 'loc_3A36']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_160]']
mov ['dword', 'ptr', '[ecx+edx*4],', '0']
jmp ['short', 'loc_39FD']
mov ['esi,', 'esp']
push ['158h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
cmp ['[ebp+var_2C8],', '0']
jz ['short', 'loc_3AC7']
cmp ['[ebp+var_108],', '0']
jnz ['short', 'loc_3A77']
lea ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_390],', 'eax']
jmp ['short', 'loc_3A83']
lea ['ecx,', '[ebp+var_F0]']
mov ['[ebp+var_390],', 'ecx']
mov ['edx,', '[ebp+var_390]']
mov ['[ebp+var_2BC],', 'edx']
push ['2']
mov ['eax,', '[ebp+var_144]']
push ['eax']
mov ['ecx,', '[ebp+var_138]']
push ['ecx']
mov ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
mov ['ecx,', '[ebp+var_2BC]']
push ['ecx']
mov ['ecx,', '[ebp+var_2C8]']
call ['??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z']
mov ['[ebp+var_394],', 'eax']
jmp ['short', 'loc_3AD1']
mov ['[ebp+var_394],', '0']
mov ['edx,', '[ebp+var_394]']
mov ['[ebp+var_2D4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
movsx ['eax,', '[ebp+var_12C]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['ecx,', '[ebp+var_2D4]']
mov ['[edx+eax*4],', 'ecx']
movsx ['eax,', '[ebp+var_12C]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
cmp ['dword', 'ptr', '[edx+eax*4],', '0']
jnz ['short', 'loc_3B71']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
jmp ['loc_380E']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'word', 'ptr', '[eax+80h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+60h]']
movzx ['cx,', 'byte', 'ptr', '[eax+ecx]']
mov ['[ebp+var_12C],', 'cx']
mov ['esi,', 'esp']
push ['18h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2A4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
cmp ['[ebp+var_2A4],', '0']
jz ['short', 'loc_3C0F']
movsx ['eax,', '[ebp+var_12C]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['eax,', '[edx+eax*4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+78h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'word', 'ptr', '[eax+80h]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z']
sub ['esp,', '8']
fstp ['[esp+3B4h+var_3B4]']
mov ['ecx,', '[ebp+var_2A4]']
call ['??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z']
mov ['[ebp+var_390],', 'eax']
jmp ['short', 'loc_3C19']
mov ['[ebp+var_390],', '0']
mov ['edx,', '[ebp+var_390]']
mov ['[ebp+var_2B0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_2B0]']
mov ['[eax+7Ch],', 'ecx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+7Ch],', '0']
jnz ['short', 'loc_3C9F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['loc_41BE']
mov ['eax,', '[ebp+var_18]']
fld ['qword', 'ptr', '[eax+68h]']
fstp ['[ebp+var_170]']
mov ['[ebp+var_17C],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3EAB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+90h],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+90h],', '0']
jnz ['short', 'loc_3D7F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+70h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+90h]']
call ['?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z']
lea ['ecx,', '[ebp+var_19C]']
call ['??0TimeZoneTransition@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_19C]']
push ['eax']
push ['0']
sub ['esp,', '8']
fld ['[ebp+var_170]']
fstp ['[esp+3B4h+var_3B4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+90h]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+90h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_19C]']
call ['?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ']
mov ['[ebp+var_390],', 'eax']
mov ['eax,', '[ebp+var_390]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_390]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_17C],', 'eax']
cmp ['[ebp+var_17C],', '0']
jnz ['short', 'loc_3E86']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_19C]']
call ['??1TimeZoneTransition@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
lea ['ecx,', '[ebp+var_19C]']
call ['?getTime@TimeZoneTransition@icu_56@@QBENXZ']
fstp ['[ebp+var_170]']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_19C]']
call ['??1TimeZoneTransition@icu_56@@UAE@XZ']
jmp ['loc_4049']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+90h],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+90h],', '0']
jnz ['short', 'loc_3F3F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+64h]']
call ['?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
mov ['esi,', 'esp']
push ['158h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
cmp ['[ebp+var_28C],', '0']
jz ['short', 'loc_3FB9']
push ['2']
push ['1']
lea ['eax,', '[ebp+var_170]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+64h]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+var_28C]']
call ['??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z']
mov ['[ebp+var_390],', 'eax']
jmp ['short', 'loc_3FC3']
mov ['[ebp+var_390],', '0']
mov ['edx,', '[ebp+var_390]']
mov ['[ebp+var_298],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_298]']
mov ['[ebp+var_17C],', 'eax']
cmp ['[ebp+var_17C],', '0']
jnz ['short', 'loc_4049']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
mov ['[ebp+var_1A8],', '0']
cmp ['[ebp+var_114],', '0']
jle ['short', 'loc_407F']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[ebp+var_114]']
movzx ['eax,', 'byte', 'ptr', '[ecx+edx-1]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_1A8],', 'eax']
cmp ['[ebp+var_1A8],', '0']
jnz ['short', 'loc_4094']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+78h]']
mov ['[ebp+var_1A8],', 'ecx']
mov ['esi,', 'esp']
push ['18h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_274],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
cmp ['[ebp+var_274],', '0']
jz ['short', 'loc_40CE']
mov ['ecx,', '[ebp+var_274]']
call ['??0TimeZoneTransition@icu_56@@QAE@XZ']
mov ['[ebp+var_390],', 'eax']
jmp ['short', 'loc_40D8']
mov ['[ebp+var_390],', '0']
mov ['eax,', '[ebp+var_390]']
mov ['[ebp+var_280],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_280]']
mov ['[ecx+84h],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+84h],', '0']
jnz ['short', 'loc_4164']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_18]']
call ['?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4209']
sub ['esp,', '8']
fld ['[ebp+var_170]']
fstp ['[esp+3ACh+var_3AC]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
call ['?setTime@TimeZoneTransition@icu_56@@QAEXN@Z']
mov ['eax,', '[ebp+var_1A8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1A8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+84h]']
call ['?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z']
mov ['eax,', '[ebp+var_17C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+84h]']
call ['?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN72']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '394h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN71']
dd ['offset', '$LN65']
dd ['0FFFFFF58h,', '40h']
dd ['offset', '$LN66']
dd ['0FFFFFF10h,', '40h']
dd ['offset', '$LN67']
db ['90h']
db ['0FEh,', '2', 'dup(0FFh)']
dd ['8']
dd ['offset', '$LN68']
dd ['0FFFFFE64h,', '18h']
dd ['offset', '$LN69']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-388h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0A8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$3 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-340h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$4 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0F0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$5 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-2ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$6 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-2C8h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$7 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-2A4h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$8 proc near
lea ['ecx,', '[ebp-19Ch]']
jmp ['??1TimeZoneTransition@icu_56@@UAE@XZ']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$9 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-28Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$10 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-274h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-398h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<(DST)>,0']
assume ['cs:_rdata']
public ['??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<(STD)>,0']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$2']
align ['10h']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$2']
dd ['3']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$3']
dd ['4']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$4']
dd ['3']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$4']
dd ['6']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$5']
dd ['6']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$6']
dd ['6']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$7']
dd ['6']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$8']
dd ['6']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$9']
dd ['6']
dd ['offset', '__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$10']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1E0]']
mov ['ecx,', '75h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_44DE']
xor ['al,', 'al']
jmp ['loc_488D']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['loc_45A7']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_4528']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
call ['?getTime@TimeZoneTransition@icu_56@@QBENXZ']
fld ['[ebp+arg_0]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_4528']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z']
mov ['al,', '1']
jmp ['loc_488D']
jmp ['short', 'loc_45A7']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
call ['?getTime@TimeZoneTransition@icu_56@@QBENXZ']
fcomp ['[ebp+arg_0]']
fnstsw ['ax']
test ['ah,', '41h']
jp ['short', 'loc_45A7']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_45A0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+200h+var_200]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+90h]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+90h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_488D']
jmp ['short', 'loc_45A7']
xor ['al,', 'al']
jmp ['loc_488D']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jz ['loc_488B']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
mov ['[ebp+var_30],', 'ax']
movsx ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_3C],', 'ax']
jmp ['short', 'loc_45DC']
mov ['ax,', '[ebp+var_3C]']
sub ['ax,', '1']
mov ['[ebp+var_3C],', 'ax']
movsx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx+80h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_4626']
movzx ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z']
fstp ['[ebp+var_4C]']
fld ['[ebp+var_4C]']
fcomp ['[ebp+arg_0]']
fnstsw ['ax']
test ['ah,', '5']
jnp ['short', 'loc_4622']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_4624']
fld ['[ebp+arg_0]']
fld ['[ebp+var_4C]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_4624']
jmp ['short', 'loc_4626']
jmp ['short', 'loc_45D0']
movsx ['eax,', '[ebp+var_3C]']
movsx ['ecx,', '[ebp+var_30]']
sub ['ecx,', '1']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_4668']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+84h],', '0']
jz ['short', 'loc_465C']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z']
mov ['al,', '1']
jmp ['loc_488D']
jmp ['short', 'loc_4663']
xor ['al,', 'al']
jmp ['loc_488D']
jmp ['loc_488B']
movsx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx+80h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_4695']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+7Ch]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z']
mov ['al,', '1']
jmp ['loc_488D']
jmp ['loc_488B']
movsx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+60h]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax+1]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_58],', 'eax']
movsx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+60h]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_64],', 'eax']
movsx ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z']
fstp ['[ebp+var_74]']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_BC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_104]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_BC]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
call ['?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
lea ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+var_58]']
call ['?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_104]']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_47F8']
mov ['ecx,', '[ebp+var_64]']
call ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_58]']
call ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['loc_47F8']
mov ['ecx,', '[ebp+var_64]']
call ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_58]']
call ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_47F8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
sub ['esp,', '8']
fld ['[ebp+var_74]']
fstp ['[esp+200h+var_200]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D9],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_104]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_BC]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1D9]']
jmp ['loc_488D']
sub ['esp,', '8']
fld ['[ebp+var_74]']
fstp ['qword', 'ptr', '[esp]']
mov ['ecx,', '[ebp+arg_C]']
call ['?setTime@TimeZoneTransition@icu_56@@QAEXN@Z']
mov ['eax,', '[ebp+var_64]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_64]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z']
mov ['eax,', '[ebp+var_58]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_58]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z']
mov ['[ebp+var_1CD],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_104]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_BC]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1CD]']
jmp ['short', 'loc_488D']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN29']
dd ['offset', '$LN25']
dd ['0FFFFFF44h,', '40h']
dd ['offset', '$LN26']
dd ['0FFFFFEFCh,', '40h']
dd ['offset', '$LN27']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0BCh]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-104h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1E4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1']
dd ['offset', '__unwindtable$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1C8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1D4]']
mov ['ecx,', '72h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4A0A']
xor ['al,', 'al']
jmp ['loc_4DA0']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['loc_4AE8']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_4A57']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
call ['?getTime@TimeZoneTransition@icu_56@@QBENXZ']
fld ['[ebp+arg_0]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_4A57']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z']
mov ['al,', '1']
jmp ['loc_4DA0']
jmp ['loc_4AE8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
call ['?getTime@TimeZoneTransition@icu_56@@QBENXZ']
fcomp ['[ebp+arg_0]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_4AE8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4ACF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+1F0h+var_1F0]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+90h]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+90h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4DA0']
jmp ['short', 'loc_4AE8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z']
mov ['al,', '1']
jmp ['loc_4DA0']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jz ['loc_4D9E']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ']
cwde
sub ['eax,', '1']
mov ['[ebp+var_30],', 'ax']
jmp ['short', 'loc_4B16']
mov ['ax,', '[ebp+var_30]']
sub ['ax,', '1']
mov ['[ebp+var_30],', 'ax']
movsx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx+80h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_4B60']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z']
fstp ['[ebp+var_40]']
fld ['[ebp+var_40]']
fcomp ['[ebp+arg_0]']
fnstsw ['ax']
test ['ah,', '5']
jnp ['short', 'loc_4B5C']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_4B5E']
fld ['[ebp+arg_0]']
fld ['[ebp+var_40]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_4B5E']
jmp ['short', 'loc_4B60']
jmp ['short', 'loc_4B0A']
movsx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx+80h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_4B7E']
xor ['al,', 'al']
jmp ['loc_4DA0']
jmp ['loc_4D9E']
movsx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx+80h]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_4BAB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+7Ch]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z']
mov ['al,', '1']
jmp ['loc_4DA0']
jmp ['loc_4D9E']
movsx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+60h]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_4C],', 'eax']
movsx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+60h]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax-1]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+88h]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_58],', 'eax']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z']
fstp ['[ebp+var_68]']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_58]']
call ['?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
lea ['eax,', '[ebp+var_F8]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
call ['?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_F8]']
push ['eax']
lea ['ecx,', '[ebp+var_B0]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_4D0B']
mov ['ecx,', '[ebp+var_58]']
call ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4C]']
call ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['loc_4D0B']
mov ['ecx,', '[ebp+var_58]']
call ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4C]']
call ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_4D0B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
sub ['esp,', '8']
fld ['[ebp+var_68]']
fstp ['qword', 'ptr', '[esp]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1CD],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1CD]']
jmp ['loc_4DA0']
sub ['esp,', '8']
fld ['[ebp+var_68]']
fstp ['[esp+1ECh+var_1F0+4]']
mov ['ecx,', '[ebp+arg_C]']
call ['?setTime@TimeZoneTransition@icu_56@@QAEXN@Z']
mov ['eax,', '[ebp+var_58]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_58]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z']
mov ['eax,', '[ebp+var_4C]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4C]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z']
mov ['[ebp+var_1C1],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_F8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1C1]']
jmp ['short', 'loc_4DA0']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
dd ['offset', '$LN27_0']
dd ['offset', '$LN23']
dd ['0FFFFFF50h,', '40h']
dd ['offset', '$LN24']
db ['8,', '0FFh']
dw ['0FFFFh']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN25_0']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0B0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0F8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1D8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1']
dd ['offset', '__unwindtable$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4EE7']
xor ['eax,', 'eax']
jmp ['loc_4FA5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4F0F']
xor ['eax,', 'eax']
jmp ['loc_4FA5']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jz ['short', 'loc_4F60']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4F34']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+8Ch]']
cmp ['[ebp+var_20],', 'ecx']
jge ['short', 'loc_4F60']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+edx*4],', '0']
jz ['short', 'loc_4F5E']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_4F2B']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+64h],', '0']
jz ['short', 'loc_4FA2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+64h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4F99']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_4FA2']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4FF9']
jmp ['loc_512C']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_501F']
jmp ['loc_512C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+78h]']
mov ['[eax],', 'edx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+88h],', '0']
jz ['short', 'loc_50A9']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_50A9']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_5059']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+8Ch]']
cmp ['[ebp+var_20],', 'ecx']
jge ['short', 'loc_50A9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+edx*4],', '0']
jz ['short', 'loc_50A7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_4]']
mov ['esi,', '[ebp+var_20]']
mov ['ecx,', '[ecx+esi*4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_50A7']
jmp ['short', 'loc_50A9']
jmp ['short', 'loc_5050']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+90h],', '0']
jz ['short', 'loc_5124']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_5124']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+90h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+90h]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+44h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_511B']
jmp ['short', 'loc_512C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN15_0']
dd ['offset', '$LN13_0']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN14_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_51BC']
jmp ['loc_5245']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_5224']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5224']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5245']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5245']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__fltused:near']
extrn ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z:near']
extrn ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z:near']
extrn ['?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z:near']
extrn ['?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:near']
extrn ['?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:near']
extrn ['?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:near']
extrn ['?weekNumber@Calendar@icu_56@@IAEHHHH@Z:near']
extrn ['??1BasicTimeZone@icu_56@@UAE@XZ:near']
extrn ['?getCanonicalCLDRID@ZoneMeta@icu_56@@SAPB_WABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['_ures_close_56:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?fieldsToDay@Grego@icu_56@@SANHHH@Z:near']
extrn ['??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['?loadRule@TimeZone@icu_56@@KAPAUUResourceBundle@@PBU3@ABVUnicodeString@2@PAU3@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['_ures_getInt_56:near']
extrn ['_ures_getStringByKey_56:near']
extrn ['_ures_getBinary_56:near']
extrn ['_ures_getIntVector_56:near']
extrn ['_ures_getByKey_56:near']
extrn ['_ures_initStackObject_56:near']
extrn ['??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z:near']
extrn ['?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z:near']
extrn ['??0BasicTimeZone@icu_56@@IAE@ABV01@@Z:near']
extrn ['??8TimeZone@icu_56@@UBECABV01@@Z:near']
extrn ['__imp_??8type_info@@QBE_NABV0@@Z:near']
extrn ['___RTtypeid:near']
extrn ['?MONTH_LENGTH@Grego@icu_56@@0QBCB:near']
extrn ['_uprv_getUTCtime_56:near']
extrn ['__imp___wassert:near']
extrn ['__allshl:near']
extrn ['_uprv_floor_56:near']
extrn ['?timeToFields@Grego@icu_56@@SAXNAAH00000@Z:near']
extrn ['?getDSTSavings@TimeZone@icu_56@@UBEHXZ:near']
extrn ['___RTDynamicCast:near']
extrn ['_memcmp:near']
extrn ['_uprv_free_56:near']
extrn ['?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z:near']
extrn ['?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z:near']
extrn ['?setTime@TimeZoneTransition@icu_56@@QAEXN@Z:near']
extrn ['?getTime@TimeZoneTransition@icu_56@@QBENXZ:near']
extrn ['??1TimeZoneTransition@icu_56@@UAE@XZ:near']
extrn ['?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ:near']
extrn ['??0TimeZoneTransition@icu_56@@QAE@XZ:near']
extrn ['?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z:near']
extrn ['??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z:near']
extrn ['??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z:near']
extrn ['_uprv_malloc_56:near']
extrn ['??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z:near']
extrn ['__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:near']
extrn ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:near']
extrn ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:near']
extrn ['??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
end

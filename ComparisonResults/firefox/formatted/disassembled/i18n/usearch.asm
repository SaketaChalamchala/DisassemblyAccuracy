endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_open_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1AA']
xor ['eax,', 'eax']
jmp ['loc_237']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_22C']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_ucol_open_56']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_usearch_openFromCollator_56']
add ['esp,', '1Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_205']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_21D']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_217']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ucol_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_237']
jmp ['short', 'loc_227']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+103Ch],', '1']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_237']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_openFromCollator_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2B2']
xor ['eax,', 'eax']
jmp ['loc_623']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2C4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2C4']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_2D4']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_623']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_ucol_getAttribute_56']
add ['esp,', '0Ch']
cmp ['eax,', '11h']
jnz ['short', 'loc_2FB']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_623']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_621']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
call ['?initializeFCD@@YAXPAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_33C']
xor ['eax,', 'eax']
jmp ['loc_623']
cmp ['[ebp+arg_C],', '0FFFFFFFFh']
jnz ['short', 'loc_351']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_C],', 'eax']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_366']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_372']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_382']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_623']
push ['1450h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3A8']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_623']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+1028h],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_ucol_getStrength_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1040h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1040h]']
push ['ecx']
call ['?getMask@@YAIW4UColAttributeValue@@@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1044h],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_ucol_getAttribute_56']
add ['esp,', '0Ch']
cmp ['eax,', '14h']
setz ['dl']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+104Ch],', 'dl']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_ucol_getVariableTop_56']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1048h],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+102Ch],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_465']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_623']
push ['20h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_498']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_623']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+41Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_14]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1028h]']
push ['edx']
call ['_ucol_getLocaleByType_56']
add ['esp,', '0Ch']
push ['eax']
push ['0']
call ['_ubrk_open_56']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_536']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['_ubrk_setText_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+103Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1038h],', '0']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_ucol_openElements_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1030h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1034h],', '0']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5B8']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_usearch_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_623']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+9],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
mov ['[ecx+0Ah],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Ch],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Dh],', '1']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_61C']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_usearch_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_623']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_623']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMask@@YAIW4UColAttributeValue@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0']
jz ['short', 'loc_69F']
cmp ['[ebp+var_C4],', '1']
jz ['short', 'loc_6A6']
jmp ['short', 'loc_6AD']
mov ['eax,', '0FFFF0000h']
jmp ['short', 'loc_6B0']
mov ['eax,', '0FFFFFF00h']
jmp ['short', 'loc_6B0']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initializeFCD@@YAXPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_g_nfcImpl,', '0']
jnz ['short', 'loc_709']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_g_nfcImpl,', 'eax']
push ['offset', '_usearch_cleanup']
push ['14h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_cleanup proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ds:_g_nfcImpl,', '0']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initializePattern@@YAFPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_833']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['loc_833']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+var_8]']
cmp ['[ebp+var_20],', 'eax']
jle ['short', 'loc_7D9']
movsx ['ecx,', 'word', 'ptr', '[ebp+var_20]']
movsx ['edx,', '[ebp+var_8]']
sub ['ecx,', 'edx']
mov ['[ebp+var_F4],', 'ecx']
jmp ['short', 'loc_7E3']
mov ['[ebp+var_F4],', '1']
mov ['ax,', 'word', 'ptr', '[ebp+var_F4]']
mov ['[ebp+var_2C],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[ebp+var_2C]']
mov ['[eax+0C1Ah],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
push ['eax']
movzx ['ecx,', '[ebp+var_2C]']
push ['ecx']
movzx ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0E1Eh']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0C1Ch']
push ['ecx']
call ['?setShiftTable@@YAXQAF0PAHHFFF@Z']
add ['esp,', '1Ch']
jmp ['short', 'loc_83F']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0C22h],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initializePattern@@YAFPAUUStringSearch@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_88E']
xor ['eax,', 'eax']
jmp ['loc_9B7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1040h],', '0']
jnz ['short', 'loc_8D4']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0C18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0C19h],', '0']
jmp ['loc_969']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['?getFCD@@YAGPB_WPAHH@Z']
add ['esp,', '0Ch']
movzx ['eax,', 'ax']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0C18h],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_944']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_944']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_944']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['?getFCD@@YAGPB_WPAHH@Z']
add ['esp,', '0Ch']
movzx ['eax,', 'ax']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0C19h],', 'al']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+41Ch],', '0']
jz ['short', 'loc_9A7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '420h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+41Ch],', 'eax']
jz ['short', 'loc_99A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+41Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+41Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initializePatternCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN10']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD@@YAGPB_WPAHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['esi,', 'esp']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', 'ds:_g_nfcImpl']
call ['dword', 'ptr', 'ds:__imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'ax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['ax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initializePatternCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '100h']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1038h]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_B23']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1028h]']
push ['edx']
call ['_ucol_openElements_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+1038h],', 'ecx']
jmp ['short', 'loc_B40']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ucol_setText_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B5C']
xor ['eax,', 'eax']
jmp ['loc_CA3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+Src]']
jz ['short', 'loc_B7F']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_B7F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_50],', 'ax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_ucol_next_56']
add ['esp,', '8']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0FFFFFFFFh']
jz ['loc_C7E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_C7E']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getCE@@YAHPBUUStringSearch@@I@Z']
add ['esp,', '8']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_C59']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', 'eax']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
movzx ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['?addTouint32_tArray@@YAPAHPAHIPAIIIPAW4UErrorCode@@@Z']
add ['esp,', '18h']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C28']
xor ['eax,', 'eax']
jmp ['short', 'loc_CA3']
mov ['ax,', '[ebp+var_44]']
add ['ax,', '1']
mov ['[ebp+var_44],', 'ax']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+var_74]']
jz ['short', 'loc_C53']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
cmp ['[ebp+Src],', 'eax']
jz ['short', 'loc_C53']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_ucol_getMaxExpansion_56']
add ['esp,', '8']
sub ['eax,', '1']
movzx ['edx,', 'ax']
movzx ['eax,', '[ebp+var_50]']
add ['eax,', 'edx']
mov ['[ebp+var_50],', 'ax']
jmp ['loc_B8B']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+Src]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Src]']
mov ['[eax+0Ch],', 'ecx']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['ax,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN13']
dd ['offset', '$LN12']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE@@YAHPBUUStringSearch@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '[eax+1044h]']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+104Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D53']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1048h]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_D51']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1040h],', '3']
jl ['short', 'loc_D4A']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFF0000h']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_D51']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_D6C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1040h],', '3']
jl ['short', 'loc_D6C']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_D6C']
mov ['[ebp+arg_4],', '0FFFFh']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addTouint32_tArray@@YAPAHPAHIPAIIIPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_E14']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '2']
push ['ecx']
call ['?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_DE1']
xor ['eax,', 'eax']
jmp ['short', 'loc_E23']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+Src]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_E74']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShiftTable@@YAXQAF0PAHHFFF@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_EBC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '101h']
jge ['short', 'loc_ED5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+arg_14]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_EB3']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+arg_C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_EF0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_F42']
movsx ['eax,', '[ebp+arg_14]']
sub ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1']
jle ['short', 'loc_F16']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_F20']
mov ['[ebp+var_DC],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['?hashFromCE32@@YAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_DC]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_EE7']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['?hashFromCE32@@YAHI@Z']
add ['esp,', '4']
mov ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*2],', 'cx']
push ['0']
call ['?hashFromCE32@@YAHI@Z']
add ['esp,', '4']
mov ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*2],', 'cx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_F88']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '101h']
jge ['short', 'loc_FA1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ebp+arg_18]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_F7F']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_FB2']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_1001']
movsx ['eax,', '[ebp+arg_10]']
cmp ['[ebp+var_8],', 'eax']
jle ['short', 'loc_FD5']
movsx ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', 'ecx']
movsx ['eax,', 'dx']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_FDF']
mov ['[ebp+var_DC],', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['?hashFromCE32@@YAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', 'word', 'ptr', '[ebp+var_DC]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_FA9']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?hashFromCE32@@YAHI@Z']
add ['esp,', '4']
mov ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+eax*2],', 'dx']
push ['0']
call ['?hashFromCE32@@YAHI@Z']
add ['esp,', '4']
mov ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+eax*2],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashFromCE32@@YAHI@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
imul ['eax,', '25h']
mov ['ecx,', '[ebp+arg_0]']
shr ['ecx,', '10h']
add ['eax,', 'ecx']
imul ['eax,', '25h']
mov ['edx,', '[ebp+arg_0]']
shr ['edx,', '8']
add ['eax,', 'edx']
imul ['eax,', '25h']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['ecx,', '101h']
idiv ['ecx']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_10AA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '101h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_close_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['loc_11FC']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+14h],', 'eax']
jz ['short', 'loc_1102']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_1102']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+41Ch],', '0']
jz ['short', 'loc_1133']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '420h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+41Ch],', 'eax']
jz ['short', 'loc_1133']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+41Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1034h]']
mov ['[ebp+var_C8],', 'ecx']
mov ['edx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_116C']
push ['1']
mov ['ecx,', '[ebp+var_D4]']
call ['??_GUCollationPCE@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_1176']
mov ['[ebp+var_DC],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_closeElements_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1038h]']
push ['ecx']
call ['_ucol_closeElements_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+103Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11C6']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1028h],', '0']
jz ['short', 'loc_11C6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1028h]']
push ['ecx']
call ['_ucol_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_11E2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_ubrk_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUCollationPCE@icu_56@@QAEPAXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UCollationPCE@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1259']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_12CD']
xor ['al,', 'al']
jmp ['loc_1388']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1034h],', '0']
jnz ['loc_136E']
mov ['esi,', 'esp']
push ['120h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_1327']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
mov ['ecx,', '[ebp+var_D4]']
call ['??0UCollationPCE@icu_56@@QAE@PAUUCollationElements@@@Z']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1331']
mov ['[ebp+var_E8],', '0']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_E0],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_E0]']
mov ['[eax+1034h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1034h],', '0']
jnz ['short', 'loc_136C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['al,', 'al']
jmp ['short', 'loc_1388']
jmp ['short', 'loc_1386']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+1034h]']
call ['?init@UCollationPCE@icu_56@@QAEXPAUUCollationElements@@@Z']
mov ['al,', '1']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0D4h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_setOffset_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_14A3']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_14A3']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['?isOutOfBounds@@YACHH@Z']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_146C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '8']
jmp ['short', 'loc_1482']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1030h]']
push ['edx']
call ['?setColEIterOffset@@YAXPAUUCollationElements@@H@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Dh],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setColEIterOffset@@YAXPAUUCollationElements@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isOutOfBounds@@YACHH@Z	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_1569']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_0]']
jg ['short', 'loc_1569']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_1570']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getOffset_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_15DF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['?isOutOfBounds@@YACHH@Z']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_15DA']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_15E2']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_15E2']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_setAttribute_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_16B2']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_16B2']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0']
jz ['short', 'loc_165B']
cmp ['[ebp+var_C4],', '1']
jz ['short', 'loc_166E']
cmp ['[ebp+var_C4],', '2']
jz ['short', 'loc_1681']
jmp ['short', 'loc_16A9']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '1']
setz ['al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+8],', 'al']
jmp ['short', 'loc_16B2']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '1']
setz ['al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+9],', 'al']
jmp ['short', 'loc_16B2']
cmp ['[ebp+arg_8],', '3']
jz ['short', 'loc_168D']
cmp ['[ebp+arg_8],', '4']
jnz ['short', 'loc_169C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dx,', 'word', 'ptr', '[ebp+arg_8]']
mov ['[ecx+0Ah],', 'dx']
jmp ['short', 'loc_16A7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
mov ['[ecx+0Ah],', 'dx']
jmp ['short', 'loc_16B2']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
cmp ['[ebp+arg_8],', '5']
jnz ['short', 'loc_16C1']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getAttribute_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1778']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '3']
ja ['short', 'loc_1778']
mov ['ecx,', '[ebp+var_D0]']
jmp ['ds:$LN13_0[ecx*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['eax,', 'byte', 'ptr', '[ecx+8]']
sub ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
jmp ['short', 'loc_177B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['eax,', 'byte', 'ptr', '[ecx+9]']
sub ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
jmp ['short', 'loc_177B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ecx+0Ah]']
mov ['[ebp+var_8],', 'dx']
movsx ['eax,', '[ebp+var_8]']
cmp ['eax,', '3']
jz ['short', 'loc_1764']
movsx ['eax,', '[ebp+var_8]']
cmp ['eax,', '4']
jnz ['short', 'loc_176C']
movsx ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_177B']
jmp ['short', '$LN1']
mov ['eax,', '2']
jmp ['short', 'loc_177B']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_177B']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5_1']
dd ['offset', '$LN1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getMatchedStart_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_17BD']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_17C5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getMatchedText_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1807']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_18D0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_181F']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_181F']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1830']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_1830']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_18D0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
jnz ['short', 'loc_1867']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_18D0']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_1875']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_18B3']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getMatchedLength_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1912']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+18h]']
jmp ['short', 'loc_1915']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_setBreakIterator_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1987']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1987']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1987']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ubrk_setText_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getBreakIterator_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_19CA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+10h]']
jmp ['short', 'loc_19CC']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_setText_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_1ADF']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1A23']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1A23']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jl ['short', 'loc_1A23']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1A31']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1ADF']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jnz ['short', 'loc_1A46']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_setText_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Dh],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_1AC2']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_ubrk_setText_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_ubrk_setText_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getText_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1B2E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx]']
jmp ['short', 'loc_1B30']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_setCollator_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_1D75']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1B83']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1D75']
cmp ['[ebp+arg_0],', '0']
jz ['loc_1D75']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1034h]']
mov ['[ebp+var_C8],', 'ecx']
mov ['edx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_1BC6']
push ['1']
mov ['ecx,', '[ebp+var_D4]']
call ['??_GUCollationPCE@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_1BD0']
mov ['[ebp+var_DC],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1034h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_closeElements_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1038h]']
push ['ecx']
call ['_ucol_closeElements_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1038h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1030h],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+103Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C53']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1028h]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_1C53']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1028h]']
push ['ecx']
call ['_ucol_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+103Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+1028h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ucol_getStrength_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1040h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1040h]']
push ['ecx']
call ['?getMask@@YAIW4UColAttributeValue@@@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1044h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_ubrk_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ucol_getLocaleByType_56']
add ['esp,', '0Ch']
push ['eax']
push ['0']
call ['_ubrk_open_56']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucol_getAttribute_56']
add ['esp,', '0Ch']
cmp ['eax,', '14h']
setz ['dl']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+104Ch],', 'dl']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucol_getVariableTop_56']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1048h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucol_openElements_56']
add ['esp,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1030h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ucol_openElements_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1038h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getCollator_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1DBB']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+1028h]']
jmp ['short', 'loc_1DBD']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_setPattern_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E56']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1E03']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1E0E']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1E56']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jnz ['short', 'loc_1E23']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1E34']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1E56']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_getPattern_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1EA3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+8]']
jmp ['short', 'loc_1EA5']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_first_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1F27']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F27']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Ch],', '1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_setOffset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F27']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_next_56']
add ['esp,', '8']
jmp ['short', 'loc_1F2A']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_following_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1FBD']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1FBD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Ch],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_usearch_setOffset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1FBD']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_next_56']
add ['esp,', '8']
jmp ['short', 'loc_1FC0']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_last_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2056']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2056']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_setOffset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2056']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_previous_56']
add ['esp,', '8']
jmp ['short', 'loc_2059']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_preceding_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_20ED']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_20ED']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Ch],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_usearch_setOffset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_20ED']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_previous_56']
add ['esp,', '8']
jmp ['short', 'loc_20F0']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_next_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_23C3']
cmp ['[ebp+arg_0],', '0']
jz ['loc_23C3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_usearch_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1Dh],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_21B7']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_21A1']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+var_20]']
jle ['short', 'loc_21B5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_23C6']
jmp ['short', 'loc_21D2']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1Ch],', '1']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
jz ['short', 'loc_21D2']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+14h]']
jmp ['loc_23C6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_23C3']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['loc_22CE']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
jnz ['short', 'loc_220F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+14h],', 'ecx']
jmp ['loc_2291']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
and ['ecx,', '0FFFFFC00h']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
add ['eax,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+14h],', 'eax']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_2247']
mov ['[ebp+var_E8],', '1']
jmp ['short', 'loc_2251']
mov ['[ebp+var_E8],', '0']
cmp ['[ebp+var_E8],', '0']
jz ['short', 'loc_2291']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+var_20]']
jz ['short', 'loc_2291']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_2291']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1030h]']
push ['eax']
call ['?setColEIterOffset@@YAXPAUUCollationElements@@H@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_22C9']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
jmp ['loc_235C']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jle ['short', 'loc_2323']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2301']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1030h]']
push ['eax']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_2321']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_232F']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jz ['short', 'loc_234C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_handleNextCanonical_56']
add ['esp,', '8']
jmp ['short', 'loc_235C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_handleNextExact_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2376']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_23C6']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
jnz ['short', 'loc_239E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_23BB']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+14h]']
jmp ['short', 'loc_23C6']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setMatchNotFound@@YAXPAUUStringSearch@@@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1Ch]']
test ['edx,', 'edx']
jz ['short', 'loc_243C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['?setColEIterOffset@@YAXPAUUCollationElements@@H@Z']
add ['esp,', '8']
jmp ['short', 'loc_2450']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['?setColEIterOffset@@YAXPAUUCollationElements@@H@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_previous_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_268C']
cmp ['[ebp+arg_0],', '0']
jz ['loc_268C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_24E7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1Dh],', '0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1030h]']
push ['edx']
call ['?setColEIterOffset@@YAXPAUUCollationElements@@H@Z']
add ['esp,', '8']
jmp ['short', 'loc_24F6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_usearch_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
cmp ['ecx,', '1']
jnz ['short', 'loc_2522']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
cmp ['[ebp+var_20],', '0FFFFFFFFh']
jz ['short', 'loc_2520']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_268F']
jmp ['short', 'loc_2542']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_252E']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_2542']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_268F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_268C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['loc_263B']
cmp ['[ebp+var_20],', '0FFFFFFFFh']
jnz ['short', 'loc_2579']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_2582']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_25A8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
jmp ['loc_2639']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_E8]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_2616']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jle ['short', 'loc_2616']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2-2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_2616']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1030h]']
push ['eax']
call ['?setColEIterOffset@@YAXPAUUCollationElements@@H@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
jmp ['short', 'loc_266A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+9]']
test ['edx,', 'edx']
jz ['short', 'loc_265A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_handlePreviousCanonical_56']
add ['esp,', '8']
jmp ['short', 'loc_266A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_handlePreviousExact_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2684']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_268F']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+14h]']
jmp ['short', 'loc_268F']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_reset_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['loc_2862']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_11],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1028h]']
push ['ecx']
call ['_ucol_getStrength_56']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1040h],', '3']
jge ['short', 'loc_26FE']
cmp ['[ebp+var_44],', '3']
jge ['short', 'loc_2710']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1040h],', '3']
jl ['short', 'loc_2714']
cmp ['[ebp+var_44],', '3']
jge ['short', 'loc_2714']
mov ['[ebp+var_11],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1028h]']
push ['ecx']
call ['_ucol_getStrength_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1040h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1040h]']
push ['ecx']
call ['?getMask@@YAIW4UColAttributeValue@@@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1044h]']
cmp ['ecx,', '[ebp+var_20]']
jz ['short', 'loc_2762']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+1044h],', 'ecx']
mov ['[ebp+var_11],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1028h]']
push ['edx']
call ['_ucol_getAttribute_56']
add ['esp,', '0Ch']
cmp ['eax,', '14h']
setz ['al']
mov ['[ebp+var_29],', 'al']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+104Ch]']
movsx ['edx,', '[ebp+var_29]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_27A5']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_29]']
mov ['[eax+104Ch],', 'cl']
mov ['[ebp+var_11],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1028h]']
push ['edx']
call ['_ucol_getVariableTop_56']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1048h]']
cmp ['ecx,', '[ebp+var_38]']
jz ['short', 'loc_27DC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+1048h],', 'ecx']
mov ['[ebp+var_11],', '0']
movsx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jnz ['short', 'loc_27F4']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initialize@@YAXPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1030h]']
push ['edx']
call ['_ucol_setText_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
xor ['edx,', 'edx']
mov ['[ecx+0Ah],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Ch],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+1Dh],', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_0']
dd ['offset', '$LN11_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+600h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+614h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+418h]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+604h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Ah]']
test ['edx,', 'edx']
jz ['loc_29B9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['loc_29B9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_29B9']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '1100h']
jl ['short', 'loc_295C']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '115Eh']
jle ['short', 'loc_2988']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '3131h']
jl ['short', 'loc_2972']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '314Eh']
jle ['short', 'loc_2988']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '3165h']
jl ['short', 'loc_299F']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '3186h']
jg ['short', 'loc_299F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+604h]']
add ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+604h],', 'ecx']
jmp ['short', 'loc_29B4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+604h]']
add ['ecx,', '3']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+604h],', 'ecx']
jmp ['loc_2927']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1030h]']
mov ['[eax+610h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+608h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+60Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_29FE']
jmp ['short', 'loc_2A3D']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+604h],', '60h']
jle ['short', 'loc_2A3D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+604h]']
shl ['ecx,', '4']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+600h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+600h],', '0']
jnz ['short', 'loc_2A3D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+600h]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_2A9B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+600h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
cdq
idiv ['dword', 'ptr', '[ecx+604h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+608h]']
jl ['short', 'loc_2B13']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+60Ch]']
jge ['short', 'loc_2B13']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+600h]']
jmp ['loc_2C05']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+60Ch]']
jz ['short', 'loc_2B52']
xor ['eax,', 'eax']
jnz ['short', 'loc_2B4B']
mov ['ecx,', 'ds:?__LINE__Var@?1??get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA']
add ['ecx,', '0Dh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_13COJANIEC@?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_2C05']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+60Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+60Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+60Ch]']
sub ['edx,', '[ecx+608h]']
mov ['eax,', '[ebp+var_8]']
cmp ['edx,', '[eax+604h]']
jl ['short', 'loc_2B99']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+608h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+608h],', 'ecx']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+600h]']
lea ['ecx,', '[eax+ecx+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+600h]']
lea ['edx,', '[ecx+edx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+614h]']
mov ['ecx,', '[ecx+1034h]']
call ['?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '4']
mov ['esi,', '[ebp+var_8]']
mov ['esi,', '[esi+600h]']
mov ['[ecx+esi],', 'eax']
mov ['[ecx+esi+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+600h]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN8']
dd ['offset', '$LN7_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_13COJANIEC@?$AA0?$AA?$AA@']
assume ['cs:_rdata']
public ['??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\usearch.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
cdq
idiv ['dword', 'ptr', '[ecx+604h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+608h]']
jl ['short', 'loc_2D0B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+60Ch]']
jge ['short', 'loc_2D0B']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+600h]']
jmp ['loc_2DFD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+60Ch]']
jz ['short', 'loc_2D4A']
xor ['eax,', 'eax']
jnz ['short', 'loc_2D43']
mov ['ecx,', 'ds:?__LINE__Var@?1??getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA']
add ['ecx,', '0Dh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@IKBFFFGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_13COJANIEC@?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_2DFD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+60Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+60Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+60Ch]']
sub ['edx,', '[ecx+608h]']
mov ['eax,', '[ebp+var_8]']
cmp ['edx,', '[eax+604h]']
jl ['short', 'loc_2D91']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+608h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+608h],', 'ecx']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+600h]']
lea ['ecx,', '[eax+ecx+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+600h]']
lea ['edx,', '[ecx+edx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+614h]']
mov ['ecx,', '[ecx+1034h]']
call ['?previousProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '4']
mov ['esi,', '[ebp+var_8]']
mov ['esi,', '[esi+600h]']
mov ['[ecx+esi],', 'eax']
mov ['[ecx+esi+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+600h]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN8_0']
dd ['offset', '$LN7_1']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_2EE3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_2EDE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_2EDE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_14],', 'ax']
movzx ['ecx,', '[ebp+var_14]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_2EDE']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_2EE6']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_2F86']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_2F81']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_2F81']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[ecx+edx*2-2]']
mov ['[ebp+var_14],', 'ax']
movzx ['ecx,', '[ebp+var_14]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_2F81']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_2F89']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_search_56 proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '7D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7D8]']
mov ['ecx,', '1F6h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2FD4']
xor ['al,', 'al']
jmp ['loc_3739']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_2FF9']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_2FF9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+4]']
jg ['short', 'loc_2FF9']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_3009']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['al,', 'al']
jmp ['loc_3739']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+41Ch],', '0']
jnz ['short', 'loc_3025']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1030h]']
push ['eax']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_620]']
call ['??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z']
mov ['[ebp+var_62C],', '0']
mov ['[ebp+var_638],', '0']
mov ['[ebp+var_65C],', '0FFFFFFFFh']
mov ['[ebp+var_668],', '0FFFFFFFFh']
mov ['[ebp+var_62C],', '0']
jmp ['short', 'loc_3095']
mov ['eax,', '[ebp+var_62C]']
add ['eax,', '1']
mov ['[ebp+var_62C],', 'eax']
mov ['[ebp+var_64D],', '1']
mov ['[ebp+var_68C],', '0']
mov ['[ebp+var_69C],', '0']
mov ['[ebp+var_698],', '0']
mov ['eax,', '[ebp+var_62C]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6A8],', 'eax']
cmp ['[ebp+var_6A8],', '0']
jnz ['short', 'loc_30F0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '5']
mov ['[ebp+var_64D],', '0']
jmp ['loc_36DB']
mov ['[ebp+var_644],', '0']
jmp ['short', 'loc_310B']
mov ['eax,', '[ebp+var_644]']
add ['eax,', '1']
mov ['[ebp+var_644],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_644]']
cmp ['ecx,', '[eax+418h]']
jge ['loc_31F3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+41Ch]']
mov ['edx,', '[ebp+var_644]']
mov ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_69C],', 'eax']
mov ['ecx,', '[ecx+edx*8+4]']
mov ['[ebp+var_698],', 'ecx']
mov ['eax,', '[ebp+var_62C]']
add ['eax,', '[ebp+var_644]']
add ['eax,', '[ebp+var_68C]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_638],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_698]']
push ['eax']
mov ['ecx,', '[ebp+var_69C]']
push ['ecx']
mov ['edx,', '[ebp+var_638]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
call ['?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z']
add ['esp,', '14h']
mov ['[ebp+var_6B4],', 'eax']
cmp ['[ebp+var_6B4],', '0']
jnz ['short', 'loc_31AD']
mov ['[ebp+var_64D],', '0']
jmp ['short', 'loc_31F3']
jmp ['short', 'loc_31EE']
cmp ['[ebp+var_6B4],', '0']
jle ['short', 'loc_31EE']
cmp ['[ebp+var_6B4],', '1']
jnz ['short', 'loc_31DF']
mov ['eax,', '[ebp+var_644]']
sub ['eax,', '1']
mov ['[ebp+var_644],', 'eax']
mov ['eax,', '[ebp+var_68C]']
add ['eax,', '1']
mov ['[ebp+var_68C],', 'eax']
jmp ['short', 'loc_31EE']
mov ['eax,', '[ebp+var_68C]']
sub ['eax,', '1']
mov ['[ebp+var_68C],', 'eax']
jmp ['loc_30FC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_68C]']
add ['ecx,', '[eax+418h]']
mov ['[ebp+var_68C],', 'ecx']
movsx ['eax,', '[ebp+var_64D]']
test ['eax,', 'eax']
jnz ['short', 'loc_3247']
cmp ['[ebp+var_638],', '0']
jz ['short', 'loc_3242']
mov ['eax,', '[ebp+var_638]']
mov ['[ebp+var_7D0],', 'eax']
mov ['ecx,', '[ebp+var_7D0]']
cmp ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
jnz ['short', 'loc_3242']
mov ['edx,', '[ebp+var_7D0]']
cmp ['dword', 'ptr', '[edx+4],', '7FFFFFFFh']
jz ['short', 'loc_3247']
jmp ['loc_3086']
movsx ['eax,', '[ebp+var_64D]']
test ['eax,', 'eax']
jnz ['short', 'loc_3257']
jmp ['loc_36DB']
mov ['eax,', '[ebp+var_68C]']
mov ['ecx,', '[ebp+var_62C]']
lea ['edx,', '[ecx+eax-1]']
push ['edx']
lea ['ecx,', '[ebp+var_620]']
call ['?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6C0],', 'eax']
mov ['eax,', '[ebp+var_6A8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_65C],', 'ecx']
mov ['eax,', '[ebp+var_6C0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_674],', 'ecx']
mov ['[ebp+var_6CC],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Ah]']
test ['edx,', 'edx']
jnz ['short', 'loc_3321']
mov ['eax,', '[ebp+var_62C]']
add ['eax,', '[ebp+var_68C]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6CC],', 'eax']
mov ['eax,', '[ebp+var_6CC]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_680],', 'ecx']
mov ['eax,', '[ebp+var_6CC]']
mov ['ecx,', '[ebp+var_6CC]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_331C']
mov ['eax,', '[ebp+var_6CC]']
mov ['[ebp+var_7D0],', 'eax']
mov ['ecx,', '[ebp+var_7D0]']
cmp ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
jnz ['short', 'loc_3315']
mov ['edx,', '[ebp+var_7D0]']
cmp ['dword', 'ptr', '[edx+4],', '7FFFFFFFh']
jz ['short', 'loc_331C']
mov ['[ebp+var_64D],', '0']
jmp ['loc_3434']
jmp ['short', 'loc_3332']
mov ['eax,', '[ebp+var_68C]']
add ['eax,', '1']
mov ['[ebp+var_68C],', 'eax']
mov ['eax,', '[ebp+var_62C]']
add ['eax,', '[ebp+var_68C]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?get@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6CC],', 'eax']
mov ['eax,', '[ebp+var_6CC]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_680],', 'ecx']
mov ['eax,', '[ebp+var_6CC]']
mov ['[ebp+var_7D0],', 'eax']
mov ['ecx,', '[ebp+var_7D0]']
cmp ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
jnz ['short', 'loc_338A']
mov ['edx,', '[ebp+var_7D0]']
cmp ['dword', 'ptr', '[edx+4],', '7FFFFFFFh']
jnz ['short', 'loc_338A']
jmp ['loc_3434']
mov ['ecx,', '[ebp+var_6CC]']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
mov ['cl,', '20h']
call ['__allshr']
and ['eax,', '0FFFF0000h']
and ['edx,', '0']
mov ['[ebp+var_7D4],', 'eax']
mov ['[ebp+var_7D0],', 'edx']
mov ['edx,', '[ebp+var_7D4]']
or ['edx,', '[ebp+var_7D0]']
jnz ['short', 'loc_340E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_698]']
push ['eax']
mov ['ecx,', '[ebp+var_69C]']
push ['ecx']
mov ['edx,', '[ebp+var_6CC]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
call ['?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z']
add ['esp,', '14h']
mov ['[ebp+var_6D8],', 'eax']
cmp ['[ebp+var_6D8],', '0']
jz ['short', 'loc_3403']
cmp ['[ebp+var_6D8],', '2']
jnz ['short', 'loc_340C']
mov ['[ebp+var_64D],', '0']
jmp ['short', 'loc_3434']
jmp ['short', 'loc_342F']
mov ['eax,', '[ebp+var_6CC]']
mov ['ecx,', '[ebp+var_6CC]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_342D']
mov ['[ebp+var_64D],', '0']
jmp ['short', 'loc_3434']
jmp ['short', 'loc_342F']
jmp ['short', 'loc_3434']
jmp ['loc_3323']
mov ['eax,', '[ebp+var_65C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?isBreakBoundary@@YACPAUUStringSearch@@H@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3455']
mov ['[ebp+var_64D],', '0']
mov ['eax,', '[ebp+var_6A8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_6E4],', 'ecx']
mov ['eax,', '[ebp+var_65C]']
cmp ['eax,', '[ebp+var_6E4]']
jnz ['short', 'loc_3479']
mov ['[ebp+var_64D],', '0']
mov ['[ebp+var_6ED],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['loc_35BA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_680]']
jle ['loc_35BA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['loc_35A7']
cmp ['[ebp+var_6CC],', '0']
jz ['loc_35A7']
mov ['edx,', '[ebp+var_6CC]']
mov ['eax,', '[edx]']
mov ['edx,', '[edx+4]']
mov ['cl,', '20h']
call ['__allshr']
and ['eax,', '0FFFF0000h']
and ['edx,', '0']
mov ['[ebp+var_7D4],', 'eax']
mov ['[ebp+var_7D0],', 'edx']
mov ['eax,', '[ebp+var_7D4]']
or ['eax,', '[ebp+var_7D0]']
jz ['loc_35A7']
mov ['ecx,', '[ebp+var_6C0]']
mov ['edx,', '[ebp+var_680]']
cmp ['edx,', '[ecx+0Ch]']
jl ['loc_35A7']
mov ['eax,', '[ebp+var_6CC]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_680]']
jle ['loc_35A7']
mov ['edx,', '[ebp+var_680]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+102Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+102Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_359E']
mov ['edx,', '[ebp+var_680]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+102Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+102Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_35A7']
mov ['[ebp+var_7D5],', '1']
jmp ['short', 'loc_35AE']
mov ['[ebp+var_7D5],', '0']
mov ['dl,', '[ebp+var_7D5]']
mov ['[ebp+var_6ED],', 'dl']
mov ['eax,', '[ebp+var_680]']
mov ['[ebp+var_668],', 'eax']
mov ['eax,', '[ebp+var_674]']
cmp ['eax,', '[ebp+var_680]']
jge ['loc_3660']
mov ['eax,', '[ebp+var_6C0]']
mov ['ecx,', '[ebp+var_674]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_3611']
mov ['eax,', '[ebp+var_674]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?isBreakBoundary@@YACPAUUStringSearch@@H@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3611']
mov ['eax,', '[ebp+var_674]']
mov ['[ebp+var_668],', 'eax']
jmp ['short', 'loc_3660']
mov ['eax,', '[ebp+var_674]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z']
add ['esp,', '8']
mov ['[ebp+var_6FC],', 'eax']
mov ['eax,', '[ebp+var_6C0]']
mov ['ecx,', '[ebp+var_6FC]']
cmp ['ecx,', '[eax+0Ch]']
jl ['short', 'loc_3660']
movsx ['eax,', '[ebp+var_6ED]']
test ['eax,', 'eax']
jz ['short', 'loc_3654']
mov ['eax,', '[ebp+var_6FC]']
cmp ['eax,', '[ebp+var_680]']
jge ['short', 'loc_3660']
mov ['eax,', '[ebp+var_6FC]']
mov ['[ebp+var_668],', 'eax']
movsx ['eax,', '[ebp+var_6ED]']
test ['eax,', 'eax']
jnz ['short', 'loc_36A1']
mov ['eax,', '[ebp+var_668]']
cmp ['eax,', '[ebp+var_680]']
jle ['short', 'loc_3680']
mov ['[ebp+var_64D],', '0']
mov ['eax,', '[ebp+var_668]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?isBreakBoundary@@YACPAUUStringSearch@@H@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_36A1']
mov ['[ebp+var_64D],', '0']
mov ['eax,', '[ebp+var_668]']
push ['eax']
mov ['ecx,', '[ebp+var_65C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?checkIdentical@@YACPBUUStringSearch@@HH@Z']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_36C9']
mov ['[ebp+var_64D],', '0']
movsx ['eax,', '[ebp+var_64D]']
test ['eax,', 'eax']
jz ['short', 'loc_36D6']
jmp ['short', 'loc_36DB']
jmp ['loc_3086']
movsx ['eax,', '[ebp+var_64D]']
test ['eax,', 'eax']
jnz ['short', 'loc_36FA']
mov ['[ebp+var_668],', '0FFFFFFFFh']
mov ['[ebp+var_65C],', '0FFFFFFFFh']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_370B']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_65C]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_371C']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_668]']
mov ['[eax],', 'ecx']
mov ['al,', '[ebp+var_64D]']
mov ['[ebp+var_7C5],', 'al']
lea ['ecx,', '[ebp+var_620]']
call ['??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ']
mov ['al,', '[ebp+var_7C5]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN58']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN57']
dd ['offset', '$LN56']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '274h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_280]']
mov ['ecx,', '9Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_24],', '100h']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '418h']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_3C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1038h]']
mov ['[ebp+var_48],', 'ecx']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_3827']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1028h]']
push ['edx']
call ['_ucol_openElements_56']
add ['esp,', '10h']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax+1038h],', 'ecx']
jmp ['short', 'loc_3844']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_ucol_setText_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3860']
xor ['eax,', 'eax']
jmp ['loc_39FB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+414h]']
cmp ['ecx,', '[ebp+Src]']
jz ['short', 'loc_388C']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+414h],', '0']
jz ['short', 'loc_388C']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+414h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
mov ['[ebp+var_54],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_60],', 'ax']
mov ['eax,', '[ebp+var_48]']
push ['eax']
lea ['ecx,', '[ebp+var_198]']
call ['??0UCollationPCE@icu_56@@QAE@PAUUCollationElements@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_198]']
call ['?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z']
mov ['[ebp+var_70],', 'eax']
mov ['[ebp+var_6C],', 'edx']
cmp ['[ebp+var_70],', '0FFFFFFFFh']
jnz ['short', 'loc_38DA']
cmp ['[ebp+var_6C],', '7FFFFFFFh']
jz ['loc_39A8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_39A8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_3C]']
sub ['edx,', 'eax']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
movzx ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['?addTouint64_tArray@@YAPA_JPA_JIPAI_KIPAW4UErrorCode@@@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_1A4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_396B']
xor ['eax,', 'eax']
mov ['[ebp+var_27A],', 'ax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_198]']
call ['??1UCollationPCE@icu_56@@QAE@XZ']
mov ['ax,', '[ebp+var_27A]']
jmp ['loc_39FB']
movzx ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'ax']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+var_1A4]']
jz ['short', 'loc_399A']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '418h']
cmp ['[ebp+Src],', 'eax']
jz ['short', 'loc_399A']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1A4]']
mov ['[ebp+Src],', 'eax']
jmp ['loc_38AE']
movzx ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+Src]']
mov ['dword', 'ptr', '[ecx+eax*8],', '0']
mov ['dword', 'ptr', '[ecx+eax*8+4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+Src]']
mov ['[eax+414h],', 'ecx']
movzx ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+410h],', 'eax']
mov ['ax,', '[ebp+var_60]']
mov ['[ebp+var_26E],', 'ax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_198]']
call ['??1UCollationPCE@icu_56@@QAE@XZ']
mov ['ax,', '[ebp+var_26E]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '280h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16']
dd ['offset', '$LN13_2']
dd ['0FFFFFE68h,', '120h']
dd ['offset', '$LN14_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-198h]']
jmp ['??1UCollationPCE@icu_56@@QAE@XZ']
endp
__ehhandler$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-284h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addTouint64_tArray@@YAPA_JPA_JIPAI_KIPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_3B68']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '3']
push ['ecx']
call ['?allocateMemory@@YAPAXIPAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3B35']
xor ['eax,', 'eax']
jmp ['short', 'loc_3B7E']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+eax*8],', 'edx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ecx+eax*8+4],', 'edx']
mov ['eax,', '[ebp+Src]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?checkIdentical@@YACPBUUStringSearch@@HH@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?checkIdentical@@YACPBUUStringSearch@@HH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '204h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_210]']
mov ['ecx,', '81h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1040h],', '0Fh']
jz ['short', 'loc_3BE7']
mov ['al,', '1']
jmp ['loc_3DBB']
mov ['[ebp+var_18],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+arg_4]']
mov ['edi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
push ['0']
lea ['ecx,', '[ebp+var_204]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20C],', 'eax']
mov ['edx,', '[ebp+var_20C]']
mov ['[ebp+var_210],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+102Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+102Ch]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_204]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
push ['0']
lea ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20C],', 'eax']
mov ['eax,', '[ebp+var_20C]']
mov ['[ebp+var_210],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_210]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+102Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+102Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3D70']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3D70']
mov ['byte', 'ptr', '[ebp+var_20C+3],', '1']
jmp ['short', 'loc_3D77']
mov ['byte', 'ptr', '[ebp+var_20C+3],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20C+3]']
mov ['[ebp+var_171],', 'cl']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_171]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '210h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14_1']
dd ['offset', '$LN10_0']
dd ['0FFFFFFA0h,', '40h']
dd ['offset', '$LN11_1']
dd ['0FFFFFF58h,', '40h']
dd ['offset', '$LN12_1']
db ['32h,', '0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0A8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-204h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$3 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1BCh]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?checkIdentical@@YACPBUUStringSearch@@HH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-214h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?checkIdentical@@YACPBUUStringSearch@@HH@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$2']
dd ['1']
dd ['offset', '__unwindfunclet$?checkIdentical@@YACPBUUStringSearch@@HH@Z$3']
dd ['offset', '__unwindtable$?checkIdentical@@YACPBUUStringSearch@@HH@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3F2E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3F46']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ubrk_following_56']
add ['esp,', '8']
jmp ['short', 'loc_3F49']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBreakBoundary@@YACPAUUStringSearch@@H@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3F9A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3FC0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ubrk_isBoundary_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3FC0']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_3FC7']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '13Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_401A']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnz ['short', 'loc_401A']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_41B3']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jnz ['short', 'loc_4029']
xor ['eax,', 'eax']
jmp ['loc_41B3']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['cl,', '20h']
call ['__allshr']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_C]']
mov ['cl,', '20h']
call ['__allshr']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_2C],', '0FFFF0000h']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_1C]']
and ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jz ['short', 'loc_40B3']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_4093']
mov ['eax,', '1']
jmp ['loc_41B3']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_40AC']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_40AC']
mov ['eax,', '2']
jmp ['loc_41B3']
xor ['eax,', 'eax']
jmp ['loc_41B3']
mov ['[ebp+var_2C],', '0FFFFh']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_1C]']
and ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jz ['short', 'loc_4143']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_40F7']
mov ['eax,', '1']
jmp ['loc_41B3']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_4110']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_4110']
mov ['eax,', '2']
jmp ['loc_41B3']
cmp ['[ebp+var_5C],', '5']
jz ['short', 'loc_4131']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_4125']
cmp ['[ebp+var_50],', '5']
jz ['short', 'loc_4131']
mov ['[ebp+var_13C],', '0']
jmp ['short', 'loc_413B']
mov ['[ebp+var_13C],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_13C]']
jmp ['short', 'loc_41B3']
mov ['[ebp+var_2C],', '0FFFF0000h']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_74]']
jz ['short', 'loc_41B0']
cmp ['[ebp+var_74],', '50000h']
jz ['short', 'loc_419E']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_4192']
cmp ['[ebp+var_68],', '50000h']
jz ['short', 'loc_419E']
mov ['[ebp+var_13C],', '0']
jmp ['short', 'loc_41A8']
mov ['[ebp+var_13C],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_13C]']
jmp ['short', 'loc_41B3']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_searchBackwards_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '7F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7F0]']
mov ['ecx,', '1FCh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_420C']
xor ['al,', 'al']
jmp ['loc_48E8']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_4231']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_4231']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+4]']
jg ['short', 'loc_4231']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_4241']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['al,', 'al']
jmp ['loc_48E8']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+41Ch],', '0']
jnz ['short', 'loc_425D']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_620]']
call ['??0CEIBuffer@?A0x7b251a59@icu_56@@QAE@PAUUStringSearch@@PAW4UErrorCode@@@Z']
mov ['[ebp+var_62C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+4]']
jge ['short', 'loc_4306']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_638],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_638]']
push ['ecx']
call ['_ubrk_following_56']
add ['esp,', '8']
mov ['[ebp+var_644],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_644]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1030h]']
push ['eax']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
mov ['[ebp+var_62C],', '0']
jmp ['short', 'loc_42E6']
mov ['eax,', '[ebp+var_62C]']
add ['eax,', '1']
mov ['[ebp+var_62C],', 'eax']
mov ['eax,', '[ebp+var_62C]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_4302']
jmp ['short', 'loc_4304']
jmp ['short', 'loc_42D7']
jmp ['short', 'loc_4320']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1030h]']
push ['eax']
call ['_ucol_setOffset_56']
add ['esp,', '0Ch']
mov ['[ebp+var_650],', '0']
mov ['eax,', '[ebp+var_62C]']
mov ['[ebp+var_674],', 'eax']
mov ['[ebp+var_680],', '0FFFFFFFFh']
mov ['[ebp+var_68C],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_674]']
mov ['[ebp+var_62C],', 'eax']
jmp ['short', 'loc_4367']
mov ['eax,', '[ebp+var_62C]']
add ['eax,', '1']
mov ['[ebp+var_62C],', 'eax']
mov ['[ebp+var_665],', '1']
mov ['eax,', '[ebp+var_62C]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6B0],', 'eax']
cmp ['[ebp+var_6B0],', '0']
jnz ['short', 'loc_43A4']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '5']
mov ['[ebp+var_665],', '0']
jmp ['loc_488A']
mov ['[ebp+var_6BC],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+418h]']
sub ['ecx,', '1']
mov ['[ebp+var_65C],', 'ecx']
jmp ['short', 'loc_43D1']
mov ['eax,', '[ebp+var_65C]']
sub ['eax,', '1']
mov ['[ebp+var_65C],', 'eax']
cmp ['[ebp+var_65C],', '0']
jl ['loc_44BE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+41Ch]']
mov ['edx,', '[ebp+var_65C]']
mov ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_6CC],', 'eax']
mov ['ecx,', '[ecx+edx*8+4]']
mov ['[ebp+var_6C8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+418h]']
mov ['edx,', '[ebp+var_62C]']
lea ['eax,', '[edx+ecx-1]']
sub ['eax,', '[ebp+var_65C]']
add ['eax,', '[ebp+var_6BC]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_650],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_6C8]']
push ['eax']
mov ['ecx,', '[ebp+var_6CC]']
push ['ecx']
mov ['edx,', '[ebp+var_650]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[edx]']
push ['ecx']
call ['?compareCE64s@@YA?AW4UCompareCEsResult@@_J0F@Z']
add ['esp,', '14h']
mov ['[ebp+var_6D8],', 'eax']
cmp ['[ebp+var_6D8],', '0']
jnz ['short', 'loc_4478']
mov ['[ebp+var_665],', '0']
jmp ['short', 'loc_44BE']
jmp ['short', 'loc_44B9']
cmp ['[ebp+var_6D8],', '0']
jle ['short', 'loc_44B9']
cmp ['[ebp+var_6D8],', '1']
jnz ['short', 'loc_44AA']
mov ['eax,', '[ebp+var_65C]']
add ['eax,', '1']
mov ['[ebp+var_65C],', 'eax']
mov ['eax,', '[ebp+var_6BC]']
add ['eax,', '1']
mov ['[ebp+var_6BC],', 'eax']
jmp ['short', 'loc_44B9']
mov ['eax,', '[ebp+var_6BC]']
sub ['eax,', '1']
mov ['[ebp+var_6BC],', 'eax']
jmp ['loc_43C2']
movsx ['eax,', '[ebp+var_665]']
test ['eax,', 'eax']
jnz ['short', 'loc_44FD']
cmp ['[ebp+var_650],', '0']
jz ['short', 'loc_44F8']
mov ['eax,', '[ebp+var_650]']
mov ['[ebp+var_7E8],', 'eax']
mov ['ecx,', '[ebp+var_7E8]']
cmp ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
jnz ['short', 'loc_44F8']
mov ['edx,', '[ebp+var_7E8]']
cmp ['dword', 'ptr', '[edx+4],', '7FFFFFFFh']
jz ['short', 'loc_44FD']
jmp ['loc_4358']
movsx ['eax,', '[ebp+var_665]']
test ['eax,', 'eax']
jnz ['short', 'loc_450D']
jmp ['loc_488A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_62C]']
add ['ecx,', '[eax+418h]']
mov ['edx,', '[ebp+var_6BC]']
lea ['eax,', '[ecx+edx-1]']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6E4],', 'eax']
mov ['eax,', '[ebp+var_6E4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_680],', 'ecx']
mov ['eax,', '[ebp+var_680]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?isBreakBoundary@@YACPAUUStringSearch@@H@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4568']
mov ['[ebp+var_665],', '0']
mov ['eax,', '[ebp+var_6E4]']
mov ['ecx,', '[ebp+var_680]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_4580']
mov ['[ebp+var_665],', '0']
mov ['eax,', '[ebp+var_6B0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_698],', 'ecx']
cmp ['[ebp+var_62C],', '0']
jle ['loc_47F4']
mov ['eax,', '[ebp+var_62C]']
sub ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_620]']
call ['?getPrevious@CEIBuffer@?A0x7b251a59@icu_56@@QAEPBUCEI@@H@Z']
mov ['[ebp+var_6F0],', 'eax']
mov ['eax,', '[ebp+var_6F0]']
mov ['ecx,', '[ebp+var_6F0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_45F8']
mov ['eax,', '[ebp+var_6F0]']
mov ['[ebp+var_7E8],', 'eax']
mov ['ecx,', '[ebp+var_7E8]']
cmp ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
jnz ['short', 'loc_45F1']
mov ['edx,', '[ebp+var_7E8]']
cmp ['dword', 'ptr', '[edx+4],', '7FFFFFFFh']
jz ['short', 'loc_45F8']
mov ['[ebp+var_665],', '0']
mov ['eax,', '[ebp+var_6F0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_6A4],', 'ecx']
mov ['edx,', '[ebp+var_6A4]']
mov ['[ebp+var_68C],', 'edx']
mov ['[ebp+var_6F9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['loc_4754']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_6A4]']
jle ['loc_4754']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['loc_4741']
cmp ['[ebp+var_6F0],', '0']
jz ['loc_4741']
mov ['edx,', '[ebp+var_6F0]']
mov ['eax,', '[edx]']
mov ['edx,', '[edx+4]']
mov ['cl,', '20h']
call ['__allshr']
and ['eax,', '0FFFF0000h']
and ['edx,', '0']
mov ['[ebp+var_7EC],', 'eax']
mov ['[ebp+var_7E8],', 'edx']
mov ['eax,', '[ebp+var_7EC]']
or ['eax,', '[ebp+var_7E8]']
jz ['loc_4741']
mov ['ecx,', '[ebp+var_6B0]']
mov ['edx,', '[ebp+var_6A4]']
cmp ['edx,', '[ecx+0Ch]']
jl ['loc_4741']
mov ['eax,', '[ebp+var_6F0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_6A4]']
jle ['loc_4741']
mov ['edx,', '[ebp+var_6A4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?codePointAt@?A0x7b251a59@@YAHABUUSearch@@H@Z']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+102Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+102Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4738']
mov ['edx,', '[ebp+var_6A4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?codePointBefore@?A0x7b251a59@@YAHABUUSearch@@H@Z']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+102Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+102Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4741']
mov ['[ebp+var_7ED],', '1']
jmp ['short', 'loc_4748']
mov ['[ebp+var_7ED],', '0']
mov ['dl,', '[ebp+var_7ED]']
mov ['[ebp+var_6F9],', 'dl']
mov ['eax,', '[ebp+var_698]']
cmp ['eax,', '[ebp+var_6A4]']
jge ['short', 'loc_47B1']
mov ['eax,', '[ebp+var_698]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z']
add ['esp,', '8']
mov ['[ebp+var_708],', 'eax']
mov ['eax,', '[ebp+var_6B0]']
mov ['ecx,', '[ebp+var_708]']
cmp ['ecx,', '[eax+0Ch]']
jl ['short', 'loc_47B1']
movsx ['eax,', '[ebp+var_6F9]']
test ['eax,', 'eax']
jz ['short', 'loc_47A5']
mov ['eax,', '[ebp+var_708]']
cmp ['eax,', '[ebp+var_6A4]']
jge ['short', 'loc_47B1']
mov ['eax,', '[ebp+var_708]']
mov ['[ebp+var_68C],', 'eax']
movsx ['eax,', '[ebp+var_6F9]']
test ['eax,', 'eax']
jnz ['short', 'loc_47F2']
mov ['eax,', '[ebp+var_68C]']
cmp ['eax,', '[ebp+var_6A4]']
jle ['short', 'loc_47D1']
mov ['[ebp+var_665],', '0']
mov ['eax,', '[ebp+var_68C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?isBreakBoundary@@YACPAUUStringSearch@@H@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_47F2']
mov ['[ebp+var_665],', '0']
jmp ['short', 'loc_4850']
mov ['eax,', '[ebp+var_698]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?nextBoundaryAfter@@YAHPAUUStringSearch@@H@Z']
add ['esp,', '8']
mov ['[ebp+var_714],', 'eax']
cmp ['[ebp+var_714],', '0']
jle ['short', 'loc_482F']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_714]']
jle ['short', 'loc_482F']
mov ['ecx,', '[ebp+var_714]']
mov ['[ebp+var_7E8],', 'ecx']
jmp ['short', 'loc_4838']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_7E8],', 'edx']
mov ['eax,', '[ebp+var_7E8]']
mov ['[ebp+var_6A4],', 'eax']
mov ['ecx,', '[ebp+var_6A4]']
mov ['[ebp+var_68C],', 'ecx']
mov ['eax,', '[ebp+var_68C]']
push ['eax']
mov ['ecx,', '[ebp+var_680]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?checkIdentical@@YACPBUUStringSearch@@HH@Z']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_4878']
mov ['[ebp+var_665],', '0']
movsx ['eax,', '[ebp+var_665]']
test ['eax,', 'eax']
jz ['short', 'loc_4885']
jmp ['short', 'loc_488A']
jmp ['loc_4358']
movsx ['eax,', '[ebp+var_665]']
test ['eax,', 'eax']
jnz ['short', 'loc_48A9']
mov ['[ebp+var_68C],', '0FFFFFFFFh']
mov ['[ebp+var_680],', '0FFFFFFFFh']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_48BA']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_680]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_48CB']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_68C]']
mov ['[eax],', 'ecx']
mov ['al,', '[ebp+var_665]']
mov ['[ebp+var_7DD],', 'al']
lea ['ecx,', '[ebp+var_620]']
call ['??1CEIBuffer@?A0x7b251a59@icu_56@@QAE@XZ']
mov ['al,', '[ebp+var_7DD]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN54']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN53']
dd ['offset', '$LN52']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_handleNextExact_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4973']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['short', 'loc_49E6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_search_56']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_49D8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+18h],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_49E6']
jmp ['short', 'loc_49E6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_1']
dd ['offset', '$LN6_0']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN7_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_handleNextCanonical_56	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4A7B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['short', 'loc_4AEE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_search_56']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4AE0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+18h],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_4AEE']
jmp ['short', 'loc_4AEE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_2']
dd ['offset', '$LN6_1']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN7_3']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_handlePreviousExact_56	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4B86']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_4CFC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jz ['loc_4C89']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
jz ['short', 'loc_4BBE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+14h]']
mov ['edx,', '[eax+18h]']
lea ['eax,', '[ecx+edx-1]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_4C87']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4BF8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_4CFC']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4C0A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+418h]']
sub ['ecx,', '1']
cmp ['[ebp+var_14],', 'ecx']
jge ['short', 'loc_4C4A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+1034h]']
call ['?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_24],', '0FFFFFFFFh']
jnz ['short', 'loc_4C48']
cmp ['[ebp+var_20],', '7FFFFFFFh']
jnz ['short', 'loc_4C48']
jmp ['short', 'loc_4C4A']
jmp ['short', 'loc_4C01']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4C72']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_4CFC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4C9E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_30],', '0FFFFFFFFh']
mov ['[ebp+var_3C],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_searchBackwards_56']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4CEE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+18h],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_4CFC']
jmp ['short', 'loc_4CFC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN18']
dd ['offset', '$LN16_0']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN17_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_usearch_handlePreviousCanonical_56 proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4D96']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_4F0C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jz ['loc_4E99']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+14h],', '0FFFFFFFFh']
jz ['short', 'loc_4DCE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+14h]']
mov ['edx,', '[eax+18h]']
lea ['eax,', '[ecx+edx-1]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_4E97']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initializePatternPCETable@@YAGPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?initTextProcessedIter@?A0x7b251a59@@YACPAUUStringSearch@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4E08']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_4F0C']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4E1A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+418h]']
sub ['ecx,', '1']
cmp ['[ebp+var_14],', 'ecx']
jge ['short', 'loc_4E5A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+1034h]']
call ['?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_24],', '0FFFFFFFFh']
jnz ['short', 'loc_4E58']
cmp ['[ebp+var_20],', '7FFFFFFFh']
jnz ['short', 'loc_4E58']
jmp ['short', 'loc_4E5A']
jmp ['short', 'loc_4E11']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E82']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_4F0C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4EAE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1030h]']
push ['ecx']
call ['_ucol_getOffset_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_30],', '0FFFFFFFFh']
mov ['[ebp+var_3C],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_usearch_searchBackwards_56']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4EFE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_30]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx+18h],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_4F0C']
jmp ['short', 'loc_4F0C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setMatchNotFound@@YAXPAUUStringSearch@@@Z']
add ['esp,', '4']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN18_0']
dd ['offset', '$LN16_1']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN17_1']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_ucol_close_56:near']
extrn ['_ucol_open_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['_ucol_openElements_56:near']
extrn ['_ubrk_setText_56:near']
extrn ['_ubrk_open_56:near']
extrn ['_ucol_getLocaleByType_56:near']
extrn ['_uprv_free_56:near']
extrn ['__imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:near']
extrn ['_ucol_getVariableTop_56:near']
extrn ['_ucol_getStrength_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_u_strlen_56:near']
extrn ['_ucol_getAttribute_56:near']
extrn ['_ucln_i18n_registerCleanup_56:near']
extrn ['__imp_?getNFCImpl@Normalizer2Factory@icu_56@@SAPBVNormalizer2Impl@2@AAW4UErrorCode@@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp_?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z:near']
extrn ['_ucol_getMaxExpansion_56:near']
extrn ['_ucol_getOffset_56:near']
extrn ['_ucol_next_56:near']
extrn ['_ucol_setText_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_ubrk_close_56:near']
extrn ['_ucol_closeElements_56:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UCollationPCE@icu_56@@QAE@XZ:near']
extrn ['?init@UCollationPCE@icu_56@@QAEXPAUUCollationElements@@@Z:near']
extrn ['??0UCollationPCE@icu_56@@QAE@PAUUCollationElements@@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['_ucol_setOffset_56:near']
extrn ['_u_terminateUChars_56:near']
extrn ['?nextProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z:near']
extrn ['__imp___wassert:near']
extrn ['?previousProcessed@UCollationPCE@icu_56@@QAE_JPAH0PAW4UErrorCode@@@Z:near']
extrn ['__allshr:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['_ubrk_following_56:near']
extrn ['_ubrk_isBoundary_56:near']
end

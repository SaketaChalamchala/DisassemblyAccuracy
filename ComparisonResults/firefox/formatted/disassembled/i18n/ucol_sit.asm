endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollatorFactory@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollatorFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CollatorFactory@icu_56@@6B@']
public ['??_7CollatorFactory@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?visible@CollatorFactory@icu_56@@UBECXZ']
dd ['offset', '__purecall']
dd ['offset', '?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4CollatorFactory@icu_56@@6B@']
dd ['offset', '??_R0?AVCollatorFactory@icu_56@@@8']
dd ['offset', '??_R3CollatorFactory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollatorFactory@icu_56@@@8']
dd ['0']
dd ['56413F2Eh']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollatorFactory@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CollatorFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollatorFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollatorFactory@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CollatorFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollatorFactory@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollatorFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollatorFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollatorFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_619']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollatorFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_69F']
push ['offset', '??1CollatorFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_697']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6C8']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollatorFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6C5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
push ['offset', '??_R0?AVRuleBasedCollator@icu_56@@@8']
push ['offset', '??_R0?AVCollator@icu_56@@@8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z']
add ['esp,', '4']
push ['0']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_data']
public ['??_R0?AVCollator@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_data']
public ['??_R0?AVRuleBasedCollator@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
push ['offset', '??_R0?AVRuleBasedCollator@icu_56@@@8']
push ['offset', '??_R0?AVCollator@icu_56@@@8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z']
add ['esp,', '4']
push ['0']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
not ['eax']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+0E0h]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0E0h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
or ['eax,', '[ecx+0E0h]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0E0h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+0E0h]']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__processLocaleElement proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_8E7']
cmp ['[ebp+arg_4],', '4']
jz ['short', 'loc_8E7']
cmp ['[ebp+arg_4],', '5']
jnz ['short', 'loc_910']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '5']
add ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[edx+ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_92D']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '5']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['dl,', '[edx]']
mov ['[eax+ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Fh']
jz ['short', 'loc_951']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_951']
cmp ['[ebp+var_8],', '20h']
jl ['short', 'loc_8D5']
cmp ['[ebp+var_8],', '20h']
jl ['short', 'loc_965']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_8]']
jmp ['short', 'loc_968']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__processRFC3066Locale proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Source]']
mov ['cl,', '[eax]']
mov ['[ebp+var_5],', 'cl']
mov ['eax,', '[ebp+Source]']
add ['eax,', '1']
mov ['[ebp+Source],', 'eax']
movsx ['eax,', '[ebp+var_5]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '1']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_9DF']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+Source]']
cmp ['eax,', '100h']
jl ['short', 'loc_9EF']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+Source]']
jmp ['short', 'loc_A29']
jmp ['short', 'loc_A29']
push ['1']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+Source]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+Source]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0C0h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__processCollatorOption	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['?ucol_sit_letterToAttributeValue@@YA?AW4UColAttributeValue@@DPAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4+1CCh],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Fh']
jz ['short', 'loc_A9C']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AB1']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_ABA']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucol_sit_letterToAttributeValue@@YA?AW4UColAttributeValue@@DPAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_B37']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0Ch']
jnb ['short', 'loc_B5E']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'ds:_conversions[eax*8]']
movsx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_B5C']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', 'ds:dword_120[eax*8]']
jmp ['short', 'loc_B6A']
jmp ['short', 'loc_B2E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__processVariableTop proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_4],', '0']
jnz ['loc_C2E']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BFC']
cmp ['[ebp+var_8],', '20h']
jge ['short', 'loc_BFC']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BFC']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Fh']
jz ['short', 'loc_BFC']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx*2+1F0h],', 'ax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_BA3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+230h],', 'ecx']
cmp ['[ebp+var_8],', '20h']
jnz ['short', 'loc_C2C']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C2C']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Fh']
jz ['short', 'loc_C2C']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_C4A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z']
add ['esp,', '8']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+1ECh],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C69']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+234h],', '1']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
xor ['eax,', 'eax']
mov ['[ebp+var_8],', 'ax']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_1D],', 'dl']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['loc_D91']
cmp ['[ebp+var_2C],', '4']
jge ['loc_D91']
movsx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '30h']
jl ['short', 'loc_D1C']
movsx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '39h']
jg ['short', 'loc_D1C']
movsx ['eax,', '[ebp+var_1D]']
sub ['eax,', '30h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D65']
movsx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '61h']
jl ['short', 'loc_D3A']
movsx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '66h']
jg ['short', 'loc_D3A']
movsx ['eax,', '[ebp+var_1D]']
sub ['eax,', '57h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D65']
movsx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '41h']
jl ['short', 'loc_D58']
movsx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '46h']
jg ['short', 'loc_D58']
movsx ['eax,', '[ebp+var_1D]']
sub ['eax,', '37h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D65']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_DA4']
movzx ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_14]']
or ['eax,', 'ecx']
mov ['[ebp+var_8],', 'ax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
jmp ['loc_CDE']
cmp ['[ebp+var_2C],', '4']
jge ['short', 'loc_DA0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_prepareShortStringOpen_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '734h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_734]']
mov ['ecx,', '1CDh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_DEE']
jmp ['loc_FFB']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_DFA']
lea ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'ax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+28h],', 'ax']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '10h']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z']
add ['esp,', '4']
push ['200h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['200h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
lea ['edx,', '[ebp+var_258]']
push ['edx']
call ['_uloc_canonicalize_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
push ['offset', '??_C@_0O@PJMCGFEE@icudt56l?9coll?$AA@']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['[ebp+var_52C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
push ['offset', '??_C@_0L@EMPPBAGD@collations?$AA@']
mov ['ecx,', '[ebp+var_52C]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_538],', 'eax']
mov ['[ebp+var_544],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['100h']
lea ['ecx,', '[ebp+var_64C]']
push ['ecx']
push ['offset', '??_C@_09FPAMBNKH@collation?$AA@']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
test ['eax,', 'eax']
jnz ['loc_FA7']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
push ['offset', '??_C@_07DLHCIBDH@default?$AA@']
mov ['ecx,', '[ebp+var_538]']
push ['ecx']
call ['_ures_getByKeyWithFallback_56']
add ['esp,', '10h']
mov ['[ebp+var_658],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_F8D']
mov ['[ebp+var_664],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_664]']
push ['ecx']
mov ['edx,', '[ebp+var_658]']
push ['edx']
call ['_ures_getString_56']
add ['esp,', '0Ch']
mov ['[ebp+var_670],', 'eax']
mov ['eax,', '[ebp+var_664]']
push ['eax']
lea ['ecx,', '[ebp+var_64C]']
push ['ecx']
mov ['edx,', '[ebp+var_670]']
push ['edx']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_664]']
mov ['[ebp+eax+var_64C],', '0']
jmp ['short', 'loc_F98']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '5']
jmp ['short', 'loc_FFB']
mov ['eax,', '[ebp+var_658]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_544]']
push ['ecx']
lea ['edx,', '[ebp+var_64C]']
push ['edx']
mov ['eax,', '[ebp+var_538]']
push ['eax']
call ['_ures_getByKeyWithFallback_56']
add ['esp,', '10h']
mov ['[ebp+var_544],', 'eax']
mov ['eax,', '[ebp+var_544]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_538]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_52C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '734h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13']
dd ['offset', '$LN8']
dd ['0FFFFFCE8h,', '2C0h']
dd ['offset', '$LN9']
dd ['0FFFFFAE0h,', '200h']
dd ['offset', '$LN10']
dd ['0FFFFF9B4h,', '100h']
dd ['offset', '$LN11']
dd ['0FFFFF99Ch,', '4']
dd ['offset', '$LN12']
assume ['cs:_rdata']
public ['??_C@_07DLHCIBDH@default?$AA@']
assume ['cs:_rdata']
public ['??_C@_09FPAMBNKH@collation?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0L@EMPPBAGD@collations?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0O@PJMCGFEE@icudt56l?9coll?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['2C0h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_111E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '8']
jge ['short', 'loc_1137']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+eax*4+1CCh],', '0FFFFFFFFh']
jmp ['short', 'loc_1115']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_11C8']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11C8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?ucol_sit_readOption@@YAPBDPBDPAUCollatorSpec@@PAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_11C6']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Fh']
jnz ['short', 'loc_11C6']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_11A6']
jmp ['short', 'loc_1170']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_11E9']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucol_sit_readOption@@YAPBDPBDPAUCollatorSpec@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1237']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '11h']
jge ['short', 'loc_12BA']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_8]']
imul ['edx,', '0Ch']
movsx ['eax,', 'ds:_options[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_12B5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+eax*8+238h],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
imul ['edx,', '0Ch']
mov ['eax,', 'ds:dword_184[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
imul ['edx,', '0Ch']
mov ['eax,', 'ds:off_180[edx]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx*8+23Ch],', 'eax']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_12C6']
jmp ['loc_122E']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0C0h]']
test ['ecx,', 'ecx']
jnz ['loc_1471']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '0C0h']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_135C']
push ['offset', '??_C@_01IDAFKMJL@_?$AA@']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0C0h']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '0C0h']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+40h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1398']
push ['offset', '??_C@_01IDAFKMJL@_?$AA@']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0C0h']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
add ['eax,', '40h']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '0C0h']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
jmp ['short', 'loc_13B9']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_13B9']
push ['offset', '??_C@_01IDAFKMJL@_?$AA@']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0C0h']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+60h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_13F3']
push ['offset', '??_C@_01IDAFKMJL@_?$AA@']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0C0h']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
add ['eax,', '60h']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '0C0h']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+80h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1432']
push ['offset', '_collationKeyword']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0C0h']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
add ['eax,', '80h']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '0C0h']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0A0h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1471']
push ['offset', '_providerKeyword']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0C0h']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
add ['eax,', '0A0h']
push ['eax']
mov ['ecx,', '[ebp+Source]']
add ['ecx,', '0C0h']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_01IDAFKMJL@_?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_openFromShortString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '608h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_608]']
mov ['ecx,', '182h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_14D0']
xor ['eax,', 'eax']
jmp ['loc_16F3']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_14DC']
lea ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'ax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+28h],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_5C],', 'eax']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_5C],', 'eax']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z']
add ['esp,', '4']
push ['200h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['200h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
lea ['edx,', '[ebp+var_264]']
push ['edx']
call ['_uloc_canonicalize_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_ucol_open_56']
add ['esp,', '8']
mov ['[ebp+var_538],', 'eax']
mov ['[ebp+var_544],', '0']
mov ['[ebp+var_544],', '0']
jmp ['short', 'loc_15B6']
mov ['eax,', '[ebp+var_544]']
add ['eax,', '1']
mov ['[ebp+var_544],', 'eax']
cmp ['[ebp+var_544],', '8']
jge ['loc_166C']
mov ['eax,', '[ebp+var_544]']
cmp ['[ebp+eax*4+var_158],', '0FFFFFFFFh']
jz ['loc_1667']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_1608']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_544]']
push ['ecx']
mov ['edx,', '[ebp+var_538]']
push ['edx']
call ['_ucol_getAttribute_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_544]']
cmp ['eax,', '[ebp+ecx*4+var_158]']
jz ['short', 'loc_1630']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_544]']
mov ['edx,', '[ebp+ecx*4+var_158]']
push ['edx']
mov ['eax,', '[ebp+var_544]']
push ['eax']
mov ['ecx,', '[ebp+var_538]']
push ['ecx']
call ['_ucol_setAttribute_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1667']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_538]']
push ['eax']
call ['_ucol_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_16F3']
jmp ['loc_15A7']
movsx ['eax,', '[ebp+var_F0]']
test ['eax,', 'eax']
jz ['short', 'loc_16BF']
movzx ['eax,', '[ebp+var_134]']
test ['eax,', 'eax']
jz ['short', 'loc_16A5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_F4]']
push ['ecx']
lea ['edx,', '[ebp+var_134]']
push ['edx']
mov ['eax,', '[ebp+var_538]']
push ['eax']
call ['_ucol_setVariableTop_56']
add ['esp,', '10h']
jmp ['short', 'loc_16BF']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_138]']
push ['ecx']
mov ['edx,', '[ebp+var_538]']
push ['edx']
call ['_ucol_restoreVariableTop_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16ED']
mov ['eax,', '[ebp+var_538]']
push ['eax']
call ['_ucol_close_56']
add ['esp,', '4']
mov ['[ebp+var_538],', '0']
mov ['eax,', '[ebp+var_538]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '608h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN16']
dd ['0FFFFFCDCh,', '2C0h']
dd ['offset', '$LN17']
dd ['0FFFFFAD4h,', '200h']
dd ['offset', '$LN18']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_getShortDefinitionString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_17A3']
xor ['eax,', 'eax']
jmp ['short', 'loc_17DF']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_17B6']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_17DF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_normalizeShortDefinitionString_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3DC]']
mov ['ecx,', '0F7h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1835']
xor ['eax,', 'eax']
jmp ['short', 'loc_189E']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_184D']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1859']
lea ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_C],', 'eax']
lea ['eax,', '[ebp+var_318]']
push ['eax']
call ['?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_318]']
push ['eax']
call ['?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
lea ['eax,', '[ebp+var_318]']
push ['eax']
call ['?ucol_sit_dumpSpecs@@YAHPAUCollatorSpec@@PADHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN8_0']
dd ['offset', '$LN6']
dd ['0FFFFFCE8h,', '2C0h']
dd ['offset', '$LN7']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucol_sit_dumpSpecs@@YAHPAUCollatorSpec@@PADHPAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_1AB2']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1956']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '11h']
jge ['loc_1AAB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax*8+238h],', '0']
jz ['loc_1AA6']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_199C']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1993']
push ['offset', '??_C@_01IDAFKMJL@_?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+238h]']
mov ['al,', '[edx]']
mov ['[ebp+var_29],', 'al']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '4Ch']
jz ['short', 'loc_19D2']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '52h']
jz ['short', 'loc_19D2']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '56h']
jz ['short', 'loc_19D2']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '4Bh']
jnz ['short', 'loc_1A41']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_19E4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+eax*8+23Ch]']
jge ['short', 'loc_1A2C']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1A2A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+238h]']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx+eax]']
push ['ecx']
call ['_uprv_toupper_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dest]']
mov ['[ecx+edx],', 'al']
jmp ['short', 'loc_19DB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ecx+eax*8+23Ch]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_1AA6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ecx+eax*8+23Ch]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1AA6']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+238h]']
push ['edx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+23Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*8+238h]']
push ['edx']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncat']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_194D']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_1AB4']
jmp ['short', 'loc_1AB4']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_getContractions_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ucol_getContractionsAndExpansions_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_uset_getItemCount_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_getContractionsAndExpansions_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1B55']
jmp ['short', 'loc_1BC5']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1B66']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1BC5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1B86']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['short', 'loc_1BC5']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['?visible@CollatorFactory@icu_56@@UBECXZ:near']
extrn ['__purecall:near']
extrn ['?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z:near']
extrn ['__imp_??0UObject@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1CollatorFactory@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['___RTDynamicCast:near']
extrn ['_uprv_asciitolower_56:near']
		extrn _uprv_asciitolower_56:near 
extrn ['__imp__strncpy:near']
		extrn __imp__strncpy:near 
extrn ['_uprv_checkValidMemory:near']
		extrn _uprv_checkValidMemory:near 
extrn ['__imp__strchr:near']
		extrn __imp__strchr:near 
extrn ['_ures_close_56:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_ures_getString_56:near']
extrn ['_ures_getByKeyWithFallback_56:near']
extrn ['_uloc_getKeywordValue_56:near']
extrn ['_ures_getByKey_56:near']
extrn ['_ures_open_56:near']
extrn ['_uloc_canonicalize_56:near']
extrn ['_memset:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_strcat:near']
extrn ['_ucol_restoreVariableTop_56:near']
extrn ['_ucol_setVariableTop_56:near']
extrn ['_ucol_close_56:near']
extrn ['_ucol_setAttribute_56:near']
extrn ['_ucol_getAttribute_56:near']
extrn ['_ucol_open_56:near']
extrn ['__imp__strncat:near']
extrn ['_uprv_toupper_56:near']
extrn ['_uset_getItemCount_56:near']
extrn ['?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z:near']
extrn ['__imp_?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z:near']
end

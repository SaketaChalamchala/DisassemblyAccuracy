endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9TimeZone@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0E4h+var_E4]']
mov ['ecx,', '[ebp+var_8]']
call ['?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Calendar@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*4+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+eax*4+7Ch],', '0']
jle ['short', 'loc_51A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*4+8]']
mov ['[ebp+var_D0],', 'ecx']
jmp ['short', 'loc_523']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*4+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGetTime@Calendar@icu_56@@IBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+0E0h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalSetTime@Calendar@icu_56@@IAEXN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fstp ['qword', 'ptr', '[eax+0E0h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianYear@Calendar@icu_56@@IBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+110h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianMonth@Calendar@icu_56@@IBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+114h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+118h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+11Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getDefault@Locale@icu_56@@SAABV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movsx ['ecx,', '[ebp+arg_4]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '2']
add ['ecx,', '0FFFFFFFFh']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+eax*4+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+eax*4+7Ch],', '1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+64h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?weekNumber@Calendar@icu_56@@IAEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?weekNumber@Calendar@icu_56@@IAEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0F0h+var_F0]']
mov ['ecx,', '[ebp+var_8]']
call ['?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_openTimeZoneIDEnumeration_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?createTimeZoneIDEnumeration@TimeZone@icu_56@@SAPAVStringEnumeration@2@W4USystemTimeZoneType@@PBDPBHAAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['eax']
call ['_uenum_openFromStringEnumeration_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_openTimeZones_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?createEnumeration@TimeZone@icu_56@@SAPAVStringEnumeration@2@XZ']
push ['eax']
call ['_uenum_openFromStringEnumeration_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_openCountryTimeZones_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?createEnumeration@TimeZone@icu_56@@SAPAVStringEnumeration@2@PBD@Z']
add ['esp,', '4']
push ['eax']
call ['_uenum_openFromStringEnumeration_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getDefaultTimeZone_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '140h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_140]']
mov ['ecx,', '50h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['loc_D00']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_D00']
call ['?createDefault@TimeZone@icu_56@@SAPAV12@XZ']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_C62']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_D00']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_12C],', 'eax']
mov ['ecx,', '[ebp+var_12C]']
mov ['[ebp+var_138],', 'ecx']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_CC3']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_138]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_138]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_140],', 'eax']
jmp ['short', 'loc_CCD']
mov ['[ebp+var_140],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '140h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setDefaultTimeZone_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_DBD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?adoptDefault@TimeZone@icu_56@@SAXPAV12@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '128h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['loc_EDF']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_EDF']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_E58']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+var_134],', 'eax']
jmp ['short', 'loc_E61']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_134],', 'ecx']
mov ['edx,', '[ebp+var_134]']
mov ['[ebp+var_24],', 'edx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
cmp ['[ebp+arg_4],', '0']
setl ['dl']
movzx ['eax,', 'dl']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
call ['?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_EC6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN10_0']
dd ['offset', '$LN8_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-6Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-138h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getDSTSavings_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '134h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_10BA']
push ['0']
push ['offset', '??_R0?AVSimpleTimeZone@icu_56@@@8']
push ['offset', '??_R0?AVTimeZone@icu_56@@@8']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1038']
mov ['eax,', '[ebp+var_20]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_10BA']
call ['?getNow@Calendar@icu_56@@SANXZ']
fstp ['[ebp+var_30]']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_105E']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
fld ['[ebp+var_30]']
fadd ['ds:__real@41c2064200000000']
fstp ['[ebp+var_30]']
cmp ['[ebp+var_3C],', '35h']
jge ['short', 'loc_10BA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
push ['0']
sub ['esp,', '8']
fld ['[ebp+var_30]']
fstp ['[esp+158h+var_158]']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_10AA']
jmp ['short', 'loc_10BA']
jmp ['short', 'loc_10B8']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_10B8']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_10BA']
jmp ['short', 'loc_1049']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_120],', 'eax']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+var_12C],', 'ecx']
cmp ['[ebp+var_12C],', '0']
jz ['short', 'loc_10FD']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_12C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_12C]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_134],', 'eax']
jmp ['short', 'loc_1107']
mov ['[ebp+var_134],', '0']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN16']
dd ['offset', '$LN14']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN15']
assume ['cs:_rdata']
public ['__real@41c2064200000000']
assume ['cs:_data']
public ['??_R0?AVTimeZone@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_data']
public ['??_R0?AVSimpleTimeZone@icu_56@@@8']
align ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getNow_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['?getNow@Calendar@icu_56@@SANXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_open_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3A0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3A0]']
mov ['ecx,', '0E8h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_124C']
xor ['eax,', 'eax']
jmp ['loc_13CB']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_125F']
call ['?createDefault@TimeZone@icu_56@@SAPAV12@XZ']
mov ['[ebp+var_3A0],', 'eax']
jmp ['short', 'loc_1279']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_3A0],', 'eax']
mov ['eax,', '[ebp+var_3A0]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_129E']
xor ['eax,', 'eax']
jmp ['loc_13CB']
cmp ['[ebp+arg_C],', '1']
jnz ['loc_137A']
cmp ['[ebp+Source],', '0']
jnz ['short', 'loc_12B6']
call ['_uloc_getDefault_56']
mov ['[ebp+Source],', 'eax']
push ['1']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['102h']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['102h']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_09KJPEOOPA@gregorian?$AA@']
push ['offset', '??_C@_08LCCMFNHG@calendar?$AA@']
call ['_uloc_setKeywordValue_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1324']
xor ['eax,', 'eax']
jmp ['loc_13CB']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
lea ['ecx,', '[ebp+var_398]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_1F0],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_398]']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1F0]']
jmp ['short', 'loc_13CB']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C4]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_1E4],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_2C4]']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1E4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_0']
dd ['offset', '$LN10_1']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08LCCMFNHG@calendar?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_close_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_1489']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D4]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_1493']
mov ['[ebp+var_DC],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_clone_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_14DF']
xor ['eax,', 'eax']
jmp ['short', 'loc_150E']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_150B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['short', 'loc_150E']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setTimeZone_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1559']
jmp ['short', 'loc_15A1']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_156C']
call ['?createDefault@TimeZone@icu_56@@SAPAV12@XZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_1586']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?_createTimeZone@@YAPAVTimeZone@icu_56@@PB_WHPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_15A1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?adoptTimeZone@Calendar@icu_56@@QAEXPAVTimeZone@2@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getTimeZoneID_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_15F9']
xor ['eax,', 'eax']
jmp ['short', 'loc_165E']
mov ['ecx,', '[ebp+arg_0]']
call ['?getTimeZone@Calendar@icu_56@@QBEABVTimeZone@2@XZ']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_120],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_120]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getTimeZoneDisplayName_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '478h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_478]']
mov ['ecx,', '11Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16ED']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_18B1']
mov ['ecx,', '[ebp+arg_0]']
call ['?getTimeZone@Calendar@icu_56@@QBEABVTimeZone@2@XZ']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_1716']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1732']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PA_WHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_478],', 'eax']
cmp ['[ebp+var_478],', '3']
ja ['loc_1875']
mov ['ecx,', '[ebp+var_478]']
jmp ['ds:$LN15_0[ecx*4]']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_470]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['2']
push ['0']
mov ['ecx,', '[ebp+var_C]']
call ['?getDisplayName@TimeZone@icu_56@@QBEAAVUnicodeString@2@CW4EDisplayType@12@ABVLocale@2@AAV32@@Z']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_470]']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1875']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_39C]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+var_C]']
call ['?getDisplayName@TimeZone@icu_56@@QBEAAVUnicodeString@2@CW4EDisplayType@12@ABVLocale@2@AAV32@@Z']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_39C]']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1875']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C8]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['2']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['?getDisplayName@TimeZone@icu_56@@QBEAAVUnicodeString@2@CW4EDisplayType@12@ABVLocale@2@AAV32@@Z']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_2C8]']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1875']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_1F4]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['1']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['?getDisplayName@TimeZone@icu_56@@QBEAAVUnicodeString@2@CW4EDisplayType@12@ABVLocale@2@AAV32@@Z']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1F4]']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_120],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_120]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '478h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN13']
dd ['offset', '$LN12_0']
dd ['offset', '$LN3']
dd ['offset', '$LN2']
dd ['offset', '$LN1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_inDaylightTime_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_193F']
or ['al,', '0FFh']
jmp ['short', 'loc_1959']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setGregorianChange_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_19A5']
jmp ['short', 'loc_1A22']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
push ['0']
push ['offset', '??_R0?AVGregorianCalendar@icu_56@@@8']
push ['offset', '??_R0?AVCalendar@icu_56@@@8']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_19D9']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1A22']
mov ['esi,', 'esp']
push ['offset', '??_R0?AVGregorianCalendar@icu_56@@@8']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['___RTtypeid']
add ['esp,', '4']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??9type_info@@QBE_NABV0@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1A0D']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['short', 'loc_1A22']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_4]']
fstp ['[esp+0F0h+var_F0]']
mov ['ecx,', '[ebp+var_14]']
call ['?setGregorianChange@GregorianCalendar@icu_56@@QAEXNAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_data']
public ['??_R0?AVCalendar@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_data']
public ['??_R0?AVGregorianCalendar@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getGregorianChange_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1AB7']
fldz
jmp ['short', 'loc_1B2B']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
push ['0']
push ['offset', '??_R0?AVGregorianCalendar@icu_56@@@8']
push ['offset', '??_R0?AVCalendar@icu_56@@@8']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1AED']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
fldz
jmp ['short', 'loc_1B2B']
mov ['esi,', 'esp']
push ['offset', '??_R0?AVGregorianCalendar@icu_56@@@8']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['___RTtypeid']
add ['esp,', '4']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??9type_info@@QBE_NABV0@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1B23']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '10h']
fldz
jmp ['short', 'loc_1B2B']
mov ['ecx,', '[ebp+var_14]']
call ['?getGregorianChange@GregorianCalendar@icu_56@@QBENXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['__real@0000000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getAttribute_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '4']
ja ['short', 'loc_1BBD']
mov ['ecx,', '[ebp+var_C4]']
jmp ['ds:$LN11_1[ecx*4]']
mov ['ecx,', '[ebp+arg_0]']
call ['?isLenient@Calendar@icu_56@@QBECXZ']
movsx ['eax,', 'al']
jmp ['short', 'loc_1BC0']
mov ['ecx,', '[ebp+arg_0]']
call ['?getFirstDayOfWeek@Calendar@icu_56@@QBE?AW4EDaysOfWeek@12@XZ']
jmp ['short', 'loc_1BC0']
mov ['ecx,', '[ebp+arg_0]']
call ['?getMinimalDaysInFirstWeek@Calendar@icu_56@@QBEEXZ']
movzx ['eax,', 'al']
jmp ['short', 'loc_1BC0']
mov ['ecx,', '[ebp+arg_0]']
call ['?getRepeatedWallTimeOption@Calendar@icu_56@@QBE?AW4UCalendarWallTimeOption@@XZ']
jmp ['short', 'loc_1BC0']
mov ['ecx,', '[ebp+arg_0]']
call ['?getSkippedWallTimeOption@Calendar@icu_56@@QBE?AW4UCalendarWallTimeOption@@XZ']
jmp ['short', 'loc_1BC0']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_0']
dd ['offset', '$LN4_1']
dd ['offset', '$LN3_0']
dd ['offset', '$LN2_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setAttribute_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '4']
ja ['short', 'loc_1C6B']
mov ['ecx,', '[ebp+var_C4]']
jmp ['ds:$LN10_2[ecx*4]']
movzx ['eax,', 'byte', 'ptr', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setLenient@Calendar@icu_56@@QAEXC@Z']
jmp ['short', 'loc_1C6B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setFirstDayOfWeek@Calendar@icu_56@@QAEXW4UCalendarDaysOfWeek@@@Z']
jmp ['short', 'loc_1C6B']
movzx ['eax,', 'byte', 'ptr', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setMinimalDaysInFirstWeek@Calendar@icu_56@@QAEXE@Z']
jmp ['short', 'loc_1C6B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setRepeatedWallTimeOption@Calendar@icu_56@@QAEXW4UCalendarWallTimeOption@@@Z']
jmp ['short', 'loc_1C6B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setSkippedWallTimeOption@Calendar@icu_56@@QAEXW4UCalendarWallTimeOption@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN4_2']
dd ['offset', '$LN3_1']
dd ['offset', '$LN2_1']
dd ['offset', '$LN1_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getAvailable_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uloc_getAvailable_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_countAvailable_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['_uloc_countAvailable_56']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getMillis_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D43']
fldz
jmp ['short', 'loc_1D4F']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setMillis_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D99']
jmp ['short', 'loc_1DAE']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_4]']
fstp ['[esp+0D8h+var_D8]']
mov ['ecx,', '[ebp+arg_0]']
call ['?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setDate_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1DF9']
jmp ['short', 'loc_1E0D']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?set@Calendar@icu_56@@QAEXHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_setDateTime_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E59']
jmp ['short', 'loc_1E79']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?set@Calendar@icu_56@@QAEXHHHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_equivalentTo_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_add_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F11']
jmp ['short', 'loc_1F33']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_roll_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F7D']
jmp ['short', 'loc_1F9F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_get_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1FEC']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_1FFC']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_set_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?set@Calendar@icu_56@@QAEXW4UCalendarDateFields@@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_isSet_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isSet@Calendar@icu_56@@QBECW4UCalendarDateFields@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_clearField_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?clear@Calendar@icu_56@@QAEXW4UCalendarDateFields@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_clear_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+arg_0]']
call ['?clear@Calendar@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getLimit_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_2149']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2151']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222A']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '5']
ja ['loc_2227']
mov ['ecx,', '[ebp+var_C4]']
jmp ['ds:$LN14_1[ecx*4]']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_222A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_222A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+40h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_222A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+48h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_222A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+50h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_222A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+54h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_222A']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6_1']
dd ['offset', '$LN5_2']
dd ['offset', '$LN4_3']
dd ['offset', '$LN3_2']
dd ['offset', '$LN2_2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getLocaleByType_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_229E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_229A']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_22AE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getLocaleID@Calendar@icu_56@@QBEPBDW4ULocDataLocaleType@@AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getTZDataVersion_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getTZDataVersion@TimeZone@icu_56@@SAPBDAAW4UErrorCode@@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getCanonicalTimeZoneID_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '178h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_178]']
mov ['ecx,', '5Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_2347']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_234E']
xor ['eax,', 'eax']
jmp ['loc_244B']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_235A']
mov ['eax,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2372']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2372']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2372']
cmp ['[ebp+arg_C],', '0']
jg ['short', 'loc_2382']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_244B']
mov ['[ebp+var_C],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5D],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_5D]']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_168]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['?getCanonicalID@TimeZone@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_168]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_242A']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2409']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[ebp+var_5D]']
mov ['[eax],', 'cl']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_174],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '178h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_1']
dd ['offset', '$LN10_3']
dd ['0FFFFFFA3h,', '1']
dd ['offset', '$LN11_2']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getType_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_24E7']
xor ['eax,', 'eax']
jmp ['short', 'loc_24FD']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getDayOfWeekType_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_254B']
xor ['eax,', 'eax']
jmp ['short', 'loc_2569']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getWeekendTransition_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_25B7']
xor ['eax,', 'eax']
jmp ['short', 'loc_25D5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+60h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_isWeekend_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2623']
xor ['al,', 'al']
jmp ['short', 'loc_2646']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_4]']
fstp ['[esp+0D8h+var_D8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getFieldDifference_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2693']
xor ['eax,', 'eax']
jmp ['short', 'loc_26BA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+arg_4]']
fstp ['[esp+0DCh+var_DC]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+24h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getKeywordValuesForLocale_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_28C]']
mov ['ecx,', '0A3h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['al,', 'ds:??_C@_00CNPNBAHC@?$AA@']
mov ['[ebp+var_A8],', 'al']
push ['9Ch']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_B4],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['[ebp+var_B4],', 'eax']
cmp ['[ebp+var_B4],', '0']
jnz ['short', 'loc_27B0']
mov ['al,', 'ds:??_C@_00CNPNBAHC@?$AA@']
mov ['[ebp+var_15C],', 'al']
push ['9Ch']
push ['0']
lea ['eax,', '[ebp+var_15B]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_15C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_uloc_addLikelySubtags_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['edx,', '[ebp+var_15C]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
push ['0']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_168],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_168]']
push ['ecx']
push ['offset', '??_C@_0BH@PEMGOIBB@calendarPreferenceData?$AA@']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_2844']
cmp ['[ebp+var_168],', '0']
jz ['short', 'loc_2844']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
push ['offset', '??_C@_03MMKGDKGA@001?$AA@']
mov ['ecx,', '[ebp+var_168]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_174],', 'eax']
mov ['[ebp+var_180],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2A77']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_ulist_createEmptyList_56']
add ['esp,', '4']
mov ['[ebp+var_180],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2A77']
mov ['[ebp+var_18C],', '0']
jmp ['short', 'loc_28AD']
mov ['eax,', '[ebp+var_18C]']
add ['eax,', '1']
mov ['[ebp+var_18C],', 'eax']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['[ebp+var_18C],', 'eax']
jge ['loc_297F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_198]']
push ['ecx']
mov ['edx,', '[ebp+var_18C]']
push ['edx']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ures_getStringByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_1A4],', 'eax']
mov ['eax,', '[ebp+var_198]']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1B0],', 'eax']
cmp ['[ebp+var_1B0],', '0']
jnz ['short', 'loc_291B']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_297F']
mov ['eax,', '[ebp+var_198]']
push ['eax']
mov ['ecx,', '[ebp+var_1B0]']
push ['ecx']
mov ['edx,', '[ebp+var_1A4]']
push ['edx']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1B0]']
add ['eax,', '[ebp+var_198]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_1B0]']
push ['ecx']
mov ['edx,', '[ebp+var_180]']
push ['edx']
call ['_ulist_addItemEndList_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_297A']
jmp ['short', 'loc_297F']
jmp ['loc_289E']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2A49']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['loc_2A49']
mov ['[ebp+var_1BC],', '0']
jmp ['short', 'loc_29BF']
mov ['eax,', '[ebp+var_1BC]']
add ['eax,', '1']
mov ['[ebp+var_1BC],', 'eax']
mov ['eax,', '[ebp+var_1BC]']
cmp ['ds:_CAL_TYPES[eax*4],', '0']
jz ['short', 'loc_2A49']
mov ['eax,', '[ebp+var_1BC]']
mov ['ecx,', 'ds:_CAL_TYPES[eax*4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_1BC]']
mov ['eax,', 'ds:_CAL_TYPES[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_180]']
push ['ecx']
call ['_ulist_containsString_56']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_2A44']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_1BC]']
mov ['edx,', 'ds:_CAL_TYPES[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_ulist_addItemEndList_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2A44']
jmp ['short', 'loc_2A49']
jmp ['loc_29B0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2A77']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_ulist_deleteList_56']
add ['esp,', '4']
mov ['[ebp+var_180],', '0']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_2AB3']
cmp ['[ebp+var_180],', '0']
jnz ['short', 'loc_2AB7']
xor ['eax,', 'eax']
jmp ['short', 'loc_2B26']
push ['1Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1C8],', 'eax']
cmp ['[ebp+var_1C8],', '0']
jnz ['short', 'loc_2AEC']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_ulist_deleteList_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_2B26']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_ulist_resetList_56']
add ['esp,', '4']
push ['1Ch']
push ['offset', '_defaultKeywordValues']
mov ['eax,', '[ebp+var_1C8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1C8]']
mov ['ecx,', '[ebp+var_180]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_1C8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '28Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN25']
dd ['offset', '$LN22']
dd ['0FFFFFEA4h,', '9Dh']
dd ['offset', '$LN23']
dd ['0FFFFFE68h,', '4']
dd ['offset', '$LN24']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03MMKGDKGA@001?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BH@PEMGOIBB@calendarPreferenceData?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getTimeZoneTransitionDate_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2C06']
xor ['al,', 'al']
jmp ['loc_2D36']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z']
fstp ['[ebp+var_C]']
mov ['ecx,', '[ebp+arg_0]']
call ['?getTimeZone@Calendar@icu_56@@QBEABVTimeZone@2@XZ']
mov ['[ebp+var_18],', 'eax']
push ['0']
push ['offset', '??_R0?AVBasicTimeZone@icu_56@@@8']
push ['offset', '??_R0?AVTimeZone@icu_56@@@8']
push ['0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['loc_2D34']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2D34']
lea ['ecx,', '[ebp+var_44]']
call ['??0TimeZoneTransition@icu_56@@QAE@XZ']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_2C7D']
cmp ['[ebp+arg_4],', '3']
jz ['short', 'loc_2C7D']
mov ['[ebp+var_12D],', '0']
jmp ['short', 'loc_2C84']
mov ['[ebp+var_12D],', '1']
mov ['al,', '[ebp+var_12D]']
mov ['[ebp+var_4D],', 'al']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2CC9']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_2CC9']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
movzx ['ecx,', '[ebp+var_4D]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_C]']
fstp ['[esp+14Ch+var_14C]']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[eax+38h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_12D],', 'al']
jmp ['short', 'loc_2CF7']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
movzx ['ecx,', '[ebp+var_4D]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_C]']
fstp ['[esp+14Ch+var_14C]']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[eax+34h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_12D],', 'al']
mov ['al,', '[ebp+var_12D]']
mov ['[ebp+var_59],', 'al']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jz ['short', 'loc_2D2C']
lea ['ecx,', '[ebp+var_44]']
call ['?getTime@TimeZoneTransition@icu_56@@QBENXZ']
mov ['eax,', '[ebp+arg_8]']
fstp ['qword', 'ptr', '[eax]']
mov ['[ebp+var_125],', '1']
lea ['ecx,', '[ebp+var_44]']
call ['??1TimeZoneTransition@icu_56@@UAE@XZ']
mov ['al,', '[ebp+var_125]']
jmp ['short', 'loc_2D36']
lea ['ecx,', '[ebp+var_44]']
call ['??1TimeZoneTransition@icu_56@@UAE@XZ']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_3']
dd ['offset', '$LN10_4']
assume ['cs:_data']
public ['??_R0?AVBasicTimeZone@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getWindowsTimeZoneID_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2DDC']
xor ['eax,', 'eax']
jmp ['loc_2EB7']
mov ['[ebp+var_C],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_15C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['?getWindowsID@TimeZone@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_15C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2E96']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_2E96']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_168],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_168]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_2']
dd ['offset', '$LN5_3']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucal_getTimeZoneIDForWindowsID_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2F4C']
xor ['eax,', 'eax']
jmp ['loc_302B']
mov ['[ebp+var_C],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_15C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['?getIDForWindowsID@TimeZone@icu_56@@SAAAVUnicodeString@2@ABV32@PBDAAV32@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_15C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_300A']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_300A']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_168],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_168]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_3']
dd ['offset', '$LN5_4']
extrn ['_ulist_reset_keyword_values_iterator_56:near']
extrn ['_ulist_next_keyword_value_56:near']
extrn ['_uenum_unextDefault_56:near']
extrn ['_ulist_count_keyword_values_56:near']
extrn ['_ulist_close_keyword_values_iterator_56:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:near']
extrn ['__fltused:near']
extrn ['?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:near']
extrn ['?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:near']
extrn ['?weekNumber@Calendar@icu_56@@IAEHHHH@Z:near']
extrn ['??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:near']
extrn ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z:near']
extrn ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z:near']
extrn ['?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z:near']
extrn ['?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z:near']
extrn ['_uenum_openFromStringEnumeration_56:near']
extrn ['?createTimeZoneIDEnumeration@TimeZone@icu_56@@SAPAVStringEnumeration@2@W4USystemTimeZoneType@@PBDPBHAAW4UErrorCode@@@Z:near']
extrn ['?createEnumeration@TimeZone@icu_56@@SAPAVStringEnumeration@2@XZ:near']
extrn ['?createEnumeration@TimeZone@icu_56@@SAPAVStringEnumeration@2@PBD@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['?createDefault@TimeZone@icu_56@@SAPAV12@XZ:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?adoptDefault@TimeZone@icu_56@@SAXPAV12@@Z:near']
extrn ['?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['___CxxFrameHandler3:near']
extrn ['?getNow@Calendar@icu_56@@SANXZ:near']
extrn ['___RTDynamicCast:near']
extrn ['??_7type_info@@6B@:near']
extrn ['__imp_??1Locale@icu_56@@UAE@XZ:near']
extrn ['__imp_??0Locale@icu_56@@QAE@PBD000@Z:near']
extrn ['_uloc_setKeywordValue_56:near']
extrn ['__imp__strncpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uloc_getDefault_56:near']
extrn ['?adoptTimeZone@Calendar@icu_56@@QAEXPAVTimeZone@2@@Z:near']
extrn ['?getTimeZone@Calendar@icu_56@@QBEABVTimeZone@2@XZ:near']
extrn ['?getDisplayName@TimeZone@icu_56@@QBEAAVUnicodeString@2@CW4EDisplayType@12@ABVLocale@2@AAV32@@Z:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PA_WHH@Z:near']
extrn ['?setGregorianChange@GregorianCalendar@icu_56@@QAEXNAAW4UErrorCode@@@Z:near']
extrn ['__imp_??9type_info@@QBE_NABV0@@Z:near']
extrn ['___RTtypeid:near']
extrn ['?getGregorianChange@GregorianCalendar@icu_56@@QBENXZ:near']
extrn ['?getSkippedWallTimeOption@Calendar@icu_56@@QBE?AW4UCalendarWallTimeOption@@XZ:near']
extrn ['?getRepeatedWallTimeOption@Calendar@icu_56@@QBE?AW4UCalendarWallTimeOption@@XZ:near']
extrn ['?getMinimalDaysInFirstWeek@Calendar@icu_56@@QBEEXZ:near']
extrn ['?getFirstDayOfWeek@Calendar@icu_56@@QBE?AW4EDaysOfWeek@12@XZ:near']
extrn ['?isLenient@Calendar@icu_56@@QBECXZ:near']
extrn ['?setSkippedWallTimeOption@Calendar@icu_56@@QAEXW4UCalendarWallTimeOption@@@Z:near']
extrn ['?setRepeatedWallTimeOption@Calendar@icu_56@@QAEXW4UCalendarWallTimeOption@@@Z:near']
extrn ['?setMinimalDaysInFirstWeek@Calendar@icu_56@@QAEXE@Z:near']
extrn ['?setFirstDayOfWeek@Calendar@icu_56@@QAEXW4UCalendarDaysOfWeek@@@Z:near']
extrn ['?setLenient@Calendar@icu_56@@QAEXC@Z:near']
extrn ['_uloc_getAvailable_56:near']
extrn ['_uloc_countAvailable_56:near']
extrn ['?set@Calendar@icu_56@@QAEXHHH@Z:near']
extrn ['?set@Calendar@icu_56@@QAEXHHHHHH@Z:near']
extrn ['?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near']
extrn ['?set@Calendar@icu_56@@QAEXW4UCalendarDateFields@@H@Z:near']
extrn ['?isSet@Calendar@icu_56@@QBECW4UCalendarDateFields@@@Z:near']
extrn ['?clear@Calendar@icu_56@@QAEXW4UCalendarDateFields@@@Z:near']
extrn ['?clear@Calendar@icu_56@@QAEXXZ:near']
extrn ['?getLocaleID@Calendar@icu_56@@QBEPBDW4ULocDataLocaleType@@AAW4UErrorCode@@@Z:near']
extrn ['?getTZDataVersion@TimeZone@icu_56@@SAPBDAAW4UErrorCode@@@Z:near']
extrn ['?getCanonicalID@TimeZone@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:near']
extrn ['_memcpy:near']
extrn ['_ulist_resetList_56:near']
extrn ['_ures_close_56:near']
extrn ['_ulist_deleteList_56:near']
extrn ['_ulist_containsString_56:near']
extrn ['_strlen:near']
extrn ['_ulist_addItemEndList_56:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_ures_getStringByIndex_56:near']
extrn ['_ures_getSize_56:near']
extrn ['_ulist_createEmptyList_56:near']
extrn ['_ures_getByKey_56:near']
extrn ['_ures_openDirect_56:near']
extrn ['_uloc_addLikelySubtags_56:near']
extrn ['_uloc_getCountry_56:near']
extrn ['_memset:near']
extrn ['??1TimeZoneTransition@icu_56@@UAE@XZ:near']
extrn ['?getTime@TimeZoneTransition@icu_56@@QBENXZ:near']
extrn ['??0TimeZoneTransition@icu_56@@QAE@XZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['?getWindowsID@TimeZone@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z:near']
extrn ['?getIDForWindowsID@TimeZone@icu_56@@SAAAVUnicodeString@2@ABV32@PBDAAV32@AAW4UErrorCode@@@Z:near']
end

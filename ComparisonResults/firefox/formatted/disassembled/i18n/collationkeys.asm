endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAssignedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jz ['short', 'loc_36E']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jz ['short', 'loc_36E']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_375']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C1h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C0h']
or ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSpecialCE32@Collation@icu_56@@SACI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
cmp ['eax,', '0C0h']
setnb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tagFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCE32Tag@Collation@icu_56@@SACIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5AB']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_5AB']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_5B2']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_668']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_668']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_668']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_66F']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSelfContainedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6F9']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_6F9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_6F9']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '4']
jz ['short', 'loc_6F9']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_700']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isPrefixCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isContractionCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ce32HasContext@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7F8']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '8']
jz ['short', 'loc_7EF']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '9']
jnz ['short', 'loc_7F8']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_7FF']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF000000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000000h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF0000h']
shr ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
or ['eax,', '500h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexFromCE32@Collation@icu_56@@SAHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '0Dh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '1Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?digitFromCE32@Collation@icu_56@@SADI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFh']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0C0h']
jnb ['short', 'loc_A09']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
jmp ['short', 'loc_A37']
jmp ['short', 'loc_A37']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0Fh']
cmp ['eax,', '1']
jnz ['short', 'loc_A32']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
jmp ['short', 'loc_A37']
jmp ['short', 'loc_A37']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JIIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_8]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '6']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z']
add ['esp,', '4']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Collation@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '12000000h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32@CollationData@icu_56@@QBEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0D800h']
jnb ['short', 'loc_CB9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '5']
mov ['eax,', '[ecx]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_D0],', 'eax']
jmp ['loc_D8D']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_CFD']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
jmp ['loc_D81']
cmp ['[ebp+arg_0],', '10FFFFh']
jbe ['short', 'loc_D12']
mov ['[ebp+var_D8],', '80h']
jmp ['short', 'loc_D75']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_D2F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_D69']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_DC]']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_DE8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_E22']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDigit@CollationData@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '660h']
jge ['short', 'loc_E98']
cmp ['[ebp+arg_0],', '39h']
jg ['short', 'loc_E80']
cmp ['[ebp+arg_0],', '30h']
jl ['short', 'loc_E80']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_E8A']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_EB8']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
mov ['[ebp+var_D4],', 'edx']
mov ['al,', 'byte', 'ptr', '[ebp+var_D4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F42']
movsx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_F39']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDigit@CollationData@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F42']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_F49']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ecx+edx]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readCE32@CollationData@icu_56@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
or ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[edx+eax*8]']
mov ['dword', 'ptr', '[ebp+var_18],', 'ecx']
mov ['edx,', '[edx+eax*8+4]']
mov ['dword', 'ptr', '[ebp+var_18+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_18+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z']
add ['esp,', '0Ch']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16@CollationData@icu_56@@QBEGH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+18h]']
call ['dword', 'ptr', 'ds:__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['??0CEBuffer@CollationIterator@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+170h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+174h],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationIterator@icu_56@@6B@']
public ['??_7CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0']
dd ['offset', '__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVCollationIterator@icu_56@@@8']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollationIterator@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationIterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jge ['short', 'loc_14C7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['loc_1718']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_14EC']
mov ['eax,', '1000100h']
mov ['edx,', '1']
jmp ['loc_1718']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_159F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_1718']
cmp ['[ebp+var_2C],', '0C0h']
jnz ['loc_16A0']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_15F4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
push ['1']
push ['1000100h']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_1718']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_169E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_1718']
jmp ['short', 'loc_16A9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_2C],', '0C1h']
jnz ['short', 'loc_1700']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_1718']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '28h']
jl ['short', 'loc_1798']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_17AB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_17AD']
jmp ['short', 'loc_17AD']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEsLength@CollationIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEs@CollationIterator@icu_56@@QAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+168h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_1A4C']
mov ['ecx,', '[ebp+var_8]']
call ['?clearCEs@CollationIterator@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1AA9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1B32']
push ['offset', '??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['178h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1B2A']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1B5B']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1B58']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationKeys@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationSettings@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0SharedObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationSettings@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '2010h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationSettings@icu_56@@6B@']
public ['??_7CollationSettings@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4CollationSettings@icu_56@@6B@']
dd ['offset', '??_R0?AUCollationSettings@icu_56@@@8']
dd ['offset', '??_R3CollationSettings@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AUCollationSettings@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationSettings@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CollationSettings@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationSettings@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@SharedObject@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationSettings@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CollationSettings@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SharedObject@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SharedObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSharedObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3SharedObject@icu_56@@8']
dd ['3']
dd ['offset', '??_R2SharedObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SharedObject@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationSettings@icu_56@@QBECABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8CollationSettings@icu_56@@QBECABU01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasReordering@CollationSettings@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reorder@CollationSettings@icu_56@@QBEII@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['al,', '[eax+edx]']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jnz ['short', 'loc_1E0F']
cmp ['[ebp+arg_0],', '1']
ja ['short', 'loc_1E25']
movzx ['eax,', '[ebp+var_11]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFFFFFh']
or ['eax,', 'ecx']
jmp ['short', 'loc_1E31']
jmp ['short', 'loc_1E31']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?reorderEx@CollationSettings@icu_56@@ABEII@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStrength@CollationSettings@icu_56@@SAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStrength@CollationSettings@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['?getStrength@CollationSettings@icu_56@@SAHH@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
and ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '300h']
mov ['[ebp+var_14],', 'ecx']
jnz ['short', 'loc_1F3C']
mov ['[ebp+var_DC],', '10h']
jmp ['short', 'loc_1F51']
xor ['eax,', 'eax']
cmp ['[ebp+var_14],', '200h']
setnz ['al']
add ['eax,', '18h']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+var_DC]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
and ['eax,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '15h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
and ['eax,', '70h']
sar ['eax,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '600h']
cmp ['eax,', '200h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0C000h']
add ['eax,', '3F3Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '700h']
cmp ['eax,', '300h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?dontCheckFCD@CollationSettings@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '800h']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNumeric@CollationSettings@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '2']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[eax+34h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2203']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '180h']
jnb ['short', 'loc_2224']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2+3Ch]']
mov ['[ecx+eax*2+3Ch],', 'dx']
jmp ['short', 'loc_21FA']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationSettings@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationSettings@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2289']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollationSettings@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_2312']
push ['offset', '??1CollationSettings@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['33Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_230A']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_233B']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationSettings@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2338']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SortKeyByteSink@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SortKeyByteSink@icu_56@@6B@']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1ByteSink@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4SortKeyByteSink@icu_56@@6B@']
public ['??_7SortKeyByteSink@icu_56@@6B@']
dd ['offset', '?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z']
dd ['offset', '?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4SortKeyByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVSortKeyByteSink@icu_56@@@8']
dd ['offset', '??_R3SortKeyByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSortKeyByteSink@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3SortKeyByteSink@icu_56@@8']
dd ['3']
dd ['offset', '??_R2SortKeyByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SortKeyByteSink@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SortKeyByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSortKeyByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SortKeyByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_24DD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+Size],', '0']
jle ['short', 'loc_2527']
cmp ['[ebp+Src],', '0']
jnz ['short', 'loc_252C']
jmp ['loc_25F9']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_2571']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+Size]']
mov ['[ebp+var_14],', 'ecx']
js ['short', 'loc_2553']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+10h],', 'ecx']
jmp ['loc_25F9']
jmp ['short', 'loc_2571']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Src]']
add ['ecx,', '[eax+10h]']
mov ['[ebp+Src],', 'ecx']
mov ['eax,', '[ebp+var_14]']
neg ['eax']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+Src]']
jnz ['short', 'loc_2599']
jmp ['short', 'loc_25F9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[ebp+var_2C]']
jg ['short', 'loc_25D7']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_25F9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '1']
jl ['short', 'loc_2641']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_0]']
jge ['short', 'loc_2651']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
jmp ['loc_26ED']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_266A']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
jmp ['loc_26ED']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jl ['short', 'loc_2699']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_26ED']
jmp ['short', 'loc_26ED']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_26E2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+0Ch]']
jmp ['short', 'loc_26ED']
jmp ['short', 'loc_26ED']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ecx+34h],', 'eax']
jl ['short', 'loc_2748']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2777']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_D0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax],', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFh']
jnz ['short', 'loc_27E3']
mov ['ecx,', 'ds:?__LINE__Var@?1??appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
mov ['[ebp+var_11],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ebp+var_1D],', 'al']
movzx ['eax,', '[ebp+var_1D]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+34h]']
add ['esi,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
call ['?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jle ['short', 'loc_282A']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2890']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_11]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_2890']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_1D]']
mov ['[eax],', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<(w', '&', '0xffff)', '!=', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\collationkeys.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0ECh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_EC]']
mov ['ecx,', '3Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2982']
mov ['eax,', 'ds:?__LINE__Var@?1??appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1O@PAAHJHJA@?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
mov ['[ebp+var_14],', 'al']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '10h']
mov ['[ebp+var_13],', 'al']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
mov ['[ebp+var_12],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_13]']
test ['eax,', 'eax']
jnz ['short', 'loc_29B7']
mov ['[ebp+var_E8],', '1']
jmp ['short', 'loc_29EA']
movzx ['ecx,', '[ebp+var_12]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_29CB']
mov ['[ebp+var_EC],', '2']
jmp ['short', 'loc_29DE']
movzx ['edx,', '[ebp+var_11]']
neg ['edx']
sbb ['edx,', 'edx']
neg ['edx']
add ['edx,', '3']
mov ['[ebp+var_EC],', 'edx']
mov ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+34h]']
add ['esi,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
call ['?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jle ['short', 'loc_2A1F']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_2AF7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_14]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_13]']
test ['eax,', 'eax']
jz ['loc_2AF7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_13]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_12]']
test ['eax,', 'eax']
jz ['short', 'loc_2AF7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_12]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['short', 'loc_2AF7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_11]']
mov ['[eax],', 'cl']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN14']
dd ['offset', '$LN13_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1O@PAAHJHJA@?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<w', '!=', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFh']
jnz ['short', 'loc_2BA3']
mov ['ecx,', 'ds:?__LINE__Var@?1??appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
mov ['[ebp+var_11],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ebp+var_1D],', 'al']
movzx ['eax,', '[ebp+var_1D]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+34h]']
add ['esi,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
call ['?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jle ['short', 'loc_2BEA']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C5D']
movzx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jnz ['short', 'loc_2C23']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['cl,', '[ebp+var_11]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_2C5D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['dl,', '[ebp+var_1D]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z']
mov ['dl,', '[ebp+var_11]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+34h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+38h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2CAA']
xor ['al,', 'al']
jmp ['short', 'loc_2D08']
mov ['ecx,', '[ebp+var_8]']
call ['?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ']
shl ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_2CD4']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0C8h']
jge ['short', 'loc_2CE4']
mov ['[ebp+var_14],', '0C8h']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_2D06']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+38h],', '0']
xor ['al,', 'al']
jmp ['short', 'loc_2D08']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1LevelCallback@CollationKeys@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7LevelCallback@CollationKeys@icu_56@@6B@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4LevelCallback@CollationKeys@icu_56@@6B@']
public ['??_7LevelCallback@CollationKeys@icu_56@@6B@']
dd ['offset', '?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z']
assume ['cs:_rdata$r']
public ['??_R4LevelCallback@CollationKeys@icu_56@@6B@']
dd ['offset', '??_R0?AVLevelCallback@CollationKeys@icu_56@@@8']
dd ['offset', '??_R3LevelCallback@CollationKeys@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVLevelCallback@CollationKeys@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3LevelCallback@CollationKeys@icu_56@@8']
dd ['2']
dd ['offset', '??_R2LevelCallback@CollationKeys@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2LevelCallback@CollationKeys@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3LevelCallback@CollationKeys@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2E29']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3BCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C8]']
mov ['ecx,', '0EFh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2ECE']
jmp ['loc_412E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?getStrength@CollationSettings@icu_56@@SAHH@Z']
add ['esp,', '4']
mov ['ecx,', 'ds:_levelMasks[eax*4]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '400h']
jz ['short', 'loc_2F00']
mov ['eax,', '[ebp+var_24]']
or ['eax,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
shl ['eax,', 'cl']
sub ['eax,', '1']
not ['eax']
and ['eax,', '[ebp+var_24]']
mov ['[ebp+var_24],', 'eax']
jnz ['short', 'loc_2F1C']
jmp ['loc_412E']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0Ch']
jnz ['short', 'loc_2F2D']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_2F39']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+var_80]']
call ['??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_158],', '0']
mov ['[ebp+var_164],', '0']
mov ['[ebp+var_170],', '0']
mov ['[ebp+var_17C],', '0']
mov ['[ebp+var_188],', '0']
mov ['[ebp+var_194],', '0']
mov ['[ebp+var_1A0],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_1B0]']
mov ['edx,', '[ebp+var_1AC]']
mov ['cl,', '20h']
call ['__allshr']
mov ['[ebp+var_1BC],', 'eax']
mov ['eax,', '[ebp+var_1BC]']
cmp ['eax,', '[ebp+var_30]']
jnb ['loc_3131']
cmp ['[ebp+var_1BC],', '2000000h']
jbe ['loc_3131']
cmp ['[ebp+var_188],', '0']
jz ['short', 'loc_3083']
mov ['eax,', '[ebp+var_188]']
sub ['eax,', '1']
mov ['[ebp+var_188],', 'eax']
cmp ['[ebp+var_188],', '71h']
jl ['short', 'loc_3064']
push ['8Ch']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_188]']
sub ['eax,', '71h']
mov ['[ebp+var_188],', 'eax']
jmp ['short', 'loc_303A']
mov ['eax,', '[ebp+var_188]']
add ['eax,', '1Ch']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_188],', '0']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '20h']
jz ['short', 'loc_30DC']
mov ['ecx,', '[ebp+arg_8]']
call ['?hasReordering@CollationSettings@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_30AF']
mov ['eax,', '[ebp+var_1BC]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?reorder@CollationSettings@icu_56@@QBEII@Z']
mov ['[ebp+var_1BC],', 'eax']
mov ['eax,', '[ebp+var_1BC]']
shr ['eax,', '18h']
cmp ['eax,', '1Bh']
jb ['short', 'loc_30CA']
push ['1Bh']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_1BC]']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_1B0]']
mov ['edx,', '[ebp+var_1AC]']
mov ['cl,', '20h']
call ['__allshr']
mov ['[ebp+var_1BC],', 'eax']
cmp ['[ebp+var_1BC],', '0']
jz ['short', 'loc_30DC']
mov ['eax,', '[ebp+var_1BC]']
cmp ['eax,', '[ebp+var_30]']
jnb ['short', 'loc_3131']
cmp ['[ebp+var_1BC],', '2000000h']
ja ['loc_3083']
cmp ['[ebp+var_1BC],', '1']
jbe ['loc_3330']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '2']
jz ['loc_3330']
mov ['eax,', '[ebp+var_1BC]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx+eax]']
mov ['[ebp+var_1C5],', 'dl']
mov ['ecx,', '[ebp+arg_8]']
call ['?hasReordering@CollationSettings@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3183']
mov ['eax,', '[ebp+var_1BC]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?reorder@CollationSettings@icu_56@@QBEII@Z']
mov ['[ebp+var_1BC],', 'eax']
mov ['eax,', '[ebp+var_1BC]']
shr ['eax,', '18h']
mov ['[ebp+var_1D4],', 'eax']
movsx ['eax,', '[ebp+var_1C5]']
test ['eax,', 'eax']
jz ['short', 'loc_31AE']
mov ['eax,', '[ebp+var_158]']
shr ['eax,', '18h']
cmp ['[ebp+var_1D4],', 'eax']
jz ['short', 'loc_3219']
cmp ['[ebp+var_158],', '0']
jz ['short', 'loc_31E7']
mov ['eax,', '[ebp+var_1BC]']
cmp ['eax,', '[ebp+var_158]']
jnb ['short', 'loc_31DA']
cmp ['[ebp+var_1D4],', '2']
jbe ['short', 'loc_31D8']
push ['3']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
jmp ['short', 'loc_31E7']
push ['0FFh']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_1D4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
movsx ['eax,', '[ebp+var_1C5]']
test ['eax,', 'eax']
jz ['short', 'loc_320F']
mov ['eax,', '[ebp+var_1BC]']
mov ['[ebp+var_158],', 'eax']
jmp ['short', 'loc_3219']
mov ['[ebp+var_158],', '0']
mov ['eax,', '[ebp+var_1BC]']
shr ['eax,', '10h']
mov ['[ebp+var_1DD],', 'al']
movsx ['eax,', '[ebp+var_1DD]']
test ['eax,', 'eax']
jz ['short', 'loc_32AB']
mov ['al,', '[ebp+var_1DD]']
mov ['[ebp+var_1EC],', 'al']
mov ['eax,', '[ebp+var_1BC]']
shr ['eax,', '8']
mov ['[ebp+var_1EB],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+var_1BC]']
mov ['[ebp+var_1EA],', 'al']
movsx ['eax,', '[ebp+var_1EB]']
test ['eax,', 'eax']
jnz ['short', 'loc_3271']
mov ['[ebp+var_3C8],', '1']
jmp ['short', 'loc_3287']
movsx ['ecx,', '[ebp+var_1EA]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '2']
mov ['[ebp+var_3C8],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_3C8]']
push ['edx']
lea ['eax,', '[ebp+var_1EC]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_C]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jnz ['short', 'loc_3330']
mov ['ecx,', '[ebp+arg_C]']
call ['?Overflowed@SortKeyByteSink@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3330']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_32EF']
mov ['ecx,', '[ebp+arg_C]']
call ['?IsOk@SortKeyByteSink@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_32EF']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
jmp ['loc_412E']
mov ['eax,', '[ebp+var_1B0]']
mov ['[ebp+var_1F8],', 'eax']
cmp ['[ebp+var_1F8],', '0']
jnz ['short', 'loc_334A']
jmp ['loc_2FCA']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '4']
jz ['loc_3626']
mov ['eax,', '[ebp+var_1F8]']
shr ['eax,', '10h']
mov ['[ebp+var_204],', 'eax']
cmp ['[ebp+var_204],', '0']
jnz ['short', 'loc_3373']
jmp ['loc_3626']
cmp ['[ebp+var_204],', '500h']
jnz ['short', 'loc_33A9']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '800h']
jz ['short', 'loc_3395']
cmp ['[ebp+var_1BC],', '2000000h']
jz ['short', 'loc_33A9']
mov ['eax,', '[ebp+var_170]']
add ['eax,', '1']
mov ['[ebp+var_170],', 'eax']
jmp ['loc_3626']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '800h']
jnz ['loc_345B']
cmp ['[ebp+var_170],', '0']
jz ['loc_3444']
mov ['eax,', '[ebp+var_170]']
sub ['eax,', '1']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '21h']
jl ['short', 'loc_33FA']
push ['25h']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_170]']
sub ['eax,', '21h']
mov ['[ebp+var_170],', 'eax']
jmp ['short', 'loc_33D3']
cmp ['[ebp+var_204],', '500h']
jnb ['short', 'loc_3417']
mov ['eax,', '[ebp+var_170]']
add ['eax,', '5']
mov ['[ebp+var_210],', 'eax']
jmp ['short', 'loc_3428']
mov ['eax,', '45h']
sub ['eax,', '[ebp+var_170]']
mov ['[ebp+var_210],', 'eax']
mov ['eax,', '[ebp+var_210]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_170],', '0']
mov ['eax,', '[ebp+var_204]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
jmp ['loc_3626']
cmp ['[ebp+var_170],', '0']
jz ['loc_3504']
mov ['eax,', '[ebp+var_170]']
sub ['eax,', '1']
mov ['[ebp+var_170],', 'eax']
mov ['eax,', '[ebp+var_170]']
cdq
mov ['ecx,', '21h']
idiv ['ecx']
mov ['[ebp+var_21C],', 'edx']
cmp ['[ebp+var_194],', '500h']
jnb ['short', 'loc_34A8']
mov ['eax,', '[ebp+var_21C]']
add ['eax,', '5']
mov ['[ebp+var_228],', 'eax']
jmp ['short', 'loc_34B9']
mov ['eax,', '45h']
sub ['eax,', '[ebp+var_21C]']
mov ['[ebp+var_228],', 'eax']
mov ['eax,', '[ebp+var_228]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_170]']
sub ['eax,', '[ebp+var_21C]']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '0']
jle ['short', 'loc_3504']
push ['25h']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_170]']
sub ['eax,', '21h']
mov ['[ebp+var_170],', 'eax']
jmp ['short', 'loc_34DD']
cmp ['[ebp+var_1BC],', '0']
jbe ['loc_3608']
cmp ['[ebp+var_1BC],', '2000000h']
ja ['loc_3608']
lea ['ecx,', '[ebp+var_C4]']
call ['?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ']
mov ['[ebp+var_234],', 'eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ']
sub ['eax,', '1']
mov ['[ebp+var_240],', 'eax']
mov ['eax,', '[ebp+var_1A0]']
cmp ['eax,', '[ebp+var_240]']
jge ['short', 'loc_35D0']
mov ['eax,', '[ebp+var_234]']
add ['eax,', '[ebp+var_1A0]']
mov ['[ebp+var_24C],', 'eax']
mov ['eax,', '[ebp+var_234]']
add ['eax,', '[ebp+var_240]']
mov ['[ebp+var_258],', 'eax']
mov ['eax,', '[ebp+var_24C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_261],', 'cl']
mov ['eax,', '[ebp+var_24C]']
mov ['ecx,', '[ebp+var_258]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_24C]']
add ['eax,', '1']
mov ['[ebp+var_24C],', 'eax']
mov ['eax,', '[ebp+var_258]']
mov ['cl,', '[ebp+var_261]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_258]']
sub ['edx,', '1']
mov ['[ebp+var_258],', 'edx']
mov ['eax,', '[ebp+var_24C]']
cmp ['eax,', '[ebp+var_258]']
jb ['short', 'loc_3578']
cmp ['[ebp+var_1BC],', '1']
setnz ['al']
add ['al,', '1']
movzx ['ecx,', 'al']
push ['ecx']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_194],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ']
mov ['[ebp+var_1A0],', 'eax']
jmp ['short', 'loc_3626']
mov ['eax,', '[ebp+var_204]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_204]']
mov ['[ebp+var_194],', 'eax']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '8']
jz ['loc_384C']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?getStrength@CollationSettings@icu_56@@SAHH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_3656']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_1BC],', '0']
setz ['cl']
mov ['[ebp+var_3C8],', 'ecx']
jmp ['short', 'loc_366C']
mov ['edx,', '0FFFFh']
cmp ['edx,', '[ebp+var_1F8]']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_3C8],', 'eax']
cmp ['[ebp+var_3C8],', '0']
jz ['short', 'loc_367A']
jmp ['loc_384C']
mov ['eax,', '[ebp+var_1F8]']
shr ['eax,', '8']
and ['eax,', '0FFh']
mov ['[ebp+var_270],', 'eax']
mov ['eax,', '[ebp+var_270]']
and ['eax,', '0C0h']
cmp ['eax,', '0C0h']
jnz ['short', 'loc_36C9']
mov ['ecx,', 'ds:?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48']
add ['ecx,', '0CAh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CG@KEGHOICE@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_270]']
and ['eax,', '0C0h']
jnz ['short', 'loc_36F3']
cmp ['[ebp+var_270],', '1']
jbe ['short', 'loc_36F3']
mov ['eax,', '[ebp+var_164]']
add ['eax,', '1']
mov ['[ebp+var_164],', 'eax']
jmp ['loc_384C']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '100h']
jnz ['loc_37C0']
cmp ['[ebp+var_164],', '0']
jz ['loc_37A0']
cmp ['[ebp+var_270],', '1']
ja ['short', 'loc_3726']
lea ['ecx,', '[ebp+var_80]']
call ['?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_37A0']
mov ['eax,', '[ebp+var_164]']
sub ['eax,', '1']
mov ['[ebp+var_164],', 'eax']
cmp ['[ebp+var_164],', '7']
jl ['short', 'loc_3759']
push ['70h']
lea ['ecx,', '[ebp+var_80]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_164]']
sub ['eax,', '7']
mov ['[ebp+var_164],', 'eax']
jmp ['short', 'loc_3735']
cmp ['[ebp+var_270],', '1']
ja ['short', 'loc_3773']
mov ['eax,', '[ebp+var_164]']
add ['eax,', '1']
mov ['[ebp+var_27C],', 'eax']
jmp ['short', 'loc_3784']
mov ['eax,', '0Dh']
sub ['eax,', '[ebp+var_164]']
mov ['[ebp+var_27C],', 'eax']
mov ['eax,', '[ebp+var_27C]']
shl ['eax,', '4']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_164],', '0']
cmp ['[ebp+var_270],', '1']
jbe ['short', 'loc_37BE']
mov ['eax,', '[ebp+var_270]']
shr ['eax,', '6']
add ['eax,', '0Dh']
shl ['eax,', '4']
mov ['[ebp+var_270],', 'eax']
jmp ['short', 'loc_383D']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_381B']
mov ['eax,', '[ebp+var_164]']
sub ['eax,', '1']
mov ['[ebp+var_164],', 'eax']
cmp ['[ebp+var_164],', '0Dh']
jl ['short', 'loc_37FC']
push ['30h']
lea ['ecx,', '[ebp+var_80]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_164]']
sub ['eax,', '0Dh']
mov ['[ebp+var_164],', 'eax']
jmp ['short', 'loc_37D8']
mov ['eax,', '[ebp+var_164]']
add ['eax,', '3']
shl ['eax,', '4']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_164],', '0']
cmp ['[ebp+var_270],', '1']
jbe ['short', 'loc_383D']
mov ['eax,', '[ebp+var_270]']
shr ['eax,', '6']
mov ['ecx,', '3']
sub ['ecx,', 'eax']
shl ['ecx,', '4']
mov ['[ebp+var_270],', 'ecx']
mov ['eax,', '[ebp+var_270]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '10h']
jz ['loc_3BA1']
mov ['eax,', '[ebp+var_1F8]']
and ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_288],', 'eax']
mov ['eax,', '[ebp+var_1F8]']
and ['eax,', '0C000h']
cmp ['eax,', '0C000h']
jnz ['short', 'loc_38A2']
mov ['ecx,', 'ds:?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48']
add ['ecx,', '100h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DK@KLPHBKCE@?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AA3?$AA2?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_288],', '500h']
jnz ['short', 'loc_38C2']
mov ['eax,', '[ebp+var_17C]']
add ['eax,', '1']
mov ['[ebp+var_17C],', 'eax']
jmp ['loc_3BA1']
mov ['eax,', '[ebp+var_3C]']
and ['eax,', '8000h']
jnz ['loc_3991']
cmp ['[ebp+var_17C],', '0']
jz ['loc_395D']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '1']
mov ['[ebp+var_17C],', 'eax']
cmp ['[ebp+var_17C],', '61h']
jl ['short', 'loc_3913']
push ['65h']
lea ['ecx,', '[ebp+var_108]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '61h']
mov ['[ebp+var_17C],', 'eax']
jmp ['short', 'loc_38EC']
cmp ['[ebp+var_288],', '500h']
jnb ['short', 'loc_3930']
mov ['eax,', '[ebp+var_17C]']
add ['eax,', '5']
mov ['[ebp+var_294],', 'eax']
jmp ['short', 'loc_3941']
mov ['eax,', '0C5h']
sub ['eax,', '[ebp+var_17C]']
mov ['[ebp+var_294],', 'eax']
mov ['eax,', '[ebp+var_294]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_17C],', '0']
cmp ['[ebp+var_288],', '500h']
jbe ['short', 'loc_397A']
mov ['eax,', '[ebp+var_288]']
add ['eax,', '0C000h']
mov ['[ebp+var_288],', 'eax']
mov ['eax,', '[ebp+var_288]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
jmp ['loc_3BA1']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '100h']
jnz ['loc_3A60']
cmp ['[ebp+var_17C],', '0']
jz ['loc_3A2C']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '1']
mov ['[ebp+var_17C],', 'eax']
cmp ['[ebp+var_17C],', '21h']
jl ['short', 'loc_39E2']
push ['25h']
lea ['ecx,', '[ebp+var_108]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '21h']
mov ['[ebp+var_17C],', 'eax']
jmp ['short', 'loc_39BB']
cmp ['[ebp+var_288],', '500h']
jnb ['short', 'loc_39FF']
mov ['eax,', '[ebp+var_17C]']
add ['eax,', '5']
mov ['[ebp+var_2A0],', 'eax']
jmp ['short', 'loc_3A10']
mov ['eax,', '45h']
sub ['eax,', '[ebp+var_17C]']
mov ['[ebp+var_2A0],', 'eax']
mov ['eax,', '[ebp+var_2A0]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_17C],', '0']
cmp ['[ebp+var_288],', '500h']
jbe ['short', 'loc_3A49']
mov ['eax,', '[ebp+var_288]']
add ['eax,', '4000h']
mov ['[ebp+var_288],', 'eax']
mov ['eax,', '[ebp+var_288]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
jmp ['loc_3BA1']
cmp ['[ebp+var_288],', '100h']
ja ['short', 'loc_3A71']
jmp ['loc_3AFD']
cmp ['[ebp+var_1F8],', '0FFFFh']
jbe ['short', 'loc_3AAD']
mov ['eax,', '[ebp+var_288]']
xor ['eax,', '0C000h']
mov ['[ebp+var_288],', 'eax']
cmp ['[ebp+var_288],', '0C500h']
jnb ['short', 'loc_3AAB']
mov ['eax,', '[ebp+var_288]']
sub ['eax,', '4000h']
mov ['[ebp+var_288],', 'eax']
jmp ['short', 'loc_3AFD']
cmp ['[ebp+var_288],', '8600h']
jb ['short', 'loc_3AC5']
cmp ['[ebp+var_288],', '0BFFFh']
jbe ['short', 'loc_3AEC']
mov ['eax,', 'ds:?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48']
add ['eax,', '143h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DG@FLKDDFPI@?$AA0?$AAx?$AA8?$AA6?$AA0?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAb?$AAf?$AAf?$AAf?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_288]']
add ['eax,', '4000h']
mov ['[ebp+var_288],', 'eax']
cmp ['[ebp+var_17C],', '0']
jz ['loc_3B8F']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '1']
mov ['[ebp+var_17C],', 'eax']
cmp ['[ebp+var_17C],', '21h']
jl ['short', 'loc_3B43']
push ['0A5h']
lea ['ecx,', '[ebp+var_108]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '21h']
mov ['[ebp+var_17C],', 'eax']
jmp ['short', 'loc_3B19']
cmp ['[ebp+var_288],', '8500h']
jnb ['short', 'loc_3B62']
mov ['eax,', '[ebp+var_17C]']
add ['eax,', '85h']
mov ['[ebp+var_2AC],', 'eax']
jmp ['short', 'loc_3B73']
mov ['eax,', '0C5h']
sub ['eax,', '[ebp+var_17C]']
mov ['[ebp+var_2AC],', 'eax']
mov ['eax,', '[ebp+var_2AC]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_17C],', '0']
mov ['eax,', '[ebp+var_288]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '20h']
jz ['loc_3CF1']
mov ['eax,', '[ebp+var_1F8]']
and ['eax,', '0FFFFh']
mov ['[ebp+var_2B8],', 'eax']
mov ['eax,', '[ebp+var_2B8]']
and ['eax,', '0C0h']
jnz ['short', 'loc_3BEB']
cmp ['[ebp+var_2B8],', '100h']
jbe ['short', 'loc_3BEB']
mov ['eax,', '[ebp+var_188]']
add ['eax,', '1']
mov ['[ebp+var_188],', 'eax']
jmp ['loc_3CF1']
cmp ['[ebp+var_2B8],', '100h']
jnz ['short', 'loc_3C23']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0Ch']
jnz ['short', 'loc_3C23']
lea ['ecx,', '[ebp+var_14C]']
call ['?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3C23']
push ['1']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
jmp ['loc_3CF1']
cmp ['[ebp+var_2B8],', '100h']
jnz ['short', 'loc_3C3B']
mov ['[ebp+var_2B8],', '1']
jmp ['short', 'loc_3C52']
mov ['eax,', '[ebp+var_2B8]']
shr ['eax,', '6']
and ['eax,', '3']
add ['eax,', '0FCh']
mov ['[ebp+var_2B8],', 'eax']
cmp ['[ebp+var_188],', '0']
jz ['loc_3CDF']
mov ['eax,', '[ebp+var_188]']
sub ['eax,', '1']
mov ['[ebp+var_188],', 'eax']
cmp ['[ebp+var_188],', '71h']
jl ['short', 'loc_3C98']
push ['8Ch']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_188]']
sub ['eax,', '71h']
mov ['[ebp+var_188],', 'eax']
jmp ['short', 'loc_3C6E']
cmp ['[ebp+var_2B8],', '1Ch']
jnb ['short', 'loc_3CB2']
mov ['eax,', '[ebp+var_188]']
add ['eax,', '1Ch']
mov ['[ebp+var_2C4],', 'eax']
jmp ['short', 'loc_3CC3']
mov ['eax,', '0FCh']
sub ['eax,', '[ebp+var_188]']
mov ['[ebp+var_2C4],', 'eax']
mov ['eax,', '[ebp+var_2C4]']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['[ebp+var_188],', '0']
mov ['eax,', '[ebp+var_2B8]']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_1F8]']
shr ['eax,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_3D01']
jmp ['short', 'loc_3D06']
jmp ['loc_2FCA']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3D5C']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
jmp ['loc_412E']
mov ['[ebp+var_2CD],', '1']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '4']
jz ['loc_3E05']
mov ['esi,', 'esp']
push ['2']
mov ['eax,', '[ebp+arg_14]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_14]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3DCF']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
jmp ['loc_412E']
lea ['ecx,', '[ebp+var_C4]']
call ['?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_2CD]']
and ['ecx,', 'eax']
mov ['[ebp+var_2CD],', 'cl']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C4]']
call ['?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '8']
jz ['loc_3F8B']
mov ['esi,', 'esp']
push ['3']
mov ['eax,', '[ebp+arg_14]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_14]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3E71']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
jmp ['loc_412E']
lea ['ecx,', '[ebp+var_80]']
call ['?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_2CD]']
and ['ecx,', 'eax']
mov ['[ebp+var_2CD],', 'cl']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
lea ['ecx,', '[ebp+var_80]']
call ['?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ']
sub ['eax,', '1']
mov ['[ebp+var_2DC],', 'eax']
mov ['[ebp+var_2E5],', '0']
mov ['[ebp+var_2F4],', '0']
jmp ['short', 'loc_3EC8']
mov ['eax,', '[ebp+var_2F4]']
add ['eax,', '1']
mov ['[ebp+var_2F4],', 'eax']
mov ['eax,', '[ebp+var_2F4]']
cmp ['eax,', '[ebp+var_2DC]']
jge ['loc_3F70']
mov ['eax,', '[ebp+var_2F4]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
call ['??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z']
mov ['[ebp+var_2FD],', 'al']
movzx ['eax,', '[ebp+var_2FD]']
and ['eax,', '0Fh']
jnz ['short', 'loc_3F06']
movzx ['ecx,', '[ebp+var_2FD]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3F2F']
mov ['edx,', 'ds:?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48']
add ['edx,', '198h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DC@OJPACKBA@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_2E5]']
test ['eax,', 'eax']
jnz ['short', 'loc_3F48']
mov ['al,', '[ebp+var_2FD]']
mov ['[ebp+var_2E5],', 'al']
jmp ['short', 'loc_3F6B']
movzx ['eax,', '[ebp+var_2E5]']
movzx ['ecx,', '[ebp+var_2FD]']
sar ['ecx,', '4']
or ['eax,', 'ecx']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['[ebp+var_2E5],', '0']
jmp ['loc_3EB9']
movzx ['eax,', '[ebp+var_2E5]']
test ['eax,', 'eax']
jz ['short', 'loc_3F8B']
movzx ['eax,', '[ebp+var_2E5]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '10h']
jz ['loc_402D']
mov ['esi,', 'esp']
push ['4']
mov ['eax,', '[ebp+arg_14]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_14]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3FF7']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
jmp ['loc_412E']
lea ['ecx,', '[ebp+var_108]']
call ['?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_2CD]']
and ['ecx,', 'eax']
mov ['[ebp+var_2CD],', 'cl']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z']
mov ['eax,', '[ebp+var_24]']
and ['eax,', '20h']
jz ['loc_40CF']
mov ['esi,', 'esp']
push ['5']
mov ['eax,', '[ebp+arg_14]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_14]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4099']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
jmp ['loc_412E']
lea ['ecx,', '[ebp+var_14C]']
call ['?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_2CD]']
and ['ecx,', 'eax']
mov ['[ebp+var_2CD],', 'cl']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
call ['?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z']
movsx ['eax,', '[ebp+var_2CD]']
test ['eax,', 'eax']
jz ['short', 'loc_40E9']
mov ['ecx,', '[ebp+arg_C]']
call ['?IsOk@SortKeyByteSink@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_40F2']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_14C]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_C4]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN161']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN160']
dd ['offset', '$LN154']
dd ['0FFFFFF3Ch,', '3Ch']
dd ['offset', '$LN155']
dd ['0FFFFFEF8h,', '3Ch']
dd ['offset', '$LN156']
dd ['0FFFFFEB4h,', '3Ch']
dd ['offset', '$LN157']
dd ['0FFFFFE14h,', '3']
dd ['offset', '$LN158']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
endp
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-0C4h]']
jmp ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
endp
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$2 proc near
lea ['ecx,', '[ebp-108h]']
jmp ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
endp
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$3 proc near
lea ['ecx,', '[ebp-14Ch]']
jmp ['??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ']
endp
__ehhandler$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3CCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DC@OJPACKBA@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<(c', '&', '0xf)', '==', '0', '&&', 'c', '!=', '0>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DG@FLKDDFPI@?$AA0?$AAx?$AA8?$AA6?$AA0?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAb?$AAf?$AAf?$AAf?$AA?$AA@']
unicode ['0,', '<0x8600', '>']
dw ['3Ch']
unicode ['0,', '<=', 't', '&&', 't', '>']
dw ['3Ch']
unicode ['0,', '<=', '0xbfff>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1DK@KLPHBKCE@?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AA3?$AA2?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$AA@']
unicode ['0,', '<(lower32', '&', '0xc000)', '!=', '0xc000>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CG@KEGHOICE@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$AA@']
unicode ['0,', '<(c', '&', '0xc0)', '!=', '0xc0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$3']
dd ['offset', '__unwindtable$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Append@SortKeyByteSink@icu_56@@QAEXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_43E1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_4436']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
jl ['short', 'loc_4415']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4427']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@SortKeyByteSink@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?IsOk@SortKeyByteSink@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+38h],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+38h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+34h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z']
mov ['al,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
jle ['short', 'loc_46B2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+34h]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z']
movzx ['eax,', 'byte', 'ptr', '[eax]']
cmp ['eax,', '1']
jz ['short', 'loc_46D0']
mov ['esi,', 'esp']
push ['6Eh']
push ['offset', '??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1EA@OCDHCHOI@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$FL?$AAl?$AAe?$AAn?$AA?5?$AA?9?$AA?5?$AA1?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
sub ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1EA@OCDHCHOI@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$FL?$AAl?$AAe?$AAn?$AA?5?$AA?9?$AA?5?$AA1?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@']
unicode ['0,', '<len', '>']
dw ['3Eh']
unicode ['0,', '<', '0', '&&', 'buffer[len', '-', '1]', '==', '1>,0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_49CC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['loc_4A97']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_4A90']
cmp ['[ebp+Size],', '0']
jle ['short', 'loc_4A70']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_4A3C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+Size],', 'ecx']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_4A4A']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+Dst]']
jmp ['short', 'loc_4A99']
jmp ['short', 'loc_4A99']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__allshl:near']
extrn ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:near']
extrn ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:near']
extrn ['__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??8CollationIterator@icu_56@@UBECABV01@@Z:near']
extrn ['__purecall:near']
extrn ['?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?foundNULTerminator@CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ:near']
extrn ['?getDataCE32@CollationIterator@icu_56@@MBEIH@Z:near']
extrn ['?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z:near']
extrn ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1CollationIterator@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__imp_??0SharedObject@icu_56@@QAE@XZ:near']
extrn ['??8CollationSettings@icu_56@@QBECABU01@@Z:near']
extrn ['?reorderEx@CollationSettings@icu_56@@ABEII@Z:near']
extrn ['__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??1CollationSettings@icu_56@@UAE@XZ:near']
extrn ['__imp_??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['??_GSortKeyByteSink@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ESortKeyByteSink@icu_56@@UAEPAXI@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['__imp___wassert:near']
extrn ['??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ELevelCallback@CollationKeys@icu_56@@UAEPAXI@Z:near']
extrn ['__allshr:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_malloc_56:near']
end

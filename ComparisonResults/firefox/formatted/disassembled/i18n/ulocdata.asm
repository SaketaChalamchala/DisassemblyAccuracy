endp
_ulocdata_open_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_112']
xor ['eax,', 'eax']
jmp ['short', 'loc_190']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_132']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['short', 'loc_190']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['0']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '??_C@_0O@HLDNIIAD@icudt56l?9lang?$AA@']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_18D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_190']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0O@HLDNIIAD@icudt56l?9lang?$AA@']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_close_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_20A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_setNoSubstitute_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax],', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getNoSubstitute_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['al,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getExemplarSet_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2BE']
xor ['eax,', 'eax']
jmp ['loc_35C']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', 'ds:?exemplarSetTypes@?1??ulocdata_getExemplarSet_56@@9@9[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_20],', '0FFFFFF81h']
jnz ['short', 'loc_2FA']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2FA']
mov ['[ebp+var_20],', '2']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_308']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_314']
xor ['eax,', 'eax']
jmp ['short', 'loc_35C']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_33B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
or ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_uset_applyPattern_56']
add ['esp,', '14h']
jmp ['short', 'loc_359']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
or ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uset_openPatternOptions_56']
add ['esp,', '10h']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN9']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN10']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getDelimiter_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3F6']
xor ['eax,', 'eax']
jmp ['loc_4C6']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['offset', '??_C@_0L@KABPAJDP@delimiters?$AA@']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_2C],', '0FFFFFF81h']
jnz ['short', 'loc_42A']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_42A']
mov ['[ebp+var_2C],', '2']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_438']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_450']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_4C6']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', 'ds:?delimiterKeys@?1??ulocdata_getDelimiter_56@@9@9[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
cmp ['[ebp+var_2C],', '0FFFFFF81h']
jnz ['short', 'loc_495']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_495']
mov ['[ebp+var_2C],', '2']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_4A3']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_4AF']
xor ['eax,', 'eax']
jmp ['short', 'loc_4C6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_0']
dd ['offset', '$LN10_0']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN11_0']
assume ['cs:_rdata']
public ['??_C@_0L@KABPAJDP@delimiters?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getMeasurementSystem_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '3']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_562']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_567']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_5A1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '??_C@_0BC@DIFBFIAG@MeasurementSystem?$AA@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_measurementTypeBundleForLocale']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ures_getInt_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@DIFBFIAG@MeasurementSystem?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_measurementTypeBundleForLocale	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_CC],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_addLikelySubtags_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['4']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
lea ['edx,', '[ebp+var_A8]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
push ['0']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_C0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['offset', '??_C@_0BA@BGJJGICN@measurementData?$AA@']
mov ['edx,', '[ebp+var_C0]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
cmp ['[ebp+var_C0],', '0']
jz ['loc_73B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_C0]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_6C4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_72C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+var_D8],', '0']
jz ['short', 'loc_6ED']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['offset', '??_C@_03MMKGDKGA@001?$AA@']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C0]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_CC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '19Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN9_0']
dd ['offset', '$LN7']
dd ['0FFFFFF4Ch,', '4']
dd ['offset', '$LN8']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_03MMKGDKGA@001?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BA@BGJJGICN@measurementData?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getPaperSize_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_819']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_81B']
jmp ['short', 'loc_884']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_09KFDMKFMI@PaperSize?$AA@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_measurementTypeBundleForLocale']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_878']
cmp ['[ebp+var_20],', '2']
jge ['short', 'loc_863']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '5']
jmp ['short', 'loc_878']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9_1']
dd ['offset', '$LN8_0']
assume ['cs:_rdata']
public ['??_C@_09KFDMKFMI@PaperSize?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getCLDRVersion_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
push ['0']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '??_C@_0M@MLPFBBKF@cldrVersion?$AA@']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ures_getVersionByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0M@MLPFBBKF@cldrVersion?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getLocaleDisplayPattern_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_992']
xor ['eax,', 'eax']
jmp ['loc_A5C']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['offset', '??_C@_0BF@OBICHDNJ@localeDisplayPattern?$AA@']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_2C],', '0FFFFFF81h']
jnz ['short', 'loc_9C6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9C6']
mov ['[ebp+var_2C],', '2']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_9D4']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_9EC']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_A5C']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '??_C@_07CHFOACKJ@pattern?$AA@']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
cmp ['[ebp+var_2C],', '0FFFFFF81h']
jnz ['short', 'loc_A2B']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A2B']
mov ['[ebp+var_2C],', '2']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_A39']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_A45']
xor ['eax,', 'eax']
jmp ['short', 'loc_A5C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_1']
dd ['offset', '$LN10_3']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN11_1']
assume ['cs:_rdata']
public ['??_C@_07CHFOACKJ@pattern?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BF@OBICHDNJ@localeDisplayPattern?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ulocdata_getLocaleSeparator_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_B16']
xor ['eax,', 'eax']
jmp ['loc_C68']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['offset', '??_C@_0BF@OBICHDNJ@localeDisplayPattern?$AA@']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_2C],', '0FFFFFF81h']
jnz ['short', 'loc_B4A']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B4A']
mov ['[ebp+var_2C],', '2']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_B58']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_B73']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_C68']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '??_C@_09MOAJOJKN@separator?$AA@']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
cmp ['[ebp+var_2C],', '0FFFFFF81h']
jnz ['short', 'loc_BB2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BB2']
mov ['[ebp+var_2C],', '2']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_BC0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_BCF']
xor ['eax,', 'eax']
jmp ['loc_C68']
push ['offset', '?sub0@?1??ulocdata_getLocaleSeparator_56@@9@9']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_strstr_56']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
push ['offset', '?sub1@?1??ulocdata_getLocaleSeparator_56@@9@9']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_strstr_56']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_C51']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_C51']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
ja ['short', 'loc_C51']
mov ['eax,', 'ds:?subLen@?1??ulocdata_getLocaleSeparator_56@@9@9']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_20]']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_C51']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_C68']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN14']
dd ['offset', '$LN12_2']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN13_1']
assume ['cs:_rdata']
public ['??_C@_09MOAJOJKN@separator?$AA@']
extrn ['_uprv_free_56:near']
extrn ['_ures_open_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_ures_close_56:near']
extrn ['_uset_openPatternOptions_56:near']
extrn ['_uset_applyPattern_56:near']
extrn ['_ures_getStringByKey_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_u_strncpy_56:near']
extrn ['_ures_getByKey_56:near']
extrn ['_ures_getInt_56:near']
extrn ['_ures_openDirect_56:near']
extrn ['_uloc_getCountry_56:near']
extrn ['_uloc_addLikelySubtags_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['_ures_getIntVector_56:near']
extrn ['_ures_getVersionByKey_56:near']
extrn ['_u_strstr_56:near']
end

endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAssignedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jz ['short', 'loc_28A']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jz ['short', 'loc_28A']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_291']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C1h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C0h']
or ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSpecialCE32@Collation@icu_56@@SACI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
cmp ['eax,', '0C0h']
setnb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tagFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCE32Tag@Collation@icu_56@@SACIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4C7']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_4C7']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_4CE']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_584']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_584']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_584']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_58B']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSelfContainedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_615']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_615']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_615']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '4']
jz ['short', 'loc_615']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_61C']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isPrefixCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isContractionCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ce32HasContext@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_714']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '8']
jz ['short', 'loc_70B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '9']
jnz ['short', 'loc_714']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_71B']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF000000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000000h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF0000h']
shr ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
or ['eax,', '500h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexFromCE32@Collation@icu_56@@SAHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '0Dh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '1Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?digitFromCE32@Collation@icu_56@@SADI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFh']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0C0h']
jnb ['short', 'loc_925']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
jmp ['short', 'loc_953']
jmp ['short', 'loc_953']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0Fh']
cmp ['eax,', '1']
jnz ['short', 'loc_94E']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
jmp ['short', 'loc_953']
jmp ['short', 'loc_953']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JIIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_8]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '6']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z']
add ['esp,', '4']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Collation@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '12000000h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32@CollationData@icu_56@@QBEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0D800h']
jnb ['short', 'loc_BD5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '5']
mov ['eax,', '[ecx]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_D0],', 'eax']
jmp ['loc_CA9']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_C19']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
jmp ['loc_C9D']
cmp ['[ebp+arg_0],', '10FFFFh']
jbe ['short', 'loc_C2E']
mov ['[ebp+var_D8],', '80h']
jmp ['short', 'loc_C91']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_C4B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_C85']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_DC]']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_D04']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_D3E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDigit@CollationData@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '660h']
jge ['short', 'loc_DB4']
cmp ['[ebp+arg_0],', '39h']
jg ['short', 'loc_D9C']
cmp ['[ebp+arg_0],', '30h']
jl ['short', 'loc_D9C']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_DA6']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_DD4']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
mov ['[ebp+var_D4],', 'edx']
mov ['al,', 'byte', 'ptr', '[ebp+var_D4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E5E']
movsx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_E55']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDigit@CollationData@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E5E']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_E65']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ecx+edx]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readCE32@CollationData@icu_56@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
or ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[edx+eax*8]']
mov ['dword', 'ptr', '[ebp+var_18],', 'ecx']
mov ['edx,', '[edx+eax*8+4]']
mov ['dword', 'ptr', '[ebp+var_18+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_18+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z']
add ['esp,', '0Ch']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16@CollationData@icu_56@@QBEGH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+18h]']
call ['dword', 'ptr', 'ds:__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasLccc@CollationFCD@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '300h']
jl ['short', 'loc_1067']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', 'ds:?lcccIndex@CollationFCD@icu_56@@0QBEB[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1067']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_8]']
and ['edx,', 'dword', 'ptr', 'ds:?lcccBits@CollationFCD@icu_56@@0QBIB[eax*4]']
jz ['short', 'loc_1067']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_106E']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasTccc@CollationFCD@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jl ['short', 'loc_10DB']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', 'ds:?tcccIndex@CollationFCD@icu_56@@0QBEB[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_10DB']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_8]']
and ['edx,', 'dword', 'ptr', 'ds:?tcccBits@CollationFCD@icu_56@@0QBIB[eax*4]']
jz ['short', 'loc_10DB']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_10E2']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?mayHaveLccc@CollationFCD@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '300h']
jge ['short', 'loc_111B']
xor ['al,', 'al']
jmp ['short', 'loc_117A']
cmp ['[ebp+arg_0],', '0FFFFh']
jle ['short', 'loc_1135']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
movzx ['ecx,', 'ax']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', 'ds:?lcccIndex@CollationFCD@icu_56@@0QBEB[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_116D']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_8]']
and ['edx,', 'dword', 'ptr', 'ds:?lcccBits@CollationFCD@icu_56@@0QBIB[eax*4]']
jz ['short', 'loc_116D']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_1174']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1FFF01h']
cmp ['eax,', '0F01h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '8182h']
jz ['short', 'loc_11FA']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '8184h']
jz ['short', 'loc_11FA']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_1201']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationFCD@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['??0CEBuffer@CollationIterator@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+170h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+174h],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationIterator@icu_56@@6B@']
public ['??_7CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0']
dd ['offset', '__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVCollationIterator@icu_56@@@8']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollationIterator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationIterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jge ['short', 'loc_161B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['loc_186C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1640']
mov ['eax,', '1000100h']
mov ['edx,', '1']
jmp ['loc_186C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_16F3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_186C']
cmp ['[ebp+var_2C],', '0C0h']
jnz ['loc_17F4']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_1748']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
push ['1']
push ['1000100h']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_186C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_17F2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_186C']
jmp ['short', 'loc_17FD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_2C],', '0C1h']
jnz ['short', 'loc_1854']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_186C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '28h']
jl ['short', 'loc_18EC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_18FF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_1901']
jmp ['short', 'loc_1901']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEsLength@CollationIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEs@CollationIterator@icu_56@@QAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+168h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_1BA0']
mov ['ecx,', '[ebp+var_8]']
call ['?clearCEs@CollationIterator@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1BFD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1C86']
push ['offset', '??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['178h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1C7E']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1CAF']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1CAC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CEBuffer@CollationIterator@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+var_14]']
jg ['short', 'loc_1D4E']
mov ['al,', '1']
jmp ['short', 'loc_1DBD']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D67']
xor ['al,', 'al']
jmp ['short', 'loc_1DBD']
cmp ['[ebp+var_14],', '3E8h']
jge ['short', 'loc_1D7B']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1D83']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
cmp ['[ebp+var_14],', 'ecx']
jl ['short', 'loc_1D67']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_1DBB']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['al,', 'al']
jmp ['short', 'loc_1DBD']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationIterator@icu_56@@IAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['??0CEBuffer@CollationIterator@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+168h]']
mov ['[eax+168h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+170h]']
mov ['[eax+170h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+174h]']
mov ['[eax+174h],', 'dl']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_1F49']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1F49']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_1F14']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_1F3E']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_1F0B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
jmp ['short', 'loc_1F56']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN12_0']
dd ['offset', '$LN10']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '10h']
jmp ['??1CEBuffer@CollationIterator@icu_56@@QAE@XZ']
endp
__ehhandler$??0CollationIterator@icu_56@@IAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-100h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CollationIterator@icu_56@@IAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$1']
dd ['offset', '__unwindtable$??0CollationIterator@icu_56@@IAE@ABV01@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CollationIterator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationIterator@icu_56@@6B@']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_20AF']
push ['1']
mov ['ecx,', '[ebp+var_EC]']
call ['??_GSkippedState@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_20B9']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['??1CEBuffer@CollationIterator@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '10h']
jmp ['??1CEBuffer@CollationIterator@icu_56@@QAE@XZ']
endp
__ehhandler$??1CollationIterator@icu_56@@UAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CollationIterator@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$0']
align ['8']
dd ['offset', '__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$1']
dd ['offset', '__unwindtable$??1CollationIterator@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSkippedState@icu_56@@QAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SkippedState@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_21B9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SkippedState@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1SkippedState@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '40h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1SkippedState@icu_56@@QAE@XZ$0 proc near 
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1SkippedState@icu_56@@QAE@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1SkippedState@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1SkippedState@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1SkippedState@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8CollationIterator@icu_56@@UBECABV01@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['___RTtypeid']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['___RTtypeid']
add ['esp,', '4']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??8type_info@@QBE_NABV0@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_236A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_236A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+168h]']
jnz ['short', 'loc_236A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+170h]']
cmp ['edx,', '[ecx+170h]']
jnz ['short', 'loc_236A']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+174h]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+174h]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_236E']
xor ['al,', 'al']
jmp ['short', 'loc_23E9']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2380']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+10h]']
jge ['short', 'loc_23E7']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
mov ['[ebp+var_E0],', 'esi']
mov ['[ebp+var_DC],', 'edi']
mov ['[ebp+var_E8],', 'eax']
mov ['[ebp+var_E4],', 'edx']
mov ['edx,', '[ebp+var_E0]']
cmp ['edx,', '[ebp+var_E8]']
jnz ['short', 'loc_23E1']
mov ['eax,', '[ebp+var_DC]']
cmp ['eax,', '[ebp+var_E4]']
jz ['short', 'loc_23E5']
xor ['al,', 'al']
jmp ['short', 'loc_23E9']
jmp ['short', 'loc_2377']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@CollationIterator@icu_56@@IAEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+168h],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_2454']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
call ['?clear@SkippedState@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@SkippedState@icu_56@@QAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+80h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fetchCEs@CollationIterator@icu_56@@QAEHAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2536']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_D0],', 'edx']
cmp ['[ebp+var_D4],', '1000100h']
jnz ['short', 'loc_2525']
cmp ['[ebp+var_D0],', '1']
jz ['short', 'loc_2536']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+168h],', 'edx']
jmp ['short', 'loc_24E3']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_25D6']
mov ['[ebp+var_D0],', '0C0h']
jmp ['short', 'loc_25ED']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?foundNULTerminator@CollationIterator@icu_56@@MAECXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDataCE32@CollationIterator@icu_56@@MBEIH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2719']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '5']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_27CF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_D0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['short', 'loc_27D6']
jmp ['short', 'loc_27D6']
mov ['eax,', '1']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '158h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_158]']
mov ['ecx,', '56h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3082']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['dword', 'ptr', '[ebp+var_158+4],', 'eax']
cmp ['dword', 'ptr', '[ebp+var_158+4],', '0Fh']
ja ['loc_307D']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_158+4]']
jmp ['ds:$LN68[ecx*4]']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2870']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '5']
jmp ['loc_309F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_309F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_309F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2923']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
jmp ['loc_309F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+eax*4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?lengthFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_29A8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ebp+var_158+4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_158+4]']
push ['eax']
call ['?ceFromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jg ['short', 'loc_2969']
jmp ['loc_309F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
lea ['eax,', '[edx+eax*8]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?lengthFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2A33']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ebp+var_158],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['dword', 'ptr', '[ebp+var_158+4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_158+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_158]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jg ['short', 'loc_29EE']
jmp ['loc_309F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+38h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2A73']
jmp ['loc_309F']
cmp ['[ebp+arg_8],', '0C0h']
jnz ['short', 'loc_2A97']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_2AC0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z']
mov ['[ebp+arg_8],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_2AFB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_307D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['?readCE32@CollationData@icu_56@@SAIPB_W@Z']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_2B3A']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jnz ['loc_2BCC']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jge ['short', 'loc_2BCC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jge ['short', 'loc_2B86']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
jmp ['short', 'loc_2BCA']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '200h']
jz ['short', 'loc_2BCA']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['?mayHaveLccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2BCA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
jmp ['short', 'loc_2C24']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jge ['short', 'loc_2BEE']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
jmp ['short', 'loc_2C24']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '200h']
jz ['short', 'loc_2C24']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['?mayHaveLccc@CollationFCD@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2C24']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_2C55']
jmp ['loc_309F']
jmp ['loc_307D']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+174h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C84']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z']
jmp ['loc_309F']
jmp ['short', '$LN20']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_307D']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2CCC']
mov ['eax,', 'ds:?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA']
add ['eax,', '70h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_2D0E']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2D0E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
push ['1000100h']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_309F']
jmp ['short', '$LN17']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['[ebp+arg_8],', 'edx']
jmp ['loc_307D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '0AC00h']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cdq
mov ['ecx,', '15h']
idiv ['ecx']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cdq
mov ['ecx,', '15h']
idiv ['ecx']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '100h']
jz ['loc_2E2E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_74],', '0']
setnz ['cl']
add ['ecx,', '2']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2E27']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['?ceFromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+eax*4+4Ch]']
push ['edx']
call ['?ceFromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_2E27']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+eax*4+9Ch]']
push ['edx']
call ['?ceFromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z']
jmp ['loc_309F']
jmp ['short', '$LN11_0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+edx*4+4Ch]']
push ['ecx']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_2E7C']
jmp ['loc_309F']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+eax*4+9Ch]']
mov ['[ebp+arg_8],', 'edx']
mov ['[ebp+arg_4],', '0FFFFFFFFh']
jmp ['loc_307D']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_2EC9']
mov ['ecx,', 'ds:?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '9Dh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BA@JBNGIGCH@?$AAf?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_2F01']
mov ['ecx,', 'ds:?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '9Eh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DG@KDPMNPGK@?$AA?$CI?$AA?$CI?$AA?$CI?$AAc?$AA?$CJ?$AA?$CG?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAc?$AA0?$AA0?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AAx?$AAd?$AA8?$AA0?$AA0?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8C],', 'ax']
movzx ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_2F9B']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_8C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '300h']
mov ['[ebp+arg_8],', 'eax']
jnz ['short', 'loc_2F60']
mov ['[ebp+arg_8],', '0FFFFFFFFh']
jmp ['short', 'loc_2F99']
cmp ['[ebp+arg_8],', '100h']
jz ['short', 'loc_2F81']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0C0h']
jnz ['short', 'loc_2F99']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_2FA2']
mov ['[ebp+arg_8],', '0FFFFFFFFh']
jmp ['loc_307D']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2FD4']
mov ['eax,', 'ds:?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA']
add ['eax,', '0B2h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_309F']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_3027']
mov ['eax,', 'ds:?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA']
add ['eax,', '0B6h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_305E']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_305E']
mov ['[ebp+arg_8],', '0FFFD0505h']
jmp ['short', 'loc_307D']
jmp ['short', 'loc_307D']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['short', 'loc_309F']
jmp ['loc_280F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '158h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
dd ['offset', '$LN54']
dd ['offset', '$LN53']
dd ['offset', '$LN56']
dd ['offset', '$LN52']
dd ['offset', '$LN50']
dd ['offset', '$LN45']
dd ['offset', '$LN40']
dd ['offset', '$LN37']
dd ['offset', '$LN34']
dd ['offset', '$LN23']
dd ['offset', '$LN20']
dd ['offset', '$LN17']
dd ['offset', '$LN11_0']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
assume ['cs:_rdata']
public ['??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<c', '>']
dw ['3Eh']
unicode ['0,', '<=', '0>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DG@KDPMNPGK@?$AA?$CI?$AA?$CI?$AA?$CI?$AAc?$AA?$CJ?$AA?$CG?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAc?$AA0?$AA0?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AAx?$AAd?$AA8?$AA0?$AA0?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<(((c)&0xfffffc00)==0xd800)>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BA@JBNGIGCH@?$AAf?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AA?$AA@']
unicode ['0,', '<forward>,0']
assume ['cs:_rdata']
public ['??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<c', '==', '0>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\collationiterator.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '28h']
jl ['short', 'loc_3210']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3245']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_D0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+4],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_D0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+4],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?readCE32@CollationData@icu_56@@SAIPB_W@Z']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_??0UCharsTrie@icu_56@@QAE@PB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jge ['short', 'loc_3387']
jmp ['short', 'loc_33D0']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '2']
jl ['short', 'loc_33C4']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_?getValue@UCharsTrie@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '1']
jnz ['short', 'loc_33CE']
jmp ['short', 'loc_33D0']
jmp ['short', 'loc_3362']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+2Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_??1UCharsTrie@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_128]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN11_1']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-44h]']
call ['dword', 'ptr', 'ds:__imp_??1UCharsTrie@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_351B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
call ['?hasNext@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_351B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
call ['?next@SkippedState@icu_56@@QAEHXZ']
jmp ['loc_35A8']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jnz ['short', 'loc_352C']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_35A8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_357E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_357E']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_357E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
call ['?incBeyond@SkippedState@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jle ['short', 'loc_35A5']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_35A5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+170h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+170h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@SkippedState@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasNext@SkippedState@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ecx+80h],', 'eax']
setl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?next@SkippedState@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_14]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+80h]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+80h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incBeyond@SkippedState@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasNext@SkippedState@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3730']
mov ['esi,', 'esp']
push ['4Fh']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BG@EFBLGDGJ@?$AA?$CB?$AAh?$AAa?$AAs?$AAN?$AAe?$AAx?$AAt?$AA?$CI?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+80h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BG@EFBLGDGJ@?$AA?$CB?$AAh?$AAa?$AAs?$AAN?$AAe?$AAx?$AAt?$AA?$CI?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<!hasNext()>,0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_37CD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_37CD']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+16Ch]']
call ['?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+30h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jl ['short', 'loc_380C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+170h]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+170h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_38C2']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_0]']
jl ['short', 'loc_3895']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+80h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_38EF']
jmp ['short', 'loc_38C0']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+80h],', 'eax']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_38EF']
jmp ['short', 'loc_38EF']
mov ['eax,', '[ebp+arg_0]']
neg ['eax']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+80h]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+80h],', 'eax']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '1']
mov ['[ebp+var_2C],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_??0UCharsTrie@icu_56@@QAE@PB_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_39A8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_39A8']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_?firstForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '2']
jl ['loc_3A69']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_?getValue@UCharsTrie@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '1']
jz ['short', 'loc_39FD']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z']
mov ['[ebp+arg_10],', 'eax']
cmp ['[ebp+arg_10],', '0']
jge ['short', 'loc_3A2A']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_??1UCharsTrie@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_140]']
jmp ['loc_3BB6']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_3A5D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3A5D']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z']
mov ['[ebp+var_2C],', '1']
jmp ['loc_3B57']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_3A88']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jge ['loc_3B48']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '400h']
jz ['loc_3B44']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '100h']
jz ['short', 'loc_3AAC']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_3B44']
cmp ['[ebp+var_2C],', '1']
jle ['short', 'loc_3AE6']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z']
mov ['[ebp+arg_10],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getFCD16@CollationData@icu_56@@QBEGH@Z']
movzx ['ecx,', 'ax']
cmp ['ecx,', '0FFh']
jle ['short', 'loc_3B44']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z']
mov ['[ebp+var_134],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_??1UCharsTrie@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_134]']
jmp ['short', 'loc_3BB6']
jmp ['short', 'loc_3B7E']
jmp ['short', 'loc_3B57']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_10],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_39C1']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_44]']
call ['dword', 'ptr', 'ds:__imp_??1UCharsTrie@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_128]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
dd ['offset', '$LN21']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-44h]']
call ['dword', 'ptr', 'ds:__imp_??1UCharsTrie@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-148h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '88h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?saveState@UCharsTrie@icu_56@@QBEABV12@AAVState@12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '13Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3D16']
xor ['eax,', 'eax']
jmp ['loc_417B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getFCD16@CollationData@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0FFh']
jg ['short', 'loc_3D57']
mov ['ecx,', 'ds:?__LINE__Var@?1??nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@3@AAVUCharsTrie@3@IHHAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '15h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BK@OAIHKBPM@?$AAf?$AAc?$AAd?$AA1?$AA6?$AA?5?$AA?$DO?$AA?5?$AA0?$AAx?$AAf?$AAf?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_3D82']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_14]']
call ['?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_8]']
jmp ['loc_417B']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '1']
mov ['[ebp+arg_C],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[ebp+var_35],', 'al']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getFCD16@CollationData@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0FFh']
jg ['short', 'loc_3DC2']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_14]']
call ['?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_8]']
jmp ['loc_417B']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_3DE7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3F5F']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jnz ['loc_3E7F']
mov ['esi,', 'esp']
push ['94h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_134],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_3E37']
mov ['ecx,', '[ebp+var_134]']
call ['??0SkippedState@icu_56@@QAE@XZ']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_3E41']
mov ['[ebp+var_148],', '0']
mov ['eax,', '[ebp+var_148]']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_140]']
mov ['[ecx+16Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jnz ['short', 'loc_3E7F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_417B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?reset@UCharsTrie@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_C],', '2']
jle ['loc_3F4B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+30h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?firstForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', '3']
jmp ['short', 'loc_3EF8']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_3F2F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_3EEF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z']
jmp ['short', 'loc_3F71']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z']
mov ['[ebp+var_50],', '2']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+arg_10],', 'eax']
movzx ['eax,', '[ebp+var_35]']
movzx ['ecx,', '[ebp+var_20]']
sar ['ecx,', '8']
cmp ['eax,', 'ecx']
jge ['short', 'loc_4009']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '2']
jl ['short', 'loc_4009']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getValue@UCharsTrie@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?recordMatch@SkippedState@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '1']
jnz ['short', 'loc_3FF5']
jmp ['loc_4075']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z']
jmp ['short', 'loc_4033']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?skip@SkippedState@icu_56@@QAEXH@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z']
mov ['al,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[ebp+var_35],', 'al']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z']
mov ['[ebp+arg_10],', 'eax']
cmp ['[ebp+arg_10],', '0']
jge ['short', 'loc_404A']
jmp ['short', 'loc_4075']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getFCD16@CollationData@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0FFh']
jg ['short', 'loc_4070']
jmp ['short', 'loc_4075']
jmp ['loc_3F90']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
mov ['[ebp+var_65],', 'al']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?replaceMatch@SkippedState@icu_56@@QAEXXZ']
movsx ['eax,', '[ebp+var_65]']
test ['eax,', 'eax']
jz ['loc_4178']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?isEmpty@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_4178']
mov ['[ebp+arg_10],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?hasNext@SkippedState@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4101']
jmp ['short', 'loc_4163']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?next@SkippedState@icu_56@@QAEHXZ']
mov ['[ebp+arg_10],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0C0h']
jnz ['short', 'loc_4155']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_415E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['loc_40D0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?clear@SkippedState@icu_56@@QAEXXZ']
mov ['[ebp+arg_8],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-134h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BK@OAIHKBPM@?$AAf?$AAc?$AAd?$AA1?$AA6?$AA?5?$AA?$DO?$AA?5?$AA0?$AAx?$AAf?$AAf?$AA?$AA@']
unicode ['0,', '<fcd16', '>']
dw ['3Eh']
unicode ['0,', '<', '0xff>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@3@AAVUCharsTrie@3@IHHAAW4UErrorCode@@@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SkippedState@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SkippedState@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '40h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+80h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '88h']
call ['??0State@UCharsTrie@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$0 proc near 
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '40h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0SkippedState@icu_56@@QAE@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SkippedState@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$1']
dd ['offset', '__unwindtable$??0SkippedState@icu_56@@QAE@XZ']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0State@UCharsTrie@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '40h']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?skip@SkippedState@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '40h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?recordMatch@SkippedState@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '40h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+84h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceMatch@SkippedState@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '40h']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+80h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '88h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?resetToState@UCharsTrie@icu_56@@QAEAAV12@ABVState@12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '17Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_188]']
mov ['ecx,', '5Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??0CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['loc_46CF']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?digitFromCE32@Collation@icu_56@@SADI@Z']
add ['esp,', '4']
mov ['[ebp+var_61],', 'al']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+var_61]']
push ['ecx']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jnz ['short', 'loc_4619']
jmp ['loc_46CA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jge ['short', 'loc_4641']
jmp ['loc_46CA']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0C0h']
jnz ['short', 'loc_4671']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[edx+10h]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_0],', 'eax']
push ['0Ah']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_46A4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_46CA']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jle ['short', 'loc_46C5']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+170h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+170h],', 'ecx']
jmp ['loc_45DE']
jmp ['loc_4826']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?digitFromCE32@Collation@icu_56@@SADI@Z']
add ['esp,', '4']
mov ['[ebp+var_79],', 'al']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+var_79]']
push ['ecx']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jge ['short', 'loc_4724']
jmp ['short', 'loc_4792']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0C0h']
jnz ['short', 'loc_475A']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[edx+10h]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+arg_0],', 'eax']
push ['0Ah']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_478D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4792']
jmp ['loc_46CF']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_94],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_94]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_94]']
cmp ['eax,', '[ebp+var_A0]']
jnb ['short', 'loc_4826']
mov ['eax,', '[ebp+var_94]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A9],', 'cl']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+var_A0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '1']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+var_A0]']
mov ['cl,', '[ebp+var_A9]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_A0]']
sub ['edx,', '1']
mov ['[ebp+var_A0],', 'edx']
jmp ['short', 'loc_47CC']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4859']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_496F']
mov ['[ebp+var_B8],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
cmp ['[ebp+var_B8],', 'eax']
jge ['short', 'loc_48B1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??ACharString@icu_56@@QBEDH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_48B1']
mov ['eax,', '[ebp+var_B8]']
add ['eax,', '1']
mov ['[ebp+var_B8],', 'eax']
jmp ['short', 'loc_4863']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0FEh']
jle ['short', 'loc_48E5']
mov ['[ebp+var_C4],', '0FEh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_B8]']
add ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_B8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4956']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_B8],', 'eax']
jl ['loc_4863']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '188h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN30']
dd ['offset', '$LN28']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-58h]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '1']
jl ['short', 'loc_4A62']
cmp ['[ebp+arg_4],', '0FEh']
jle ['short', 'loc_4A87']
mov ['eax,', 'ds:?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DK@KKLJKIGA@?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA2?$AA5?$AA4?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_4ABD']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4ABD']
mov ['edx,', 'ds:?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA']
add ['edx,', '2']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DM@PHFBEMLL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+arg_4],', '7']
jg ['loc_4C81']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_4AEE']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_4B0C']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
add ['eax,', 'edx']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4AE5']
mov ['[ebp+var_38],', '2']
mov ['[ebp+var_44],', '4Ah']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_4B53']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_20]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_14]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_4E34']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_44],', '28h']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '0FEh']
cmp ['[ebp+var_20],', 'eax']
jge ['short', 'loc_4BC8']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '0FEh']
idiv ['ecx']
mov ['ecx,', 'eax']
add ['ecx,', '[ebp+var_38]']
shl ['ecx,', '10h']
or ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['esi,', '0FEh']
idiv ['esi']
add ['edx,', '2']
shl ['edx,', '8']
or ['ecx,', 'edx']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_4E34']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '0FEh']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_44],', '10h']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '0FEh']
imul ['eax,', '0FEh']
cmp ['[ebp+var_20],', 'eax']
jge ['loc_4C81']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '0FEh']
idiv ['ecx']
add ['edx,', '2']
or ['edx,', '[ebp+var_14]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '0FEh']
idiv ['ecx']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '0FEh']
idiv ['ecx']
add ['edx,', '2']
shl ['edx,', '8']
or ['edx,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '0FEh']
idiv ['ecx']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '0FEh']
idiv ['ecx']
add ['edx,', '[ebp+var_38]']
shl ['edx,', '10h']
or ['edx,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
jmp ['loc_4E34']
cmp ['[ebp+arg_4],', '7']
jge ['short', 'loc_4CAC']
mov ['eax,', 'ds:?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA']
add ['eax,', '31h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BI@KIDOCIAL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA7?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '80h']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_14]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4CF2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax-2]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4CF2']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '2']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_4CCB']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1']
jz ['short', 'loc_4D12']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_8C],', 'ecx']
mov ['[ebp+var_98],', '1']
jmp ['short', 'loc_4D34']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
add ['ecx,', 'eax']
mov ['[ebp+var_8C],', 'ecx']
mov ['[ebp+var_98],', '2']
mov ['eax,', '[ebp+var_8C]']
lea ['ecx,', '[eax+eax+0Bh]']
mov ['[ebp+var_8C],', 'ecx']
mov ['[ebp+var_A4],', '8']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_4E00']
cmp ['[ebp+var_A4],', '0']
jnz ['short', 'loc_4DA1']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_A4],', '10h']
jmp ['short', 'loc_4DC4']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_A4]']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_A4]']
sub ['eax,', '8']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_98]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_98]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
add ['ecx,', 'eax']
lea ['ecx,', '[ecx+ecx+0Bh]']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_4D4E']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_A4]']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BI@KIDOCIAL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA7?$AA?$AA@']
unicode ['0,', '<length', '>']
dw ['3Eh']
unicode ['0,', '<=', '7>,0']
assume ['cs:_rdata']
public ['??_C@_1DM@PHFBEMLL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<length', '==', '1', '||', 'digits[0]', '!=', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1DK@KKLJKIGA@?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA2?$AA5?$AA4?$AA?$AA@']
unicode ['0,', '<1', '>']
dw ['3Ch']
unicode ['0,', '<=', 'length', '&&', 'length', '>']
dw ['3Ch']
unicode ['0,', '<=', '254>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousCE@CollationIterator@icu_56@@QAE_JAAVUVector32@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_4F3E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_100]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['loc_5111']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?removeAllElements@UVector32@icu_56@@QAEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_4F9B']
mov ['eax,', '1000100h']
mov ['edx,', '1']
jmp ['loc_5111']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+174h]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4FD5']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z']
jmp ['loc_5111']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnz ['short', 'loc_500D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5016']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_503A']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?ceFromCE32@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
jmp ['loc_5111']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_510A']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jle ['short', 'loc_50D9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
cmp ['eax,', '[ecx+10h]']
jg ['short', 'loc_50D9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_50A3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_100]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['short', 'loc_5111']
jmp ['short', 'loc_5111']
mov ['eax,', '1']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0ECh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_EC]']
mov ['ecx,', '3Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_51A3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+174h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_51A1']
jmp ['short', 'loc_51A3']
jmp ['short', 'loc_5152']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+170h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_51EB']
mov ['ecx,', 'ds:?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA']
add ['ecx,', '1Dh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CK@GMLKFJGB@?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jle ['loc_5363']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+170h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+170h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_52A6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_E8],', 'edx']
cmp ['[ebp+var_EC],', '1000100h']
jnz ['short', 'loc_52A6']
cmp ['[ebp+var_E8],', '1']
jnz ['short', 'loc_52A6']
mov ['edx,', 'ds:?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA']
add ['edx,', '26h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1JM@NMFFNIKO@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+168h],', 'edx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
cmp ['eax,', '[ecx+10h]']
jl ['short', 'loc_52F5']
mov ['edx,', 'ds:?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA']
add ['edx,', '2Ch']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1EC@GEAPPOMG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
cmp ['eax,', '[ecx+10h]']
jge ['short', 'loc_535E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5328']
jmp ['loc_5204']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
cmp ['eax,', '[ecx+10h]']
jz ['short', 'loc_53A3']
mov ['edx,', 'ds:?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA']
add ['edx,', '35h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1EE@KDHLHAGF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+170h],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+30h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_543B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['short', 'loc_5442']
jmp ['short', 'loc_5442']
mov ['eax,', '1']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_rdata']
public ['??_C@_1EE@KDHLHAGF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt@']
unicode ['0,', '<offsets.size()', '==', 'ceBuffer.length>,0']
assume ['cs:_rdata']
public ['??_C@_1EC@GEAPPOMG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@']
unicode ['0,', '<offsets.size()', '>']
dw ['3Ch']
unicode ['0,', '<', 'ceBuffer.length>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1JM@NMFFNIKO@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@']
unicode ['0,', '<U_FAILURE(errorCode)', '||', 'ceBuffer.get(ceBuffer.length', '-', '1)>']
unicode ['0,', '<', '!=', 'Collation::NO_CE>,0']
assume ['cs:_rdata']
public ['??_C@_1CK@GMLKFJGB@?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<ceBuffer.length', '==', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5744']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['loc_5815']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_580E']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_57EE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_57B7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_57C5']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+Dst]']
jmp ['short', 'loc_5817']
jmp ['short', 'loc_5817']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__allshl:near']
extrn ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:near']
extrn ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:near']
extrn ['__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:near']
extrn ['?lcccBits@CollationFCD@icu_56@@0QBIB:near']
extrn ['?lcccIndex@CollationFCD@icu_56@@0QBEB:near']
extrn ['?tcccBits@CollationFCD@icu_56@@0QBIB:near']
extrn ['?tcccIndex@CollationFCD@icu_56@@0QBEB:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['__purecall:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__imp_??0UObject@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_??8type_info@@QBE_NABV0@@Z:near']
extrn ['___RTtypeid:near']
extrn ['__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near']
extrn ['__imp___wassert:near']
extrn ['__imp_??1UCharsTrie@icu_56@@QAE@XZ:near']
extrn ['__imp_?getValue@UCharsTrie@icu_56@@QBEHXZ:near']
extrn ['__imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z:near']
extrn ['__imp_??0UCharsTrie@icu_56@@QAE@PB_W@Z:near']
extrn ['__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z:near']
extrn ['__imp_?firstForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z:near']
extrn ['__imp_?saveState@UCharsTrie@icu_56@@QBEABV12@AAVState@12@@Z:near']
extrn ['__imp_?reset@UCharsTrie@icu_56@@QAEAAV12@XZ:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['__imp_?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z:near']
extrn ['__imp_?resetToState@UCharsTrie@icu_56@@QAEAAV12@ABVState@12@@Z:near']
extrn ['__imp_??ACharString@icu_56@@QBEDH@Z:near']
extrn ['__imp_??1CharString@icu_56@@QAE@XZ:near']
extrn ['__imp_?length@CharString@icu_56@@QBEHXZ:near']
extrn ['__imp_?data@CharString@icu_56@@QAEPADXZ:near']
extrn ['__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0CharString@icu_56@@QAE@XZ:near']
extrn ['__imp_?size@UVector32@icu_56@@QBEHXZ:near']
extrn ['__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['__imp_?removeAllElements@UVector32@icu_56@@QAEXXZ:near']
extrn ['_uprv_free_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_malloc_56:near']
end

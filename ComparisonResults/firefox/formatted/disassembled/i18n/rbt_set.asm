endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TransliterationRuleSet@icu_56@@6B@']
mov ['esi,', 'esp']
push ['18h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_21B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['offset', '__deleteRule']
mov ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_E0]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUVector@icu_56@@6B@']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_F4],', 'edx']
jmp ['short', 'loc_225']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_EC]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_25B']
jmp ['short', 'loc_284']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_26D']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+410h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z$0 proc	near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UVector@icu_56@@6B@']
public ['??_SUVector@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UVector@icu_56@@UBEPAXXZ']
assume ['cs:_rdata']
dd ['offset', '??_R4TransliterationRuleSet@icu_56@@6B@']
public ['??_7TransliterationRuleSet@icu_56@@6B@']
dd ['offset', '?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ']
dd ['offset', '?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z']
dd ['offset', '?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z']
dd ['offset', '?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0TransliterationRuleSet@icu_56@@QAE@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4TransliterationRuleSet@icu_56@@6B@']
dd ['offset', '??_R0?AVTransliterationRuleSet@icu_56@@@8']
dd ['offset', '??_R3TransliterationRuleSet@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVTransliterationRuleSet@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3TransliterationRuleSet@icu_56@@8']
dd ['2']
dd ['offset', '??_R2TransliterationRuleSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2TransliterationRuleSet@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TransliterationRuleSet@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3TransliterationRuleSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UVector@icu_56@@6B@']
dd ['offset', '??_R0?AVUVector@icu_56@@@8']
dd ['offset', '??_R3UVector@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUVector@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UVector@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UVector@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UVector@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UVector@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UVector@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__deleteRule	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_56D']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D4]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_577']
mov ['[ebp+var_DC],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GTransliterationRuleSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1TransliterationRuleSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5D5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUVector@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_643']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '184h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_190]']
mov ['ecx,', '61h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6B5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_6BF']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TransliterationRuleSet@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+410h]']
mov ['[eax+410h],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['404h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '0Ch']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_3C],', '0']
mov ['esi,', 'esp']
push ['18h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_17C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_17C],', '0']
jz ['short', 'loc_785']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
push ['0']
push ['offset', '__deleteRule']
mov ['ecx,', '[ebp+var_17C]']
call ['dword', 'ptr', 'ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_17C]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUVector@icu_56@@6B@']
mov ['edx,', '[ebp+var_17C]']
mov ['[ebp+var_190],', 'edx']
jmp ['short', 'loc_78F']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_190]']
mov ['[ebp+var_188],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_188]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['loc_8EF']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['loc_8EF']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8EF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_809']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_30]']
jge ['loc_8EF']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8EF']
mov ['esi,', 'esp']
push ['6Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_164],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_883']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_164]']
call ['??0TransliterationRule@icu_56@@QAE@AAV01@@Z']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_88D']
mov ['[ebp+var_190],', '0']
mov ['edx,', '[ebp+var_190]']
mov ['[ebp+var_170],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_170]']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_8B8']
mov ['[ebp+var_3C],', '7']
jmp ['short', 'loc_8EF']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8EA']
jmp ['short', 'loc_8EF']
jmp ['loc_800']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_91E']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_91E']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '190h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN21']
dd ['offset', '$LN18']
dd ['0FFFFFF68h,', '48h']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-17Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-164h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-194h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z$1']
dd ['offset', '__unwindtable$??0TransliterationRuleSet@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1TransliterationRuleSet@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TransliterationRuleSet@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_ABA']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_AC4']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setData@TransliterationRuleSet@icu_56@@QAEXPBVTransliterationRuleData@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+40Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_B29']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_B48']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[edx+eax*4]']
call ['?setData@TransliterationRule@icu_56@@QAEXPBVTransliterationRuleData@2@@Z']
jmp ['short', 'loc_B20']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaximumContextLength@TransliterationRuleSet@icu_56@@UBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+410h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addRule@TransliterationRuleSet@icu_56@@UAEXPAVTransliterationRule@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C1B']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_C0F']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_C19']
mov ['[ebp+var_F4],', '0']
jmp ['short', 'loc_C84']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+410h]']
jle ['short', 'loc_C6B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+410h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '15Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '57h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D4C']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1149']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_D5D']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_168],', 'eax']
jmp ['short', 'loc_D67']
mov ['[ebp+var_168],', '1']
mov ['ecx,', '[ebp+var_168]']
shl ['ecx,', '1']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_64],', 'eax']
cmp ['[ebp+var_64],', '0']
jnz ['short', 'loc_DA8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1149']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_DBA']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_DF2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+4]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+var_70]']
call ['?getIndexValue@TransliterationRule@icu_56@@QBEFXZ']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_64]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_DB1']
xor ['eax,', 'eax']
mov ['[ebp+var_38],', 'ax']
jmp ['short', 'loc_E06']
mov ['ax,', '[ebp+var_38]']
add ['ax,', '1']
mov ['[ebp+var_38],', 'ax']
movsx ['eax,', '[ebp+var_38]']
cmp ['eax,', '100h']
jge ['loc_EF6']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+ecx*4+0Ch],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_E44']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_EF1']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
test ['edx,', 'edx']
jl ['short', 'loc_EA2']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movsx ['eax,', '[ebp+var_38]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_EA0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+4]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_EEC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+4]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_7C],', 'eax']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
call ['?matchesIndexValue@TransliterationRule@icu_56@@QBECE@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_EEC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_E3B']
jmp ['loc_DFA']
mov ['eax,', '[ebp+var_64]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+40Ch],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_F6A']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1149']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '2']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_FBE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1149']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_FD0']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_2C],', 'eax']
jge ['short', 'loc_100B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_FC7']
xor ['eax,', 'eax']
mov ['[ebp+var_38],', 'ax']
jmp ['short', 'loc_101F']
mov ['ax,', '[ebp+var_38]']
add ['ax,', '1']
mov ['[ebp+var_38],', 'ax']
movsx ['eax,', '[ebp+var_38]']
cmp ['eax,', '100h']
jge ['loc_1130']
movsx ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+0Ch]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1047']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+10h]']
sub ['edx,', '1']
cmp ['[ebp+var_2C],', 'edx']
jge ['loc_112B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_94],', 'eax']
jmp ['short', 'loc_108D']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '1']
mov ['[ebp+var_94],', 'eax']
movsx ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_94]']
cmp ['edx,', '[ecx+eax*4+10h]']
jge ['loc_1126']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_94]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_A0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_A0]']
push ['eax']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_88]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1121']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '10015h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
push ['ecx']
mov ['edx,', '[ebp+var_88]']
push ['edx']
call ['?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1149']
jmp ['loc_107E']
jmp ['loc_103E']
jmp ['loc_1013']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN39']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN38']
dd ['offset', '$LN36']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-58h]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-16Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?freeze@TransliterationRuleSet@icu_56@@UAEXAAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0Fh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
mov ['[ebp+var_60],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
push ['0']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2+8],', 'ax']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0Fh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
mov ['[ebp+var_60],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '28h']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
push ['0']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2+28h],', 'ax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-54h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z$0']
dd ['offset', '__unwindtable$?maskingError@@YAXABVTransliterationRule@icu_56@@0AAUUParseError@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transliterate@TransliterationRuleSet@icu_56@@QAECAAVReplaceable@2@AAUUTransPosition@@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?char32At@Replaceable@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
and ['eax,', '0FFh']
mov ['[ebp+var_14],', 'ax']
movsx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4+0Ch]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_1476']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
movsx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ecx+eax*4+10h]']
jge ['short', 'loc_14CE']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_20]']
mov ['ecx,', '[ecx+edx*4]']
call ['?matchAndReplace@TransliterationRule@icu_56@@QBE?AW4UMatchDegree@2@AAVReplaceable@2@AAUUTransPosition@@C@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_F4],', 'eax']
cmp ['[ebp+var_F4],', '1']
jz ['short', 'loc_14C8']
cmp ['[ebp+var_F4],', '2']
jz ['short', 'loc_14C4']
jmp ['short', 'loc_14CC']
mov ['al,', '1']
jmp ['short', 'loc_1503']
xor ['al,', 'al']
jmp ['short', 'loc_1503']
jmp ['short', 'loc_146D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?char32At@Replaceable@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '0FFFFh']
cmp ['edx,', 'eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toRules@TransliterationRuleSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_157D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_15DC']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_159F']
mov ['esi,', 'esp']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1574']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSourceTargetSet@TransliterationRuleSet@icu_56@@QBEAAVUnicodeSet@2@AAV32@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_165B']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_16A3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_1695']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?addTargetSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z']
jmp ['short', 'loc_16A1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?addSourceSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z']
jmp ['short', 'loc_1652']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??_GTransliterationRuleSet@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ETransliterationRuleSet@icu_56@@UAEPAXI@Z:near']
extrn ['??_GUVector@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUVector@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:near']
extrn ['__imp_??1UVector@icu_56@@UAE@XZ:near']
extrn ['__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near']
extrn ['??0TransliterationRule@icu_56@@QAE@AAV01@@Z:near']
extrn ['__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['__imp_?size@UVector@icu_56@@QBEHXZ:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_uprv_free_56:near']
extrn ['?setData@TransliterationRule@icu_56@@QAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?matchesIndexValue@TransliterationRule@icu_56@@QBECE@Z:near']
extrn ['?getIndexValue@TransliterationRule@icu_56@@QBEFXZ:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp_??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:near']
extrn ['__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z:near']
extrn ['_uprv_min_56:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['?matchAndReplace@TransliterationRule@icu_56@@QBE?AW4UMatchDegree@2@AAVReplaceable@2@AAUUTransPosition@@C@Z:near']
extrn ['__imp_?char32At@Replaceable@icu_56@@QBEHH@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['?addSourceSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z:near']
extrn ['?addTargetSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z:near']
end

endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9TimeZone@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_getWindowsTimeZoneInfo proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2FB']
mov ['al,', '1']
jmp ['short', 'loc_2FD']
jmp ['short', 'loc_2FD']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '184h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_190]']
mov ['ecx,', '61h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_15],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_60]']
push ['eax']
call ['?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jz ['loc_457']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_84]']
push ['ecx']
lea ['edx,', '[ebp+var_78]']
push ['edx']
lea ['eax,', '[ebp+var_C0]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
call ['?getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z']
add ['esp,', '18h']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_457']
push ['0ACh']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_78]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_84]']
mov ['[eax+0A8h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_90]']
mov ['[eax+54h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '98h']
mov ['ecx,', '[ebp+var_A8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_A0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_9C]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '44h']
mov ['ecx,', '[ebp+var_C0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_BC]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_B8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_B4]']
mov ['[eax+0Ch],', 'edx']
mov ['[ebp+var_15],', '1']
mov ['al,', '[ebp+var_15]']
mov ['[ebp+var_189],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_189]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '190h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13']
dd ['offset', '$LN6']
db ['88h,', '0FFh']
dw ['0FFFFh']
dd ['4']
dd ['offset', '$LN7']
dd ['0FFFFFF7Ch,', '4']
dd ['offset', '$LN8']
dd ['0FFFFFF70h,', '4']
dd ['offset', '$LN9']
dd ['0FFFFFF58h,', '10h']
dd ['offset', '$LN10']
dd ['0FFFFFF40h,', '10h']
dd ['offset', '$LN11']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-194h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z$0']
dd ['offset', '__unwindtable$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '184h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_184]']
mov ['ecx,', '61h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_11],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_uprv_getUTCtime_56']
sub ['esp,', '8']
fstp ['[esp+198h+var_198]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+48h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_9A8']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_64C']
cmp ['[ebp+var_44],', '0']
jnz ['loc_709']
mov ['ecx,', '[ebp+var_2C]']
call ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
imul ['eax,', '-1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+0Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+0Ah],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+6],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+4],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+2],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'dx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+0Ah],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+6],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+2],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'dx']
jmp ['loc_9A6']
mov ['ecx,', '[ebp+var_38]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ']
cmp ['eax,', '1']
jz ['short', 'loc_742']
mov ['eax,', 'ds:?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f']
add ['eax,', '13h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1GO@IJDADKJN@?$AAs?$AAt?$AAd?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_44]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ']
cmp ['eax,', '1']
jz ['short', 'loc_77B']
mov ['eax,', 'ds:?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1GO@MPAAJIJJ@?$AAd?$AAs?$AAt?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_38]']
call ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
imul ['eax,', '-1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_44]']
call ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
imul ['eax,', '-1']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'ax']
mov ['ecx,', '[ebp+var_38]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+2],', 'ax']
mov ['ecx,', '[ebp+var_38]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+6],', 'ax']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
test ['ecx,', 'ecx']
jge ['short', 'loc_802']
mov ['eax,', '5']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+6],', 'ax']
mov ['ecx,', '[ebp+var_38]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'ax']
mov ['ecx,', '[ebp+var_38]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '36EE80h']
idiv ['ecx']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '36EE80h']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '3E8h']
idiv ['ecx']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '3E8h']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_50]']
mov ['[eax+8],', 'cx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_5C]']
mov ['[eax+0Ah],', 'cx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax+0Ch],', 'cx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_74]']
mov ['[eax+0Eh],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['ecx,', '[ebp+var_44]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+2],', 'ax']
mov ['ecx,', '[ebp+var_44]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+6],', 'ax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
test ['ecx,', 'ecx']
jge ['short', 'loc_8FB']
mov ['eax,', '5']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+6],', 'ax']
mov ['ecx,', '[ebp+var_44]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'ax']
mov ['ecx,', '[ebp+var_44]']
call ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ']
mov ['ecx,', 'eax']
call ['?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '36EE80h']
idiv ['ecx']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '36EE80h']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '0EA60h']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '3E8h']
idiv ['ecx']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '3E8h']
idiv ['ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', 'word', 'ptr', '[ebp+var_50]']
mov ['[eax+8],', 'cx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', 'word', 'ptr', '[ebp+var_5C]']
mov ['[eax+0Ah],', 'cx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax+0Ch],', 'cx']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', 'word', 'ptr', '[ebp+var_74]']
mov ['[eax+0Eh],', 'cx']
jmp ['short', 'loc_9AC']
mov ['[ebp+var_11],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_17C],', 'ecx']
cmp ['[ebp+var_17C],', '0']
jz ['short', 'loc_9EF']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_17C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_17C]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_184],', 'eax']
jmp ['short', 'loc_9F9']
mov ['[ebp+var_184],', '0']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_158],', 'eax']
mov ['ecx,', '[ebp+var_158]']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_A3C']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_184],', 'eax']
jmp ['short', 'loc_A46']
mov ['[ebp+var_184],', '0']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_140],', 'eax']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_14C],', 'ecx']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_A89']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_184],', 'eax']
jmp ['short', 'loc_A93']
mov ['[ebp+var_184],', '0']
mov ['al,', '[ebp+var_11]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '184h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22']
dd ['offset', '$LN18']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN19']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN20']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN21']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GO@MPAAJIJJ@?$AAd?$AAs?$AAt?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@']
unicode ['0,', '<dst->']
dw ['3Eh']
unicode ['0,', '<getRule()->']
dw ['3Eh']
unicode ['0,', '<getDateRuleType()', '==', 'DateTimeRule::DOW>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GO@IJDADKJN@?$AAs?$AAt?$AAd?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@']
unicode ['0,', '<std->']
dw ['3Eh']
unicode ['0,', '<getRule()->']
dw ['3Eh']
unicode ['0,', '<getDateRuleType()', '==', 'DateTimeRule::DOW>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\wintzimpl.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['_memset:near']
extrn ['?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ:near']
extrn ['?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ:near']
extrn ['?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ:near']
extrn ['?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ:near']
extrn ['?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:near']
extrn ['__imp___wassert:near']
extrn ['?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ:near']
extrn ['?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ:near']
extrn ['?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:near']
extrn ['_uprv_getUTCtime_56:near']
extrn ['__fltused:near']
end

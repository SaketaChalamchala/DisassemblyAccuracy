endp
_uprv_decContextClearStatus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
not ['eax']
mov ['ecx,', '[ebp+arg_0]']
and ['eax,', '[ecx+14h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextDefault_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '3B9AC9FFh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0C4653601h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '22DFh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '80h']
ja ['$LN1']
mov ['ecx,', '[ebp+var_C4]']
movzx ['edx,', 'ds:$LN10[ecx]']
jmp ['ds:$LN11[edx*4]']
jmp ['loc_198']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '60h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFA1h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '3']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+18h],', '1']
jmp ['loc_198']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '180h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFE81h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '3']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+18h],', '1']
jmp ['short', 'loc_198']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '22h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '1800h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFE801h']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '3']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+18h],', '1']
jmp ['short', 'loc_198']
push ['80h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN1']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['1,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['2,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextGetRounding_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextGetStatus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextRestoreStatus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
not ['eax']
mov ['ecx,', '[ebp+arg_0]']
and ['eax,', '[ecx+14h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
or ['eax,', '[ecx+14h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextSaveStatus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+14h]']
and ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextSetRounding_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextSetStatus_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
or ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextSetStatusFromString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3CE']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3F6']
push ['2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_41E']
push ['4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_446']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_07GEEFKCOC@Inexact?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_46E']
push ['20h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_496']
push ['10h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_4BE']
push ['40h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_4E9']
push ['80h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_08KJPBNJGC@Overflow?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_514']
push ['200h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_07PHGBKLPO@Clamped?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_53F']
push ['400h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['loc_5D3']
push ['offset', '??_C@_07HGAEHKED@Rounded?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_567']
push ['800h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['short', 'loc_5D3']
push ['offset', '??_C@_09IOIEBIGE@Subnormal?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_58F']
push ['1000h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['short', 'loc_5D3']
push ['offset', '??_C@_09FIFLEIAA@Underflow?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_5B7']
push ['2000h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
jmp ['short', 'loc_5D3']
push ['offset', '??_C@_09LNLOOAGA@No?5status?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_5D1']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_5D3']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_09LNLOOAGA@No?5status?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_09FIFLEIAA@Underflow?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_09IOIEBIGE@Subnormal?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07HGAEHKED@Rounded?$AA@']
assume ['cs:_rdata']
public ['??_C@_07PHGBKLPO@Clamped?$AA@']
assume ['cs:_rdata']
public ['??_C@_08KJPBNJGC@Overflow?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07GEEFKCOC@Inexact?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextSetStatusFromStringQuiet_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_702']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_72A']
push ['2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_752']
push ['4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_77A']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_07GEEFKCOC@Inexact?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_7A2']
push ['20h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_7CA']
push ['10h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_7F2']
push ['40h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_81D']
push ['80h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_08KJPBNJGC@Overflow?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_848']
push ['200h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_07PHGBKLPO@Clamped?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_873']
push ['400h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['loc_907']
push ['offset', '??_C@_07HGAEHKED@Rounded?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_89B']
push ['800h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['short', 'loc_907']
push ['offset', '??_C@_09IOIEBIGE@Subnormal?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_8C3']
push ['1000h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['short', 'loc_907']
push ['offset', '??_C@_09FIFLEIAA@Underflow?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_8EB']
push ['2000h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decContextSetStatusQuiet_56']
add ['esp,', '8']
jmp ['short', 'loc_907']
push ['offset', '??_C@_09LNLOOAGA@No?5status?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_905']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_907']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextSetStatusQuiet_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
or ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextStatusToString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '80h']
jnz ['short', 'loc_98E']
mov ['eax,', 'offset', '??_C@_0BC@BPINLOPL@Invalid?5operation?$AA@']
jmp ['loc_A57']
cmp ['[ebp+var_8],', '2']
jnz ['short', 'loc_99E']
mov ['eax,', 'offset', '??_C@_0BB@CAGHCAFL@Division?5by?5zero?$AA@']
jmp ['loc_A57']
cmp ['[ebp+var_8],', '200h']
jnz ['short', 'loc_9B1']
mov ['eax,', 'offset', '??_C@_08KJPBNJGC@Overflow?$AA@']
jmp ['loc_A57']
cmp ['[ebp+var_8],', '2000h']
jnz ['short', 'loc_9C4']
mov ['eax,', 'offset', '??_C@_09FIFLEIAA@Underflow?$AA@']
jmp ['loc_A57']
cmp ['[ebp+var_8],', '20h']
jnz ['short', 'loc_9D4']
mov ['eax,', 'offset', '??_C@_07GEEFKCOC@Inexact?$AA@']
jmp ['loc_A57']
cmp ['[ebp+var_8],', '4']
jnz ['short', 'loc_9E1']
mov ['eax,', 'offset', '??_C@_0BE@OFKMNEBI@Division?5impossible?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '8']
jnz ['short', 'loc_9EE']
mov ['eax,', 'offset', '??_C@_0BD@DFCGAFBJ@Division?5undefined?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '800h']
jnz ['short', 'loc_9FE']
mov ['eax,', 'offset', '??_C@_07HGAEHKED@Rounded?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '400h']
jnz ['short', 'loc_A0E']
mov ['eax,', 'offset', '??_C@_07PHGBKLPO@Clamped?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '1000h']
jnz ['short', 'loc_A1E']
mov ['eax,', 'offset', '??_C@_09IOIEBIGE@Subnormal?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '1']
jnz ['short', 'loc_A2B']
mov ['eax,', 'offset', '??_C@_0BC@DKEMACAH@Conversion?5syntax?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '10h']
jnz ['short', 'loc_A38']
mov ['eax,', 'offset', '??_C@_0BF@JKJDAHKH@Insufficient?5storage?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '40h']
jnz ['short', 'loc_A45']
mov ['eax,', 'offset', '??_C@_0BA@NCIHHEPH@Invalid?5context?$AA@']
jmp ['short', 'loc_A57']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_A52']
mov ['eax,', 'offset', '??_C@_09LNLOOAGA@No?5status?$AA@']
jmp ['short', 'loc_A57']
mov ['eax,', 'offset', '??_C@_0BA@OJFKEGMI@Multiple?5status?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BA@OJFKEGMI@Multiple?5status?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextTestSavedStatus_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '[ebp+arg_4]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextTestStatus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+14h]']
and ['eax,', '[ebp+arg_4]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decContextZeroStatus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['_strcmp:near']
end

endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucln_i18n_registerCleanup_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jle ['short', 'loc_102']
cmp ['[ebp+arg_0],', '1Ch']
jl ['short', 'loc_127']
mov ['eax,', 'ds:?__LINE__Var@?1??ucln_i18n_registerCleanup_56@@9@4JA']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@OFOBAOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1GC@HOLKACOC@?$AAU?$AAC?$AAL?$AAN?$AA_?$AAI?$AA1?$AA8?$AAN?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?5?$AA?$DM?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DM@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['offset', '?i18n_cleanup@@YACXZ']
push ['7']
call ['_ucln_registerCleanup_56']
add ['esp,', '8']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jle ['short', 'loc_163']
cmp ['[ebp+arg_0],', '1Ch']
jge ['short', 'loc_163']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['ds:_gCleanupFunctions[eax*4],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7']
dd ['offset', '$LN6']
align ['4']
assume ['cs:_bss']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
dd ['1Bh', 'dup(?)']
assume ['cs:_rdata']
public ['??_C@_1GC@HOLKACOC@?$AAU?$AAC?$AAL?$AAN?$AA_?$AAI?$AA1?$AA8?$AAN?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?5?$AA?$DM?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DM@']
unicode ['0,', '<UCLN_I18N_START', '>']
dw ['3Ch']
unicode ['0,', '<', 'type', '&&', 'type', '>']
dw ['3Ch']
unicode ['0,', '<', 'UCLN_I18N_COUNT>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FI@OFOBAOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\ucln_in.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??ucln_i18n_registerCleanup_56@@9@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?i18n_cleanup@@YACXZ proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1Ch']
jge ['short', 'loc_34A']
mov ['eax,', '[ebp+var_8]']
cmp ['ds:_gCleanupFunctions[eax*4],', '0']
jz ['short', 'loc_348']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_gCleanupFunctions[eax*4]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ds:_gCleanupFunctions[eax*4],', '0']
jmp ['short', 'loc_309']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??1Mutex@icu_56@@QAE@XZ:near']
extrn ['_ucln_registerCleanup_56:near']
extrn ['__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:near']
extrn ['__imp___wassert:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_CheckEsp:near']
end

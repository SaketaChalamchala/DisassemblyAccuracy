endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SpoofImpl@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_309']
jmp ['loc_3F5']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '30000000h']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_37D']
mov ['esi,', 'esp']
push ['10FFFFh']
push ['0']
mov ['ecx,', '[ebp+var_EC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_EC]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['ecx,', '[ebp+var_EC]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_387']
mov ['[ebp+var_100],', '0']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_20],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_20]']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['_uprv_strdup_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_3E0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_3EB']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_3F5']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '3845FDEFh']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z']
dd ['offset', '?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECH@Z']
dd ['offset', '??8UnicodeSet@icu_56@@UBECABV01@@Z']
dd ['offset', '?hashCode@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?size@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?isEmpty@UnicodeSet@icu_56@@UBECXZ']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECHH@Z']
dd ['offset', '?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z']
dd ['offset', '?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?clear@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?getRangeCount@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?compact@UnicodeSet@icu_56@@UAEAAV12@XZ']
assume ['cs:_rdata']
dd ['offset', '??_R4SpoofImpl@icu_56@@6B@']
public ['??_7SpoofImpl@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4SpoofImpl@icu_56@@6B@']
dd ['offset', '??_R0?AVSpoofImpl@icu_56@@@8']
dd ['offset', '??_R3SpoofImpl@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSpoofImpl@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3SpoofImpl@icu_56@@8']
dd ['3']
dd ['offset', '??_R2SpoofImpl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SpoofImpl@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SpoofImpl@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SpoofImpl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeSet@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeSet@icu_56@@8']
dd ['1,', '6']
dd ['offset', '??_R2UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeSet@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeSet@icu_56@@8']
dd ['5,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
align ['10h']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSpoofImpl@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SpoofImpl@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8B5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_923']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SpoofImpl@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SpoofImpl@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SpoofImpl@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '3845FDEFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_A46']
mov ['esi,', 'esp']
push ['10FFFFh']
push ['0']
mov ['ecx,', '[ebp+var_EC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_EC]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['ecx,', '[ebp+var_EC]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_A50']
mov ['[ebp+var_100],', '0']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_20],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_20]']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['_uprv_strdup_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '30000000h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$0 proc near	
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$1 proc near	
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0SpoofImpl@icu_56@@QAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SpoofImpl@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$1']
dd ['offset', '__unwindtable$??0SpoofImpl@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SpoofImpl@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C06']
jmp ['loc_C8F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_C38']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
call ['?addReference@SpoofData@icu_56@@QAEPAV12@XZ']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_C6E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_uprv_strdup_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SpoofImpl@icu_56@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1SpoofImpl@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SpoofImpl@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_D88']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
call ['?removeReference@SpoofData@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_DCE']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_104]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_DD8']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_E2D']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_E37']
mov ['[ebp+var_10C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1SpoofImpl@icu_56@@UAE@XZ$0 proc near	
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1SpoofImpl@icu_56@@UAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1SpoofImpl@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1SpoofImpl@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1SpoofImpl@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_F03']
xor ['eax,', 'eax']
jmp ['short', 'loc_F61']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_F16']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_F61']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '3845FDEFh']
jnz ['short', 'loc_F31']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_F3E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['short', 'loc_F61']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
push ['eax']
call ['?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F5E']
xor ['eax,', 'eax']
jmp ['short', 'loc_F61']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '180h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '60h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_14]']
sar ['eax,', '2']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
and ['ecx,', '1FFFFFh']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_103F']
jmp ['short', '$foundChar$70705']
jmp ['short', '$foundChar$70705']
jmp ['short', 'loc_1055']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_104F']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_1055']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '4']
cmp ['[ebp+var_14],', 'eax']
jb ['short', 'loc_1006']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
and ['ecx,', '1FFFFFh']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', '$foundChar$70705']
mov ['[ebp+var_50],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_1309']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FF000000h']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '[ebp+arg_4]']
jnz ['$foundKey$70720']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '10000000h']
jz ['loc_1155']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '4']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_10DD']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '4']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFFFh']
cmp ['ecx,', '[ebp+arg_0]']
jnz ['short', 'loc_110F']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FF000000h']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_110D']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', '$foundKey$70720']
jmp ['short', '$foundKey$70720']
jmp ['short', 'loc_10D4']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_1123']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '4']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFFFh']
cmp ['ecx,', '[ebp+arg_0]']
jnz ['short', 'loc_1155']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FF000000h']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_1153']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', '$foundKey$70720']
jmp ['short', '$foundKey$70720']
jmp ['short', 'loc_111A']
mov ['[ebp+var_74],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_74]']
jmp ['loc_1309']
mov ['eax,', '[ebp+var_5C]']
sar ['eax,', '1Dh']
and ['eax,', '3']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '[ecx+14h]']
sar ['edx,', '2']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_8C]']
mov ['cx,', '[edx+eax*2]']
mov ['[ebp+var_98],', 'cx']
cmp ['[ebp+var_80],', '1']
jnz ['short', 'loc_11E2']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '1']
jmp ['loc_1309']
cmp ['[ebp+var_80],', '4']
jnz ['loc_1293']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+28h]']
mov ['[ebp+var_B0],', 'eax']
mov ['[ebp+var_A4],', '0']
jmp ['short', 'loc_1218']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[ebp+var_B0]']
jge ['short', 'loc_125F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_A4]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*4]']
movzx ['edx,', '[ebp+var_98]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_125D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_A4]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*4+2]']
mov ['[ebp+var_80],', 'ecx']
jmp ['short', 'loc_125F']
jmp ['short', 'loc_1209']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[ebp+var_B0]']
jl ['short', 'loc_1293']
mov ['ecx,', 'ds:?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA']
add ['ecx,', '53h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DA@KKAONOPC@?$AAi?$AAx?$AA?5?$AA?$DM?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_98]']
add ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[edx]']
cmp ['eax,', '[ecx+20h]']
jle ['short', 'loc_12D0']
mov ['edx,', 'ds:?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA']
add ['edx,', '56h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1HM@IDMFLPP@?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
movzx ['edx,', '[ebp+var_98]']
mov ['eax,', '[ecx+20h]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_BC],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_BC]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_80]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1HM@IDMFLPP@?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9@']
unicode ['0,', '<value', '+', 'stringLen', '>']
dw ['3Ch']
unicode ['0,', '<=', 'fSpoofData->']
dw ['3Eh']
unicode ['0,', '<fRawData->']
dw ['3Eh']
unicode ['0,', '<fCFUStringTableLen>,0']
assume ['cs:_rdata']
public ['??_C@_1DA@KKAONOPC@?$AAi?$AAx?$AA?5?$AA?$DM?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
unicode ['0,', '<ix', '>']
dw ['3Ch']
unicode ['0,', '<', 'stringLengthsLimit>,0']
assume ['cs:_rdata']
public ['??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\uspoof_impl.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '8']
jz ['short', 'loc_146F']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_118],', 'ecx']
jmp ['short', 'loc_147E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_118],', 'ecx']
mov ['edx,', '[ebp+var_118]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?setAll@ScriptSet@icu_56@@QAEAAV12@XZ']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_1573']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_38]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_utrie2_get32_56']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_154E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_uscript_getScript_56']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '1']
jg ['short', 'loc_153C']
mov ['eax,', 'ds:?__LINE__Var@?1??wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@3@PAVScriptSet@3@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '10h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DK@FHBGJMNE@?$AAc?$AAp?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AA?$DO?$AA?5?$AAU?$AAS?$AAC?$AAR?$AAI?$AAP?$AAT?$AA_?$AAI?$AAN?$AAH?$AAE?$AAR?$AAI?$AAT?$AAE?$AAD?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_156E']
cmp ['[ebp+var_44],', '1']
jnz ['short', 'loc_1556']
jmp ['short', 'loc_156E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_44]']
imul ['edx,', '18h']
add ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z']
jmp ['loc_14AB']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DK@FHBGJMNE@?$AAc?$AAp?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AA?$DO?$AA?5?$AAU?$AAS?$AAC?$AAR?$AAI?$AAP?$AAT?$AA_?$AAI?$AAN?$AAH?$AAE?$AAR?$AAI?$AAT?$AAE?$AAD?$AA?$AA@']
unicode ['0,', '<cpScript', '>']
dw ['3Eh']
unicode ['0,', '<', 'USCRIPT_INHERITED>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@3@PAVScriptSet@3@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1FC]']
mov ['ecx,', '7Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_68],', 'eax']
mov ['[ebp+var_74],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+Str]']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_8C],', '0']
mov ['esi,', 'esp']
push ['2Ch']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_167E']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_68]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jnz ['short', 'loc_1694']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_167E']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_68]']
jbe ['short', 'loc_16CA']
mov ['eax,', '[ebp+var_98]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jnz ['short', 'loc_16CA']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_16A0']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_68]']
ja ['short', 'loc_16DA']
jmp ['loc_175A']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
sub ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_uprv_strndup_56']
add ['esp,', '8']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1745']
jmp ['short', 'loc_175A']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_80]']
jb ['loc_1657']
cmp ['[ebp+var_8C],', '0']
jnz ['loc_18E4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['_uprv_strdup_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_1E8],', '0']
jz ['short', 'loc_17F3']
mov ['esi,', 'esp']
push ['10FFFFh']
push ['0']
mov ['ecx,', '[ebp+var_1E8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1E8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['ecx,', '[ebp+var_1E8]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1FC],', 'edx']
jmp ['short', 'loc_17FD']
mov ['[ebp+var_1FC],', '0']
mov ['eax,', '[ebp+var_1FC]']
mov ['[ebp+var_1F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_1F4]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_1825']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_184C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1AF8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_5C]']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_1D0],', 'ecx']
mov ['edx,', '[ebp+var_1D0]']
mov ['[ebp+var_1DC],', 'edx']
cmp ['[ebp+var_1DC],', '0']
jz ['short', 'loc_18A4']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_1DC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_1DC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1FC],', 'eax']
jmp ['short', 'loc_18AE']
mov ['[ebp+var_1FC],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFBFh']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1AF8']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['100Ah']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
push ['100Ah']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_19BB']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1AF8']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_strdup_56']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_19F1']
cmp ['[ebp+var_EC],', '0']
jnz ['short', 'loc_1A31']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1AF8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_EC]']
mov ['[eax+14h],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_5C]']
call ['dword', 'ptr', 'ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_1B8],', 'ecx']
mov ['edx,', '[ebp+var_1B8]']
mov ['[ebp+var_1C4],', 'edx']
cmp ['[ebp+var_1C4],', '0']
jz ['short', 'loc_1AA4']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_1C4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_1C4]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1FC],', 'eax']
jmp ['short', 'loc_1AAE']
mov ['[ebp+var_1FC],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN31']
dd ['offset', '$LN28']
dd ['0FFFFFF20h,', '34h']
dd ['offset', '$LN29']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-50h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1E8h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0E0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-200h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$1']
align ['8']
dd ['offset', '__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1A4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1B0]']
mov ['ecx,', '69h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1Eh']
lea ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uscript_getCode_56']
add ['esp,', '10h']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1CB2']
jmp ['loc_1D74']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jnz ['short', 'loc_1CC8']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1D74']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_EC],', '0']
jmp ['short', 'loc_1CFF']
mov ['eax,', '[ebp+var_EC]']
add ['eax,', '1']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_A4]']
jge ['short', 'loc_1D58']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[ebp+ecx*4+var_98]']
push ['edx']
push ['100Ah']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1CF0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1B0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN12']
dd ['offset', '$LN9']
dd ['0FFFFFF20h,', '34h']
dd ['offset', '$LN10']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0E0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1B4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E86']
xor ['eax,', 'eax']
jmp ['loc_1F70']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jg ['short', 'loc_1EB6']
mov ['ecx,', 'ds:?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1']
add ['ecx,', '4']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@OLOFFFKJ@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?9?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1ECE']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1F54']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', '30h']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '9']
jle ['short', 'loc_1EFC']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', '37h']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0Fh']
jle ['short', 'loc_1F12']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', '57h']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0Fh']
jle ['short', 'loc_1F3D']
mov ['eax,', 'ds:?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1']
add ['eax,', '0Fh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@MCBNKMDK@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_1EC5']
cmp ['[ebp+var_8],', '10FFFFh']
jbe ['short', 'loc_1F6D']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_1CA@MCBNKMDK@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AA?$AA@']
unicode ['0,', '<digitVal', '>']
dw ['3Ch']
unicode ['0,', '<=', '0xf>,0']
assume ['cs:_rdata']
public ['??_C@_1CA@OLOFFFKJ@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?9?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<limit-start', '>']
dw ['3Eh']
unicode ['0,', '<', '0>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_202E']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_2174']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_38]']
call ['dword', 'ptr', 'ds:__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_38]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_20],', '0']
jnz ['loc_2171']
mov ['esi,', 'esp']
push ['1Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_20B8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_11C]']
call ['??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_130],', 'eax']
jmp ['short', 'loc_20C2']
mov ['[ebp+var_130],', '0']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+var_128],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2102']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_2102']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2171']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_2171']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_104],', 'eax']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+var_110],', 'ecx']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_2160']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_110]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_110]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_130],', 'eax']
jmp ['short', 'loc_216A']
mov ['[ebp+var_130],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN15']
dd ['offset', '$LN13_0']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-11Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-134h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['loc_230F']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_20]']
call ['dword', 'ptr', 'ds:__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_22B0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+1Ch],', 'ecx']
mov ['[ebp+arg_0],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_20]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_2305']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_230F']
mov ['[ebp+var_100],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN9_0']
dd ['offset', '$LN8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_23AB']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_23AB']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '3845FDEFh']
jnz ['short', 'loc_23AB']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '1']
jg ['short', 'loc_23AB']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jle ['short', 'loc_23B8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['al,', 'al']
jmp ['short', 'loc_23BA']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['offset', '?spoofDataIsAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z']
push ['offset', '??_C@_0M@NKAJOPKO@confusables?$AA@']
push ['offset', '??_C@_03OJDKECCP@cfu?$AA@']
push ['0']
call ['_udata_openChoice_56']
add ['esp,', '18h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_244B']
xor ['eax,', 'eax']
jmp ['loc_251E']
mov ['esi,', 'esp']
push ['30h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_2490']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_104]']
call ['??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_249A']
mov ['[ebp+var_118],', '0']
mov ['edx,', '[ebp+var_118]']
mov ['[ebp+var_110],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_250C']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_24FE']
push ['1']
mov ['ecx,', '[ebp+var_F8]']
call ['??_GSpoofData@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_2508']
mov ['[ebp+var_118],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_251E']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_251B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0 proc	near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-11Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03OJDKECCP@cfu?$AA@']
assume ['cs:_rdata']
public ['??_C@_0M@NKAJOPKO@confusables?$AA@']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spoofDataIsAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '14h']
jl ['loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '43h']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '66h']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '75h']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '20h']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jnz ['short', 'loc_266B']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_2665']
push ['1']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '10h']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['al,', '1']
jmp ['short', 'loc_266D']
jmp ['short', 'loc_266D']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSpoofData@icu_56@@QAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SpoofData@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_26CD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@SpoofData@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_272A']
jmp ['short', 'loc_2762']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_getMemory_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@SpoofData@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_27BE']
jmp ['short', 'loc_2816']
cmp ['[ebp+arg_4],', '80h']
jnb ['short', 'loc_27D2']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '3']
jmp ['short', 'loc_2816']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_27F8']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '3']
jmp ['short', 'loc_2816']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@SpoofData@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2875']
jmp ['loc_292D']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+4],', '1']
mov ['[ebp+Size],', '80h']
cmp ['[ebp+Size],', '80h']
jz ['short', 'loc_28B1']
mov ['eax,', 'ds:?__LINE__Var@?1???0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '0Ah']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1EO@KDBEJCDP@?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AAH@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_28DE']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_292D']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx],', '3845FDEFh']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+4],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+5],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+6],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['byte', 'ptr', '[ecx+7],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EO@KDBEJCDP@?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AAH@']
unicode ['0,', '<initialSize', '==', 'sizeof(SpoofDataHeader)>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1???0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@SpoofData@icu_56@@QAEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2AA1']
jmp ['loc_2BB9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_2ABF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_2ADD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '[ecx+14h]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+18h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jz ['short', 'loc_2AFB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '[ecx+24h]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jz ['short', 'loc_2B19']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '[ecx+1Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jnz ['short', 'loc_2B5A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jz ['short', 'loc_2B5A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+30h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[edx+2Ch]']
push ['ecx']
push ['0']
call ['_utrie2_openFromSerialized_56']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_2B9B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+34h],', '0']
jz ['short', 'loc_2B9B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+38h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[edx+34h]']
push ['ecx']
push ['0']
call ['_utrie2_openFromSerialized_56']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+28h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+3Ch],', '0']
jz ['short', 'loc_2BB9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
add ['eax,', '[ecx+3Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+2Ch],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SpoofData@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['_utrie2_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['_utrie2_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C3E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_2C5F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_udata_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeReference@SpoofData@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
push ['eax']
call ['?umtx_atomic_dec@icu_56@@YAHPCJ@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_2CF3']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_2CE9']
push ['1']
mov ['ecx,', '[ebp+var_E0]']
call ['??_GSpoofData@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_2CF3']
mov ['[ebp+var_E8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_atomic_dec@icu_56@@YAHPCJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpAddend]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedDecrement@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addReference@SpoofData@icu_56@@QAEPAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
push ['eax']
call ['?umtx_atomic_inc@icu_56@@YAHPCJ@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_atomic_inc@icu_56@@YAHPCJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpAddend]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedIncrement@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2E23']
xor ['eax,', 'eax']
jmp ['loc_2EDC']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2E65']
xor ['eax,', 'eax']
jnz ['short', 'loc_2E58']
mov ['ecx,', 'ds:?__LINE__Var@?1??reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '5']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_13COJANIEC@?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '5']
xor ['eax,', 'eax']
jmp ['short', 'loc_2EDC']
mov ['eax,', '[ebp+Size]']
add ['eax,', '0Fh']
and ['eax,', '0FFFFFFF0h']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+var_14]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
public ['??_C@_13COJANIEC@?$AA0?$AA?$AA@']
assume ['cs:_data']
public ['?__LINE__Var@?1??reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uspoof_swap_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2F35']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2F3C']
xor ['eax,', 'eax']
jmp ['loc_34A9']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2F5A']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2F5A']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jl ['short', 'loc_2F5A']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_2F6A']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_2F6A']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_34A9']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '43h']
jnz ['short', 'loc_2FAF']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '66h']
jnz ['short', 'loc_2FAF']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '75h']
jnz ['short', 'loc_2FAF']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '20h']
jnz ['short', 'loc_2FAF']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jz ['short', 'loc_3010']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Fh]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Eh]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Dh]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Bh]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
push ['offset', '??_C@_0GH@HLOIAILC@uspoof_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '28h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_34A9']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '3845FDEFh']
jnz ['short', 'loc_3081']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '80h']
jnb ['short', 'loc_30A2']
push ['offset', '??_C@_0CO@HCMJHHPB@uspoof_swap?$CI?$CJ?3?5Spoof?5Data?5header@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_34A9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_30D7']
mov ['eax,', '[ebp+var_44]']
jmp ['loc_34A9']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_3104']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['offset', '??_C@_0EJ@JCDCNMPF@uspoof_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_34A9']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+Dst]']
jz ['short', 'loc_312D']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '2']
mov ['[ebp+var_74],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '2']
mov ['[ebp+var_74],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utrie2_swap_56']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utrie2_swap_56']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+40h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
imul ['eax,', '18h']
mov ['[ebp+var_74],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_80],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '4']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
cmp ['eax,', 'ecx']
jz ['short', 'loc_347A']
push ['1']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '4']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '8']
push ['ecx']
push ['78h']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_44]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EJ@JCDCNMPF@uspoof_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@']
db ["'", "data.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CO@HCMJHHPB@uspoof_swap?$CI?$CJ?3?5Spoof?5Data?5header@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GH@HLOIAILC@uspoof_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@']
db ["'2x", '%02x', '%02x', '%02x)', 'is', 'not', "recognized',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeSet@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['_uprv_strdup_56:near']
extrn ['__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@HH@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??_GSpoofImpl@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ESpoofImpl@icu_56@@UAEPAXI@Z:near']
extrn ['??_GUnicodeSet@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUnicodeSet@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:near']
extrn ['?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECH@Z:near']
extrn ['??8UnicodeSet@icu_56@@UBECABV01@@Z:near']
extrn ['?hashCode@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?size@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?isEmpty@UnicodeSet@icu_56@@UBECXZ:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECHH@Z:near']
extrn ['?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:near']
extrn ['?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near']
extrn ['?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:near']
extrn ['?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:near']
extrn ['__imp_??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['_uprv_free_56:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:near']
extrn ['__imp___wassert:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z:near']
extrn ['_uscript_getScript_56:near']
extrn ['_utrie2_get32_56:near']
extrn ['__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['?setAll@ScriptSet@icu_56@@QAEAAV12@XZ:near']
extrn ['__imp_?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near']
extrn ['__imp_?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['__imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z:near']
extrn ['_uprv_strndup_56:near']
extrn ['__imp__strchr:near']
extrn ['_strlen:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_uscript_getCode_56:near']
extrn ['??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??1Mutex@icu_56@@QAE@XZ:near']
extrn ['__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:near']
extrn ['_udata_openChoice_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_udata_getMemory_56:near']
extrn ['_memset:near']
extrn ['_uprv_malloc_56:near']
extrn ['_utrie2_openFromSerialized_56:near']
extrn ['_udata_close_56:near']
extrn ['_utrie2_close_56:near']
extrn ['__imp__InterlockedDecrement@4:near']
extrn ['__imp__InterlockedIncrement@4:near']
extrn ['_uprv_realloc_56:near']
extrn ['_utrie2_swap_56:near']
extrn ['_udata_swapDataHeader_56:near']
extrn ['_udata_printError_56:near']
end

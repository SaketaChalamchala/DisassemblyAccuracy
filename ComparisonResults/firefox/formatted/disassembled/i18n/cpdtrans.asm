endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+48h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCompoundTransliterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CompoundTransliterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_345']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECompoundTransliterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_3CB']
push ['offset', '??1CompoundTransliterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['58h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3C3']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_3F4']
mov ['ecx,', '[ebp+var_8]']
call ['??1CompoundTransliterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3F1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_12C]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$1 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CompoundTransliterator@icu_56@@6B@']
public ['??_7CompoundTransliterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z']
dd ['offset', '?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z']
dd ['offset', '?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
dd ['offset', '?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z']
dd ['offset', '?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
dd ['offset', '?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ']
dd ['offset', '?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z']
dd ['offset', '?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z']
dd ['offset', '?getCount@CompoundTransliterator@icu_56@@UBEHXZ']
dd ['offset', '?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$1']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4CompoundTransliterator@icu_56@@6B@']
dd ['offset', '??_R0?AVCompoundTransliterator@icu_56@@@8']
dd ['offset', '??_R3CompoundTransliterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCompoundTransliterator@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CompoundTransliterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CompoundTransliterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CompoundTransliterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Transliterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CompoundTransliterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CompoundTransliterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Transliterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Transliterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVTransliterator@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3Transliterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Transliterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Transliterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+54h],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$1	proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+54h],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '160h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '58h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E87']
jmp ['loc_FE5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
call ['dword', 'ptr', 'ds:__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_44],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?parseCompoundID@TransliteratorIDParser@icu_56@@SACABVUnicodeString@2@HAAV32@AAVUVector@2@AAPAVUnicodeSet@2@@Z']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_F78']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10021h']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_158],', 'eax']
mov ['ecx,', '[ebp+var_158]']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_F3A']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_164]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_16C],', 'eax']
jmp ['short', 'loc_F44']
mov ['[ebp+var_16C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_38]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_FE5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['?instantiateList@TransliteratorIDParser@icu_56@@SAXAAVUVector@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_FB3']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_38]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN10']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN11']
dd ['0FFFFFF74h,', '40h']
dd ['offset', '$LN12']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-38h]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-8Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-170h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '134h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_140]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_11BD']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+50h],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+50h]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+4Ch],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jnz ['short', 'loc_11BD']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_131D']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_11DB']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jnz ['short', 'loc_11E0']
jmp ['loc_131D']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_11F2']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_124D']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_120E']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_140],', 'eax']
jmp ['short', 'loc_1220']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+50h]']
sub ['edx,', '1']
sub ['edx,', '[ebp+var_24]']
mov ['[ebp+var_140],', 'edx']
mov ['eax,', '[ebp+var_140]']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_24]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_11E9']
cmp ['[ebp+arg_4],', '1']
jnz ['loc_1315']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_1315']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_128E']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_12F0']
cmp ['[ebp+var_24],', '0']
jle ['short', 'loc_12B3']
mov ['esi,', 'esp']
push ['3Bh']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_24]']
mov ['ecx,', '[edx+ecx*4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1285']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
call ['?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '140h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN20']
dw ['0FFFFh']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN18']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-78h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-144h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_138],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '1']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_1486']
mov ['eax,', '[ebp+var_6C]']
add ['eax,', '1']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_6C]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_14DF']
cmp ['[ebp+var_6C],', '0']
jle ['short', 'loc_14A8']
mov ['esi,', 'esp']
push ['3Bh']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['ecx,', '[ecx+eax*4]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_147D']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_138]']
or ['ecx,', '1']
mov ['[ebp+var_138],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN12_0']
dd ['offset', '$LN10_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$1 proc near
mov ['eax,', '[ebp-138h]']
and ['eax,', '1']
jz ['$LN9']
and ['dword', 'ptr', '[ebp-138h],', '0FFFFFFFEh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
retn
endp
__ehhandler$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-140h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$1']
dd ['0']
dd ['offset', '__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$0']
dd ['offset', '__unwindtable$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0Transliterator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+54h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CompoundTransliterator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CompoundTransliterator@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CompoundTransliterator@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1Transliterator@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1CompoundTransliterator@icu_56@@UAE@XZ$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__ehhandler$??1CompoundTransliterator@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CompoundTransliterator@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1CompoundTransliterator@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1CompoundTransliterator@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jz ['loc_18A4']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1832']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_1895']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1889']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1893']
mov ['[ebp+var_F4],', '0']
jmp ['short', 'loc_1829']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_1D],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jz ['loc_1998']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1925']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_1998']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'ecx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_197C']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_1986']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+edx*4],', '0']
jmp ['short', 'loc_191C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+50h]']
cmp ['edx,', '[ecx+50h]']
jle ['short', 'loc_19D6']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jz ['short', 'loc_19BE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['[eax+50h],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jz ['short', 'loc_1A53']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_19FD']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_1A53']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[edx+ecx*4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+edx*4],', '0']
jnz ['short', 'loc_1A51']
mov ['[ebp+var_1D],', '1']
jmp ['short', 'loc_1A53']
jmp ['short', 'loc_19F4']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_1AA2']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_1AA2']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_1A75']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_1AA2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[ecx+edx*4],', '0']
jmp ['short', 'loc_1A6C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[eax+54h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['58h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1B4B']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1B55']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0']
dd ['offset', '__unwindtable$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCount@CompoundTransliterator@icu_56@@UBEHXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+50h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '2']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1C9C']
jmp ['loc_1D5B']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_29],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1CB9']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_1D00']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+eax*4]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_1CFE']
mov ['[ebp+var_29],', '1']
jmp ['short', 'loc_1D00']
jmp ['short', 'loc_1CB0']
movsx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jz ['short', 'loc_1D4B']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_1D4B']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1D22']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_1D49']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
jmp ['short', 'loc_1D19']
jmp ['short', 'loc_1D5B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4Ch],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+50h],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z']
mov ['[ebp+var_128],', 'eax']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z$0']
dd ['offset', '__unwindtable$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_218]']
mov ['ecx,', '83h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+54h],', '1']
jl ['loc_1FF0']
mov ['ecx,', '[ebp+var_18]']
call ['?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ']
test ['eax,', 'eax']
jz ['loc_1FF0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ']
add ['eax,', '4']
mov ['[ebp+var_20C],', 'eax']
mov ['esi,', 'esp']
push ['3Bh']
mov ['edi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_20C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_20C]']
mov ['edx,', '[eax+8]']
call ['edx']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edi,', 'esp']
push ['eax']
mov ['ebx,', 'esp']
push ['2']
push ['offset', '_COLON_COLON']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
cmp ['ebx,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_2002']
mov ['eax,', '[ebp+var_6C]']
add ['eax,', '1']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_6C]']
cmp ['ecx,', '[eax+50h]']
jge ['loc_22BC']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
push ['5']
push ['offset', '?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_6C]']
mov ['ecx,', '[edx+ecx*4]']
mov ['edx,', '[eax]']
mov ['edi,', 'esp']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_21D4']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4Ch]']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[eax+ecx*4]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4Ch]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ecx+eax*4]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+54h],', '1']
jle ['loc_21CF']
cmp ['[ebp+var_6C],', '0']
jle ['loc_21CF']
mov ['esi,', 'esp']
push ['5']
push ['offset', '?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ecx+edx*4-4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_6C]']
mov ['ecx,', '[edx+ecx*4-4]']
mov ['edx,', '[eax]']
mov ['edi,', 'esp']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_21CF']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1BA@HJGEPKAN@?$AA?3?$AA?3?$AAN?$AAu?$AAl?$AAl?$AA?$DL?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_204]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20C],', 'eax']
mov ['ecx,', '[ebp+var_20C]']
mov ['[ebp+var_210],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_210]']
push ['edx']
lea ['eax,', '[ebp+var_1BC]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_214],', 'eax']
mov ['ecx,', '[ebp+var_214]']
mov ['[ebp+var_218],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_218]']
push ['edx']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_204]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2266']
mov ['esi,', 'esp']
push ['3Bh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_6C]']
mov ['ecx,', '[edx+ecx*4]']
mov ['edx,', '[eax]']
mov ['edi,', 'esp']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_2249']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4Ch]']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[eax+ecx*4]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4Ch]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ecx+eax*4]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2266']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4Ch]']
mov ['ecx,', '[ebp+var_6C]']
mov ['ecx,', '[eax+ecx*4]']
call ['?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
push ['0Ah']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['3Bh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1FF9']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '218h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN16']
dd ['0FFFFFF4Ch,', '40h']
dd ['offset', '$LN17']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0B4h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-204h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$3 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1BCh]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-21Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BA@HJGEPKAN@?$AA?3?$AA?3?$AAN?$AAu?$AAl?$AAl?$AA?$DL?$AA?$AA@']
unicode ['0,', '<::Null']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$3']
dd ['offset', '__unwindtable$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_2476']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_2476']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_250F']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_2567']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4Ch]']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[edx+eax*4]']
call ['?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2565']
jmp ['short', 'loc_2567']
jmp ['short', 'loc_2506']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN10_1']
dd ['offset', '$LN8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-50h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-124h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z$0']
dd ['offset', '__unwindtable$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_26AB']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_26FD']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4Ch]']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[edx+eax*4]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4Ch]']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[eax+edx*4]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+3Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_26A2']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_50]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_128]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN9_0']
dd ['offset', '$LN7']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z$0 proc	near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-50h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z$0']
dd ['offset', '__unwindtable$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+50h],', '1']
jge ['short', 'loc_2809']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+8],', 'edx']
jmp ['loc_28F6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_2834']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[eax+50h]']
jge ['loc_28E4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_2865']
jmp ['short', 'loc_28E4']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4Ch]']
mov ['ecx,', '[ebp+var_38]']
mov ['ecx,', '[edx+ecx*4]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_28BC']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jz ['short', 'loc_28BC']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_44]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_2C],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_28DF']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[eax+0Ch],', 'edx']
jmp ['loc_282B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_2948']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+50h]']
jge ['short', 'loc_2977']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_20]']
mov ['ecx,', '[ecx+edx*4]']
call ['?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_2975']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_293F']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['??1Transliterator@icu_56@@UAE@XZ:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z:near']
extrn ['?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z:near']
extrn ['?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z:near']
extrn ['?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z:near']
extrn ['?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z:near']
extrn ['?instantiateList@TransliteratorIDParser@icu_56@@SAXAAVUVector@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??1UVector@icu_56@@UAE@XZ:near']
extrn ['?parseCompoundID@TransliteratorIDParser@icu_56@@SACABVUnicodeString@2@HAAV32@AAVUVector@2@AAPAVUnicodeSet@2@@Z:near']
extrn ['__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp_?size@UVector@icu_56@@QBEHXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:near']
extrn ['??0Transliterator@icu_56@@IAE@ABV01@@Z:near']
extrn ['_uprv_free_56:near']
extrn ['??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near']
extrn ['__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:near']
extrn ['__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:near']
extrn ['?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ:near']
extrn ['__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:near']
extrn ['__imp_??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z:near']
end

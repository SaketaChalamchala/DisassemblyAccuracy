endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollatorFactory@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollatorFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CollatorFactory@icu_56@@6B@']
public ['??_7CollatorFactory@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?visible@CollatorFactory@icu_56@@UBECXZ']
dd ['offset', '__purecall']
dd ['offset', '?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4CollatorFactory@icu_56@@6B@']
dd ['offset', '??_R0?AVCollatorFactory@icu_56@@@8']
dd ['offset', '??_R3CollatorFactory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollatorFactory@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollatorFactory@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CollatorFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollatorFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollatorFactory@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3CollatorFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollatorFactory@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollatorFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollatorFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollatorFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_765']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollatorFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_7EB']
push ['offset', '??1CollatorFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7E3']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_814']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollatorFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_811']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?normalizeDir@CollationElementIterator@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+10h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_917']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_924']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+10h]']
mov ['[ebp+var_D0],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '10h']
and ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '8']
and ['eax,', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isIgnorable@CollationElementIterator@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBytes@CollationKey@icu_56@@AAEPAEXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_A2E']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
mov ['[ebp+var_D0],', 'ecx']
jmp ['short', 'loc_A3A']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBytes@CollationKey@icu_56@@ABEPBEXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_A82']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
mov ['[ebp+var_D0],', 'ecx']
jmp ['short', 'loc_A8E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@CollationKey@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_AD4']
mov ['[ebp+var_D0],', '20h']
jmp ['short', 'loc_AE0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLength@CollationKey@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
and ['eax,', '7FFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationKey@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8CollationKey@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@CollationKey@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '2']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getByteArray@CollationKey@icu_56@@QBEPBEAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getLength@CollationKey@icu_56@@ABEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getBytes@CollationKey@icu_56@@ABEPBEXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
push ['offset', '??_R0?AVRuleBasedCollator@icu_56@@@8']
push ['offset', '??_R0?AVCollator@icu_56@@@8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z']
add ['esp,', '4']
push ['0']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_data']
public ['??_R0?AVCollator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_data']
public ['??_R0?AVRuleBasedCollator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
push ['offset', '??_R0?AVRuleBasedCollator@icu_56@@@8']
push ['offset', '??_R0?AVCollator@icu_56@@@8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z']
add ['esp,', '4']
push ['0']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
not ['eax']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+0E0h]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0E0h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
or ['eax,', '[ecx+0E0h]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0E0h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+0E0h]']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRuleBasedCollator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1RuleBasedCollator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E15']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ERuleBasedCollator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_E9E']
push ['offset', '??1RuleBasedCollator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0E8h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E96']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_EC7']
mov ['ecx,', '[ebp+var_8]']
call ['??1RuleBasedCollator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EC4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAssignedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jz ['short', 'loc_F16']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jz ['short', 'loc_F16']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_F1D']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C1h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C0h']
or ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSpecialCE32@Collation@icu_56@@SACI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
cmp ['eax,', '0C0h']
setnb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tagFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCE32Tag@Collation@icu_56@@SACIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1153']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1153']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_115A']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1210']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_1210']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_1210']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_1217']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSelfContainedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_12A1']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_12A1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_12A1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '4']
jz ['short', 'loc_12A1']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_12A8']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isPrefixCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isContractionCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ce32HasContext@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_13A0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '8']
jz ['short', 'loc_1397']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '9']
jnz ['short', 'loc_13A0']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_13A7']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF000000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000000h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF0000h']
shr ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
or ['eax,', '500h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexFromCE32@Collation@icu_56@@SAHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '0Dh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '1Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?digitFromCE32@Collation@icu_56@@SADI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFh']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0C0h']
jnb ['short', 'loc_15B1']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
jmp ['short', 'loc_15DF']
jmp ['short', 'loc_15DF']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0Fh']
cmp ['eax,', '1']
jnz ['short', 'loc_15DA']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
jmp ['short', 'loc_15DF']
jmp ['short', 'loc_15DF']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JIIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_8]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '6']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z']
add ['esp,', '4']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Collation@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationCompare@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '12000000h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32@CollationData@icu_56@@QBEIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0D800h']
jnb ['short', 'loc_1891']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '5']
mov ['eax,', '[ecx]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_D0],', 'eax']
jmp ['loc_1965']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_18D5']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
jmp ['loc_1959']
cmp ['[ebp+arg_0],', '10FFFFh']
jbe ['short', 'loc_18EA']
mov ['[ebp+var_D8],', '80h']
jmp ['short', 'loc_194D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_1907']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_1941']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_DC]']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_19C0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_19FA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDigit@CollationData@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '660h']
jge ['short', 'loc_1A70']
cmp ['[ebp+arg_0],', '39h']
jg ['short', 'loc_1A58']
cmp ['[ebp+arg_0],', '30h']
jl ['short', 'loc_1A58']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_1A62']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_1A90']
push ['0Ah']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
mov ['[ebp+var_D4],', 'edx']
mov ['al,', 'byte', 'ptr', '[ebp+var_D4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1B1A']
movsx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_1B11']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDigit@CollationData@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1B1A']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_1B21']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ecx+edx]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readCE32@CollationData@icu_56@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
or ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?indexFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[edx+eax*8]']
mov ['dword', 'ptr', '[ebp+var_18],', 'ecx']
mov ['edx,', '[edx+eax*8+4]']
mov ['dword', 'ptr', '[ebp+var_18+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_18+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z']
add ['esp,', '0Ch']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16@CollationData@icu_56@@QBEGH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+18h]']
call ['dword', 'ptr', 'ds:__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationDataReader@icu_56@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCharIndex@CollationFastLatin@icu_56@@SAH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '17Fh']
jg ['short', 'loc_1D25']
movzx ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_1D4B']
jmp ['short', 'loc_1D4B']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '2000h']
jl ['short', 'loc_1D48']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '2040h']
jge ['short', 'loc_1D48']
movzx ['eax,', '[ebp+arg_0]']
sub ['eax,', '1E80h']
jmp ['short', 'loc_1D4B']
jmp ['short', 'loc_1D4B']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPrimaries@CollationFastLatin@icu_56@@CAIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1000h']
jb ['short', 'loc_1D90']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FC00FC00h']
jmp ['short', 'loc_1DB2']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jbe ['short', 'loc_1DA2']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFF8FFF8h']
jmp ['short', 'loc_1DB2']
cmp ['[ebp+var_8],', '0C00h']
jb ['short', 'loc_1DAF']
xor ['eax,', 'eax']
jmp ['short', 'loc_1DB2']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSecondariesFromOneShortCE@CollationFastLatin@icu_56@@CAII@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3E0h']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '180h']
jnb ['short', 'loc_1DF8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_1E06']
jmp ['short', 'loc_1E06']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
shl ['eax,', '10h']
or ['eax,', '0C0h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationFastLatin@icu_56@@QAEAAV01@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10h']
call ['??0CEBuffer@CollationIterator@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+170h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+174h],', 'cl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationIterator@icu_56@@6B@']
public ['??_7CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0']
dd ['offset', '__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVCollationIterator@icu_56@@@8']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollationIterator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationIterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jge ['short', 'loc_2153']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
jmp ['loc_23A4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2178']
mov ['eax,', '1000100h']
mov ['edx,', '1']
jmp ['loc_23A4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_222B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_23A4']
cmp ['[ebp+var_2C],', '0C0h']
jnz ['loc_232C']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_2280']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
push ['1']
push ['1000100h']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['loc_23A4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0C0h']
jnb ['short', 'loc_232A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
mov ['esi,', 'edx']
xor ['edi,', 'edi']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
mov ['ebx,', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', 'ecx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', 'ebx']
mov ['ebx,', '[ebp+var_104]']
or ['edx,', 'ebx']
or ['eax,', 'esi']
or ['edx,', 'edi']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_23A4']
jmp ['short', 'loc_2335']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_2C],', '0C1h']
jnz ['short', 'loc_238C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+168h],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
jmp ['short', 'loc_23A4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '28h']
jl ['short', 'loc_2424']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2437']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_2439']
jmp ['short', 'loc_2439']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_4]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_4+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+168h]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEsLength@CollationIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCE@CollationIterator@icu_56@@QBE_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
call ['?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
call ['?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEs@CollationIterator@icu_56@@QAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+168h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_26D8']
mov ['ecx,', '[ebp+var_8]']
call ['?clearCEs@CollationIterator@icu_56@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2735']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_27BE']
push ['offset', '??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['178h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_27B6']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_27E7']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_27E4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationKeys@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationRoot@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationSettings@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0SharedObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationSettings@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '2010h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationSettings@icu_56@@6B@']
public ['??_7CollationSettings@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4CollationSettings@icu_56@@6B@']
dd ['offset', '??_R0?AUCollationSettings@icu_56@@@8']
dd ['offset', '??_R3CollationSettings@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AUCollationSettings@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationSettings@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CollationSettings@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationSettings@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@SharedObject@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationSettings@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3CollationSettings@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SharedObject@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3SharedObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSharedObject@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3SharedObject@icu_56@@8']
dd ['3']
dd ['offset', '??_R2SharedObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SharedObject@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9CollationSettings@icu_56@@QBECABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8CollationSettings@icu_56@@QBECABU01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasReordering@CollationSettings@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reorder@CollationSettings@icu_56@@QBEII@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['al,', '[eax+edx]']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jnz ['short', 'loc_2ACB']
cmp ['[ebp+arg_0],', '1']
ja ['short', 'loc_2AE1']
movzx ['eax,', '[ebp+var_11]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFFFFFh']
or ['eax,', 'ecx']
jmp ['short', 'loc_2AED']
jmp ['short', 'loc_2AED']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?reorderEx@CollationSettings@icu_56@@ABEII@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStrength@CollationSettings@icu_56@@SAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStrength@CollationSettings@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['?getStrength@CollationSettings@icu_56@@SAHH@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
and ['eax,', '[ebp+arg_0]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '300h']
mov ['[ebp+var_14],', 'ecx']
jnz ['short', 'loc_2BF8']
mov ['[ebp+var_DC],', '10h']
jmp ['short', 'loc_2C0D']
xor ['eax,', 'eax']
cmp ['[ebp+var_14],', '200h']
setnz ['al']
add ['eax,', '18h']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+var_DC]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
and ['eax,', '0Ch']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '15h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
and ['eax,', '70h']
sar ['eax,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '600h']
cmp ['eax,', '200h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0C000h']
add ['eax,', '3F3Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '700h']
cmp ['eax,', '300h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?dontCheckFCD@CollationSettings@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '800h']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNumeric@CollationSettings@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '2']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['[eax+34h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2EBF']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '180h']
jnb ['short', 'loc_2EE0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2+3Ch]']
mov ['[ecx+eax*2+3Ch],', 'dx']
jmp ['short', 'loc_2EB6']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationSettings@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationSettings@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2F45']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ECollationSettings@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_2FCE']
push ['offset', '??1CollationSettings@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['33Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2FC6']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_2FF7']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationSettings@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2FF4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@CollationTailoring@icu_56@@QAECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationTailoring@icu_56@@QAEAAU01@ABU01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '5Ch']
call ['dword', 'ptr', 'ds:__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_30DF']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '4']
jnb ['short', 'loc_30FF']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+128h]']
mov ['[eax+128h],', 'dl']
jmp ['short', 'loc_30D6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+12Ch]']
mov ['[eax+12Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+130h]']
mov ['[eax+130h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+134h]']
mov ['[eax+134h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+138h]']
mov ['[eax+138h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+13Ch]']
mov ['[eax+13Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+140h]']
mov ['[eax+140h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+144h]']
mov ['[eax+144h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+148h]']
mov ['edx,', '[eax+14Ch]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+148h],', 'ecx']
mov ['[eax+14Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UIterCollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+178h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UIterCollationIterator@icu_56@@6B@']
public ['??_7UIterCollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '?resetToOffset@UIterCollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@UIterCollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@UIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@UIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@UIterCollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@UIterCollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@UIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@UIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4UIterCollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVUIterCollationIterator@icu_56@@@8']
dd ['offset', '??_R3UIterCollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUIterCollationIterator@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UIterCollationIterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UIterCollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UIterCollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UIterCollationIterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UIterCollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UIterCollationIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UIterCollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+178h]']
mov ['[eax+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUIterCollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3385']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUIterCollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_340E']
push ['offset', '??1UIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['180h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3406']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_3437']
mov ['ecx,', '[ebp+var_8]']
call ['??1UIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3434']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUIterCollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+180h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+184h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+190h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '194h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UIterCollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUIterCollationIterator@icu_56@@6B@']
public ['??_7FCDUIterCollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '?resetToOffset@FCDUIterCollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@FCDUIterCollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@FCDUIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@FCDUIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@FCDUIterCollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@FCDUIterCollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@FCDUIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@FCDUIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z$0']
dd ['offset', '__unwindtable$??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUIterCollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUIterCollationIterator@icu_56@@@8']
dd ['offset', '??_R3FCDUIterCollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUIterCollationIterator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FCDUIterCollationIterator@icu_56@@8']
dd ['5']
dd ['offset', '??_R2FCDUIterCollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUIterCollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UIterCollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUIterCollationIterator@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FCDUIterCollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UIterCollationIterator@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUIterCollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+180h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+184h]']
mov ['[eax+184h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['[eax+188h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+18Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+190h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '194h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '194h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UIterCollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0FCDUIterCollationIterator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUIterCollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_37E1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFCDUIterCollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_386A']
push ['offset', '??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['1D8h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3862']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_3893']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3890']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+178h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+180h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UTF16CollationIterator@icu_56@@6B@']
public ['??_7UTF16CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8UTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z']
dd ['offset', '?resetToOffset@UTF16CollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@UTF16CollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@UTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@UTF16CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@UTF16CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4UTF16CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVUTF16CollationIterator@icu_56@@@8']
dd ['offset', '??_R3UTF16CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUTF16CollationIterator@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UTF16CollationIterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UTF16CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UTF16CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UTF16CollationIterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UTF16CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setText@UTF16CollationIterator@icu_56@@QAEXPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?reset@CollationIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+17Ch],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+178h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+180h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF16CollationIterator@icu_56@@IAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+178h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+17Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+180h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUTF16CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3B11']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUTF16CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_3B9A']
push ['offset', '??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['188h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3B92']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_3BC3']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3BC0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+188h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+18Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+190h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+194h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1DCh],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUTF16CollationIterator@icu_56@@6B@']
public ['??_7FCDUTF16CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8FCDUTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z']
dd ['offset', '?resetToOffset@FCDUTF16CollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@FCDUTF16CollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@FCDUTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@UTF16CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@FCDUTF16CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z$0']
dd ['offset', '__unwindtable$??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUTF16CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUTF16CollationIterator@icu_56@@@8']
dd ['offset', '??_R3FCDUTF16CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUTF16CollationIterator@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3FCDUTF16CollationIterator@icu_56@@8']
dd ['5']
dd ['offset', '??_R2FCDUTF16CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUTF16CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UTF16CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUTF16CollationIterator@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FCDUTF16CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF16CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['[eax+188h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+18Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+190h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+194h]']
mov ['[eax+194h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+198h]']
mov ['[eax+198h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '19Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '19Ch']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1DCh]']
mov ['[eax+1DCh],', 'dl']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z$0']
align ['4']
dd ['offset', '__unwindtable$??0FCDUTF16CollationIterator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUTF16CollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3FA9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFCDUTF16CollationIterator@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4032']
push ['offset', '??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['1E0h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_402A']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_405B']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4058']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF8CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+178h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+17Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+180h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UTF8CollationIterator@icu_56@@6B@']
public ['??_7UTF8CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '?resetToOffset@UTF8CollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@UTF8CollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@UTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@UTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@UTF8CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@UTF8CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@UTF8CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@UTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@UTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4UTF8CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVUTF8CollationIterator@icu_56@@@8']
dd ['offset', '??_R3UTF8CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUTF8CollationIterator@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UTF8CollationIterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UTF8CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UTF8CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UTF8CollationIterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UTF8CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF8CollationIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0CollationIterator@icu_56@@IAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF8CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+178h]']
mov ['[eax+178h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+17Ch]']
mov ['[eax+17Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+180h]']
mov ['[eax+180h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUTF8CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4281']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUTF8CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_430A']
push ['offset', '??1UTF8CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['188h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4302']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4333']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4330']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF8CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+188h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+18Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+194h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '198h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUTF8CollationIterator@icu_56@@6B@']
public ['??_7FCDUTF8CollationIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '??8CollationIterator@icu_56@@UBECABV01@@Z']
dd ['offset', '?resetToOffset@FCDUTF8CollationIterator@icu_56@@UAEXH@Z']
dd ['offset', '?getOffset@FCDUTF8CollationIterator@icu_56@@UBEHXZ']
dd ['offset', '?nextCodePoint@FCDUTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?previousCodePoint@FCDUTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z']
dd ['offset', '?handleNextCE32@FCDUTF8CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z']
dd ['offset', '?handleGetTrailSurrogate@FCDUTF8CollationIterator@icu_56@@MAE_WXZ']
dd ['offset', '?foundNULTerminator@FCDUTF8CollationIterator@icu_56@@MAECXZ']
dd ['offset', '?forbidSurrogateCodePoints@UTF8CollationIterator@icu_56@@MBECXZ']
dd ['offset', '?forwardNumCodePoints@FCDUTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?backwardNumCodePoints@FCDUTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z']
dd ['offset', '?getDataCE32@CollationIterator@icu_56@@MBEIH@Z']
dd ['offset', '?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z$0']
dd ['offset', '__unwindtable$??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUTF8CollationIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUTF8CollationIterator@icu_56@@@8']
dd ['offset', '??_R3FCDUTF8CollationIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUTF8CollationIterator@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3FCDUTF8CollationIterator@icu_56@@8']
dd ['5']
dd ['offset', '??_R2FCDUTF8CollationIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUTF8CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UTF8CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CollationIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUTF8CollationIterator@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FCDUTF8CollationIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF8CollationIterator@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF8CollationIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+188h]']
mov ['[eax+188h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18Ch]']
mov ['[eax+18Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+190h]']
mov ['[eax+190h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+194h]']
mov ['[eax+194h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '198h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '198h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0FCDUTF8CollationIterator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUTF8CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_46D5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFCDUTF8CollationIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_475E']
push ['offset', '??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['1D8h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4756']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4787']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4784']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FixedSortKeyByteSink@?A0x0469e25c@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1SortKeyByteSink@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4FixedSortKeyByteSink@?A0x0469e25c@icu_56@@6B@']
public ['??_7FixedSortKeyByteSink@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z']
dd ['offset', '?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
dd ['offset', '?AppendBeyondCapacity@FixedSortKeyByteSink@?A0x0469e25c@icu_56@@EAEXPBDHH@Z']
dd ['offset', '?Resize@FixedSortKeyByteSink@?A0x0469e25c@icu_56@@EAECHH@Z']
assume ['cs:_rdata$r']
public ['??_R4FixedSortKeyByteSink@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVFixedSortKeyByteSink@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3FixedSortKeyByteSink@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFixedSortKeyByteSink@?A0x0469e25c@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3FixedSortKeyByteSink@?A0x0469e25c@icu_56@@8']
dd ['4']
dd ['offset', '??_R2FixedSortKeyByteSink@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FixedSortKeyByteSink@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FixedSortKeyByteSink@?A0x0469e25c@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FixedSortKeyByteSink@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3SortKeyByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSortKeyByteSink@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3SortKeyByteSink@icu_56@@8']
dd ['3']
dd ['offset', '??_R2SortKeyByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SortKeyByteSink@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4995']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?AppendBeyondCapacity@FixedSortKeyByteSink@?A0x0469e25c@icu_56@@EAEXPBDHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
cmp ['[ebp+Size],', '0']
jle ['short', 'loc_4A0D']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Resize@FixedSortKeyByteSink@?A0x0469e25c@icu_56@@EAECHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CollationKeyByteSink@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationKeyByteSink@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1SortKeyByteSink@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CollationKeyByteSink@icu_56@@6B@']
public ['??_7CollationKeyByteSink@icu_56@@6B@']
dd ['offset', '?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z']
dd ['offset', '?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
dd ['offset', '?AppendBeyondCapacity@CollationKeyByteSink@icu_56@@EAEXPBDHH@Z']
dd ['offset', '?Resize@CollationKeyByteSink@icu_56@@EAECHH@Z']
assume ['cs:_rdata$r']
public ['??_R4CollationKeyByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVCollationKeyByteSink@icu_56@@@8']
dd ['offset', '??_R3CollationKeyByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCollationKeyByteSink@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationKeyByteSink@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CollationKeyByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationKeyByteSink@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationKeyByteSink@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3CollationKeyByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationKeyByteSink@icu_56@@UAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationKeyByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4B81']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?AppendBeyondCapacity@CollationKeyByteSink@icu_56@@EAEXPBDHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4C0C']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Resize@CollationKeyByteSink@icu_56@@EAECHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_4C54']
xor ['al,', 'al']
jmp ['short', 'loc_4CC5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
shl ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_4C79']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0C8h']
jge ['short', 'loc_4C89']
mov ['[ebp+var_14],', '0C8h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+14h]']
call ['?reallocate@CollationKey@icu_56@@AAEPAEHH@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_4CB1']
mov ['ecx,', '[ebp+var_8]']
call ['?SetNotOk@SortKeyByteSink@icu_56@@IAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_4CC5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?SetNotOk@SortKeyByteSink@icu_56@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0Collator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedCollator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E0h]']
mov ['[eax+0E0h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+0E4h]']
mov ['[eax+0E4h],', 'dl']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Collator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4RuleBasedCollator@icu_56@@6B@']
public ['??_7RuleBasedCollator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@RuleBasedCollator@icu_56@@UBEPAXXZ']
dd ['offset', '??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z']
dd ['offset', '??9Collator@icu_56@@UBECABV01@@Z']
dd ['offset', '?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ']
dd ['offset', '?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z']
dd ['offset', '?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
dd ['offset', '?compare@Collator@icu_56@@UBE?AW4EComparisonResult@12@PB_WH0H@Z']
dd ['offset', '?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@ABVUnicodeString@2@0HAAW4UErrorCode@@@Z']
dd ['offset', '?compare@Collator@icu_56@@UBE?AW4EComparisonResult@12@ABVUnicodeString@2@0H@Z']
dd ['offset', '?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@ABVUnicodeString@2@0AAW4UErrorCode@@@Z']
dd ['offset', '?compare@Collator@icu_56@@UBE?AW4EComparisonResult@12@ABVUnicodeString@2@0@Z']
dd ['offset', '?compareUTF8@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@ABVStringPiece@2@0AAW4UErrorCode@@@Z']
dd ['offset', '?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z']
dd ['offset', '?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@ABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z']
dd ['offset', '?hashCode@RuleBasedCollator@icu_56@@UBEHXZ']
dd ['offset', '?getLocale@RuleBasedCollator@icu_56@@UBE?AVLocale@2@W4ULocDataLocaleType@@AAW4UErrorCode@@@Z']
dd ['offset', '?getStrength@Collator@icu_56@@UBE?AW4ECollationStrength@12@XZ']
dd ['offset', '?setStrength@Collator@icu_56@@UAEXW4ECollationStrength@12@@Z']
dd ['offset', '?getReorderCodes@RuleBasedCollator@icu_56@@UBEHPAHHAAW4UErrorCode@@@Z']
dd ['offset', '?setReorderCodes@RuleBasedCollator@icu_56@@UAEXPBHHAAW4UErrorCode@@@Z']
dd ['offset', '?getVersion@RuleBasedCollator@icu_56@@UBEXQAE@Z']
dd ['offset', '?setAttribute@RuleBasedCollator@icu_56@@UAEXW4UColAttribute@@W4UColAttributeValue@@AAW4UErrorCode@@@Z']
dd ['offset', '?getAttribute@RuleBasedCollator@icu_56@@UBE?AW4UColAttributeValue@@W4UColAttribute@@AAW4UErrorCode@@@Z']
dd ['offset', '?setMaxVariable@RuleBasedCollator@icu_56@@UAEAAVCollator@2@W4UColReorderCode@@AAW4UErrorCode@@@Z']
dd ['offset', '?getMaxVariable@RuleBasedCollator@icu_56@@UBE?AW4UColReorderCode@@XZ']
dd ['offset', '?setVariableTop@RuleBasedCollator@icu_56@@UAEXIAAW4UErrorCode@@@Z']
dd ['offset', '?setVariableTop@RuleBasedCollator@icu_56@@UAEIABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z']
dd ['offset', '?getVariableTop@RuleBasedCollator@icu_56@@UBEIAAW4UErrorCode@@@Z']
dd ['offset', '?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
dd ['offset', '?safeClone@Collator@icu_56@@UBEPAV12@XZ']
dd ['offset', '?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z']
dd ['offset', '?getSortKey@RuleBasedCollator@icu_56@@UBEHABVUnicodeString@2@PAEH@Z']
dd ['offset', '?setLocales@RuleBasedCollator@icu_56@@MAEXABVLocale@2@00@Z']
dd ['offset', '?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z']
dd ['offset', '?internalCompareUTF8@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@PBDH0HAAW4UErrorCode@@@Z']
dd ['offset', '?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z']
dd ['offset', '?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z']
dd ['offset', '?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z$1']
dd ['offset', '__unwindtable$??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4RuleBasedCollator@icu_56@@6B@']
dd ['offset', '??_R0?AVRuleBasedCollator@icu_56@@@8']
dd ['offset', '??_R3RuleBasedCollator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R3RuleBasedCollator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2RuleBasedCollator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2RuleBasedCollator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Collator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RuleBasedCollator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3RuleBasedCollator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Collator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3Collator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R3Collator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Collator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Collator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0Collator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedCollator@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0E0h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0E4h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_50BF']
jmp ['loc_5258']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_50D1']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_50D1']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_50DF']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_5258']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?getRoot@CollationRoot@icu_56@@SAPBUCollationTailoring@2@AAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5108']
jmp ['loc_5258']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_20]']
jz ['short', 'loc_5121']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['loc_5258']
mov ['esi,', 'esp']
push ['150h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_5168']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['ecx,', '[ebp+var_F8]']
call ['??0CollationTailoring@icu_56@@QAE@PBUCollationSettings@1@@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_5172']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_104],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_104]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_51BA']
lea ['ecx,', '[ebp+var_2C]']
call ['??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ']
mov ['ecx,', 'eax']
call ['?isBogus@CollationTailoring@icu_56@@QAECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_51D4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
jmp ['loc_5258']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['?read@CollationDataReader@icu_56@@SAXPBUCollationTailoring@2@PBEHAAU32@AAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_521B']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
jmp ['short', 'loc_5258']
lea ['ecx,', '[ebp+var_2C]']
call ['??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?setToBogus@Locale@icu_56@@QAEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['?orphan@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAEPAUCollationTailoring@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
dd ['offset', '$LN19']
dd ['offset', '$LN17']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Collator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$1	proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$2	proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0F8h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$3	proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$2']
dd ['1']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z$3']
dd ['offset', '__unwindtable$??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0Collator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedCollator@icu_56@@6B@']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+14h]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+18h]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E0h]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0E0h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0E4h],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Collator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z$1']
dd ['offset', '__unwindtable$??0RuleBasedCollator@icu_56@@AAE@PBUCollationCacheEntry@1@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1RuleBasedCollator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1RuleBasedCollator@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedCollator@icu_56@@6B@']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '8']
push ['eax']
call ['??$clearPtr@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAXAAPBUCollationSettings@1@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '10h']
push ['eax']
call ['??$clearPtr@UCollationCacheEntry@icu_56@@@SharedObject@icu_56@@SAXAAPBUCollationCacheEntry@1@@Z']
add ['esp,', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1Collator@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1RuleBasedCollator@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Collator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1RuleBasedCollator@icu_56@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1RuleBasedCollator@icu_56@@UAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1RuleBasedCollator@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1RuleBasedCollator@icu_56@@UAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1RuleBasedCollator@icu_56@@UAE@XZ$1']
dd ['offset', '__unwindtable$??1RuleBasedCollator@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_56A6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?deleteIfZeroRefCount@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_57FB']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_56CA']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_56CA']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_56CA']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_56F0']
mov ['ecx,', 'ds:?__LINE__Var@?1??adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@3@AAW4UErrorCode@@@Z@4JA']
add ['ecx,', '5']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@MDMAAEEO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1IA@DKPJLJJN@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAa@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0E4h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_573B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '5Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_5745']
mov ['[ebp+var_F4],', '0']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_EC]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_578A']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?deleteIfZeroRefCount@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_57FB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+8],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0E4h],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z$0 proc	near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1IA@DKPJLJJN@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAa@']
unicode ['0,', '<settings', '==', '0', '&&', 'data', '==', '0', '&&', 'tailoring', '==', '0', '&&', 'cacheEntr>']
unicode ['0,', '<y', '==', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1GM@MDMAAEEO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\rulebasedcollator.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@3@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?adoptTailoring@RuleBasedCollator@icu_56@@AAEXPAUCollationTailoring@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0SharedObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationCacheEntry@icu_56@@6B@']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0E0h],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_5A15']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1SharedObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1Locale@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CollationCacheEntry@icu_56@@6B@']
public ['??_7CollationCacheEntry@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z$1']
dd ['offset', '__unwindtable$??0CollationCacheEntry@icu_56@@QAE@ABVLocale@1@PBUCollationTailoring@1@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4CollationCacheEntry@icu_56@@6B@']
dd ['offset', '??_R0?AUCollationCacheEntry@icu_56@@@8']
dd ['offset', '??_R3CollationCacheEntry@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AUCollationCacheEntry@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CollationCacheEntry@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CollationCacheEntry@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CollationCacheEntry@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@SharedObject@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CollationCacheEntry@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3CollationCacheEntry@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCollationCacheEntry@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CollationCacheEntry@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5B91']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['0E8h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_5C32']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0RuleBasedCollator@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_5C3C']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ$0']
dd ['offset', '__unwindtable$?clone@RuleBasedCollator@icu_56@@UBEPAVCollator@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4RuleBasedCollator@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_5D0B']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_5D95']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['??$copyPtr@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAXPBUCollationSettings@1@AAPBU21@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['??$copyPtr@UCollationCacheEntry@icu_56@@@SharedObject@icu_56@@SAXPBUCollationCacheEntry@1@AAPBU21@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+14h]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E0h]']
mov ['[eax+0E0h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+0E4h]']
mov ['[eax+0E4h],', 'dl']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@RuleBasedCollator@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@RuleBasedCollator@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@RuleBasedCollator@icu_56@@UBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@RuleBasedCollator@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_5E65']
mov ['al,', '1']
jmp ['loc_60B1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??8Collator@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5E7F']
xor ['al,', 'al']
jmp ['loc_60B1']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+8]']
call ['??9CollationSettings@icu_56@@QBECABU01@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5EA5']
xor ['al,', 'al']
jmp ['loc_60B1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_5EBA']
mov ['al,', '1']
jmp ['loc_60B1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
setz ['dl']
mov ['[ebp+var_29],', 'dl']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
setz ['dl']
mov ['[ebp+var_35],', 'dl']
movsx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jz ['short', 'loc_5F10']
movsx ['ecx,', '[ebp+var_35]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5F10']
mov ['edx,', 'ds:?__LINE__Var@?1???8RuleBasedCollator@icu_56@@UBECABVCollator@2@@Z@4JA']
add ['edx,', '8']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GM@MDMAAEEO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DI@LLBGGPKM@?$AA?$CB?$AAt?$AAh?$AAi?$AAs?$AAI?$AAs?$AAR?$AAo?$AAo?$AAt?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CB?$AAo?$AAt?$AAh?$AAe?$AAr?$AAI?$AAs?$AAR?$AAo?$AAo?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_29]']
movsx ['ecx,', '[ebp+var_35]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_5F23']
xor ['al,', 'al']
jmp ['loc_60B1']
movsx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jnz ['short', 'loc_5F4A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5FA1']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jnz ['short', 'loc_5F71']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5FA1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1Ch']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+0Ch]']
add ['ecx,', '1Ch']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5FA1']
mov ['al,', '1']
jmp ['loc_60B1']
mov ['[ebp+var_44],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+78h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['??0?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@PAVUnicodeSet@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+78h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??0?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@PAVUnicodeSet@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6036']
mov ['[ebp+var_13D],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['al,', '[ebp+var_13D]']
jmp ['short', 'loc_60B1']
lea ['ecx,', '[ebp+var_5C]']
call ['??D?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QBEAAVUnicodeSet@1@XZ']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['??D?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QBEAAVUnicodeSet@1@XZ']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??9UnicodeSet@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6089']
mov ['[ebp+var_131],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['al,', '[ebp+var_131]']
jmp ['short', 'loc_60B1']
mov ['[ebp+var_125],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_5C]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['al,', '[ebp+var_125]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN21']
dd ['offset', '$LN17_0']
dd ['0FFFFFFB0h,', '4']
dd ['offset', '$LN18']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN19_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z$0 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z$1 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-148h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DI@LLBGGPKM@?$AA?$CB?$AAt?$AAh?$AAi?$AAs?$AAI?$AAs?$AAR?$AAo?$AAo?$AAt?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AA?$CB?$AAo?$AAt?$AAh?$AAe?$AAr?$AAI?$AAs?$AAR?$AAo?$AAo?$AAt?$AA?$AA@']
unicode ['0,', '<!thisIsRoot', '||', '!otherIsRoot>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1???8RuleBasedCollator@icu_56@@UBECABVCollator@2@@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z$1']
dd ['offset', '__unwindtable$??8RuleBasedCollator@icu_56@@UBECABVCollator@1@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@RuleBasedCollator@icu_56@@UBEHXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '140h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_14C]']
mov ['ecx,', '50h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
call ['?hashCode@CollationSettings@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['short', 'loc_623C']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_634F']
mov ['[ebp+var_2C],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+78h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
call ['??0?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@PAVUnicodeSet@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_62A4']
mov ['[ebp+var_148],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_148]']
jmp ['loc_634F']
lea ['ecx,', '[ebp+var_38]']
call ['??D?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QBEAAVUnicodeSet@1@XZ']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSetIterator@icu_56@@QAE@ABVUnicodeSet@1@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_?next@UnicodeSetIterator@icu_56@@QAECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_631B']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_?isString@UnicodeSetIterator@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_631B']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_?getCodepoint@UnicodeSetIterator@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
call ['?getCE32@CollationData@icu_56@@QBEIH@Z']
xor ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_62C3']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_13C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSetIterator@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_38]']
call ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_13C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '14Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN13_0']
dd ['offset', '$LN9']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN10']
db ['90h']
db ['3', 'dup(0FFh)']
dd ['offset', '?_Rank@?$_Arithmetic_traits@_N@std@@2HB']
dd ['offset', '$LN11_0']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ$0 proc near
lea ['ecx,', '[ebp-38h]']
jmp ['??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-70h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSetIterator@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-150h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ$1']
dd ['offset', '__unwindtable$?hashCode@RuleBasedCollator@icu_56@@UBEHXZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLocales@RuleBasedCollator@icu_56@@MAEXABVLocale@2@00@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '5Ch']
mov ['esi,', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_??8Locale@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_647E']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0E4h],', '0']
jmp ['short', 'loc_64CB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_??8Locale@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_64C1']
mov ['edx,', 'ds:?__LINE__Var@?1??setLocales@RuleBasedCollator@icu_56@@MAEXABVLocale@3@00@Z@4JA']
add ['edx,', '4']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GM@MDMAAEEO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@DHONLOBC@?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0E4h],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CA@DHONLOBC@?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?$AA@']
unicode ['0,', '<actual', '==', 'valid>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??setLocales@RuleBasedCollator@icu_56@@MAEXABVLocale@3@00@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLocale@RuleBasedCollator@icu_56@@UBE?AVLocale@2@W4ULocDataLocaleType@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_659B']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getRoot@Locale@icu_56@@SAABV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_6689']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0']
jz ['short', 'loc_65BB']
cmp ['[ebp+var_E8],', '1']
jz ['short', 'loc_661F']
jmp ['loc_664C']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0E4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_65D7']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '14h']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_65E6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '5Ch']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_E0],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_D4]']
or ['ecx,', '1']
mov ['[ebp+var_D4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_6689']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_D4]']
or ['ecx,', '1']
mov ['[ebp+var_D4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_6689']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getRoot@Locale@icu_56@@SAABV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGetLocaleID@RuleBasedCollator@icu_56@@QBEPBDW4ULocDataLocaleType@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_66DF']
xor ['eax,', 'eax']
jmp ['loc_67A1']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0']
jz ['short', 'loc_66FC']
cmp ['[ebp+var_E8],', '1']
jz ['short', 'loc_6732']
jmp ['short', 'loc_673D']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0E4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6718']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '14h']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_6727']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '5Ch']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_674A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '14h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_674A']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_67A1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?isBogus@Locale@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6767']
xor ['eax,', 'eax']
jmp ['short', 'loc_67A1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?getName@Locale@icu_56@@QBEPBDXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6792']
mov ['[ebp+var_E8],', 'offset', '??_C@_04NBFCGMPH@root?$AA@']
jmp ['short', 'loc_679B']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04NBFCGMPH@root?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRules@RuleBasedCollator@icu_56@@QBEABVUnicodeString@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
add ['eax,', '1Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRules@RuleBasedCollator@icu_56@@QBEXW4UColRuleOption@@AAVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_683B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1Ch']
mov ['esi,', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_6886']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?appendRootRules@CollationLoader@icu_56@@SAXAAVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1Ch']
mov ['esi,', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getVersion@RuleBasedCollator@icu_56@@UBEXQAE@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '128h']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '128h']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '90h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx],', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '170h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_17C]']
mov ['ecx,', '5Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6979']
xor ['eax,', 'eax']
jmp ['loc_6AE4']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_108],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_69DF']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_108]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_108]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['ecx,', '[ebp+var_108]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['edx,', '[ebp+var_108]']
mov ['[ebp+var_178],', 'edx']
jmp ['short', 'loc_69E9']
mov ['[ebp+var_178],', '0']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_114],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_114]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_6A1B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_6AE4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['loc_6AE1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_170]']
call ['??0TailoredSet@icu_56@@QAE@PAVUnicodeSet@1@@Z']
mov ['[ebp+var_178],', 'eax']
mov ['ecx,', '[ebp+var_178]']
mov ['[ebp+var_17C],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_17C]']
call ['?forData@TailoredSet@icu_56@@QAEXPBUCollationData@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_170]']
call ['??1TailoredSet@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6AE1']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_F0],', 'eax']
mov ['ecx,', '[ebp+var_F0]']
mov ['[ebp+var_FC],', 'ecx']
cmp ['[ebp+var_FC],', '0']
jz ['short', 'loc_6AD3']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_FC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_FC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_178],', 'eax']
jmp ['short', 'loc_6ADD']
mov ['[ebp+var_178],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_6AE4']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '17Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-108h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-170h]']
jmp ['??1TailoredSet@icu_56@@QAE@XZ']
endp
__ehhandler$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-180h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z']
dd ['offset', '?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECH@Z']
dd ['offset', '??8UnicodeSet@icu_56@@UBECABV01@@Z']
dd ['offset', '?hashCode@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?size@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?isEmpty@UnicodeSet@icu_56@@UBECXZ']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECHH@Z']
dd ['offset', '?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z']
dd ['offset', '?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?clear@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?getRangeCount@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?compact@UnicodeSet@icu_56@@UAEAAV12@XZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?getTailoredSet@RuleBasedCollator@icu_56@@UBEPAVUnicodeSet@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeSet@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3UnicodeSet@icu_56@@8']
dd ['1,', '6']
dd ['offset', '??_R2UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeSet@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeSet@icu_56@@8']
dd ['5,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TailoredSet@icu_56@@QAE@PAVUnicodeSet@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6EBF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1TailoredSet@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2A0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2AC]']
mov ['ecx,', '0A8h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6F83']
jmp ['loc_7016']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6F9F']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_6FBB']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_2A0]']
call ['??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z']
mov ['[ebp+var_2A8],', 'eax']
mov ['eax,', '[ebp+var_2A8]']
mov ['[ebp+var_2AC],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_2AC]']
call ['?forData@ContractionsAndExpansions@icu_56@@QAEXPBUCollationData@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2A0]']
call ['??1ContractionsAndExpansions@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2ACh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z$0 proc	near
lea ['ecx,', '[ebp-2A0h]']
jmp ['??1ContractionsAndExpansions@icu_56@@QAE@XZ']
endp
__ehhandler$?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_C]']
mov ['[eax+10h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+11h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '48h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '7Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0BCh],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1B8h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '48h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z$1']
dd ['offset', '__unwindtable$??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1ContractionsAndExpansions@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1ContractionsAndExpansions@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '7Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '48h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1ContractionsAndExpansions@icu_56@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??1ContractionsAndExpansions@icu_56@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '48h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1ContractionsAndExpansions@icu_56@@QAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1ContractionsAndExpansions@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1ContractionsAndExpansions@icu_56@@QAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1ContractionsAndExpansions@icu_56@@QAE@XZ$1']
dd ['offset', '__unwindtable$??1ContractionsAndExpansions@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2A0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_2AC]']
mov ['ecx,', '0A8h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_73B4']
jmp ['short', 'loc_740E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_2A0]']
call ['??0ContractionsAndExpansions@icu_56@@QAE@PAVUnicodeSet@1@0PAVCESink@01@C@Z']
mov ['[ebp+var_2A8],', 'eax']
mov ['edx,', '[ebp+var_2A8]']
mov ['[ebp+var_2AC],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_2AC]']
call ['?forCodePoint@ContractionsAndExpansions@icu_56@@QAEXPBUCollationData@2@HAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2A0]']
call ['??1ContractionsAndExpansions@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2ACh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-2A0h]']
jmp ['??1ContractionsAndExpansions@icu_56@@QAE@XZ']
endp
__ehhandler$?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?internalAddContractions@RuleBasedCollator@icu_56@@QBEXHAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDefaultSettings@RuleBasedCollator@icu_56@@ABEABUCollationSettings@2@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['eax,', '[ecx+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAttribute@RuleBasedCollator@icu_56@@UBE?AW4UColAttributeValue@@W4UColAttribute@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7510']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_75A4']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_DC],', 'eax']
cmp ['[ebp+var_DC],', '7']
ja ['short', 'loc_7581']
mov ['ecx,', '[ebp+var_DC]']
jmp ['ds:$LN15[ecx*4]']
mov ['[ebp+var_14],', '800h']
jmp ['short', 'loc_758F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ']
jmp ['short', 'loc_75A4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ']
jmp ['short', 'loc_75A4']
mov ['[ebp+var_14],', '400h']
jmp ['short', 'loc_758F']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_758F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?getStrength@CollationSettings@icu_56@@QBEHXZ']
jmp ['short', 'loc_75A4']
mov ['eax,', '10h']
jmp ['short', 'loc_75A4']
mov ['[ebp+var_14],', '2']
jmp ['short', 'loc_758F']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_75A4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ecx+14h]']
and ['eax,', '[ebp+var_14]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
add ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN8']
dd ['offset', '$LN7']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
dd ['offset', '$LN2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAttribute@RuleBasedCollator@icu_56@@UAEXW4UColAttribute@@W4UColAttributeValue@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_763A']
jmp ['loc_77F8']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_7653']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z']
jmp ['loc_77F8']
mov ['ecx,', '[ebp+var_8]']
call ['?getDefaultSettings@RuleBasedCollator@icu_56@@ABEABUCollationSettings@2@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_7680']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_7680']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z']
jmp ['loc_77F8']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
call ['??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_76A6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_77F8']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_F4],', 'eax']
cmp ['[ebp+var_F4],', '7']
ja ['loc_77AC']
mov ['ecx,', '[ebp+var_F4]']
jmp ['ds:$LN23[ecx*4]']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['800h']
mov ['ecx,', '[ebp+var_2C]']
call ['?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z']
jmp ['loc_77B5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?setAlternateHandling@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z']
jmp ['loc_77B5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?setCaseFirst@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z']
jmp ['loc_77B5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['400h']
mov ['ecx,', '[ebp+var_2C]']
call ['?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z']
jmp ['short', 'loc_77B5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_2C]']
call ['?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z']
jmp ['short', 'loc_77B5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?setStrength@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_77B5']
cmp ['[ebp+arg_4],', '10h']
jz ['short', 'loc_778F']
cmp ['[ebp+arg_4],', '11h']
jz ['short', 'loc_778F']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jz ['short', 'loc_778F']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_77B5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_2C]']
call ['?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z']
jmp ['short', 'loc_77B5']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_77CC']
jmp ['short', 'loc_77F8']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setFastLatinOptions@RuleBasedCollator@icu_56@@ABEXAAUCollationSettings@2@@Z']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_77EC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z']
jmp ['short', 'loc_77F8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
dd ['offset', '$LN12_0']
dd ['offset', '$LN11_1']
dd ['offset', '$LN10_0']
dd ['offset', '$LN9_1']
dd ['offset', '$LN8_0']
dd ['offset', '$LN7_0']
dd ['offset', '$LN5_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setMaxVariable@RuleBasedCollator@icu_56@@UAEAAVCollator@2@W4UColReorderCode@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7870']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_79E6']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jnz ['short', 'loc_787F']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_78AF']
cmp ['[ebp+arg_0],', '1000h']
jl ['short', 'loc_789E']
cmp ['[ebp+arg_0],', '1003h']
jg ['short', 'loc_789E']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1000h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_78AF']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_79E6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_78D7']
push ['8']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_79E6']
mov ['ecx,', '[ebp+var_8]']
call ['?getDefaultSettings@RuleBasedCollator@icu_56@@ABEABUCollationSettings@2@XZ']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_2C]']
jnz ['short', 'loc_7905']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
jnz ['short', 'loc_7905']
push ['8']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_79E6']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
call ['??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_792E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_79E6']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jnz ['short', 'loc_7944']
mov ['ecx,', '[ebp+var_2C]']
call ['?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ']
add ['eax,', '1000h']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_7981']
mov ['eax,', 'ds:?__LINE__Var@?1??setMaxVariable@RuleBasedCollator@icu_56@@UAEAAVCollator@3@W4UColReorderCode@@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '22h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GM@MDMAAEEO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BI@IIDEEOKG@?$AAv?$AAa?$AAr?$AAT?$AAo?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?setMaxVariable@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_79B2']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_79E6']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setFastLatinOptions@RuleBasedCollator@icu_56@@ABEXAAUCollationSettings@2@@Z']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
jnz ['short', 'loc_79D9']
push ['8']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z']
jmp ['short', 'loc_79E3']
push ['8']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_rdata']
public ['??_C@_1BI@IIDEEOKG@?$AAv?$AAa?$AAr?$AAT?$AAo?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<varTop', '!=', '0>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??setMaxVariable@RuleBasedCollator@icu_56@@UAEAAVCollator@3@W4UColReorderCode@@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaxVariable@RuleBasedCollator@icu_56@@UBE?AW4UColReorderCode@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ']
add ['eax,', '1000h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getVariableTop@RuleBasedCollator@icu_56@@UBEIAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ecx+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '474h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_480]']
mov ['ecx,', '11Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7AF9']
xor ['eax,', 'eax']
jmp ['loc_7C96']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_7B15']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_7B15']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_7C96']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_7B2A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_7B40']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_7C96']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_21],', 'al']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7BCE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
movzx ['edx,', '[ebp+var_21]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_1D4]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1D4]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1D4]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1D4]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
jmp ['short', 'loc_7C3A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
movzx ['edx,', '[ebp+var_21]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_3BC]']
call ['??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_3BC]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_3BC]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3BC]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
cmp ['[ebp+var_34],', '1000100h']
jnz ['short', 'loc_7C49']
cmp ['[ebp+var_30],', '1']
jz ['short', 'loc_7C58']
cmp ['[ebp+var_44],', '1000100h']
jnz ['short', 'loc_7C58']
cmp ['[ebp+var_40],', '1']
jz ['short', 'loc_7C65']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '15h']
xor ['eax,', 'eax']
jmp ['short', 'loc_7C96']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_30]']
mov ['cl,', '20h']
call ['__allshr']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ecx+18h]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '480h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN18_0']
dd ['offset', '$LN15_0']
dd ['0FFFFFC44h,', '1E0h']
dd ['offset', '$LN16']
db ['69h,', '0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z$0	proc near
lea ['ecx,', '[ebp-1D4h]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z$1	proc near
lea ['ecx,', '[ebp-3BCh]']
jmp ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-484h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?setVariableTop@RuleBasedCollator@icu_56@@UAEIPB_WHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setVariableTop@RuleBasedCollator@icu_56@@UAEIABVUnicodeString@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+70h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setVariableTop@RuleBasedCollator@icu_56@@UAEXIAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7E29']
jmp ['loc_7F5E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+18h]']
jz ['loc_7F38']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?getGroupForPrimary@CollationData@icu_56@@QBEHI@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1000h']
jl ['short', 'loc_7E5F']
cmp ['[ebp+var_14],', '1003h']
jle ['short', 'loc_7E6D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_7F5E']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_7E8D']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_7EB3']
mov ['ecx,', 'ds:?__LINE__Var@?1??setVariableTop@RuleBasedCollator@icu_56@@UAEXIAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '0Bh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@MDMAAEEO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CM@DNBDCAAH@?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAv?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAv?$AAa?$AAr?$AAT?$AAo?$AAp?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+18h]']
jz ['short', 'loc_7F38']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
call ['??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_7EEA']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_7F5E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getDefaultSettings@RuleBasedCollator@icu_56@@ABEABUCollationSettings@2@XZ']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1000h']
push ['edx']
mov ['ecx,', '[ebp+var_2C]']
call ['?setMaxVariable@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7F23']
jmp ['short', 'loc_7F5E']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setFastLatinOptions@RuleBasedCollator@icu_56@@ABEXAAUCollationSettings@2@@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?getDefaultSettings@RuleBasedCollator@icu_56@@ABEABUCollationSettings@2@XZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+18h]']
jnz ['short', 'loc_7F54']
push ['8']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z']
jmp ['short', 'loc_7F5E']
push ['8']
mov ['ecx,', '[ebp+var_8]']
call ['?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_rdata']
public ['??_C@_1CM@DNBDCAAH@?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAv?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAv?$AAa?$AAr?$AAT?$AAo?$AAp?$AA?$AA@']
unicode ['0,', '<v', '!=', '0', '&&', 'v', '>']
dw ['3Eh']
unicode ['0,', '<=', 'varTop>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??setVariableTop@RuleBasedCollator@icu_56@@UAEXIAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getReorderCodes@RuleBasedCollator@icu_56@@UBEHPAHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7FE0']
xor ['eax,', 'eax']
jmp ['short', 'loc_805F']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_7FF2']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_7FFF']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_7FFF']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_805F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_8015']
xor ['eax,', 'eax']
jmp ['short', 'loc_805F']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_802B']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_805F']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setReorderCodes@RuleBasedCollator@icu_56@@UAEXPBHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_80B5']
jmp ['loc_81CD']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_80C7']
cmp ['[ebp+Buf1],', '0']
jnz ['short', 'loc_80D5']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_80D5']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_81CD']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_80EA']
mov ['eax,', '[ebp+Buf1]']
cmp ['dword', 'ptr', '[eax],', '67h']
jnz ['short', 'loc_80EA']
mov ['[ebp+arg_4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+30h]']
jnz ['short', 'loc_811E']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_811E']
jmp ['loc_81CD']
mov ['ecx,', '[ebp+var_8]']
call ['?getDefaultSettings@RuleBasedCollator@icu_56@@ABEABUCollationSettings@2@XZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_8183']
mov ['eax,', '[ebp+Buf1]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_8183']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_14]']
jz ['short', 'loc_8181']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
call ['??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_8165']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_81CD']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_20]']
call ['?copyReorderingFrom@CollationSettings@icu_56@@QAEXABU12@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setFastLatinOptions@RuleBasedCollator@icu_56@@ABEXAAUCollationSettings@2@@Z']
jmp ['short', 'loc_81CD']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
push ['eax']
call ['??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_81A6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_81CD']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_2C]']
call ['?setReordering@CollationSettings@icu_56@@QAEXABUCollationData@2@PBHHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setFastLatinOptions@RuleBasedCollator@icu_56@@ABEXAAUCollationSettings@2@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setFastLatinOptions@RuleBasedCollator@icu_56@@ABEXAAUCollationSettings@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['180h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['?getOptions@CollationFastLatin@icu_56@@SAHPBUCollationData@2@ABUCollationSettings@2@PAGH@Z']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+38h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@ABVUnicodeString@2@0AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8280']
xor ['eax,', 'eax']
jmp ['short', 'loc_82D8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@ABVUnicodeString@2@0HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_832E']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_8335']
xor ['eax,', 'eax']
jmp ['loc_83CB']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_834B']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_83CB']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_8383']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_8391']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8420']
xor ['eax,', 'eax']
jmp ['short', 'loc_8493']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_842C']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_8438']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_8445']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_8445']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_8493']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_8462']
cmp ['[ebp+arg_C],', '0']
jge ['short', 'loc_8460']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_C],', 'eax']
jmp ['short', 'loc_8477']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_8477']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareUTF8@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@ABVStringPiece@2@0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_84EB']
xor ['eax,', 'eax']
jmp ['loc_859A']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?data@StringPiece@icu_56@@QBEPBDXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?data@StringPiece@icu_56@@QBEPBDXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_8534']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?empty@StringPiece@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8553']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_8560']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?empty@StringPiece@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8560']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_859A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@StringPiece@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@StringPiece@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalCompareUTF8@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@PBDH0HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_85EC']
xor ['eax,', 'eax']
jmp ['short', 'loc_865F']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_85F8']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_8604']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_8611']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_8611']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_865F']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_862E']
cmp ['[ebp+arg_C],', '0']
jge ['short', 'loc_862C']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_C],', 'eax']
jmp ['short', 'loc_8643']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_8643']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+arg_4]']
call ['?nextCodePoint@NFDIterator@?A0x0469e25c@icu_56@@QAEHXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?nextCodePoint@NFDIterator@?A0x0469e25c@icu_56@@QAEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_86C1']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_86BF']
jmp ['loc_874A']
jmp ['short', 'loc_8696']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_86D0']
mov ['[ebp+var_8],', '0FFFFFFFEh']
jmp ['short', 'loc_86F5']
cmp ['[ebp+var_8],', '0FFFEh']
jnz ['short', 'loc_86E2']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_86F5']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?nextDecomposedCodePoint@NFDIterator@?A0x0469e25c@icu_56@@QAEHABVNormalizer2Impl@3@H@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_8704']
mov ['[ebp+var_14],', '0FFFFFFFEh']
jmp ['short', 'loc_8729']
cmp ['[ebp+var_14],', '0FFFEh']
jnz ['short', 'loc_8716']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_8729']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?nextDecomposedCodePoint@NFDIterator@?A0x0469e25c@icu_56@@QAEHABVNormalizer2Impl@3@H@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_8736']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_874C']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_8745']
mov ['eax,', '1']
jmp ['short', 'loc_874C']
jmp ['loc_8696']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextCodePoint@NFDIterator@?A0x0469e25c@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jl ['short', 'loc_880B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+14h]']
jnz ['short', 'loc_87A6']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
jmp ['short', 'loc_880B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_8806']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
lea ['eax,', '[eax+edx-35FDC00h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_8821']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextDecomposedCodePoint@NFDIterator@?A0x0469e25c@icu_56@@QAEHABVNormalizer2Impl@3@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jl ['short', 'loc_886C']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_8911']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getDecomposition@Normalizer2Impl@icu_56@@QBEPB_WHQA_WAAH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_88A4']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_8911']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_890E']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
lea ['eax,', '[eax+edx-35FDC00h]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '958h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_964]']
mov ['ecx,', '256h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_8984']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_8984']
xor ['eax,', 'eax']
jmp ['loc_8EA4']
mov ['[ebp+var_3C],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_89DB']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_48],', 'dx']
movzx ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_8]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_89D9']
movzx ['eax,', '[ebp+var_48]']
test ['eax,', 'eax']
jnz ['short', 'loc_89CE']
xor ['eax,', 'eax']
jmp ['loc_8EA4']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_899F']
jmp ['short', 'loc_8A3B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_8A0E']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_8A0A']
xor ['eax,', 'eax']
jmp ['loc_8EA4']
jmp ['short', 'loc_8A3B']
jmp ['short', 'loc_8A30']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_8A2E']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
movzx ['eax,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', 'eax']
jz ['short', 'loc_8A30']
jmp ['short', 'loc_8A3B']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_89F3']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_51],', 'al']
cmp ['[ebp+var_3C],', '0']
jle ['loc_8ADA']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_8A7D']
movzx ['eax,', '[ebp+var_51]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_8AA7']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_8ADA']
movzx ['eax,', '[ebp+var_51]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8ADA']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jle ['short', 'loc_8ADA']
movzx ['eax,', '[ebp+var_51]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8ADA']
jmp ['short', 'loc_8AA7']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_6C],', 'edx']
cmp ['[ebp+var_6C],', '0']
jl ['loc_8BB6']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_8B0E']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '17Fh']
jg ['loc_8BB6']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_8B2C']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '17Fh']
jg ['loc_8BB6']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_8B79']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
call ['?compareUTF16@CollationFastLatin@icu_56@@SAHPBG0HPB_WH1H@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_8BB4']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
add ['edx,', '3Ch']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['?compareUTF16@CollationFastLatin@icu_56@@SAHPBG0HPB_WH1H@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_8BBD']
mov ['[ebp+var_60],', '0FFFFFFFEh']
cmp ['[ebp+var_60],', '0FFFFFFFEh']
jnz ['loc_8D26']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8C84']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
movzx ['edx,', '[ebp+var_51]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_1FC]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
movzx ['edx,', '[ebp+var_51]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_38C]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_38C]']
push ['eax']
lea ['ecx,', '[ebp+var_1FC]']
push ['ecx']
call ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_60],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_38C]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1FC]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
jmp ['loc_8D26']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
movzx ['edx,', '[ebp+var_51]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_574]']
call ['??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
movzx ['edx,', '[ebp+var_51]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_75C]']
call ['??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_75C]']
push ['eax']
lea ['ecx,', '[ebp+var_574]']
push ['ecx']
call ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_60],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_75C]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_574]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_8D51']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?getStrength@CollationSettings@icu_56@@QBEHXZ']
cmp ['eax,', '0Fh']
jl ['short', 'loc_8D51']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8D59']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_8EA4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_768],', 'edx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8E1B']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_790]']
call ['??0UTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@PB_W0@Z']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_7B8]']
call ['??0UTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@PB_W0@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['eax,', '[ebp+var_7B8]']
push ['eax']
lea ['ecx,', '[ebp+var_790]']
push ['ecx']
mov ['edx,', '[ebp+var_768]']
push ['edx']
call ['?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_960],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_7B8]']
call ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_790]']
call ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_960]']
jmp ['loc_8EA4']
jmp ['loc_8EA4']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_768]']
push ['edx']
lea ['ecx,', '[ebp+var_820]']
call ['??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_768]']
push ['edx']
lea ['ecx,', '[ebp+var_888]']
call ['??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['eax,', '[ebp+var_888]']
push ['eax']
lea ['ecx,', '[ebp+var_820]']
push ['ecx']
mov ['edx,', '[ebp+var_768]']
push ['edx']
call ['?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_954],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_888]']
call ['??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_820]']
call ['??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_954]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN53']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '964h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
dd ['offset', '$LN52']
dd ['offset', '$LN43']
dd ['0FFFFFC74h,', '188h']
dd ['offset', '$LN44']
dd ['0FFFFFA8Ch,', '1E0h']
dd ['offset', '$LN45']
dd ['0FFFFF8A4h,', '1E0h']
dd ['offset', '$LN46']
dd ['0FFFFF870h,', '20h']
dd ['offset', '$LN47']
dd ['0FFFFF848h,', '20h']
dd ['offset', '$LN48']
dd ['0FFFFF7E0h,', '60h']
dd ['offset', '$LN49']
dd ['0FFFFF778h,', '60h']
dd ['offset', '$LN50']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-1FCh]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-38Ch]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$2 proc near
lea ['ecx,', '[ebp-574h]']
jmp ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$3 proc near
lea ['ecx,', '[ebp-75Ch]']
jmp ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$4 proc near
lea ['ecx,', '[ebp-790h]']
jmp ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$5 proc near
lea ['ecx,', '[ebp-7B8h]']
jmp ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$6 proc near
lea ['ecx,', '[ebp-820h]']
jmp ['??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$7 proc near
lea ['ecx,', '[ebp-888h]']
jmp ['??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-968h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$5']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$6']
dd ['6']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PB_WH0HAAW4UErrorCode@@@Z$7']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@PB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0NFDIterator@?A0x0469e25c@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7UTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?nextRawCodePoint@UTF16NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ']
assume ['cs:_rdata$r']
public ['??_R4UTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVUTF16NFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUTF16NFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['3']
dd ['offset', '??_R2NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NFDIterator@?A0x0469e25c@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4NFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVNFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_92B5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextRawCodePoint@UTF16NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+18h]']
cmp ['edx,', '[ecx+1Ch]']
jnz ['short', 'loc_935D']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_93F6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_9396']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9396']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_93F6']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_93F3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+18h]']
cmp ['edx,', '[ecx+1Ch]']
jz ['short', 'loc_93F3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_93F3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUTF16NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9449']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '110h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_11C]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['??0UTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@PB_W0@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_20],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?makeFCD@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_955D']
jmp ['loc_968C']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_9575']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_958C']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_958C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+1Ch],', 'ecx']
jmp ['loc_968C']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+arg_4]']
sar ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?init@ReorderingBuffer@icu_56@@QAECHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9624']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?makeFCD@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1ReorderingBuffer@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_968C']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+1Ch],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN15_1']
dd ['offset', '$LN12_1']
dd ['0FFFFFFA8h,', '24h']
dd ['offset', '$LN13_2']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-58h]']
call ['dword', 'ptr', 'ds:__imp_??1ReorderingBuffer@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-120h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?nextRawCodePoint@UTF16NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z$2']
dd ['offset', '__unwindtable$??0FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@QAE@ABVNormalizer2Impl@2@PB_W1@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUTF16NFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUTF16NFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['5']
dd ['offset', '??_R2FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_989D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1FCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CD0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CDC]']
mov ['ecx,', '334h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_99F4']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_99F4']
xor ['eax,', 'eax']
jmp ['loc_A24D']
mov ['[ebp+var_24],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_9A39']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
mov ['cl,', '[eax]']
mov ['[ebp+var_2D],', 'cl']
movzx ['edx,', '[ebp+var_2D]']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_9A37']
movzx ['eax,', '[ebp+var_2D]']
test ['eax,', 'eax']
jnz ['short', 'loc_9A2C']
xor ['eax,', 'eax']
jmp ['loc_A24D']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9A01']
jmp ['short', 'loc_9A7F']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_9A54']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_9A50']
xor ['eax,', 'eax']
jmp ['loc_A24D']
jmp ['short', 'loc_9A7F']
jmp ['short', 'loc_9A74']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_9A72']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_9A74']
jmp ['short', 'loc_9A7F']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_9A39']
cmp ['[ebp+var_24],', '0']
jle ['short', 'loc_9AEB']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_9AA4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0C0h']
cmp ['ecx,', '80h']
jz ['short', 'loc_9AC3']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_9AEB']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0C0h']
cmp ['ecx,', '80h']
jnz ['short', 'loc_9AEB']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jle ['short', 'loc_9AEB']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0C0h']
cmp ['ecx,', '80h']
jnz ['short', 'loc_9AEB']
jmp ['short', 'loc_9AC3']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_39],', 'al']
cmp ['[ebp+var_24],', '0']
jle ['loc_9E73']
mov ['[ebp+var_45],', '0']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_4]']
jz ['loc_9C41']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_60],', '80h']
jl ['loc_9C2A']
cmp ['[ebp+var_60],', '0E0h']
jle ['short', 'loc_9BBB']
cmp ['[ebp+var_60],', '0ECh']
jg ['short', 'loc_9BBB']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
cmp ['eax,', '[ebp+arg_4]']
jl ['short', 'loc_9B5E']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_9BBB']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_69],', 'cl']
movzx ['edx,', '[ebp+var_69]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_9BBB']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_75],', 'cl']
movzx ['edx,', '[ebp+var_75]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_9BBB']
mov ['eax,', '[ebp+var_60]']
shl ['eax,', '0Ch']
movzx ['ecx,', '[ebp+var_69]']
shl ['ecx,', '6']
or ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_75]']
or ['eax,', 'edx']
movzx ['eax,', 'ax']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '2']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_9C2A']
cmp ['[ebp+var_60],', '0E0h']
jge ['short', 'loc_9C0D']
cmp ['[ebp+var_60],', '0C2h']
jl ['short', 'loc_9C0D']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_9C0D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_69],', 'cl']
movzx ['edx,', '[ebp+var_69]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_9C0D']
mov ['eax,', '[ebp+var_60]']
and ['eax,', '1Fh']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_69]']
or ['eax,', 'ecx']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_9C2A']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_60],', 'eax']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
mov ['[ebp+var_45],', 'al']
movsx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jnz ['loc_9E02']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_C]']
jz ['loc_9E02']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_90],', 'ecx']
mov ['edx,', '[ebp+var_84]']
add ['edx,', '1']
mov ['[ebp+var_84],', 'edx']
cmp ['[ebp+var_90],', '80h']
jl ['loc_9DE8']
cmp ['[ebp+var_90],', '0E0h']
jle ['loc_9D4F']
cmp ['[ebp+var_90],', '0ECh']
jg ['loc_9D4F']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
cmp ['eax,', '[ebp+arg_C]']
jl ['short', 'loc_9CCB']
cmp ['[ebp+arg_C],', '0']
jge ['loc_9D4F']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_99],', 'cl']
movzx ['edx,', '[ebp+var_99]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_9D4F']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_A5],', 'cl']
movzx ['edx,', '[ebp+var_A5]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_9D4F']
mov ['eax,', '[ebp+var_90]']
shl ['eax,', '0Ch']
movzx ['ecx,', '[ebp+var_99]']
shl ['ecx,', '6']
or ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_A5]']
or ['eax,', 'edx']
movzx ['eax,', 'ax']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '2']
mov ['[ebp+var_84],', 'eax']
jmp ['loc_9DE8']
cmp ['[ebp+var_90],', '0E0h']
jge ['short', 'loc_9DC2']
cmp ['[ebp+var_90],', '0C2h']
jl ['short', 'loc_9DC2']
mov ['eax,', '[ebp+var_84]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_9DC2']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_99],', 'cl']
movzx ['edx,', '[ebp+var_99]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_9DC2']
mov ['eax,', '[ebp+var_90]']
and ['eax,', '1Fh']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_99]']
or ['eax,', 'ecx']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_9DE8']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_90],', 'eax']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
mov ['[ebp+var_45],', 'al']
movsx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_9E73']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_B4],', 'edx']
cmp ['[ebp+var_B4],', '80h']
jl ['short', 'loc_9E4F']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utf8_prevCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_B4],', 'eax']
cmp ['[ebp+var_24],', '0']
jle ['short', 'loc_9E73']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_9E0A']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_CC],', 'edx']
cmp ['[ebp+var_CC],', '0']
jl ['loc_9F53']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_9EAC']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0C5h']
jg ['loc_9F53']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_9EC9']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0C5h']
jg ['loc_9F53']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_9F16']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+34h]']
push ['eax']
call ['?compareUTF8@CollationFastLatin@icu_56@@SAHPBG0HPBEH1H@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_C0],', 'eax']
jmp ['short', 'loc_9F51']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_24]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_CC]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
call ['?compareUTF8@CollationFastLatin@icu_56@@SAHPBG0HPBEH1H@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_C0],', 'eax']
jmp ['short', 'loc_9F5D']
mov ['[ebp+var_C0],', '0FFFFFFFEh']
cmp ['[ebp+var_C0],', '0FFFFFFFEh']
jnz ['loc_A0B7']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_A01E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_25C]']
call ['??0UTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_3EC]']
call ['??0UTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_3EC]']
push ['eax']
lea ['ecx,', '[ebp+var_25C]']
push ['ecx']
call ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_C0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3EC]']
call ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_25C]']
call ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
jmp ['loc_A0B7']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_5CC]']
call ['??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_7AC]']
call ['??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_7AC]']
push ['eax']
lea ['ecx,', '[ebp+var_5CC]']
push ['ecx']
call ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_C0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_7AC]']
call ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5CC]']
call ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
cmp ['[ebp+var_C0],', '0']
jnz ['short', 'loc_A0E5']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?getStrength@CollationSettings@icu_56@@QBEHXZ']
cmp ['eax,', '0Fh']
jl ['short', 'loc_A0E5']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A0F0']
mov ['eax,', '[ebp+var_C0]']
jmp ['loc_A24D']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_7B8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_A129']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_A1C4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_7E4]']
call ['??0UTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBEH@Z']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_810]']
call ['??0UTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBEH@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['eax,', '[ebp+var_810]']
push ['eax']
lea ['ecx,', '[ebp+var_7E4]']
push ['ecx']
mov ['edx,', '[ebp+var_7B8]']
push ['edx']
call ['?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_CD8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_810]']
call ['??1UTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_7E4]']
call ['??1UTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_CD8]']
jmp ['loc_A24D']
jmp ['loc_A24D']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_A08]']
call ['??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_C00]']
call ['??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['eax,', '[ebp+var_C00]']
push ['eax']
lea ['ecx,', '[ebp+var_A08]']
push ['ecx']
mov ['edx,', '[ebp+var_7B8]']
push ['edx']
call ['?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_CCC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_C00]']
call ['??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_A08]']
call ['??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_CCC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN77']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0CDCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
dd ['offset', '$LN76']
dd ['offset', '$LN64']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN65']
dd ['0FFFFFF7Ch,', '4']
dd ['offset', '$LN66']
dd ['0FFFFFDA4h,', '188h']
dd ['offset', '$LN67']
dd ['0FFFFFC14h,', '188h']
dd ['offset', '$LN68']
dd ['0FFFFFA34h,', '1D8h']
dd ['offset', '$LN69']
dd ['0FFFFF854h,', '1D8h']
dd ['offset', '$LN70']
dd ['0FFFFF81Ch,', '24h']
dd ['offset', '$LN71']
dd ['0FFFFF7F0h,', '24h']
dd ['offset', '$LN72']
dd ['0FFFFF5F8h,', '1F0h']
dd ['offset', '$LN73']
dd ['0FFFFF400h,', '1F0h']
dd ['offset', '$LN74']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-25Ch]']
jmp ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-3ECh]']
jmp ['??1UTF8CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$2 proc near
lea ['ecx,', '[ebp-5CCh]']
jmp ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$3 proc near
lea ['ecx,', '[ebp-7ACh]']
jmp ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$4 proc near
lea ['ecx,', '[ebp-7E4h]']
jmp ['??1UTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$5 proc near
lea ['ecx,', '[ebp-810h]']
jmp ['??1UTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$6 proc near
lea ['ecx,', '[ebp-0A08h]']
jmp ['??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$7 proc near
lea ['ecx,', '[ebp-0C00h]']
jmp ['??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0CE0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$5']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$6']
dd ['6']
dd ['offset', '__unwindfunclet$?doCompare@RuleBasedCollator@icu_56@@ABE?AW4UCollationResult@@PBEH0HAAW4UErrorCode@@@Z$7']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBEH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0NFDIterator@?A0x0469e25c@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+20h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7UTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?nextRawCodePoint@UTF8NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ']
assume ['cs:_rdata$r']
public ['??_R4UTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVUTF8NFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3UTF8NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUTF8NFDIterator@?A0x0469e25c@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UTF8NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UTF8NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UTF8NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UTF8NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UTF8NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextRawCodePoint@UTF8NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+20h]']
jz ['short', 'loc_A5B2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A5BA']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jge ['short', 'loc_A5BA']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_A71F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1Ch],', 'eax']
cmp ['[ebp+var_14],', '80h']
jl ['loc_A71C']
cmp ['[ebp+var_14],', '0E0h']
jle ['loc_A691']
cmp ['[ebp+var_14],', '0ECh']
jg ['loc_A691']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
cmp ['ecx,', '[edx+20h]']
jl ['short', 'loc_A61D']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jge ['short', 'loc_A691']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_1D],', 'cl']
movzx ['edx,', '[ebp+var_1D]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_A691']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_29],', 'cl']
movzx ['edx,', '[ebp+var_29]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_A691']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ch']
movzx ['ecx,', '[ebp+var_1D]']
shl ['ecx,', '6']
or ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_29]']
or ['eax,', 'edx']
movzx ['eax,', 'ax']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1Ch],', 'ecx']
jmp ['loc_A71C']
cmp ['[ebp+var_14],', '0E0h']
jge ['short', 'loc_A6F6']
cmp ['[ebp+var_14],', '0C2h']
jl ['short', 'loc_A6F6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+20h]']
jz ['short', 'loc_A6F6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_1D],', 'cl']
movzx ['edx,', '[ebp+var_1D]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_A6F6']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1Fh']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_1D]']
or ['eax,', 'ecx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1Ch],', 'ecx']
jmp ['short', 'loc_A71C']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUTF8NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A77D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0NFDIterator@?A0x0469e25c@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['??0FCDUTF8CollationIterator@icu_56@@QAE@PBUCollationData@1@CPBEHH@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?nextRawCodePoint@FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z$0']
dd ['offset', '__unwindtable$??0FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@PBEH@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUTF8NFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUTF8NFDIterator@?A0x0469e25c@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['4']
dd ['offset', '??_R2FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextRawCodePoint@FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '18h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[eax+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AA41']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1FCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0C38h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_C44]']
mov ['ecx,', '30Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_AB96']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_AB9D']
xor ['eax,', 'eax']
jmp ['loc_AFB2']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_21],', 'al']
mov ['[ebp+var_30],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_48]']
jnz ['short', 'loc_AC08']
cmp ['[ebp+var_3C],', '0']
jge ['short', 'loc_ABFD']
xor ['eax,', 'eax']
jmp ['loc_AFB2']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_ABB2']
cmp ['[ebp+var_3C],', '0']
jl ['short', 'loc_AC26']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_48],', '0']
jl ['short', 'loc_AC44']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+30h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_30],', '0']
jle ['loc_ACED']
cmp ['[ebp+var_3C],', '0']
jl ['short', 'loc_AC6F']
movzx ['eax,', '[ebp+var_21]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_AC90']
cmp ['[ebp+var_48],', '0']
jl ['short', 'loc_ACED']
movzx ['eax,', '[ebp+var_21]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_ACED']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+30h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_30],', '0']
jle ['short', 'loc_ACED']
movzx ['eax,', '[ebp+var_21]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_AC90']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_AD8E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
movzx ['ecx,', '[ebp+var_21]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_1DC]']
call ['??0UIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+var_21]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_364]']
call ['??0UIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_364]']
push ['eax']
lea ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_54],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_364]']
call ['??1UIterCollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1DC]']
call ['??1UIterCollationIterator@icu_56@@UAE@XZ']
jmp ['loc_AE1C']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
movzx ['edx,', '[ebp+var_21]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_544]']
call ['??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+var_21]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_724]']
call ['??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_724]']
push ['eax']
lea ['ecx,', '[ebp+var_544]']
push ['ecx']
call ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_54],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_724]']
call ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_544]']
call ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
cmp ['[ebp+var_54],', '0']
jnz ['short', 'loc_AE47']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?getStrength@CollationSettings@icu_56@@QBEHXZ']
cmp ['eax,', '0Fh']
jl ['short', 'loc_AE47']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_AE4F']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_AFB2']
mov ['esi,', 'esp']
push ['3']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['3']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+18h]']
mov ['[ebp+var_730],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AF29']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_754]']
call ['??0UIterNFDIterator@?A0x0469e25c@icu_56@@QAE@AAUUCharIterator@@@Z']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_778]']
call ['??0UIterNFDIterator@?A0x0469e25c@icu_56@@QAE@AAUUCharIterator@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['eax,', '[ebp+var_778]']
push ['eax']
lea ['ecx,', '[ebp+var_754]']
push ['ecx']
mov ['edx,', '[ebp+var_730]']
push ['edx']
call ['?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_C40],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_778]']
call ['??1UIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_754]']
call ['??1UIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_C40]']
jmp ['loc_AFB2']
jmp ['loc_AFB2']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_970]']
call ['??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_B68]']
call ['??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['eax,', '[ebp+var_B68]']
push ['eax']
lea ['ecx,', '[ebp+var_970]']
push ['ecx']
mov ['edx,', '[ebp+var_730]']
push ['edx']
call ['?compareNFDIter@?A0x0469e25c@icu_56@@YA?AW4UCollationResult@@ABVNormalizer2Impl@2@AAVNFDIterator@12@1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_C34],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_B68]']
call ['??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_970]']
call ['??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_C34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN42']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0C44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
dd ['offset', '$LN41']
dd ['offset', '$LN32']
dd ['0FFFFFC9Ch,', '180h']
dd ['offset', '$LN33']
dd ['0FFFFFABCh,', '1D8h']
dd ['offset', '$LN34']
dd ['0FFFFF8DCh,', '1D8h']
dd ['offset', '$LN35']
dd ['0FFFFF8ACh,', '1Ch']
dd ['offset', '$LN36']
dd ['0FFFFF888h,', '1Ch']
dd ['offset', '$LN37']
db ['90h']
db ['0F6h,', '2', 'dup(0FFh)']
dd ['offset', '?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB']
dd ['offset', '$LN38']
dd ['0FFFFF498h,', '1F0h']
dd ['offset', '$LN39']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-1DCh]']
jmp ['??1UIterCollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-364h]']
jmp ['??1UIterCollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$2 proc near
lea ['ecx,', '[ebp-544h]']
jmp ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$3 proc near
lea ['ecx,', '[ebp-724h]']
jmp ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$4 proc near
lea ['ecx,', '[ebp-754h]']
jmp ['??1UIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$5 proc near
lea ['ecx,', '[ebp-778h]']
jmp ['??1UIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$6 proc near
lea ['ecx,', '[ebp-970h]']
jmp ['??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$7 proc near
lea ['ecx,', '[ebp-0B68h]']
jmp ['??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0C48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$5']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$6']
dd ['6']
dd ['offset', '__unwindfunclet$?compare@RuleBasedCollator@icu_56@@UBE?AW4UCollationResult@@AAUUCharIterator@@0AAW4UErrorCode@@@Z$7']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UIterNFDIterator@?A0x0469e25c@icu_56@@QAE@AAUUCharIterator@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0NFDIterator@?A0x0469e25c@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7UIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?nextRawCodePoint@UIterNFDIterator@?A0x0469e25c@icu_56@@MAEHXZ']
assume ['cs:_rdata$r']
public ['??_R4UIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVUIterNFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3UIterNFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUIterNFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UIterNFDIterator@?A0x0469e25c@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UIterNFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UIterNFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UIterNFDIterator@?A0x0469e25c@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3UIterNFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextRawCodePoint@UIterNFDIterator@?A0x0469e25c@icu_56@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uiter_next32_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUIterNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_B309']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0NFDIterator@?A0x0469e25c@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FCDUIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FCDUIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
public ['??_7FCDUIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?nextRawCodePoint@FCDUIterNFDIterator@?A0x0469e25c@icu_56@@MAEHXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z$0']
dd ['offset', '__unwindtable$??0FCDUIterNFDIterator@?A0x0469e25c@icu_56@@QAE@PBUCollationData@2@AAUUCharIterator@@H@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4FCDUIterNFDIterator@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVFCDUIterNFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3FCDUIterNFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFCDUIterNFDIterator@?A0x0469e25c@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FCDUIterNFDIterator@?A0x0469e25c@icu_56@@8']
dd ['4']
dd ['offset', '??_R2FCDUIterNFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FCDUIterNFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFDIterator@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FCDUIterNFDIterator@?A0x0469e25c@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3FCDUIterNFDIterator@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextRawCodePoint@FCDUIterNFDIterator@?A0x0469e25c@icu_56@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '18h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[eax+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4_1']
dd ['offset', '$LN3_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_B5CD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
call ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1FCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@ABVUnicodeString@2@AAV32@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+34h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B7A4']
mov ['ecx,', '[ebp+arg_8]']
call ['?setToBogus@CollationKey@icu_56@@AAEAAV12@XZ']
jmp ['loc_B861']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B7C6']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_B7C6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+arg_8]']
call ['?setToBogus@CollationKey@icu_56@@AAEAAV12@XZ']
jmp ['loc_B861']
mov ['ecx,', '[ebp+arg_8]']
call ['?reset@CollationKey@icu_56@@AAEAAV12@XZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
call ['??0CollationKeyByteSink@icu_56@@QAE@AAVCollationKey@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B818']
mov ['ecx,', '[ebp+arg_8]']
call ['?setToBogus@CollationKey@icu_56@@AAEAAV12@XZ']
jmp ['short', 'loc_B843']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@CollationKey@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B832']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_B843']
lea ['ecx,', '[ebp+var_34]']
call ['?NumberOfBytesAppended@SortKeyByteSink@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?setLength@CollationKey@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_100],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1CollationKeyByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN12_2']
db ['3', 'dup(0FFh)']
dd ['18h']
dd ['offset', '$LN10_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z$0	proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1CollationKeyByteSink@icu_56@@UAE@XZ']
endp
__ehhandler$?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-108h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?getCollationKey@RuleBasedCollator@icu_56@@UBEAAVCollationKey@2@PB_WHAAV32@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@SortKeyByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationKeyByteSink@icu_56@@QAE@AAVCollationKey@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getCapacity@CollationKey@icu_56@@ABEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBytes@CollationKey@icu_56@@AAEPAEXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0SortKeyByteSink@icu_56@@QAE@PADH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CollationKeyByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SortKeyByteSink@icu_56@@QAE@PADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0ByteSink@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SortKeyByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4SortKeyByteSink@icu_56@@6B@']
public ['??_7SortKeyByteSink@icu_56@@6B@']
dd ['offset', '?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z']
dd ['offset', '?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4SortKeyByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVSortKeyByteSink@icu_56@@@8']
dd ['offset', '??_R3SortKeyByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSortKeyByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SortKeyByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_BA95']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSortKey@RuleBasedCollator@icu_56@@UBEHABVUnicodeString@2@PAEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+80h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '110h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_11C]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BB7E']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_BB90']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_BB90']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_BB97']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_BB97']
xor ['eax,', 'eax']
jmp ['loc_BC32']
mov ['[ebp+var_1D],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_BBAE']
lea ['eax,', '[ebp+var_1D]']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+arg_C],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??0FixedSortKeyByteSink@?A0x0469e25c@icu_56@@QAE@PADH@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_48],', '0']
lea ['eax,', '[ebp+var_48]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_BC07']
lea ['ecx,', '[ebp+var_3C]']
call ['?NumberOfBytesAppended@SortKeyByteSink@icu_56@@QBEHXZ']
mov ['[ebp+var_11C],', 'eax']
jmp ['short', 'loc_BC11']
mov ['[ebp+var_11C],', '0']
mov ['edx,', '[ebp+var_11C]']
mov ['[ebp+var_114],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_114]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
dd ['offset', '$LN14_0']
dd ['offset', '$LN10_2']
dd ['0FFFFFFC4h,', '14h']
dd ['offset', '$LN11_2']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN12_3']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z$0	proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__ehhandler$?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-120h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z$0']
dd ['offset', '__unwindtable$?getSortKey@RuleBasedCollator@icu_56@@UBEHPB_WHPAEH@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FixedSortKeyByteSink@?A0x0469e25c@icu_56@@QAE@PADH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0SortKeyByteSink@icu_56@@QAE@PADH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FixedSortKeyByteSink@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '470h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_47C]']
mov ['ecx,', '11Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BDB3']
jmp ['loc_BF2E']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_BDCA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_47C],', 'edx']
jmp ['short', 'loc_BDD4']
mov ['[ebp+var_47C],', '0']
mov ['eax,', '[ebp+var_47C]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_2D],', 'al']
lea ['ecx,', '[ebp+var_3C]']
call ['??0LevelCallback@CollationKeys@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_BE74']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
movzx ['eax,', '[ebp+var_2D]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_1CC]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
lea ['edx,', '[ebp+var_1CC]']
push ['edx']
call ['?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
jmp ['short', 'loc_BEDA']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
movzx ['eax,', '[ebp+var_2D]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_3B4]']
call ['??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
lea ['edx,', '[ebp+var_3B4]']
push ['edx']
call ['?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3B4]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?getStrength@CollationSettings@icu_56@@QBEHXZ']
cmp ['eax,', '0Fh']
jnz ['short', 'loc_BF02']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
mov ['esi,', 'esp']
push ['1']
push ['offset', '?terminator@?N@??writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@3@AAW4UErrorCode@@@Z@4DB']
mov ['eax,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C]']
call ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '47Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN16_1']
dd ['offset', '$LN12_4']
dd ['0FFFFFE34h,', '188h']
dd ['offset', '$LN13_4']
dd ['0FFFFFC4Ch,', '1E0h']
dd ['offset', '$LN14_1']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$0 proc	near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ']
endp
__unwindfunclet$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$1 proc	near
lea ['ecx,', '[ebp-1CCh]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$2 proc	near
lea ['ecx,', '[ebp-3B4h]']
jmp ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-480h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$0']
align ['10h']
align ['8']
dd ['offset', '__unwindfunclet$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$?writeSortKey@RuleBasedCollator@icu_56@@ABEXPB_WHAAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0LevelCallback@CollationKeys@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7LevelCallback@CollationKeys@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4LevelCallback@CollationKeys@icu_56@@6B@']
public ['??_7LevelCallback@CollationKeys@icu_56@@6B@']
dd ['offset', '?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z']
assume ['cs:_rdata$r']
public ['??_R4LevelCallback@CollationKeys@icu_56@@6B@']
dd ['offset', '??_R0?AVLevelCallback@CollationKeys@icu_56@@@8']
dd ['offset', '??_R3LevelCallback@CollationKeys@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVLevelCallback@CollationKeys@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3LevelCallback@CollationKeys@icu_56@@8']
dd ['2']
dd ['offset', '??_R2LevelCallback@CollationKeys@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2LevelCallback@CollationKeys@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3LevelCallback@CollationKeys@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C13D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '13Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['ecx,', '[ecx+18h]']
call ['dword', 'ptr', 'ds:__imp_?decompose@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C1E0']
jmp ['loc_C2F2']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
call ['?Append@SortKeyByteSink@icu_56@@QAEXI@Z']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_C219']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['_u_writeIdenticalLevelRun_56']
add ['esp,', '10h']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C239']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_C22C']
jmp ['loc_C2F2']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_24]']
sar ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_C24F']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C248']
jmp ['loc_C2F2']
mov ['[ebp+var_3C],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_84]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
lea ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+18h]']
call ['dword', 'ptr', 'ds:__imp_?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_84]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_84]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_u_writeIdenticalLevelRun_56']
add ['esp,', '10h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_84]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
dd ['offset', '$LN12_5']
dd ['offset', '$LN10_3']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-84h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Append@SortKeyByteSink@icu_56@@QAEXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_C3F1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_C446']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
jl ['short', 'loc_C425']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C437']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '544h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_550]']
mov ['ecx,', '151h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C4BD']
xor ['eax,', 'eax']
jmp ['loc_C923']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_C4DB']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C4DB']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_C4DB']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_C4EB']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_C4EB']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_C923']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_C4F8']
xor ['eax,', 'eax']
jmp ['loc_C923']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_34]']
call ['??0FixedSortKeyByteSink@?A0x0469e25c@icu_56@@QAE@PADH@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['ecx,', '[ebp+var_34]']
call ['?IgnoreBytes@SortKeyByteSink@icu_56@@QAEXH@Z']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '5']
jg ['loc_C71B']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_49],', 'al']
lea ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C5DE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
movzx ['ecx,', '[ebp+var_49]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_1EC]']
call ['??0UIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
lea ['eax,', '[ebp+var_1EC]']
push ['eax']
call ['?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_1EC]']
call ['??1UIterCollationIterator@icu_56@@UAE@XZ']
jmp ['short', 'loc_C640']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
movzx ['ecx,', '[ebp+var_49]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_3CC]']
call ['??0FCDUIterCollationIterator@icu_56@@QAE@PBUCollationData@1@CAAUUCharIterator@@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
lea ['eax,', '[ebp+var_3CC]']
push ['eax']
call ['?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_3CC]']
call ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C685']
mov ['[ebp+var_54C],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1PartLevelCallback@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_54C]']
jmp ['loc_C923']
lea ['ecx,', '[ebp+var_34]']
call ['?NumberOfBytesAppended@SortKeyByteSink@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_C6DC']
lea ['ecx,', '[ebp+var_64]']
call ['?getLevel@PartLevelCallback@?A0x0469e25c@icu_56@@QBE?AW4Level@Collation@3@XZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_64]']
call ['?getLevelCapacity@PartLevelCallback@?A0x0469e25c@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_540],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1PartLevelCallback@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_540]']
jmp ['loc_C923']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?getStrength@CollationSettings@icu_56@@QBEHXZ']
cmp ['eax,', '0Fh']
jnz ['short', 'loc_C70F']
mov ['[ebp+var_40],', '6']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1PartLevelCallback@?A0x0469e25c@icu_56@@UAE@XZ']
cmp ['[ebp+var_40],', '6']
jnz ['loc_C8AD']
lea ['ecx,', '[ebp+var_34]']
call ['?GetRemainingCapacity@SortKeyByteSink@icu_56@@QBEHXZ']
mov ['[ebp+var_3D8],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_42C],', 'eax']
cmp ['[ebp+var_42C],', '0']
jge ['short', 'loc_C775']
jmp ['short', 'loc_C794']
mov ['esi,', 'esp']
movzx ['eax,', 'word', 'ptr', '[ebp+var_42C]']
push ['eax']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_C74C']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_438],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_438]']
lea ['eax,', '[edx+eax*2]']
push ['eax']
mov ['ecx,', '[ebp+var_438]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?writeIdenticalLevel@RuleBasedCollator@icu_56@@ABEXPB_W0AAVSortKeyByteSink@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C837']
mov ['[ebp+var_534],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_534]']
jmp ['loc_C923']
lea ['ecx,', '[ebp+var_34]']
call ['?NumberOfBytesAppended@SortKeyByteSink@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_C894']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_40]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_3D8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_528],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_528]']
jmp ['loc_C923']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_420]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
lea ['ecx,', '[ebp+var_34]']
call ['?NumberOfBytesAppended@SortKeyByteSink@icu_56@@QBEHXZ']
mov ['[ebp+var_444],', 'eax']
mov ['eax,', '[ebp+var_444]']
mov ['[ebp+var_450],', 'eax']
mov ['eax,', '[ebp+var_450]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_C902']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_450]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_450]']
add ['ecx,', '1']
mov ['[ebp+var_450],', 'ecx']
jmp ['short', 'loc_C8DA']
mov ['eax,', '[ebp+var_444]']
mov ['[ebp+var_51C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_34]']
call ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_51C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '550h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
dd ['offset', '$LN32_0']
db ['3', 'dup(0FFh)']
dd ['14h']
dd ['offset', '$LN26']
dd ['0FFFFFF9Ch,', '10h']
dd ['offset', '$LN27']
dd ['0FFFFFE14h,', '180h']
dd ['offset', '$LN28']
dd ['0FFFFFC34h,', '1D8h']
dd ['offset', '$LN29']
dd ['0FFFFFBE0h,', '40h']
dd ['offset', '$LN30']
db ['0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1FixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1PartLevelCallback@?A0x0469e25c@icu_56@@UAE@XZ']
endp
__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$2 proc near
lea ['ecx,', '[ebp-1ECh]']
jmp ['??1UIterCollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$3 proc near
lea ['ecx,', '[ebp-3CCh]']
jmp ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$4 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-420h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-554h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$2']
dd ['1']
dd ['offset', '__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$3']
align ['8']
dd ['offset', '__unwindfunclet$?internalNextSortKeyPart@RuleBasedCollator@icu_56@@UBEHPAUUCharIterator@@QAIPAEHAAW4UErrorCode@@@Z$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?IgnoreBytes@SortKeyByteSink@icu_56@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?GetRemainingCapacity@SortKeyByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_8]']
sub ['eax,', '[edx+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0LevelCallback@CollationKeys@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PartLevelCallback@?A0x0469e25c@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
call ['?GetRemainingCapacity@SortKeyByteSink@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ']
endp
__ehhandler$??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4PartLevelCallback@?A0x0469e25c@icu_56@@6B@']
public ['??_7PartLevelCallback@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '?needToWrite@PartLevelCallback@?A0x0469e25c@icu_56@@UAECW4Level@Collation@3@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z$0']
dd ['offset', '__unwindtable$??0PartLevelCallback@?A0x0469e25c@icu_56@@QAE@ABVSortKeyByteSink@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4PartLevelCallback@?A0x0469e25c@icu_56@@6B@']
dd ['offset', '??_R0?AVPartLevelCallback@?A0x0469e25c@icu_56@@@8']
dd ['offset', '??_R3PartLevelCallback@?A0x0469e25c@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVPartLevelCallback@?A0x0469e25c@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3PartLevelCallback@?A0x0469e25c@icu_56@@8']
dd ['3']
dd ['offset', '??_R2PartLevelCallback@?A0x0469e25c@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2PartLevelCallback@?A0x0469e25c@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@PartLevelCallback@?A0x0469e25c@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@F@std@@2HB']
dd ['offset', '??_R3PartLevelCallback@?A0x0469e25c@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1PartLevelCallback@?A0x0469e25c@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PartLevelCallback@?A0x0469e25c@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?needToWrite@PartLevelCallback@?A0x0469e25c@icu_56@@UAECW4Level@Collation@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?Overflowed@SortKeyByteSink@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CD0D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?GetRemainingCapacity@SortKeyByteSink@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_CD0F']
jmp ['short', 'loc_CD0F']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@SortKeyByteSink@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLevel@PartLevelCallback@?A0x0469e25c@icu_56@@QBE?AW4Level@Collation@3@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLevelCapacity@PartLevelCallback@?A0x0469e25c@icu_56@@QBEHXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GPartLevelCallback@?A0x0469e25c@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1PartLevelCallback@?A0x0469e25c@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_CE0D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '48Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_498]']
mov ['ecx,', '123h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_CE87']
jmp ['loc_D004']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_24]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
mov ['[ebp+var_39],', 'al']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?dontCheckFCD@CollationSettings@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_CF72']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_1CC]']
call ['??0UTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1CC]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_1DC],', 'eax']
mov ['dword', 'ptr', '[ebp+var_1DC+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_1DC],', '1000100h']
jnz ['short', 'loc_CF35']
cmp ['dword', 'ptr', '[ebp+var_1DC+4],', '1']
jz ['short', 'loc_CF5B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_1DC+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1DC]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector64@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_CF05']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1CC]']
call ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
jmp ['loc_D004']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
movzx ['eax,', '[ebp+var_39]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['ecx,', '[ebp+var_3C4]']
call ['??0FCDUTF16CollationIterator@icu_56@@QAE@PBUCollationData@1@CPB_W11@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_3C4]']
call ['?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_3D4],', 'eax']
mov ['dword', 'ptr', '[ebp+var_3D4+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_3D4],', '1000100h']
jnz ['short', 'loc_CFCC']
cmp ['dword', 'ptr', '[ebp+var_3D4+4],', '1']
jz ['short', 'loc_CFF2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_3D4+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_3D4]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector64@icu_56@@QAEX_JAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_CF9C']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C4]']
call ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '498h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN17_2']
dd ['offset', '$LN14_2']
dd ['0FFFFFC3Ch,', '1E0h']
dd ['offset', '$LN15_3']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-1CCh]']
jmp ['??1UTF16CollationIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-3C4h]']
jmp ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ']
endp
__ehhandler$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-49Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?internalGetCEs@RuleBasedCollator@icu_56@@QBEXABVUnicodeString@2@AAVUVector64@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendSubtag@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DPBDHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_D119']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_D11E']
jmp ['loc_D1B2']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@CharString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_D14F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['5Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_D17C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_D1B2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['_uprv_toupper_56']
add ['esp,', '4']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_D173']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D1FD']
jmp ['short', 'loc_D26C']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@CharString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_D22E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['5Fh']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', 'ds:?valueChars@?7??appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@3@DW4UColAttributeValue@@AAW4UErrorCode@@@Z@4PBDB']
add ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_258]']
mov ['ecx,', '93h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D2E1']
xor ['eax,', 'eax']
jmp ['loc_D802']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_D2F8']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0']
setnz ['al']
mov ['[ebp+var_258],', 'eax']
jmp ['short', 'loc_D307']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_8],', '0']
setl ['cl']
mov ['[ebp+var_258],', 'ecx']
cmp ['[ebp+var_258],', '0']
jz ['short', 'loc_D320']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_D802']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_D337']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['?internalGetLocaleID@RuleBasedCollator@icu_56@@QBEPBDW4ULocDataLocaleType@@AAW4UErrorCode@@@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '??_C@_09FPAMBNKH@collation?$AA@']
push ['9Dh']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_ucol_getFunctionalEquivalent_56']
add ['esp,', '18h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D37C']
xor ['eax,', 'eax']
jmp ['loc_D802']
cmp ['[ebp+var_CC],', '0']
jnz ['short', 'loc_D39B']
push ['offset', '??_C@_04NBFCGMPH@root?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
jmp ['short', 'loc_D3A9']
mov ['eax,', '[ebp+var_CC]']
mov ['[ebp+eax+Dest],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_??0CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
push ['1']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D408']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['41h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['2']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D44B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['43h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['7']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D48E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['7']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['44h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['3']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D4D1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['3']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['45h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['0']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D514']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['46h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+var_178]']
push ['ecx']
push ['offset', '??_C@_09FPAMBNKH@collation?$AA@']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
lea ['edx,', '[ebp+var_178]']
push ['edx']
push ['4Bh']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendSubtag@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DPBDHAAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+var_178]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_uloc_getLanguage_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
lea ['edx,', '[ebp+var_178]']
push ['edx']
push ['4Ch']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendSubtag@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DPBDHAAW4UErrorCode@@@Z']
add ['esp,', '14h']
push ['4']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D5E6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['4Eh']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+var_178]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
lea ['edx,', '[ebp+var_178]']
push ['edx']
push ['52h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendSubtag@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DPBDHAAW4UErrorCode@@@Z']
add ['esp,', '14h']
push ['5']
mov ['ecx,', '[ebp+var_18]']
call ['?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_D66E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['5']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+5Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['53h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendAttribute@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DW4UColAttributeValue@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+var_178]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_uloc_getVariant_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
lea ['edx,', '[ebp+var_178]']
push ['edx']
push ['56h']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendSubtag@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DPBDHAAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+var_178]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_uloc_getScript_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
lea ['edx,', '[ebp+var_178]']
push ['edx']
push ['5Ah']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
call ['?appendSubtag@?A0x0469e25c@icu_56@@YAXAAVCharString@2@DPBDHAAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D73E']
mov ['[ebp+var_250],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_250]']
jmp ['loc_D802']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '[ebp+arg_8]']
jg ['short', 'loc_D7B0']
push ['1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['[ebp+var_244],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_10C]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_244]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '258h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
dd ['offset', '$LN25']
dd ['offset', '$LN21_0']
dd ['0FFFFFEF4h,', '38h']
dd ['offset', '$LN22_0']
dd ['0FFFFFE88h,', '64h']
dd ['offset', '$LN23_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-10Ch]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-25Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_09FPAMBNKH@collation?$AA@']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?internalGetShortDefinitionString@RuleBasedCollator@icu_56@@UBEHPBDPADHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isUnsafe@RuleBasedCollator@icu_56@@ABECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?isNumeric@CollationSettings@icu_56@@QBECXZ']
movzx ['ecx,', 'al']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?computeMaxExpansions@RuleBasedCollator@icu_56@@CAXPBUCollationTailoring@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['?computeMaxExpansions@CollationElementIterator@icu_56@@CAPAUUHashtable@@PBUCollationData@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+144h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initMaxExpansions@RuleBasedCollator@icu_56@@ABECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
push ['offset', '?computeMaxExpansions@RuleBasedCollator@icu_56@@CAXPBUCollationTailoring@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '148h']
push ['ecx']
call ['??$umtx_initOnce@PBUCollationTailoring@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPBUCollationTailoring@0@AAW4UErrorCode@@@Z12@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?initMaxExpansions@RuleBasedCollator@icu_56@@ABECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_DA77']
xor ['eax,', 'eax']
jmp ['loc_DB4D']
mov ['esi,', 'esp']
push ['58h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_DAC0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_110]']
call ['??0CollationElementIterator@icu_56@@AAE@ABVUnicodeString@1@PBVRuleBasedCollator@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_DACA']
mov ['[ebp+var_124],', '0']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_11C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_DB4A']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'ecx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_DB3C']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_DB46']
mov ['[ebp+var_124],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_DB4D']
mov ['eax,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN12_6']
dd ['offset', '$LN10_4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z$0 proc	near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-110h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVUnicodeString@2@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?initMaxExpansions@RuleBasedCollator@icu_56@@ABECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_DC67']
xor ['eax,', 'eax']
jmp ['loc_DD3D']
mov ['esi,', 'esp']
push ['58h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_DCB0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_110]']
call ['??0CollationElementIterator@icu_56@@AAE@ABVCharacterIterator@1@PBVRuleBasedCollator@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_DCBA']
mov ['[ebp+var_124],', '0']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_11C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_DD3A']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'ecx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_DD2C']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_DD36']
mov ['[ebp+var_124],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_DD3D']
mov ['eax,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN12_7']
dd ['offset', '$LN10_5']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-110h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z$0']
dd ['offset', '__unwindtable$?createCollationElementIterator@RuleBasedCollator@icu_56@@UBEPAVCollationElementIterator@2@ABVCharacterIterator@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaxExpansion@RuleBasedCollator@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?initMaxExpansions@RuleBasedCollator@icu_56@@ABECAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+144h]']
push ['eax']
call ['?getMaxExpansion@CollationElementIterator@icu_56@@CAHPBUUHashtable@@H@Z']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN4_2']
dd ['offset', '$LN3_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_E04E']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_E058']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?orphan@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAEPAUCollationTailoring@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@PAVUnicodeSet@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QAE@PAVUnicodeSet@1@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_E286']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_E290']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??D?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QBEAAVUnicodeSet@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QAE@PAVUnicodeSet@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VUnicodeSet@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$clearPtr@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAXAAPBUCollationSettings@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_E44F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
call ['dword', 'ptr', 'ds:__imp_?removeRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$clearPtr@UCollationCacheEntry@icu_56@@@SharedObject@icu_56@@SAXAAPBUCollationCacheEntry@1@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_E4A7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
call ['dword', 'ptr', 'ds:__imp_?removeRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$copyPtr@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAXPBUCollationSettings@1@AAPBU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax]']
jz ['short', 'loc_E520']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_E500']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
call ['dword', 'ptr', 'ds:__imp_?removeRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E520']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$copyPtr@UCollationCacheEntry@icu_56@@@SharedObject@icu_56@@SAXPBUCollationCacheEntry@1@AAPBU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax]']
jz ['short', 'loc_E598']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_E578']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
call ['dword', 'ptr', 'ds:__imp_?removeRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E598']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?getRefCount@SharedObject@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '1']
jg ['short', 'loc_E610']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_E6B3']
mov ['esi,', 'esp']
push ['33Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_E654']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
call ['??0CollationSettings@icu_56@@QAE@ABU01@@Z']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_E65E']
mov ['[ebp+var_100],', '0']
mov ['ecx,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_E684']
xor ['eax,', 'eax']
jmp ['short', 'loc_E6B3']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?removeRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_20]']
call ['dword', 'ptr', 'ds:__imp_?addRef@SharedObject@icu_56@@QBEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z$0']
dd ['offset', '__unwindtable$??$copyOnWrite@UCollationSettings@icu_56@@@SharedObject@icu_56@@SAPAUCollationSettings@1@AAPBU21@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$umtx_initOnce@PBUCollationTailoring@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPBUCollationTailoring@0@AAW4UErrorCode@@@Z12@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E770']
jmp ['loc_E7F9']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_E7D8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_E7D8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_E7F9']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E7F9']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeSet@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['?visible@CollatorFactory@icu_56@@UBECXZ:near']
extrn ['__purecall:near']
extrn ['?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z:near']
extrn ['__imp_??0UObject@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1CollatorFactory@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['??8CollationKey@icu_56@@QBECABV01@@Z:near']
extrn ['___RTDynamicCast:near']
extrn ['__allshl:near']
extrn ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:near']
extrn ['?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:near']
extrn ['__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??8CollationIterator@icu_56@@UBECABV01@@Z:near']
extrn ['?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?foundNULTerminator@CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ:near']
extrn ['?getDataCE32@CollationIterator@icu_56@@MBEIH@Z:near']
extrn ['?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z:near']
extrn ['?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z:near']
extrn ['??1CollationIterator@icu_56@@UAE@XZ:near']
extrn ['__imp_??0SharedObject@icu_56@@QAE@XZ:near']
extrn ['??8CollationSettings@icu_56@@QBECABU01@@Z:near']
extrn ['?reorderEx@CollationSettings@icu_56@@ABEII@Z:near']
extrn ['__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??1CollationSettings@icu_56@@UAE@XZ:near']
extrn ['__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['?resetToOffset@UIterCollationIterator@icu_56@@UAEXH@Z:near']
extrn ['?getOffset@UIterCollationIterator@icu_56@@UBEHXZ:near']
extrn ['?nextCodePoint@UIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?previousCodePoint@UIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?handleNextCE32@UIterCollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@UIterCollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?forwardNumCodePoints@UIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?backwardNumCodePoints@UIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['??0CollationIterator@icu_56@@IAE@ABV01@@Z:near']
extrn ['??1UIterCollationIterator@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['?resetToOffset@FCDUIterCollationIterator@icu_56@@UAEXH@Z:near']
extrn ['?getOffset@FCDUIterCollationIterator@icu_56@@UBEHXZ:near']
extrn ['?nextCodePoint@FCDUIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?previousCodePoint@FCDUIterCollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?handleNextCE32@FCDUIterCollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@FCDUIterCollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?forwardNumCodePoints@FCDUIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?backwardNumCodePoints@FCDUIterCollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['??1FCDUIterCollationIterator@icu_56@@UAE@XZ:near']
extrn ['??8UTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z:near']
extrn ['?resetToOffset@UTF16CollationIterator@icu_56@@UAEXH@Z:near']
extrn ['?getOffset@UTF16CollationIterator@icu_56@@UBEHXZ:near']
extrn ['?nextCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?previousCodePoint@UTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?handleNextCE32@UTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@UTF16CollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?foundNULTerminator@UTF16CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?backwardNumCodePoints@UTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?reset@CollationIterator@icu_56@@IAEXXZ:near']
extrn ['??1UTF16CollationIterator@icu_56@@UAE@XZ:near']
extrn ['??8FCDUTF16CollationIterator@icu_56@@UBECABVCollationIterator@1@@Z:near']
extrn ['?resetToOffset@FCDUTF16CollationIterator@icu_56@@UAEXH@Z:near']
extrn ['?getOffset@FCDUTF16CollationIterator@icu_56@@UBEHXZ:near']
extrn ['?nextCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?previousCodePoint@FCDUTF16CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?handleNextCE32@FCDUTF16CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?foundNULTerminator@FCDUTF16CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?backwardNumCodePoints@FCDUTF16CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['??1FCDUTF16CollationIterator@icu_56@@UAE@XZ:near']
extrn ['?resetToOffset@UTF8CollationIterator@icu_56@@UAEXH@Z:near']
extrn ['?getOffset@UTF8CollationIterator@icu_56@@UBEHXZ:near']
extrn ['?nextCodePoint@UTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?previousCodePoint@UTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?handleNextCE32@UTF8CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?foundNULTerminator@UTF8CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forbidSurrogateCodePoints@UTF8CollationIterator@icu_56@@MBECXZ:near']
extrn ['?forwardNumCodePoints@UTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?backwardNumCodePoints@UTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['??1UTF8CollationIterator@icu_56@@UAE@XZ:near']
extrn ['?resetToOffset@FCDUTF8CollationIterator@icu_56@@UAEXH@Z:near']
extrn ['?getOffset@FCDUTF8CollationIterator@icu_56@@UBEHXZ:near']
extrn ['?nextCodePoint@FCDUTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?previousCodePoint@FCDUTF8CollationIterator@icu_56@@UAEHAAW4UErrorCode@@@Z:near']
extrn ['?handleNextCE32@FCDUTF8CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:near']
extrn ['?handleGetTrailSurrogate@FCDUTF8CollationIterator@icu_56@@MAE_WXZ:near']
extrn ['?foundNULTerminator@FCDUTF8CollationIterator@icu_56@@MAECXZ:near']
extrn ['?forwardNumCodePoints@FCDUTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['?backwardNumCodePoints@FCDUTF8CollationIterator@icu_56@@MAEXHAAW4UErrorCode@@@Z:near']
extrn ['??1FCDUTF8CollationIterator@icu_56@@UAE@XZ:near']
extrn ['??1SortKeyByteSink@icu_56@@UAE@XZ:near']
extrn ['??_GFixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EFixedSortKeyByteSink@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z:near']
extrn ['?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['??_GCollationKeyByteSink@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECollationKeyByteSink@icu_56@@UAEPAXI@Z:near']
extrn ['?reallocate@CollationKey@icu_56@@AAEPAEHH@Z:near']
extrn ['__imp_??1Locale@icu_56@@UAE@XZ:near']
extrn ['??1Collator@icu_56@@UAE@XZ:near']
extrn ['__imp_?addRef@SharedObject@icu_56@@QBEXXZ:near']
extrn ['__imp_??0Locale@icu_56@@QAE@ABV01@@Z:near']
extrn ['??0Collator@icu_56@@IAE@ABV01@@Z:near']
extrn ['??9Collator@icu_56@@UBECABV01@@Z:near']
extrn ['?compare@Collator@icu_56@@UBE?AW4EComparisonResult@12@PB_WH0H@Z:near']
extrn ['?compare@Collator@icu_56@@UBE?AW4EComparisonResult@12@ABVUnicodeString@2@0H@Z:near']
extrn ['?compare@Collator@icu_56@@UBE?AW4EComparisonResult@12@ABVUnicodeString@2@0@Z:near']
extrn ['?getStrength@Collator@icu_56@@UBE?AW4ECollationStrength@12@XZ:near']
extrn ['?setStrength@Collator@icu_56@@UAEXW4ECollationStrength@12@@Z:near']
extrn ['?safeClone@Collator@icu_56@@UBEPAV12@XZ:near']
extrn ['__imp_?setToBogus@Locale@icu_56@@QAEXXZ:near']
extrn ['?read@CollationDataReader@icu_56@@SAXPBUCollationTailoring@2@PBEHAAU32@AAW4UErrorCode@@@Z:near']
extrn ['??0CollationTailoring@icu_56@@QAE@PBUCollationSettings@1@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['?getRoot@CollationRoot@icu_56@@SAPBUCollationTailoring@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0Locale@icu_56@@QAE@PBD000@Z:near']
extrn ['??0Collator@icu_56@@IAE@XZ:near']
extrn ['__imp___wassert:near']
extrn ['__imp_?deleteIfZeroRefCount@SharedObject@icu_56@@QBEXXZ:near']
extrn ['__imp_??1SharedObject@icu_56@@UAE@XZ:near']
extrn ['??_GCollationCacheEntry@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECollationCacheEntry@icu_56@@UAEPAXI@Z:near']
extrn ['??1CollationCacheEntry@icu_56@@UAE@XZ:near']
extrn ['__imp_??9UnicodeSet@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:near']
extrn ['??8Collator@icu_56@@UBECABV01@@Z:near']
extrn ['__imp_??1UnicodeSetIterator@icu_56@@UAE@XZ:near']
extrn ['__imp_?getCodepoint@UnicodeSetIterator@icu_56@@QBEHXZ:near']
extrn ['__imp_?isString@UnicodeSetIterator@icu_56@@QBECXZ:near']
extrn ['__imp_?next@UnicodeSetIterator@icu_56@@QAECXZ:near']
extrn ['__imp_??0UnicodeSetIterator@icu_56@@QAE@ABVUnicodeSet@1@@Z:near']
extrn ['?hashCode@CollationSettings@icu_56@@QBEHXZ:near']
extrn ['__imp_??8Locale@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_?getRoot@Locale@icu_56@@SAABV12@XZ:near']
extrn ['__imp_?getName@Locale@icu_56@@QBEPBDXZ:near']
extrn ['__imp_?isBogus@Locale@icu_56@@QBECXZ:near']
extrn ['__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['?appendRootRules@CollationLoader@icu_56@@SAXAAVUnicodeString@2@@Z:near']
extrn ['__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near']
extrn ['?forData@TailoredSet@icu_56@@QAEXPBUCollationData@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['??_GUnicodeSet@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUnicodeSet@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:near']
extrn ['?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECH@Z:near']
extrn ['??8UnicodeSet@icu_56@@UBECABV01@@Z:near']
extrn ['?hashCode@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?size@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?isEmpty@UnicodeSet@icu_56@@UBECXZ:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECHH@Z:near']
extrn ['?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:near']
extrn ['?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near']
extrn ['?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:near']
extrn ['?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:near']
extrn ['__imp_??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?forData@ContractionsAndExpansions@icu_56@@QAEXPBUCollationData@2@AAW4UErrorCode@@@Z:near']
extrn ['?forCodePoint@ContractionsAndExpansions@icu_56@@QAEXPBUCollationData@2@HAAW4UErrorCode@@@Z:near']
extrn ['?setStrength@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z:near']
extrn ['?setCaseFirst@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z:near']
extrn ['?setAlternateHandling@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z:near']
extrn ['?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z:near']
extrn ['?setMaxVariable@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z:near']
extrn ['?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['__allshr:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['?getGroupForPrimary@CollationData@icu_56@@QBEHI@Z:near']
extrn ['?setReordering@CollationSettings@icu_56@@QAEXABUCollationData@2@PBHHAAW4UErrorCode@@@Z:near']
extrn ['?copyReorderingFrom@CollationSettings@icu_56@@QAEXABU12@AAW4UErrorCode@@@Z:near']
extrn ['_memcmp:near']
extrn ['?getOptions@CollationFastLatin@icu_56@@SAHPBUCollationData@2@ABUCollationSettings@2@PAGH@Z:near']
extrn ['__imp_?length@StringPiece@icu_56@@QBEHXZ:near']
extrn ['__imp_?empty@StringPiece@icu_56@@QBECXZ:near']
extrn ['__imp_?data@StringPiece@icu_56@@QBEPBDXZ:near']
extrn ['_strlen:near']
extrn ['__imp_?getDecomposition@Normalizer2Impl@icu_56@@QBEPB_WHQA_WAAH@Z:near']
extrn ['?compareUpToQuaternary@CollationCompare@icu_56@@SA?AW4UCollationResult@@AAVCollationIterator@2@0ABUCollationSettings@2@AAW4UErrorCode@@@Z:near']
extrn ['?compareUTF16@CollationFastLatin@icu_56@@SAHPBG0HPB_WH1H@Z:near']
extrn ['??_GUTF16NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUTF16NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['??_GNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ENFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['__imp_??1ReorderingBuffer@icu_56@@QAE@XZ:near']
extrn ['__imp_?init@ReorderingBuffer@icu_56@@QAECHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:near']
extrn ['__imp_?makeFCD@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z:near']
extrn ['??_GFCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EFCDUTF16NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['?compareUTF8@CollationFastLatin@icu_56@@SAHPBG0HPBEH1H@Z:near']
extrn ['_utf8_prevCharSafeBody_56:near']
extrn ['_utf8_nextCharSafeBody_56:near']
extrn ['??_GUTF8NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUTF8NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['??_GFCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EFCDUTF8NFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['??_GUIterNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUIterNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['_uiter_next32_56:near']
extrn ['??_GFCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EFCDUIterNFDIterator@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['?setLength@CollationKey@icu_56@@AAEXH@Z:near']
extrn ['?reset@CollationKey@icu_56@@AAEAAV12@XZ:near']
extrn ['?setToBogus@CollationKey@icu_56@@AAEAAV12@XZ:near']
extrn ['__imp_??0ByteSink@icu_56@@QAE@XZ:near']
extrn ['??_GSortKeyByteSink@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ESortKeyByteSink@icu_56@@UAEPAXI@Z:near']
extrn ['??1LevelCallback@CollationKeys@icu_56@@UAE@XZ:near']
extrn ['?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z:near']
extrn ['??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ELevelCallback@CollationKeys@icu_56@@UAEPAXI@Z:near']
extrn ['?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z:near']
extrn ['__imp_?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z:near']
extrn ['_u_writeIdenticalLevelRun_56:near']
extrn ['__imp_?decompose@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['??_GPartLevelCallback@?A0x0469e25c@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EPartLevelCallback@?A0x0469e25c@icu_56@@UAEPAXI@Z:near']
extrn ['__imp_?addElement@UVector64@icu_56@@QAEX_JAAW4UErrorCode@@@Z:near']
extrn ['_uprv_toupper_56:near']
extrn ['__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z:near']
extrn ['__imp_?isEmpty@CharString@icu_56@@QBECXZ:near']
extrn ['_u_terminateChars_56:near']
extrn ['__imp_?data@CharString@icu_56@@QAEPADXZ:near']
extrn ['__imp_?length@CharString@icu_56@@QBEHXZ:near']
extrn ['__imp_??1CharString@icu_56@@QAE@XZ:near']
extrn ['_uloc_getScript_56:near']
extrn ['_uloc_getVariant_56:near']
extrn ['_uloc_getCountry_56:near']
extrn ['_uloc_getLanguage_56:near']
extrn ['_uloc_getKeywordValue_56:near']
extrn ['__imp_??0CharString@icu_56@@QAE@XZ:near']
extrn ['_strcpy:near']
extrn ['_ucol_getFunctionalEquivalent_56:near']
extrn ['?computeMaxExpansions@CollationElementIterator@icu_56@@CAPAUUHashtable@@PBUCollationData@2@AAW4UErrorCode@@@Z:near']
extrn ['??0CollationElementIterator@icu_56@@AAE@ABVUnicodeString@1@PBVRuleBasedCollator@1@AAW4UErrorCode@@@Z:near']
extrn ['??0CollationElementIterator@icu_56@@AAE@ABVCharacterIterator@1@PBVRuleBasedCollator@1@AAW4UErrorCode@@@Z:near']
extrn ['?getMaxExpansion@CollationElementIterator@icu_56@@CAHPBUUHashtable@@H@Z:near']
extrn ['__imp_?removeRef@SharedObject@icu_56@@QBEXXZ:near']
extrn ['??0CollationSettings@icu_56@@QAE@ABU01@@Z:near']
extrn ['__imp_?getRefCount@SharedObject@icu_56@@QBEHXZ:near']
extrn ['__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
end

endp
??2@YAPAXI@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeReplacer@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeReplacer@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeReplacer@icu_56@@6B@']
public ['??_7UnicodeReplacer@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeReplacer@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeReplacer@icu_56@@@8']
dd ['offset', '??_R3UnicodeReplacer@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeReplacer@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeReplacer@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeReplacer@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeReplacer@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeReplacer@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeReplacer@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeReplacer@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2D7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_351']
push ['offset', '??1UnicodeReplacer@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_349']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_370']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeReplacer@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_36D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_V@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '13Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TransliterationRule@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_28]']
mov ['[eax+68h],', 'ecx']
mov ['eax,', '[ebp+arg_2C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_450']
jmp ['loc_858']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_462']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
jmp ['short', 'loc_490']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', 'eax']
jle ['short', 'loc_487']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_858']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+5Ch],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_4B6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
sub ['eax,', '[ecx+5Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+60h],', 'eax']
jmp ['short', 'loc_4F5']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[eax+5Ch]']
jl ['short', 'loc_4D8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_8],', 'eax']
jle ['short', 'loc_4E6']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_858']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[eax+5Ch]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+60h],', 'ecx']
cmp ['[ebp+arg_10],', '0']
jge ['short', 'loc_512']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+arg_10],', 'eax']
jmp ['short', 'loc_537']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_10],', 'eax']
jle ['short', 'loc_537']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_858']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_18]']
mov ['[eax+54h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[eax+58h],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+64h],', '0']
movsx ['eax,', '[ebp+arg_20]']
test ['eax,', 'eax']
jz ['short', 'loc_581']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+64h],', 'cl']
movsx ['eax,', '[ebp+arg_24]']
test ['eax,', 'eax']
jz ['short', 'loc_599']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
or ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+64h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+5Ch],', '0']
jle ['loc_640']
mov ['esi,', 'esp']
push ['5Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_134],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_603']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+5Ch]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
push ['ecx']
mov ['ecx,', '[ebp+var_134]']
call ['??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_60D']
mov ['[ebp+var_148],', '0']
mov ['edx,', '[ebp+var_148]']
mov ['[ebp+var_140],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_140]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_640']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_858']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+60h],', '0']
jle ['loc_6F2']
mov ['esi,', 'esp']
push ['5Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_6B5']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+5Ch]']
mov ['ecx,', '[ebp+var_14]']
add ['eax,', '[ecx+60h]']
push ['eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+5Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
push ['ecx']
mov ['ecx,', '[ebp+var_11C]']
call ['??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_6BF']
mov ['[ebp+var_148],', '0']
mov ['edx,', '[ebp+var_148]']
mov ['[ebp+var_128],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_128]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_6F2']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_858']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
sub ['eax,', '[ecx+60h]']
mov ['edx,', '[ebp+var_14]']
sub ['eax,', '[edx+5Ch]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
cmp ['[ebp+var_20],', '0']
jle ['loc_7D4']
mov ['esi,', 'esp']
push ['5Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_104],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_797']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+5Ch]']
mov ['ecx,', '[ebp+var_14]']
add ['eax,', '[ecx+60h]']
push ['eax']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '14h']
push ['edx']
mov ['ecx,', '[ebp+var_104]']
call ['??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_7A1']
mov ['[ebp+var_148],', '0']
mov ['eax,', '[ebp+var_148]']
mov ['[ebp+var_110],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_110]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_7D4']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_858']
mov ['esi,', 'esp']
push ['54h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_820']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
call ['??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_82A']
mov ['[ebp+var_148],', '0']
mov ['ecx,', '[ebp+var_148]']
mov ['[ebp+var_F8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_F8]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_858']
mov ['eax,', '[ebp+arg_2C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['30h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-134h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-11Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$4 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4TransliterationRule@icu_56@@6B@']
public ['??_7TransliterationRule@icu_56@@6B@']
dd ['offset', '?getContextLength@TransliterationRule@icu_56@@UBEHXZ']
dd ['offset', '?masks@TransliterationRule@icu_56@@UBECABV12@@Z']
dd ['offset', '?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$1']
align ['8']
dd ['offset', '__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$2']
align ['10h']
dd ['offset', '__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$3']
align ['8']
dd ['offset', '__unwindfunclet$??0TransliterationRule@icu_56@@QAE@ABVUnicodeString@1@HH0HHPAPAVUnicodeFunctor@1@HCCPBVTransliterationRuleData@1@AAW4UErrorCode@@@Z$4']
assume ['cs:_rdata$r']
public ['??_R4TransliterationRule@icu_56@@6B@']
dd ['offset', '??_R0?AVTransliterationRule@icu_56@@@8']
dd ['offset', '??_R3TransliterationRule@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVTransliterationRule@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3TransliterationRule@icu_56@@8']
dd ['2']
dd ['offset', '??_R2TransliterationRule@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2TransliterationRule@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TransliterationRule@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3TransliterationRule@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GTransliterationRule@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1TransliterationRule@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AD9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TransliterationRule@icu_56@@QAE@AAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TransliterationRule@icu_56@@QAE@AAV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B4A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_B54']
mov ['[ebp+var_DC],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TransliterationRule@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax+5Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+60h]']
mov ['[eax+60h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+64h]']
mov ['[eax+64h],', 'dl']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '0']
jle ['short', 'loc_C34']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+54h],', 'eax']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_C61']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_C8E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_CBB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0TransliterationRule@icu_56@@QAE@AAV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0TransliterationRule@icu_56@@QAE@AAV01@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TransliterationRule@icu_56@@QAE@AAV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0TransliterationRule@icu_56@@QAE@AAV01@@Z$0']
dd ['offset', '__unwindtable$??0TransliterationRule@icu_56@@QAE@AAV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1TransliterationRule@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TransliterationRule@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TransliterationRule@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_128],', 'ecx']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_134],', 'edx']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_E13']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_134]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_134]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_E1D']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'edx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_E63']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_E6D']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_EB3']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_104]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_EBD']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_F03']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_F0D']
mov ['[ebp+var_13C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1TransliterationRule@icu_56@@UAE@XZ$0	proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1TransliterationRule@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-140h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TransliterationRule@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1TransliterationRule@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1TransliterationRule@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getContextLength@TransliterationRule@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[eax+64h]']
and ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+5Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIndexValue@TransliterationRule@icu_56@@QBEFXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ecx+5Ch],', 'eax']
jnz ['short', 'loc_102D']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_1081']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+68h]']
call ['?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_1070']
mov ['edx,', '[ebp+var_14]']
and ['edx,', '0FFh']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_107A']
mov ['[ebp+var_DC],', '0FFFFFFFFh']
mov ['ax,', 'word', 'ptr', '[ebp+var_DC]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matchesIndexValue@TransliterationRule@icu_56@@QBECE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E0]']
mov ['ecx,', '38h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_10D2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_10DE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_DC],', 'ecx']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_10F8']
mov ['edx,', '[ebp+var_DC]']
add ['edx,', '4']
mov ['[ebp+var_E0],', 'edx']
jmp ['short', 'loc_1102']
mov ['[ebp+var_E0],', '0']
mov ['eax,', '[ebp+var_E0]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1137']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_1141']
mov ['[ebp+var_DC],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_DC]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?masks@TransliterationRule@icu_56@@UBECABV12@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+5Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_127C']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnz ['short', 'loc_127C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+60h]']
cmp ['edx,', '[ecx+60h]']
jg ['short', 'loc_127C']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_127C']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+64h]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_126D']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+64h]']
and ['edx,', '1']
jnz ['short', 'loc_124C']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
and ['ecx,', '2']
jz ['short', 'loc_126D']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+64h]']
and ['eax,', '1']
jz ['short', 'loc_1264']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+64h]']
and ['edx,', '2']
jnz ['short', 'loc_126D']
mov ['[ebp+var_115],', '0']
jmp ['short', 'loc_1274']
mov ['[ebp+var_115],', '1']
mov ['al,', '[ebp+var_115]']
jmp ['short', 'loc_12BE']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jg ['short', 'loc_12B1']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_44]']
jl ['short', 'loc_12A2']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_44]']
jnz ['short', 'loc_12B1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+60h]']
cmp ['edx,', '[ecx+60h]']
jg ['short', 'loc_12B1']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_12B1']
mov ['[ebp+var_115],', '1']
jmp ['short', 'loc_12B8']
mov ['[ebp+var_115],', '0']
mov ['al,', '[ebp+var_115]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matchAndReplace@TransliterationRule@icu_56@@QBE?AW4UMatchDegree@2@AAVReplaceable@2@AAUUTransPosition@@C@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '13Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+54h],', '0']
jz ['short', 'loc_1330']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1312']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+58h]']
jge ['short', 'loc_1330']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+edx*4]']
call ['?resetMatch@StringMatcher@icu_56@@QAEXXZ']
jmp ['short', 'loc_1309']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?posBefore@icu_56@@YAHABVReplaceable@1@H@Z']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?posBefore@icu_56@@YAHABVReplaceable@1@H@Z']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_13A4']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
add ['eax,', '4']
mov ['edx,', '[ecx+4]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_13A4']
xor ['eax,', 'eax']
jmp ['loc_1590']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?posAfter@icu_56@@YAHABVReplaceable@1@H@Z']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
and ['ecx,', '1']
jz ['short', 'loc_13D2']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_44]']
jz ['short', 'loc_13D2']
xor ['eax,', 'eax']
jmp ['loc_1590']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_1429']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+8]']
add ['ecx,', '4']
mov ['edx,', '[eax+4]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_1429']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_1590']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_149A']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_1455']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_1455']
mov ['eax,', '1']
jmp ['loc_1590']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+0Ch]']
add ['ecx,', '4']
mov ['edx,', '[eax+4]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_149A']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_1590']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
and ['ecx,', '2']
jz ['short', 'loc_14CA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_14B8']
xor ['eax,', 'eax']
jmp ['loc_1590']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_14CA']
mov ['eax,', '1']
jmp ['loc_1590']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_13C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_13C]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_68]']
sub ['edx,', 'ecx']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_74]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_uprv_max_56']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '2']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN20']
dd ['offset', '$LN18']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?posBefore@icu_56@@YAHABVReplaceable@1@H@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_1640']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?char32At@Replaceable@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '0FFFFh']
cmp ['ecx,', 'eax']
sbb ['edx,', 'edx']
neg ['edx']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', 'edx']
mov ['[ebp+var_C4],', 'eax']
jmp ['short', 'loc_164C']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?posAfter@icu_56@@YAHABVReplaceable@1@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_16D2']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@Replaceable@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', 'eax']
jge ['short', 'loc_16D2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?char32At@Replaceable@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '0FFFFh']
cmp ['ecx,', 'eax']
sbb ['edx,', 'edx']
neg ['edx']
add ['edx,', '1']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'edx']
jmp ['short', 'loc_16DE']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+var_C4],', 'eax']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1C8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1D4]']
mov ['ecx,', '72h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_178A']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jnz ['short', 'loc_178A']
mov ['[ebp+var_1CD],', '0']
jmp ['short', 'loc_1791']
mov ['[ebp+var_1CD],', '1']
mov ['dl,', '[ebp+var_1CD]']
mov ['[ebp+var_B1],', 'dl']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
and ['ecx,', '1']
jz ['short', 'loc_17BD']
mov ['esi,', 'esp']
push ['5Eh']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['[ebp-1D0h],', 'ecx']
cmp ['dword', 'ptr', '[ebp-1D0h],', '0']
jz ['short', 'loc_17E3']
mov ['edx,', '[ebp-1D0h]']
add ['edx,', '4']
mov ['[ebp+var_1D4],', 'edx']
jmp ['short', 'loc_17ED']
mov ['[ebp+var_1D4],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_1D4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@PBVUnicodeMatcher@2@C0@Z']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_B1]']
test ['eax,', 'eax']
jz ['short', 'loc_1847']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['1']
push ['7Bh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['[ebp-1D0h],', 'ecx']
cmp ['dword', 'ptr', '[ebp-1D0h],', '0']
jz ['short', 'loc_186D']
mov ['edx,', '[ebp-1D0h]']
add ['edx,', '4']
mov ['[ebp+var_1D4],', 'edx']
jmp ['short', 'loc_1877']
mov ['[ebp+var_1D4],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_1D4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@PBVUnicodeMatcher@2@C0@Z']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_B1]']
test ['eax,', 'eax']
jz ['short', 'loc_18D1']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['1']
push ['7Dh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp-1D0h],', 'ecx']
cmp ['dword', 'ptr', '[ebp-1D0h],', '0']
jz ['short', 'loc_18F7']
mov ['edx,', '[ebp-1D0h]']
add ['edx,', '4']
mov ['[ebp+var_1D4],', 'edx']
jmp ['short', 'loc_1901']
mov ['[ebp+var_1D4],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_1D4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@PBVUnicodeMatcher@2@C0@Z']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+64h]']
and ['ecx,', '2']
jz ['short', 'loc_194A']
mov ['esi,', 'esp']
push ['24h']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['1']
mov ['edi,', 'esp']
push ['3']
push ['offset', '_FORWARD_OP']
push ['1']
lea ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp-1D0h],', 'eax']
mov ['edx,', '[ebp-1D0h]']
mov ['[ebp+var_1D4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_1D4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp-1D0h],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
movzx ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', 'unk_1']
mov ['edi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp-1D0h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp-1D0h]']
mov ['edx,', '[eax+8]']
call ['edx']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['1']
push ['3Bh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_1C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1C8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN21_0']
dd ['offset', '$LN18_0']
dd ['0FFFFFF58h,', '40h']
dd ['offset', '$LN19_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0A8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1BCh]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1D8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$2']
dd ['offset', '__unwindtable$?toRule@TransliterationRule@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setData@TransliterationRule@icu_56@@QAEXPBVTransliterationRuleData@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+68h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_1BF9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_1C22']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_1C4B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addSourceSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+5Ch]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+60h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+5Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['loc_1D4B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_2C]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+68h]']
call ['?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_1D2C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1D46']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_38]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_1CBF']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addTargetSetTo@TransliterationRule@icu_56@@QBEXAAVUnicodeSet@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D0],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_D0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['__purecall:near']
extrn ['??1UnicodeReplacer@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z:near']
extrn ['??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_GTransliterationRule@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ETransliterationRule@icu_56@@UAEPAXI@Z:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['_uprv_free_56:near']
extrn ['?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z:near']
extrn ['__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z:near']
extrn ['_uprv_max_56:near']
extrn ['_uprv_min_56:near']
extrn ['?resetMatch@StringMatcher@icu_56@@QAEXXZ:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp_?char32At@Replaceable@icu_56@@QBEHH@Z:near']
extrn ['__imp_?length@Replaceable@icu_56@@QBEHXZ:near']
extrn ['__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z:near']
extrn ['__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@PBVUnicodeMatcher@2@C0@Z:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near']
end

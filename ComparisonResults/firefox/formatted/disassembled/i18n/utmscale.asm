endp
_utmscale_getTimeScaleValue_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_39C']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3A2']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['short', 'loc_3E0']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_3BA']
cmp ['[ebp+arg_0],', '0Ah']
jge ['short', 'loc_3BA']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_3BA']
cmp ['[ebp+arg_4],', '0Bh']
jl ['short', 'loc_3C9']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['short', 'loc_3E0']
mov ['ecx,', '[ebp+arg_0]']
imul ['ecx,', '58h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '_timeScaleTable[ecx+edx*8]']
mov ['edx,', 'dword_4[ecx+edx*8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utmscale_fromInt64_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_41C']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_425']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_4CE']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_431']
cmp ['[ebp+arg_8],', '0Ah']
jl ['short', 'loc_443']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_4CE']
mov ['eax,', '[ebp+arg_8]']
imul ['eax,', '58h']
add ['eax,', 'offset', '_timeScaleTable']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+14h]']
jl ['short', 'loc_49F']
jg ['short', 'loc_478']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_49F']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+1Ch]']
jl ['short', 'loc_4AE']
jg ['short', 'loc_49F']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+18h]']
jbe ['short', 'loc_4AE']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['short', 'loc_4CE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
adc ['edx,', '[eax+0Ch]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+4]']
push ['esi']
mov ['eax,', '[eax]']
push ['eax']
push ['edx']
push ['ecx']
call ['__allmul']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utmscale_toInt64_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_510']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_519']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_6B6']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_525']
cmp ['[ebp+arg_8],', '0Ah']
jl ['short', 'loc_537']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_6B6']
mov ['eax,', '[ebp+arg_8]']
imul ['eax,', '58h']
add ['eax,', 'offset', '_timeScaleTable']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+24h]']
jl ['short', 'loc_593']
jg ['short', 'loc_56C']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+20h]']
jb ['short', 'loc_593']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+2Ch]']
jl ['short', 'loc_5A5']
jg ['short', 'loc_593']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+28h]']
jbe ['short', 'loc_5A5']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_6B6']
cmp ['[ebp+arg_4],', '0']
jg ['loc_63B']
jl ['short', 'loc_5BB']
cmp ['[ebp+arg_0],', '0']
jnb ['loc_63B']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+4Ch]']
jg ['short', 'loc_610']
jl ['short', 'loc_5E2']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+48h]']
jnb ['short', 'loc_610']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+40h]']
mov ['edx,', '[ebp+arg_4]']
adc ['edx,', '[eax+44h]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+4]']
push ['esi']
mov ['eax,', '[eax]']
push ['eax']
push ['edx']
push ['ecx']
call ['__alldiv']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+30h]']
sbb ['edx,', '[ecx+34h]']
jmp ['loc_6B6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[eax+40h]']
mov ['edx,', '[ebp+arg_4]']
sbb ['edx,', '[eax+44h]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+4]']
push ['esi']
mov ['eax,', '[eax]']
push ['eax']
push ['edx']
push ['ecx']
call ['__alldiv']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+8]']
sbb ['edx,', '[ecx+0Ch]']
jmp ['short', 'loc_6B6']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+54h]']
jl ['short', 'loc_68D']
jg ['short', 'loc_662']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+50h]']
jbe ['short', 'loc_68D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[eax+40h]']
mov ['edx,', '[ebp+arg_4]']
sbb ['edx,', '[eax+44h]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+4]']
push ['esi']
mov ['eax,', '[eax]']
push ['eax']
push ['edx']
push ['ecx']
call ['__alldiv']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+38h]']
sbb ['edx,', '[ecx+3Ch]']
jmp ['short', 'loc_6B6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+40h]']
mov ['edx,', '[ebp+arg_4]']
adc ['edx,', '[eax+44h]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[eax+4]']
push ['esi']
mov ['eax,', '[eax]']
push ['eax']
push ['edx']
push ['ecx']
call ['__alldiv']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+8]']
sbb ['edx,', '[ecx+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__allmul:near']
extrn ['__alldiv:near']
end

endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+48h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['dword', 'ptr', 'ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_isInvariantUnicodeString proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_isInvariantUString_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@BreakTransliterator@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@BreakTransliterator@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@BreakTransliterator@icu_56@@UBEPAXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@BreakTransliterator@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['esi,', 'esp']
push ['11h']
push ['offset', '??_C@_1CE@OBFGGMOI@?$AAA?$AAn?$AAy?$AA?9?$AAB?$AAr?$AAe?$AAa?$AAk?$AAI?$AAn?$AAt?$AAe?$AAr?$AAn?$AAa?$AAl?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_12C]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BreakTransliterator@icu_56@@6B@']
push ['0']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4Ch']
call ['??0?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@PAVBreakIterator@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['0']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '50h']
call ['??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['esi,', 'esp']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '54h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$0 proc	near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$1 proc	near
mov ['ecx,', '[ebp-18h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$2 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '4Ch']
jmp ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$3 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '50h']
jmp ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4BreakTransliterator@icu_56@@6B@']
public ['??_7BreakTransliterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@BreakTransliterator@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z']
dd ['offset', '?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z']
dd ['offset', '?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z']
dd ['offset', '?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
dd ['offset', '?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z']
dd ['offset', '?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
dd ['offset', '?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ']
dd ['offset', '?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z']
dd ['offset', '?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z']
dd ['offset', '?getInsertion@BreakTransliterator@icu_56@@UBEABVUnicodeString@2@XZ']
dd ['offset', '?setInsertion@BreakTransliterator@icu_56@@UAEXABVUnicodeString@2@@Z']
assume ['cs:_rdata']
public ['??_C@_1CE@OBFGGMOI@?$AAA?$AAn?$AAy?$AA?9?$AAB?$AAr?$AAe?$AAa?$AAk?$AAI?$AAn?$AAt?$AAe?$AAr?$AAn?$AAa?$AAl?$AA?$AA@']
unicode ['0,', '<Any-BreakInternal>,0']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$1']
dd ['2']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$2']
dd ['3']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z$3']
assume ['cs:_rdata$r']
public ['??_R4BreakTransliterator@icu_56@@6B@']
dd ['offset', '??_R0?AVBreakTransliterator@icu_56@@@8']
dd ['offset', '??_R3BreakTransliterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVBreakTransliterator@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3BreakTransliterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2BreakTransliterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2BreakTransliterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Transliterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BreakTransliterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3BreakTransliterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Transliterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Transliterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVTransliterator@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3Transliterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Transliterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Transliterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GBreakTransliterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1BreakTransliterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7D9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1BreakTransliterator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1BreakTransliterator@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BreakTransliterator@icu_56@@6B@']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '54h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '50h']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4Ch']
call ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1Transliterator@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1BreakTransliterator@icu_56@@UAE@XZ$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1BreakTransliterator@icu_56@@UAE@XZ$1	proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '4Ch']
jmp ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$??1BreakTransliterator@icu_56@@UAE@XZ$2	proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '50h']
jmp ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1BreakTransliterator@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1BreakTransliterator@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1BreakTransliterator@icu_56@@UAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1BreakTransliterator@icu_56@@UAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1BreakTransliterator@icu_56@@UAE@XZ$2']
dd ['offset', '__unwindtable$??1BreakTransliterator@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BreakTransliterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0Transliterator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BreakTransliterator@icu_56@@6B@']
push ['0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4Ch']
call ['??0?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@PAVBreakIterator@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
push ['0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '50h']
call ['??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '54h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '54h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1Transliterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '4Ch']
jmp ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z$2 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '50h']
jmp ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z$2']
dd ['offset', '__unwindtable$??0BreakTransliterator@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['94h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_AE6']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0BreakTransliterator@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_AF0']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0']
dd ['offset', '__unwindtable$?clone@BreakTransliterator@icu_56@@UBEPAVTransliterator@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1C4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1D0]']
mov ['ecx,', '71h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_24],', '0']
push ['0']
lea ['ecx,', '[ebp+var_30]']
call ['??0?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@PAVBreakIterator@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
lea ['ecx,', '[ebp+var_3C]']
call ['??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '50h']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
call ['?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '4Ch']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['?moveFrom@?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_30]']
call ['?isNull@?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C87']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getEnglish@Locale@icu_56@@SAABV12@XZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?createWordInstance@BreakIterator@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['?adoptInstead@?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAEXPAVBreakIterator@2@@Z']
lea ['ecx,', '[ebp+var_3C]']
call ['?isNull@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_D1D']
mov ['esi,', 'esp']
push ['14h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1BC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_1BC],', '0']
jz ['short', 'loc_CF4']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_1BC]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUVector32@icu_56@@6B@']
mov ['edx,', '[ebp+var_1BC]']
mov ['[ebp+var_1D0],', 'edx']
jmp ['short', 'loc_CFE']
mov ['[ebp+var_1D0],', '0']
mov ['eax,', '[ebp+var_1D0]']
mov ['[ebp+var_1C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1C8]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['?adoptInstead@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@@Z']
lea ['ecx,', '[ebp+var_30]']
call ['?isNull@?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_D4E']
lea ['ecx,', '[ebp+var_3C]']
call ['?isNull@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_D4E']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_D6E']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
jmp ['loc_116B']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?removeAllElements@UVector32@icu_56@@QAEXXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_9C]']
push ['ecx']
call ['?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_30]']
call ['??C?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBEPAVBreakIterator@1@XZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_9C]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_1D0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_30]']
call ['??C?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBEPAVBreakIterator@1@XZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_1D0]']
mov ['edx,', '[eax+40h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_30]']
call ['??C?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBEPAVBreakIterator@1@XZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1D0]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A8],', 'eax']
jmp ['short', 'loc_E62']
lea ['ecx,', '[ebp+var_30]']
call ['??C?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBEPAVBreakIterator@1@XZ']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1D0]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '0FFFFFFFFh']
jz ['loc_F5E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_A8]']
cmp ['ecx,', '[eax+0Ch]']
jge ['loc_F5E']
cmp ['[ebp+var_A8],', '0']
jnz ['short', 'loc_E8C']
jmp ['short', 'loc_E32']
mov ['eax,', '[ebp+var_A8]']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_9C]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
call ['_u_charType_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
mov ['[ebp+var_C0],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_C0]']
shl ['eax,', 'cl']
and ['eax,', '1FEh']
jnz ['short', 'loc_EE2']
jmp ['loc_E32']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
lea ['ecx,', '[ebp+var_9C]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
call ['_u_charType_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
mov ['[ebp+var_C0],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_C0]']
shl ['eax,', 'cl']
and ['eax,', '1FEh']
jnz ['short', 'loc_F35']
jmp ['loc_E32']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_E32']
mov ['[ebp+var_CC],', '0']
mov ['[ebp+var_D8],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['loc_1054']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '54h']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
imul ['esi,', 'eax']
mov ['[ebp+var_CC],', 'esi']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?lastElementi@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D8],', 'eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?size@UVector32@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_1054']
lea ['ecx,', '[ebp+var_3C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?popi@UVector32@icu_56@@QAEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A8],', 'eax']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '54h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_FEB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_CC]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+var_CC]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_1094']
mov ['ecx,', '[ebp+var_D8]']
add ['ecx,', '[ebp+var_CC]']
mov ['[ebp+var_1D0],', 'ecx']
jmp ['short', 'loc_10A0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_1D0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1D0]']
mov ['[ecx+8],', 'edx']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_E4]']
call ['dword', 'ptr', 'ds:__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_F0],', 'eax']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '4Ch']
call ['?isNull@?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_10F7']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '4Ch']
call ['?moveFrom@?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '50h']
call ['?isNull@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_111E']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_F0]']
add ['ecx,', '50h']
call ['?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_E4]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_9C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN36']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN35']
dd ['offset', '$LN28']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN29']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN30']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN31']
dd ['0FFFFFF64h,', '40h']
dd ['offset', '$LN32']
dd ['0FFFFFF1Ch,', '4']
dd ['offset', '$LN33']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$0 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$1 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-48h]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1BCh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$4 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-9Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$5 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0E4h]']
call ['dword', 'ptr', 'ds:__imp_??1Mutex@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1D4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UVector32@icu_56@@6B@']
public ['??_SUVector32@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$2']
dd ['1']
dd ['offset', '__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$3']
dd ['1']
dd ['offset', '__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$?handleTransliterate@BreakTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$5']
assume ['cs:_rdata$r']
public ['??_R4UVector32@icu_56@@6B@']
dd ['offset', '??_R0?AVUVector32@icu_56@@@8']
dd ['offset', '??_R3UVector32@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUVector32@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UVector32@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UVector32@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UVector32@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UVector32@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UVector32@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUVector32@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UVector32@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_13F7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getInsertion@BreakTransliterator@icu_56@@UBEABVUnicodeString@2@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '54h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setInsertion@BreakTransliterator@icu_56@@UAEXABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '54h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_12C],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '1']
push ['0']
push ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
push ['offset', '??_R0?AVReplaceable@icu_56@@@8']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['___RTDynamicCast']
add ['esp,', '14h']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_1532']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_60]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1561']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@Replaceable@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_12C]']
or ['ecx,', '1']
mov ['[ebp+var_12C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN10']
dd ['offset', '$LN8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-54h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z$1 proc near
mov ['eax,', '[ebp-12Ch]']
and ['eax,', '1']
jz ['$LN7']
and ['dword', 'ptr', '[ebp-12Ch],', '0FFFFFFFEh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
retn
endp
__ehhandler$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-134h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z$1']
dd ['0']
dd ['offset', '__unwindfunclet$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z$0']
dd ['offset', '__unwindtable$?replaceableAsString@BreakTransliterator@icu_56@@CA?AVUnicodeString@2@AAVReplaceable@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@PAVBreakIterator@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QAE@PAVBreakIterator@1@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_17AA']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_17B4']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?moveFrom@?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_18A0']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_18AA']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?adoptInstead@?$LocalPointer@VBreakIterator@icu_56@@@icu_56@@QAEXPAVBreakIterator@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1940']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_194A']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNull@?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??C?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QBEPAVBreakIterator@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1AA2']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_1AAC']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1B98']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1BA2']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?adoptInstead@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1C38']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1C42']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNull@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QAE@PAVBreakIterator@1@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VBreakIterator@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_uprv_isInvariantUString_56:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['??1Transliterator@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@_W@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??_GBreakTransliterator@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EBreakTransliterator@icu_56@@UAEPAXI@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z:near']
extrn ['?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z:near']
extrn ['?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z:near']
extrn ['?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z:near']
extrn ['?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z:near']
extrn ['?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ:near']
extrn ['?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near']
extrn ['?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z:near']
extrn ['?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['??0Transliterator@icu_56@@IAE@ABV01@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_?popi@UVector32@icu_56@@QAEHXZ:near']
extrn ['__imp_?lastElementi@UVector32@icu_56@@QBEHXZ:near']
extrn ['__imp_?size@UVector32@icu_56@@QBEHXZ:near']
extrn ['__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['_u_charType_56:near']
extrn ['__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__imp_?removeAllElements@UVector32@icu_56@@QAEXXZ:near']
extrn ['__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?createWordInstance@BreakIterator@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?getEnglish@Locale@icu_56@@SAABV12@XZ:near']
extrn ['__imp_??1Mutex@icu_56@@QAE@XZ:near']
extrn ['__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:near']
extrn ['??_GUVector32@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUVector32@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ:near']
extrn ['__imp_??1UVector32@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:near']
extrn ['__imp_?length@Replaceable@icu_56@@QBEHXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['___RTDynamicCast:near']
end

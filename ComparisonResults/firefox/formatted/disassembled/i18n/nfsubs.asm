endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+0AD0h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+0AD1h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_E0],', '0']
cmp ['[ebp+arg_4],', '1Ch']
jge ['short', 'loc_28D']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_298']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '704h']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_E0]']
or ['ecx,', '1']
mov ['[ebp+var_E0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '1Ch']
jge ['short', 'loc_313']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_31E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '704h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_0],', '8']
jnz ['short', 'loc_383']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+0AD0h],', '1']
jmp ['short', 'loc_393']
cmp ['[ebp+arg_0],', '9']
jnz ['short', 'loc_393']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+0AD1h],', '1']
cmp ['[ebp+arg_0],', '1Ch']
jge ['short', 'loc_3B9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+var_18]']
lea ['ecx,', '[edx+ecx+4]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_4BA']
cmp ['[ebp+arg_0],', '4']
jnz ['loc_4BA']
mov ['esi,', 'esp']
push ['7FFFFFFFh']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '1']
jnz ['loc_4BA']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_u_charDigitValue_56']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['loc_4BA']
mov ['[ebp+var_2D],', '1']
jmp ['short', 'loc_42A']
mov ['al,', '[ebp+var_2D]']
add ['al,', '1']
mov ['[ebp+var_2D],', 'al']
movsx ['eax,', '[ebp+var_2D]']
cmp ['eax,', '9']
jg ['loc_4BA']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_138]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_140],', 'eax']
mov ['ecx,', '[ebp+var_140]']
mov ['[ebp+var_144],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_144]']
push ['edx']
movsx ['eax,', '[ebp+var_2D]']
add ['eax,', '11h']
shl ['eax,', '6']
mov ['ecx,', '[ebp+var_18]']
lea ['ecx,', '[ecx+eax+4]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_138]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_422']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-138h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-148h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0']
dd ['offset', '__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '744h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_D4]']
or ['ecx,', '1']
mov ['[ebp+var_D4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+94Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Formattable@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8Formattable@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDouble@Formattable@icu_56@@QBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLong@Formattable@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getInt64@Formattable@icu_56@@QBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+8]']
mov ['edx,', '[ecx+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDate@Formattable@icu_56@@QBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AFormattable@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '0E0h']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+98h],', '0']
jz ['short', 'loc_861']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_85D']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '3']
fldz
jmp ['short', 'loc_867']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
public ['__real@0000000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FieldPosition@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FieldPosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4FieldPosition@icu_56@@6B@']
public ['??_7FieldPosition@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4FieldPosition@icu_56@@6B@']
dd ['offset', '??_R0?AVFieldPosition@icu_56@@@8']
dd ['offset', '??_R3FieldPosition@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFieldPosition@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FieldPosition@icu_56@@8']
dd ['3']
dd ['offset', '??_R2FieldPosition@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FieldPosition@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FieldPosition@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3FieldPosition@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FieldPosition@icu_56@@QAE@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FieldPosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FieldPosition@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FieldPosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getField@FieldPosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getEndIndex@FieldPosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setField@FieldPosition@icu_56@@QAEXH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFieldPosition@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FieldPosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E3D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFieldPosition@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_EC3']
push ['offset', '??1FieldPosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EBB']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_EEC']
mov ['ecx,', '[ebp+var_8]']
call ['??1FieldPosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EE9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8FieldPosition@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_FAE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_FAE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_FAE']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_FB5']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9FieldPosition@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8FieldPosition@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9FieldPositionIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8FieldPositionIterator@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Format@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0E8h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0MeasureUnit@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7MeasureUnit@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4MeasureUnit@icu_56@@6B@']
public ['??_7MeasureUnit@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ']
dd ['offset', '??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z']
assume ['cs:_rdata$r']
public ['??_R4MeasureUnit@icu_56@@6B@']
dd ['offset', '??_R0?AVMeasureUnit@icu_56@@@8']
dd ['offset', '??_R3MeasureUnit@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVMeasureUnit@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3MeasureUnit@icu_56@@8']
dd ['3']
dd ['offset', '??_R2MeasureUnit@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2MeasureUnit@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@MeasureUnit@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3MeasureUnit@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0MeasureUnit@icu_56@@AAE@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7MeasureUnit@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GMeasureUnit@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1MeasureUnit@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_139D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EMeasureUnit@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1423']
push ['offset', '??1MeasureUnit@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_141B']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_144C']
mov ['ecx,', '[ebp+var_8]']
call ['??1MeasureUnit@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1449']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ']
mov ['ecx,', 'eax']
call ['?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NumberFormatFactory@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NumberFormatFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4NumberFormatFactory@icu_56@@6B@']
public ['??_7NumberFormatFactory@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4NumberFormatFactory@icu_56@@6B@']
dd ['offset', '??_R0?AVNumberFormatFactory@icu_56@@@8']
dd ['offset', '??_R3NumberFormatFactory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNumberFormatFactory@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3NumberFormatFactory@icu_56@@8']
dd ['3']
dd ['offset', '??_R2NumberFormatFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2NumberFormatFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3NumberFormatFactory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NumberFormatFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1701']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1787']
push ['offset', '??1NumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_177F']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_17B0']
mov ['ecx,', '[ebp+var_8]']
call ['??1NumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_17AD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SimpleNumberFormatFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NumberFormatFactory@icu_56@@UAE@XZ']
endp
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4SimpleNumberFormatFactory@icu_56@@6B@']
public ['??_7SimpleNumberFormatFactory@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ']
dd ['offset', '?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4SimpleNumberFormatFactory@icu_56@@6B@']
dd ['offset', '??_R0?AVSimpleNumberFormatFactory@icu_56@@@8']
dd ['offset', '??_R3SimpleNumberFormatFactory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSimpleNumberFormatFactory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3SimpleNumberFormatFactory@icu_56@@8']
dd ['4']
dd ['offset', '??_R2SimpleNumberFormatFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SimpleNumberFormatFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SimpleNumberFormatFactory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SimpleNumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_19B5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1A3B']
push ['offset', '??1SimpleNumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['48h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1A33']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1A64']
mov ['ecx,', '[ebp+var_8]']
call ['??1SimpleNumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1A61']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+154h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLenient@NumberFormat@icu_56@@UBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+155h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+250h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+170h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9DigitList@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8DigitList@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNaN@DigitList@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
and ['edx,', '30h']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isInfinite@DigitList@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
and ['edx,', '40h']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToZero@DigitList@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?digits@DigitList@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['eax,', '[ecx]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isPositive@DigitList@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
and ['edx,', '80h']
neg ['edx']
sbb ['edx,', 'edx']
neg ['edx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLowerExponent@DigitList@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['eax,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalSetDouble@DigitList@icu_56@@AAEXN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+68h],', '1']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fstp ['qword', 'ptr', '[eax+60h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+68h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+60h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+64h],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?internalClear@DigitList@icu_56@@AAEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+68h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SameValueSubstitution@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SameValueSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4SameValueSubstitution@icu_56@@6B@']
public ['??_7SameValueSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8NFSubstitution@icu_56@@UBECABV01@@Z']
dd ['offset', '?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4SameValueSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVSameValueSubstitution@icu_56@@@8']
dd ['offset', '??_R3SameValueSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSameValueSubstitution@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3SameValueSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2SameValueSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SameValueSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SameValueSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SameValueSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3NFSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNFSubstitution@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3NFSubstitution@icu_56@@8']
dd ['3']
dd ['offset', '??_R2NFSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@SameValueSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@SameValueSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@SameValueSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@SameValueSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@SameValueSubstitution@icu_56@@UBE_WXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Dh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSameValueSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SameValueSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_20B5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1MultiplierSubstitution@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7MultiplierSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4MultiplierSubstitution@icu_56@@6B@']
public ['??_7MultiplierSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z']
dd ['offset', '?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4MultiplierSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVMultiplierSubstitution@icu_56@@@8']
dd ['offset', '??_R3MultiplierSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVMultiplierSubstitution@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3MultiplierSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2MultiplierSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2MultiplierSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@MultiplierSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3MultiplierSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setDivisor@MultiplierSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fild ['[ebp+arg_4]']
sub ['esp,', '8']
fstp ['qword', 'ptr', '[esp+0E0h+var_E0]']
fild ['[ebp+arg_0]']
sub ['esp,', '8']
fstp ['[esp+0E8h+var_E8]']
call ['_uprv_pow_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_8]']
fstp ['qword', 'ptr', '[eax+10h]']
mov ['eax,', '[ebp+var_8]']
sub ['esp,', '8']
fld ['qword', 'ptr', '[eax+10h]']
fstp ['qword', 'ptr', '[esp+0E0h+var_E0]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+18h],', 'eax']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+10h]']
fldz
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_224E']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '9']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@MultiplierSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
call ['__alldiv']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@MultiplierSubstitution@icu_56@@UBENN@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_2302']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fdiv ['qword', 'ptr', '[eax+10h]']
sub ['esp,', '8']
fstp ['[esp+0E0h+var_E0]']
call ['_uprv_floor_56']
add ['esp,', '8']
jmp ['short', 'loc_230B']
jmp ['short', 'loc_230B']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fdiv ['qword', 'ptr', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@MultiplierSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fmul ['qword', 'ptr', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@MultiplierSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@MultiplierSubstitution@icu_56@@UBE_WXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GMultiplierSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1MultiplierSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2439']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1ModulusSubstitution@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ModulusSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4ModulusSubstitution@icu_56@@6B@']
public ['??_7ModulusSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z']
dd ['offset', '?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4ModulusSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVModulusSubstitution@icu_56@@@8']
dd ['offset', '??_R3ModulusSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVModulusSubstitution@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ModulusSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2ModulusSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ModulusSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ModulusSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ModulusSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setDivisor@ModulusSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fild ['[ebp+arg_4]']
sub ['esp,', '8']
fstp ['qword', 'ptr', '[esp+0E0h+var_E0]']
fild ['[ebp+arg_0]']
sub ['esp,', '8']
fstp ['[esp+0E8h+var_E8]']
call ['_uprv_pow_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_8]']
fstp ['qword', 'ptr', '[eax+10h]']
mov ['eax,', '[ebp+var_8]']
sub ['esp,', '8']
fld ['qword', 'ptr', '[eax+10h]']
fstp ['qword', 'ptr', '[esp+0E0h+var_E0]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+18h],', 'eax']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+10h]']
fldz
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_25D2']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '9']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@ModulusSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
call ['__allrem']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@ModulusSubstitution@icu_56@@UBENN@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['esp,', '8']
fld ['qword', 'ptr', '[eax+10h]']
fstp ['[esp+0E0h+var_E0]']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0E8h+var_E8]']
call ['_uprv_fmod_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@ModulusSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['esp,', '8']
fld ['qword', 'ptr', '[eax+10h]']
fstp ['[esp+0E0h+var_E0]']
sub ['esp,', '8']
fld ['[ebp+arg_8]']
fstp ['[esp+0E8h+var_E8]']
call ['_uprv_fmod_56']
add ['esp,', '10h']
fsubr ['[ebp+arg_8]']
fadd ['[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@ModulusSubstitution@icu_56@@UBENN@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isModulusSubstitution@ModulusSubstitution@icu_56@@UBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@ModulusSubstitution@icu_56@@UBE_WXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Eh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GModulusSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ModulusSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_27C9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1IntegralPartSubstitution@icu_56@@UAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IntegralPartSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4IntegralPartSubstitution@icu_56@@6B@']
public ['??_7IntegralPartSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8NFSubstitution@icu_56@@UBECABV01@@Z']
dd ['offset', '?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4IntegralPartSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVIntegralPartSubstitution@icu_56@@@8']
dd ['offset', '??_R3IntegralPartSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVIntegralPartSubstitution@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3IntegralPartSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2IntegralPartSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2IntegralPartSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@IntegralPartSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3IntegralPartSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@IntegralPartSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@IntegralPartSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0E0h+var_E0]']
call ['_uprv_floor_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@IntegralPartSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
fadd ['[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@IntegralPartSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['ds:__real@7fefffffffffffff']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
public ['__real@7fefffffffffffff']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@IntegralPartSubstitution@icu_56@@UBE_WXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GIntegralPartSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1IntegralPartSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2A55']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1FractionalPartSubstitution@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FractionalPartSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4FractionalPartSubstitution@icu_56@@6B@']
public ['??_7FractionalPartSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z']
dd ['offset', '?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4FractionalPartSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVFractionalPartSubstitution@icu_56@@@8']
dd ['offset', '??_R3FractionalPartSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFractionalPartSubstitution@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3FractionalPartSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2FractionalPartSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FractionalPartSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FractionalPartSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3FractionalPartSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@FractionalPartSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@FractionalPartSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@FractionalPartSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0E0h+var_E0]']
call ['_uprv_floor_56']
add ['esp,', '8']
fsubr ['[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@FractionalPartSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
fadd ['[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@FractionalPartSubstitution@icu_56@@UBENN@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fldz
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@FractionalPartSubstitution@icu_56@@UBE_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Eh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFractionalPartSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FractionalPartSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2D01']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1AbsoluteValueSubstitution@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7AbsoluteValueSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4AbsoluteValueSubstitution@icu_56@@6B@']
public ['??_7AbsoluteValueSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8NFSubstitution@icu_56@@UBECABV01@@Z']
dd ['offset', '?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4AbsoluteValueSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVAbsoluteValueSubstitution@icu_56@@@8']
dd ['offset', '??_R3AbsoluteValueSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVAbsoluteValueSubstitution@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3AbsoluteValueSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2AbsoluteValueSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2AbsoluteValueSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@AbsoluteValueSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3AbsoluteValueSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@AbsoluteValueSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['dword', 'ptr', '[ebp+arg_0+4],', '0']
jl ['short', 'loc_2E69']
jg ['short', 'loc_2E55']
cmp ['dword', 'ptr', '[ebp+arg_0],', '0']
jb ['short', 'loc_2E69']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[ebp+var_D0],', 'ecx']
jmp ['short', 'loc_2E82']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
neg ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
adc ['eax,', '0']
neg ['eax']
mov ['[ebp+var_D4],', 'edx']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D4]']
mov ['edx,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@AbsoluteValueSubstitution@icu_56@@UBENN@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0E0h+var_E0]']
call ['_uprv_fabs_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@AbsoluteValueSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
fchs
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@AbsoluteValueSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['ds:__real@7fefffffffffffff']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@AbsoluteValueSubstitution@icu_56@@UBE_WXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Eh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1AbsoluteValueSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2FC5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1NumeratorSubstitution@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NumeratorSubstitution@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4NumeratorSubstitution@icu_56@@6B@']
public ['??_7NumeratorSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z']
dd ['offset', '?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z']
dd ['offset', '?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z']
dd ['offset', '?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z']
dd ['offset', '?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_rdata$r']
public ['??_R4NumeratorSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVNumeratorSubstitution@icu_56@@@8']
dd ['offset', '??_R3NumeratorSubstitution@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNumeratorSubstitution@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3NumeratorSubstitution@icu_56@@8']
dd ['4']
dd ['offset', '??_R2NumeratorSubstitution@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2NumeratorSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NFSubstitution@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@NumeratorSubstitution@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3NumeratorSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@NumeratorSubstitution@icu_56@@UBE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[eax+18h]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
call ['__allmul']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformNumber@NumeratorSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['[ebp+arg_0]']
fmul ['qword', 'ptr', '[eax+10h]']
sub ['esp,', '8']
fstp ['[esp+0E0h+var_E0]']
call ['_uprv_round_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@NumeratorSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeRuleValue@NumeratorSubstitution@icu_56@@UBENNN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
fld ['[ebp+arg_0]']
fdiv ['[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcUpperBound@NumeratorSubstitution@icu_56@@UBENN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tokenChar@NumeratorSubstitution@icu_56@@UBE_WXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '3Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNumeratorSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NumeratorSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3295']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '174h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '5Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_14]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_330A']
xor ['eax,', 'eax']
jmp ['loc_3862']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_14]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '3Ch']
jz ['short', 'loc_334F']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '3Dh']
jz ['loc_37E5']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '3Eh']
jz ['loc_35AE']
jmp ['loc_3857']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_17C]']
and ['eax,', 'dword', 'ptr', '[ebp+var_17C+4]']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_3389']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['loc_3862']
jmp ['loc_35AE']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_17C],', '0FFFFFFFEh']
jnz ['short', 'loc_33AF']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '0FFFFFFFFh']
jz ['short', 'loc_33FF']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_17C],', '0FFFFFFFDh']
jnz ['short', 'loc_33D5']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '0FFFFFFFFh']
jz ['short', 'loc_33FF']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_17C],', '0FFFFFFFCh']
jnz ['loc_3479']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '0FFFFFFFFh']
jnz ['short', 'loc_3479']
mov ['esi,', 'esp']
push ['10h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_164],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_344C']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_164]']
call ['??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
jmp ['short', 'loc_3456']
mov ['dword', 'ptr', '[ebp+var_17C+4],', '0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_17C+4]']
mov ['[ebp+var_170],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_170]']
jmp ['loc_3862']
jmp ['loc_35AE']
mov ['ecx,', '[ebp+arg_C]']
call ['?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_352B']
mov ['esi,', 'esp']
push ['28h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14C],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_34FE']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
fild ['[ebp+var_17C]']
sub ['esp,', '8']
fstp ['[esp+1A4h+var_1A4]']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14C]']
call ['??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_180],', 'eax']
jmp ['short', 'loc_3508']
mov ['[ebp+var_180],', '0']
mov ['eax,', '[ebp+var_180]']
mov ['[ebp+var_158],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_3862']
jmp ['loc_35AE']
mov ['esi,', 'esp']
push ['20h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_134],', 'eax']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_3586']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?getDivisor@NFRule@icu_56@@QBENXZ']
sub ['esp,', '8']
fstp ['[esp+1A4h+var_1A4]']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_134]']
call ['??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
jmp ['short', 'loc_3590']
mov ['dword', 'ptr', '[ebp+var_17C+4],', '0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_17C+4]']
mov ['[ebp+var_140],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_140]']
jmp ['loc_3862']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_17C]']
and ['eax,', 'dword', 'ptr', '[ebp+var_17C+4]']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_364D']
mov ['esi,', 'esp']
push ['10h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '3']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_3620']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_11C]']
call ['??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
jmp ['short', 'loc_362A']
mov ['dword', 'ptr', '[ebp+var_17C+4],', '0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_17C+4]']
mov ['[ebp+var_128],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_128]']
jmp ['loc_3862']
jmp ['loc_37E5']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_17C],', '0FFFFFFFEh']
jnz ['short', 'loc_3673']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '0FFFFFFFFh']
jz ['short', 'loc_36C3']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_17C],', '0FFFFFFFDh']
jnz ['short', 'loc_3699']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '0FFFFFFFFh']
jz ['short', 'loc_36C3']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBaseValue@NFRule@icu_56@@QBE_JXZ']
mov ['dword', 'ptr', '[ebp+var_17C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'edx']
cmp ['dword', 'ptr', '[ebp+var_17C],', '0FFFFFFFCh']
jnz ['loc_373D']
cmp ['dword', 'ptr', '[ebp+var_17C+4],', '0FFFFFFFFh']
jnz ['short', 'loc_373D']
mov ['esi,', 'esp']
push ['14h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_3710']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_104]']
call ['??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
jmp ['short', 'loc_371A']
mov ['dword', 'ptr', '[ebp+var_17C+4],', '0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_17C+4]']
mov ['[ebp+var_110],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_110]']
jmp ['loc_3862']
jmp ['loc_37E5']
mov ['ecx,', '[ebp+arg_C]']
call ['?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3761']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['loc_3862']
jmp ['loc_37E5']
mov ['esi,', 'esp']
push ['28h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '5']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_37C0']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?getDivisor@NFRule@icu_56@@QBENXZ']
sub ['esp,', '8']
fstp ['qword', 'ptr', '[esp]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_EC]']
call ['??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
jmp ['short', 'loc_37CA']
mov ['dword', 'ptr', '[ebp+var_17C+4],', '0']
mov ['edx,', 'dword', 'ptr', '[ebp+var_17C+4]']
mov ['[ebp+var_F8],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_F8]']
jmp ['short', 'loc_3862']
mov ['esi,', 'esp']
push ['10h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_4],', '6']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_3832']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_D4]']
call ['??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['dword', 'ptr', '[ebp+var_17C+4],', 'eax']
jmp ['short', 'loc_383C']
mov ['dword', 'ptr', '[ebp+var_17C+4],', '0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_17C+4]']
mov ['[ebp+var_E0],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_E0]']
jmp ['short', 'loc_3862']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-164h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-14Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-134h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-11Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$4 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$5 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$6 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0D4h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-184h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$2']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$4']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$5']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$6']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBaseValue@NFRule@icu_56@@QBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx]']
mov ['edx,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDivisor@NFRule@icu_56@@QBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
mov ['[ebp+var_D0],', 'ecx']
fild ['[ebp+var_D0]']
sub ['esp,', '8']
fstp ['[esp+0E4h+var_E4]']
mov ['edx,', '[ebp+var_8]']
fild ['dword', 'ptr', '[edx+8]']
sub ['esp,', '8']
fstp ['[esp+0ECh+var_EC]']
call ['_uprv_pow_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+74h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7MultiplierSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
fld ['[ebp+arg_4]']
fstp ['qword', 'ptr', '[eax+10h]']
mov ['eax,', '[ebp+var_14]']
sub ['esp,', '8']
fld ['qword', 'ptr', '[eax+10h]']
fstp ['qword', 'ptr', '[esp+0F0h+var_F0]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'eax']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
fld ['qword', 'ptr', '[eax+10h]']
fldz
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_3B22']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFSubstitution@icu_56@@UAE@XZ']
endp
__ehhandler$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0MultiplierSubstitution@icu_56@@QAE@HNPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0IntegralPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IntegralPartSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0AbsoluteValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7AbsoluteValueSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['edx,', '[ebp+var_120]']
push ['edx']
call ['?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z']
add ['esp,', '8']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_12C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NumeratorSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
fld ['[ebp+arg_4]']
fstp ['qword', 'ptr', '[eax+10h]']
mov ['eax,', '[ebp+var_18]']
sub ['esp,', '8']
fld ['qword', 'ptr', '[eax+10h]']
fstp ['qword', 'ptr', '[esp+144h+var_144]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+18h],', 'eax']
mov ['[ecx+1Ch],', 'edx']
mov ['esi,', 'esp']
push ['2']
push ['offset', '?LTLT@NumeratorSubstitution@icu_56@@0QB_WB']
mov ['ecx,', '[ebp+arg_10]']
call ['dword', 'ptr', 'ds:__imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+20h],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1NFSubstitution@icu_56@@UAE@XZ']
endp
__ehhandler$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-130h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0NumeratorSubstitution@icu_56@@QAE@HNPAVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_120],', '0']
mov ['esi,', 'esp']
push ['2']
push ['offset', '?LTLT@NumeratorSubstitution@icu_56@@0QB_WB']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3EF2']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_120]']
or ['ecx,', '1']
mov ['[ebp+var_120],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_3F1A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_120]']
or ['ecx,', '1']
mov ['[ebp+var_120],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN9']
dd ['offset', '$LN7']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-54h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z$0']
dd ['offset', '__unwindtable$?fixdesc@NumeratorSubstitution@icu_56@@SA?AVUnicodeString@2@ABV32@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '164h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_170]']
mov ['ecx,', '59h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NFSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '2']
jl ['loc_4119']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['esi,', 'ax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
mov ['edi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['esi,', 'eax']
jnz ['short', 'loc_4119']
mov ['esi,', 'esp']
push ['1']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['1']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4153']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_4153']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4398']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4177']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
jmp ['loc_4382']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['eax,', '25h']
jnz ['short', 'loc_41B5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ']
mov ['ecx,', 'eax']
call ['?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+8],', 'eax']
jmp ['loc_4382']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['eax,', '23h']
jz ['short', 'loc_41F1']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['eax,', '30h']
jnz ['loc_4348']
mov ['ecx,', '[ebp+arg_4]']
call ['?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ']
mov ['ecx,', 'eax']
call ['?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jnz ['short', 'loc_422D']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4398']
mov ['esi,', 'esp']
push ['184h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_15C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_15C],', '0']
jz ['short', 'loc_4276']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
lea ['edx,', '[ebp+var_60]']
push ['edx']
mov ['ecx,', '[ebp+var_15C]']
call ['??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_170],', 'eax']
jmp ['short', 'loc_4280']
mov ['[ebp+var_170],', '0']
mov ['eax,', '[ebp+var_170]']
mov ['[ebp+var_168],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_168]']
mov ['[ebp+var_78],', 'ecx']
cmp ['[ebp+var_78],', '0']
jnz ['short', 'loc_42C3']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_4398']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_433D']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_144],', 'eax']
mov ['ecx,', '[ebp+var_144]']
mov ['[ebp+var_150],', 'ecx']
cmp ['[ebp+var_150],', '0']
jz ['short', 'loc_431B']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_150]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_170],', 'eax']
jmp ['short', 'loc_4325']
mov ['[ebp+var_170],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4398']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_78]']
mov ['[eax+0Ch],', 'ecx']
jmp ['short', 'loc_4382']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['eax,', '3Eh']
jnz ['short', 'loc_4379']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
jmp ['short', 'loc_4382']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '170h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
dd ['offset', '$LN27']
dd ['offset', '$LN25']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-18h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-15Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-174h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4NFSubstitution@icu_56@@6B@']
public ['??_7NFSubstitution@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ']
dd ['offset', '??8NFSubstitution@icu_56@@UBECABV01@@Z']
dd ['offset', '?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z']
dd ['offset', '?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4NFSubstitution@icu_56@@6B@']
dd ['offset', '??_R0?AVNFSubstitution@icu_56@@@8']
dd ['offset', '??_R3NFSubstitution@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getOwner@NFRuleSet@icu_56@@QBEPBVRuleBasedNumberFormat@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+64h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNFSubstitution@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NFSubstitution@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_45A1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1NFSubstitution@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1NFSubstitution@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NFSubstitution@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_4654']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_465E']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1NFSubstitution@icu_56@@UAE@XZ$0 proc	near 
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1NFSubstitution@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1NFSubstitution@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1NFSubstitution@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1NFSubstitution@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setDivisor@NFSubstitution@icu_56@@UAEXHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_4777']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+0A0h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@NFSubstitution@icu_56@@UBEPAXXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@NFSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8NFSubstitution@icu_56@@UBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['___RTtypeid']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['___RTtypeid']
add ['esp,', '4']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??8type_info@@QBE_NABV0@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_48D7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_48D7']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+8],', '0']
setz ['cl']
mov ['edx,', '[ebp+arg_0]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+8],', '0']
setz ['al']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_48D7']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jnz ['short', 'loc_4897']
mov ['edx,', '[ebp+arg_0]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
setz ['al']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_48C5']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
mov ['[ebp+var_D0],', 'ecx']
cmp ['[ebp+var_D0],', '0']
jz ['short', 'loc_48D7']
mov ['[ebp+var_D1],', '1']
jmp ['short', 'loc_48DE']
mov ['[ebp+var_D1],', '0']
mov ['al,', '[ebp+var_D1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_49B2']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+8]']
call ['?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z']
jmp ['short', 'loc_49DE']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_49DE']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+118h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN9_0']
dd ['offset', '$LN7_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@NFRuleSet@icu_56@@QBEXAAVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '210h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_21C]']
mov ['ecx,', '84h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_4BE0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['esi,', 'esp']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+8]']
call ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_4CC5']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['loc_4CC5']
fild ['[ebp+arg_0]']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+234h+var_234]']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_28]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
call ['?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_4C32']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['[esp+234h+var_234]']
call ['_uprv_floor_56']
add ['esp,', '8']
fstp ['[ebp+var_28]']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['[esp+234h+var_234]']
lea ['ecx,', '[ebp+var_218]']
call ['??0Formattable@icu_56@@QAE@N@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
lea ['edx,', '[ebp+var_218]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
call ['?format@Format@icu_56@@QBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_218]']
call ['??1Formattable@icu_56@@UAE@XZ']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_70]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '21Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
dd ['offset', '$LN11']
db ['3', 'dup(0FFh)']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN9_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-70h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-218h]']
jmp ['??1Formattable@icu_56@@UAE@XZ']
endp
__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-220h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '134h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_140]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+158h+var_158]']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_28]']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp]']
call ['_uprv_isInfinite_56']
add ['esp,', '8']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4E60']
call ['_uprv_getInfinity_56']
sub ['esp,', '8']
fstp ['qword', 'ptr', '[esp]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
call ['?findDoubleRule@NFRuleSet@icu_56@@ABEPBVNFRule@2@N@Z']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp+16Ch+var_16C]']
mov ['ecx,', '[ebp+var_34]']
call ['?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_4F67']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp]']
call ['_uprv_floor_56']
add ['esp,', '8']
fld ['[ebp+var_28]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_4EBF']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_4EBF']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp+16Ch+var_16C]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+8]']
call ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_4F67']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_4EF4']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp+16Ch+var_16C]']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+8]']
call ['?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_4F67']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_4F67']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_7C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['[esp+160h+var_160]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+0Ch]']
call ['?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_7C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '140h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
dd ['offset', '$LN12_0']
dd ['offset', '$LN10_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-7Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-144h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '11Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_11C]']
mov ['ecx,', '47h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_10]']
fstp ['[esp+130h+var_130]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+arg_10]']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_5170']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_10]']
fstp ['qword', 'ptr', '[esp]']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z']
movsx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jz ['loc_516E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
call ['?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_516E']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_516E']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?createInstance@NumberFormat@icu_56@@SAPAV12@AAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5121']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+50h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_108],', 'eax']
mov ['ecx,', '[ebp+var_108]']
mov ['[ebp+var_114],', 'ecx']
cmp ['[ebp+var_114],', '0']
jz ['short', 'loc_5164']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_114]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_114]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
jmp ['short', 'loc_516E']
mov ['[ebp+var_11C],', '0']
jmp ['short', 'loc_51A3']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_51A3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+50h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_5211']
mov ['[ebp+var_2C],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
call ['?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z']
fstp ['[ebp+var_3C]']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_8]']
fstp ['[esp+130h+var_130]']
sub ['esp,', '8']
fld ['[ebp+var_3C]']
fstp ['[esp+138h+var_138]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_3C]']
sub ['esp,', '8']
fld ['[ebp+var_3C]']
fstp ['[esp+130h+var_130]']
mov ['ecx,', '[ebp+arg_1C]']
call ['?setDouble@Formattable@icu_56@@QAEXN@Z']
mov ['al,', '1']
jmp ['short', 'loc_521D']
jmp ['short', 'loc_521D']
push ['0']
mov ['ecx,', '[ebp+arg_1C]']
call ['?setLong@Formattable@icu_56@@QAEXH@Z']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
dd ['offset', '$LN14']
dd ['offset', '$LN12_1']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN13_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isModulusSubstitution@NFSubstitution@icu_56@@UBECXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SameValueSubstitution@icu_56@@6B@']
mov ['esi,', 'esp']
push ['2']
push ['offset', '_gEqualsEquals']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_5333']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFSubstitution@icu_56@@UAE@XZ']
endp
__ehhandler$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0SameValueSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@SameValueSubstitution@icu_56@@UBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@SameValueSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@MultiplierSubstitution@icu_56@@UBEPAXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@MultiplierSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8MultiplierSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8NFSubstitution@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_54D8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
fld ['qword', 'ptr', '[edx+10h]']
fld ['qword', 'ptr', '[eax+10h]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_54D8']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_54DF']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ModulusSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
fld ['[ebp+arg_4]']
fstp ['qword', 'ptr', '[eax+10h]']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
sub ['esp,', '8']
fld ['[ebp+arg_4]']
fstp ['qword', 'ptr', '[esp+0F4h+var_F4]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'eax']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['edx,', '[ebp+var_DC]']
mov ['eax,', '[ecx+18h]']
or ['eax,', '[edx+1Ch]']
jnz ['short', 'loc_55B9']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['esi,', 'esp']
push ['3']
push ['offset', '_gGreaterGreaterGreaterThan']
mov ['ecx,', '[ebp+arg_14]']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_55E2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+20h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFSubstitution@icu_56@@UAE@XZ']
endp
__ehhandler$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0ModulusSubstitution@icu_56@@QAE@HNPBVNFRule@1@PBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@ModulusSubstitution@icu_56@@UBEPAXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@ModulusSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8ModulusSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8NFSubstitution@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_572E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
fld ['qword', 'ptr', '[edx+10h]']
fld ['qword', 'ptr', '[eax+10h]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_572E']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jnz ['short', 'loc_572E']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_5735']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@ModulusSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jnz ['short', 'loc_57A2']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doSubstitution@NFSubstitution@icu_56@@UBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_57F1']
mov ['esi,', 'esp']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+20h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['dword', 'ptr', '[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+var_18+4],', 'edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_18+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+20h]']
call ['?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPos@NFSubstitution@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@ModulusSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jnz ['short', 'loc_5887']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+100h+var_100]']
mov ['ecx,', '[ebp+var_8]']
call ['?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_58D5']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+0F0h+var_F0]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_18]']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_18]']
fstp ['[esp+100h+var_100]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
call ['?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doParse@ModulusSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jnz ['short', 'loc_594D']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_18]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+arg_10]']
fstp ['[esp+104h+var_104]']
sub ['esp,', '8']
fld ['[ebp+arg_8]']
fstp ['[esp+10Ch+var_10C]']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
jmp ['loc_59D9']
jmp ['loc_59D9']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_10]']
fstp ['[esp+100h+var_104+4]']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
call ['?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_59D7']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
call ['?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z']
fstp ['[ebp+var_24]']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_8]']
fstp ['[esp+0FCh+var_FC]']
sub ['esp,', '8']
fld ['[ebp+var_24]']
fstp ['[esp+104h+var_104]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_24]']
sub ['esp,', '8']
fld ['[ebp+var_24]']
fstp ['[esp+0FCh+var_FC]']
mov ['ecx,', '[ebp+arg_1C]']
call ['?setDouble@Formattable@icu_56@@QAEXN@Z']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
dd ['offset', '$LN7_1']
dd ['offset', '$LN6']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toString@ModulusSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['loc_5AE4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5AF0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?toString@NFSubstitution@icu_56@@UBEXAAVUnicodeString@2@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@IntegralPartSubstitution@icu_56@@UBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@IntegralPartSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0NFSubstitution@icu_56@@IAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FractionalPartSubstitution@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+11h],', '1']
mov ['esi,', 'esp']
push ['2']
push ['offset', '_gGreaterGreaterThan']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5C35']
mov ['esi,', 'esp']
push ['3']
push ['offset', '_gGreaterGreaterGreaterThan']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5C35']
mov ['ecx,', '[ebp+var_14]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
cmp ['[ebp+arg_4],', 'eax']
jnz ['short', 'loc_5C65']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+10h],', '1']
mov ['esi,', 'esp']
push ['3']
push ['offset', '_gGreaterGreaterGreaterThan']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_5C63']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+11h],', '0']
jmp ['short', 'loc_5C74']
mov ['ecx,', '[ebp+var_14]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
mov ['ecx,', 'eax']
call ['?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NFSubstitution@icu_56@@UAE@XZ']
endp
__ehhandler$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0FractionalPartSubstitution@icu_56@@QAE@HPBVNFRuleSet@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeIntoFractionRuleSet@NFRuleSet@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+74h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '174h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '5Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5D9E']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+1A8h+var_1A8]']
mov ['ecx,', '[ebp+var_18]']
call ['?doSubstitution@NFSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_5F26']
lea ['ecx,', '[ebp+var_90]']
call ['??0DigitList@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+198h+var_198]']
lea ['ecx,', '[ebp+var_90]']
call ['?set@DigitList@icu_56@@QAEXN@Z']
push ['14h']
lea ['ecx,', '[ebp+var_90]']
call ['?roundFixedPoint@DigitList@icu_56@@QAEXH@Z']
lea ['ecx,', '[ebp+var_90]']
call ['?reduce@DigitList@icu_56@@QAEXXZ']
mov ['[ebp+var_99],', '0']
lea ['ecx,', '[ebp+var_90]']
call ['?getCount@DigitList@icu_56@@QBEHXZ']
sub ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
jmp ['short', 'loc_5E08']
mov ['eax,', '[ebp+var_A8]']
sub ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
lea ['ecx,', '[ebp+var_90]']
call ['?getDecimalAt@DigitList@icu_56@@QAEHXZ']
cmp ['[ebp+var_A8],', 'eax']
jl ['loc_5EDE']
movsx ['eax,', '[ebp+var_99]']
test ['eax,', 'eax']
jz ['short', 'loc_5E57']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5E57']
mov ['esi,', 'esp']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5E5E']
mov ['[ebp+var_99],', '1']
cmp ['[ebp+var_A8],', '0']
jl ['short', 'loc_5E87']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
call ['?getDigit@DigitList@icu_56@@QAEDH@Z']
movsx ['ecx,', 'al']
sub ['ecx,', '30h']
mov ['[ebp+var_180],', 'ecx']
jmp ['short', 'loc_5E91']
mov ['[ebp+var_180],', '0']
mov ['eax,', '[ebp+var_180]']
cdq
mov ['dword', 'ptr', '[ebp+var_B8],', 'eax']
mov ['dword', 'ptr', '[ebp+var_B8+4],', 'edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_B8+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_B8]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
mov ['ecx,', 'eax']
call ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_5DF9']
movsx ['eax,', '[ebp+var_99]']
test ['eax,', 'eax']
jnz ['short', 'loc_5F14']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_18]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
mov ['ecx,', 'eax']
call ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_90]']
call ['??1DigitList@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
dd ['offset', '$LN16']
dd ['offset', '$LN14_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1DigitList@icu_56@@QAE@XZ']
endp
__ehhandler$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-184h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?doSubstitution@FractionalPartSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '304h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_310]']
mov ['ecx,', '0C1h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6060']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_18]']
push ['ecx']
sub ['esp,', '8']
fldz
fstp ['[esp+330h+var_330]']
sub ['esp,', '8']
fld ['[ebp+arg_8]']
fstp ['[esp+338h+var_338]']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
jmp ['loc_6494']
jmp ['loc_6494']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['1']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_??0ParsePosition@icu_56@@QAE@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
fldz
fstp ['[ebp+var_84]']
lea ['ecx,', '[ebp+var_108]']
call ['??0DigitList@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_114],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['loc_637E']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['loc_637E']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_1FC]']
call ['??0Formattable@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['eax,', '[ebp+var_1FC]']
push ['eax']
sub ['esp,', '8']
fld ['ds:__real@4024000000000000']
fstp ['[esp+328h+var_328]']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
lea ['edx,', '[ebp+var_60]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
mov ['ecx,', 'eax']
call ['?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z']
mov ['[ebp+var_208],', '0']
lea ['eax,', '[ebp+var_208]']
push ['eax']
lea ['ecx,', '[ebp+var_1FC]']
call ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z']
mov ['[ebp+var_90],', 'eax']
movsx ['eax,', '[ebp+arg_18]']
test ['eax,', 'eax']
jz ['loc_6267']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_6267']
cmp ['[ebp+var_114],', '0']
jnz ['loc_621B']
mov ['[ebp+var_208],', '0']
lea ['eax,', '[ebp+var_208]']
push ['eax']
call ['?createInstance@NumberFormat@icu_56@@SAPAV12@AAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+var_208]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_621B']
mov ['eax,', '[ebp+var_114]']
mov ['[ebp+var_2F8],', 'eax']
mov ['ecx,', '[ebp+var_2F8]']
mov ['[ebp+var_304],', 'ecx']
cmp ['[ebp+var_304],', '0']
jz ['short', 'loc_6207']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_304]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_304]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['dword', 'ptr', '[ebp+var_310+4],', 'eax']
jmp ['short', 'loc_6211']
mov ['dword', 'ptr', '[ebp+var_310+4],', '0']
mov ['[ebp+var_114],', '0']
cmp ['[ebp+var_114],', '0']
jz ['short', 'loc_6267']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_74]']
push ['eax']
lea ['ecx,', '[ebp+var_1FC]']
push ['ecx']
lea ['edx,', '[ebp+var_60]']
push ['edx']
mov ['eax,', '[ebp+var_114]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_114]']
mov ['eax,', '[edx+50h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_208]']
push ['eax']
lea ['ecx,', '[ebp+var_1FC]']
call ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z']
mov ['[ebp+var_90],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['loc_636A']
mov ['eax,', '[ebp+var_90]']
add ['eax,', '30h']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
call ['?append@DigitList@icu_56@@QAEXD@Z']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'eax']
mov ['edi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['esi,', 'eax']
mov ['edi,', 'esp']
push ['esi']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_636A']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['eax,', '20h']
jnz ['short', 'loc_636A']
mov ['esi,', 'esp']
push ['1']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_62F8']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_1FC]']
call ['??1Formattable@icu_56@@UAE@XZ']
jmp ['loc_60B6']
mov ['eax,', '[ebp+var_114]']
mov ['[ebp+var_2E0],', 'eax']
mov ['ecx,', '[ebp+var_2E0]']
mov ['[ebp+var_2EC],', 'ecx']
cmp ['[ebp+var_2EC],', '0']
jz ['short', 'loc_63C4']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_2EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_2EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['dword', 'ptr', '[ebp+var_310+4],', 'eax']
jmp ['short', 'loc_63CE']
mov ['dword', 'ptr', '[ebp+var_310+4],', '0']
lea ['ecx,', '[ebp+var_108]']
call ['?getCount@DigitList@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_63E7']
fldz
fstp ['[ebp+var_310]']
jmp ['short', 'loc_63F8']
lea ['ecx,', '[ebp+var_108]']
call ['?getDouble@DigitList@icu_56@@QBENXZ']
fstp ['[ebp+var_310]']
fld ['[ebp+var_310]']
fstp ['[ebp+var_84]']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_8]']
fstp ['[esp+324h+var_328+4]']
sub ['esp,', '8']
fld ['[ebp+var_84]']
fstp ['[esp+32Ch+var_330+4]']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_84]']
sub ['esp,', '8']
fld ['[ebp+var_84]']
fstp ['[esp+328h+var_328]']
mov ['ecx,', '[ebp+arg_1C]']
call ['?setDouble@Formattable@icu_56@@QAEXN@Z']
mov ['[ebp+var_2D1],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_108]']
call ['??1DigitList@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_74]']
call ['dword', 'ptr', 'ds:__imp_??1ParsePosition@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_2D1]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '310h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
dd ['offset', '$LN30']
dd ['offset', '$LN24']
dd ['0FFFFFF8Ch,', '0Ch']
dd ['offset', '$LN25_0']
dd ['0FFFFFEF8h,', '70h']
dd ['offset', '$LN26']
dd ['0FFFFFE04h,', '0E0h']
dd ['offset', '$LN27_0']
dd ['0FFFFFDF8h,', '4']
dd ['offset', '$LN28_0']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-74h]']
call ['dword', 'ptr', 'ds:__imp_??1ParsePosition@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2 proc near
lea ['ecx,', '[ebp-108h]']
jmp ['??1DigitList@icu_56@@QAE@XZ']
endp
__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$3 proc near
lea ['ecx,', '[ebp-1FCh]']
jmp ['??1Formattable@icu_56@@UAE@XZ']
endp
__ehhandler$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-314h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['__real@4024000000000000']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$3']
dd ['offset', '__unwindtable$?doParse@FractionalPartSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8FractionalPartSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8NFSubstitution@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6635']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+10h]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+10h]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_6635']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_663C']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@FractionalPartSubstitution@icu_56@@UBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@FractionalPartSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@AbsoluteValueSubstitution@icu_56@@UBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@AbsoluteValueSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '248h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_254]']
mov ['ecx,', '92h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+26Ch+var_26C]']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_28]']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp]']
call ['?util64_fromDouble@icu_56@@YA_JN@Z']
add ['esp,', '8']
mov ['dword', 'ptr', '[ebp+var_38],', 'eax']
mov ['dword', 'ptr', '[ebp+var_38+4],', 'edx']
mov ['ecx,', '[ebp+var_18]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['loc_6873']
cmp ['[ebp+var_44],', '0']
jz ['loc_6873']
mov ['eax,', 'dword', 'ptr', '[ebp+var_38]']
mov ['dword', 'ptr', '[ebp+var_54],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_38+4]']
mov ['dword', 'ptr', '[ebp+var_54+4],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_60],', 'eax']
push ['0']
push ['0Ah']
mov ['eax,', 'dword', 'ptr', '[ebp+var_54+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_54]']
push ['ecx']
call ['__allmul']
mov ['dword', 'ptr', '[ebp+var_54],', 'eax']
mov ['dword', 'ptr', '[ebp+var_54+4],', 'edx']
fild ['[ebp+var_54]']
mov ['edx,', '[ebp+var_18]']
fcomp ['qword', 'ptr', '[edx+10h]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_6858']
mov ['esi,', 'esp']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_44]']
call ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_67EB']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '[ebp+var_60]']
add ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
fild ['[ebp+var_38]']
fld ['[ebp+var_28]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_68B5']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_68B5']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', 'dword', 'ptr', '[ebp+var_38+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_44]']
call ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_698E']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_68E9']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['[esp+280h+var_280]']
mov ['ecx,', '[ebp+var_44]']
call ['?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['loc_698E']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
sub ['esp,', '8']
fld ['[ebp+var_28]']
fstp ['qword', 'ptr', '[esp]']
lea ['ecx,', '[ebp+var_250]']
call ['??0Formattable@icu_56@@QAE@N@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['edx,', '[ebp+var_250]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ']
mov ['ecx,', 'eax']
call ['?format@Format@icu_56@@QBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_250]']
call ['??1Formattable@icu_56@@UAE@XZ']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?getPos@NFSubstitution@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_A8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '254h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
dd ['offset', '$LN14_1']
dd ['offset', '$LN12_2']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0A8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-250h]']
jmp ['??1Formattable@icu_56@@UAE@XZ']
endp
__ehhandler$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-258h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?doSubstitution@NumeratorSubstitution@icu_56@@UBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNumberFormat@NFSubstitution@icu_56@@IBEPBVDecimalFormat@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '26Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_278]']
mov ['ecx,', '9Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['loc_6D33']
mov ['esi,', 'esp']
push ['1']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_??0ParsePosition@icu_56@@QAE@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_174]']
call ['??0Formattable@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['loc_6CBA']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['loc_6CBA']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_174]']
push ['eax']
sub ['esp,', '8']
fld1
fstp ['[esp+290h+var_290]']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
lea ['edx,', '[ebp+var_78]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?getRuleSet@NFSubstitution@icu_56@@IBEPBVNFRuleSet@2@XZ']
mov ['ecx,', 'eax']
call ['?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6BD2']
jmp ['loc_6CBA']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'eax']
mov ['edi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['esi,', 'eax']
mov ['edi,', 'esp']
push ['esi']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jle ['short', 'loc_6CB5']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
cmp ['eax,', '20h']
jnz ['short', 'loc_6CB5']
mov ['esi,', 'esp']
push ['1']
push ['0']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_6C43']
jmp ['loc_6B3D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_174]']
call ['??1Formattable@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_8C]']
call ['dword', 'ptr', 'ds:__imp_??1ParsePosition@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6D48']
fld1
fstp ['[ebp+var_278]']
jmp ['short', 'loc_6D51']
fld ['[ebp+arg_8]']
fstp ['[ebp+var_278]']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
push ['0']
sub ['esp,', '8']
fld ['[ebp+arg_10]']
fstp ['[esp+298h+var_298]']
sub ['esp,', '8']
fld ['[ebp+var_278]']
fstp ['[esp+2A0h+var_2A0]']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?doParse@NFSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['loc_6E64']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
call ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z']
cdq
mov ['dword', 'ptr', '[ebp+var_184],', 'eax']
mov ['dword', 'ptr', '[ebp+var_184+4],', 'edx']
mov ['dword', 'ptr', '[ebp+var_194],', '1']
mov ['dword', 'ptr', '[ebp+var_194+4],', '0']
mov ['[ebp+var_1A0],', '0']
mov ['eax,', 'dword', 'ptr', '[ebp+var_194+4]']
cmp ['eax,', 'dword', 'ptr', '[ebp+var_184+4]']
jg ['short', 'loc_6E14']
jl ['short', 'loc_6DE0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_194]']
cmp ['ecx,', 'dword', 'ptr', '[ebp+var_184]']
ja ['short', 'loc_6E14']
push ['0']
push ['0Ah']
mov ['eax,', 'dword', 'ptr', '[ebp+var_194+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_194]']
push ['ecx']
call ['__allmul']
mov ['dword', 'ptr', '[ebp+var_194],', 'eax']
mov ['dword', 'ptr', '[ebp+var_194+4],', 'edx']
mov ['eax,', '[ebp+var_1A0]']
add ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
jmp ['short', 'loc_6DC2']
cmp ['[ebp+var_30],', '0']
jle ['short', 'loc_6E48']
push ['0']
push ['0Ah']
mov ['eax,', 'dword', 'ptr', '[ebp+var_194+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_194]']
push ['ecx']
call ['__allmul']
mov ['dword', 'ptr', '[ebp+var_194],', 'eax']
mov ['dword', 'ptr', '[ebp+var_194+4],', 'edx']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_6E14']
fild ['[ebp+var_184]']
fild ['[ebp+var_194]']
fdivp ['st(1),', 'st']
sub ['esp,', '8']
fstp ['[esp+290h+var_290]']
mov ['ecx,', '[ebp+arg_1C]']
call ['?setDouble@Formattable@icu_56@@QAEXN@Z']
mov ['[ebp+var_269],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_78]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_269]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '278h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
align ['4']
dd ['offset', '$LN25_1']
dd ['offset', '$LN20']
db ['88h,', '0FFh']
dw ['0FFFFh']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN21']
dd ['0FFFFFF74h,', '0Ch']
dd ['offset', '$LN22']
dd ['0FFFFFE8Ch,', '0E0h']
dd ['offset', '$LN23']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-78h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-8Ch]']
call ['dword', 'ptr', 'ds:__imp_??1ParsePosition@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2 proc near
lea ['ecx,', '[ebp-174h]']
jmp ['??1Formattable@icu_56@@UAE@XZ']
endp
__ehhandler$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-27Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['__real@3ff0000000000000']
dd ['3FF00000h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z$2']
dd ['offset', '__unwindtable$?doParse@NumeratorSubstitution@icu_56@@UBECABVUnicodeString@2@AAVParsePosition@2@NNCAAVFormattable@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8NumeratorSubstitution@icu_56@@UBECABVNFSubstitution@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8NFSubstitution@icu_56@@UBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7014']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
fld ['qword', 'ptr', '[edx+10h]']
fld ['qword', 'ptr', '[eax+10h]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_7014']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_701B']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@NumeratorSubstitution@icu_56@@UBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@NumeratorSubstitution@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_7289']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_7293']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z']
not ['eax']
mov ['edx,', '[ebp+var_8]']
and ['eax,', '[edx]']
or ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '1000h']
jb ['short', 'loc_7356']
cmp ['[ebp+arg_0],', '1003h']
jnb ['short', 'loc_7356']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_735D']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_73A4']
cmp ['[ebp+arg_0],', '1']
jz ['short', 'loc_73A4']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_73AB']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1000h']
mov ['eax,', '1']
shl ['eax,', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ']
add ['eax,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_769F']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_769F']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_76F4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['loc_7894']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['loc_788D']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_781C']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_7844']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_7844']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_7836']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_7844']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+Dst]']
jmp ['short', 'loc_7896']
jmp ['short', 'loc_7896']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_78E4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+Dst],', 'ecx']
jmp ['short', 'loc_794C']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_78F3']
mov ['[ebp+arg_0],', '0']
jmp ['short', 'loc_7907']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_7907']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_7923']
xor ['eax,', 'eax']
jmp ['short', 'loc_7973']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@H@Z:near']
extrn ['_u_charDigitValue_56:near']
extrn ['__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__imp_??0Locale@icu_56@@QAE@ABV01@@Z:near']
extrn ['??8Formattable@icu_56@@QBECABV01@@Z:near']
extrn ['__fltused:near']
extrn ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:near']
extrn ['__imp_??0UObject@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1FieldPosition@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['??8FieldPositionIterator@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:near']
extrn ['?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:near']
extrn ['??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:near']
extrn ['??1MeasureUnit@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['__purecall:near']
extrn ['??1NumberFormatFactory@icu_56@@UAE@XZ:near']
extrn ['?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:near']
extrn ['?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:near']
extrn ['??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:near']
extrn ['??8DigitList@icu_56@@QBECABV01@@Z:near']
extrn ['_uprv_decNumberZero_56:near']
extrn ['??_GSameValueSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ESameValueSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['??_GMultiplierSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EMultiplierSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['?util64_fromDouble@icu_56@@YA_JN@Z:near']
extrn ['_uprv_pow_56:near']
extrn ['__alldiv:near']
extrn ['_uprv_floor_56:near']
extrn ['??_GModulusSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EModulusSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['__allrem:near']
extrn ['_uprv_fmod_56:near']
extrn ['??_GIntegralPartSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EIntegralPartSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['??_GFractionalPartSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EFractionalPartSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['??_GAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EAbsoluteValueSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['_uprv_fabs_56:near']
extrn ['??_GNumeratorSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ENumeratorSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['__allmul:near']
extrn ['_uprv_round_56:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z:near']
extrn ['?getDecimalFormatSymbols@RuleBasedNumberFormat@icu_56@@ABEPBVDecimalFormatSymbols@2@XZ:near']
extrn ['?findRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:near']
extrn ['??_GNFSubstitution@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ENFSubstitution@icu_56@@UAEPAXI@Z:near']
extrn ['__imp_??8type_info@@QBE_NABV0@@Z:near']
extrn ['___RTtypeid:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z:near']
extrn ['??1Formattable@icu_56@@UAE@XZ:near']
extrn ['?format@Format@icu_56@@QBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z:near']
extrn ['??0Formattable@icu_56@@QAE@N@Z:near']
extrn ['?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ:near']
extrn ['?format@NFRuleSet@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:near']
extrn ['?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z:near']
extrn ['?format@NFRuleSet@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:near']
extrn ['?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:near']
extrn ['?findDoubleRule@NFRuleSet@icu_56@@ABEPBVNFRule@2@N@Z:near']
extrn ['_uprv_getInfinity_56:near']
extrn ['_uprv_isInfinite_56:near']
extrn ['?setLong@Formattable@icu_56@@QAEXH@Z:near']
extrn ['?setDouble@Formattable@icu_56@@QAEXN@Z:near']
extrn ['?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z:near']
extrn ['?createInstance@NumberFormat@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:near']
extrn ['?parse@NFRuleSet@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@NAAVFormattable@2@@Z:near']
extrn ['__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z:near']
extrn ['?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:near']
extrn ['?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z:near']
extrn ['??1DigitList@icu_56@@QAE@XZ:near']
extrn ['?getDigit@DigitList@icu_56@@QAEDH@Z:near']
extrn ['__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:near']
extrn ['?getDecimalAt@DigitList@icu_56@@QAEHXZ:near']
extrn ['?getCount@DigitList@icu_56@@QBEHXZ:near']
extrn ['?reduce@DigitList@icu_56@@QAEXXZ:near']
extrn ['?roundFixedPoint@DigitList@icu_56@@QAEXH@Z:near']
extrn ['?set@DigitList@icu_56@@QAEXN@Z:near']
extrn ['??0DigitList@icu_56@@QAE@XZ:near']
extrn ['__imp_??1ParsePosition@icu_56@@UAE@XZ:near']
extrn ['?getDouble@DigitList@icu_56@@QBENXZ:near']
extrn ['__imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z:near']
extrn ['?append@DigitList@icu_56@@QAEXD@Z:near']
extrn ['??0Formattable@icu_56@@QAE@XZ:near']
extrn ['__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:near']
extrn ['__imp_??0ParsePosition@icu_56@@QAE@H@Z:near']
extrn ['_uprv_free_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_malloc_56:near']
end

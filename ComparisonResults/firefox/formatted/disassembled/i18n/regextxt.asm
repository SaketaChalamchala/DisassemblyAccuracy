endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uregex_utext_unescape_charAt_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E0]']
mov ['ecx,', '38h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
cmp ['[ebp+arg_0],', 'ecx']
jnz ['loc_22F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_1FE']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_1FE']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_212']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['loc_3CD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jnz ['loc_330']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_29E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_29E']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_DC]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_DC]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_E0],', 'edx']
jmp ['short', 'loc_2B2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_317']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_317']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_32B']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_DC],', 'eax']
jmp ['loc_3CD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utext_moveIndex32_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_3A7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_3A7']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_3BB']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
cmp ['[ebp+var_14],', '0FFFFh']
ja ['short', 'loc_3DE']
mov ['ax,', 'word', 'ptr', '[ebp+var_14]']
jmp ['short', 'loc_3E0']
jmp ['short', 'loc_3E0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uregex_ucstr_unescape_charAt_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['ax,', '[ecx+eax*2]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_utext_moveIndex32_56:near']
extrn ['_utext_previous32_56:near']
extrn ['_utext_next32_56:near']
extrn ['__RTC_CheckEsp:near']
end

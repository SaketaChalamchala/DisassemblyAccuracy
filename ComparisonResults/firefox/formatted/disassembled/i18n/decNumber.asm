endp
_uprv_decNumberFromInt32_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_15C']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_176']
cmp ['[ebp+arg_4],', '80000000h']
jnz ['short', 'loc_16E']
mov ['[ebp+var_8],', '80000000h']
jmp ['short', 'loc_176']
mov ['eax,', '[ebp+arg_4]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberFromUInt32_56']
add ['esp,', '8']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_193']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '80h']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberFromUInt32_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1E9']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_248']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1FD']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_225']
mov ['eax,', '[ebp+arg_4]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_4]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_1F4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberToInt32_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_297']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0Ah']
jg ['short', 'loc_297']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_29C']
jmp ['loc_368']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_2D9']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_2FC']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_8]']
imul ['ecx,', 'dword', 'ptr', 'byte_30[edx*4]']
add ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_2C7']
cmp ['[ebp+var_20],', '0CCCCCCCh']
ja ['short', 'loc_314']
cmp ['[ebp+var_20],', '0CCCCCCCh']
jnz ['short', 'loc_33B']
cmp ['[ebp+var_2C],', '7']
jbe ['short', 'loc_33B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_339']
cmp ['[ebp+var_20],', '0CCCCCCCh']
jnz ['short', 'loc_339']
cmp ['[ebp+var_2C],', '8']
jnz ['short', 'loc_339']
mov ['eax,', '80000000h']
jmp ['short', 'loc_37B']
jmp ['short', 'loc_368']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[ecx+eax*8]']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[edx+eax*2]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_363']
mov ['eax,', '[ebp+var_38]']
neg ['eax']
jmp ['short', 'loc_37B']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_37B']
push ['80h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberToUInt32_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_3F9']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0Ah']
jg ['short', 'loc_3F9']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_3F9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_3FE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3F9']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_3F9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_3FE']
jmp ['loc_489']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_43B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_45E']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_8]']
imul ['ecx,', 'dword', 'ptr', 'byte_30[edx*4]']
add ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_429']
cmp ['[ebp+var_20],', '19999999h']
ja ['short', 'loc_476']
cmp ['[ebp+var_20],', '19999999h']
jnz ['short', 'loc_478']
cmp ['[ebp+var_2C],', '5']
jbe ['short', 'loc_478']
jmp ['short', 'loc_489']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[ecx+eax*8]']
mov ['eax,', '[ebp+var_20]']
lea ['eax,', '[edx+eax*2]']
jmp ['short', 'loc_49C']
push ['80h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberToString_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decToString']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberToEngString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decToString']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberFromString_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1B4]']
mov ['ecx,', '6Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_15],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8C],', 'eax']
mov ['[ebp+var_98],', '0']
mov ['[ebp+var_C8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_5BF']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_5F2']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jg ['short', 'loc_5F2']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_5B0']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jnz ['short', 'loc_62E']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_62E']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[ebp+var_8C]']
jnz ['short', 'loc_62C']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
jmp ['short', 'loc_5B0']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_681']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_65F']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['[ebp+var_15],', '80h']
jmp ['loc_5B0']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jnz ['short', 'loc_681']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_5B0']
jmp ['short', 'loc_688']
jmp ['loc_5B0']
cmp ['[ebp+var_98],', '0']
jnz ['loc_8E8']
mov ['[ebp+var_C8],', '1']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6B1']
jmp ['loc_CD0']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_6BC']
jmp ['loc_CD0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
push ['offset', '??_C@_08FJEPAENL@INFINITY?$AA@']
push ['offset', '??_C@_08CGODDKPM@infinity?$AA@']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
call ['_decBiStr']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_708']
push ['offset', '??_C@_03OEIAHPBN@INF?$AA@']
push ['offset', '??_C@_03OJHLLCGB@inf?$AA@']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
call ['_decBiStr']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_724']
movzx ['eax,', '[ebp+var_15]']
or ['eax,', '40h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['[ebp+var_C8],', '0']
jmp ['loc_CD0']
movzx ['eax,', '[ebp+var_15]']
or ['eax,', '20h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '73h']
jz ['short', 'loc_74D']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '53h']
jnz ['short', 'loc_769']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
movzx ['eax,', '[ebp+var_15]']
or ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '6Eh']
jz ['short', 'loc_78A']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '4Eh']
jz ['short', 'loc_78A']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '61h']
jz ['short', 'loc_7BA']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '41h']
jz ['short', 'loc_7BA']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '6Eh']
jz ['short', 'loc_7EA']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '4Eh']
jz ['short', 'loc_7EA']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jnz ['short', 'loc_824']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
jmp ['short', 'loc_805']
mov ['eax,', '[ebp+var_8C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_840']
mov ['[ebp+var_C8],', '0']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_866']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_882']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jle ['short', 'loc_884']
jmp ['short', 'loc_892']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_84E']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8A4']
jmp ['loc_CD0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
cmp ['[ebp+var_74],', 'ecx']
jle ['short', 'loc_8D0']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8C1']
jmp ['loc_CD0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_8D0']
jmp ['loc_CD0']
mov ['[ebp+var_C8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_15],', 'cl']
jmp ['loc_A7B']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_A7B']
mov ['[ebp+var_C8],', '1']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '65h']
jz ['short', 'loc_924']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '45h']
jz ['short', 'loc_924']
jmp ['loc_CD0']
mov ['[ebp+var_D1],', '0']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_960']
mov ['[ebp+var_D1],', '1']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_97D']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jnz ['short', 'loc_97D']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_98F']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jnz ['short', 'loc_9BC']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9BC']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_98F']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_E0],', 'eax']
jmp ['short', 'loc_9D9']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_9F5']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jle ['short', 'loc_9F7']
jmp ['short', 'loc_A15']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '3']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
lea ['edx,', '[edx+ecx-30h]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_9CA']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A27']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '0Ah']
cmp ['[ebp+var_A4],', 'eax']
jb ['short', 'loc_A5E']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '0Ah']
cmp ['[ebp+var_A4],', 'eax']
ja ['short', 'loc_A57']
mov ['eax,', '[ebp+var_E0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jle ['short', 'loc_A5E']
mov ['[ebp+var_C],', '773593FEh']
movzx ['eax,', '[ebp+var_D1]']
test ['eax,', 'eax']
jz ['short', 'loc_A71']
mov ['eax,', '[ebp+var_C]']
neg ['eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_C8],', '0']
mov ['eax,', '[ebp+var_8C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jnz ['short', 'loc_AEE']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_AB5']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
add ['ecx,', '1']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[ebp+var_98]']
jnb ['short', 'loc_AEE']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jnz ['short', 'loc_AD3']
jmp ['short', 'loc_A97']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_AE3']
jmp ['short', 'loc_AEE']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_A97']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_B10']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_98]']
jnb ['short', 'loc_B10']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax]']
jg ['short', 'loc_B25']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_B93']
cmp ['[ebp+var_74],', '31h']
jg ['short', 'loc_B3D']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_1B4],', 'ecx']
jmp ['short', 'loc_B46']
mov ['edx,', '[ebp+var_74]']
mov ['[ebp+var_1B4],', 'edx']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+var_EC],', 'eax']
lea ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_EC],', '2Dh']
jle ['short', 'loc_B93']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jnz ['short', 'loc_B8D']
mov ['eax,', '[ebp+var_C8]']
or ['eax,', '10h']
mov ['[ebp+var_C8],', 'eax']
jmp ['loc_CD0']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_BB9']
mov ['eax,', '[ebp+var_A4]']
sub ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[ebp+var_8C]']
jb ['short', 'loc_BFC']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jnz ['short', 'loc_BD7']
jmp ['short', 'loc_BAA']
mov ['eax,', '[ebp+var_A4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['edx,', '[ebp+var_B0]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_BAA']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_15]']
mov ['[eax+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_C70']
mov ['[ebp+var_BC],', '0']
lea ['eax,', '[ebp+var_C8]']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decSetCoeff']
add ['esp,', '18h']
lea ['eax,', '[ebp+var_C8]']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['short', 'loc_CC8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[edx+8]']
sub ['edx,', '[eax]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_CA0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_8]']
mov ['edx,', '[edx+4]']
sub ['edx,', '[eax]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_CC8']
mov ['[ebp+var_BC],', '0']
lea ['eax,', '[ebp+var_C8]']
push ['eax']
lea ['ecx,', '[ebp+var_BC]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['loc_5A5']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_CE2']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_C8],', '0']
jz ['short', 'loc_D02']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN83']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN82']
dd ['offset', '$LN79']
dd ['0FFFFFF44h,', '4']
dd ['offset', '$LN80']
dd ['0FFFFFF38h,', '4']
dd ['offset', '$LN81']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03OJHLLCGB@inf?$AA@']
assume ['cs:_rdata']
public ['??_C@_03OEIAHPBN@INF?$AA@']
assume ['cs:_rdata']
public ['??_C@_08CGODDKPM@infinity?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08FJEPAENL@INFINITY?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberAbs_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
and ['edx,', '80h']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decAddOp']
add ['esp,', '18h']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_E20']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN4']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN5']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberAdd_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_EE1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN4_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberAnd_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_F8E']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_F8E']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jnz ['short', 'loc_F8E']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_F8E']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_F8E']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_FAB']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_120B']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_FE2']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_FED']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1019']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_1024']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1050']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_105B']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1087']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_1092']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_10C2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
ja ['loc_11D7']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_10DC']
mov ['[ebp+var_59],', '0']
jmp ['short', 'loc_10E4']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jbe ['short', 'loc_10F2']
mov ['[ebp+var_65],', '0']
jmp ['short', 'loc_10FA']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_65],', 'cl']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_65]']
or ['eax,', 'ecx']
jz ['loc_11D2']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_1128']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '1']
jge ['loc_11D2']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_65]']
and ['eax,', 'ecx']
and ['eax,', '1']
jz ['short', 'loc_1159']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'byte', 'ptr', '_DECPOWERS[edx*4]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cl']
movzx ['eax,', '[ebp+var_59]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_80],', 'edx']
movzx ['eax,', '[ebp+var_59]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_65]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
or ['edx,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'edx']
movzx ['eax,', '[ebp+var_65]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_65],', 'al']
cmp ['[ebp+var_80],', '1']
jle ['short', 'loc_11B8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_120B']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnz ['short', 'loc_11CD']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
cmp ['[ebp+var_74],', 'eax']
jnz ['short', 'loc_11CD']
jmp ['short', 'loc_11D2']
jmp ['loc_111F']
jmp ['loc_10A7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCompare_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_127D']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_1']
dd ['offset', '$LN4_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCompareSignal_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['6']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1321']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_2']
dd ['offset', '$LN4_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCompareTotal_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_13C5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_3']
dd ['offset', '$LN4_3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCompareTotalMag_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '180h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '60h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_A0],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['loc_1502']
lea ['eax,', '[ebp+var_50]']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1484']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_180],', 'eax']
jmp ['short', 'loc_148F']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_180],', 'edx']
mov ['eax,', '[ebp+var_180]']
add ['eax,', '0Bh']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '30h']
jbe ['short', 'loc_14CD']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_14C4']
mov ['eax,', '[ebp+var_C]']
or ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_15E7']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_AC]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_AC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFF7Fh']
mov ['edx,', '[ebp+var_AC]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+var_AC]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['loc_15C1']
lea ['eax,', '[ebp+var_94]']
mov ['[ebp+var_B8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_153D']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_180],', 'eax']
jmp ['short', 'loc_1548']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_180],', 'edx']
mov ['eax,', '[ebp+var_180]']
add ['eax,', '0Bh']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '30h']
jbe ['short', 'loc_158C']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jnz ['short', 'loc_1580']
mov ['eax,', '[ebp+var_C]']
or ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_15E7']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_B8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_B8]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_B8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFF7Fh']
mov ['edx,', '[ebp+var_B8]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+arg_8],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
xor ['eax,', 'eax']
jnz ['loc_144C']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_15F9']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_A0],', '0']
jz ['short', 'loc_1611']
mov ['eax,', '[ebp+var_A0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_162B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN22']
dd ['offset', '$LN19']
dd ['0FFFFFFB0h,', '30h']
dd ['offset', '$LN20']
dd ['0FFFFFF6Ch,', '30h']
dd ['offset', '$LN21']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberDivide_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1700']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_4']
dd ['offset', '$LN4_4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberDivideInteger_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_17A1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_5']
dd ['offset', '$LN4_5']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberExp_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_1841']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decExpOp']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['short', 'loc_1825']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_185B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberFMA_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_18C]']
mov ['ecx,', '63h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_A4],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_18FD']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_1945']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_1921']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_1945']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_194A']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_194A']
jmp ['loc_1A6F']
mov ['esi,', '[ebp+arg_10]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_30]']
rep ['movsd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
add ['ecx,', '[edx]']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_2C],', '3B9AC9FFh']
mov ['[ebp+var_28],', '0C4653601h']
lea ['eax,', '[ebp+var_98]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_30],', '31h']
jg ['short', 'loc_1996']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_18C],', 'ecx']
jmp ['short', 'loc_199F']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+var_18C],', 'edx']
mov ['eax,', '[ebp+var_18C]']
add ['eax,', '0Bh']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '54h']
jbe ['short', 'loc_19E6']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '0']
jnz ['short', 'loc_19DA']
mov ['eax,', '[ebp+var_C]']
or ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_1A6F']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_B0],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '80h']
jz ['short', 'loc_1A46']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '40000000h']
jnz ['short', 'loc_1A2E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '20h']
jmp ['short', 'loc_1A6F']
lea ['eax,', '[ebp+var_C4]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_C4]']
mov ['[ebp+arg_C],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
xor ['eax,', 'eax']
jnz ['loc_18D9']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_1A87']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1AA1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22_0']
dd ['offset', '$LN18']
dd ['0FFFFFFD0h,', '1Ch']
dd ['offset', '$LN19_0']
dd ['0FFFFFF68h,', '54h']
dd ['offset', '$LN20_0']
dd ['0FFFFFF3Ch,', '0Ch']
dd ['offset', '$LN21_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberInvert_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1B66']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_1B66']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_1B83']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_1D45']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1BB1']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_1BBC']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1BE8']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_1BF3']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_1C1F']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_1C2A']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1C51']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
ja ['loc_1D11']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_1C6B']
mov ['[ebp+var_41],', '0']
jmp ['short', 'loc_1C73']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
mov ['eax,', '[ebp+var_20]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_1C8B']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '1']
jge ['short', 'loc_1D0C']
movzx ['eax,', '[ebp+var_41]']
not ['eax']
and ['eax,', '1']
jz ['short', 'loc_1CB4']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_50]']
movzx ['eax,', 'byte', 'ptr', '_DECPOWERS[edx*4]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[edx],', 'cl']
movzx ['eax,', '[ebp+var_41]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_5C],', 'edx']
movzx ['eax,', '[ebp+var_41]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_41],', 'al']
cmp ['[ebp+var_5C],', '1']
jle ['short', 'loc_1CF2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_1D45']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_1D07']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
cmp ['[ebp+var_50],', 'eax']
jnz ['short', 'loc_1D07']
jmp ['short', 'loc_1D0C']
jmp ['loc_1C82']
jmp ['loc_1C3F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberLn_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_1DB5']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decLnOp']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['short', 'loc_1D99']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1DCF']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9_0']
dd ['offset', '$LN8_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberLogB_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_1E61']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['short', 'loc_1EDE']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_1E7F']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopyAbs_56']
add ['esp,', '8']
jmp ['short', 'loc_1EDE']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1EBC']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_1EBC']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_1EBC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0C0h']
mov ['eax,', '[ebp+var_8]']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1EDE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax-1]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberFromInt32_56']
add ['esp,', '8']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1EF8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11']
dd ['offset', '$LN10_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberLog10_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '224h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_224]']
mov ['ecx,', '89h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_8C],', '0']
lea ['eax,', '[ebp+var_80]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_E8],', '0']
lea ['eax,', '[ebp+var_DC]']
mov ['[ebp+var_F4],', 'eax']
lea ['eax,', '[ebp+var_114]']
mov ['[ebp+var_120],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['loc_2327']
push ['40h']
lea ['eax,', '[ebp+var_144]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0F0h']
jnz ['loc_20CF']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_200A']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_200A']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['loc_20CF']
mov ['[ebp+var_150],', '0']
mov ['[ebp+var_15C],', '0']
mov ['[ebp+var_144],', '1']
lea ['eax,', '[ebp+var_15C]']
push ['eax']
lea ['ecx,', '[ebp+var_150]']
push ['ecx']
lea ['edx,', '[ebp+var_144]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_15C]']
and ['eax,', '20h']
jnz ['short', 'loc_20CF']
mov ['eax,', '[ebp+var_120]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jnz ['short', 'loc_20CF']
mov ['eax,', '[ebp+var_120]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_120]']
push ['edx']
call ['_uprv_decNumberFromInt32_56']
add ['esp,', '8']
mov ['[ebp+var_150],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_150]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_150]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_2327']
mov ['[ebp+var_3C],', '6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_8]']
cmp ['ecx,', '[edx]']
jle ['short', 'loc_20F5']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_224],', 'ecx']
jmp ['short', 'loc_2100']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_224],', 'eax']
mov ['ecx,', '[ebp+var_224]']
add ['ecx,', '3']
mov ['[ebp+var_30],', 'ecx']
cmp ['[ebp+var_30],', '31h']
jg ['short', 'loc_2124']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_224],', 'ecx']
jmp ['short', 'loc_212D']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+var_224],', 'edx']
mov ['eax,', '[ebp+var_224]']
add ['eax,', '0Bh']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '3Ch']
jbe ['short', 'loc_2174']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '0']
jnz ['short', 'loc_2168']
mov ['eax,', '[ebp+var_C]']
or ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_2327']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_144],', 'eax']
mov ['[ebp+var_140],', '0F423Fh']
mov ['[ebp+var_13C],', '0FFF0BDC1h']
mov ['[ebp+var_12C],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_98]']
push ['eax']
call ['_decLnOp']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0DDh']
jz ['short', 'loc_21CF']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '40000000h']
jnz ['short', 'loc_21CF']
jmp ['loc_2327']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_2206']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_221E']
mov ['eax,', '[ebp+var_98]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_221E']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_221E']
mov ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['loc_2327']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '3']
mov ['[ebp+var_30],', 'ecx']
cmp ['[ebp+var_30],', '31h']
jg ['short', 'loc_2241']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_224],', 'ecx']
jmp ['short', 'loc_224A']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+var_224],', 'edx']
mov ['eax,', '[ebp+var_224]']
add ['eax,', '0Bh']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '3Ch']
jbe ['short', 'loc_2291']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0']
jnz ['short', 'loc_2285']
mov ['eax,', '[ebp+var_C]']
or ['eax,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_2327']
mov ['eax,', '[ebp+var_E8]']
mov ['[ebp+var_F4],', 'eax']
mov ['eax,', '[ebp+var_120]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_120]']
mov ['byte', 'ptr', '[eax+0Ah],', '1']
mov ['eax,', '[ebp+var_120]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+var_120]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_144],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['edx,', '[ebp+var_120]']
push ['edx']
mov ['eax,', '[ebp+var_F4]']
push ['eax']
call ['_decLnOp']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_144],', 'ecx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
xor ['eax,', 'eax']
jnz ['loc_1FC3']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_233F']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_E8],', '0']
jz ['short', 'loc_2357']
mov ['eax,', '[ebp+var_E8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2371']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN35']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '224h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN34']
dd ['offset', '$LN26']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN27']
dd ['0FFFFFF80h,', '3Ch']
dd ['offset', '$LN28']
dd ['0FFFFFF24h,', '3Ch']
dd ['offset', '$LN29']
dd ['0FFFFFEECh,', '18h']
dd ['offset', '$LN30']
dd ['0FFFFFEBCh,', '1Ch']
dd ['offset', '$LN31']
dd ['0FFFFFEB0h,', '4']
dd ['offset', '$LN32']
dd ['0FFFFFEA4h,', '4']
dd ['offset', '$LN33']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberMax_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_249D']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_6']
dd ['offset', '$LN4_6']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberMaxMag_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2541']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_7']
dd ['offset', '$LN4_7']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberMin_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['3']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_25E5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_8']
dd ['offset', '$LN4_8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberMinMag_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['8']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2689']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_9']
dd ['offset', '$LN4_9']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberMinus_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_274F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_10']
dd ['offset', '$LN4_10']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN5_10']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberNextMinus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_38]']
rep ['movsd']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0C0h']
cmp ['ecx,', '40h']
jnz ['short', 'loc_2817']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decSetMaxValue']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_287A']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_B],', '1']
mov ['[ebp+var_10],', '0C4653600h']
mov ['[ebp+var_2C],', '6']
lea ['eax,', '[ebp+var_44]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '40000080h']
mov ['[ebp+var_44],', 'eax']
jz ['short', 'loc_2877']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_1']
dd ['offset', '$LN5_11']
dd ['0FFFFFFC8h,', '1Ch']
dd ['offset', '$LN6_11']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN7_1']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberNextPlus_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_38]']
rep ['movsd']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0C0h']
cmp ['ecx,', '0C0h']
jnz ['short', 'loc_295D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decSetMaxValue']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '80h']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_29BD']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_B],', '1']
mov ['[ebp+var_10],', '0C4653600h']
mov ['[ebp+var_2C],', '0']
lea ['eax,', '[ebp+var_44]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '40000080h']
mov ['[ebp+var_44],', 'eax']
jz ['short', 'loc_29BA']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN8_2']
dd ['offset', '$LN5_12']
dd ['0FFFFFFC8h,', '1Ch']
dd ['offset', '$LN6_12']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN7_2']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberNextToward_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', '[ebp+arg_C]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_38]']
rep ['movsd']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_2A84']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_2AA5']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_2BBC']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_decCompare']
add ['esp,', '0Ch']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '80000000h']
jnz ['short', 'loc_2AD1']
mov ['eax,', '[ebp+var_50]']
or ['eax,', '10h']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_2BBC']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_2AF0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uprv_decNumberCopySign_56']
add ['esp,', '0Ch']
jmp ['loc_2BBC']
cmp ['[ebp+var_44],', '0']
jge ['short', 'loc_2B37']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0C0h']
cmp ['ecx,', '0C0h']
jnz ['short', 'loc_2B2A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decSetMaxValue']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '80h']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_2BD9']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_59],', '0']
jmp ['short', 'loc_2B69']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0C0h']
cmp ['ecx,', '40h']
jnz ['short', 'loc_2B5E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decSetMaxValue']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_2BD9']
mov ['[ebp+var_2C],', '6']
mov ['[ebp+var_59],', '80h']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_B],', '1']
mov ['[ebp+var_10],', '0C4653600h']
lea ['eax,', '[ebp+var_50]']
push ['eax']
movzx ['ecx,', '[ebp+var_59]']
push ['ecx']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberIsNormal_56']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2BBC']
mov ['[ebp+var_50],', '0']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_2BD6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN19_1']
dd ['offset', '$LN16']
dd ['0FFFFFFC8h,', '1Ch']
dd ['offset', '$LN17']
dd ['0FFFFFFB0h,', '4']
dd ['offset', '$LN18_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberOr_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_2CB2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_2CB2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jnz ['short', 'loc_2CB2']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_2CB2']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_2CB2']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_2CCF']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_2F29']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_2D06']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_2D11']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_2D3D']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_2D48']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_2D74']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_2D7F']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_2DAB']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_2DB6']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_2DE6']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
ja ['loc_2EF5']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_2E00']
mov ['[ebp+var_59],', '0']
jmp ['short', 'loc_2E08']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jbe ['short', 'loc_2E16']
mov ['[ebp+var_65],', '0']
jmp ['short', 'loc_2E1E']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_65],', 'cl']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_65]']
or ['eax,', 'ecx']
jz ['loc_2EF0']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_2E46']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '1']
jge ['loc_2EF0']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_65]']
or ['eax,', 'ecx']
and ['eax,', '1']
jz ['short', 'loc_2E77']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'byte', 'ptr', '_DECPOWERS[edx*4]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cl']
movzx ['eax,', '[ebp+var_59]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_80],', 'edx']
movzx ['eax,', '[ebp+var_59]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_65]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
or ['edx,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'edx']
movzx ['eax,', '[ebp+var_65]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_65],', 'al']
cmp ['[ebp+var_80],', '1']
jle ['short', 'loc_2ED6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_2F29']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnz ['short', 'loc_2EEB']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
cmp ['[ebp+var_74],', 'eax']
jnz ['short', 'loc_2EEB']
jmp ['short', 'loc_2EF0']
jmp ['loc_2E3D']
jmp ['loc_2DCB']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberPlus_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_2FBC']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6_13']
dd ['offset', '$LN4_11']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN5_13']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberMultiply_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_307B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_14']
dd ['offset', '$LN4_12']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberPower_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '278h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_278]']
mov ['ecx,', '9Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_39],', '0']
mov ['[ebp+var_45],', '0']
mov ['[ebp+var_51],', '0']
mov ['[ebp+var_84],', '0']
mov ['[ebp+var_90],', '0']
mov ['[ebp+var_99],', '0']
lea ['eax,', '[ebp+var_118]']
mov ['[ebp+var_124],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
jz ['loc_32DD']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_3162']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_3186']
lea ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_3985']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['loc_32DD']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
mov ['[ebp+var_171],', 'cl']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_31ED']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_31D7']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_31D7']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_31ED']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '80h']
mov ['[ebp+var_90],', 'eax']
jmp ['loc_32D8']
lea ['eax,', '[ebp+var_D4]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_CB],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
call ['_uprv_decNumberCompare_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_325C']
movzx ['eax,', '[ebp+var_171]']
test ['eax,', 'eax']
jz ['short', 'loc_325A']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
jmp ['short', 'loc_32D8']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_32BD']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['[ebp+var_180],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '1']
mov ['eax,', '[ebp+var_180]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_180]']
neg ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '820h']
mov ['[ebp+var_90],', 'eax']
jmp ['short', 'loc_32D8']
movzx ['eax,', '[ebp+var_171]']
test ['eax,', 'eax']
jnz ['short', 'loc_32D8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
jmp ['loc_3985']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_decGetInt']
add ['esp,', '4']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '80000000h']
jz ['short', 'loc_3319']
mov ['[ebp+var_39],', '1']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_30]']
and ['eax,', '1']
mov ['[ebp+var_51],', 'al']
cmp ['[ebp+var_30],', '80000002h']
jz ['short', 'loc_3319']
cmp ['[ebp+var_30],', '80000003h']
jz ['short', 'loc_3319']
mov ['[ebp+var_45],', '1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_3337']
movzx ['eax,', '[ebp+var_51]']
test ['eax,', 'eax']
jz ['short', 'loc_3337']
mov ['[ebp+var_99],', '80h']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['loc_33CA']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_189],', 'cl']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_336E']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '1']
jmp ['short', 'loc_33C5']
movzx ['eax,', '[ebp+var_39]']
test ['eax,', 'eax']
jnz ['short', 'loc_339B']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_339B']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '80h']
mov ['[ebp+var_90],', 'eax']
jmp ['loc_3985']
movzx ['eax,', '[ebp+var_189]']
and ['eax,', '80h']
jnz ['short', 'loc_33B9']
movzx ['eax,', '[ebp+var_99]']
or ['eax,', '40h']
mov ['[ebp+var_99],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_99]']
mov ['[eax+8],', 'cl']
jmp ['loc_3985']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3449']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_3449']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_3449']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_3402']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '80h']
mov ['[ebp+var_90],', 'eax']
jmp ['short', 'loc_3444']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_195],', 'cl']
movzx ['eax,', '[ebp+var_195]']
and ['eax,', '80h']
jz ['short', 'loc_342C']
movzx ['eax,', '[ebp+var_99]']
or ['eax,', '40h']
mov ['[ebp+var_99],', 'al']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_99]']
mov ['[eax+8],', 'cl']
jmp ['loc_3985']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jnz ['loc_3519']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_347A']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '80h']
mov ['[ebp+var_90],', 'eax']
jmp ['loc_3985']
lea ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_34B0']
lea ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_decCheckMath']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_34B5']
jmp ['loc_3985']
push ['40h']
lea ['eax,', '[ebp+var_C0]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
mov ['[ebp+var_BC],', '0F423Fh']
mov ['[ebp+var_B8],', '0FFF0BDC1h']
mov ['[ebp+var_A8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_34FA']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_278],', 'ecx']
jmp ['short', 'loc_3505']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_278],', 'eax']
mov ['ecx,', '[ebp+var_278]']
add ['ecx,', '0Ah']
mov ['[ebp+var_C0],', 'ecx']
jmp ['loc_3599']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_3537']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '1']
jmp ['loc_3985']
cmp ['[ebp+var_30],', '0']
jge ['short', 'loc_3545']
mov ['eax,', '[ebp+var_30]']
neg ['eax']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', '[ebp+arg_C]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_C0]']
rep ['movsd']
mov ['[ebp+var_B4],', '3']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
add ['ecx,', '[edx+4]']
mov ['eax,', '[ebp+var_24]']
lea ['ecx,', '[eax+ecx+2]']
mov ['[ebp+var_C0],', 'ecx']
cmp ['[ebp+var_C0],', '3B9AC9FFh']
jle ['short', 'loc_3599']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '80h']
mov ['[ebp+var_90],', 'eax']
jmp ['loc_3985']
cmp ['[ebp+var_C0],', '31h']
jg ['short', 'loc_35B7']
mov ['eax,', '[ebp+var_C0]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_278],', 'ecx']
jmp ['short', 'loc_35C3']
mov ['edx,', '[ebp+var_C0]']
mov ['[ebp+var_278],', 'edx']
mov ['eax,', '[ebp+var_278]']
add ['eax,', '0Bh']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '3Ch']
jbe ['short', 'loc_3607']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_35FE']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '10h']
mov ['[ebp+var_90],', 'eax']
jmp ['loc_3985']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_124],', 'eax']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jnz ['loc_3718']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
call ['_decLnOp']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['loc_36C7']
mov ['eax,', '[ebp+var_124]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_36C7']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_36C7']
mov ['eax,', '[ebp+var_124]']
mov ['byte', 'ptr', '[eax+9],', '1']
movzx ['eax,', '[ebp+var_39]']
test ['eax,', 'eax']
jnz ['short', 'loc_36C5']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['[ebp+var_1A4],', 'ecx']
mov ['eax,', '[ebp+var_1A4]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_124]']
add ['ecx,', '9']
push ['ecx']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_124]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_1A4]']
neg ['eax']
mov ['ecx,', '[ebp+var_124]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '820h']
mov ['[ebp+var_90],', 'eax']
jmp ['short', 'loc_3713']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_124]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
call ['_decExpOp']
add ['esp,', '10h']
jmp ['loc_393A']
mov ['eax,', '[ebp+var_124]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_124]']
mov ['byte', 'ptr', '[eax+9],', '1']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['loc_3800']
lea ['eax,', '[ebp+var_168]']
mov ['[ebp+var_1B0],', 'eax']
mov ['eax,', '[ebp+var_124]']
push ['eax']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
lea ['eax,', '[ebp+var_90]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_D4]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
cmp ['[ebp+var_6C],', '3Ch']
jbe ['short', 'loc_37CB']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_37C2']
mov ['eax,', '[ebp+var_90]']
or ['eax,', '10h']
mov ['[ebp+var_90],', 'eax']
jmp ['loc_3985']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1B0],', 'eax']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+var_1B0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
lea ['eax,', '[ebp+var_D4]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_1B0]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_75],', '0']
mov ['[ebp+var_60],', '1']
jmp ['short', 'loc_3816']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_90]']
and ['eax,', '2200h']
jz ['short', 'loc_385A']
mov ['eax,', '[ebp+var_90]']
and ['eax,', '200h']
jnz ['short', 'loc_3858']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_385A']
mov ['eax,', '[ebp+var_124]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_385A']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_385A']
jmp ['short', 'loc_38D5']
mov ['eax,', '[ebp+var_30]']
shl ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
jns ['short', 'loc_3890']
mov ['[ebp+var_75],', '1']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
cmp ['[ebp+var_60],', '1Fh']
jnz ['short', 'loc_3898']
jmp ['short', 'loc_38D5']
movzx ['eax,', '[ebp+var_75]']
test ['eax,', 'eax']
jnz ['short', 'loc_38A5']
jmp ['loc_380D']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_124]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
jmp ['loc_380D']
mov ['eax,', '[ebp+var_90]']
and ['eax,', '2200h']
jz ['short', 'loc_393A']
mov ['eax,', '[ebp+var_124]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFF7Fh']
movzx ['edx,', '[ebp+var_99]']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_124]']
mov ['[eax+8],', 'cl']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['short', 'loc_3985']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_124]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_90]']
push ['eax']
lea ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['loc_3131']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3997']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_39A9']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_39C9']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN73']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '278h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN72']
dd ['offset', '$LN66']
dd ['0FFFFFF70h,', '4']
dd ['offset', '$LN67']
dd ['0FFFFFF40h,', '1Ch']
dd ['offset', '$LN68']
dd ['0FFFFFF2Ch,', '0Ch']
dd ['offset', '$LN69']
dd ['0FFFFFEE8h,', '3Ch']
dd ['offset', '$LN70']
dd ['0FFFFFE98h,', '3Ch']
dd ['offset', '$LN71']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberQuantize_56 proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decQuantizeOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3AD5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_15']
dd ['offset', '$LN4_13']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberNormalize_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uprv_decNumberReduce_56']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberReduce_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_3BB8']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['short', 'loc_3C08']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['0']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decTrim']
add ['esp,', '14h']
xor ['eax,', 'eax']
jnz ['short', 'loc_3B90']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3C22']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_0']
dd ['offset', '$LN8_3']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN9_3']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN10_2']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberRescale_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decQuantizeOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3CED']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_16']
dd ['offset', '$LN4_14']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberRemainder_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['40h']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3D91']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_17']
dd ['offset', '$LN4_15']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberRemainderNear_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3E35']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_18']
dd ['offset', '$LN4_16']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberRotate_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '13Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_3EB9']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_3EDA']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_4231']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_3EEF']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_3EFB']
mov ['[ebp+var_8],', '80h']
jmp ['loc_4231']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_decGetInt']
add ['esp,', '4']
mov ['[ebp+X],', 'eax']
cmp ['[ebp+X],', '80000000h']
jz ['short', 'loc_3F38']
cmp ['[ebp+X],', '80000003h']
jz ['short', 'loc_3F38']
cmp ['[ebp+X],', '80000002h']
jz ['short', 'loc_3F38']
mov ['eax,', '[ebp+X]']
push ['eax']
call ['_abs']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
cmp ['eax,', '[ecx]']
jle ['short', 'loc_3F44']
mov ['[ebp+var_8],', '80h']
jmp ['loc_4231']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
cmp ['[ebp+X],', '0']
jge ['short', 'loc_3F65']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+X]']
mov ['[ebp+X],', 'ecx']
cmp ['[ebp+X],', '0']
jz ['loc_4231']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+X]']
cmp ['ecx,', '[eax]']
jz ['loc_4231']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['loc_4231']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_3FA9']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_3FB4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_13C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_3FE0']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_3FEB']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_13C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_400F']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
ja ['short', 'loc_401F']
mov ['eax,', '[ebp+var_44]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_4006']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_4045']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_4050']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_13C]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+X]']
mov ['[ebp+X],', 'ecx']
mov ['eax,', '[ebp+X]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+X]']
and ['eax,', '80000000h']
jns ['short', 'loc_4083']
dec ['eax']
or ['eax,', '0FFFFFFFFh']
inc ['eax']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jbe ['loc_4168']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax+9]']
mov ['ecx,', '[ebp+var_2C]']
xor ['edx,', 'edx']
div ['_DECPOWERS[ecx*4]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_40C2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_40CD']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_13C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jbe ['short', 'loc_4147']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_5C]']
xor ['edx,', 'edx']
div ['_DECPOWERS[ecx*4]']
mov ['[ebp+var_68],', 'edx']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_5C]']
xor ['edx,', 'edx']
div ['_DECPOWERS[ecx*4]']
mov ['edx,', '[ebp+var_50]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '[ebp+var_38]']
mov ['eax,', '1']
sub ['eax,', 'edx']
mov ['edx,', '[ebp+var_68]']
imul ['edx,', '_DECPOWERS[eax*4]']
movzx ['eax,', 'dl']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_50]']
mov ['[edx-1],', 'cl']
jmp ['short', 'loc_4168']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '_DECPOWERS[edx*4]']
movzx ['edx,', 'al']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['[eax],', 'cl']
cmp ['[ebp+var_20],', '0']
jbe ['loc_420E']
mov ['eax,', '1']
sub ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
jz ['short', 'loc_41CA']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax+9]']
mov ['ecx,', '[ebp+var_2C]']
xor ['edx,', 'edx']
div ['_DECPOWERS[ecx*4]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_74]']
imul ['eax,', '_DECPOWERS[edx*4]']
movzx ['edx,', 'al']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+9]']
push ['eax']
call ['_decReverse']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decReverse']
add ['esp,', '8']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
call ['_decReverse']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_50]']
sub ['ecx,', 'eax']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_424B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN32_0']
dd ['offset', '$LN31_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberSameQuantum_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
jz ['short', 'loc_4303']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_42E5']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_42E5']
mov ['[ebp+var_5],', '1']
jmp ['short', 'loc_4301']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_4301']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_4301']
mov ['[ebp+var_5],', '1']
jmp ['short', 'loc_4315']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_4315']
mov ['[ebp+var_5],', '1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_5]']
mov ['[eax+9],', 'cl']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberScaleB_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_4381']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_43A2']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_445D']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_43B7']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_43C3']
mov ['[ebp+var_14],', '80h']
jmp ['loc_445D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_decGetInt']
add ['esp,', '4']
mov ['[ebp+X],', 'eax']
cmp ['[ebp+X],', '80000000h']
jz ['short', 'loc_440A']
cmp ['[ebp+X],', '80000003h']
jz ['short', 'loc_440A']
cmp ['[ebp+X],', '80000002h']
jz ['short', 'loc_440A']
mov ['eax,', '[ebp+X]']
push ['eax']
call ['_abs']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_C]']
add ['edx,', '[ecx+4]']
shl ['edx,', '1']
cmp ['eax,', 'edx']
jle ['short', 'loc_4413']
mov ['[ebp+var_14],', '80h']
jmp ['short', 'loc_445D']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_445D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+X]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4477']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN16_0']
dd ['offset', '$LN14']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN15']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberShift_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_450D']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_452E']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_46B2']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_4543']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_454F']
mov ['[ebp+var_8],', '80h']
jmp ['loc_46B2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_decGetInt']
add ['esp,', '4']
mov ['[ebp+X],', 'eax']
cmp ['[ebp+X],', '80000000h']
jz ['short', 'loc_458C']
cmp ['[ebp+X],', '80000003h']
jz ['short', 'loc_458C']
cmp ['[ebp+X],', '80000002h']
jz ['short', 'loc_458C']
mov ['eax,', '[ebp+X]']
push ['eax']
call ['_abs']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
cmp ['eax,', '[ecx]']
jle ['short', 'loc_4598']
mov ['[ebp+var_8],', '80h']
jmp ['loc_46B2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
cmp ['[ebp+X],', '0']
jz ['loc_46B2']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['loc_46B2']
cmp ['[ebp+X],', '0']
jle ['short', 'loc_4640']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+X]']
cmp ['ecx,', '[eax]']
jnz ['short', 'loc_45E4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_463E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+X]']
mov ['edx,', '[ebp+arg_C]']
cmp ['ecx,', '[edx]']
jle ['short', 'loc_460D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+X]']
mov ['edx,', '[ebp+arg_C]']
sub ['ecx,', '[edx]']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decDecap']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jg ['short', 'loc_4620']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jz ['short', 'loc_463E']
mov ['eax,', '[ebp+X]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_46B2']
mov ['eax,', '[ebp+X]']
neg ['eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx]']
jl ['short', 'loc_465E']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_46B2']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_467A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_4685']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+X]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+var_DC]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+X]']
neg ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_46CC']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN26_0']
dd ['offset', '$LN25']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberSquareRoot_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30C]']
mov ['ecx,', '0C3h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_8C],', '0']
mov ['[ebp+var_98],', '0']
mov ['[ebp+var_1A0],', '0']
mov ['[ebp+var_1AC],', '0']
mov ['[ebp+var_1B8],', '0']
lea ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_1C4],', 'eax']
lea ['eax,', '[ebp+var_150]']
mov ['[ebp+var_1D0],', 'eax']
lea ['eax,', '[ebp+var_194]']
mov ['[ebp+var_1DC],', 'eax']
lea ['eax,', '[ebp+var_1FC]']
mov ['[ebp+var_208],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_480F']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_47ED']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_47DB']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '80h']
mov ['[ebp+var_8C],', 'eax']
jmp ['short', 'loc_47EB']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['short', 'loc_480A']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_532F']
mov ['eax,', '[ebp+arg_4]']
mov ['eax,', '[eax+4]']
and ['eax,', '0FFFFFFFEh']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_487E']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_487E']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_487E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax+4],', 'ecx']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_532F']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_48A3']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '80h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_532F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx]']
jge ['short', 'loc_48BF']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_30C],', 'ecx']
jmp ['short', 'loc_48CD']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['[ebp+var_30C],', 'eax']
mov ['ecx,', '[ebp+var_30C]']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_74],', '7']
jge ['short', 'loc_48E8']
mov ['[ebp+var_30C],', '7']
jmp ['short', 'loc_48F1']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_30C],', 'eax']
mov ['ecx,', '[ebp+var_30C]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '2']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_491F']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_30C],', 'eax']
jmp ['short', 'loc_492A']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_30C],', 'edx']
mov ['eax,', '[ebp+var_30C]']
add ['eax,', '0Bh']
mov ['[ebp+var_C8],', 'eax']
cmp ['[ebp+var_C8],', '30h']
jle ['short', 'loc_4980']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1A0],', 'eax']
cmp ['[ebp+var_1A0],', '0']
jnz ['short', 'loc_4974']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '10h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_532F']
mov ['eax,', '[ebp+var_1A0]']
mov ['[ebp+var_1C4],', 'eax']
cmp ['[ebp+var_68],', '31h']
jg ['short', 'loc_4998']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_30C],', 'ecx']
jmp ['short', 'loc_49A1']
mov ['edx,', '[ebp+var_68]']
mov ['[ebp+var_30C],', 'edx']
mov ['eax,', '[ebp+var_30C]']
add ['eax,', '0Bh']
mov ['[ebp+var_C8],', 'eax']
cmp ['[ebp+var_C8],', '3Ch']
jle ['short', 'loc_4A21']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1AC],', 'eax']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1B8],', 'eax']
cmp ['[ebp+var_1AC],', '0']
jz ['short', 'loc_49F5']
cmp ['[ebp+var_1B8],', '0']
jnz ['short', 'loc_4A09']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '10h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_532F']
mov ['eax,', '[ebp+var_1AC]']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+var_1B8]']
mov ['[ebp+var_1DC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_1C4]']
add ['ecx,', '[edx]']
mov ['[ebp+var_B0],', 'ecx']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[eax]']
neg ['ecx']
mov ['edx,', '[ebp+var_1C4]']
mov ['[edx+4],', 'ecx']
push ['40h']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
mov ['[ebp+var_20],', '3B9AC9FFh']
mov ['[ebp+var_1C],', '0C4653601h']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_208]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_1D0]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '1']
jnz ['short', 'loc_4B0F']
mov ['eax,', '[ebp+var_208]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFDh']
mov ['eax,', '[ebp+var_1D0]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFDh']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+9],', '9']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+0Ah],', '5']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+0Bh],', '2']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+9],', '9']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+0Ah],', '1']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+0Bh],', '8']
jmp ['short', 'loc_4B89']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_1C4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_208]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFCh']
mov ['eax,', '[ebp+var_1D0]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFEh']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+9],', '9']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+0Ah],', '1']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+0Bh],', '8']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+9],', '9']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+0Ah],', '5']
mov ['eax,', '[ebp+var_1D0]']
mov ['byte', 'ptr', '[eax+0Bh],', '2']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1C4]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_208]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_208]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+9],', '5']
mov ['eax,', '[ebp+var_208]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['[ebp+var_24],', '3']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_68]']
jge ['loc_4CD1']
mov ['eax,', '[ebp+var_24]']
lea ['ecx,', '[eax+eax-2]']
cmp ['ecx,', '[ebp+var_68]']
jle ['short', 'loc_4C37']
mov ['edx,', '[ebp+var_68]']
mov ['[ebp+var_30C],', 'edx']
jmp ['short', 'loc_4C44']
mov ['eax,', '[ebp+var_24]']
lea ['ecx,', '[eax+eax-2]']
mov ['[ebp+var_30C],', 'ecx']
mov ['edx,', '[ebp+var_30C]']
mov ['[ebp+var_24],', 'edx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_208]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
jmp ['loc_4C14']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_48]']
rep ['movsd']
mov ['[ebp+var_3C],', '3']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_1D0]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+var_1D0]']
mov ['[edx+4],', 'eax']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_80],', '0']
lea ['eax,', '[ebp+var_A4]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_A4]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_A4]']
and ['eax,', '200h']
jz ['short', 'loc_4D87']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['loc_532F']
mov ['eax,', '[ebp+var_A4]']
and ['eax,', '0FFFFF7DFh']
or ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_1D0]']
mov ['edx,', '[ecx+4]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_1D0]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
mov ['ecx,', '[eax]']
neg ['ecx']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_208]']
mov ['[edx+4],', 'ecx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_208]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['[ebp+var_18],', '1']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1DC]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1DC]']
push ['edx']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_1DC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['loc_4F16']
mov ['eax,', '[ebp+var_208]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_208]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+9],', '1']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_208]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_40]']
sub ['ecx,', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
jmp ['loc_5045']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_208]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['[ebp+var_18],', '5']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1DC]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1C4]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_1DC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['loc_5045']
mov ['eax,', '[ebp+var_208]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_208]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax+9],', '1']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_208]']
push ['edx']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_40]']
sub ['ecx,', 'eax']
mov ['[ebp+var_40],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_1D0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_B0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_1D0]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+var_1D0]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
lea ['eax,', '[ebp+var_D4]']
push ['eax']
push ['1']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_1DC]']
push ['edx']
call ['_decTrim']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_1DC]']
mov ['ecx,', '[eax]']
lea ['edx,', '[ecx+ecx-1]']
cmp ['edx,', '[ebp+var_74]']
jle ['short', 'loc_50BD']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '820h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_52B5']
mov ['[ebp+var_214],', '0']
lea ['eax,', '[ebp+var_214]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1DC]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_214]']
and ['eax,', '200h']
jz ['short', 'loc_5112']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '820h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_52B5']
lea ['eax,', '[ebp+var_214]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+var_208]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_208]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5161']
mov ['eax,', '[ebp+var_208]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_5161']
mov ['eax,', '[ebp+var_208]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_5177']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '820h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_52B5']
mov ['eax,', '[ebp+var_1D0]']
mov ['ecx,', '[ebp+var_BC]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_220],', 'ecx']
jns ['short', 'loc_51A4']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '800h']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_52B5']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['[ebp+var_22C],', 'edx']
mov ['eax,', '[ebp+var_1D0]']
mov ['ecx,', '[ebp+var_22C]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_238],', 'ecx']
mov ['eax,', '[ebp+var_220]']
cmp ['eax,', '[ebp+var_238]']
jle ['short', 'loc_5203']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5203']
mov ['eax,', '[ebp+var_238]']
mov ['[ebp+var_220],', 'eax']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '400h']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_220]']
jge ['short', 'loc_522E']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_220],', 'eax']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '400h']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_220],', '0']
jle ['short', 'loc_52B5']
mov ['eax,', '[ebp+var_1D0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_5259']
mov ['ecx,', '[ebp+var_1D0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_30C],', 'eax']
jmp ['short', 'loc_5267']
mov ['ecx,', '[ebp+var_1D0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_30C],', 'edx']
mov ['eax,', '[ebp+var_220]']
push ['eax']
mov ['ecx,', '[ebp+var_30C]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1D0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_220]']
mov ['edx,', '[ebp+var_1D0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_1D0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_220]']
mov ['edx,', '[ebp+var_1D0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '2000h']
jz ['short', 'loc_5314']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax-1]']
mov ['[ebp+var_244],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
shl ['ecx,', '1']
cmp ['[ebp+var_244],', 'ecx']
jl ['short', 'loc_52F8']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '0FFFFCFFFh']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '20h']
jnz ['short', 'loc_5314']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '0FFFFDFFFh']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_1D0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['loc_47A1']
cmp ['[ebp+var_1A0],', '0']
jz ['short', 'loc_5347']
mov ['eax,', '[ebp+var_1A0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_1AC],', '0']
jz ['short', 'loc_535F']
mov ['eax,', '[ebp+var_1AC]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_1B8],', '0']
jz ['short', 'loc_5377']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_5397']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN71_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN70_0']
dd ['offset', '$LN57']
dd ['0FFFFFFB8h,', '1Ch']
dd ['offset', '$LN58']
dd ['0FFFFFFA4h,', '0Ch']
dd ['offset', '$LN59']
dd ['0FFFFFF80h,', '4']
dd ['offset', '$LN60']
dd ['0FFFFFF74h,', '4']
dd ['offset', '$LN61']
dd ['0FFFFFF68h,', '4']
dd ['offset', '$LN62']
dd ['0FFFFFF5Ch,', '4']
dd ['offset', '$LN63']
dd ['0FFFFFF2Ch,', '4']
dd ['offset', '$LN64']
dd ['0FFFFFEF4h,', '30h']
dd ['offset', '$LN65']
dd ['0FFFFFEB0h,', '3Ch']
dd ['offset', '$LN66_0']
dd ['0FFFFFE6Ch,', '3Ch']
dd ['offset', '$LN67_0']
dd ['0FFFFFE04h,', '18h']
dd ['offset', '$LN68_0']
dd ['0FFFFFDECh,', '4']
dd ['offset', '$LN69_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberSubtract_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_552C']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_19']
dd ['offset', '$LN4_17']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberToIntegralExact_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_55E5']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_55C9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['short', 'loc_55E3']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['short', 'loc_5649']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_5600']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['short', 'loc_5666']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_38]']
rep ['movsd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_28],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberQuantize_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_44]']
or ['eax,', '[ebp+var_24]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_5663']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_1']
dd ['offset', '$LN9_4']
dd ['0FFFFFFC8h,', '1Ch']
dd ['offset', '$LN10_3']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN11_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberToIntegralValue_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_24]']
rep ['movsd']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uprv_decNumberToIntegralExact_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '80h']
mov ['ecx,', '[ebp+arg_8]']
or ['eax,', '[ecx+14h]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN4_18']
dd ['offset', '$LN3']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberXor_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_57F2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_57F2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jnz ['short', 'loc_57F2']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_57F2']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_57F2']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_580F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_5A69']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_5846']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_5851']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_587D']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_5888']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_58B4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_58BF']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_58EB']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_58F6']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_5926']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
ja ['loc_5A35']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jbe ['short', 'loc_5940']
mov ['[ebp+var_59],', '0']
jmp ['short', 'loc_5948']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jbe ['short', 'loc_5956']
mov ['[ebp+var_65],', '0']
jmp ['short', 'loc_595E']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_65],', 'cl']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_65]']
or ['eax,', 'ecx']
jz ['loc_5A30']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_5986']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '1']
jge ['loc_5A30']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_65]']
xor ['eax,', 'ecx']
and ['eax,', '1']
jz ['short', 'loc_59B7']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'byte', 'ptr', '_DECPOWERS[edx*4]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cl']
movzx ['eax,', '[ebp+var_59]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_80],', 'edx']
movzx ['eax,', '[ebp+var_59]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_65]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
or ['edx,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'edx']
movzx ['eax,', '[ebp+var_65]']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['[ebp+var_65],', 'al']
cmp ['[ebp+var_80],', '1']
jle ['short', 'loc_5A16']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['80h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decStatus']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_5A69']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnz ['short', 'loc_5A2B']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
cmp ['[ebp+var_74],', 'eax']
jnz ['short', 'loc_5A2B']
jmp ['short', 'loc_5A30']
jmp ['loc_597D']
jmp ['loc_590B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberClass_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_5AF6']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_5AC0']
mov ['eax,', '1']
jmp ['loc_5B7E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_5AD3']
xor ['eax,', 'eax']
jmp ['loc_5B7E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_5AEC']
mov ['eax,', '2']
jmp ['loc_5B7E']
mov ['eax,', '9']
jmp ['loc_5B7E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberIsNormal_56']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_5B27']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_5B20']
mov ['eax,', '3']
jmp ['short', 'loc_5B7E']
mov ['eax,', '8']
jmp ['short', 'loc_5B7E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5B63']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_5B63']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_5B63']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_5B5C']
mov ['eax,', '5']
jmp ['short', 'loc_5B7E']
mov ['eax,', '6']
jmp ['short', 'loc_5B7E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_5B79']
mov ['eax,', '4']
jmp ['short', 'loc_5B7E']
mov ['eax,', '7']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberClassToString_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '8']
jnz ['short', 'loc_5BBF']
mov ['eax,', 'offset', '??_C@_07BJFEPEPA@?$CLNormal?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '3']
jnz ['short', 'loc_5BCC']
mov ['eax,', 'offset', '??_C@_07NPDLPNHH@?9Normal?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '6']
jnz ['short', 'loc_5BD9']
mov ['eax,', 'offset', '??_C@_05OIBNLAKE@?$CLZero?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '5']
jnz ['short', 'loc_5BE6']
mov ['eax,', 'offset', '??_C@_05DOEEFDLJ@?9Zero?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '7']
jnz ['short', 'loc_5BF3']
mov ['eax,', 'offset', '??_C@_0L@KDDEMJGN@?$CLSubnormal?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '4']
jnz ['short', 'loc_5C00']
mov ['eax,', 'offset', '??_C@_0L@ELIBADCO@?9Subnormal?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '9']
jnz ['short', 'loc_5C0D']
mov ['eax,', 'offset', '??_C@_09BGCMDMKA@?$CLInfinity?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '2']
jnz ['short', 'loc_5C1A']
mov ['eax,', 'offset', '??_C@_09BLDCEMOH@?9Infinity?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '1']
jnz ['short', 'loc_5C27']
mov ['eax,', 'offset', '??_C@_03ICJPMMHB@NaN?$AA@']
jmp ['short', 'loc_5C39']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_5C34']
mov ['eax,', 'offset', '??_C@_04NLILHOGP@sNaN?$AA@']
jmp ['short', 'loc_5C39']
mov ['eax,', 'offset', '??_C@_07DJMIGIHO@Invalid?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_07DJMIGIHO@Invalid?$AA@']
assume ['cs:_rdata']
public ['??_C@_04NLILHOGP@sNaN?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_03ICJPMMHB@NaN?$AA@']
assume ['cs:_rdata']
public ['??_C@_09BLDCEMOH@?9Infinity?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_09BGCMDMKA@?$CLInfinity?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0L@ELIBADCO@?9Subnormal?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0L@KDDEMJGN@?$CLSubnormal?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05DOEEFDLJ@?9Zero?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05OIBNLAKE@?$CLZero?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07NPDLPNHH@?9Normal?$AA@']
assume ['cs:_rdata']
public ['??_C@_07BJFEPEPA@?$CLNormal?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCopy_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_5CD2']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_5D7C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx+8]']
mov ['[eax+8],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx+9]']
mov ['[eax+9],', 'dl']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jle ['short', 'loc_5D79']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ah']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_5D2D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_5D38']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E8]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax+9]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ah']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5D65']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_5D79']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_5D53']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCopyAbs_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFF7Fh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCopyNegate_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
xor ['ecx,', '80h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberCopySign_56 proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
mov ['[ebp+var_5],', 'cl']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFF7Fh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
movzx ['eax,', '[ebp+var_5]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
or ['edx,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'dl']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberGetBCD_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[edx+ecx-1]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5EFA']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_5F0E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_5EE8']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberSetBCD_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_5F52']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_5F5D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_DC]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5F87']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_5F9E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_5F75']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberIsNormal_56 proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_5FDE']
xor ['eax,', 'eax']
jmp ['short', 'loc_6027']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6001']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_6001']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_6001']
xor ['eax,', 'eax']
jmp ['short', 'loc_6027']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax-1]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_6022']
xor ['eax,', 'eax']
jmp ['short', 'loc_6027']
mov ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberIsSubnormal_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_605E']
xor ['eax,', 'eax']
jmp ['short', 'loc_60A7']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6081']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_6081']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_6081']
xor ['eax,', 'eax']
jmp ['short', 'loc_60A7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax-1]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_60A5']
mov ['eax,', '1']
jmp ['short', 'loc_60A7']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberTrim_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['0']
lea ['eax,', '[ebp+var_30]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['1']
push ['0']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decTrim']
add ['esp,', '14h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_21']
dd ['offset', '$LN3_0']
dd ['0FFFFFFD0h,', '1Ch']
dd ['offset', '$LN4_19']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberVersion_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '??_C@_0P@PPAFNJNB@decNumber?53?461?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0P@PPAFNJNB@decNumber?53?461?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_decNumberZero_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decToString	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+Dest],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_622D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_6238']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_6266']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['loc_62FF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_62AC']
push ['offset', '??_C@_03EJEJBNFP@Inf?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
push ['offset', '??_C@_05KMOPHDFI@inity?$AA@']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '3']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
jmp ['loc_6A3C']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_62C7']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '73h']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
push ['offset', '??_C@_03ICJPMMHB@NaN?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '3']
mov ['[ebp+Dest],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_62FA']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_62FF']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_62FF']
jmp ['loc_6A3C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_631B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_6326']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_148],', 'edx']
mov ['eax,', '[ebp+var_148]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['loc_6463']
jmp ['short', 'loc_6357']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_44],', 'eax']
jb ['loc_6458']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_6383']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jl ['loc_644C']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '_DECPOWERS[eax*4]']
shl ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jbe ['short', 'loc_6401']
mov ['eax,', '[ebp+var_5C]']
shl ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_63D2']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '8']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_63F9']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6420']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6447']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
jmp ['loc_6371']
mov ['[ebp+var_2C],', '0']
jmp ['loc_634E']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['loc_6A3C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_6485']
cmp ['[ebp+var_20],', '0FFFFFFFBh']
jge ['loc_6537']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx-1]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '1']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_6537']
cmp ['[ebp+var_14],', '0']
jz ['loc_6537']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_64DA']
mov ['eax,', '[ebp+var_14]']
neg ['eax']
cdq
mov ['ecx,', '3']
idiv ['ecx']
mov ['[ebp+var_68],', 'edx']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_64D8']
mov ['eax,', '3']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_64E8']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '3']
idiv ['ecx']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6510']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_6510']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_651B']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6537']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_6537']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '3']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '2']
sub ['eax,', '[ebp+var_68]']
neg ['eax']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_20],', '0']
jle ['loc_67AD']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_656D']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+Dest]']
add ['ecx,', '1']
mov ['[ebp+Dest],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_20],', '0']
jle ['loc_6665']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_65A6']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_44],', 'eax']
jnz ['short', 'loc_658D']
jmp ['loc_6665']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '_DECPOWERS[eax*4]']
shl ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jbe ['short', 'loc_661A']
mov ['eax,', '[ebp+var_5C]']
shl ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_65EB']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '8']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6612']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6639']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6660']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
jmp ['loc_6552']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax]']
jge ['loc_6786']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '2Eh']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
jmp ['short', 'loc_6696']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_66C5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_44],', 'eax']
jnz ['short', 'loc_66AC']
jmp ['loc_6784']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '_DECPOWERS[eax*4]']
shl ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jbe ['short', 'loc_6739']
mov ['eax,', '[ebp+var_5C]']
shl ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_670A']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '8']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6731']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6758']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_677F']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
jmp ['loc_6684']
jmp ['short', 'loc_67A8']
jmp ['short', 'loc_679A']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+Dest]']
add ['ecx,', '1']
mov ['[ebp+Dest],', 'ecx']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_67A8']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
jmp ['short', 'loc_6788']
jmp ['loc_68EF']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '2Eh']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
jmp ['short', 'loc_67DF']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+Dest]']
add ['ecx,', '1']
mov ['[ebp+Dest],', 'ecx']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_67ED']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
jmp ['short', 'loc_67CD']
jmp ['short', 'loc_6801']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_6830']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_44],', 'eax']
jnz ['short', 'loc_6817']
jmp ['loc_68EF']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '_DECPOWERS[eax*4]']
shl ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jbe ['short', 'loc_68A4']
mov ['eax,', '[ebp+var_5C]']
shl ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6875']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '8']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_689C']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_68C3']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_68EA']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
jmp ['loc_67EF']
cmp ['[ebp+var_14],', '0']
jz ['loc_6A36']
mov ['[ebp+var_7D],', '0']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '45h']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '2Bh']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_6936']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax-1],', '2Dh']
mov ['eax,', '[ebp+var_14]']
neg ['eax']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_2C],', '9']
jmp ['short', 'loc_6948']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jl ['loc_6A36']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '30h']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '_DECPOWERS[eax*4]']
shl ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jbe ['short', 'loc_69C6']
mov ['eax,', '[ebp+var_5C]']
shl ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6997']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '8']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_69BE']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_69E5']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jb ['short', 'loc_6A0C']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+Dest]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jnz ['short', 'loc_6A24']
movzx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jnz ['short', 'loc_6A24']
jmp ['loc_693F']
mov ['[ebp+var_7D],', '1']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '1']
mov ['[ebp+Dest],', 'eax']
jmp ['loc_693F']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_05KMOPHDFI@inity?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03EJEJBNFP@Inf?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decAddOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '214h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_214]']
mov ['ecx,', '85h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C4],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
xor ['ecx,', 'eax']
movzx ['edx,', '[ebp+arg_10]']
xor ['ecx,', 'edx']
and ['ecx,', '80h']
mov ['[ebp+var_45],', 'cl']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
jz ['loc_6B88']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
and ['ecx,', '30h']
jz ['short', 'loc_6B07']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['short', 'loc_6B83']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_6B4E']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_6B3C']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_6B3C']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_7440']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
mov ['[ebp+var_39],', 'cl']
jmp ['short', 'loc_6B64']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
movzx ['edx,', '[ebp+arg_10]']
xor ['ecx,', 'edx']
and ['ecx,', '80h']
mov ['[ebp+var_39],', 'cl']
movzx ['eax,', '[ebp+var_39]']
or ['eax,', '40h']
mov ['[ebp+var_39],', 'al']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_39]']
mov ['[eax+8],', 'cl']
jmp ['loc_7440']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['loc_6CF4']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['loc_6CF4']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['loc_6CF4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_F4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_39],', 'cl']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
movzx ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
xor ['edx,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_F4]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_E8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6C67']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_6C67']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_6C67']
cmp ['[ebp+var_E8],', '0']
jge ['short', 'loc_6C44']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_F4]']
mov ['[eax+4],', 'ecx']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_6C65']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '6']
jz ['short', 'loc_6C5E']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
jmp ['short', 'loc_6C65']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '80h']
jmp ['short', 'loc_6CD7']
cmp ['[ebp+var_E8],', '0']
jge ['short', 'loc_6CD7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_E8]']
mov ['edx,', '[ebp+arg_C]']
cmp ['ecx,', '[edx]']
jle ['short', 'loc_6CA2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '800h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_E8]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_E8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_7440']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['loc_6DEF']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['loc_6DEF']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['loc_6DEF']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10C],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_39],', 'cl']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10C]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_100],', 'ecx']
jns ['short', 'loc_6DD2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_100]']
mov ['edx,', '[ebp+arg_C]']
cmp ['ecx,', '[edx]']
jle ['short', 'loc_6D9D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_100],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '800h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_100]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_100]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_7440']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_DC],', 'edx']
jnz ['loc_6F65']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '1']
jg ['loc_6F65']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jl ['loc_6F65']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
cmp ['[eax+4],', 'edx']
jg ['loc_6F65']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_D0]']
jg ['loc_6F65']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_D0]']
jg ['loc_6F65']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_118],', 'ecx']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jnz ['short', 'loc_6EDC']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
add ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_118],', 'ecx']
cmp ['[ebp+var_118],', '9']
jg ['short', 'loc_6ED7']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jge ['short', 'loc_6EAE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_118]']
cmp ['edx,', '_DECPOWERS[ecx*4]']
jge ['short', 'loc_6ED7']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_6EC6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_118]']
mov ['[eax+9],', 'cl']
jmp ['loc_7440']
jmp ['loc_6F65']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['edx,', '[ebp+var_118]']
sub ['edx,', 'ecx']
mov ['[ebp+var_118],', 'edx']
cmp ['[ebp+var_118],', '0']
jle ['short', 'loc_6F65']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_6F12']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_118]']
mov ['[eax+9],', 'cl']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_6F3A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_210],', 'eax']
jmp ['short', 'loc_6F45']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_210],', 'edx']
mov ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
jmp ['loc_7440']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_39],', 'cl']
mov ['[ebp+var_24],', '1']
cmp ['[ebp+var_DC],', '0']
jz ['loc_7104']
mov ['[ebp+var_121],', '0']
cmp ['[ebp+var_DC],', '0']
jge ['short', 'loc_6FD6']
mov ['eax,', '[ebp+var_DC]']
neg ['eax']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
movzx ['edx,', '[ebp+arg_10]']
xor ['ecx,', 'edx']
mov ['[ebp+var_39],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_130],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_130]']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_121],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_DC]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_D0]']
lea ['eax,', '[eax+edx+1]']
cmp ['ecx,', 'eax']
jle ['loc_70B3']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_D0]']
sub ['ecx,', '[eax]']
mov ['[ebp+var_13C],', 'ecx']
mov ['[ebp+var_30],', '1']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_7020']
mov ['eax,', '[ebp+var_30]']
neg ['eax']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
cmp ['[ebp+var_13C],', '0']
jle ['short', 'loc_7078']
mov ['eax,', '[ebp+var_13C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_13C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
movzx ['eax,', '[ebp+var_121]']
test ['eax,', 'eax']
jnz ['short', 'loc_7096']
movzx ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
xor ['edx,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'dl']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_7440']
mov ['eax,', '[ebp+var_DC]']
add ['eax,', '1']
cmp ['eax,', '31h']
jg ['short', 'loc_70D6']
mov ['ecx,', '[ebp+var_DC]']
movzx ['edx,', 'byte_1[ecx]']
mov ['[ebp+var_210],', 'edx']
jmp ['short', 'loc_70E5']
mov ['eax,', '[ebp+var_DC]']
add ['eax,', '1']
mov ['[ebp+var_210],', 'eax']
mov ['ecx,', '[ebp+var_210]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_DC]']
sub ['eax,', '[ebp+var_C]']
mov ['ecx,', '_DECPOWERS[eax*4]']
mov ['[ebp+var_24],', 'ecx']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_7114']
mov ['eax,', '[ebp+var_24]']
neg ['eax']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_DC]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_18]']
jle ['short', 'loc_7134']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_D0]']
jge ['short', 'loc_715A']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['loc_71D5']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_71D5']
cmp ['[ebp+var_18],', '31h']
jg ['short', 'loc_7172']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_210],', 'ecx']
jmp ['short', 'loc_717B']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_210],', 'edx']
mov ['eax,', '[ebp+var_210]']
add ['eax,', '1']
mov ['[ebp+var_148],', 'eax']
lea ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_148],', '5Ch']
jbe ['short', 'loc_71D5']
mov ['eax,', '[ebp+var_148]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0']
jnz ['short', 'loc_71CC']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_7440']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_54],', 'eax']
movzx ['eax,', '[ebp+var_39]']
and ['eax,', '80h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_7221']
mov ['ecx,', 'ds:?__LINE__Var@?1??decAddOp@@9@9@0911e54c']
add ['ecx,', '101h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@KDDHHPIP@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@FIPFOBLM@?$AAr?$AAh?$AAs?$AA?9?$AA?$DO?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_7252']
mov ['ecx,', 'ds:?__LINE__Var@?1??decAddOp@@9@9@0911e54c']
add ['ecx,', '102h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@KDDHHPIP@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@OPPHKMDO@?$AAl?$AAh?$AAs?$AA?9?$AA?$DO?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_726E']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_210],', 'eax']
jmp ['short', 'loc_7279']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_210],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_7295']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_214],', 'eax']
jmp ['short', 'loc_72A0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_214],', 'edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+var_214]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
push ['eax']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_72FC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
neg ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
xor ['ecx,', '80h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_54],', 'eax']
jz ['short', 'loc_737C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_D0]']
jle ['short', 'loc_735A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_7337']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_210],', 'eax']
jmp ['short', 'loc_7342']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_210],', 'edx']
mov ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decSetCoeff']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_7398']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_210],', 'eax']
jmp ['short', 'loc_73A3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_210],', 'edx']
mov ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7438']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_7438']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_7438']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_7438']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
and ['ecx,', '20h']
jnz ['short', 'loc_7438']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax+0Ch],', '6']
jnz ['short', 'loc_7425']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
jmp ['short', 'loc_7438']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFF7Fh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
xor ['eax,', 'eax']
jnz ['loc_6A99']
cmp ['[ebp+var_C4],', '0']
jz ['short', 'loc_7458']
mov ['eax,', '[ebp+var_C4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN70_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '214h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN69_1']
dd ['offset', '$LN67_1']
dd ['0FFFFFF48h,', '5Ch']
dd ['offset', '$LN68_1']
assume ['cs:_rdata']
public ['??_C@_1CA@OPPHKMDO@?$AAl?$AAh?$AAs?$AA?9?$AA?$DO?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<lhs->']
dw ['3Eh']
unicode ['0,', '<digits', '>']
dw ['3Eh']
unicode ['0,', '<', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1CA@FIPFOBLM@?$AAr?$AAh?$AAs?$AA?9?$AA?$DO?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<rhs->']
dw ['3Eh']
unicode ['0,', '<digits', '>']
dw ['3Eh']
unicode ['0,', '<', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1FI@KDDHHPIP@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\decnumber.c>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??decAddOp@@9@9@0911e54c']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decDivideOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '388h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_388]']
mov ['ecx,', '0E2h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_50],', '0']
lea ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_EC],', '0']
mov ['[ebp+var_158],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_194],', 'ecx']
mov ['[ebp+var_1AC],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
xor ['ecx,', 'eax']
and ['ecx,', '80h']
mov ['[ebp+var_1B5],', 'cl']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
jz ['loc_7727']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
and ['ecx,', '30h']
jz ['short', 'loc_7630']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_768C']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_7651']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '50h']
jz ['short', 'loc_7666']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
movzx ['eax,', '[ebp+var_1B5]']
or ['eax,', '40h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
jmp ['loc_86A0']
jmp ['loc_7727']
mov ['[ebp+var_188],', '0']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '50h']
jz ['short', 'loc_76C0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
jmp ['short', 'loc_7707']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1B5]']
mov ['[eax+8],', 'cl']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jz ['short', 'loc_7707']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '400h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['loc_77D5']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['loc_77D5']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['loc_77D5']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_778C']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_778C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_778C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '8']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_77D0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '50h']
jz ['short', 'loc_77B3']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_77D0']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '2']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
movzx ['eax,', '[ebp+var_1B5]']
or ['eax,', '40h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['loc_78CA']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['loc_78CA']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['loc_78CA']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jz ['short', 'loc_786C']
mov ['[ebp+var_188],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_1A0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1B5]']
mov ['[eax+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1A0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['short', 'loc_78C5']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '20h']
jz ['short', 'loc_788F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1B5]']
mov ['[eax+8],', 'cl']
jmp ['short', 'loc_78C5']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_1A0],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1A0]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_78C5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1A0]']
mov ['[eax+4],', 'ecx']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+arg_8]']
add ['edx,', '[eax]']
sub ['ecx,', 'edx']
mov ['[ebp+var_1A0],', 'ecx']
jns ['loc_798C']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '80h']
jz ['loc_798C']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '20h']
jz ['short', 'loc_7923']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1B5]']
mov ['[eax+8],', 'cl']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jg ['short', 'loc_798C']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '40h']
jnz ['short', 'loc_7943']
cmp ['[ebp+var_1A0],', '0FFFFFFFFh']
jge ['short', 'loc_798C']
mov ['[ebp+var_188],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_86A0']
mov ['eax,', '[ebp+var_194]']
add ['eax,', '1']
cmp ['eax,', '31h']
jg ['short', 'loc_79AF']
mov ['ecx,', '[ebp+var_194]']
movzx ['edx,', 'byte_1[ecx]']
mov ['[ebp+var_388],', 'edx']
jmp ['short', 'loc_79BE']
mov ['eax,', '[ebp+var_194]']
add ['eax,', '1']
mov ['[ebp+var_388],', 'eax']
mov ['ecx,', '[ebp+var_388]']
mov ['[ebp+var_68],', 'ecx']
cmp ['[ebp+var_68],', '2Fh']
jbe ['short', 'loc_79FA']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_79F4']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_86A0']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_194]']
lea ['eax,', '[ecx+edx-1]']
mov ['[ebp+var_164],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_164]']
jle ['short', 'loc_7A27']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '31h']
jg ['short', 'loc_7A45']
mov ['eax,', '[ebp+var_164]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_388],', 'ecx']
jmp ['short', 'loc_7A51']
mov ['edx,', '[ebp+var_164]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_388]']
add ['eax,', '2']
mov ['[ebp+var_134],', 'eax']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jnz ['short', 'loc_7A7A']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
cmp ['eax,', '49h']
jbe ['short', 'loc_7AC7']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_EC],', '0']
jnz ['short', 'loc_7ABB']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_86A0']
mov ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_134]']
mov ['ecx,', '[ebp+var_E0]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_7AF9']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_388],', 'eax']
jmp ['short', 'loc_7B04']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_388]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_1D0],', 'edx']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_1C4],', 'eax']
jmp ['short', 'loc_7B43']
mov ['eax,', '[ebp+var_1D0]']
sub ['eax,', '1']
mov ['[ebp+var_1D0],', 'eax']
mov ['ecx,', '[ebp+var_1C4]']
sub ['ecx,', '1']
mov ['[ebp+var_1C4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
cmp ['[ebp+var_1D0],', 'eax']
jb ['short', 'loc_7B63']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[ebp+var_1D0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_7B25']
jmp ['short', 'loc_7B74']
mov ['eax,', '[ebp+var_1C4]']
sub ['eax,', '1']
mov ['[ebp+var_1C4],', 'eax']
mov ['eax,', '[ebp+var_1C4]']
cmp ['eax,', '[ebp+var_E0]']
jb ['short', 'loc_7B8D']
mov ['eax,', '[ebp+var_1C4]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_7B65']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_7BB5']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_388],', 'eax']
jmp ['short', 'loc_7BC0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_388]']
mov ['[ebp+var_140],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '9']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_104]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_140],', '1']
jle ['short', 'loc_7C15']
mov ['eax,', '[ebp+var_11C]']
add ['eax,', '1']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
imul ['ecx,', '0Ah']
mov ['[ebp+var_128],', 'ecx']
cmp ['[ebp+var_140],', '1']
jle ['short', 'loc_7C5E']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
add ['ecx,', '[ebp+var_128]']
mov ['[ebp+var_128],', 'ecx']
cmp ['[ebp+var_140],', '2']
jle ['short', 'loc_7C5E']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '1']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_1DC],', 'offset', 'byte_38']
jmp ['short', 'loc_7C79']
mov ['eax,', '[ebp+var_1DC]']
add ['eax,', '4']
mov ['[ebp+var_1DC],', 'eax']
mov ['eax,', '[ebp+var_F8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_1DC]']
cmp ['ecx,', '[edx]']
jb ['short', 'loc_7C9D']
mov ['eax,', '[ebp+var_1A0]']
sub ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
jmp ['short', 'loc_7C6A']
mov ['[ebp+var_1DC],', 'offset', 'byte_38']
jmp ['short', 'loc_7CB8']
mov ['eax,', '[ebp+var_1DC]']
add ['eax,', '4']
mov ['[ebp+var_1DC],', 'eax']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_1DC]']
cmp ['ecx,', '[edx]']
jb ['short', 'loc_7CDC']
mov ['eax,', '[ebp+var_1A0]']
add ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
jmp ['short', 'loc_7CA9']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jnz ['loc_7DDF']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_7D07']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_388],', 'eax']
jmp ['short', 'loc_7D12']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '[ebp+var_388]']
mov ['[ebp+var_158],', 'eax']
cmp ['[ebp+var_1A0],', '0']
jge ['short', 'loc_7D3D']
mov ['eax,', '[ebp+var_1A0]']
neg ['eax']
mov ['[ebp+var_1F4],', 'eax']
jmp ['short', 'loc_7D5C']
mov ['eax,', '[ebp+var_1A0]']
and ['eax,', '80000000h']
jns ['short', 'loc_7D4F']
dec ['eax']
or ['eax,', '0FFFFFFFFh']
inc ['eax']
mov ['ecx,', '1']
sub ['ecx,', 'eax']
mov ['[ebp+var_1F4],', 'ecx']
mov ['eax,', '[ebp+var_1F4]']
push ['eax']
mov ['ecx,', '[ebp+var_134]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1A0]']
add ['eax,', '[ebp+var_1F4]']
mov ['[ebp+var_1A0],', 'eax']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_1F4]']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_200],', 'eax']
jmp ['short', 'loc_7DC9']
mov ['eax,', '[ebp+var_1F4]']
sub ['eax,', '1']
mov ['[ebp+var_1F4],', 'eax']
mov ['ecx,', '[ebp+var_200]']
sub ['ecx,', '1']
mov ['[ebp+var_200],', 'ecx']
cmp ['[ebp+var_1F4],', '1']
jl ['short', 'loc_7DDD']
mov ['eax,', '[ebp+var_200]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_7DAB']
jmp ['short', 'loc_7E25']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_F8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_110]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jge ['short', 'loc_7E25']
mov ['eax,', '[ebp+var_14C]']
sub ['eax,', '1']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_1A0]']
sub ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_5C],', 'edx']
mov ['[ebp+var_179],', '0']
jmp ['short', 'loc_7E58']
mov ['eax,', '[ebp+var_F8]']
sub ['eax,', '1']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_F8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7E84']
mov ['eax,', '[ebp+var_F8]']
cmp ['eax,', '[ebp+var_E0]']
jbe ['short', 'loc_7E84']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
jmp ['short', 'loc_7E49']
mov ['eax,', '[ebp+var_134]']
cmp ['eax,', '[ebp+var_14C]']
jge ['short', 'loc_7E97']
jmp ['loc_8050']
mov ['eax,', '[ebp+var_134]']
cmp ['eax,', '[ebp+var_14C]']
jnz ['loc_7FA6']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_218],', 'eax']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_20C],', 'eax']
jmp ['short', 'loc_7EE1']
mov ['eax,', '[ebp+var_20C]']
sub ['eax,', '1']
mov ['[ebp+var_20C],', 'eax']
mov ['ecx,', '[ebp+var_218]']
sub ['ecx,', '1']
mov ['[ebp+var_218],', 'ecx']
mov ['[ebp+var_221],', '0']
mov ['eax,', '[ebp+var_218]']
cmp ['eax,', '[ebp+var_104]']
jb ['short', 'loc_7F04']
mov ['eax,', '[ebp+var_218]']
mov ['cl,', '[eax]']
mov ['[ebp+var_221],', 'cl']
mov ['eax,', '[ebp+var_20C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_221]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_7F1A']
jmp ['short', 'loc_7F2C']
mov ['eax,', '[ebp+var_20C]']
cmp ['eax,', '[ebp+var_E0]']
jnz ['short', 'loc_7F2A']
jmp ['short', 'loc_7F2C']
jmp ['short', 'loc_7EC3']
mov ['eax,', '[ebp+var_20C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_221]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_7F45']
jmp ['loc_8050']
mov ['eax,', '[ebp+var_20C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_221]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_7F7F']
mov ['al,', '[ebp+var_179]']
add ['al,', '1']
mov ['[ebp+var_179],', 'al']
mov ['eax,', '[ebp+var_E0]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_134],', '1']
jmp ['loc_8050']
mov ['eax,', '[ebp+var_F8]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_F8]']
movzx ['edx,', 'byte', 'ptr', '[ecx-1]']
add ['eax,', 'edx']
cdq
idiv ['[ebp+var_128]']
mov ['[ebp+var_170],', 'eax']
jmp ['short', 'loc_7FCB']
mov ['eax,', '[ebp+var_F8]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_F8]']
movzx ['edx,', 'byte', 'ptr', '[ecx-1]']
add ['eax,', 'edx']
cdq
idiv ['[ebp+var_11C]']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '0']
jnz ['short', 'loc_7FDE']
mov ['[ebp+var_170],', '1']
movzx ['eax,', '[ebp+var_179]']
add ['eax,', '[ebp+var_170]']
mov ['[ebp+var_179],', 'al']
mov ['eax,', '[ebp+var_14C]']
sub ['eax,', '[ebp+var_140]']
mov ['[ebp+var_1E8],', 'eax']
mov ['eax,', '[ebp+var_170]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
add ['ecx,', '[ebp+var_1E8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_140]']
push ['edx']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+var_134]']
sub ['ecx,', '[ebp+var_1E8]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
add ['edx,', '[ebp+var_1E8]']
push ['edx']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
jmp ['loc_7E47']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_8061']
movzx ['eax,', '[ebp+var_179]']
test ['eax,', 'eax']
jz ['short', 'loc_80DC']
mov ['eax,', '[ebp+var_5C]']
mov ['cl,', '[ebp+var_179]']
mov ['[eax],', 'cl']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_80B4']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_1DC],', 'offset', 'byte_38']
jmp ['short', 'loc_8096']
mov ['eax,', '[ebp+var_1DC]']
add ['eax,', '4']
mov ['[ebp+var_1DC],', 'eax']
movzx ['eax,', '[ebp+var_179]']
mov ['ecx,', '[ebp+var_1DC]']
cmp ['eax,', '[ecx]']
jb ['short', 'loc_80B2']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_8087']
jmp ['short', 'loc_80BD']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_194]']
jle ['short', 'loc_80DC']
jmp ['short', 'loc_8151']
mov ['eax,', '[ebp+var_E0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8118']
cmp ['[ebp+var_134],', '1']
jnz ['short', 'loc_8118']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '50h']
jz ['short', 'loc_80FD']
jmp ['short', 'loc_8151']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jz ['short', 'loc_8118']
mov ['eax,', '[ebp+var_1A0]']
cmp ['eax,', '[ebp+var_1AC]']
jg ['short', 'loc_8118']
jmp ['short', 'loc_8151']
cmp ['[ebp+var_1A0],', '0']
jnz ['short', 'loc_812E']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jnz ['short', 'loc_812E']
jmp ['short', 'loc_8151']
mov ['eax,', '[ebp+var_14C]']
sub ['eax,', '1']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_1A0]']
sub ['eax,', '1']
mov ['[ebp+var_1A0],', 'eax']
jmp ['loc_7E40']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_816D']
mov ['[ebp+var_74],', '1']
mov ['[ebp+var_80],', '1']
mov ['eax,', '[ebp+var_5C]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_8176']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_188],', '0']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '80h']
jz ['short', 'loc_81B0']
mov ['eax,', '[ebp+var_E0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_81A1']
cmp ['[ebp+var_134],', '1']
jle ['short', 'loc_81AB']
mov ['[ebp+var_188],', '1']
jmp ['loc_863C']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '[ebp+var_1A0]']
cmp ['eax,', '[ebp+var_194]']
jle ['short', 'loc_81D3']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '4']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_86A0']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '50h']
jz ['loc_863C']
mov ['[ebp+var_239],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_1B5],', 'cl']
mov ['eax,', '[ebp+var_E0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8279']
cmp ['[ebp+var_134],', '1']
jnz ['short', 'loc_8279']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_260],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_260]']
jge ['short', 'loc_822F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_260],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_260]']
mov ['[eax+4],', 'ecx']
movzx ['eax,', '[ebp+var_1B5]']
and ['eax,', '80h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
jmp ['loc_86A0']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '1']
jz ['short', 'loc_828B']
mov ['[ebp+var_239],', '1']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_248],', 'eax']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_254],', 'eax']
mov ['eax,', '[ebp+var_158]']
add ['eax,', '[ebp+var_1A0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+arg_8]']
add ['eax,', '[edx+4]']
mov ['[ebp+var_230],', 'eax']
mov ['eax,', '[ebp+var_158]']
cmp ['eax,', '[ebp+var_230]']
jge ['short', 'loc_82D5']
mov ['eax,', '[ebp+var_158]']
mov ['[ebp+var_230],', 'eax']
mov ['eax,', '[ebp+var_230]']
push ['eax']
mov ['ecx,', '[ebp+var_134]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_E0]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '31h']
jg ['short', 'loc_8332']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_388],', 'ecx']
jmp ['short', 'loc_833B']
mov ['edx,', '[ebp+var_80]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_388]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_1A0],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_1A0]']
jge ['short', 'loc_836A']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_1A0],', 'ecx']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '10h']
jz ['loc_863C']
push ['1']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
mov ['[ebp+var_278],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_83B9']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_388],', 'eax']
jmp ['short', 'loc_83C4']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_1A0]']
push ['ecx']
mov ['edx,', '[ebp+var_388]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '9']
push ['eax']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
call ['_decUnitCompare']
add ['esp,', '14h']
mov ['[ebp+var_26C],', 'eax']
cmp ['[ebp+var_26C],', '80000000h']
jnz ['short', 'loc_8416']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_86A0']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_284],', 'eax']
jmp ['short', 'loc_8430']
mov ['eax,', '[ebp+var_284]']
add ['eax,', '1']
mov ['[ebp+var_284],', 'eax']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '[ebp+var_278]']
cmp ['[ebp+var_284],', 'eax']
jnb ['short', 'loc_848C']
mov ['eax,', '[ebp+var_284]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '1']
mov ['[ebp+var_290],', 'ecx']
mov ['eax,', '[ebp+var_284]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_284]']
mov ['[ecx],', 'al']
cmp ['[ebp+var_290],', '0']
jnz ['short', 'loc_8474']
jmp ['short', 'loc_8421']
mov ['eax,', '[ebp+var_284]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
add ['ecx,', '5']
mov ['edx,', '[ebp+var_284]']
mov ['[edx-1],', 'cl']
jmp ['short', 'loc_8421']
cmp ['[ebp+var_26C],', '0']
jg ['short', 'loc_84B1']
cmp ['[ebp+var_26C],', '0']
jnz ['loc_863C']
movzx ['eax,', '[ebp+var_239]']
test ['eax,', 'eax']
jz ['loc_863C']
mov ['[ebp+var_2BD],', '0']
mov ['eax,', '[ebp+var_254]']
cmp ['eax,', '[ebp+var_194]']
jnz ['short', 'loc_8535']
mov ['eax,', '[ebp+var_248]']
mov ['[ebp+var_284],', 'eax']
jmp ['short', 'loc_84E3']
mov ['eax,', '[ebp+var_284]']
add ['eax,', '1']
mov ['[ebp+var_284],', 'eax']
cmp ['[ebp+var_254],', '1']
jle ['short', 'loc_84FE']
mov ['eax,', '[ebp+var_284]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '9']
jz ['short', 'loc_84FC']
jmp ['short', 'loc_8535']
jmp ['short', 'loc_8524']
mov ['eax,', '[ebp+var_284]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_254]']
mov ['eax,', '_DECPOWERS[edx*4]']
sub ['eax,', '1']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_8522']
mov ['[ebp+var_2BD],', '1']
jmp ['short', 'loc_8535']
mov ['eax,', '[ebp+var_254]']
sub ['eax,', '1']
mov ['[ebp+var_254],', 'eax']
jmp ['short', 'loc_84D4']
movzx ['eax,', '[ebp+var_2BD]']
test ['eax,', 'eax']
jz ['short', 'loc_8552']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '4']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_86A0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_1A0]']
mov ['[ebp+var_29C],', 'ecx']
mov ['eax,', '[ebp+var_29C]']
mov ['[ebp+var_2A8],', 'eax']
mov ['eax,', '[ebp+var_29C]']
and ['eax,', '80000000h']
jns ['short', 'loc_8582']
dec ['eax']
or ['eax,', '0FFFFFFFFh']
inc ['eax']
mov ['[ebp+var_2B4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_85A4']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_388],', 'eax']
jmp ['short', 'loc_85AF']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_2B4]']
mov ['ecx,', '_DECPOWERS[eax*4]']
neg ['ecx']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_2A8]']
push ['eax']
mov ['ecx,', '[ebp+var_388]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '9']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
neg ['eax']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '31h']
jg ['short', 'loc_8618']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_388],', 'ecx']
jmp ['short', 'loc_8621']
mov ['edx,', '[ebp+var_80]']
mov ['[ebp+var_388],', 'edx']
mov ['eax,', '[ebp+var_388]']
mov ['[ebp+var_74],', 'eax']
movzx ['eax,', '[ebp+var_1B5]']
xor ['eax,', '80h']
mov ['[ebp+var_1B5],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1A0]']
mov ['[eax+4],', 'ecx']
movzx ['eax,', '[ebp+var_1B5]']
and ['eax,', '80h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decSetCoeff']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_188]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['loc_75C2']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_86B8']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_86CA']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN146']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '388h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN145']
dd ['offset', '$LN142']
dd ['0FFFFFF2Ch,', '49h']
dd ['offset', '$LN143']
dd ['0FFFFFE78h,', '4']
dd ['offset', '$LN144']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decMultiplyOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '424h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_424]']
mov ['ecx,', '109h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_54],', '0']
lea ['eax,', '[ebp+var_150]']
mov ['[ebp+var_15C],', 'eax']
mov ['[ebp+var_168],', '0']
lea ['eax,', '[ebp+var_198]']
mov ['[ebp+var_1A4],', 'eax']
mov ['[ebp+var_1B0],', '0']
lea ['eax,', '[ebp+var_258]']
mov ['[ebp+var_264],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
xor ['ecx,', 'eax']
and ['ecx,', '80h']
mov ['[ebp+var_2D],', 'cl']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
jz ['loc_88AB']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
and ['ecx,', '30h']
jz ['short', 'loc_881C']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_925A']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_8847']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8847']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_8847']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_8872']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jnz ['short', 'loc_888A']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_888A']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_888A']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_888A']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_925A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
movzx ['eax,', '[ebp+var_2D]']
or ['eax,', '40h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_925A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_88CF']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_334],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_334]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '2']
jle ['loc_8FB5']
mov ['eax,', '[ebp+arg_4]']
mov ['eax,', '[eax]']
add ['eax,', '8']
cdq
mov ['ecx,', '9']
idiv ['ecx']
mov ['[ebp+var_2AC],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['eax,', '[eax]']
add ['eax,', '8']
cdq
mov ['ecx,', '9']
idiv ['ecx']
mov ['[ebp+var_2B8],', 'eax']
mov ['eax,', '[ebp+var_2AC]']
add ['eax,', '[ebp+var_2B8]']
mov ['[ebp+var_2C4],', 'eax']
mov ['eax,', '[ebp+var_2AC]']
shl ['eax,', '2']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '28h']
jle ['short', 'loc_8949']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_168],', 'eax']
mov ['eax,', '[ebp+var_168]']
mov ['[ebp+var_15C],', 'eax']
mov ['eax,', '[ebp+var_2B8]']
shl ['eax,', '2']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '28h']
jle ['short', 'loc_8979']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1B0],', 'eax']
mov ['eax,', '[ebp+var_1B0]']
mov ['[ebp+var_1A4],', 'eax']
cmp ['[ebp+var_2C4],', '0FFFFFFFh']
jbe ['short', 'loc_89AC']
mov ['eax,', 'ds:?__LINE__Var@?1??decMultiplyOp@@9@9@0911e54c']
add ['eax,', '8Ah']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@KDDHHPIP@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1EI@JCJLIMFM@?$AAi?$AAa?$AAc?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?1?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA6?$AA4@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C4]']
shl ['eax,', '3']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_2C4]']
add ['eax,', '7']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_270],', 'eax']
mov ['eax,', '[ebp+var_270]']
mov ['ecx,', '[ebp+var_48]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_48],', 'edx']
cmp ['[ebp+var_48],', '0A0h']
jle ['short', 'loc_8A00']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_264],', 'eax']
cmp ['[ebp+var_15C],', '0']
jz ['short', 'loc_8A1B']
cmp ['[ebp+var_1A4],', '0']
jz ['short', 'loc_8A1B']
cmp ['[ebp+var_264],', '0']
jnz ['short', 'loc_8A2D']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['loc_9215']
mov ['eax,', '[ebp+var_264]']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_270]']
mov ['ecx,', '[ebp+var_264]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_264],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_2F8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '9']
mov ['[ebp+var_304],', 'edx']
mov ['eax,', '[ebp+var_15C]']
mov ['[ebp+var_27C],', 'eax']
jmp ['short', 'loc_8A7F']
mov ['eax,', '[ebp+var_27C]']
add ['eax,', '4']
mov ['[ebp+var_27C],', 'eax']
cmp ['[ebp+var_2F8],', '0']
jle ['loc_8B11']
mov ['[ebp+var_328],', '0']
mov ['eax,', '[ebp+var_27C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_8AD1']
mov ['eax,', '[ebp+var_328]']
add ['eax,', '1']
mov ['[ebp+var_328],', 'eax']
mov ['ecx,', '[ebp+var_304]']
add ['ecx,', '1']
mov ['[ebp+var_304],', 'ecx']
mov ['edx,', '[ebp+var_2F8]']
sub ['edx,', '1']
mov ['[ebp+var_2F8],', 'edx']
cmp ['[ebp+var_328],', '9']
jge ['short', 'loc_8B0C']
cmp ['[ebp+var_2F8],', '0']
jle ['short', 'loc_8B0C']
mov ['eax,', '[ebp+var_304]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_328]']
imul ['ecx,', '_DECPOWERS[edx*4]']
mov ['eax,', '[ebp+var_27C]']
add ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_27C]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_8AA4']
jmp ['loc_8A70']
mov ['eax,', '[ebp+var_27C]']
sub ['eax,', '4']
mov ['[ebp+var_294],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_2F8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '9']
mov ['[ebp+var_304],', 'edx']
mov ['eax,', '[ebp+var_1A4]']
mov ['[ebp+var_288],', 'eax']
jmp ['short', 'loc_8B54']
mov ['eax,', '[ebp+var_288]']
add ['eax,', '4']
mov ['[ebp+var_288],', 'eax']
cmp ['[ebp+var_2F8],', '0']
jle ['loc_8BE6']
mov ['[ebp+var_328],', '0']
mov ['eax,', '[ebp+var_288]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_8BA6']
mov ['eax,', '[ebp+var_328]']
add ['eax,', '1']
mov ['[ebp+var_328],', 'eax']
mov ['ecx,', '[ebp+var_304]']
add ['ecx,', '1']
mov ['[ebp+var_304],', 'ecx']
mov ['edx,', '[ebp+var_2F8]']
sub ['edx,', '1']
mov ['[ebp+var_2F8],', 'edx']
cmp ['[ebp+var_328],', '9']
jge ['short', 'loc_8BE1']
cmp ['[ebp+var_2F8],', '0']
jle ['short', 'loc_8BE1']
mov ['eax,', '[ebp+var_304]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_328]']
imul ['ecx,', '_DECPOWERS[edx*4]']
mov ['eax,', '[ebp+var_288]']
add ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_288]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_8B79']
jmp ['loc_8B45']
mov ['eax,', '[ebp+var_288]']
sub ['eax,', '4']
mov ['[ebp+var_2A0],', 'eax']
mov ['eax,', '[ebp+var_264]']
mov ['[ebp+var_31C],', 'eax']
jmp ['short', 'loc_8C12']
mov ['eax,', '[ebp+var_31C]']
add ['eax,', '8']
mov ['[ebp+var_31C],', 'eax']
mov ['eax,', '[ebp+var_2C4]']
mov ['ecx,', '[ebp+var_264]']
lea ['edx,', '[ecx+eax*8]']
cmp ['[ebp+var_31C],', 'edx']
jnb ['short', 'loc_8C3E']
mov ['eax,', '[ebp+var_31C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
jmp ['short', 'loc_8C03']
mov ['[ebp+var_2D0],', '12h']
mov ['eax,', '[ebp+var_1A4]']
mov ['[ebp+var_288],', 'eax']
jmp ['short', 'loc_8C65']
mov ['eax,', '[ebp+var_288]']
add ['eax,', '4']
mov ['[ebp+var_288],', 'eax']
mov ['eax,', '[ebp+var_288]']
cmp ['eax,', '[ebp+var_2A0]']
ja ['loc_8EC4']
mov ['eax,', '[ebp+var_288]']
sub ['eax,', '[ebp+var_1A4]']
sar ['eax,', '2']
mov ['ecx,', '[ebp+var_264]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_31C],', 'edx']
mov ['eax,', '[ebp+var_15C]']
mov ['[ebp+var_27C],', 'eax']
jmp ['short', 'loc_8CC1']
mov ['eax,', '[ebp+var_27C]']
add ['eax,', '4']
mov ['[ebp+var_27C],', 'eax']
mov ['ecx,', '[ebp+var_31C]']
add ['ecx,', '8']
mov ['[ebp+var_31C],', 'ecx']
mov ['eax,', '[ebp+var_27C]']
cmp ['eax,', '[ebp+var_294]']
ja ['short', 'loc_8CF9']
mov ['eax,', '[ebp+var_27C]']
mov ['eax,', '[eax]']
mov ['ecx,', '[ebp+var_288]']
mov ['edx,', '[ecx]']
mul ['edx']
mov ['ecx,', '[ebp+var_31C]']
add ['eax,', '[ecx]']
adc ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_31C]']
mov ['[ecx],', 'eax']
mov ['[ecx+4],', 'edx']
jmp ['short', 'loc_8CA3']
mov ['eax,', '[ebp+var_2D0]']
sub ['eax,', '1']
mov ['[ebp+var_2D0],', 'eax']
cmp ['[ebp+var_2D0],', '0']
jle ['short', 'loc_8D24']
mov ['eax,', '[ebp+var_288]']
cmp ['eax,', '[ebp+var_2A0]']
jz ['short', 'loc_8D24']
jmp ['loc_8C56']
mov ['[ebp+var_2D0],', '12h']
mov ['eax,', '[ebp+var_264]']
mov ['[ebp+var_31C],', 'eax']
jmp ['short', 'loc_8D4B']
mov ['eax,', '[ebp+var_31C]']
add ['eax,', '8']
mov ['[ebp+var_31C],', 'eax']
mov ['eax,', '[ebp+var_2C4]']
mov ['ecx,', '[ebp+var_264]']
lea ['edx,', '[ecx+eax*8]']
cmp ['[ebp+var_31C],', 'edx']
jnb ['loc_8EBF']
mov ['eax,', '[ebp+var_31C]']
mov ['[ebp+var_420],', 'eax']
mov ['ecx,', '[ebp+var_420]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
ja ['short', 'loc_8D90']
jb ['short', 'loc_8D8E']
mov ['edx,', '[ebp+var_420]']
cmp ['dword', 'ptr', '[edx],', '3B9ACA00h']
jnb ['short', 'loc_8D90']
jmp ['short', 'loc_8D3C']
mov ['eax,', '[ebp+var_31C]']
push ['0']
push ['3B9ACA00h']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[eax]']
push ['edx']
call ['__aulldiv']
mov ['[ebp+var_2E0],', 'eax']
mov ['[ebp+var_2DC],', 'edx']
cmp ['[ebp+var_2DC],', '0']
ja ['short', 'loc_8DDD']
jb ['short', 'loc_8DCC']
cmp ['[ebp+var_2E0],', '3B9ACA00h']
jnb ['short', 'loc_8DDD']
mov ['eax,', '[ebp+var_2E0]']
mov ['[ebp+var_2EC],', 'eax']
jmp ['loc_8E73']
push ['0']
push ['3B9ACA00h']
mov ['eax,', '[ebp+var_2DC]']
push ['eax']
mov ['ecx,', '[ebp+var_2E0]']
push ['ecx']
call ['__aulldiv']
mov ['[ebp+var_340],', 'eax']
mov ['eax,', '[ebp+var_340]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_31C]']
add ['eax,', '[edx+10h]']
adc ['ecx,', '[edx+14h]']
mov ['edx,', '[ebp+var_31C]']
mov ['[edx+10h],', 'eax']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_340]']
xor ['ecx,', 'ecx']
push ['0DE0B6B3h']
push ['0A7640000h']
push ['ecx']
push ['eax']
call ['__allmul']
mov ['ecx,', '[ebp+var_31C]']
mov ['esi,', '[ecx]']
sub ['esi,', 'eax']
mov ['eax,', '[ecx+4]']
sbb ['eax,', 'edx']
mov ['ecx,', '[ebp+var_31C]']
mov ['[ecx],', 'esi']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_340]']
mov ['ecx,', '3B9ACA00h']
mul ['ecx']
mov ['ecx,', '[ebp+var_2E0]']
sub ['ecx,', 'eax']
mov ['eax,', '[ebp+var_2DC]']
sbb ['eax,', 'edx']
mov ['[ebp+var_2EC],', 'ecx']
mov ['eax,', '[ebp+var_2EC]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_31C]']
add ['eax,', '[edx+8]']
adc ['ecx,', '[edx+0Ch]']
mov ['edx,', '[ebp+var_31C]']
mov ['[edx+8],', 'eax']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_2EC]']
mov ['ecx,', '3B9ACA00h']
mul ['ecx']
mov ['ecx,', '[ebp+var_31C]']
mov ['esi,', '[ecx]']
sub ['esi,', 'eax']
mov ['eax,', '[ecx+4]']
sbb ['eax,', 'edx']
mov ['ecx,', '[ebp+var_31C]']
mov ['[ecx],', 'esi']
mov ['[ecx+4],', 'eax']
jmp ['loc_8D3C']
jmp ['loc_8C56']
mov ['eax,', '[ebp+var_264]']
mov ['[ebp+var_31C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_310],', 'ecx']
jmp ['short', 'loc_8EEA']
mov ['eax,', '[ebp+var_31C]']
add ['eax,', '8']
mov ['[ebp+var_31C],', 'eax']
mov ['eax,', '[ebp+var_2C4]']
mov ['ecx,', '[ebp+var_264]']
lea ['edx,', '[ecx+eax*8]']
cmp ['[ebp+var_31C],', 'edx']
jnb ['loc_8FA4']
mov ['eax,', '[ebp+var_31C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_34C],', 'ecx']
mov ['[ebp+var_328],', '0']
jmp ['short', 'loc_8F3D']
mov ['eax,', '[ebp+var_328]']
add ['eax,', '1']
mov ['[ebp+var_328],', 'eax']
mov ['ecx,', '[ebp+var_310]']
add ['ecx,', '1']
mov ['[ebp+var_310],', 'ecx']
cmp ['[ebp+var_328],', '8']
jge ['short', 'loc_8F82']
mov ['eax,', '[ebp+var_34C]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
mov ['[ebp+var_358],', 'eax']
mov ['eax,', '[ebp+var_358]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_34C]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_310]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_358]']
mov ['[ebp+var_34C],', 'eax']
jmp ['short', 'loc_8F1F']
mov ['eax,', '[ebp+var_310]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_34C]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+var_310]']
add ['eax,', '1']
mov ['[ebp+var_310],', 'eax']
jmp ['loc_8EDB']
mov ['eax,', '[ebp+var_310]']
sub ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_917E']
lea ['eax,', '[ebp+var_F0]']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_8FDA']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_420],', 'eax']
jmp ['short', 'loc_8FE5']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_420],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_9001']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_424],', 'eax']
jmp ['short', 'loc_900C']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_424],', 'edx']
mov ['eax,', '[ebp+var_420]']
add ['eax,', '[ebp+var_424]']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '91h']
jle ['short', 'loc_9051']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jnz ['short', 'loc_904B']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['loc_9215']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+var_3C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_120],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_9084']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_420],', 'eax']
jmp ['short', 'loc_908F']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_420],', 'edx']
mov ['eax,', '[ebp+var_420]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_90B7']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_420],', 'eax']
jmp ['short', 'loc_90C2']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_420],', 'edx']
mov ['eax,', '[ebp+var_420]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax+9]']
mov ['[ebp+var_108],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '9']
mov ['[ebp+var_FC],', 'eax']
jmp ['short', 'loc_90F2']
mov ['eax,', '[ebp+var_FC]']
add ['eax,', '1']
mov ['[ebp+var_FC],', 'eax']
mov ['eax,', '[ebp+var_FC]']
cmp ['eax,', '[ebp+var_108]']
jnb ['short', 'loc_917E']
mov ['eax,', '[ebp+var_FC]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9158']
mov ['eax,', '[ebp+var_FC]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '[ebp+var_120]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_114]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_120]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_120]']
push ['eax']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
add ['eax,', '[ebp+var_120]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_916A']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_120]']
add ['eax,', '1']
mov ['[ebp+var_120],', 'eax']
jmp ['loc_90E3']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_2D]']
mov ['[eax+8],', 'cl']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_8]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jge ['short', 'loc_91CA']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jge ['short', 'loc_91CA']
cmp ['[ebp+var_18],', '0']
jle ['short', 'loc_91CA']
mov ['[ebp+var_18],', '88CA6C02h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decSetCoeff']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['loc_88CF']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_9227']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_1B0],', '0']
jz ['short', 'loc_923F']
mov ['eax,', '[ebp+var_1B0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_168],', '0']
jz ['short', 'loc_9257']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN82_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '424h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN81_0']
dd ['offset', '$LN76']
dd ['0FFFFFF10h,', '91h']
dd ['offset', '$LN77']
dd ['0FFFFFEB0h,', '28h']
dd ['offset', '$LN78']
dd ['0FFFFFE68h,', '28h']
dd ['offset', '$LN79_0']
dd ['0FFFFFDA8h,', '0A0h']
dd ['offset', '$LN80_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EI@JCJLIMFM@?$AAi?$AAa?$AAc?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?1?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA6?$AA4@']
unicode ['0,', '<iacc', '>']
dw ['3Ch']
unicode ['0,', '<=', '0x7fffffff/sizeof(uint64_t)>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??decMultiplyOp@@9@9@0911e54c']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decExpOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3F0]']
mov ['ecx,', '0FCh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_48],', 'eax']
mov ['[ebp+var_128],', '0']
mov ['[ebp+var_19C],', '0']
lea ['eax,', '[ebp+var_190]']
mov ['[ebp+var_1A8],', 'eax']
mov ['[ebp+var_270],', '0']
lea ['eax,', '[ebp+var_264]']
mov ['[ebp+var_27C],', 'eax']
lea ['eax,', '[ebp+var_2A8]']
mov ['[ebp+var_2B4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_9425']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_9406']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_93F4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
jmp ['short', 'loc_9404']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['short', 'loc_9420']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_9B56']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_945C']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_945C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_945C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '1']
jmp ['loc_9B56']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2B4]']
mov ['byte', 'ptr', '[eax+9],', '4']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
neg ['ecx']
mov ['edx,', '[ebp+var_2B4]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_94A9']
mov ['eax,', '[ebp+var_2B4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_2B4]']
mov ['[edx+4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2B4]']
push ['ecx']
call ['_decCompare']
add ['esp,', '0Ch']
mov ['[ebp+var_C0],', 'eax']
cmp ['[ebp+var_C0],', '80000000h']
jnz ['short', 'loc_94E2']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_9B56']
cmp ['[ebp+var_C0],', '0']
jl ['short', 'loc_954C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['[ebp+var_2D4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '1']
mov ['eax,', '[ebp+var_2D4]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_2D4]']
neg ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '820h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_9B56']
push ['40h']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_64],', 'ecx']
mov ['[ebp+var_54],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '8']
jle ['short', 'loc_95CC']
mov ['eax,', '[ebp+var_27C]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_27C]']
mov ['byte', 'ptr', '[eax+9],', '2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_95B9']
mov ['eax,', '[ebp+var_27C]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFEh']
mov ['[ebp+var_18],', '8']
mov ['[ebp+var_24],', '9']
jmp ['loc_99A3']
mov ['eax,', '[ebp+arg_4]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '8']
setnle ['cl']
mov ['[ebp+var_2E0],', 'ecx']
mov ['eax,', '8']
sub ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_2E0]']
jle ['short', 'loc_95FB']
mov ['ecx,', '[ebp+var_2E0]']
mov ['[ebp+var_3F0],', 'ecx']
jmp ['short', 'loc_9609']
mov ['edx,', '8']
sub ['edx,', '[ebp+var_18]']
mov ['[ebp+var_3F0],', 'edx']
mov ['eax,', '[ebp+var_3F0]']
mov ['[ebp+var_2EC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
neg ['ecx']
sub ['ecx,', '[ebp+var_2EC]']
mov ['[ebp+var_2F8],', 'ecx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_2EC]']
mov ['[ebp+var_18],', 'eax']
jns ['short', 'loc_964C']
mov ['eax,', '[ebp+var_2F8]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+var_2F8],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_2F8]']
jz ['loc_9707']
lea ['eax,', '[ebp+var_11C]']
mov ['[ebp+var_304],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_9686']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_3F0],', 'eax']
jmp ['short', 'loc_9691']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_3F0],', 'edx']
mov ['eax,', '[ebp+var_3F0]']
add ['eax,', '0Bh']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '54h']
jbe ['short', 'loc_96DC']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_128],', 'eax']
cmp ['[ebp+var_128],', '0']
jnz ['short', 'loc_96D0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_9B56']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_304],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_304]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_304]']
mov ['ecx,', '[ebp+var_2F8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_304]']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_9720']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_3F0],', 'ecx']
jmp ['short', 'loc_972B']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[edx]']
mov ['[ebp+var_3F0],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_3F0]']
lea ['eax,', '[edx+ecx+2]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
shl ['eax,', '1']
cmp ['eax,', '31h']
jg ['short', 'loc_9758']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', '_d2utable[ecx*2]']
mov ['[ebp+var_3F0],', 'edx']
jmp ['short', 'loc_9763']
mov ['eax,', '[ebp+var_24]']
shl ['eax,', '1']
mov ['[ebp+var_3F0],', 'eax']
mov ['ecx,', '[ebp+var_3F0]']
add ['ecx,', '0Bh']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '0B4h']
jbe ['short', 'loc_97B1']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_270],', 'eax']
cmp ['[ebp+var_270],', '0']
jnz ['short', 'loc_97A5']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_9B56']
mov ['eax,', '[ebp+var_270]']
mov ['[ebp+var_27C],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
cmp ['eax,', '31h']
jg ['short', 'loc_97CE']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'byte_2[ecx]']
mov ['[ebp+var_3F0],', 'edx']
jmp ['short', 'loc_97DA']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
mov ['[ebp+var_3F0],', 'eax']
mov ['ecx,', '[ebp+var_3F0]']
add ['ecx,', '0Bh']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '60h']
jbe ['short', 'loc_9825']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '0']
jnz ['short', 'loc_9819']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_9B56']
mov ['eax,', '[ebp+var_19C]']
mov ['[ebp+var_1A8],', 'eax']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_27C]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_27C]']
mov ['byte', 'ptr', '[eax+9],', '1']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2B4]']
mov ['byte', 'ptr', '[eax+9],', '2']
lea ['eax,', '[ebp+var_2C8]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_2BF],', '1']
push ['40h']
lea ['eax,', '[ebp+var_90]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
mov ['ecx,', '7']
lea ['esi,', '[ebp+var_90]']
lea ['edi,', '[ebp+var_B4]']
rep ['movsd']
mov ['eax,', '[ebp+var_24]']
shl ['eax,', '1']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_90],', 'eax']
mov ['[ebp+var_88],', '0C4653601h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+var_1A8]']
push ['edx']
mov ['eax,', '[ebp+var_27C]']
push ['eax']
mov ['ecx,', '[ebp+var_27C]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
mov ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+var_2B4]']
push ['edx']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
mov ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_decDivideOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_27C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_27C]']
add ['ecx,', '[edx+4]']
mov ['eax,', '[ebp+var_1A8]']
mov ['edx,', '[eax]']
mov ['eax,', '[ebp+var_1A8]']
add ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_24]']
lea ['edx,', '[edx+eax+1]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_9974']
mov ['eax,', '[ebp+var_27C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_24]']
jl ['short', 'loc_9974']
jmp ['short', 'loc_99A3']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
lea ['edx,', '[ebp+var_2C8]']
push ['edx']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
mov ['ecx,', '[ebp+var_2B4]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
jmp ['loc_98BF']
cmp ['[ebp+var_18],', '0']
jle ['loc_9AD9']
mov ['[ebp+var_310],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '_DECPOWERS[eax*4]']
mov ['[ebp+var_328],', 'ecx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1A8]']
mov ['byte', 'ptr', '[eax+9],', '1']
mov ['[ebp+var_31C],', '1']
jmp ['short', 'loc_9A04']
mov ['eax,', '[ebp+var_31C]']
add ['eax,', '1']
mov ['[ebp+var_31C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
and ['ecx,', '2200h']
jz ['short', 'loc_9A4B']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
and ['ecx,', '200h']
jnz ['short', 'loc_9A46']
mov ['eax,', '[ebp+var_1A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9A4B']
mov ['eax,', '[ebp+var_1A8]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_9A4B']
mov ['eax,', '[ebp+var_1A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_9A4B']
jmp ['loc_9ACD']
mov ['eax,', '[ebp+var_328]']
shl ['eax,', '1']
mov ['[ebp+var_328],', 'eax']
jns ['short', 'loc_9A8A']
mov ['[ebp+var_310],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+var_27C]']
push ['edx']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
mov ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
cmp ['[ebp+var_31C],', '1Fh']
jnz ['short', 'loc_9A95']
jmp ['short', 'loc_9ACD']
cmp ['[ebp+var_310],', '0']
jnz ['short', 'loc_9AA3']
jmp ['loc_99F5']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+var_1A8]']
push ['edx']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
mov ['ecx,', '[ebp+var_1A8]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
jmp ['loc_99F5']
mov ['eax,', '[ebp+var_1A8]']
mov ['[ebp+var_27C],', 'eax']
mov ['[ebp+var_30],', '1']
mov ['eax,', '[ebp+var_27C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9B0F']
mov ['eax,', '[ebp+var_27C]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_9B0F']
mov ['eax,', '[ebp+var_27C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_9B0F']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+var_27C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['loc_93BF']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_9B6E']
mov ['eax,', '[ebp+var_128]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_270],', '0']
jz ['short', 'loc_9B86']
mov ['eax,', '[ebp+var_270]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_19C],', '0']
jz ['short', 'loc_9B9E']
mov ['eax,', '[ebp+var_19C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN64_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN63_0']
dd ['offset', '$LN53']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN54']
dd ['0FFFFFF94h,', '1Ch']
dd ['offset', '$LN55']
dd ['0FFFFFF70h,', '1Ch']
dd ['offset', '$LN56']
dd ['0FFFFFF4Ch,', '1Ch']
dd ['offset', '$LN57_0']
dd ['0FFFFFEE4h,', '54h']
dd ['offset', '$LN58_0']
dd ['0FFFFFE70h,', '60h']
dd ['offset', '$LN59_0']
dd ['0FFFFFD9Ch,', '0B4h']
dd ['offset', '$LN60_0']
dd ['0FFFFFD58h,', '24h']
dd ['offset', '$LN61_0']
dd ['0FFFFFD38h,', '0Ch']
dd ['offset', '$LN62_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decLnOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '274h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_274]']
mov ['ecx,', '9Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_A4],', '0']
lea ['eax,', '[ebp+var_98]']
mov ['[ebp+var_B0],', 'eax']
mov ['[ebp+var_124],', '0']
lea ['eax,', '[ebp+var_118]']
mov ['[ebp+var_130],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_9D51']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_9D32']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_9D20']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_9D30']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['short', 'loc_9D4C']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['loc_A52C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9D88']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_9D88']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_9D88']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0C0h']
jmp ['loc_A52C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_9DAC']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_A52C']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_9E86']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '28h']
jg ['loc_9E86']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9E2B']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '1']
jnz ['short', 'loc_9E2B']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['short', 'loc_9E2B']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_17C]']
rep ['movsd']
mov ['[ebp+var_170],', '3']
lea ['eax,', '[ebp+var_17C]']
push ['eax']
push ['offset', '??_C@_0CK@DHKLINEO@2?4302585092994045684017991454684@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberFromString_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '820h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_A52C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '2']
jnz ['short', 'loc_9E86']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_9E86']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_17C]']
rep ['movsd']
mov ['[ebp+var_170],', '3']
lea ['eax,', '[ebp+var_17C]']
push ['eax']
push ['offset', '??_C@_0CL@FDAAIMKH@0?4693147180559945309417232121458@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberFromString_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '820h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_A52C']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '7']
jge ['short', 'loc_9E9A']
mov ['[ebp+var_268],', '7']
jmp ['short', 'loc_9EA5']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_268],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_268]']
jge ['short', 'loc_9EDF']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx],', '7']
jge ['short', 'loc_9EC6']
mov ['[ebp+var_26C],', '7']
jmp ['short', 'loc_9ED1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_26C],', 'ecx']
mov ['edx,', '[ebp+var_26C]']
mov ['[ebp+var_270],', 'edx']
jmp ['short', 'loc_9EEA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_270],', 'ecx']
mov ['edx,', '[ebp+var_270]']
add ['edx,', '2']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '10h']
jge ['short', 'loc_9F08']
mov ['[ebp+var_268],', '10h']
jmp ['short', 'loc_9F11']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_268],', 'eax']
cmp ['[ebp+var_268],', '31h']
jg ['short', 'loc_9F4A']
cmp ['[ebp+var_3C],', '10h']
jge ['short', 'loc_9F2C']
mov ['[ebp+var_26C],', '10h']
jmp ['short', 'loc_9F35']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_26C],', 'ecx']
mov ['edx,', '[ebp+var_26C]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_270],', 'eax']
jmp ['short', 'loc_9F71']
cmp ['[ebp+var_3C],', '10h']
jge ['short', 'loc_9F5C']
mov ['[ebp+var_274],', '10h']
jmp ['short', 'loc_9F65']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_274],', 'ecx']
mov ['edx,', '[ebp+var_274]']
mov ['[ebp+var_270],', 'edx']
mov ['eax,', '[ebp+var_270]']
add ['eax,', '0Bh']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '3Ch']
jbe ['short', 'loc_9FBC']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '0']
jnz ['short', 'loc_9FB0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_A52C']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '[eax]']
mov ['[ebp+var_48],', 'ecx']
cmp ['[ebp+var_48],', '10h']
jge ['short', 'loc_9FD9']
mov ['[ebp+var_268],', '10h']
jmp ['short', 'loc_9FE2']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_268],', 'eax']
cmp ['[ebp+var_268],', '31h']
jg ['short', 'loc_A01B']
cmp ['[ebp+var_48],', '10h']
jge ['short', 'loc_9FFD']
mov ['[ebp+var_26C],', '10h']
jmp ['short', 'loc_A006']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_26C],', 'ecx']
mov ['edx,', '[ebp+var_26C]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_270],', 'eax']
jmp ['short', 'loc_A042']
cmp ['[ebp+var_48],', '10h']
jge ['short', 'loc_A02D']
mov ['[ebp+var_274],', '10h']
jmp ['short', 'loc_A036']
mov ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_274],', 'ecx']
mov ['edx,', '[ebp+var_274]']
mov ['[ebp+var_270],', 'edx']
mov ['eax,', '[ebp+var_270]']
add ['eax,', '0Bh']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '60h']
jbe ['short', 'loc_A08D']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jnz ['short', 'loc_A081']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_A52C']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_130],', 'eax']
push ['40h']
lea ['eax,', '[ebp+var_17C]']
push ['eax']
call ['_uprv_decContextDefault_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx]']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['_uprv_decNumberFromInt32_56']
add ['esp,', '8']
push ['232279h']
mov ['eax,', '[ebp+var_130]']
push ['eax']
call ['_uprv_decNumberFromInt32_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_130]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFAh']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_17C]']
push ['ecx']
mov ['edx,', '[ebp+var_130]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_17C],', '2']
mov ['[ebp+var_170],', '5']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_17C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_130]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_130]']
push ['eax']
call ['_decGetInt']
add ['esp,', '4']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0Ah']
jge ['short', 'loc_A179']
mov ['eax,', '[ebp+var_54]']
shl ['eax,', '3']
mov ['ecx,', '[ebp+var_54]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
movzx ['ecx,', 'word', 'ptr', '_multies[eax*2]']
mov ['[ebp+var_54],', 'ecx']
mov ['eax,', '[ebp+var_54]']
sar ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
call ['_uprv_decNumberFromInt32_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_54]']
and ['eax,', '3']
neg ['eax']
sub ['eax,', '3']
mov ['ecx,', '[ebp+var_130]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_130]']
mov ['byte', 'ptr', '[eax+8],', '80h']
mov ['[ebp+var_17C],', '10h']
mov ['[ebp+var_170],', '3']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_17C]']
push ['ecx']
mov ['edx,', '[ebp+var_130]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
lea ['eax,', '[ebp+var_144]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_13B],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_178],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_174],', 'ecx']
mov ['[ebp+var_164],', '0']
mov ['ecx,', '7']
lea ['esi,', '[ebp+var_17C]']
lea ['edi,', '[ebp+var_1A0]']
rep ['movsd']
mov ['[ebp+var_19C],', '1E847Eh']
mov ['[ebp+var_198],', '0FFE17B82h']
mov ['[ebp+var_48],', '9']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_17C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '[eax]']
mov ['[ebp+var_1A0],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
xor ['ecx,', '80h']
mov ['edx,', '[ebp+var_B0]']
mov ['[edx+8],', 'cl']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_1A0]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['eax,', '[ebp+var_130]']
push ['eax']
call ['_decExpOp']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
xor ['ecx,', '80h']
mov ['edx,', '[ebp+var_B0]']
mov ['[edx+8],', 'cl']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_1A0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_130]']
push ['eax']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
call ['_decMultiplyOp']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['80h']
lea ['ecx,', '[ebp+var_1A0]']
push ['ecx']
lea ['edx,', '[ebp+var_144]']
push ['edx']
mov ['eax,', '[ebp+var_130]']
push ['eax']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_130]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A340']
mov ['eax,', '[ebp+var_130]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_A340']
mov ['eax,', '[ebp+var_130]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_A373']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_B0]']
add ['ecx,', '[edx+4]']
mov ['eax,', '[ebp+var_130]']
mov ['edx,', '[eax]']
mov ['eax,', '[ebp+var_130]']
add ['edx,', '[eax+4]']
mov ['eax,', '[ebp+arg_8]']
mov ['eax,', '[eax]']
lea ['edx,', '[edx+eax+1]']
cmp ['ecx,', 'edx']
jl ['loc_A440']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_3C]']
jnz ['short', 'loc_A385']
jmp ['loc_A4A9']
mov ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A403']
mov ['eax,', '[ebp+var_B0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_A403']
mov ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_A403']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_17C]']
push ['ecx']
lea ['edx,', '[ebp+var_144]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_158]']
push ['ecx']
call ['_decCompareOp']
add ['esp,', '18h']
movzx ['eax,', '[ebp+var_14F]']
test ['eax,', 'eax']
jnz ['short', 'loc_A3EE']
mov ['eax,', '[ebp+var_B0]']
mov ['dword', 'ptr', '[eax+4],', '0']
jmp ['short', 'loc_A3FE']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '820h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_A4A9']
mov ['eax,', '[ebp+var_130]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A440']
mov ['eax,', '[ebp+var_130]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_A440']
mov ['eax,', '[ebp+var_130]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_A440']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_130]']
mov ['[edx+4],', 'ecx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_17C]']
push ['ecx']
mov ['edx,', '[ebp+var_130]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['_decAddOp']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_3C]']
jnz ['short', 'loc_A477']
jmp ['loc_A273']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_3C]']
jle ['short', 'loc_A48D']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_17C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '[eax]']
mov ['[ebp+var_1A0],', 'ecx']
jmp ['loc_A273']
mov ['[ebp+var_24],', '1']
mov ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A4DF']
mov ['eax,', '[ebp+var_B0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_A4DF']
mov ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_A4DF']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_17C],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_17C]']
push ['edx']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['loc_9CE7']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_A544']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_A55C']
mov ['eax,', '[ebp+var_124]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN68_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '274h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN67_2']
dd ['offset', '$LN59_1']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN60_1']
dd ['0FFFFFF68h,', '3Ch']
dd ['offset', '$LN61_1']
dd ['0FFFFFEE8h,', '60h']
dd ['offset', '$LN62_1']
dd ['0FFFFFEBCh,', '0Ch']
dd ['offset', '$LN63_1']
dd ['0FFFFFEA8h,', '0Ch']
dd ['offset', '$LN64_1']
dd ['0FFFFFE84h,', '1Ch']
dd ['offset', '$LN65_0']
dd ['0FFFFFE60h,', '1Ch']
dd ['offset', '$LN66_1']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CL@FDAAIMKH@0?4693147180559945309417232121458@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CK@DHKLINEO@2?4302585092994045684017991454684@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decQuantizeOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+8]']
sub ['edx,', 'eax']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
jz ['short', 'loc_A755']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '70h']
and ['ecx,', '30h']
jz ['short', 'loc_A719']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['short', 'loc_A750']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
xor ['ecx,', 'eax']
and ['ecx,', '40h']
jz ['short', 'loc_A740']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_A750']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['loc_A988']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_A768']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_A777']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_decGetInt']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '80000000h']
jz ['short', 'loc_A7A5']
cmp ['[ebp+var_24],', '80000003h']
jz ['short', 'loc_A7A5']
cmp ['[ebp+var_24],', '80000002h']
jz ['short', 'loc_A7A5']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_3C]']
jl ['short', 'loc_A7A5']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_A7BA']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_A988']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A7F7']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_A7F7']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_A7F7']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+4],', 'ecx']
jmp ['loc_A92E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[ebp+var_18]']
jle ['short', 'loc_A825']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_A988']
cmp ['[ebp+var_48],', '0']
jle ['loc_A8E9']
mov ['esi,', '[ebp+arg_C]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_6C]']
rep ['movsd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_48]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decApplyRound']
add ['esp,', '10h']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_24]']
jle ['short', 'loc_A8E7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_18]']
jnz ['short', 'loc_A8BC']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFF7DFh']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_A988']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_A92E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
cmp ['[ebp+var_48],', '0']
jge ['short', 'loc_A92E']
mov ['eax,', '[ebp+var_48]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax+4],', 'edx']
jle ['short', 'loc_A958']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_A988']
jmp ['short', 'loc_A980']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFDFFFh']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
xor ['eax,', 'eax']
jnz ['loc_A6CE']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN27_1']
dd ['offset', '$LN25_0']
dd ['0FFFFFF94h,', '1Ch']
dd ['offset', '$LN26_1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decCompareOp	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '110h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_110]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_AA6E']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_AA44']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jnz ['short', 'loc_AA44']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['loc_AC80']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jnz ['short', 'loc_AA6E']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_AA6E']
mov ['[ebp+var_8],', '1']
jmp ['loc_AC80']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '30h']
mov ['[ebp+var_11],', 'cl']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['loc_AC3A']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jnz ['short', 'loc_AA9E']
jmp ['loc_AC18']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '6']
jnz ['short', 'loc_AABC']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '40000080h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_AC18']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['loc_ABD3']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_AAE1']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['loc_ABB5']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_AAF9']
mov ['[ebp+var_8],', '1']
jmp ['loc_ABB5']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_AB1D']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_AB1D']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['loc_ABB5']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_AB3E']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_AB3E']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_ABB5']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_AB5A']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_AB65']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_AB81']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_110],', 'eax']
jmp ['short', 'loc_AB8C']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_110],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_10C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+var_110]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '9']
push ['eax']
call ['_decUnitCompare']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_ABCC']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_AC80']
jmp ['short', 'loc_AC18']
movzx ['eax,', '[ebp+var_11]']
and ['eax,', '10h']
jz ['short', 'loc_ABDE']
jmp ['short', 'loc_AC18']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jz ['short', 'loc_ABF6']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '30h']
jnz ['short', 'loc_AC18']
mov ['[ebp+arg_10],', '2']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_AC0F']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_AC16']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_AC80']
mov ['[ebp+arg_10],', '5']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decNaNs']
add ['esp,', '14h']
jmp ['short', 'loc_AC80']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '7']
jz ['short', 'loc_AC4C']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '8']
jnz ['short', 'loc_AC63']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_decCompare']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_AC78']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_decCompare']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
xor ['eax,', 'eax']
jnz ['loc_AA11']
cmp ['[ebp+var_8],', '80000000h']
jnz ['short', 'loc_AC9B']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_AE57']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jz ['short', 'loc_ACB6']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '6']
jz ['short', 'loc_ACB6']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_AD33']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '4']
jnz ['short', 'loc_AD08']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_AD08']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jz ['short', 'loc_AD08']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jge ['short', 'loc_ACEA']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_ACF1']
mov ['[ebp+var_8],', '1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_AD08']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AD2E']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '1']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_AD2E']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '80h']
jmp ['loc_AE57']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '5']
jnz ['short', 'loc_AD41']
jmp ['loc_AE57']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_8],', '0']
jnz ['loc_ADE6']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
mov ['[ebp+var_35],', 'cl']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
mov ['[ebp+var_41],', 'cl']
movzx ['eax,', '[ebp+var_35]']
movzx ['ecx,', '[ebp+var_41]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_AD98']
movzx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jz ['short', 'loc_AD8F']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_AD96']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_ADE6']
movzx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jz ['short', 'loc_ADC8']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jz ['short', 'loc_ADC8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jge ['short', 'loc_ADBF']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_ADC6']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_ADE6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jle ['short', 'loc_ADDF']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_ADE6']
mov ['[ebp+var_8],', '0FFFFFFFFh']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '3']
jz ['short', 'loc_ADF8']
movzx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '8']
jnz ['short', 'loc_AE00']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_AE11']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_AE1A']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_10C],', 'ecx']
mov ['edx,', '[ebp+var_10C]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCopyFit']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decFinalize']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN69_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN68_3']
dd ['offset', '$LN67_3']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decCompare	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '1']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AEE7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_AEE7']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_AEE7']
mov ['[ebp+var_8],', '0']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_AF29']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AF16']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_AF16']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_AF16']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_B0BF']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_AF24']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_B0BF']
jmp ['loc_AFB9']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AF45']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_AF45']
mov ['[ebp+var_8],', '0FFFFFFFFh']
mov ['[ebp+var_14],', '1']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AF74']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_AF74']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_AF74']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_AF8A']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_AF8A']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_AF9C']
mov ['eax,', '1']
jmp ['loc_B0BF']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_AFAC']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_B0BF']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_AFB9']
xor ['eax,', 'eax']
jmp ['loc_B0BF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
or ['ecx,', 'eax']
and ['ecx,', '40h']
jz ['short', 'loc_AFFF']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_AFF7']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '40h']
jz ['short', 'loc_AFEF']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_AFF7']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_B0BF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jle ['short', 'loc_B027']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_B043']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_B04E']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_F4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_B06A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_F8],', 'eax']
jmp ['short', 'loc_B075']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_F4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+var_F8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decUnitCompare']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '80000000h']
jz ['short', 'loc_B0BC']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decUnitCompare	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '194h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_194]']
mov ['ecx,', '65h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_6C],', '0']
cmp ['[ebp+arg_10],', '0']
jnz ['loc_B1C1']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_B11F']
mov ['eax,', '1']
jmp ['loc_B38C']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_B12F']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_B38C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_90],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_9C],', 'edx']
jmp ['short', 'loc_B16F']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '1']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+var_9C]']
sub ['ecx,', '1']
mov ['[ebp+var_9C],', 'ecx']
mov ['eax,', '[ebp+var_90]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_B1BA']
mov ['eax,', '[ebp+var_90]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_9C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jle ['short', 'loc_B19A']
mov ['eax,', '1']
jmp ['loc_B38C']
mov ['eax,', '[ebp+var_90]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_9C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jge ['short', 'loc_B1B8']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_B38C']
jmp ['short', 'loc_B151']
xor ['eax,', 'eax']
jmp ['loc_B38C']
cmp ['[ebp+arg_10],', '31h']
jg ['short', 'loc_B1D9']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_194],', 'ecx']
jmp ['short', 'loc_B1E2']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_194],', 'edx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_194]']
cmp ['[ebp+arg_4],', 'eax']
jle ['short', 'loc_B1FA']
mov ['eax,', '1']
jmp ['loc_B38C']
cmp ['[ebp+arg_10],', '31h']
jg ['short', 'loc_B212']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_194],', 'ecx']
jmp ['short', 'loc_B21B']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_194],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '[ebp+var_194]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_B236']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_B38C']
cmp ['[ebp+arg_10],', '31h']
jg ['short', 'loc_B24E']
mov ['eax,', '[ebp+arg_10]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_194],', 'ecx']
jmp ['short', 'loc_B257']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_194],', 'edx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_194]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_84]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_B27A']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '2']
mov ['[ebp+var_84],', 'eax']
lea ['eax,', '[ebp+var_60]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_84],', '49h']
jbe ['short', 'loc_B2C0']
mov ['eax,', '[ebp+var_84]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jnz ['short', 'loc_B2BA']
mov ['eax,', '80000000h']
jmp ['loc_B38C']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '80000000h']
jns ['short', 'loc_B2D8']
dec ['eax']
or ['eax,', '0FFFFFFFFh']
inc ['eax']
mov ['[ebp+var_C0],', 'eax']
mov ['eax,', '[ebp+var_C0]']
mov ['ecx,', '_DECPOWERS[eax*4]']
neg ['ecx']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '0']
jge ['short', 'loc_B326']
mov ['[ebp+var_CC],', '0FFFFFFFFh']
jmp ['short', 'loc_B374']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_A8],', 'eax']
mov ['eax,', '[ebp+var_78]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax-1]']
cmp ['[ebp+var_A8],', 'edx']
jnb ['short', 'loc_B35F']
mov ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_B35F']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
jmp ['short', 'loc_B32F']
mov ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_CC],', 'ecx']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_B386']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_CC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '194h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN28_1']
dd ['offset', '$LN27_2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decUnitAddSub	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_B48C']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_14]']
jnz ['short', 'loc_B44E']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+arg_4]']
jg ['short', 'loc_B44E']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '[ebp+arg_10]']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_10]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_B48C']
jmp ['short', 'loc_B462']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '1']
mov ['[ebp+arg_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+arg_10]']
cmp ['[ebp+arg_14],', 'eax']
jnb ['short', 'loc_B48C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_4]']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_B484']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_B48A']
mov ['eax,', '[ebp+arg_14]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_B450']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jbe ['short', 'loc_B4A6']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_B4B1']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '1']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_B56E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
imul ['ecx,', '[ebp+arg_18]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_38],', '9']
ja ['short', 'loc_B502']
mov ['eax,', '[ebp+arg_14]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cl']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_B4A8']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_B535']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '1']
imul ['eax,', 'dword_60']
shr ['eax,', '11h']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_B4A8']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '64h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '1']
imul ['eax,', 'dword_60']
shr ['eax,', '11h']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '0Ah']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_B4A8']
mov ['eax,', '[ebp+arg_14]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_B64F']
jmp ['short', 'loc_B585']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '1']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_B64F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_4]']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_B5B3']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_B5CC']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
imul ['ecx,', '[ebp+arg_18]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_38],', '9']
ja ['short', 'loc_B5E3']
mov ['eax,', '[ebp+arg_14]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cl']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_B57C']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_B616']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '1']
imul ['eax,', 'dword_60']
shr ['eax,', '11h']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_B57C']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '64h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '1']
imul ['eax,', 'dword_60']
shr ['eax,', '11h']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
imul ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '0Ah']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_B57C']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_B660']
mov ['eax,', '[ebp+arg_14]']
sub ['eax,', '[ebp+var_14]']
jmp ['loc_B6FE']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_B67F']
mov ['eax,', '[ebp+arg_14]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '1']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+arg_14]']
sub ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_B6FE']
mov ['[ebp+var_44],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_14],', 'eax']
jmp ['short', 'loc_B697']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '1']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_B6D6']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '9']
mov ['ecx,', '[ebp+arg_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['eax,', 'edx']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '9']
jg ['short', 'loc_B6C7']
mov ['eax,', '[ebp+arg_14]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_B6D4']
mov ['eax,', '[ebp+arg_14]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_44],', '1']
jmp ['short', 'loc_B68E']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
jz ['short', 'loc_B6F8']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '1']
mov ['[ebp+arg_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+arg_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decTrim	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_B747']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
and ['ecx,', '1']
jz ['short', 'loc_B74F']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_B8EA']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_B780']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_B780']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_B780']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_B8EA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_B7AB']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
cmp ['[ebp+var_8],', 'ecx']
jge ['short', 'loc_B831']
mov ['eax,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_20]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_20]']
imul ['edx,', '_multies[eax*4]']
shr ['edx,', '11h']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '_DECPOWERS[edx*4]']
sub ['ecx,', 'eax']
jz ['short', 'loc_B7EE']
jmp ['short', 'loc_B831']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_B80D']
cmp ['[ebp+var_14],', '0']
jg ['short', 'loc_B80D']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_B804']
jmp ['short', 'loc_B831']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '1']
jbe ['short', 'loc_B82C']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_20],', '1']
jmp ['loc_B7A2']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_B83F']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_B8EA']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B882']
movzx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_B882']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
sub ['edx,', '[eax+4]']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0']
jg ['short', 'loc_B874']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_B8EA']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_44]']
jle ['short', 'loc_B882']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_B89E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_B8A9']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToLeast']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decReverse	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
jmp ['short', 'loc_B932']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_B956']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['[ebp+var_5],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[ebp+var_5]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_B920']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decShiftToMost	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_B98C']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_BB6D']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
cmp ['eax,', '1']
jg ['short', 'loc_B9B8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_8]']
imul ['ecx,', '_DECPOWERS[edx*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
jmp ['loc_BB6D']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+arg_4],', '31h']
jg ['short', 'loc_B9D7']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_118],', 'ecx']
jmp ['short', 'loc_B9E0']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_118]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+arg_8],', '31h']
jg ['short', 'loc_BA08']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_118],', 'ecx']
jmp ['short', 'loc_BA11']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_118]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '31h']
jg ['short', 'loc_BA35']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_118],', 'ecx']
jmp ['short', 'loc_BA3E']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_118]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['edx,', '1']
sub ['edx,', 'ecx']
mov ['[ebp+var_2C],', 'edx']
jnz ['short', 'loc_BA85']
jmp ['short', 'loc_BA6C']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_BA80']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_BA5A']
jmp ['loc_BB43']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
cmp ['eax,', '31h']
jg ['short', 'loc_BAA5']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+arg_8]']
movzx ['edx,', '_d2utable[ecx]']
mov ['[ebp+var_118],', 'edx']
jmp ['short', 'loc_BAB1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_118]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx-1]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_BAD5']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_BB43']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_2C]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_2C]']
imul ['edx,', '_multies[eax*4]']
shr ['edx,', '11h']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '_DECPOWERS[edx*4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
ja ['short', 'loc_BB2B']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cl']
mov ['eax,', '1']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
imul ['ecx,', '_DECPOWERS[eax*4]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_BAC3']
jmp ['short', 'loc_BB4E']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_BB67']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cl']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_BB45']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decShiftToLeast proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_BBA0']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_BD64']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_BBB8']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '1']
jmp ['loc_BD64']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '31h']
jg ['short', 'loc_BBD6']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_10C],', 'ecx']
jmp ['short', 'loc_BBDF']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+var_10C]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_BC59']
cmp ['[ebp+arg_8],', '31h']
jg ['short', 'loc_BC0E']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_10C],', 'ecx']
jmp ['short', 'loc_BC17']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_BC37']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_BC4E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_BC25']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+arg_0]']
jmp ['loc_BD64']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_20]']
cmp ['eax,', '31h']
jg ['short', 'loc_BC79']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_20]']
movzx ['edx,', '_d2utable[ecx]']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_BC85']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_10C]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_20]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_20]']
imul ['edx,', '_multies[eax*4]']
shr ['edx,', '11h']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_BCC1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cl']
mov ['eax,', '1']
sub ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jg ['short', 'loc_BCE1']
jmp ['short', 'loc_BD5B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_20]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_20]']
imul ['eax,', '_multies[ecx*4]']
shr ['eax,', '11h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '_DECPOWERS[edx*4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '1']
sub ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '_DECPOWERS[edx*4]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jg ['short', 'loc_BD56']
jmp ['short', 'loc_BD5B']
jmp ['loc_BCB8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decCopyFit	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx+8]']
mov ['[eax+8],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decSetCoeff']
add ['esp,', '18h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decSetCoeff	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_BE7F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_BE62']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_BE48']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_BE5A']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_BE2D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BE7A']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '820h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
jmp ['loc_C1F4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '800h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '1']
jle ['short', 'loc_BEAF']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_BF26']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_BEFC']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_BEDF']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_BEFC']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BEFA']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_BEFC']
jmp ['short', 'loc_BECD']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BF11']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_C1F4']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_BF3E']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_8]']
jl ['short', 'loc_BF51']
jmp ['short', 'loc_BF66']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BF64']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_BF35']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', 'eax']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
jnz ['loc_C042']
movzx ['eax,', 'byte_38']
sar ['eax,', '1']
mov ['[ebp+var_4D],', 'al']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_4D]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_BFBF']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_4D]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_BFB0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_BFBD']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
add ['ecx,', '5']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_BFD2']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BFD2']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_BFEC']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_C03D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_C02B']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_C03D']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_C010']
jmp ['loc_C1DF']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_C053']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_68],', 'ecx']
jmp ['short', 'loc_C0BE']
cmp ['[ebp+var_14],', '4']
jbe ['short', 'loc_C07E']
mov ['eax,', 'ds:?__LINE__Var@?1??decSetCoeff@@9@9@0911e54c']
add ['eax,', '5Bh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@KDDHHPIP@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BC@MPIGOCPD@?$AAc?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_14]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_14]']
imul ['edx,', '_multies[eax*4]']
shr ['edx,', '11h']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_68]']
imul ['eax,', '_DECPOWERS[edx*4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_74],', 'ecx']
jz ['short', 'loc_C0BE']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_68]']
imul ['eax,', '199Ah']
shr ['eax,', '10h']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '3']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', 'edx']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', '_resmap[eax]']
mov ['edx,', '[ebp+arg_10]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_C121']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_C1DF']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_C145']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax],', 'cl']
mov ['eax,', '1']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jg ['short', 'loc_C165']
jmp ['short', 'loc_C1DF']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_14]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_14]']
imul ['eax,', '_multies[ecx*4]']
shr ['eax,', '11h']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_68]']
imul ['eax,', '_DECPOWERS[edx*4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '1']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_74]']
imul ['eax,', '_DECPOWERS[edx*4]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jg ['short', 'loc_C1DA']
jmp ['short', 'loc_C1DF']
jmp ['loc_C13C']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_C1F4']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_1BC@MPIGOCPD@?$AAc?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@']
unicode ['0,', '<cut', '>']
dw ['3Ch']
unicode ['0,', '<=', '4>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??decSetCoeff@@9@9@0911e54c']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decApplyRound	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_C249']
jmp ['loc_C5EA']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_118],', 'ecx']
cmp ['[ebp+var_118],', '7']
ja ['loc_C37E']
mov ['edx,', '[ebp+var_118]']
jmp ['ds:$LN61_2[edx*4]']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax+9]']
cdq
mov ['ecx,', '5']
idiv ['ecx']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_C29D']
cmp ['[ebp+var_14],', '1']
jz ['short', 'loc_C29D']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_C2B0']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_C2B0']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_C2B0']
mov ['[ebp+var_8],', '1']
jmp ['loc_C38B']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_C2C2']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['loc_C38B']
cmp ['[ebp+arg_8],', '5']
jle ['short', 'loc_C2D4']
mov ['[ebp+var_8],', '1']
jmp ['loc_C38B']
cmp ['[ebp+arg_8],', '5']
jle ['short', 'loc_C2E8']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_C301']
cmp ['[ebp+arg_8],', '5']
jnz ['short', 'loc_C301']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
and ['ecx,', '1']
jz ['short', 'loc_C301']
mov ['[ebp+var_8],', '1']
jmp ['loc_C38B']
cmp ['[ebp+arg_8],', '5']
jl ['short', 'loc_C313']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_C38B']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_C322']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_C38B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jz ['short', 'loc_C342']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_C340']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_C34F']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_C34F']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_C38B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
jnz ['short', 'loc_C36F']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_C36D']
mov ['[ebp+var_8],', '0FFFFFFFFh']
jmp ['short', 'loc_C37C']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_C37C']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_C38B']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_C396']
jmp ['loc_C5EA']
cmp ['[ebp+var_8],', '0']
jle ['loc_C478']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_C3BC']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_2C],', '1']
ja ['loc_C458']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '_DECPOWERS[edx*4]']
sub ['eax,', '1']
cmp ['ecx,', 'eax']
jz ['short', 'loc_C3E2']
jmp ['loc_C473']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_2C]']
mov ['dl,', 'byte_30[ecx*4]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_C405']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_20],', 'eax']
jb ['short', 'loc_C418']
mov ['eax,', '[ebp+var_20]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_C3FC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
add ['edx,', '1']
cmp ['ecx,', 'edx']
jle ['short', 'loc_C453']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decSetOverflow']
add ['esp,', '0Ch']
jmp ['loc_C5EA']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '9']
jz ['short', 'loc_C465']
jmp ['short', 'loc_C473']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_C3B3']
jmp ['loc_C599']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_C494']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_50],', '1']
ja ['loc_C57F']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_50]']
cmp ['ecx,', 'dword', 'ptr', 'byte_30[edx*4]']
jz ['short', 'loc_C4B5']
jmp ['loc_C599']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '_DECPOWERS[eax*4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_C4E2']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
cmp ['[ebp+var_38],', 'eax']
jb ['short', 'loc_C4FE']
movzx ['eax,', 'byte_38']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_C4D9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[edx+8]']
sub ['edx,', '[eax]']
add ['edx,', '1']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_C57D']
cmp ['[ebp+var_50],', '1']
jnz ['short', 'loc_C53E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_C53E']
mov ['eax,', '[ebp+var_44]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_C55E']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte_30[eax*4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_44]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '3820h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_C5EA']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C58B']
jmp ['short', 'loc_C599']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_C48B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_C5B5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_C5C0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
push ['0']
push ['1']
push ['offset', '_uarrone']
mov ['edx,', '[ebp+var_118]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decUnitAddSub']
add ['esp,', '1Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN38']
dd ['offset', '$LN40']
dd ['offset', '$LN45']
dd ['offset', '$LN47']
dd ['offset', '$LN49']
dd ['offset', '$LN31_1']
dd ['offset', '$LN53_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decFinalize	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_18]']
jg ['loc_C71E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_18]']
jge ['short', 'loc_C690']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decSetSubnormal']
add ['esp,', '10h']
jmp ['loc_C80C']
lea ['eax,', '[ebp+var_38]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['[ebp+var_2F],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_34],', 'ecx']
push ['1']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decCompare']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '80000000h']
jnz ['short', 'loc_C6D9']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_C80C']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_C71E']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_C71E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decApplyRound']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decSetSubnormal']
add ['esp,', '10h']
jmp ['loc_C80C']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_C740']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decApplyRound']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax+4],', 'edx']
jg ['short', 'loc_C75B']
jmp ['loc_C80C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax+4],', 'edx']
jle ['short', 'loc_C78A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_decSetOverflow']
add ['esp,', '0Ch']
jmp ['loc_C80C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C797']
jmp ['short', 'loc_C80C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', 'edx']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C7CF']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_C7CF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_C7ED']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
push ['eax']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '400h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14_0']
dd ['offset', '$LN13_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decSetOverflow	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
mov ['[ebp+var_11],', 'cl']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_C8F6']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_C8F6']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_C8F6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C8CD']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_20]']
jle ['short', 'loc_C8F1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
or ['ecx,', '400h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
jmp ['loc_C98A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_E8],', 'ecx']
cmp ['[ebp+var_E8],', '7']
ja ['short', '$LN10_4']
mov ['edx,', '[ebp+var_E8]']
jmp ['ds:$LN17_1[edx*4]']
mov ['[ebp+var_5],', '1']
jmp ['short', '$LN10_4']
mov ['[ebp+var_5],', '1']
jmp ['short', '$LN10_4']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['short', 'loc_C93C']
mov ['[ebp+var_5],', '1']
jmp ['short', '$LN10_4']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jnz ['short', '$LN10_4']
mov ['[ebp+var_5],', '1']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_C96D']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decSetMaxValue']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_11]']
mov ['[eax+8],', 'cl']
jmp ['short', 'loc_C97A']
movzx ['eax,', '[ebp+var_11]']
or ['eax,', '40h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'al']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
or ['ecx,', '0A20h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN10_4']
dd ['offset', '$LN10_4']
dd ['offset', '$LN10_4']
dd ['offset', '$LN10_4']
dd ['offset', '$LN9_5']
dd ['offset', '$LN5_22']
dd ['offset', '$LN8_4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decSetMaxValue	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_CA02']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_14],', '1']
jle ['short', 'loc_CA10']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '9']
jmp ['short', 'loc_CA24']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '_DECPOWERS[eax*4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_CA2F']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_C9F9']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decSetSubnormal proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
sub ['eax,', 'ecx']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CAD7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_CAD7']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_CAD7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_30]']
jge ['short', 'loc_CAD2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '400h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_CBF7']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '1000h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '0']
jg ['short', 'loc_CB18']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
and ['ecx,', '20h']
jz ['short', 'loc_CB13']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '2000h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
jmp ['loc_CBF7']
mov ['esi,', '[ebp+arg_4]']
mov ['ecx,', '7']
lea ['edi,', '[ebp+var_24]']
rep ['movsd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decSetCoeff']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_decApplyRound']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
and ['ecx,', '20h']
jz ['short', 'loc_CB92']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '2000h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_30]']
jle ['short', 'loc_CBC8']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decShiftToMost']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CBF7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_CBF7']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_CBF7']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '400h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_2']
dd ['offset', '$LN10_5']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decCheckMath	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0F423Fh']
jg ['short', 'loc_CC91']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0F423Fh']
jg ['short', 'loc_CC91']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
neg ['ecx']
cmp ['ecx,', '0F423Fh']
jle ['short', 'loc_CCA0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_CD00']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0F423Fh']
jg ['short', 'loc_CCD1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx]']
cmp ['ecx,', '0F4240h']
jg ['short', 'loc_CCD1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx]']
cmp ['ecx,', '0FFE17B84h']
jge ['short', 'loc_CD00']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CCF0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_CCF0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jz ['short', 'loc_CD00']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
or ['ecx,', '80h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
xor ['eax,', 'eax']
cmp ['ecx,', '[ebp+var_8]']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decGetInt	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '80h']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_35],', 'cl']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_CD7C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_CD7C']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '70h']
jnz ['short', 'loc_CD7C']
xor ['eax,', 'eax']
jmp ['loc_CF3D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_CDA3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_CE42']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
neg ['ecx']
mov ['[ebp+var_44],', 'ecx']
jmp ['short', 'loc_CDB9']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_44],', '1']
jl ['short', 'loc_CDDE']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_CDD3']
mov ['eax,', '80000000h']
jmp ['loc_CF3D']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_CDB0']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_CDED']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_CE42']
mov ['eax,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_44]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_44]']
imul ['edx,', '_multies[eax*4]']
shr ['edx,', '11h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '_DECPOWERS[edx*4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_50],', 'ecx']
jz ['short', 'loc_CE2E']
mov ['eax,', '80000000h']
jmp ['loc_CF3D']
mov ['eax,', '1']
sub ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_CE63']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_2C],', '0Bh']
jge ['loc_CF0E']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_CE7E']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_CEA8']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_20]']
imul ['ecx,', '_DECPOWERS[edx*4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_CE75']
cmp ['[ebp+var_2C],', '0Ah']
jnz ['short', 'loc_CF0E']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_8]']
cdq
idiv ['dword', 'ptr', 'byte_30[ecx*4]']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[edx-1]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_CED0']
mov ['[ebp+var_2C],', '0Bh']
jmp ['short', 'loc_CF02']
movzx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jz ['short', 'loc_CEEA']
cmp ['[ebp+var_8],', '773593FDh']
jle ['short', 'loc_CEEA']
mov ['[ebp+var_2C],', '0Bh']
jmp ['short', 'loc_CF02']
movzx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jnz ['short', 'loc_CF02']
cmp ['[ebp+var_8],', '3B9AC9FFh']
jle ['short', 'loc_CF02']
mov ['[ebp+var_2C],', '0Bh']
cmp ['[ebp+var_2C],', '0Bh']
jnz ['short', 'loc_CF0E']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_2C],', '0Ah']
jle ['short', 'loc_CF2A']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '1']
jz ['short', 'loc_CF23']
mov ['eax,', '80000003h']
jmp ['short', 'loc_CF3D']
mov ['eax,', '80000002h']
jmp ['short', 'loc_CF3D']
movzx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jz ['short', 'loc_CF3A']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decDecap	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_CF84']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+9],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_D051']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '31h']
jg ['short', 'loc_CFA8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_CFB6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '31h']
jg ['short', 'loc_CFEA']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
movzx ['ecx,', '_d2utable[eax]']
mov ['[ebp+var_DC],', 'ecx']
jmp ['short', 'loc_CFF8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_DC]']
sub ['eax,', '1']
sub ['edx,', 'eax']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '1']
jz ['short', 'loc_D02B']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
mov ['ecx,', '[ebp+var_14]']
xor ['edx,', 'edx']
div ['_DECPOWERS[ecx*4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', 'eax']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '9']
push ['edx']
call ['_decGetDigits']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decBiStr	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
jmp ['short', 'loc_D0A3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_D0C7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_D0C7']
xor ['al,', 'al']
jmp ['short', 'loc_D0D7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_D0D3']
jmp ['short', 'loc_D0D5']
jmp ['short', 'loc_D088']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decNaNs	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_D11C']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
or ['ecx,', '40000080h']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_D15C']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_D124']
jmp ['short', 'loc_D15C']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '10h']
jz ['short', 'loc_D148']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
or ['ecx,', '40000080h']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_D15C']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_D156']
jmp ['short', 'loc_D15C']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_D17D']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uprv_decNumberCopy_56']
add ['esp,', '8']
jmp ['loc_D24F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx+8]']
mov ['[eax+8],', 'dl']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_D1A5']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_D1B0']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+9]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '9']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_D1E6']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_D1FA']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_D1D4']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '31h']
jg ['short', 'loc_D216']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
movzx ['eax,', '_d2utable[edx]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_D221']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_E8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jle ['short', 'loc_D24F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_decDecap']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
and ['ecx,', '0FFFFFFEFh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decStatus	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0DDh']
jz ['short', 'loc_D2E2']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '40000000h']
jz ['short', 'loc_D2CF']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0BFFFFFFFh']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_D2E2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_decNumberZero_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+8],', '20h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_uprv_decContextSetStatus_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_decGetDigits	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D344']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_D36D']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_D369']
cmp ['[ebp+var_14],', '1']
jnz ['short', 'loc_D35E']
jmp ['short', 'loc_D36D']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D33B']
jmp ['short', 'loc_D36D']
jmp ['short', 'loc_D33B']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_uprv_decContextSetStatus_56:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_uprv_decContextDefault_56:near']
extrn ['_abs:near']
extrn ['_strcpy:near']
extrn ['__imp___wassert:near']
extrn ['__allmul:near']
extrn ['__aulldiv:near']
end

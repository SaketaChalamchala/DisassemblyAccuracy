endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAssignedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0C0h']
jz ['short', 'loc_18A']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jz ['short', 'loc_18A']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_191']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C1h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0C0h']
or ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFF00h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Dh']
or ['eax,', '0C0h']
or ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSpecialCE32@Collation@icu_56@@SACI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
cmp ['eax,', '0C0h']
setnb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tagFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCE32Tag@Collation@icu_56@@SACIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3C7']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_3C7']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_3CE']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_484']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_484']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_484']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_48B']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSelfContainedCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_515']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_515']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_515']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '4']
jz ['short', 'loc_515']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_51C']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isPrefixCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isContractionCE32@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?hasCE32Tag@Collation@icu_56@@SACIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ce32HasContext@Collation@icu_56@@SACI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isSpecialCE32@Collation@icu_56@@SACI@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_614']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '8']
jz ['short', 'loc_60B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?tagFromCE32@Collation@icu_56@@SAHI@Z']
add ['esp,', '4']
cmp ['eax,', '9']
jnz ['short', 'loc_614']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_61B']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF000000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000000h']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF0000h']
shr ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FF00h']
shl ['eax,', '10h']
or ['eax,', '500h']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexFromCE32@Collation@icu_56@@SAHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '0Dh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthFromCE32@Collation@icu_56@@SAHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '1Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?digitFromCE32@Collation@icu_56@@SADI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '8']
and ['eax,', '0Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FFh']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ceFromCE32@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0C0h']
jnb ['short', 'loc_825']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFF0000h']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '0FF00h']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '8']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
jmp ['short', 'loc_853']
jmp ['short', 'loc_853']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0Fh']
cmp ['eax,', '1']
jnz ['short', 'loc_84E']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
jmp ['short', 'loc_853']
jmp ['short', 'loc_853']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
or ['eax,', '5000500h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCE@Collation@icu_56@@SA_JIIII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '10h']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_8]']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '6']
xor ['esi,', 'esi']
or ['eax,', 'ecx']
or ['edx,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z']
add ['esp,', '4']
push ['eax']
call ['?makeCE@Collation@icu_56@@SA_JI@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Collation@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFFh']
jnz ['short', 'loc_9B5']
mov ['eax,', '1']
jmp ['short', 'loc_9E0']
jmp ['short', 'loc_9E0']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFh']
jnz ['short', 'loc_9C8']
mov ['eax,', '2']
jmp ['short', 'loc_9E0']
jmp ['short', 'loc_9E0']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFh']
jnz ['short', 'loc_9DB']
mov ['eax,', '3']
jmp ['short', 'loc_9E0']
jmp ['short', 'loc_9E0']
mov ['eax,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?countBytes@CollationWeights@icu_56@@ABEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*4+18h]']
sub ['eax,', '[esi+edx*4+4]']
add ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4CollationWeights@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '29h']
mov ['edi,', '[ebp+var_8]']
rep ['movsd']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CollationWeights@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+9Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0A0h],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_AC0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '5']
jge ['short', 'loc_AE4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+eax*4+18h],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+4],', '0']
jmp ['short', 'loc_AB7']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initForPrimary@CollationWeights@icu_56@@QAEXC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '3']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0FFh']
movsx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_B4E']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0FEh']
jmp ['short', 'loc_B62']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0FFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0FFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initForSecondary@CollationWeights@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0FFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initForTertiary@CollationWeights@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '3Fh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+28h],', '3Fh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incWeight@CollationWeights@icu_56@@ABEIIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getWeightByte@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+eax*4+18h]']
jnb ['short', 'loc_CFC']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?setWeightByte@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_D53']
jmp ['short', 'loc_D4E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4+4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?setWeightByte@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_D4E']
mov ['eax,', 'ds:?__LINE__Var@?1??incWeight@CollationWeights@icu_56@@ABEIIH@Z@4JA']
add ['eax,', '9']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_CBF']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<length', '>']
dw ['3Eh']
unicode ['0,', '<', '0>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\collationweights.cpp>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??incWeight@CollationWeights@icu_56@@ABEIIH@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getWeightByte@icu_56@@YAIIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getWeightTrail@icu_56@@YAIIH@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '4']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', 'cl']
and ['eax,', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setWeightByte@icu_56@@YAIIHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '3']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '20h']
jge ['short', 'loc_EAE']
or ['eax,', '0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_4]']
shr ['eax,', 'cl']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_EB5']
mov ['[ebp+var_8],', '0']
mov ['eax,', '20h']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '0FFFFFF00h']
mov ['ecx,', '[ebp+arg_4]']
shl ['eax,', 'cl']
or ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
shl ['edx,', 'cl']
or ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getWeightByte@icu_56@@YAIIH@Z']
add ['esp,', '8']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+eax*4+18h]']
ja ['short', 'loc_F4E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?setWeightByte@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
jmp ['loc_FE0']
jmp ['loc_FDB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ecx+eax*4+4]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?countBytes@CollationWeights@icu_56@@ABEHH@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ebp+arg_8]']
cdq
idiv ['ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
add ['edx,', '[ecx+eax*4+4]']
push ['edx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setWeightByte@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?countBytes@CollationWeights@icu_56@@ABEHH@Z']
mov ['ecx,', 'eax']
mov ['eax,', '[ebp+arg_8]']
cdq
idiv ['ecx']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_FDB']
mov ['eax,', 'ds:?__LINE__Var@?1??incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z@4JA']
add ['eax,', '0Bh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_F0B']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4+4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?setWeightTrail@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4+18h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['?setWeightTrail@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?countBytes@CollationWeights@icu_56@@ABEHH@Z']
mov ['ecx,', '[ebp+arg_0]']
imul ['eax,', '[ecx+0Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setWeightTrail@icu_56@@YAIIHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '4']
sub ['eax,', '[ebp+arg_4]']
shl ['eax,', '3']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '0FFFFFF00h']
mov ['ecx,', '[ebp+arg_4]']
shl ['eax,', 'cl']
and ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
shl ['edx,', 'cl']
or ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getWeightRanges@CollationWeights@icu_56@@AAECII@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '228h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_228]']
mov ['ecx,', '8Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1150']
mov ['eax,', 'ds:?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@FJNHHGNE@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_117B']
mov ['eax,', 'ds:?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA']
add ['eax,', '2']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CA@KPPBFBKL@?$AAu?$AAp?$AAp?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_11C9']
mov ['edx,', 'ds:?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA']
add ['edx,', '0Ch']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DE@OBIDDMCG@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DO?$AA?$DN?$AAm?$AAi?$AAd?$AAd?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_11D8']
xor ['al,', 'al']
jmp ['loc_18F2']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_24]']
jge ['short', 'loc_11FC']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?truncateWeight@icu_56@@YAIIH@Z']
add ['esp,', '8']
cmp ['[ebp+arg_0],', 'eax']
jnz ['short', 'loc_11FC']
xor ['al,', 'al']
jmp ['loc_18F2']
push ['50h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['10h']
push ['0']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['50h']
push ['0']
lea ['eax,', '[ebp+var_EC]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_104],', 'eax']
jmp ['short', 'loc_1255']
mov ['eax,', '[ebp+var_104]']
sub ['eax,', '1']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_104]']
cmp ['ecx,', '[eax]']
jle ['loc_1346']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?getWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+var_110],', 'eax']
mov ['eax,', '[ebp+var_104]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_110]']
cmp ['edx,', '[ecx+eax*4+18h]']
jnb ['loc_1322']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?incWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+var_104]']
shl ['edx,', '4']
mov ['[ebp+edx+Dst],', 'eax']
mov ['eax,', '[ebp+var_104]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*4+18h]']
push ['edx']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?setWeightTrail@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_104]']
shl ['edx,', '4']
mov ['[ebp+edx+var_78],', 'eax']
mov ['eax,', '[ebp+var_104]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+eax+var_74],', 'ecx']
mov ['eax,', '[ebp+var_104]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*4+18h]']
sub ['edx,', '[ebp+var_110]']
mov ['eax,', '[ebp+var_104]']
shl ['eax,', '4']
mov ['[ebp+eax+var_70],', 'edx']
mov ['eax,', '[ebp+var_104]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?truncateWeight@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+var_F8],', 'eax']
jmp ['loc_1246']
cmp ['[ebp+var_F8],', '0FF000000h']
jnb ['short', 'loc_136F']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_F8]']
push ['edx']
call ['?incWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_1379']
mov ['[ebp+Src],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_11C],', 'eax']
jmp ['short', 'loc_139C']
mov ['eax,', '[ebp+var_11C]']
sub ['eax,', '1']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_11C]']
cmp ['ecx,', '[eax]']
jle ['loc_1499']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?getWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_128]']
cmp ['edx,', '[ecx+eax*4+4]']
jbe ['loc_1475']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax*4+4]']
push ['edx']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?setWeightTrail@icu_56@@YAIIHI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_11C]']
shl ['edx,', '4']
mov ['[ebp+edx+var_EC],', 'eax']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?decWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+var_11C]']
shl ['edx,', '4']
mov ['[ebp+edx+var_E8],', 'eax']
mov ['eax,', '[ebp+var_11C]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_11C]']
mov ['[ebp+eax+var_E4],', 'ecx']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_128]']
sub ['edx,', '[ecx+eax*4+4]']
mov ['eax,', '[ebp+var_11C]']
shl ['eax,', '4']
mov ['[ebp+eax+var_E0],', 'edx']
mov ['eax,', '[ebp+var_11C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
push ['ecx']
call ['?truncateWeight@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+var_F8],', 'eax']
jmp ['loc_138D']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_F8]']
push ['edx']
call ['?decWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+var_90]']
cmp ['eax,', '[ebp+Src]']
jb ['short', 'loc_14F8']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '4']
sub ['edx,', '[ecx]']
shl ['edx,', '3']
mov ['ecx,', 'edx']
shr ['eax,', 'cl']
add ['eax,', '1']
mov ['[ebp+var_88],', 'eax']
jmp ['loc_178D']
mov ['[ebp+var_134],', '4']
jmp ['short', 'loc_1513']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_134]']
cmp ['ecx,', '[eax]']
jle ['loc_178D']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
cmp ['[ebp+eax+var_70],', '0']
jle ['loc_1788']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
cmp ['[ebp+eax+var_E0],', '0']
jle ['loc_1788']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+eax+var_78]']
mov ['[ebp+var_140],', 'ecx']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+eax+var_EC]']
mov ['[ebp+var_14C],', 'ecx']
mov ['[ebp+var_155],', '0']
mov ['eax,', '[ebp+var_140]']
cmp ['eax,', '[ebp+var_14C]']
jbe ['loc_1666']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_140]']
push ['ecx']
call ['?truncateWeight@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+var_134]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_14C]']
push ['eax']
call ['?truncateWeight@icu_56@@YAIIH@Z']
add ['esp,', '8']
cmp ['esi,', 'eax']
jz ['short', 'loc_15EF']
mov ['ecx,', 'ds:?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA']
add ['ecx,', '6Eh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1JE@NMJFPEPJ@?$AAt?$AAr?$AAu?$AAn?$AAc?$AAa?$AAt?$AAe?$AAW?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AAE?$AAn?$AAd?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?9@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_134]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+eax+var_E8]']
mov ['[ebp+ecx+var_78],', 'edx']
mov ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+var_134]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+ecx+var_78]']
push ['edx']
call ['?getWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+var_134]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+ecx+Dst]']
push ['edx']
call ['?getWeightTrail@icu_56@@YAIIH@Z']
add ['esp,', '8']
sub ['esi,', 'eax']
add ['esi,', '1']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['[ebp+eax+var_70],', 'esi']
mov ['[ebp+var_155],', '1']
jmp ['loc_1724']
mov ['eax,', '[ebp+var_140]']
cmp ['eax,', '[ebp+var_14C]']
jnz ['short', 'loc_16B8']
mov ['eax,', '[ebp+var_134]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_134]']
mov ['esi,', '[ebp+var_C]']
mov ['eax,', '[ecx+eax*4+4]']
cmp ['eax,', '[esi+edx*4+18h]']
jb ['short', 'loc_16B6']
mov ['ecx,', 'ds:?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA']
add ['ecx,', '79h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1EE@ILHEBCCM@?$AAm?$AAi?$AAn?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$FN?$AA?$DM?$AAm?$AAa?$AAx?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1724']
mov ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+var_140]']
push ['ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?incWeight@CollationWeights@icu_56@@ABEIIH@Z']
cmp ['eax,', '[ebp+var_14C]']
jnz ['short', 'loc_1724']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_134]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+eax+var_E8]']
mov ['[ebp+ecx+var_78],', 'edx']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_134]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+eax+var_70]']
add ['edx,', '[ebp+ecx+var_E0]']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['[ebp+eax+var_70],', 'edx']
mov ['[ebp+var_155],', '1']
movsx ['eax,', '[ebp+var_155]']
test ['eax,', 'eax']
jz ['short', 'loc_1788']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['[ebp+eax+var_E0],', '0']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_134]']
cmp ['edx,', '[ecx]']
jle ['short', 'loc_1786']
mov ['eax,', '[ebp+var_134]']
shl ['eax,', '4']
mov ['[ebp+eax+var_E0],', '0']
mov ['ecx,', '[ebp+var_134]']
shl ['ecx,', '4']
mov ['[ebp+ecx+var_70],', '0']
jmp ['short', 'loc_1743']
jmp ['short', 'loc_178D']
jmp ['loc_1504']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+0A0h],', '0']
cmp ['[ebp+var_88],', '0']
jle ['short', 'loc_17D9']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['10h']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '2Ch']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+0A0h],', '1']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['[ebp+var_164],', 'ecx']
jmp ['short', 'loc_17F8']
mov ['eax,', '[ebp+var_164]']
add ['eax,', '1']
mov ['[ebp+var_164],', 'eax']
cmp ['[ebp+var_164],', '4']
jg ['loc_18E5']
mov ['eax,', '[ebp+var_164]']
shl ['eax,', '4']
cmp ['[ebp+eax+var_E0],', '0']
jle ['short', 'loc_1877']
push ['1']
mov ['eax,', '[ebp+var_164]']
shl ['eax,', '4']
lea ['ecx,', '[ebp+eax+var_EC]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['10h']
mov ['edx,', '[ebp+var_164]']
shl ['edx,', '4']
lea ['eax,', '[ebp+edx+var_EC]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0A0h]']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx+2Ch]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0A0h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+0A0h],', 'ecx']
mov ['eax,', '[ebp+var_164]']
shl ['eax,', '4']
cmp ['[ebp+eax+var_70],', '0']
jle ['short', 'loc_18E0']
push ['1']
mov ['eax,', '[ebp+var_164]']
shl ['eax,', '4']
lea ['ecx,', '[ebp+eax+Dst]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['10h']
mov ['edx,', '[ebp+var_164]']
shl ['edx,', '4']
lea ['eax,', '[ebp+edx+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0A0h]']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx+2Ch]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0A0h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+0A0h],', 'ecx']
jmp ['loc_17E9']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+0A0h],', '0']
setnle ['al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '228h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN44']
dd ['offset', '$LN41']
dd ['0FFFFFF6Ch,', '10h']
dd ['offset', '$LN42']
dd ['0FFFFFF14h,', '50h']
dd ['offset', '$LN43']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EE@ILHEBCCM@?$AAm?$AAi?$AAn?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$FN?$AA?$DM?$AAm?$AAa?$AAx?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@']
unicode ['0,', '<minBytes[length]>']
dw ['3Ch']
unicode ['0,', '<maxBytes[length]>,0']
assume ['cs:_rdata']
public ['??_C@_1JE@NMJFPEPJ@?$AAt?$AAr?$AAu?$AAn?$AAc?$AAa?$AAt?$AAe?$AAW?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AAE?$AAn?$AAd?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?9@']
unicode ['0,', '<truncateWeight(lowerEnd,', 'length-1)==', 'truncateWeight(upper>']
unicode ['0,', '<Start,', 'length-1)>,0']
assume ['cs:_rdata']
public ['??_C@_1DE@OBIDDMCG@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DO?$AA?$DN?$AAm?$AAi?$AAd?$AAd?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@']
unicode ['0,', '<lowerLength>']
dw ['3Eh']
unicode ['0,', '<=middleLength>,0']
assume ['cs:_rdata']
public ['??_C@_1CA@KPPBFBKL@?$AAu?$AAp?$AAp?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<upperLimit', '!=', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1CA@FJNHHGNE@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<lowerLimit', '!=', '0>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncateWeight@icu_56@@YAIIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '4']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
or ['eax,', '0FFFFFFFFh']
shl ['eax,', 'cl']
and ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?incWeightTrail@icu_56@@YAIIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '4']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
mov ['eax,', '1']
shl ['eax,', 'cl']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decWeightTrail@icu_56@@YAIIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '4']
sub ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '3']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', 'eax']
mov ['eax,', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1B9D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+0A0h]']
jge ['loc_1C62']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
cmp ['[edx+eax+34h],', 'ecx']
jg ['loc_1C62']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+eax+38h]']
jg ['short', 'loc_1C4A']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+34h]']
cmp ['edx,', '[ebp+arg_4]']
jle ['short', 'loc_1BFC']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+eax+38h],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0A0h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0A0h],', '1']
jle ['short', 'loc_1C46']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['0']
push ['0']
push ['offset', '?compareRanges@icu_56@@YAHPBX00@Z']
push ['10h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A0h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2Ch']
push ['eax']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['al,', '1']
jmp ['short', 'loc_1C64']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '[ecx+eax+38h]']
mov ['[ebp+arg_0],', 'edx']
jmp ['loc_1B94']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN10']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareRanges@icu_56@@YAHPBX00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_1CE9']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_1CFC']
jmp ['short', 'loc_1CFC']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_1CFA']
mov ['eax,', '1']
jmp ['short', 'loc_1CFC']
jmp ['short', 'loc_1CFC']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1D40']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0A0h]']
jge ['short', 'loc_1D75']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+34h]']
cmp ['edx,', '[ebp+arg_4]']
jnz ['short', 'loc_1D75']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+eax+38h]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_1D37']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?countBytes@CollationWeights@icu_56@@ABEHH@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '[ebp+var_2C]']
cmp ['[ebp+arg_0],', 'eax']
jle ['short', 'loc_1D9A']
xor ['al,', 'al']
jmp ['loc_1F3A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_50],', '1']
jmp ['short', 'loc_1DBE']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_1E0C']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+2Ch]']
cmp ['edx,', '[ebp+var_38]']
jnb ['short', 'loc_1DE8']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+2Ch]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+30h]']
cmp ['edx,', '[ebp+var_44]']
jbe ['short', 'loc_1E0A']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+30h]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_1DB5']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
cdq
idiv ['ecx']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_1E3C']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+arg_0]']
jge ['short', 'loc_1E83']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+arg_0]']
jge ['short', 'loc_1E83']
mov ['ecx,', 'ds:?__LINE__Var@?1??allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z@4JA']
add ['ecx,', '24h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1FA@KKPCFJND@?$AA?$CI?$AAc?$AAo?$AAu?$AAn?$AAt?$AA1?$AA?5?$AA?$CL?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA2?$AA?5?$AA?$CK?$AA?5?$AAn?$AAe?$AAx?$AAt?$AAC?$AAo?$AAu?$AAn?$AAt?$AAB?$AAy?$AAt?$AAe@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+2Ch],', 'ecx']
cmp ['[ebp+var_68],', '0']
jnz ['short', 'loc_1EC2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0A0h],', '1']
jmp ['short', 'loc_1F38']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+30h]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?incWeight@CollationWeights@icu_56@@ABEIIH@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+3Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+40h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+44h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+48h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0A0h],', '2']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_rdata']
public ['??_C@_1FA@KKPCFJND@?$AA?$CI?$AAc?$AAo?$AAu?$AAn?$AAt?$AA1?$AA?5?$AA?$CL?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA2?$AA?5?$AA?$CK?$AA?5?$AAn?$AAe?$AAx?$AAt?$AAC?$AAo?$AAu?$AAn?$AAt?$AAB?$AAy?$AAt?$AAe@']
unicode ['0,', '<(count1', '+', 'count2', '*', 'nextCountBytes)', '>']
dw ['3Eh']
unicode ['0,', '<=', 'n>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?allocWeights@CollationWeights@icu_56@@QAECIIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getWeightRanges@CollationWeights@icu_56@@AAECII@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1FE5']
xor ['al,', 'al']
jmp ['loc_207A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2007']
jmp ['short', 'loc_206B']
cmp ['[ebp+var_14],', '4']
jnz ['short', 'loc_2011']
xor ['al,', 'al']
jmp ['short', 'loc_207A']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_202A']
jmp ['short', 'loc_206B']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_203C']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+34h]']
cmp ['edx,', '[ebp+var_14]']
jnz ['short', 'loc_2066']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+2Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z']
jmp ['short', 'loc_2033']
jmp ['loc_1FE5']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+9Ch],', '0']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextWeight@CollationWeights@icu_56@@QAEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+9Ch]']
cmp ['edx,', '[ecx+0A0h]']
jl ['short', 'loc_20D4']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_217A']
jmp ['loc_217A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+9Ch]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+2Ch]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_E8],', '0']
jnz ['short', 'loc_212D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+9Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+9Ch],', 'ecx']
jmp ['short', 'loc_2177']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?incWeight@CollationWeights@icu_56@@ABEIIH@Z']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jbe ['short', 'loc_2177']
mov ['eax,', 'ds:?__LINE__Var@?1??nextWeight@CollationWeights@icu_56@@QAEIXZ@4JA']
add ['eax,', '0Dh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1DC@KBEEDBKD@?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAe?$AAn?$AAd?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1DC@KBEEDBKD@?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAe?$AAn?$AAd?$AA?$AA@']
unicode ['0,', '<range.start', '>']
dw ['3Ch']
unicode ['0,', '<=', 'range.end>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??nextWeight@CollationWeights@icu_56@@QAEIXZ@4JA']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__allshl:near']
extrn ['?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:near']
extrn ['__imp___wassert:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_memset:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_uprv_sortArray_56:near']
end

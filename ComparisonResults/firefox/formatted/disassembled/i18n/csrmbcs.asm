endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0IteratedChar@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Dh],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+18h]']
jl ['short', 'loc_499']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Dh],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4C4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_mbcs@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_mbcs@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecognizer@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_mbcs@icu_56@@6B@']
public ['??_7CharsetRecog_mbcs@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_mbcs@icu_56@@UAEPAXI@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_mbcs@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_mbcs@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_mbcs@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_mbcs@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_mbcs@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CharsetRecog_mbcs@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_mbcs@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecognizer@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecognizer@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecognizer@icu_56@@8']
dd ['2']
dd ['offset', '??_R2CharsetRecognizer@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6C1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?match_mbcs@CharsetRecog_mbcs@icu_56@@IBEHPAVInputText@2@QBGH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '150h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_150]']
mov ['ecx,', '54h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_50],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['??0IteratedChar@icu_56@@QAE@XZ']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7D5']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
movsx ['eax,', '[ebp+var_5C]']
test ['eax,', 'eax']
jz ['short', 'loc_772']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_7B7']
cmp ['[ebp+var_68],', '0FFh']
ja ['short', 'loc_786']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_7B7']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_7B7']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?binarySearch@icu_56@@YAHPBGHG@Z']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jl ['short', 'loc_7B7']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_38],', '2']
jl ['short', 'loc_7D0']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '5']
cmp ['eax,', '[ebp+var_20]']
jl ['short', 'loc_7D0']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_8CD']
jmp ['loc_731']
cmp ['[ebp+var_20],', '0Ah']
jg ['short', 'loc_805']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_805']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_7F6']
cmp ['[ebp+var_44],', '0Ah']
jge ['short', 'loc_7F6']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_7FD']
mov ['[ebp+var_50],', '0Ah']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_8CD']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '14h']
cmp ['[ebp+var_20],', 'eax']
jge ['short', 'loc_81F']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_8CD']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_845']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1Eh']
mov ['ecx,', '[ebp+var_38]']
imul ['ecx,', '14h']
sub ['eax,', 'ecx']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '64h']
jle ['short', 'loc_843']
mov ['[ebp+var_50],', '64h']
jmp ['short', 'loc_8BD']
fild ['[ebp+var_20]']
fdiv ['ds:__real@4010000000000000']
sub ['esp,', '8']
fstp ['[esp+164h+var_164]']
call ['_log']
add ['esp,', '8']
fstp ['[ebp+var_78]']
fld ['ds:__real@4056800000000000']
fdiv ['[ebp+var_78]']
fstp ['[ebp+var_88]']
fild ['[ebp+var_2C]']
fadd ['ds:__real@3ff0000000000000']
sub ['esp,', '8']
fstp ['[esp+164h+var_164]']
call ['_log']
add ['esp,', '8']
fmul ['[ebp+var_88]']
fadd ['ds:__real@4024000000000000']
call ['__ftol2_sse']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '64h']
jge ['short', 'loc_8AA']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_150],', 'eax']
jmp ['short', 'loc_8B4']
mov ['[ebp+var_150],', '64h']
mov ['ecx,', '[ebp+var_150]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '0']
jge ['short', 'loc_8CA']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '150h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN23']
dd ['offset', '$LN22']
align ['10h']
assume ['cs:_rdata']
public ['__real@4024000000000000']
assume ['cs:_rdata']
public ['__real@3ff0000000000000']
assume ['cs:_rdata']
public ['__real@4056800000000000']
assume ['cs:_rdata']
public ['__real@4010000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?binarySearch@icu_56@@YAHPBGHG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jg ['short', 'loc_9C1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+arg_8]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_98B']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_9C4']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+arg_8]']
cmp ['edx,', 'eax']
jge ['short', 'loc_9A8']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_9B1']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_96C']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_sjis@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_sjis@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_sjis@icu_56@@6B@']
public ['??_7CharsetRecog_sjis@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_sjis@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_sjis@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_sjis@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_sjis@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_sjis@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_sjis@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_sjis@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_sjis@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_sjis@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_sjis@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_sjis@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_sjis@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_sjis@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_sjis@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AF1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextChar@CharsetRecog_sjis@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_B65']
xor ['al,', 'al']
jmp ['short', 'loc_BCB']
cmp ['[ebp+var_14],', '7Fh']
jle ['short', 'loc_B7D']
cmp ['[ebp+var_14],', '0A0h']
jle ['short', 'loc_B81']
cmp ['[ebp+var_14],', '0DFh']
jg ['short', 'loc_B81']
mov ['al,', '1']
jmp ['short', 'loc_BCB']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_BA4']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_20],', '40h']
jl ['short', 'loc_BB0']
cmp ['[ebp+var_20],', '7Fh']
jle ['short', 'loc_BC9']
cmp ['[ebp+var_20],', '80h']
jl ['short', 'loc_BC2']
cmp ['[ebp+var_20],', '0FEh']
jle ['short', 'loc_BC9']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?match@CharsetRecog_sjis@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['39h']
push ['offset', '_commonChars_sjis']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?match_mbcs@CharsetRecog_mbcs@icu_56@@IBEHPAVInputText@2@QBGH@Z']
mov ['[ebp+var_14],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z']
cmp ['[ebp+var_14],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@CharsetRecog_sjis@icu_56@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_09LOKLFMHN@Shift_JIS?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_09LOKLFMHN@Shift_JIS?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguage@CharsetRecog_sjis@icu_56@@UBEPBDXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_02DJBIDCPN@ja?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02DJBIDCPN@ja?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_euc@icu_56@@UAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_euc@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_euc@icu_56@@6B@']
public ['??_7CharsetRecog_euc@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_euc@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_euc@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_euc@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_euc@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_euc@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_euc@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_euc@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_euc@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_euc@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DE9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_E75']
xor ['al,', 'al']
jmp ['loc_F27']
cmp ['[ebp+var_14],', '8Dh']
jg ['short', 'loc_E85']
mov ['al,', '1']
jmp ['loc_F27']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_EAA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '8']
or ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_14],', '0A1h']
jl ['short', 'loc_ED0']
cmp ['[ebp+var_14],', '0FEh']
jg ['short', 'loc_ED0']
cmp ['[ebp+var_20],', '0A1h']
jge ['short', 'loc_ECC']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['al,', '1']
jmp ['short', 'loc_F27']
cmp ['[ebp+var_14],', '8Eh']
jnz ['short', 'loc_EED']
cmp ['[ebp+var_20],', '0A1h']
jge ['short', 'loc_EE9']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['al,', '1']
jmp ['short', 'loc_F27']
cmp ['[ebp+var_14],', '8Fh']
jnz ['short', 'loc_F25']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '8']
or ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_2C],', '0A1h']
jge ['short', 'loc_F25']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_euc_jp@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_euc_jp@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_euc_jp@icu_56@@6B@']
public ['??_7CharsetRecog_euc_jp@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_euc_jp@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_euc_jp@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_euc_jp@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_euc_jp@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_euc_jp@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_euc_jp@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_euc_jp@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_euc_jp@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_euc_jp@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_euc_jp@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_euc_jp@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc_jp@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_106D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_06KCFOODCD@EUC?9JP?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_06KCFOODCD@EUC?9JP?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguage@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_02DJBIDCPN@ja?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?match@CharsetRecog_euc_jp@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['64h']
push ['offset', '_commonChars_euc_jp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?match_mbcs@CharsetRecog_mbcs@icu_56@@IBEHPAVInputText@2@QBGH@Z']
mov ['[ebp+var_14],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z']
cmp ['[ebp+var_14],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_euc_kr@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_euc_kr@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_euc_kr@icu_56@@6B@']
public ['??_7CharsetRecog_euc_kr@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_euc_kr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_euc_kr@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_euc_kr@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_euc_kr@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_euc_kr@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_euc_kr@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_euc_kr@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_euc_kr@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_euc_kr@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_euc_kr@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_euc_kr@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc_kr@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_128D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_06JBKKOLJG@EUC?9KR?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_06JBKKOLJG@EUC?9KR?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguage@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_02KGFJHFEE@ko?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02KGFJHFEE@ko?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?match@CharsetRecog_euc_kr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['64h']
push ['offset', '_commonChars_euc_kr']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?match_mbcs@CharsetRecog_mbcs@icu_56@@IBEHPAVInputText@2@QBGH@Z']
mov ['[ebp+var_14],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z']
cmp ['[ebp+var_14],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_big5@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_big5@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_big5@icu_56@@6B@']
public ['??_7CharsetRecog_big5@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_big5@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_big5@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_big5@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_big5@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_big5@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_big5@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_big5@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_big5@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_big5@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_big5@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_big5@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_big5@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_big5@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_big5@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14A9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextChar@CharsetRecog_big5@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_151D']
xor ['al,', 'al']
jmp ['short', 'loc_1573']
cmp ['[ebp+var_14],', '7Fh']
jle ['short', 'loc_152C']
cmp ['[ebp+var_14],', '0FFh']
jnz ['short', 'loc_1530']
mov ['al,', '1']
jmp ['short', 'loc_1573']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_1555']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '8']
or ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_20],', '40h']
jl ['short', 'loc_156A']
cmp ['[ebp+var_20],', '7Fh']
jz ['short', 'loc_156A']
cmp ['[ebp+var_20],', '0FFh']
jnz ['short', 'loc_1571']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@CharsetRecog_big5@icu_56@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_04LCGJKEFB@Big5?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_04LCGJKEFB@Big5?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguage@CharsetRecog_big5@icu_56@@UBEPBDXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_02PEPMCKME@zh?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_02PEPMCKME@zh?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?match@CharsetRecog_big5@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['60h']
push ['offset', '_commonChars_big5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?match_mbcs@CharsetRecog_mbcs@icu_56@@IBEHPAVInputText@2@QBGH@Z']
mov ['[ebp+var_14],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z']
cmp ['[ebp+var_14],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetRecog_gb_18030@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_gb_18030@icu_56@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_gb_18030@icu_56@@6B@']
public ['??_7CharsetRecog_gb_18030@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_gb_18030@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_gb_18030@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_gb_18030@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_gb_18030@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_gb_18030@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_gb_18030@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_gb_18030@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_gb_18030@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_gb_18030@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_gb_18030@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_gb_18030@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_commonChars_sjis+40h']
dd ['offset', '??_R3CharsetRecog_gb_18030@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_gb_18030@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1791']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextChar@CharsetRecog_gb_18030@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_1824']
xor ['al,', 'al']
jmp ['loc_18FF']
cmp ['[ebp+var_14],', '80h']
jg ['short', 'loc_1834']
mov ['al,', '1']
jmp ['loc_18FF']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_1859']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '8']
or ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_14],', '81h']
jl ['loc_18FD']
cmp ['[ebp+var_14],', '0FEh']
jg ['loc_18FD']
cmp ['[ebp+var_20],', '40h']
jl ['short', 'loc_187F']
cmp ['[ebp+var_20],', '7Eh']
jle ['short', 'loc_188E']
cmp ['[ebp+var_20],', '50h']
jl ['short', 'loc_1892']
cmp ['[ebp+var_20],', '0FEh']
jg ['short', 'loc_1892']
mov ['al,', '1']
jmp ['short', 'loc_18FF']
cmp ['[ebp+var_20],', '30h']
jl ['short', 'loc_18F6']
cmp ['[ebp+var_20],', '39h']
jg ['short', 'loc_18F6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '81h']
jl ['short', 'loc_18F6']
cmp ['[ebp+var_2C],', '0FEh']
jg ['short', 'loc_18F6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?nextByte@IteratedChar@icu_56@@QAEHPAVInputText@2@@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '30h']
jl ['short', 'loc_18F6']
cmp ['[ebp+var_38],', '39h']
jg ['short', 'loc_18F6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '8']
or ['ecx,', 'edx']
or ['ecx,', '[ebp+var_38]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['al,', '1']
jmp ['short', 'loc_18FF']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+0Ch],', '1']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DNCGDNOG@GB18030?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_07DNCGDNOG@GB18030?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguage@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'offset', '??_C@_02PEPMCKME@zh?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?match@CharsetRecog_gb_18030@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['64h']
push ['offset', '_commonChars_gb_18030']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?match_mbcs@CharsetRecog_mbcs@icu_56@@IBEHPAVInputText@2@QBGH@Z']
mov ['[ebp+var_14],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z']
cmp ['[ebp+var_14],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??1CharsetRecognizer@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_7type_info@@6B@:near']
extrn ['__purecall:near']
extrn ['??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_mbcs@icu_56@@UAEPAXI@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['_log:near']
extrn ['__fltused:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__ftol2_sse:near']
extrn ['??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_sjis@icu_56@@UAEPAXI@Z:near']
extrn ['?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z:near']
extrn ['??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_euc@icu_56@@UAEPAXI@Z:near']
extrn ['??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_euc_jp@icu_56@@UAEPAXI@Z:near']
extrn ['??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_euc_kr@icu_56@@UAEPAXI@Z:near']
extrn ['??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_big5@icu_56@@UAEPAXI@Z:near']
extrn ['??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_gb_18030@icu_56@@UAEPAXI@Z:near']
end

endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9RegexPattern@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8RegexPattern@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRegexPattern@icu_56@@UAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1RegexPattern@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_209']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ERegexPattern@icu_56@@UAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_292']
push ['offset', '??1RegexPattern@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['98h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_28A']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_2BB']
mov ['ecx,', '[ebp+var_8]']
call ['??1RegexPattern@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2B8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RegexPattern@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RegexPattern@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RegexPattern@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RegexPattern@icu_56@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$0 proc near 
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0RegexPattern@icu_56@@QAE@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RegexPattern@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4RegexPattern@icu_56@@6B@']
public ['??_7RegexPattern@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@RegexPattern@icu_56@@UBEPAV12@XZ']
dd ['offset', '?flags@RegexPattern@icu_56@@UBEIXZ']
dd ['offset', '?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z']
dd ['offset', '?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ']
dd ['offset', '?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z']
dd ['offset', '?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z']
dd ['offset', '?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z']
dd ['offset', '?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$1']
dd ['offset', '__unwindtable$??0RegexPattern@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4RegexPattern@icu_56@@6B@']
dd ['offset', '??_R0?AVRegexPattern@icu_56@@@8']
dd ['offset', '??_R3RegexPattern@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVRegexPattern@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3RegexPattern@icu_56@@8']
dd ['3']
dd ['offset', '??_R2RegexPattern@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2RegexPattern@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RegexPattern@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3RegexPattern@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RegexPattern@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RegexPattern@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RegexPattern@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RegexPattern@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0RegexPattern@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RegexPattern@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$1']
dd ['offset', '__unwindtable$??0RegexPattern@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1A8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1B4]']
mov ['ecx,', '6Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_6FE']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_CA1']
mov ['ecx,', '[ebp+var_14]']
call ['?zap@RegexPattern@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RegexPattern@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax+5Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_738']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_CA1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_777']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_utext_clone_56']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
jmp ['loc_833']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1A0],', '0']
jz ['short', 'loc_7D7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+var_1A0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_1A0]']
mov ['dword', 'ptr', '[edx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['eax,', '[ebp+var_1A0]']
mov ['[ebp+var_1B4],', 'eax']
jmp ['short', 'loc_7E1']
mov ['[ebp+var_1B4],', '0']
mov ['ecx,', '[ebp+var_1B4]']
mov ['[ebp+var_1AC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_1AC]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_815']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '7']
jmp ['short', 'loc_833']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
push ['edx']
push ['0']
call ['_utext_openConstUnicodeString_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_851']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_CA1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+60h]']
mov ['[eax+60h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+70h]']
mov ['[eax+70h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+74h]']
mov ['[eax+74h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+78h]']
mov ['[eax+78h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+7Ch]']
mov ['[eax+7Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+80h]']
mov ['[eax+80h],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+84h]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+88h]']
mov ['[eax+88h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+8Ch]']
call ['??4Regex8BitSet@icu_56@@QAEXABU01@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+90h]']
mov ['[eax+90h],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
call ['dword', 'ptr', 'ds:__imp_?assign@UVector64@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+6Ch]']
call ['dword', 'ptr', 'ds:__imp_?assign@UVector32@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_194],', 'eax']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_194]']
mov ['edx,', '20h']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_??_UUMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_17C],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_17C],', '0']
jz ['short', 'loc_A0B']
push ['offset', '??0Regex8BitSet@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_194]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+var_17C]']
push ['ecx']
call ['??_H@YGXPAXIHP6EPAX0@Z@Z']
mov ['edx,', '[ebp+var_17C]']
mov ['[ebp+var_1B4],', 'edx']
jmp ['short', 'loc_A15']
mov ['[ebp+var_1B4],', '0']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+var_188],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_188]']
mov ['[ecx+58h],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+58h],', '0']
jnz ['short', 'loc_A4F']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '7']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_CA1']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_A61']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_B8C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A8B']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_CA1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+54h]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_164],', 'eax']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+var_164],', '0']
jz ['short', 'loc_B11']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_164]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_164]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['edx,', '[ebp+var_164]']
mov ['dword', 'ptr', '[edx+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_164]']
mov ['[ebp+var_1B4],', 'eax']
jmp ['short', 'loc_B1B']
mov ['[ebp+var_1B4],', '0']
mov ['ecx,', '[ebp+var_1B4]']
mov ['[ebp+var_170],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_170]']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_B49']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '7']
jmp ['short', 'loc_B8C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+54h]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+58h]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '5']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+58h]']
call ['??4Regex8BitSet@icu_56@@QAEXABU01@@Z']
jmp ['loc_A58']
mov ['[ebp+var_50],', '0FFFFFFFFh']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+94h]']
push ['edx']
call ['_uhash_nextElement_56']
add ['esp,', '8']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['loc_C9E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BD1']
jmp ['loc_C9E']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_68],', 'ecx']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14C],', 'eax']
mov ['[ebp+var_4],', '3']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_C37']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_14C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14C]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_14C]']
mov ['[ebp+var_1B4],', 'edx']
jmp ['short', 'loc_C41']
mov ['[ebp+var_1B4],', '0']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+var_158],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_158]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_80],', 'ecx']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_C78']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '7']
jmp ['short', 'loc_C99']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+94h]']
push ['ecx']
call ['_uhash_puti_56']
add ['esp,', '10h']
jmp ['loc_B93']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN36']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN35']
dd ['offset', '$LN33']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1A0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-17Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-164h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-14Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1B8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z']
dd ['offset', '?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
public ['??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECH@Z']
dd ['offset', '??8UnicodeSet@icu_56@@UBECABV01@@Z']
dd ['offset', '?hashCode@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?size@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?isEmpty@UnicodeSet@icu_56@@UBECXZ']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECHH@Z']
dd ['offset', '?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z']
dd ['offset', '?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?clear@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?getRangeCount@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?compact@UnicodeSet@icu_56@@UAEAAV12@XZ']
assume ['cs:_rdata']
public ['??_SUnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$2']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$3']
dd ['offset', '__unwindtable$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeSet@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeSet@icu_56@@8']
dd ['1,', '6']
dd ['offset', '??_R2UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeSet@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeSet@icu_56@@8']
dd ['5,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1193']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Regex8BitSet@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+Dst],', 'ecx']
push ['20h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Regex8BitSet@icu_56@@QAEXABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+Dst],', 'ecx']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['20h']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_12A7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@RegexPattern@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?init@RegexPattern@icu_56@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+7Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+80h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+88h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+90h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+94h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['esi,', 'esp']
push ['14h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_1458']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_110]']
call ['dword', 'ptr', 'ds:__imp_??0UVector64@icu_56@@QAE@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_110]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUVector64@icu_56@@6B@']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_154],', 'edx']
jmp ['short', 'loc_1462']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_11C]']
mov ['[ecx+10h],', 'edx']
mov ['esi,', 'esp']
push ['14h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_14E1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
call ['dword', 'ptr', 'ds:__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_F8]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUVector32@icu_56@@6B@']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_154],', 'edx']
jmp ['short', 'loc_14EB']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_104]']
mov ['[ecx+6Ch],', 'edx']
mov ['esi,', 'esp']
push ['18h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_156A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['dword', 'ptr', 'ds:__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_E0]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUVector@icu_56@@6B@']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_154],', 'edx']
jmp ['short', 'loc_1574']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_EC]']
mov ['[ecx+54h],', 'edx']
mov ['esi,', 'esp']
push ['34h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_4],', '3']
cmp ['[ebp+var_140],', '0']
jz ['short', 'loc_15F9']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_140]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_140]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['ecx,', '[ebp+var_140]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['edx,', '[ebp+var_140]']
mov ['[ebp+var_154],', 'edx']
jmp ['short', 'loc_1603']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_14C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14C]']
mov ['[ecx+84h],', 'edx']
mov ['esi,', 'esp']
push ['20h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_1662']
mov ['ecx,', '[ebp+var_128]']
call ['??0Regex8BitSet@icu_56@@QAE@XZ']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_166C']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_154]']
mov ['[ebp+var_134],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_134]']
mov ['[ecx+8Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
push ['eax']
push ['offset', '_uhash_compareLong_56']
push ['offset', '_uhash_compareUnicodeString_56']
push ['offset', '_uhash_hashUnicodeString_56']
call ['_uhash_open_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+94h],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16D0']
jmp ['loc_1750']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_170F']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+6Ch],', '0']
jz ['short', 'loc_170F']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+54h],', '0']
jz ['short', 'loc_170F']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+84h],', '0']
jz ['short', 'loc_170F']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8Ch],', '0']
jz ['short', 'loc_170F']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+94h],', '0']
jnz ['short', 'loc_171B']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+5Ch],', '7']
jmp ['short', 'loc_1750']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '5Ch']
mov ['esi,', 'esp']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+54h]']
call ['dword', 'ptr', 'ds:__imp_?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['offset', '_uprv_deleteUObject_56']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+94h]']
push ['ecx']
call ['_uhash_setKeyDeleter_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-110h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0F8h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-140h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$4 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-128h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?init@RegexPattern@icu_56@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-158h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?init@RegexPattern@icu_56@@AAEXXZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UVector@icu_56@@6B@']
public ['??_SUVector@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UVector@icu_56@@UBEPAXXZ']
assume ['cs:_rdata']
dd ['offset', '??_R4UVector32@icu_56@@6B@']
public ['??_SUVector32@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ']
assume ['cs:_rdata']
dd ['offset', '??_R4UVector64@icu_56@@6B@']
public ['??_SUVector64@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UVector64@icu_56@@UBEPAXXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?init@RegexPattern@icu_56@@AAEXXZ']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$2']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$4']
assume ['cs:_rdata$r']
public ['??_R4UVector64@icu_56@@6B@']
dd ['offset', '??_R0?AVUVector64@icu_56@@@8']
dd ['offset', '??_R3UVector64@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUVector64@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UVector64@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UVector64@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UVector64@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UVector64@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UVector64@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UVector32@icu_56@@6B@']
dd ['offset', '??_R0?AVUVector32@icu_56@@@8']
dd ['offset', '??_R3UVector32@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUVector32@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UVector32@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UVector32@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UVector32@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UVector32@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UVector32@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UVector@icu_56@@6B@']
dd ['offset', '??_R0?AVUVector@icu_56@@@8']
dd ['offset', '??_R3UVector@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUVector@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UVector@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UVector@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UVector@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UVector@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UVector@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUVector64@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UVector64@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1A1F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUVector32@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UVector32@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1A8B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUVector@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UVector@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1AF7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?zap@RegexPattern@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '190h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_190]']
mov ['ecx,', '64h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_17C],', 'ecx']
mov ['edx,', '[ebp+var_17C]']
mov ['[ebp+var_188],', 'edx']
cmp ['[ebp+var_188],', '0']
jz ['short', 'loc_1B79']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_188]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_188]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1B83']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_1B9F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+54h]']
call ['dword', 'ptr', 'ds:__imp_?size@UVector@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_14],', 'eax']
jge ['short', 'loc_1C2D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+54h]']
call ['dword', 'ptr', 'ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1C28']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_170],', 'ecx']
cmp ['[ebp+var_170],', '0']
jz ['short', 'loc_1C1E']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1C28']
mov ['[ebp+var_190],', '0']
jmp ['loc_1B96']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+54h]']
mov ['[ebp+var_14C],', 'ecx']
mov ['edx,', '[ebp+var_14C]']
mov ['[ebp+var_158],', 'edx']
cmp ['[ebp+var_158],', '0']
jz ['short', 'loc_1C73']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_158]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_158]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1C7D']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_140],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_140]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
mov ['[ebp+var_128],', 'ecx']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_134],', 'edx']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_1CFC']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_134]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_134]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1D06']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'edx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_1D59']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1D63']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8Ch]']
mov ['[ebp+var_104],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_104]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8Ch],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_1DC7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_utext_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_1E2A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'edx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_1E16']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_190],', 'eax']
jmp ['short', 'loc_1E20']
mov ['[ebp+var_190],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+94h]']
push ['ecx']
call ['_uhash_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+94h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '190h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1RegexPattern@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1RegexPattern@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RegexPattern@icu_56@@6B@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
call ['?zap@RegexPattern@icu_56@@AAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$0 proc near 
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1UObject@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$1 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '14h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1RegexPattern@icu_56@@UAE@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1RegexPattern@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$1']
dd ['offset', '__unwindtable$??1RegexPattern@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@RegexPattern@icu_56@@UBEPAV12@XZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@RegexPattern@icu_56@@UBEPAV12@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['98h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_200E']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
call ['??0RegexPattern@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_2018']
mov ['[ebp+var_100],', '0']
mov ['ecx,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@RegexPattern@icu_56@@UBEPAV12@XZ$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?clone@RegexPattern@icu_56@@UBEPAV12@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@RegexPattern@icu_56@@UBEPAV12@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@RegexPattern@icu_56@@UBEPAV12@XZ$0']
dd ['offset', '__unwindtable$?clone@RegexPattern@icu_56@@UBEPAV12@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8RegexPattern@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['loc_226A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+5Ch]']
cmp ['edx,', '[ecx+5Ch]']
jnz ['loc_226A']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_213B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_213B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_226C']
jmp ['loc_226A']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_2159']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_2154']
mov ['al,', '1']
jmp ['loc_226C']
jmp ['loc_226A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['loc_226A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
xor ['edx,', 'edx']
sub ['edx,', '[ecx+20h]']
mov ['eax,', '0']
sbb ['eax,', '[ecx+24h]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_21C9']
jg ['short', 'loc_218D']
cmp ['[ebp+var_18],', '0']
jb ['short', 'loc_21C9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_F4],', 'eax']
mov ['[ebp+var_F0],', 'edx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_F0]']
jg ['short', 'loc_21C9']
jl ['short', 'loc_21BB']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_F4]']
ja ['short', 'loc_21C9']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_21DC']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
xor ['edx,', 'edx']
sub ['edx,', '[ecx+20h]']
mov ['eax,', '0']
sbb ['eax,', '[ecx+24h]']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_223F']
jg ['short', 'loc_2203']
cmp ['[ebp+var_28],', '0']
jb ['short', 'loc_223F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_F4],', 'eax']
mov ['[ebp+var_F0],', 'edx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_F0]']
jg ['short', 'loc_223F']
jl ['short', 'loc_2231']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_F4]']
ja ['short', 'loc_223F']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_2252']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_utext_equals_56']
add ['esp,', '8']
jmp ['short', 'loc_226C']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '314h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_320]']
mov ['ecx,', '0C5h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_22E0']
xor ['eax,', 'eax']
jmp ['loc_24D0']
mov ['[ebp+var_18],', '3BFh']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC40h']
jz ['short', 'loc_2301']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1030Bh']
xor ['eax,', 'eax']
jmp ['loc_24D0']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '80h']
jz ['short', 'loc_231B']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10305h']
xor ['eax,', 'eax']
jmp ['loc_24D0']
mov ['esi,', 'esp']
push ['98h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_30C],', '0']
jz ['short', 'loc_235B']
mov ['ecx,', '[ebp+var_30C]']
call ['??0RegexPattern@icu_56@@QAE@XZ']
mov ['[ebp+var_320],', 'eax']
jmp ['short', 'loc_2365']
mov ['[ebp+var_320],', '0']
mov ['eax,', '[ebp+var_320]']
mov ['[ebp+var_318],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_318]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_2397']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_24D0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_240C']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2F4],', 'eax']
mov ['ecx,', '[ebp+var_2F4]']
mov ['[ebp+var_300],', 'ecx']
cmp ['[ebp+var_300],', '0']
jz ['short', 'loc_23FB']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_300]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_300]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_320],', 'eax']
jmp ['short', 'loc_2405']
mov ['[ebp+var_320],', '0']
xor ['eax,', 'eax']
jmp ['loc_24D0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['ecx,', '[ebp+var_204]']
call ['??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_204]']
call ['?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_24AF']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2DC],', 'eax']
mov ['ecx,', '[ebp+var_2DC]']
mov ['[ebp+var_2E8],', 'ecx']
cmp ['[ebp+var_2E8],', '0']
jz ['short', 'loc_249E']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_2E8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_2E8]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_320],', 'eax']
jmp ['short', 'loc_24A8']
mov ['[ebp+var_320],', '0']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2D0],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_204]']
call ['??1RegexCompile@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_2D0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '320h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN17']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-30Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-204h]']
jmp ['??1RegexCompile@icu_56@@UAE@XZ']
endp
__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-324h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '314h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_320]']
mov ['ecx,', '0C5h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2608']
xor ['eax,', 'eax']
jmp ['loc_27F8']
mov ['[ebp+var_18],', '3BFh']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC40h']
jz ['short', 'loc_2629']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1030Bh']
xor ['eax,', 'eax']
jmp ['loc_27F8']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '80h']
jz ['short', 'loc_2643']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10305h']
xor ['eax,', 'eax']
jmp ['loc_27F8']
mov ['esi,', 'esp']
push ['98h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_30C],', '0']
jz ['short', 'loc_2683']
mov ['ecx,', '[ebp+var_30C]']
call ['??0RegexPattern@icu_56@@QAE@XZ']
mov ['[ebp+var_320],', 'eax']
jmp ['short', 'loc_268D']
mov ['[ebp+var_320],', '0']
mov ['eax,', '[ebp+var_320]']
mov ['[ebp+var_318],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_318]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_26BF']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_27F8']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2734']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2F4],', 'eax']
mov ['ecx,', '[ebp+var_2F4]']
mov ['[ebp+var_300],', 'ecx']
cmp ['[ebp+var_300],', '0']
jz ['short', 'loc_2723']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_300]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_300]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_320],', 'eax']
jmp ['short', 'loc_272D']
mov ['[ebp+var_320],', '0']
xor ['eax,', 'eax']
jmp ['loc_27F8']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['ecx,', '[ebp+var_204]']
call ['??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_204]']
call ['?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_27D7']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2DC],', 'eax']
mov ['ecx,', '[ebp+var_2DC]']
mov ['[ebp+var_2E8],', 'ecx']
cmp ['[ebp+var_2E8],', '0']
jz ['short', 'loc_27C6']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_2E8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_2E8]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_320],', 'eax']
jmp ['short', 'loc_27D0']
mov ['[ebp+var_320],', '0']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2D0],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_204]']
call ['??1RegexCompile@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_2D0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '320h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19_0']
dd ['offset', '$LN17_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-30Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-204h]']
jmp ['??1RegexCompile@icu_56@@UAE@XZ']
endp
__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-324h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?flags@RegexPattern@icu_56@@UBEIXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2B12']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax+104h],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2B91']
xor ['eax,', 'eax']
jmp ['loc_2C39']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+5Ch]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2BB9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
jmp ['loc_2C39']
mov ['esi,', 'esp']
push ['110h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_2BFD']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
call ['??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_2C07']
mov ['[ebp+var_100],', '0']
mov ['ecx,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_2C36']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['short', 'loc_2C39']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matches@RegexPattern@icu_56@@SACABVUnicodeString@2@0AAUUParseError@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2CFA']
xor ['al,', 'al']
jmp ['loc_2DFC']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+14h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_104],', 'eax']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+var_110],', 'ecx']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_2DA2']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_110]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_110]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_2DAC']
mov ['[ebp+var_118],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_2DEF']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_2DF9']
mov ['[ebp+var_118],', '0']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matches@RegexPattern@icu_56@@SACPAUUText@@0AAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2E4A']
xor ['al,', 'al']
jmp ['loc_2F7B']
mov ['[ebp+var_5],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2EDE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_104],', 'eax']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+var_110],', 'ecx']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_2F21']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_110]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_110]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_2F2B']
mov ['[ebp+var_118],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_2F6E']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_2F78']
mov ['[ebp+var_118],', '0']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '158h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_164]']
mov ['ecx,', '56h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_160],', '0']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_3050']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_160]']
or ['edx,', '1']
mov ['[ebp+var_160],', 'edx']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_3199']
jmp ['loc_3199']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_308E']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_160]']
or ['eax,', '1']
mov ['[ebp+var_160],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_3199']
jmp ['loc_3199']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', 'edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_utext_extract_56']
add ['esp,', '20h']
mov ['[ebp+var_40],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_88]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '1']
mov ['[ebp+var_24],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_88]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_94],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_94]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_utext_extract_56']
add ['esp,', '20h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+var_88]']
call ['dword', 'ptr', 'ds:__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_160]']
or ['ecx,', '1']
mov ['[ebp+var_160],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_88]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '164h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN13']
dd ['offset', '$LN10']
dd ['0FFFFFF78h,', '40h']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$0 proc near
mov ['eax,', '[ebp-160h]']
and ['eax,', '1']
jz ['$LN8']
and ['dword', 'ptr', '[ebp-160h],', '0FFFFFFFEh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
retn
endp
__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-88h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-168h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$1']
dd ['offset', '__unwindtable$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_32E0']
xor ['eax,', 'eax']
jmp ['short', 'loc_3313']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_32FC']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
jmp ['short', 'loc_3313']
jmp ['short', 'loc_3313']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['eax,', 'dword', 'ptr', 'ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A']
mov ['eax,', '[eax+414h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3368']
xor ['eax,', 'eax']
jmp ['short', 'loc_3393']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+94h]']
push ['edx']
call ['_uhash_geti_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_3390']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '10315h']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_340A']
xor ['eax,', 'eax']
jmp ['short', 'loc_3470']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+24h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_12C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_12C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN7']
dd ['offset', '$LN5_1']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-134h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '200h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_20C]']
mov ['ecx,', '80h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_358E']
xor ['eax,', 'eax']
jmp ['short', 'loc_3606']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_130]']
call ['??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_35E2']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_130]']
call ['?split@RegexMatcher@icu_56@@UAEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z']
mov ['[ebp+var_13C],', 'eax']
mov ['eax,', '[ebp+var_13C]']
mov ['[ebp+var_208],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_130]']
call ['??1RegexMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_208]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '20Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN8_1']
dd ['offset', '$LN6']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-130h]']
jmp ['??1RegexMatcher@icu_56@@UAE@XZ']
endp
__ehhandler$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-210h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '200h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_20C]']
mov ['ecx,', '80h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_371A']
xor ['eax,', 'eax']
jmp ['short', 'loc_3792']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_130]']
call ['??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_376E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_130]']
call ['?split@RegexMatcher@icu_56@@UAEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z']
mov ['[ebp+var_13C],', 'eax']
mov ['eax,', '[ebp+var_13C]']
mov ['[ebp+var_208],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_130]']
call ['??1RegexMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_208]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '20Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
dd ['offset', '$LN8_2']
dd ['offset', '$LN6_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-130h]']
jmp ['??1RegexMatcher@icu_56@@UAE@XZ']
endp
__ehhandler$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-210h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?dumpOp@RegexPattern@icu_56@@ABEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?dumpPattern@RegexPattern@icu_56@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@RegexPattern@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_H@YGXPAXIHP6EPAX0@Z@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
js ['short', 'loc_394B']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['[ebp+arg_C]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_3926']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeSet@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_??1UObject@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['__imp_??0UObject@icu_56@@QAE@ABV01@@Z:near']
extrn ['_uhash_puti_56:near']
extrn ['_uhash_nextElement_56:near']
extrn ['__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['__imp_??_UUMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_?size@UVector@icu_56@@QBEHXZ:near']
extrn ['__imp_?assign@UVector32@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?assign@UVector64@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['_utext_openConstUnicodeString_56:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['_utext_clone_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['??_GUnicodeString@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUnicodeString@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['??_GUnicodeSet@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUnicodeSet@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:near']
extrn ['?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECH@Z:near']
extrn ['??8UnicodeSet@icu_56@@UBECABV01@@Z:near']
extrn ['?hashCode@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?size@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?isEmpty@UnicodeSet@icu_56@@UBECXZ:near']
extrn ['?contains@UnicodeSet@icu_56@@UBECHH@Z:near']
extrn ['?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:near']
extrn ['?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near']
extrn ['?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:near']
extrn ['?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:near']
extrn ['?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:near']
extrn ['?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near']
extrn ['?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:near']
extrn ['?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:near']
extrn ['_memset:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['__imp_??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['_uhash_setKeyDeleter_56:near']
extrn ['_uprv_deleteUObject_56:near']
extrn ['__imp_?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['_uhash_open_56:near']
extrn ['_uhash_hashUnicodeString_56:near']
extrn ['_uhash_compareUnicodeString_56:near']
extrn ['_uhash_compareLong_56:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UVector64@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near']
extrn ['??_GUVector64@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUVector64@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UVector64@icu_56@@UBEPAXXZ:near']
extrn ['??_GUVector32@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUVector32@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ:near']
extrn ['??_GUVector@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUVector@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:near']
extrn ['__imp_??1UVector64@icu_56@@UAE@XZ:near']
extrn ['__imp_??1UVector32@icu_56@@UAE@XZ:near']
extrn ['__imp_??1UVector@icu_56@@UAE@XZ:near']
extrn ['_uhash_close_56:near']
extrn ['_utext_close_56:near']
extrn ['_utext_equals_56:near']
extrn ['_utext_setNativeIndex_56:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['??1RegexCompile@icu_56@@UAE@XZ:near']
extrn ['?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:near']
extrn ['??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z:near']
extrn ['?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z:near']
extrn ['??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:near']
extrn ['__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:near']
extrn ['_utext_extract_56:near']
extrn ['_utext_nativeLength_56:near']
extrn ['?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A:near']
extrn ['?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z:near']
extrn ['_uhash_geti_56:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:near']
extrn ['??1RegexMatcher@icu_56@@UAE@XZ:near']
extrn ['?split@RegexMatcher@icu_56@@UAEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z:near']
extrn ['?split@RegexMatcher@icu_56@@UAEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z:near']
end

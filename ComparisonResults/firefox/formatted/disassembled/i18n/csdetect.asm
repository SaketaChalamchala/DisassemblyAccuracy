endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '_initRecognizers']
push ['offset', '_gCSRecognizersInitOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_218']
jmp ['loc_29D']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_27C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_27C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_29D']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_29D']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_initRecognizers proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '5FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_5FC]']
mov ['ecx,', '17Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '_csdet_cleanup']
push ['17h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5E4],', 'eax']
cmp ['[ebp+var_5E4],', '0']
jz ['short', 'loc_3D8']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5D8],', 'eax']
cmp ['[ebp+var_5D8],', '0']
jz ['short', 'loc_3B2']
mov ['ecx,', '[ebp+var_5D8]']
call ['??0CharsetRecog_UTF8@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_3BC']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_5E4]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_3E2']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_5F0],', 'ecx']
mov ['edx,', '[ebp+var_5F0]']
mov ['[ebp+var_74],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C0],', 'eax']
cmp ['[ebp+var_5C0],', '0']
jz ['short', 'loc_476']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5B4],', 'eax']
cmp ['[ebp+var_5B4],', '0']
jz ['short', 'loc_450']
mov ['ecx,', '[ebp+var_5B4]']
call ['??0CharsetRecog_UTF_16_BE@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_45A']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_5C0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_480']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_5CC],', 'ecx']
mov ['edx,', '[ebp+var_5CC]']
mov ['[ebp+var_70],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_59C],', 'eax']
cmp ['[ebp+var_59C],', '0']
jz ['short', 'loc_514']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_590],', 'eax']
cmp ['[ebp+var_590],', '0']
jz ['short', 'loc_4EE']
mov ['ecx,', '[ebp+var_590]']
call ['??0CharsetRecog_UTF_16_LE@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_4F8']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_59C]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_51E']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_5A8],', 'ecx']
mov ['edx,', '[ebp+var_5A8]']
mov ['[ebp+var_6C],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_578],', 'eax']
cmp ['[ebp+var_578],', '0']
jz ['short', 'loc_5B2']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_56C],', 'eax']
cmp ['[ebp+var_56C],', '0']
jz ['short', 'loc_58C']
mov ['ecx,', '[ebp+var_56C]']
call ['??0CharsetRecog_UTF_32_BE@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_596']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_578]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_5BC']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_584],', 'ecx']
mov ['edx,', '[ebp+var_584]']
mov ['[ebp+var_68],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_554],', 'eax']
cmp ['[ebp+var_554],', '0']
jz ['short', 'loc_650']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_548],', 'eax']
cmp ['[ebp+var_548],', '0']
jz ['short', 'loc_62A']
mov ['ecx,', '[ebp+var_548]']
call ['??0CharsetRecog_UTF_32_LE@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_634']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_554]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_65A']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_560],', 'ecx']
mov ['edx,', '[ebp+var_560]']
mov ['[ebp+var_64],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_530],', 'eax']
cmp ['[ebp+var_530],', '0']
jz ['short', 'loc_6FA']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_518],', 'eax']
cmp ['[ebp+var_518],', '0']
jz ['short', 'loc_6C8']
mov ['ecx,', '[ebp+var_518]']
call ['??0CharsetRecog_8859_1@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_6D2']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_524],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_524]']
push ['ecx']
mov ['ecx,', '[ebp+var_530]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_704']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_53C],', 'edx']
mov ['eax,', '[ebp+var_53C]']
mov ['[ebp+var_60],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_500],', 'eax']
cmp ['[ebp+var_500],', '0']
jz ['short', 'loc_7A4']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4E8],', 'eax']
cmp ['[ebp+var_4E8],', '0']
jz ['short', 'loc_772']
mov ['ecx,', '[ebp+var_4E8]']
call ['??0CharsetRecog_8859_2@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_77C']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_4F4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_4F4]']
push ['ecx']
mov ['ecx,', '[ebp+var_500]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_7AE']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_50C],', 'edx']
mov ['eax,', '[ebp+var_50C]']
mov ['[ebp+var_5C],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4D0],', 'eax']
cmp ['[ebp+var_4D0],', '0']
jz ['short', 'loc_84E']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4B8],', 'eax']
cmp ['[ebp+var_4B8],', '0']
jz ['short', 'loc_81C']
mov ['ecx,', '[ebp+var_4B8]']
call ['??0CharsetRecog_8859_5_ru@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_826']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_4C4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_4C4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4D0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_858']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_4DC],', 'edx']
mov ['eax,', '[ebp+var_4DC]']
mov ['[ebp+var_58],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4A0],', 'eax']
cmp ['[ebp+var_4A0],', '0']
jz ['short', 'loc_8F8']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_488],', 'eax']
cmp ['[ebp+var_488],', '0']
jz ['short', 'loc_8C6']
mov ['ecx,', '[ebp+var_488]']
call ['??0CharsetRecog_8859_6_ar@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_8D0']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_494],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_494]']
push ['ecx']
mov ['ecx,', '[ebp+var_4A0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_902']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_4AC],', 'edx']
mov ['eax,', '[ebp+var_4AC]']
mov ['[ebp+var_54],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_470],', 'eax']
cmp ['[ebp+var_470],', '0']
jz ['short', 'loc_9A2']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_458],', 'eax']
cmp ['[ebp+var_458],', '0']
jz ['short', 'loc_970']
mov ['ecx,', '[ebp+var_458]']
call ['??0CharsetRecog_8859_7_el@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_97A']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_464],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_464]']
push ['ecx']
mov ['ecx,', '[ebp+var_470]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_9AC']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_47C],', 'edx']
mov ['eax,', '[ebp+var_47C]']
mov ['[ebp+var_50],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_440],', 'eax']
cmp ['[ebp+var_440],', '0']
jz ['short', 'loc_A4C']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_428],', 'eax']
cmp ['[ebp+var_428],', '0']
jz ['short', 'loc_A1A']
mov ['ecx,', '[ebp+var_428]']
call ['??0CharsetRecog_8859_8_I_he@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_A24']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_434],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_434]']
push ['ecx']
mov ['ecx,', '[ebp+var_440]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_A56']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_44C],', 'edx']
mov ['eax,', '[ebp+var_44C]']
mov ['[ebp+var_4C],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_410],', 'eax']
cmp ['[ebp+var_410],', '0']
jz ['short', 'loc_AF6']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3F8],', 'eax']
cmp ['[ebp+var_3F8],', '0']
jz ['short', 'loc_AC4']
mov ['ecx,', '[ebp+var_3F8]']
call ['??0CharsetRecog_8859_8_he@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_ACE']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_404],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_404]']
push ['ecx']
mov ['ecx,', '[ebp+var_410]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_B00']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_41C],', 'edx']
mov ['eax,', '[ebp+var_41C]']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3E0],', 'eax']
cmp ['[ebp+var_3E0],', '0']
jz ['short', 'loc_BA0']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C8],', 'eax']
cmp ['[ebp+var_3C8],', '0']
jz ['short', 'loc_B6E']
mov ['ecx,', '[ebp+var_3C8]']
call ['??0CharsetRecog_windows_1251@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_B78']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_3D4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_3D4]']
push ['ecx']
mov ['ecx,', '[ebp+var_3E0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_BAA']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_3EC],', 'edx']
mov ['eax,', '[ebp+var_3EC]']
mov ['[ebp+var_44],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3B0],', 'eax']
cmp ['[ebp+var_3B0],', '0']
jz ['short', 'loc_C4A']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_398],', 'eax']
cmp ['[ebp+var_398],', '0']
jz ['short', 'loc_C18']
mov ['ecx,', '[ebp+var_398]']
call ['??0CharsetRecog_windows_1256@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_C22']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_3A4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_3A4]']
push ['ecx']
mov ['ecx,', '[ebp+var_3B0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_C54']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_3BC],', 'edx']
mov ['eax,', '[ebp+var_3BC]']
mov ['[ebp+var_40],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_380],', 'eax']
cmp ['[ebp+var_380],', '0']
jz ['short', 'loc_CF4']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_368],', 'eax']
cmp ['[ebp+var_368],', '0']
jz ['short', 'loc_CC2']
mov ['ecx,', '[ebp+var_368]']
call ['??0CharsetRecog_KOI8_R@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_CCC']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_374],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_374]']
push ['ecx']
mov ['ecx,', '[ebp+var_380]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_CFE']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_38C],', 'edx']
mov ['eax,', '[ebp+var_38C]']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_350],', 'eax']
cmp ['[ebp+var_350],', '0']
jz ['short', 'loc_D9E']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_338],', 'eax']
cmp ['[ebp+var_338],', '0']
jz ['short', 'loc_D6C']
mov ['ecx,', '[ebp+var_338]']
call ['??0CharsetRecog_8859_9_tr@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_D76']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_344],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_344]']
push ['ecx']
mov ['ecx,', '[ebp+var_350]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_DA8']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_35C],', 'edx']
mov ['eax,', '[ebp+var_35C]']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_320],', 'eax']
cmp ['[ebp+var_320],', '0']
jz ['short', 'loc_E3C']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_314],', 'eax']
cmp ['[ebp+var_314],', '0']
jz ['short', 'loc_E16']
mov ['ecx,', '[ebp+var_314]']
call ['??0CharsetRecog_sjis@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_E20']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_320]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_E46']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_32C],', 'ecx']
mov ['edx,', '[ebp+var_32C]']
mov ['[ebp+var_34],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2FC],', 'eax']
cmp ['[ebp+var_2FC],', '0']
jz ['short', 'loc_EDA']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2F0],', 'eax']
cmp ['[ebp+var_2F0],', '0']
jz ['short', 'loc_EB4']
mov ['ecx,', '[ebp+var_2F0]']
call ['??0CharsetRecog_gb_18030@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_EBE']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_2FC]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_EE4']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_308],', 'ecx']
mov ['edx,', '[ebp+var_308]']
mov ['[ebp+var_30],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2D8],', 'eax']
cmp ['[ebp+var_2D8],', '0']
jz ['short', 'loc_F78']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2CC],', 'eax']
cmp ['[ebp+var_2CC],', '0']
jz ['short', 'loc_F52']
mov ['ecx,', '[ebp+var_2CC]']
call ['??0CharsetRecog_euc_jp@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_F5C']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_2D8]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_F82']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_2E4],', 'ecx']
mov ['edx,', '[ebp+var_2E4]']
mov ['[ebp+var_2C],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2B4],', 'eax']
cmp ['[ebp+var_2B4],', '0']
jz ['short', 'loc_1016']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2A8],', 'eax']
cmp ['[ebp+var_2A8],', '0']
jz ['short', 'loc_FF0']
mov ['ecx,', '[ebp+var_2A8]']
call ['??0CharsetRecog_euc_kr@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_FFA']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_2B4]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_1020']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_2C0],', 'ecx']
mov ['edx,', '[ebp+var_2C0]']
mov ['[ebp+var_28],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_290],', 'eax']
cmp ['[ebp+var_290],', '0']
jz ['short', 'loc_10B4']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_284],', 'eax']
cmp ['[ebp+var_284],', '0']
jz ['short', 'loc_108E']
mov ['ecx,', '[ebp+var_284]']
call ['??0CharsetRecog_big5@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_1098']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_290]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_10BE']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_29C],', 'ecx']
mov ['edx,', '[ebp+var_29C]']
mov ['[ebp+var_24],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_26C],', 'eax']
cmp ['[ebp+var_26C],', '0']
jz ['short', 'loc_1152']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_260],', 'eax']
cmp ['[ebp+var_260],', '0']
jz ['short', 'loc_112C']
mov ['ecx,', '[ebp+var_260]']
call ['??0CharsetRecog_2022JP@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_1136']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_26C]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_115C']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_278],', 'ecx']
mov ['edx,', '[ebp+var_278]']
mov ['[ebp+var_20],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_248],', 'eax']
cmp ['[ebp+var_248],', '0']
jz ['short', 'loc_11F0']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_23C],', 'eax']
cmp ['[ebp+var_23C],', '0']
jz ['short', 'loc_11CA']
mov ['ecx,', '[ebp+var_23C]']
call ['??0CharsetRecog_2022KR@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_11D4']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_248]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_11FA']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_254],', 'ecx']
mov ['edx,', '[ebp+var_254]']
mov ['[ebp+var_1C],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_224],', 'eax']
cmp ['[ebp+var_224],', '0']
jz ['short', 'loc_128E']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_218],', 'eax']
cmp ['[ebp+var_218],', '0']
jz ['short', 'loc_1268']
mov ['ecx,', '[ebp+var_218]']
call ['??0CharsetRecog_2022CN@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_1272']
mov ['[ebp+var_5F8],', '0']
push ['1']
mov ['eax,', '[ebp+var_5F8]']
push ['eax']
mov ['ecx,', '[ebp+var_224]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_1298']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+var_5FC]']
mov ['[ebp+var_230],', 'ecx']
mov ['edx,', '[ebp+var_230]']
mov ['[ebp+var_18],', 'edx']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_200],', 'eax']
cmp ['[ebp+var_200],', '0']
jz ['short', 'loc_1338']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E8],', 'eax']
cmp ['[ebp+var_1E8],', '0']
jz ['short', 'loc_1306']
mov ['ecx,', '[ebp+var_1E8]']
call ['??0CharsetRecog_IBM424_he_rtl@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_1310']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_1F4],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_1F4]']
push ['ecx']
mov ['ecx,', '[ebp+var_200]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_1342']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_20C],', 'edx']
mov ['eax,', '[ebp+var_20C]']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D0],', 'eax']
cmp ['[ebp+var_1D0],', '0']
jz ['short', 'loc_13E2']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B8],', 'eax']
cmp ['[ebp+var_1B8],', '0']
jz ['short', 'loc_13B0']
mov ['ecx,', '[ebp+var_1B8]']
call ['??0CharsetRecog_IBM424_he_ltr@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_13BA']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_1C4],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
mov ['ecx,', '[ebp+var_1D0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_13EC']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_1DC],', 'edx']
mov ['eax,', '[ebp+var_1DC]']
mov ['[ebp+var_10],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A0],', 'eax']
cmp ['[ebp+var_1A0],', '0']
jz ['short', 'loc_148C']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_188],', 'eax']
cmp ['[ebp+var_188],', '0']
jz ['short', 'loc_145A']
mov ['ecx,', '[ebp+var_188]']
call ['??0CharsetRecog_IBM420_ar_rtl@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_1464']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_194],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_194]']
push ['ecx']
mov ['ecx,', '[ebp+var_1A0]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_1496']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_1AC]']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
push ['8']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '0']
jz ['short', 'loc_1536']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_158],', 'eax']
cmp ['[ebp+var_158],', '0']
jz ['short', 'loc_1504']
mov ['ecx,', '[ebp+var_158]']
call ['??0CharsetRecog_IBM420_ar_ltr@icu_56@@QAE@XZ']
mov ['[ebp+var_5F8],', 'eax']
jmp ['short', 'loc_150E']
mov ['[ebp+var_5F8],', '0']
mov ['eax,', '[ebp+var_5F8]']
mov ['[ebp+var_164],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_164]']
push ['ecx']
mov ['ecx,', '[ebp+var_170]']
call ['??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z']
mov ['[ebp+var_5FC],', 'eax']
jmp ['short', 'loc_1540']
mov ['[ebp+var_5FC],', '0']
mov ['edx,', '[ebp+var_5FC]']
mov ['[ebp+var_17C],', 'edx']
mov ['eax,', '[ebp+var_17C]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_80],', '1Ch']
mov ['eax,', '[ebp+var_80]']
shl ['eax,', '2']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ds:_fCSRecognizers,', 'eax']
cmp ['ds:_fCSRecognizers,', '0']
jnz ['short', 'loc_1584']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_15E8']
mov ['eax,', '[ebp+var_80]']
mov ['ds:_fCSRecognizers_size,', 'eax']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_15A7']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8C]']
cmp ['eax,', '[ebp+var_80]']
jge ['short', 'loc_15E8']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['edx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+edx*4+var_74]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', 'ds:_fCSRecognizers']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_15E6']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_1598']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN123']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '5FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN122']
dd ['offset', '$LN121']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+4],', 'cl']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_csdet_cleanup	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_fCSRecognizers,', '0']
jz ['loc_1732']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_16AD']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_1710']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_16F4']
push ['1']
mov ['ecx,', '[ebp+var_E0]']
call ['??_GCSRecognizerInfo@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_16FE']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
jmp ['short', 'loc_16A4']
mov ['eax,', 'ds:_fCSRecognizers']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['ds:_fCSRecognizers,', '0']
mov ['ds:_fCSRecognizers_size,', '0']
mov ['ecx,', 'offset', '_gCSRecognizersInitOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCSRecognizerInfo@icu_56@@QAEPAXI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CSRecognizerInfo@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_17D1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CSRecognizerInfo@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1855']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_185F']
mov ['[ebp+var_E8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_UTF8@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecognizer@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_UTF8@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_UTF8@icu_56@@6B@']
public ['??_7CharsetRecog_UTF8@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_UTF8@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_UTF8@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_UTF8@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_UTF8@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_UTF8@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_UTF8@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_UTF8@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CharsetRecog_UTF8@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_UTF8@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_UTF8@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_UTF8@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecognizer@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecognizer@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecognizer@icu_56@@8']
dd ['2']
dd ['offset', '??_R2CharsetRecognizer@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_UTF_16_BE@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_Unicode@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_UTF_16_BE@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@']
public ['??_7CharsetRecog_UTF_16_BE@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_UTF_16_BE@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_UTF_16_BE@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_UTF_16_BE@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_UTF_16_BE@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_UTF_16_BE@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_Unicode@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_Unicode@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_Unicode@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CharsetRecog_Unicode@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_Unicode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_UTF_16_LE@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_Unicode@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_UTF_16_LE@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@']
public ['??_7CharsetRecog_UTF_16_LE@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_UTF_16_LE@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_UTF_16_LE@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_UTF_16_LE@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_UTF_16_LE@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_UTF_16_LE@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_UTF_32_BE@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_UTF_32@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_UTF_32_BE@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@']
public ['??_7CharsetRecog_UTF_32_BE@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z']
dd ['offset', '?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_UTF_32_BE@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_UTF_32_BE@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_UTF_32_BE@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_UTF_32_BE@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_UTF_32_BE@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_UTF_32@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_UTF_32@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_UTF_32@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_UTF_32@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_UTF_32@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_UTF_32_LE@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_UTF_32@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_UTF_32_LE@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@']
public ['??_7CharsetRecog_UTF_32_LE@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z']
dd ['offset', '?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_UTF_32_LE@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_UTF_32_LE@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_UTF_32_LE@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_UTF_32_LE@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_UTF_32_LE@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_1@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_1@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_1@icu_56@@6B@']
public ['??_7CharsetRecog_8859_1@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_1@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_1@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_1@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_1@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_1@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_1@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_1@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_1@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_1@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_1@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_1@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_sbcs@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_sbcs@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_sbcs@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CharsetRecog_sbcs@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_2@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_2@icu_56@@6B@']
public ['??_7CharsetRecog_8859_2@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_2@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_2@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_2@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_2@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_2@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_2@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_2@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_2@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_2@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_2@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_5_ru@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_8859_5@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_5_ru@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_5_ru@icu_56@@6B@']
public ['??_7CharsetRecog_8859_5_ru@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_8859_5_ru@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_5_ru@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_5_ru@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_5_ru@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_5_ru@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_5_ru@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_5_ru@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_8859_5_ru@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_5_ru@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_8859_5@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_5_ru@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_5_ru@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_5@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_5@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_5@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_5@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_5@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_5@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_6_ar@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_8859_6@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_6_ar@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_6_ar@icu_56@@6B@']
public ['??_7CharsetRecog_8859_6_ar@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_8859_6_ar@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_6_ar@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_6_ar@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_6_ar@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_6_ar@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_6_ar@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_6_ar@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_8859_6_ar@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_6_ar@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_8859_6@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_6_ar@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_6_ar@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_6@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_6@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_6@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_6@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_6@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_6@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_7_el@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_8859_7@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_7_el@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_7_el@icu_56@@6B@']
public ['??_7CharsetRecog_8859_7_el@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_8859_7_el@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_7_el@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_7_el@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_7_el@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_7_el@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_7_el@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_7_el@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_8859_7_el@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_7_el@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_8859_7@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_7_el@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_7_el@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_7@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_7@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_7@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_7@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_7@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_7@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_8_I_he@icu_56@@QAE@XZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_8859_8@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_8_I_he@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_8_I_he@icu_56@@6B@']
public ['??_7CharsetRecog_8859_8_I_he@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_8_I_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_8_I_he@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_8_I_he@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_8_I_he@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_8_I_he@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_8_I_he@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_8859_8_I_he@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_8_I_he@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_8_I_he@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_8_I_he@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_8@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_8@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_8@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_8@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_8@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_8_he@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_8859_8@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_8_he@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_8_he@icu_56@@6B@']
public ['??_7CharsetRecog_8859_8_he@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_8859_8_he@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_8_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_8_he@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_8_he@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_8_he@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_8_he@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_8_he@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_8859_8_he@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_8_he@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_8_he@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_8_he@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_windows_1251@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_windows_1251@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_windows_1251@icu_56@@6B@']
public ['??_7CharsetRecog_windows_1251@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_windows_1251@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_windows_1251@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_windows_1251@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_windows_1251@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_windows_1251@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_windows_1251@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_windows_1251@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_windows_1251@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_windows_1251@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_windows_1251@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_windows_1251@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_windows_1256@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_windows_1256@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_windows_1256@icu_56@@6B@']
public ['??_7CharsetRecog_windows_1256@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_windows_1256@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_windows_1256@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_windows_1256@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_windows_1256@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_windows_1256@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_windows_1256@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_windows_1256@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_windows_1256@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_windows_1256@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_windows_1256@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_windows_1256@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_KOI8_R@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_KOI8_R@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_KOI8_R@icu_56@@6B@']
public ['??_7CharsetRecog_KOI8_R@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_KOI8_R@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_KOI8_R@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_KOI8_R@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_KOI8_R@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_KOI8_R@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_KOI8_R@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_KOI8_R@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_KOI8_R@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_KOI8_R@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_KOI8_R@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_9_tr@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_8859_9@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_9_tr@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_9_tr@icu_56@@6B@']
public ['??_7CharsetRecog_8859_9_tr@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_8859_9_tr@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_8859_9_tr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_9_tr@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_9_tr@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_9_tr@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_9_tr@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_9_tr@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_8859_9_tr@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_9_tr@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_8859_9@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_9_tr@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_9_tr@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_8859_9@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_8859_9@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_8859_9@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_8859_9@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_8859_9@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_8859_9@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_sjis@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_mbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_sjis@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_sjis@icu_56@@6B@']
public ['??_7CharsetRecog_sjis@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_sjis@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_sjis@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_sjis@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_sjis@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_sjis@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_sjis@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_sjis@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_sjis@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_sjis@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_sjis@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_sjis@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_sjis@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_sjis@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_mbcs@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_mbcs@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_mbcs@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CharsetRecog_mbcs@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_gb_18030@icu_56@@QAE@XZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_mbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_gb_18030@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_gb_18030@icu_56@@6B@']
public ['??_7CharsetRecog_gb_18030@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_gb_18030@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_gb_18030@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_gb_18030@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_gb_18030@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_gb_18030@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_gb_18030@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_gb_18030@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_gb_18030@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_gb_18030@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_gb_18030@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_gb_18030@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_gb_18030@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_euc_jp@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_euc@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_euc_jp@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_euc_jp@icu_56@@6B@']
public ['??_7CharsetRecog_euc_jp@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_euc_jp@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_euc_jp@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_euc_jp@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_euc_jp@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_euc_jp@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_euc_jp@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_euc_jp@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_euc_jp@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_euc_jp@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_euc_jp@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_euc_jp@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_euc@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_euc@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_euc@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_euc@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_euc@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_euc_kr@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_euc@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_euc_kr@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_euc_kr@icu_56@@6B@']
public ['??_7CharsetRecog_euc_kr@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_euc_kr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_euc_kr@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_euc_kr@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_euc_kr@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_euc_kr@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_euc_kr@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_euc_kr@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_euc_kr@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_euc_kr@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_euc_kr@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_euc_kr@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_big5@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_mbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_big5@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_big5@icu_56@@6B@']
public ['??_7CharsetRecog_big5@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_big5@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_big5@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_big5@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_big5@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_big5@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_big5@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_big5@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_big5@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_big5@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_big5@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_big5@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_big5@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_big5@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_2022JP@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_2022@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_2022JP@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_2022JP@icu_56@@6B@']
public ['??_7CharsetRecog_2022JP@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_2022JP@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_2022JP@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_2022JP@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_2022JP@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_2022JP@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_2022JP@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_2022JP@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_2022JP@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_2022JP@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_2022JP@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_2022JP@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_2022@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_2022@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_2022@icu_56@@8']
dd ['3']
dd ['offset', '??_R2CharsetRecog_2022@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_2022@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_2022KR@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_2022@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_2022KR@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_2022KR@icu_56@@6B@']
public ['??_7CharsetRecog_2022KR@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_2022KR@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_2022KR@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_2022KR@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_2022KR@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_2022KR@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_2022KR@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_2022KR@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_2022KR@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_2022KR@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_2022KR@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_2022KR@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_2022CN@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_2022@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_2022CN@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_2022CN@icu_56@@6B@']
public ['??_7CharsetRecog_2022CN@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_2022CN@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_2022CN@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_2022CN@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_2022CN@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_2022CN@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_2022CN@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_2022CN@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_2022CN@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_2022CN@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_2022CN@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_2022CN@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_IBM424_he_rtl@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_IBM424_he_rtl@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_IBM424_he_rtl@icu_56@@6B@']
public ['??_7CharsetRecog_IBM424_he_rtl@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_IBM424_he_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_IBM424_he_rtl@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_IBM424_he_rtl@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_IBM424_he_rtl@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_IBM424_he_rtl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_IBM424_he_rtl@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_IBM424_he_rtl@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_IBM424_he@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_IBM424_he@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_IBM424_he@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_IBM424_he@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_IBM424_he@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_IBM424_he_ltr@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_IBM424_he_ltr@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_IBM424_he_ltr@icu_56@@6B@']
public ['??_7CharsetRecog_IBM424_he_ltr@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_IBM424_he_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_IBM424_he_ltr@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_IBM424_he_ltr@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_IBM424_he_ltr@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_IBM424_he_ltr@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_IBM424_he_ltr@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_IBM424_he_ltr@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_IBM420_ar_rtl@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_IBM420_ar_rtl@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_IBM420_ar_rtl@icu_56@@6B@']
public ['??_7CharsetRecog_IBM420_ar_rtl@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_IBM420_ar_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_IBM420_ar_rtl@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_IBM420_ar_rtl@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_IBM420_ar_rtl@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_IBM420_ar_rtl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_IBM420_ar_rtl@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_IBM420_ar_rtl@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_IBM420_ar@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_IBM420_ar@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_IBM420_ar@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CharsetRecog_IBM420_ar@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_IBM420_ar@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_IBM420_ar_ltr@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_IBM420_ar_ltr@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_IBM420_ar_ltr@icu_56@@6B@']
public ['??_7CharsetRecog_IBM420_ar_ltr@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_IBM420_ar_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_IBM420_ar_ltr@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_IBM420_ar_ltr@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCharsetRecog_IBM420_ar_ltr@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8']
dd ['5']
dd ['offset', '??_R2CharsetRecog_IBM420_ar_ltr@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CharsetRecog_IBM420_ar_ltr@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CharsetRecog_IBM420_ar_ltr@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_UTF8@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_UTF8@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3805']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecognizer@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecognizer@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecognizer@icu_56@@6B@']
public ['??_7CharsetRecognizer@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecognizer@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecognizer@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecognizer@icu_56@@@8']
dd ['offset', '??_R3CharsetRecognizer@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_38C9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_Unicode@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecognizer@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_Unicode@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_Unicode@icu_56@@6B@']
public ['??_7CharsetRecog_Unicode@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_Unicode@icu_56@@UAEPAXI@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_Unicode@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_Unicode@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_Unicode@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_39A1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3A05']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_UTF_32@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_Unicode@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_UTF_32@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_UTF_32@icu_56@@6B@']
public ['??_7CharsetRecog_UTF_32@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z']
dd ['offset', '??_ECharsetRecog_UTF_32@icu_56@@UAEPAXI@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_UTF_32@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_UTF_32@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_UTF_32@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3AE1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_1@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_1@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3B45']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3BA9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_5_ru@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3C0D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_5@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_5@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_5@icu_56@@6B@']
public ['??_7CharsetRecog_8859_5@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_8859_5@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_5@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_5@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_5@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_6_ar@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3CE9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_6@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_6@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_6@icu_56@@6B@']
public ['??_7CharsetRecog_8859_6@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_8859_6@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_6@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_6@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_6@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_7_el@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3DC5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_7@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_7@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_7@icu_56@@6B@']
public ['??_7CharsetRecog_8859_7@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_8859_7@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_7@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_7@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_7@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_8_I_he@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3EA1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_8@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_8@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_8@icu_56@@6B@']
public ['??_7CharsetRecog_8859_8@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_8859_8@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_8@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_8@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_8@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_8_he@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3F7D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_windows_1251@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_windows_1251@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3FE1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_windows_1256@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_windows_1256@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4045']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_KOI8_R@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_40A9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_9_tr@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_410D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_8859_9@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_8859_9@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_8859_9@icu_56@@6B@']
public ['??_7CharsetRecog_8859_9@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_8859_9@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_8859_9@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_8859_9@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_8859_9@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_sjis@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_41E9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_mbcs@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecognizer@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_mbcs@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_mbcs@icu_56@@6B@']
public ['??_7CharsetRecog_mbcs@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_mbcs@icu_56@@UAEPAXI@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_mbcs@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_mbcs@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_mbcs@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_gb_18030@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_42C5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc_jp@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4329']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_euc@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_mbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_euc@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_euc@icu_56@@6B@']
public ['??_7CharsetRecog_euc@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_euc@icu_56@@UAEPAXI@Z']
dd ['offset', '?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_euc@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_euc@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_euc@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc_kr@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4405']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_big5@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4469']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_2022JP@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_2022JP@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_44CD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_2022@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecognizer@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_2022@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_2022@icu_56@@6B@']
public ['??_7CharsetRecog_2022@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_2022@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_2022@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_2022@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_2022KR@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_2022KR@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_45A5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_2022CN@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_2022CN@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4609']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_IBM424_he_rtl@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_466D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_IBM424_he@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_IBM424_he@icu_56@@6B@']
public ['??_7CharsetRecog_IBM424_he@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_IBM424_he@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_IBM424_he@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_IBM424_he@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_IBM424_he_ltr@icu_56@@EAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4749']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_IBM420_ar_rtl@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_47AD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CharsetRecog_IBM420_ar@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4CharsetRecog_IBM420_ar@icu_56@@6B@']
public ['??_7CharsetRecog_IBM420_ar@icu_56@@6B@']
dd ['offset', '?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ']
dd ['offset', '__purecall']
dd ['offset', '??_ECharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z']
dd ['offset', '?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z']
assume ['cs:_rdata$r']
public ['??_R4CharsetRecog_IBM420_ar@icu_56@@6B@']
dd ['offset', '??_R0?AVCharsetRecog_IBM420_ar@icu_56@@@8']
dd ['offset', '??_R3CharsetRecog_IBM420_ar@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_IBM420_ar_ltr@icu_56@@EAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4889']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecognizer@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecognizer@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_48ED']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_Unicode@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4951']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_UTF_32@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_49B5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_5@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_5@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4A19']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_6@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_6@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4A7D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_7@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_7@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4AE1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_8@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_8@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4B45']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_8859_9@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_8859_9@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4BA9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4C0D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_euc@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4C71']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_IBM424_he@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4CD5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CharsetRecog_IBM420_ar@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D39']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['1Ch']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_4DD7']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_104]']
call ['??0InputText@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_4DE1']
mov ['[ebp+var_118],', '0']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_110],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_110]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Dh],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E45']
jmp ['loc_4F45']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E6B']
jmp ['loc_4F45']
mov ['eax,', 'ds:_fCSRecognizers_size']
shl ['eax,', '2']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_4E99']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_4F45']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4EAB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['loc_4F45']
mov ['esi,', 'esp']
push ['10h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_4EF7']
mov ['ecx,', '[ebp+var_EC]']
call ['??0CharsetMatch@icu_56@@QAE@XZ']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_4F01']
mov ['[ebp+var_118],', '0']
mov ['eax,', '[ebp+var_118]']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_F8]']
mov ['[edx+eax*4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+edx*4],', '0']
jnz ['short', 'loc_4F40']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_4F45']
jmp ['loc_4EA2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-11Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharsetDetector@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'edx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_5048']
push ['1']
mov ['ecx,', '[ebp+var_F8]']
call ['??_GInputText@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_5052']
mov ['[ebp+var_100],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_5064']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_509C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_E0],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_505B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_50C3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GInputText@icu_56@@QAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1InputText@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5121']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setText@CharsetDetector@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
call ['?setText@InputText@icu_56@@QAEXPBDH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Dh],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setStripTagsFlag@CharsetDetector@icu_56@@QAECC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+0Ch]']
mov ['[ebp+var_11],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Dh],', '1']
mov ['al,', '[ebp+var_11]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStripTagsFlag@CharsetDetector@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setDeclaredEncoding@CharsetDetector@icu_56@@QBEXPBDH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
call ['?setDeclaredEncoding@InputText@icu_56@@QAEXPBDH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDetectableCount@CharsetDetector@icu_56@@SAHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['eax,', 'ds:_fCSRecognizers_size']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?detect@CharsetDetector@icu_56@@QAEPBVCharsetMatch@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?detectAll@CharsetDetector@icu_56@@QAEPBQBVCharsetMatch@2@AAHAAW4UErrorCode@@@Z']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_5318']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ecx]']
jmp ['short', 'loc_531A']
jmp ['short', 'loc_531A']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?detectAll@CharsetDetector@icu_56@@QAEPBQBVCharsetMatch@2@AAHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
call ['?isSet@InputText@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_53B1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
jmp ['loc_5494']
jmp ['loc_5483']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
test ['ecx,', 'ecx']
jz ['loc_5483']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
call ['?MungeInput@InputText@icu_56@@QAEXC@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_53EE']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_544E']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax+ecx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_544C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_53E5']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '1']
jle ['short', 'loc_547C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
push ['0']
push ['offset', '_charsetMatchComparator']
push ['4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Dh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_charsetMatchComparator	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
call ['?getConfidence@CharsetMatch@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getConfidence@CharsetMatch@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setDetectableCharset@CharsetDetector@icu_56@@QAEXPBDCAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5541']
jmp ['loc_565E']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['[ebp+var_1D],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_555E']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_55BF']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_55BD']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4]']
movsx ['edx,', '[ebp+arg_4]']
cmp ['ecx,', 'edx']
setz ['al']
mov ['[ebp+var_1D],', 'al']
jmp ['short', 'loc_55BF']
jmp ['short', 'loc_5555']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_55D3']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_565E']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_5646']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jnz ['short', 'loc_5646']
mov ['eax,', 'ds:_fCSRecognizers_size']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_560C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_565E']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_561E']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_5646']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['eax,', '[ebp+var_44]']
mov ['dl,', '[edx+4]']
mov ['[ecx+eax],', 'dl']
jmp ['short', 'loc_5615']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_565E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['al,', '[ebp+arg_4]']
mov ['[ecx+edx],', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumClose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_56AA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumCount	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jz ['short', 'loc_5702']
mov ['eax,', 'ds:_fCSRecognizers_size']
jmp ['loc_5791']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5752']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_572D']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_5750']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_574E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_5724']
jmp ['short', 'loc_578E']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_5764']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_578E']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['edx,', '[ecx+eax*4]']
movsx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jz ['short', 'loc_578C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_575B']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumNext	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+Str],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
cmp ['edx,', 'ds:_fCSRecognizers_size']
jge ['loc_5931']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jz ['short', 'loc_582E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', 'ds:_fCSRecognizers']
mov ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ecx]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['eax,', '[ecx+eax*4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ecx],', 'edx']
jmp ['loc_5931']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_58B7']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_58B5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
cmp ['edx,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_58B5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_58A0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', 'ds:_fCSRecognizers']
mov ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ecx]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['eax,', '[ecx+eax*4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_5840']
jmp ['short', 'loc_5931']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_5931']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
cmp ['edx,', 'ds:_fCSRecognizers_size']
jge ['short', 'loc_5931']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', 'ds:_fCSRecognizers']
mov ['ecx,', '[eax+edx*4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jz ['short', 'loc_591C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', 'ds:_fCSRecognizers']
mov ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ecx]']
mov ['ecx,', 'ds:_fCSRecognizers']
mov ['eax,', '[ecx+eax*4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[edx]']
mov ['esi,', 'esp']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_58B7']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_5966']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_5949']
mov ['[ebp+var_DC],', '0']
jmp ['short', 'loc_595B']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_DC]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+Str]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumReset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['dword', 'ptr', '[ecx],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAllDetectableCharsets@CharsetDetector@icu_56@@SAPAUUEnumeration@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_59FA']
xor ['eax,', 'eax']
jmp ['loc_5A7F']
push ['1Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_5A1A']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['short', 'loc_5A7F']
push ['1Ch']
push ['offset', '_gCSDetEnumeration']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_5A5F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_5A7F']
push ['0Ch']
push ['0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+4],', '1']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDetectableCharsets@CharsetDetector@icu_56@@QBEPAUUEnumeration@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5AD3']
xor ['eax,', 'eax']
jmp ['loc_5B67']
push ['1Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_5AF3']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['short', 'loc_5B67']
push ['1Ch']
push ['offset', '_gCSDetEnumeration']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_5B38']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_5B67']
push ['0Ch']
push ['0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
extrn ['_uenum_unextDefault_56:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['_ucln_i18n_registerCleanup_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_uprv_free_56:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getName@CharsetRecog_UTF8@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_UTF8@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_UTF8@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_UTF8@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z:near']
extrn ['?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z:near']
extrn ['?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ:near']
extrn ['??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z:near']
extrn ['?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z:near']
extrn ['??0CharsetRecog_sbcs@icu_56@@QAE@XZ:near']
extrn ['?getName@CharsetRecog_8859_1@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_1@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_1@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_1@icu_56@@UAEPAXI@Z:near']
extrn ['?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z:near']
extrn ['?getName@CharsetRecog_8859_2@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_2@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_2@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_2@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_8859_5@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_8859_5_ru@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_5_ru@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_8859_6@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_8859_6_ar@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_6_ar@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_8859_7@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_8859_7_el@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_7_el@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_8_I_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_8859_8@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_8859_8_he@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_8_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_windows_1251@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_windows_1251@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_windows_1251@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_windows_1256@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_windows_1256@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_windows_1256@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_KOI8_R@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_8859_9@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_8859_9_tr@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_8859_9_tr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_sjis@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_sjis@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_sjis@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_sjis@icu_56@@UAEPAXI@Z:near']
extrn ['?nextChar@CharsetRecog_sjis@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near']
extrn ['?getName@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_gb_18030@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_gb_18030@icu_56@@UAEPAXI@Z:near']
extrn ['?nextChar@CharsetRecog_gb_18030@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near']
extrn ['?getName@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_euc_jp@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_euc_jp@icu_56@@UAEPAXI@Z:near']
extrn ['?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near']
extrn ['?getName@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_euc_kr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_euc_kr@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_big5@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_big5@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_big5@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_big5@icu_56@@UAEPAXI@Z:near']
extrn ['?nextChar@CharsetRecog_big5@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near']
extrn ['?getName@CharsetRecog_2022JP@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_2022JP@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_2022JP@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_2022JP@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_2022KR@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_2022KR@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_2022KR@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_2022KR@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_2022CN@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_2022CN@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_2022CN@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_2022CN@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_IBM424_he_rtl@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_IBM424_he_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_IBM424_he_ltr@icu_56@@EBEPBDXZ:near']
extrn ['?match@CharsetRecog_IBM424_he_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z:near']
extrn ['?getName@CharsetRecog_IBM420_ar_rtl@icu_56@@UBEPBDXZ:near']
extrn ['?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ:near']
extrn ['?match@CharsetRecog_IBM420_ar_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z:near']
extrn ['?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z:near']
extrn ['?getName@CharsetRecog_IBM420_ar_ltr@icu_56@@EBEPBDXZ:near']
extrn ['?match@CharsetRecog_IBM420_ar_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z:near']
extrn ['??_GCharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z:near']
extrn ['??1CharsetRecog_UTF8@icu_56@@UAE@XZ:near']
extrn ['__purecall:near']
extrn ['??_GCharsetRecognizer@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecognizer@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_Unicode@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_UTF_32@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_1@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_2@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_5_ru@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_8859_5@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_5@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_8859_6_ar@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_8859_6@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_6@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_8859_7_el@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_8859_7@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_7@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_8859_8_I_he@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_8859_8@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_8@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_8859_8_he@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_windows_1251@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_windows_1256@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_KOI8_R@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_9_tr@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_8859_9@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_8859_9@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_sjis@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_mbcs@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_gb_18030@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_euc_jp@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_euc@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_euc_kr@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_big5@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_2022JP@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_2022KR@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_2022CN@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_IBM424_he_rtl@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_IBM424_he_ltr@icu_56@@EAE@XZ:near']
extrn ['??1CharsetRecog_IBM420_ar_rtl@icu_56@@UAE@XZ:near']
extrn ['??_GCharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z:near']
extrn ['??1CharsetRecog_IBM420_ar_ltr@icu_56@@EAE@XZ:near']
extrn ['??1CharsetRecognizer@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_Unicode@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_UTF_32@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_5@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_6@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_7@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_8@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_8859_9@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_mbcs@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_euc@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_IBM424_he@icu_56@@UAE@XZ:near']
extrn ['??1CharsetRecog_IBM420_ar@icu_56@@UAE@XZ:near']
extrn ['??0CharsetMatch@icu_56@@QAE@XZ:near']
extrn ['??0InputText@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??1InputText@icu_56@@QAE@XZ:near']
extrn ['?setText@InputText@icu_56@@QAEXPBDH@Z:near']
extrn ['?setDeclaredEncoding@InputText@icu_56@@QAEXPBDH@Z:near']
extrn ['_uprv_sortArray_56:near']
extrn ['?MungeInput@InputText@icu_56@@QAEXC@Z:near']
extrn ['?isSet@InputText@icu_56@@QBECXZ:near']
extrn ['?getConfidence@CharsetMatch@icu_56@@QBEHXZ:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['_memset:near']
extrn ['_memcpy:near']
end

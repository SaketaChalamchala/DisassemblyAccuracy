endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FieldPosition@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FieldPosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FieldPosition@icu_56@@6B@']
public ['??_7FieldPosition@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4FieldPosition@icu_56@@6B@']
dd ['offset', '??_R0?AVFieldPosition@icu_56@@@8']
dd ['offset', '??_R3FieldPosition@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFieldPosition@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FieldPosition@icu_56@@8']
dd ['3']
dd ['offset', '??_R2FieldPosition@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FieldPosition@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FieldPosition@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3FieldPosition@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FieldPosition@icu_56@@QAE@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FieldPosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FieldPosition@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FieldPosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getField@FieldPosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getEndIndex@FieldPosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setField@FieldPosition@icu_56@@QAEXH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFieldPosition@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FieldPosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1585']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFieldPosition@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_160B']
push ['offset', '??1FieldPosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1603']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1634']
mov ['ecx,', '[ebp+var_8]']
call ['??1FieldPosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1631']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8FieldPosition@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_16F6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+0Ch]']
jnz ['short', 'loc_16F6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_16F6']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_16FD']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9FieldPosition@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8FieldPosition@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Formattable@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8Formattable@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDouble@Formattable@icu_56@@QBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLong@Formattable@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getInt64@Formattable@icu_56@@QBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+8]']
mov ['edx,', '[ecx+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDate@Formattable@icu_56@@QBENXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AFormattable@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
imul ['eax,', '0E0h']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+98h],', '0']
jz ['short', 'loc_19C5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_19C1']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '3']
fldz
jmp ['short', 'loc_19CB']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
public ['__real@0000000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9FieldPositionIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8FieldPositionIterator@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Format@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0E8h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0MeasureUnit@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7MeasureUnit@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4MeasureUnit@icu_56@@6B@']
public ['??_7MeasureUnit@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ']
dd ['offset', '??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z']
assume ['cs:_rdata$r']
public ['??_R4MeasureUnit@icu_56@@6B@']
dd ['offset', '??_R0?AVMeasureUnit@icu_56@@@8']
dd ['offset', '??_R3MeasureUnit@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVMeasureUnit@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3MeasureUnit@icu_56@@8']
dd ['3']
dd ['offset', '??_R2MeasureUnit@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2MeasureUnit@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@MeasureUnit@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3MeasureUnit@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0MeasureUnit@icu_56@@AAE@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7MeasureUnit@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GMeasureUnit@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1MeasureUnit@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1EF9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EMeasureUnit@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1F7F']
push ['offset', '??1MeasureUnit@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1F77']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1FA8']
mov ['ecx,', '[ebp+var_8]']
call ['??1MeasureUnit@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1FA5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ']
mov ['ecx,', 'eax']
call ['?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NumberFormatFactory@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NumberFormatFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4NumberFormatFactory@icu_56@@6B@']
public ['??_7NumberFormatFactory@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4NumberFormatFactory@icu_56@@6B@']
dd ['offset', '??_R0?AVNumberFormatFactory@icu_56@@@8']
dd ['offset', '??_R3NumberFormatFactory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNumberFormatFactory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3NumberFormatFactory@icu_56@@8']
dd ['3']
dd ['offset', '??_R2NumberFormatFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2NumberFormatFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3NumberFormatFactory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7NumberFormatFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1NumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_225D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_22E3']
push ['offset', '??1NumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_22DB']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_230C']
mov ['ecx,', '[ebp+var_8]']
call ['??1NumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2309']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SimpleNumberFormatFactory@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+4]']
mov ['[eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '8']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1NumberFormatFactory@icu_56@@UAE@XZ']
endp
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4SimpleNumberFormatFactory@icu_56@@6B@']
public ['??_7SimpleNumberFormatFactory@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ']
dd ['offset', '?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z']
align ['20h']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4SimpleNumberFormatFactory@icu_56@@6B@']
dd ['offset', '??_R0?AVSimpleNumberFormatFactory@icu_56@@@8']
dd ['offset', '??_R3SimpleNumberFormatFactory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSimpleNumberFormatFactory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3SimpleNumberFormatFactory@icu_56@@8']
dd ['4']
dd ['offset', '??_R2SimpleNumberFormatFactory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SimpleNumberFormatFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3SimpleNumberFormatFactory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SimpleNumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2511']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_2597']
push ['offset', '??1SimpleNumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['48h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_258F']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_25C0']
mov ['ecx,', '[ebp+var_8]']
call ['??1SimpleNumberFormatFactory@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_25BD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+154h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLenient@NumberFormat@icu_56@@UBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+155h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
call ['dword', 'ptr', 'ds:__imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_26BE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jz ['short', 'loc_26BA']
mov ['eax,', 'ds:?__LINE__Var@?1??next@EquivIterator@icu_56@@QAEPBVUnicodeString@3@XZ@4JA']
add ['eax,', '3']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CG@NAHAGBKH@?$AA_?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['short', 'loc_26EE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_26E2']
xor ['eax,', 'eax']
jmp ['short', 'loc_26EE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CG@NAHAGBKH@?$AA_?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
unicode ['0,', '<_current', '==', '_start>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\i18n\\ucurr.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??next@EquivIterator@icu_56@@QAEPBVUnicodeString@3@XZ@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_register_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_27FC']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_27FC']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_27FE']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '178h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_178]']
mov ['ecx,', '5Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getVariant_56']
add ['esp,', '10h']
movsx ['eax,', '[ebp+Str1]']
test ['eax,', 'eax']
jz ['short', 'loc_291B']
push ['offset', '_VAR_EURO']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
mov ['esi,', 'eax']
neg ['esi']
sbb ['esi,', 'esi']
add ['esi,', '1']
push ['offset', '_VAR_PRE_EURO']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
shl ['eax,', '1']
or ['esi,', 'eax']
mov ['[ebp+var_C],', 'esi']
jz ['short', 'loc_291B']
push ['offset', '_VAR_DELIM_STR']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
lea ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '178h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['loc_2AA7']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2AA7']
cmp ['[ebp+Src],', '0']
jz ['loc_2AA7']
cmp ['[ebp+arg_4],', '0']
jz ['loc_2AA7']
mov ['esi,', 'esp']
push ['0ACh']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_2A28']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0CReg@@QAE@PB_WPBD@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_2A32']
mov ['[ebp+var_F4],', '0']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2A9E']
push ['offset', '_gCRegLock']
call ['_umtx_lock_56']
add ['esp,', '4']
cmp ['ds:_gCRegHead,', '0']
jnz ['short', 'loc_2A79']
push ['offset', '_currency_cleanup']
push ['10h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', 'ds:_gCRegHead']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ds:_gCRegHead,', 'eax']
push ['offset', '_gCRegLock']
call ['_umtx_unlock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_2AA9']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CReg@@QAE@PB_WPBD@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Count],', 'eax']
cmp ['[ebp+Count],', '9Ch']
jle ['short', 'loc_2B77']
mov ['[ebp+Count],', '9Ch']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+Count]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['6']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ah],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_unregister_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2C3F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2C3F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?unreg@CReg@@SACPBX@Z']
add ['esp,', '4']
jmp ['short', 'loc_2C41']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unreg@CReg@@SACPBX@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '0']
push ['offset', '_gCRegLock']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'offset', '_gCRegHead']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2CDC']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jnz ['short', 'loc_2CD2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_E0],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5],', '1']
jmp ['short', 'loc_2CDC']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2C8E']
push ['offset', '_gCRegLock']
call ['_umtx_unlock_56']
add ['esp,', '4']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_currency_cleanup proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['?cleanup@CReg@@SAXXZ']
call ['?currency_cache_cleanup@@YACXZ']
call ['?isoCodes_cleanup@@YACXZ']
call ['?currSymbolsEquiv_cleanup@@YACXZ']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isoCodes_cleanup@@YACXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_gIsoCodes,', '0']
jz ['short', 'loc_2D87']
mov ['eax,', 'ds:_gIsoCodes']
push ['eax']
call ['_uhash_close_56']
add ['esp,', '4']
mov ['ds:_gIsoCodes,', '0']
mov ['ecx,', 'offset', '_gIsoCodesInitOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?currSymbolsEquiv_cleanup@@YACXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:_gCurrSymbolsEquiv']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_2E2F']
push ['1']
mov ['ecx,', '[ebp+var_D4]']
call ['??_GHashtable@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_2E39']
mov ['[ebp+var_DC],', '0']
mov ['ds:_gCurrSymbolsEquiv,', '0']
mov ['ecx,', 'offset', '_gCurrSymbolsEquivInitOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GHashtable@icu_56@@QAEPAXI@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1Hashtable@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2EB7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?cleanup@CReg@@SAXXZ proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_gCRegHead,', '0']
jz ['short', 'loc_2F30']
mov ['eax,', 'ds:_gCRegHead']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', 'ds:_gCRegHead']
mov ['ecx,', '[eax]']
mov ['ds:_gCRegHead,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2EEE']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_forLocale_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E4]']
mov ['ecx,', '79h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['loc_32F5']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_32F5']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2FA9']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_2FB3']
cmp ['[ebp+arg_8],', '0']
jnz ['loc_32EC']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_08JLPCGLMH@currency?$AA@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3017']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_C]']
jle ['short', 'loc_3012']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_T_CString_toUpperCase_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
jmp ['loc_32D0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3055']
xor ['eax,', 'eax']
jmp ['loc_32F8']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?get@CReg@@SAPB_WPBD@Z']
add ['esp,', '4']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_E4],', '0']
jz ['short', 'loc_30AE']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
cmp ['[ebp+arg_8],', 'eax']
jle ['short', 'loc_309A']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_u_strcpy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
jmp ['loc_32F8']
push ['5Fh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_F0],', 'eax']
cmp ['[ebp+var_F0],', '0']
jz ['short', 'loc_30D7']
mov ['eax,', '[ebp+var_F0]']
mov ['byte', 'ptr', '[eax],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['offset', '_CURRENCY_DATA']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_FC],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
push ['offset', '_CURRENCY_MAP']
mov ['edx,', '[ebp+var_FC]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_108],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_114],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_114]']
push ['ecx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_120],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['offset', '??_C@_02EGCJHIOB@id?$AA@']
mov ['edx,', '[ebp+var_120]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3203']
mov ['eax,', '[ebp+var_D8]']
and ['eax,', '2']
jz ['short', 'loc_31F1']
push ['offset', '_EUR_STR']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_u_strcmp_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_31F1']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_114]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_120],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['offset', '??_C@_02EGCJHIOB@id?$AA@']
mov ['edx,', '[ebp+var_120]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_3203']
mov ['eax,', '[ebp+var_D8]']
and ['eax,', '1']
jz ['short', 'loc_3203']
mov ['[ebp+var_18],', 'offset', '_EUR_STR']
mov ['eax,', '[ebp+var_114]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_120]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_328D']
push ['5Fh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_328D']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getParent_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF80h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_ucurr_forLocale_56']
add ['esp,', '10h']
jmp ['short', 'loc_32F8']
jmp ['short', 'loc_32A3']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_329B']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_32A3']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_32D0']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_C]']
jle ['short', 'loc_32D0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_u_strcpy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
jmp ['short', 'loc_32F8']
jmp ['short', 'loc_32F5']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN28']
dd ['offset', '$LN25']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN26']
dd ['0FFFFFF34h,', '9Dh']
dd ['offset', '$LN27']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02EGCJHIOB@id?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_08JLPCGLMH@currency?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?strchr@@YAPADPADH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Val]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?get@CReg@@SAPB_WPBD@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
push ['offset', '_gCRegLock']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', 'ds:_gCRegHead']
mov ['[ebp+var_14],', 'eax']
push ['offset', '_currency_cleanup']
push ['10h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_347F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3475']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_347F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_344D']
push ['offset', '_gCRegLock']
call ['_umtx_unlock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getName_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1B4]']
mov ['ecx,', '6Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_34E8']
xor ['eax,', 'eax']
jmp ['loc_372F']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_34FA']
cmp ['[ebp+var_C],', '1']
jle ['short', 'loc_350A']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_372F']
mov ['[ebp+var_18],', '0']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_uloc_getName_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3546']
cmp ['[ebp+var_18],', '0FFFFFF84h']
jnz ['short', 'loc_3556']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_372F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_CC]']
push ['ecx']
call ['?myUCharsToChars@@YAPADPADPB_W@Z']
add ['esp,', '8']
lea ['eax,', '[ebp+var_CC]']
push ['eax']
call ['_T_CString_toUpperCase_56']
add ['esp,', '4']
mov ['[ebp+var_D8],', '0']
mov ['[ebp+var_18],', '0']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['[ebp+var_E4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
push ['offset', '_CURRENCIES']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_E4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
lea ['edx,', '[ebp+var_CC]']
push ['edx']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
call ['_ures_getByKeyWithFallback_56']
add ['esp,', '10h']
mov ['[ebp+var_E4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
call ['_ures_getStringByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3652']
cmp ['[ebp+var_18],', '0FFFFFF81h']
jz ['short', 'loc_364A']
cmp ['[ebp+var_18],', '0FFFFFF80h']
jnz ['short', 'loc_3652']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jz ['short', 'loc_3652']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_3712']
cmp ['[ebp+var_D8],', '0']
jnz ['short', 'loc_369D']
mov ['eax,', 'ds:?__LINE__Var@?1??ucurr_getName_56@@9@4JA']
add ['eax,', '4Dh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F0],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_F0]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_36E3']
mov ['eax,', '[ebp+var_F0]']
mov ['ecx,', '[ebp+var_D8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '3Dh']
jnz ['short', 'loc_36E3']
cmp ['[ebp+var_F0],', '2']
jge ['short', 'loc_36E3']
mov ['eax,', '[ebp+var_F0]']
add ['eax,', '1']
mov ['[ebp+var_F0],', 'eax']
jmp ['short', 'loc_36A7']
cmp ['[ebp+var_F0],', '1']
setz ['al']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'al']
cmp ['[ebp+var_F0],', '0']
jz ['short', 'loc_370A']
mov ['eax,', '[ebp+var_D8]']
add ['eax,', '2']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_D8]']
jmp ['short', 'loc_372F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN19']
dd ['offset', '$LN16']
dd ['0FFFFFF40h,', '9Dh']
dd ['offset', '$LN17']
dd ['0FFFFFF34h,', '4']
dd ['offset', '$LN18']
assume ['cs:_rdata']
public ['??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<s', '!=', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??ucurr_getName_56@@9@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?myUCharsToChars@@YAPADPADPB_W@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getPluralName_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3840']
xor ['eax,', 'eax']
jmp ['loc_3A4D']
mov ['[ebp+var_C],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_uloc_getName_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_387C']
cmp ['[ebp+var_C],', '0FFFFFF84h']
jnz ['short', 'loc_388C']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_3A4D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_C0]']
push ['ecx']
call ['?myUCharsToChars@@YAPADPADPB_W@Z']
add ['esp,', '8']
mov ['[ebp+var_CC],', '0']
mov ['[ebp+var_C],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['[ebp+var_D8],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
push ['offset', '_CURRENCYPLURALS']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
lea ['edx,', '[ebp+var_C0]']
push ['edx']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_getByKeyWithFallback_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_getStringByKeyWithFallback_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_39BC']
mov ['[ebp+var_C],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
push ['offset', '??_C@_05BGEKGIIP@other?$AA@']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_ures_getStringByKeyWithFallback_56']
add ['esp,', '10h']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_39BC']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucurr_getName_56']
add ['esp,', '18h']
jmp ['loc_3A4D']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3A30']
cmp ['[ebp+var_C],', '0FFFFFF81h']
jz ['short', 'loc_39F2']
cmp ['[ebp+var_C],', '0FFFFFF80h']
jnz ['short', 'loc_39FA']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jz ['short', 'loc_39FA']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
cmp ['[ebp+var_CC],', '0']
jnz ['short', 'loc_3A28']
mov ['eax,', 'ds:?__LINE__Var@?1??ucurr_getPluralName_56@@9@4JA']
add ['eax,', '3Ch']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_CC]']
jmp ['short', 'loc_3A4D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '19Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN15']
dd ['offset', '$LN12']
dd ['0FFFFFF4Ch,', '9Dh']
dd ['offset', '$LN13']
dd ['0FFFFFF40h,', '4']
dd ['offset', '$LN14']
assume ['cs:_data']
public ['?__LINE__Var@?1??ucurr_getPluralName_56@@9@4JA']
assume ['cs:_rdata']
public ['??_C@_05BGEKGIIP@other?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?currency_cache_cleanup@@YACXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3AF0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0Ah']
jge ['short', 'loc_3B26']
mov ['eax,', '[ebp+var_8]']
cmp ['ds:_currCache[eax*4],', '0']
jz ['short', 'loc_3B24']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:_currCache[eax*4]']
push ['ecx']
call ['?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ds:_currCache[eax*4],', '0']
jmp ['short', 'loc_3AE7']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0A4h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0A0h]']
push ['eax']
call ['?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0ACh]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0A8h]']
push ['eax']
call ['?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3BE4']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_3C16']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+0Ch]']
and ['edx,', '1']
jz ['short', 'loc_3C14']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+4]']
push ['edx']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['short', 'loc_3BDB']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_parseCurrency_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '328h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_328]']
mov ['ecx,', '0CAh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3C7A']
jmp ['loc_41A3']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+Dest],', '0']
push ['offset', '_gCurrencyCacheMutex']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['[ebp+var_45],', '0FFh']
mov ['[ebp+var_51],', '0']
jmp ['short', 'loc_3CBC']
mov ['al,', '[ebp+var_51]']
add ['al,', '1']
mov ['[ebp+var_51],', 'al']
movsx ['eax,', '[ebp+var_51]']
cmp ['eax,', '0Ah']
jge ['short', 'loc_3CF9']
movsx ['eax,', '[ebp+var_51]']
cmp ['ds:_currCache[eax*4],', '0']
jz ['short', 'loc_3CF7']
movsx ['eax,', '[ebp+var_51]']
mov ['ecx,', 'ds:_currCache[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3CF7']
mov ['al,', '[ebp+var_51]']
mov ['[ebp+var_45],', 'al']
jmp ['short', 'loc_3CF9']
jmp ['short', 'loc_3CB4']
movsx ['eax,', '[ebp+var_45]']
cmp ['eax,', '0FFFFFFFFh']
jz ['short', 'loc_3D55']
movsx ['eax,', '[ebp+var_45]']
mov ['ecx,', 'ds:_currCache[eax*4]']
mov ['[ebp+Dest],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0A0h]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0A4h]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0A8h]']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0ACh]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0B0h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx+0B0h],', 'ecx']
push ['offset', '_gCurrencyCacheMutex']
call ['_umtx_unlock_56']
add ['esp,', '4']
movsx ['eax,', '[ebp+var_45]']
cmp ['eax,', '0FFFFFFFFh']
jnz ['loc_3F6D']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3DA9']
jmp ['loc_41A3']
push ['offset', '_gCurrencyCacheMutex']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['[ebp+var_5D],', '0FFh']
mov ['[ebp+var_69],', '0']
jmp ['short', 'loc_3DC8']
mov ['al,', '[ebp+var_69]']
add ['al,', '1']
mov ['[ebp+var_69],', 'al']
movsx ['eax,', '[ebp+var_69]']
cmp ['eax,', '0Ah']
jge ['short', 'loc_3E05']
movsx ['eax,', '[ebp+var_69]']
cmp ['ds:_currCache[eax*4],', '0']
jz ['short', 'loc_3E03']
movsx ['eax,', '[ebp+var_69]']
mov ['ecx,', 'ds:_currCache[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3E03']
mov ['al,', '[ebp+var_69]']
mov ['[ebp+var_5D],', 'al']
jmp ['short', 'loc_3E05']
jmp ['short', 'loc_3DC0']
movsx ['eax,', '[ebp+var_5D]']
cmp ['eax,', '0FFFFFFFFh']
jnz ['loc_3EED']
movsx ['eax,', 'ds:_currentCacheEntryIndex']
mov ['ecx,', 'ds:_currCache[eax*4]']
mov ['[ebp+Dest],', 'ecx']
cmp ['[ebp+Dest],', '0']
jz ['short', 'loc_3E56']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0B0h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx+0B0h],', 'ecx']
mov ['eax,', '[ebp+Dest]']
cmp ['dword', 'ptr', '[eax+0B0h],', '0']
jnz ['short', 'loc_3E56']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z']
add ['esp,', '4']
push ['0B4h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dest],', 'eax']
movsx ['eax,', 'ds:_currentCacheEntryIndex']
mov ['ecx,', '[ebp+Dest]']
mov ['ds:_currCache[eax*4],', 'ecx']
mov ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+0A0h],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+0A4h],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+0A8h],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+0ACh],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['dword', 'ptr', '[eax+0B0h],', '2']
movsx ['eax,', 'ds:_currentCacheEntryIndex']
add ['eax,', '1']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['ds:_currentCacheEntryIndex,', 'dl']
push ['offset', '?currency_cache_cleanup@@YACXZ']
push ['10h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
jmp ['short', 'loc_3F60']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z']
add ['esp,', '8']
movsx ['eax,', '[ebp+var_5D]']
mov ['ecx,', 'ds:_currCache[eax*4]']
mov ['[ebp+Dest],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0A0h]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0A4h]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0A8h]']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0ACh]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0B0h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx+0B0h],', 'ecx']
push ['offset', '_gCurrencyCacheMutex']
call ['_umtx_unlock_56']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_78],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '[ebp+var_78]']
cmp ['eax,', '64h']
jle ['short', 'loc_3FA8']
mov ['[ebp+var_328],', '64h']
jmp ['short', 'loc_3FC3']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '[ebp+var_78]']
mov ['[ebp+var_328],', 'eax']
mov ['eax,', '[ebp+var_328]']
mov ['[ebp+var_224],', 'eax']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+var_148]']
push ['eax']
mov ['ecx,', '[ebp+var_224]']
push ['ecx']
mov ['edx,', '[ebp+var_78]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_230],', '0']
lea ['eax,', '[ebp+var_230]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
mov ['edx,', '[ebp+var_224]']
push ['edx']
lea ['eax,', '[ebp+var_148]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+Buf2]']
push ['ecx']
call ['_u_strToUpper_56']
add ['esp,', '18h']
mov ['[ebp+var_224],', 'eax']
mov ['[ebp+var_23C],', '0']
mov ['[ebp+var_248],', '0FFFFFFFFh']
lea ['eax,', '[ebp+var_248]']
push ['eax']
lea ['ecx,', '[ebp+var_23C]']
push ['ecx']
mov ['edx,', '[ebp+var_224]']
push ['edx']
lea ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z']
add ['esp,', '18h']
mov ['[ebp+var_254],', '0']
mov ['[ebp+var_260],', '0FFFFFFFFh']
movsx ['eax,', '[ebp+arg_C]']
cmp ['eax,', '1']
jz ['short', 'loc_40B8']
lea ['eax,', '[ebp+var_260]']
push ['eax']
lea ['ecx,', '[ebp+var_254]']
push ['ecx']
mov ['edx,', '[ebp+var_224]']
push ['edx']
lea ['eax,', '[ebp+var_148]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_23C]']
cmp ['eax,', '[ebp+var_254]']
jl ['short', 'loc_410B']
cmp ['[ebp+var_248],', '0FFFFFFFFh']
jz ['short', 'loc_410B']
push ['4']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_248]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+ecx]']
push ['eax']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '[ebp+var_23C]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_415C']
mov ['eax,', '[ebp+var_254]']
cmp ['eax,', '[ebp+var_23C]']
jl ['short', 'loc_415C']
cmp ['[ebp+var_260],', '0FFFFFFFFh']
jz ['short', 'loc_415C']
push ['4']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_260]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+ecx]']
push ['eax']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '[ebp+var_254]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['offset', '_gCurrencyCacheMutex']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+Dest]']
mov ['ecx,', '[eax+0B0h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+Dest]']
mov ['[edx+0B0h],', 'ecx']
mov ['eax,', '[ebp+Dest]']
cmp ['dword', 'ptr', '[eax+0B0h],', '0']
jnz ['short', 'loc_4196']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z']
add ['esp,', '4']
push ['offset', '_gCurrencyCacheMutex']
call ['_umtx_unlock_56']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '328h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN37']
dd ['offset', '$LN26_0']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN27_0']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN28_0']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN29_0']
dd ['0FFFFFEB8h,', '0C8h']
dd ['offset', '$LN30']
dd ['0FFFFFDE8h,', '0C8h']
dd ['offset', '$LN31']
dd ['0FFFFFDD0h,', '4']
dd ['offset', '$LN32']
dd ['0FFFFFDC4h,', '4']
dd ['offset', '$LN33']
dd ['0FFFFFDB8h,', '4']
dd ['offset', '$LN34']
dd ['0FFFFFDACh,', '4']
dd ['offset', '$LN35']
dd ['0FFFFFDA0h,', '4']
dd ['offset', '$LN36']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '560h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_56C]']
mov ['ecx,', '158h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getName_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4380']
cmp ['[ebp+var_24],', '0FFFFFF84h']
jnz ['short', 'loc_4389']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+Str]']
push ['edx']
call ['?getCurrencyNameCount@@YAXPBDPAH1@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_43D8']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_43E1']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_43FB']
jmp ['loc_4E07']
mov ['[ebp+var_D8],', '0']
mov ['[ebp+var_E4],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_F0],', '0']
mov ['[ebp+var_FC],', '0']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
push ['0']
push ['offset', '_uhash_compareChars_56']
push ['offset', '_uhash_hashChars_56']
call ['_uhash_open_56']
add ['esp,', '10h']
mov ['[ebp+var_108],', 'eax']
lea ['eax,', '[ebp+var_FC]']
push ['eax']
push ['0']
push ['offset', '_uhash_compareChars_56']
push ['offset', '_uhash_hashChars_56']
call ['_uhash_open_56']
add ['esp,', '10h']
mov ['[ebp+var_114],', 'eax']
mov ['[ebp+var_120],', '0']
jmp ['short', 'loc_4492']
mov ['eax,', '[ebp+var_120]']
add ['eax,', '1']
mov ['[ebp+var_120],', 'eax']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['[ebp+var_12C],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['0']
push ['offset', '_CURRENCIES']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_138],', 'eax']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['[ebp+var_144],', 'eax']
mov ['[ebp+var_150],', '0']
jmp ['short', 'loc_4507']
mov ['eax,', '[ebp+var_150]']
add ['eax,', '1']
mov ['[ebp+var_150],', 'eax']
mov ['eax,', '[ebp+var_150]']
cmp ['eax,', '[ebp+var_144]']
jge ['loc_4ADA']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_150]']
push ['ecx']
mov ['edx,', '[ebp+var_138]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_15C],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_168]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_15C]']
push ['edx']
call ['_ures_getStringByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_15C]']
push ['eax']
call ['_ures_getKey_56']
add ['esp,', '4']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_120],', '0']
jnz ['short', 'loc_45A1']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
jmp ['short', 'loc_45F5']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['_uhash_get_56']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_45D1']
mov ['eax,', '[ebp+var_15C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_44F8']
jmp ['short', 'loc_45F5']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
mov ['[ebp+var_171],', '0']
cmp ['[ebp+var_168],', '0']
jle ['short', 'loc_464F']
mov ['eax,', '[ebp+var_D8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '3Dh']
jnz ['short', 'loc_464F']
mov ['eax,', '[ebp+var_D8]']
add ['eax,', '2']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_168]']
sub ['eax,', '1']
mov ['[ebp+var_168],', 'eax']
cmp ['[ebp+var_168],', '0']
jle ['short', 'loc_464F']
mov ['eax,', '[ebp+var_D8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '3Dh']
jz ['short', 'loc_464F']
mov ['[ebp+var_171],', '1']
movsx ['eax,', '[ebp+var_171]']
test ['eax,', 'eax']
jz ['loc_47FD']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_168]']
push ['ecx']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
push ['1']
lea ['ecx,', '[ebp+var_560]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_568],', 'eax']
mov ['eax,', '[ebp+var_568]']
mov ['[ebp+var_56C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_56C]']
push ['ecx']
lea ['ecx,', '[ebp+var_348]']
call ['??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_560]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_354]']
push ['eax']
lea ['ecx,', '[ebp+var_348]']
call ['?getFormats@ChoiceFormat@icu_56@@UBEPBVUnicodeString@2@AAH@Z']
mov ['[ebp+var_360],', 'eax']
mov ['[ebp+var_36C],', '0']
jmp ['short', 'loc_46FE']
mov ['eax,', '[ebp+var_36C]']
add ['eax,', '1']
mov ['[ebp+var_36C],', 'eax']
mov ['eax,', '[ebp+var_36C]']
cmp ['eax,', '[ebp+var_354]']
jge ['loc_47E6']
mov ['ecx,', '[ebp+var_36C]']
shl ['ecx,', '6']
add ['ecx,', '[ebp+var_360]']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_378],', 'eax']
mov ['eax,', '[ebp+var_378]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_384],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_384]']
push ['eax']
mov ['ecx,', '[ebp+var_378]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_36C]']
shl ['ecx,', '6']
add ['ecx,', '[ebp+var_360]']
call ['dword', 'ptr', 'ds:__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_384]']
mov ['[eax+ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+0Ch],', '1']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_378]']
mov ['[eax+ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
jmp ['loc_46EF']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_348]']
call ['??1ChoiceFormat@icu_56@@UAE@XZ']
jmp ['loc_4993']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_D8]']
mov ['[eax+ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+0Ch],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_168]']
mov ['[eax+ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['loc_4993']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_168]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
push ['1']
lea ['ecx,', '[ebp+var_518]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_568],', 'eax']
mov ['edx,', '[ebp+var_568]']
mov ['[ebp+var_56C],', 'edx']
mov ['[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_56C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['ecx,', '[ebp+var_398]']
call ['??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_518]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_398]']
call ['?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ']
mov ['[ebp+var_3A4],', 'eax']
cmp ['[ebp+var_3A4],', '0']
jz ['loc_4981']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+eax],', 'edx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_3A4]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
shl ['edx,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['ecx,', '[ecx]']
mov ['[ecx+edx+4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+0Ch],', '0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_3A4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
shl ['edx,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['ecx,', '[ecx]']
mov ['[ecx+edx+8],', 'eax']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'eax']
jmp ['loc_48DA']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_398]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_168]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_15C]']
push ['edx']
call ['_ures_getStringByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_168]']
push ['ecx']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['?toUpperCase@@YAPA_WPB_WHPBD@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_3B0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_3B0]']
mov ['[eax+ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+0Ch],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_168]']
mov ['[eax+ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+eax],', 'edx']
push ['6']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
shl ['edx,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['ecx,', '[ecx]']
mov ['[ecx+edx+4],', 'eax']
push ['3']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+ecx+4]']
push ['ecx']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+0Ch],', '1']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+8],', '3']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_15C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_44F8']
mov ['[ebp+var_3BC],', '0']
lea ['eax,', '[ebp+var_3BC]']
push ['eax']
push ['0']
push ['offset', '_CURRENCYPLURALS']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_3C8],', 'eax']
mov ['eax,', '[ebp+var_3C8]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['[ebp+var_144],', 'eax']
mov ['[ebp+var_3D4],', '0']
jmp ['short', 'loc_4B37']
mov ['eax,', '[ebp+var_3D4]']
add ['eax,', '1']
mov ['[ebp+var_3D4],', 'eax']
mov ['eax,', '[ebp+var_3D4]']
cmp ['eax,', '[ebp+var_144]']
jge ['loc_4D11']
lea ['eax,', '[ebp+var_3BC]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_3D4]']
push ['ecx']
mov ['edx,', '[ebp+var_3C8]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_3E0],', 'eax']
mov ['eax,', '[ebp+var_3E0]']
push ['eax']
call ['_ures_getKey_56']
add ['esp,', '4']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_120],', '0']
jnz ['short', 'loc_4BB2']
lea ['eax,', '[ebp+var_FC]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
mov ['eax,', '[ebp+var_114]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
jmp ['short', 'loc_4C06']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+var_114]']
push ['ecx']
call ['_uhash_get_56']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_4BE2']
mov ['eax,', '[ebp+var_3E0]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_4B28']
jmp ['short', 'loc_4C06']
lea ['eax,', '[ebp+var_FC]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
mov ['edx,', '[ebp+var_E4]']
push ['edx']
mov ['eax,', '[ebp+var_114]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_3E0]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['[ebp+var_3EC],', 'eax']
mov ['[ebp+var_404],', '0']
jmp ['short', 'loc_4C36']
mov ['eax,', '[ebp+var_404]']
add ['eax,', '1']
mov ['[ebp+var_404],', 'eax']
mov ['eax,', '[ebp+var_404]']
cmp ['eax,', '[ebp+var_3EC]']
jge ['loc_4CFD']
lea ['eax,', '[ebp+var_3BC]']
push ['eax']
lea ['ecx,', '[ebp+var_3F8]']
push ['ecx']
mov ['edx,', '[ebp+var_404]']
push ['edx']
mov ['eax,', '[ebp+var_3E0]']
push ['eax']
call ['_ures_getStringByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_3F8]']
push ['ecx']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['?toUpperCase@@YAPA_WPB_WHPBD@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_410],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_410]']
mov ['[eax+ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx+0Ch],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_3F8]']
mov ['[eax+ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
jmp ['loc_4C27']
mov ['eax,', '[ebp+var_3E0]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_4B28']
mov ['eax,', '[ebp+var_3C8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['?fallback@@YACPAD@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4D56']
jmp ['short', 'loc_4D5B']
jmp ['loc_4483']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_uhash_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_114]']
push ['eax']
call ['_uhash_close_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['offset', '?currencyNameComparator@@YAHPBX0@Z']
push ['10h']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__qsort']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '?currencyNameComparator@@YAHPBX0@Z']
push ['10h']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__qsort']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4DE6']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_F0]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_4E07']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4E07']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_FC]']
mov ['[eax],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN57']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '56Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN56']
dd ['offset', '$LN45']
dd ['0FFFFFF34h,', '9Dh']
dd ['offset', '$LN46']
dd ['0FFFFFF10h,', '4']
dd ['offset', '$LN47']
dd ['0FFFFFF04h,', '4']
dd ['offset', '$LN48']
dd ['0FFFFFE98h,', '4']
dd ['offset', '$LN49']
dd ['0FFFFFCB8h,', '1CCh']
dd ['offset', '$LN50']
dd ['0FFFFFCACh,', '4']
dd ['offset', '$LN51']
dd ['0FFFFFC68h,', '0Ch']
dd ['offset', '$LN52']
dd ['0FFFFFC44h,', '4']
dd ['offset', '$LN53']
dd ['0FFFFFC08h,', '4']
dd ['offset', '$LN54']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-560h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$1	proc near
lea ['ecx,', '[ebp-348h]']
jmp ['??1ChoiceFormat@icu_56@@UAE@XZ']
endp
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$2	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-518h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$3	proc near
lea ['ecx,', '[ebp-398h]']
jmp ['??1EquivIterator@icu_56@@QAE@XZ']
endp
__ehhandler$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-570h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$2']
dd ['3']
dd ['offset', '__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$3']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$3']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1EquivIterator@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fallback@@YACPAD@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5054']
xor ['al,', 'al']
jmp ['short', 'loc_507E']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uloc_getParent_56']
add ['esp,', '10h']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_1']
dd ['offset', '$LN4_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?currencyNameComparator@@YAHPBX0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_50FC']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_5118']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_E8],', 'ecx']
jmp ['short', 'loc_5124']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_E8]']
jge ['short', 'loc_517C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'edx']
jge ['short', 'loc_5152']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_51A8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'edx']
jle ['short', 'loc_5177']
mov ['eax,', '1']
jmp ['short', 'loc_51A8']
jmp ['loc_50F3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_5191']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_51A8']
jmp ['short', 'loc_51A6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jle ['short', 'loc_51A6']
mov ['eax,', '1']
jmp ['short', 'loc_51A8']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCurrencyNameCount@@YAXPBDPAH1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getCurrencyNameCount@@YAXPBDPAH1@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '48Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_498]']
mov ['ecx,', '123h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
call ['?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ']
mov ['[ebp+var_CC],', 'eax']
mov ['[ebp+var_D8],', '0']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['[ebp+var_E4],', 'eax']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
push ['0']
push ['offset', '_CURRENCIES']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_F0],', 'eax']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['[ebp+var_FC],', 'eax']
mov ['[ebp+var_108],', '0']
jmp ['short', 'loc_52A5']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '1']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+var_FC]']
jge ['loc_54BC']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_114],', 'eax']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_114]']
push ['edx']
call ['_ures_getStringByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_129],', '0']
cmp ['[ebp+var_120],', '0']
jle ['short', 'loc_534C']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '3Dh']
jnz ['short', 'loc_534C']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_120]']
sub ['eax,', '1']
mov ['[ebp+var_120],', 'eax']
cmp ['[ebp+var_120],', '0']
jle ['short', 'loc_534C']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '3Dh']
jz ['short', 'loc_534C']
mov ['[ebp+var_129],', '1']
movsx ['eax,', '[ebp+var_129]']
test ['eax,', 'eax']
jz ['loc_5401']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['1']
lea ['ecx,', '[ebp+var_48C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_494],', 'eax']
mov ['eax,', '[ebp+var_494]']
mov ['[ebp+var_498],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_498]']
push ['ecx']
lea ['ecx,', '[ebp+var_300]']
call ['??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_48C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_30C]']
push ['eax']
lea ['ecx,', '[ebp+var_300]']
call ['?getFormats@ChoiceFormat@icu_56@@UBEPBVUnicodeString@2@AAH@Z']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_30C]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_300]']
call ['??1ChoiceFormat@icu_56@@UAE@XZ']
jmp ['loc_548E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_548E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['1']
lea ['ecx,', '[ebp+var_444]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_494],', 'eax']
mov ['edx,', '[ebp+var_494]']
mov ['[ebp+var_498],', 'edx']
mov ['[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_498]']
push ['eax']
mov ['ecx,', '[ebp+var_CC]']
push ['ecx']
call ['?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
add ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_444]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_114]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_5296']
mov ['[ebp+var_318],', '0']
lea ['eax,', '[ebp+var_318]']
push ['eax']
push ['0']
push ['offset', '_CURRENCYPLURALS']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_324],', 'eax']
mov ['eax,', '[ebp+var_324]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['[ebp+var_FC],', 'eax']
mov ['[ebp+var_330],', '0']
jmp ['short', 'loc_5519']
mov ['eax,', '[ebp+var_330]']
add ['eax,', '1']
mov ['[ebp+var_330],', 'eax']
mov ['eax,', '[ebp+var_330]']
cmp ['eax,', '[ebp+var_FC]']
jge ['short', 'loc_5576']
lea ['eax,', '[ebp+var_318]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_330]']
push ['ecx']
mov ['edx,', '[ebp+var_324]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_33C],', 'eax']
mov ['eax,', '[ebp+var_33C]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_33C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['short', 'loc_550A']
mov ['eax,', '[ebp+var_324]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?fallback@@YACPAD@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_55BB']
jmp ['short', 'loc_55C0']
jmp ['loc_5227']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '498h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN27_1']
dd ['offset', '$LN20_0']
dd ['0FFFFFF28h,', '4']
dd ['offset', '$LN21']
dd ['0FFFFFEE0h,', '4']
dd ['offset', '$LN22']
dd ['0FFFFFD00h,', '1CCh']
dd ['offset', '$LN23']
dd ['0FFFFFCF4h,', '4']
dd ['offset', '$LN24']
dd ['0FFFFFCE8h,', '4']
dd ['offset', '$LN25_0']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-48Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$1 proc near
lea ['ecx,', '[ebp-300h]']
jmp ['??1ChoiceFormat@icu_56@@UAE@XZ']
endp
__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-444h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getCurrencyNameCount@@YAXPBDPAH1@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-49Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getCurrencyNameCount@@YAXPBDPAH1@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$2']
dd ['offset', '__unwindtable$?getCurrencyNameCount@@YAXPBDPAH1@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0ECh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_28]']
call ['?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_5786']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_576F']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_F4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_F4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN8']
dd ['offset', '$LN6_2']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1EquivIterator@icu_56@@QAE@XZ']
endp
__ehhandler$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0FCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUpperCase@@YAPA_WPB_WHPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+Dst],', '0']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_u_strToUpper_56']
add ['esp,', '18h']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_58AB']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_E8],', 'ecx']
jmp ['short', 'loc_58B4']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E8]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_u_strToUpper_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_591F']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7_0']
dd ['offset', '$LN6_3']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_8],', '0FFFFFFFFh']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_59B9']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_5A3E']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+Buf2]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?binarySearch@@YAHPBUCurrencyNameStruct@@H_WPAH2@Z']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
jnz ['short', 'loc_59EF']
jmp ['short', 'loc_5A3E']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jz ['short', 'loc_5A08']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
cmp ['eax,', '0Ah']
jge ['short', 'loc_5A39']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?linearSearch@@YAXPBUCurrencyNameStruct@@HHPB_WHPAH2@Z']
add ['esp,', '1Ch']
jmp ['short', 'loc_5A3E']
jmp ['loc_59B0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN9_0']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN10']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?binarySearch@@YAHPBUCurrencyNameStruct@@H_WPAH2@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jg ['loc_5CA5']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax+8]']
jl ['short', 'loc_5B10']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_5CA0']
movzx ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[ecx+edx*2]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_5B3A']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_5CA0']
movzx ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[ecx+edx*2]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_5B64']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_5CA0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_5BD4']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_38]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax+8]']
jl ['short', 'loc_5BA5']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5BD2']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+4]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_5BCC']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5BD2']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_5B72']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_5C4C']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_38]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+8]']
cmp ['edx,', '[ebp+arg_4]']
jge ['short', 'loc_5C1D']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5C4A']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+4]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_5C41']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_5C4A']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5BEA']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+4]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[edx+eax*2]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_5C75']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_5C7D']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax+ecx+8],', 'edx']
jnz ['short', 'loc_5C9B']
mov ['eax,', '[ebp+arg_C]']
mov ['eax,', '[eax]']
jmp ['short', 'loc_5CBA']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_5CBA']
jmp ['loc_5AD6']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?linearSearch@@YAXPBUCurrencyNameStruct@@HHPB_WHPAH2@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_5CF3']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jg ['short', 'loc_5D53']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_5D51']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_10]']
jg ['short', 'loc_5D51']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx+4]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_5D51']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_5CEA']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_getStaticCurrencyName_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '304h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_304]']
mov ['ecx,', '0C1h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['edx,', '[ebp+var_9]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucurr_getName_56']
add ['esp,', '18h']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_5E9D']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jz ['loc_5E85']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
push ['1']
lea ['ecx,', '[ebp+var_300]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_1F8]']
call ['??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_300]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5E60']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
sub ['esp,', '8']
fld ['ds:__real@4000000000000000']
fstp ['[esp+31Ch+var_31C]']
lea ['ecx,', '[ebp+var_1F8]']
call ['?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z']
jmp ['short', 'loc_5E78']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_1F8]']
call ['??1ChoiceFormat@icu_56@@UAE@XZ']
jmp ['short', 'loc_5E9D']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '304h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11_0']
dd ['offset', '$LN8_1']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN9_1']
dd ['0FFFFFE08h,', '1CCh']
dd ['offset', '$LN10_0']
db ['6Eh,', '0']
align ['10h']
assume ['cs:_rdata']
public ['__real@4000000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getDefaultFractionDigits_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucurr_getDefaultFractionDigitsForUsage_56']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getDefaultFractionDigitsForUsage_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5FEB']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '0']
jz ['short', 'loc_5FB3']
cmp ['[ebp+var_D0],', '1']
jz ['short', 'loc_5FCA']
jmp ['short', 'loc_5FE2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['edx,', '[eax]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_5FEB']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['edx,', '[eax+8]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_5FEB']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '10h']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6032']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_605A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6050']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', 'offset', '_LAST_RESORT_DATA']
jmp ['loc_61E1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '_CURRENCY_DATA']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['offset', '_CURRENCY_META']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_60BA']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', 'offset', '_LAST_RESORT_DATA']
jmp ['loc_61E1']
mov ['[ebp+var_2C],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
call ['?myUCharsToChars@@YAPADPADPB_W@Z']
add ['esp,', '8']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6157']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['offset', '_DEFAULT_META']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6157']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', 'offset', '_LAST_RESORT_DATA']
jmp ['loc_61E1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6189']
cmp ['[ebp+var_44],', '4']
jz ['short', 'loc_61C6']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_61A7']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', 'offset', '_LAST_RESORT_DATA']
jmp ['short', 'loc_61E1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15_0']
dd ['offset', '$LN12_2']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN13_0']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN14_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getRoundingIncrement_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucurr_getRoundingIncrementForUsage_56']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getRoundingIncrementForUsage_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
fldz
fstp ['[ebp+var_C]']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_634E']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_F8],', 'eax']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_62EC']
cmp ['[ebp+var_F8],', '1']
jz ['short', 'loc_62FF']
jmp ['short', 'loc_6313']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_6321']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_6321']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '10h']
fld ['[ebp+var_C]']
jmp ['short', 'loc_6351']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_632D']
cmp ['[ebp+var_24],', '9']
jle ['short', 'loc_6338']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '3']
jmp ['short', 'loc_634E']
cmp ['[ebp+var_30],', '2']
jl ['short', 'loc_634E']
fild ['[ebp+var_30]']
mov ['eax,', '[ebp+var_24]']
fidiv ['ds:_POW10[eax*4]']
fstp ['[ebp+var_C]']
fld ['[ebp+var_C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_countCurrencyList proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_63B0']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['ds:_gCurrencyList[eax*8],', '0']
jz ['short', 'loc_63E3']
cmp ['[ebp+var_14],', '7FFFFFFFh']
jz ['short', 'loc_63D8']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', 'ds:dword_69C[eax*8]']
and ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_63E1']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_63A7']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_nextCurrencyList	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '12Bh']
jnb ['short', 'loc_6477']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
lea ['edx,', '_gCurrencyList[ecx*8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '7FFFFFFFh']
jz ['short', 'loc_645F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
and ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
cmp ['edx,', '[eax]']
jnz ['short', 'loc_6475']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_646E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax]']
jmp ['short', 'loc_6488']
jmp ['short', 'loc_6417']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_6486']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_resetCurrencyList proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_closeCurrencyList proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_isAvailable_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['offset', '?initIsoCodes@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gIsoCodesInitOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6561']
xor ['al,', 'al']
jmp ['short', 'loc_65C5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', 'ds:_gIsoCodes']
push ['ecx']
call ['_uhash_get_56']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_6583']
xor ['al,', 'al']
jmp ['short', 'loc_65C5']
jmp ['short', 'loc_65C3']
fld ['[ebp+arg_C]']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_659F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['al,', 'al']
jmp ['short', 'loc_65C5']
jmp ['short', 'loc_65C3']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+10h]']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '5']
jnp ['short', 'loc_65BF']
mov ['eax,', '[ebp+var_8]']
fld ['qword', 'ptr', '[eax+8]']
fcomp ['[ebp+arg_C]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['short', 'loc_65C3']
xor ['al,', 'al']
jmp ['short', 'loc_65C5']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6614']
jmp ['loc_6699']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_6678']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6678']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_6699']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6699']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initIsoCodes@@YAXAAW4UErrorCode@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_gIsoCodes,', '0']
jz ['short', 'loc_6748']
mov ['eax,', 'ds:?__LINE__Var@?1??initIsoCodes@@YAXAAW4UErrorCode@@@Z@4JA@2077fca7']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1BO@PBLGEDH@?$AAg?$AAI?$AAs?$AAo?$AAC?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['offset', '_currency_cleanup']
push ['10h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['offset', '_uhash_compareUChars_56']
push ['offset', '_uhash_hashUChars_56']
call ['_uhash_open_56']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6789']
jmp ['short', 'loc_67D5']
push ['offset', '?deleteIsoCodeEntry@@YAXPAX@Z']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uhash_setValueDeleter_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ucurr_createCurrencyList']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_67CD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uhash_close_56']
add ['esp,', '4']
jmp ['short', 'loc_67D5']
mov ['eax,', '[ebp+var_8]']
mov ['ds:_gIsoCodes,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BO@PBLGEDH@?$AAg?$AAI?$AAs?$AAo?$AAC?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<gIsoCodes', '==', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??initIsoCodes@@YAXAAW4UErrorCode@@@Z@4JA@2077fca7']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?deleteIsoCodeEntry@@YAXPAX@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_createCurrencyList proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1CC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['offset', '_CURRENCY_DATA']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '_CURRENCY_MAP']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_6BC4']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_68D7']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['[ebp+var_2C],', 'eax']
jge ['loc_6BC2']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_6BA9']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_692E']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['[ebp+var_44],', 'eax']
jge ['loc_6BA7']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_50],', 'eax']
push ['18h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_697D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_6BD8']
mov ['[ebp+var_68],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
push ['offset', '??_C@_02EGCJHIOB@id?$AA@']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_69A9']
jmp ['loc_6925']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
call ['_ures_getString_56']
add ['esp,', '0Ch']
mov ['[ebp+var_80],', 'eax']
fld ['ds:__real@ffefffffffffffff']
fstp ['[ebp+var_90]']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
push ['offset', '??_C@_04HNEBHLOP@from?$AA@']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_9C],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6A73']
mov ['[ebp+var_A8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+var_9C]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_B4]']
mov ['eax,', '[eax]']
cdq
mov ['cl,', '20h']
call ['__allshl']
mov ['dword', 'ptr', '[ebp+var_C4],', 'eax']
mov ['dword', 'ptr', '[ebp+var_C4+4],', 'edx']
mov ['eax,', '[ebp+var_B4]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0']
or ['eax,', 'dword', 'ptr', '[ebp+var_C4]']
or ['edx,', 'dword', 'ptr', '[ebp+var_C4+4]']
mov ['dword', 'ptr', '[ebp+var_C4],', 'eax']
mov ['dword', 'ptr', '[ebp+var_C4+4],', 'edx']
fild ['[ebp+var_C4]']
fstp ['[ebp+var_90]']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
fld ['ds:__real@7fefffffffffffff']
fstp ['[ebp+var_D4]']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
push ['offset', '??_C@_02LBCDJBAJ@to?$AA@']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6B3C']
mov ['[ebp+var_EC],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_F8]']
mov ['eax,', '[eax]']
cdq
mov ['cl,', '20h']
call ['__allshl']
mov ['dword', 'ptr', '[ebp+var_108],', 'eax']
mov ['dword', 'ptr', '[ebp+var_108+4],', 'edx']
mov ['eax,', '[ebp+var_F8]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0']
or ['eax,', 'dword', 'ptr', '[ebp+var_108]']
or ['edx,', 'dword', 'ptr', '[ebp+var_108+4]']
mov ['dword', 'ptr', '[ebp+var_108],', 'eax']
mov ['dword', 'ptr', '[ebp+var_108+4],', 'edx']
fild ['[ebp+var_108]']
fstp ['[ebp+var_D4]']
mov ['eax,', '[ebp+var_E0]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
fld ['[ebp+var_90]']
fstp ['qword', 'ptr', '[eax+8]']
mov ['eax,', '[ebp+var_5C]']
fld ['[ebp+var_D4]']
fstp ['qword', 'ptr', '[eax+10h]']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
jmp ['loc_6925']
jmp ['short', 'loc_6BB1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_68CE']
jmp ['short', 'loc_6BCC']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN21_0']
dd ['offset', '$LN17_0']
dd ['0FFFFFF98h,', '4']
dd ['offset', '$LN18_0']
dd ['0FFFFFF58h,', '4']
dd ['offset', '$LN19_0']
dd ['0FFFFFF14h,', '4']
dd ['offset', '$LN20_1']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02LBCDJBAJ@to?$AA@']
align ['4']
assume ['cs:_rdata']
public ['__real@7fefffffffffffff']
assume ['cs:_rdata']
public ['??_C@_04HNEBHLOP@from?$AA@']
align ['4']
assume ['cs:_rdata']
public ['__real@ffefffffffffffff']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '?initCurrSymbolsEquiv@@YAXXZ']
push ['offset', '_gCurrSymbolsEquivInitOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z']
add ['esp,', '8']
mov ['eax,', 'ds:_gCurrSymbolsEquiv']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jnz ['short', 'loc_6CFD']
jmp ['short', 'loc_6D3C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6D3C']
mov ['esi,', 'esp']
call ['[ebp+arg_4]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initCurrSymbolsEquiv@@YAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?initCurrSymbolsEquiv@@YAXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
cmp ['ds:_gCurrSymbolsEquiv,', '0']
jz ['short', 'loc_6DBB']
mov ['eax,', 'ds:?__LINE__Var@?1??initCurrSymbolsEquiv@@YAXXZ@4JA@2077fca7']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@']
push ['offset', '??_C@_1CO@CJKEBIBE@?$AAg?$AAC?$AAu?$AAr?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AAE?$AAq?$AAu?$AAi?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', '0']
push ['offset', '_currency_cleanup']
push ['10h']
call ['_ucln_i18n_registerCleanup_56']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['38h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_6E1C']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_11C]']
call ['dword', 'ptr', 'ds:__imp_??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_130],', 'eax']
jmp ['short', 'loc_6E26']
mov ['[ebp+var_130],', '0']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+var_128],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_6E4D']
jmp ['loc_6F23']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6EA2']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_104],', 'eax']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+var_110],', 'ecx']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_6E93']
push ['1']
mov ['ecx,', '[ebp+var_110]']
call ['??_GHashtable@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_130],', 'eax']
jmp ['short', 'loc_6E9D']
mov ['[ebp+var_130],', '0']
jmp ['loc_6F23']
mov ['esi,', 'esp']
push ['offset', '?deleteUnicode@@YAXPAX@Z']
mov ['ecx,', '[ebp+var_20]']
call ['dword', 'ptr', 'ds:__imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6F1B']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_6F0F']
push ['1']
mov ['ecx,', '[ebp+var_F8]']
call ['??_GHashtable@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_130],', 'eax']
jmp ['short', 'loc_6F19']
mov ['[ebp+var_130],', '0']
jmp ['short', 'loc_6F23']
mov ['eax,', '[ebp+var_20]']
mov ['ds:_gCurrSymbolsEquiv,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16_2']
dd ['offset', '$LN14_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?initCurrSymbolsEquiv@@YAXXZ$0 proc near 
mov ['esi,', 'esp']
mov ['eax,', '[ebp-11Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?initCurrSymbolsEquiv@@YAXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-134h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?initCurrSymbolsEquiv@@YAXXZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CO@CJKEBIBE@?$AAg?$AAC?$AAu?$AAr?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AAE?$AAq?$AAu?$AAi?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<gCurrSymbolsEquiv', '==', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??initCurrSymbolsEquiv@@YAXXZ@4JA@2077fca7']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?initCurrSymbolsEquiv@@YAXXZ$0']
dd ['offset', '__unwindtable$?initCurrSymbolsEquiv@@YAXXZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?deleteUnicode@@YAXPAX@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_706F']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_7079']
mov ['[ebp+var_E8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_218]']
mov ['ecx,', '83h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_70EA']
jmp ['loc_7290']
mov ['[ebp+var_18],', '5']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_7103']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_18]']
jge ['loc_7290']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', 'ds:_EQUIV_CURRENCY_SYMBOLS[eax*8]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', 'ds:off_1034[eax*8]']
push ['ecx']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_1BC]']
push ['edx']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_?unescape@UnicodeString@icu_56@@QBE?AV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20C],', 'eax']
mov ['eax,', '[ebp+var_20C]']
mov ['[ebp+var_210],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_210]']
push ['ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_204]']
push ['edx']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_?unescape@UnicodeString@icu_56@@QBE?AV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_214],', 'eax']
mov ['eax,', '[ebp+var_214]']
mov ['[ebp+var_218],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_218]']
push ['ecx']
call ['?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_204]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7259']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_7290']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_B4]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_6C]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_70FA']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '218h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15_1']
dd ['offset', '$LN12_3']
dd ['0FFFFFF4Ch,', '40h']
dd ['offset', '$LN13_1']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-6Ch]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$1	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-0B4h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$2	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1BCh]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$3	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-204h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-21Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$3']
dd ['offset', '__unwindtable$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '224h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_230]']
mov ['ecx,', '89h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_740B']
jmp ['loc_7A3E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_742D']
jmp ['loc_7A3E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_1C]']
call ['??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_30]']
call ['??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_1C]']
call ['?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_74F8']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_74F8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_74C0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_74E0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
jmp ['loc_7A3E']
lea ['ecx,', '[ebp+var_1C]']
call ['?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ']
mov ['[ebp+var_54],', 'eax']
lea ['ecx,', '[ebp+var_30]']
call ['?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_747A']
cmp ['[ebp+var_48],', '0']
jnz ['loc_760B']
cmp ['[ebp+var_3C],', '0']
jnz ['loc_760B']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_21C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_21C],', '0']
jz ['short', 'loc_7566']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_21C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_21C]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_21C]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_7570']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_228],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_228]']
mov ['[ebp+var_6C],', 'ecx']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_204],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
cmp ['[ebp+var_204],', '0']
jz ['short', 'loc_75E3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_204]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_204]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_204]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_75ED']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_210],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_210]']
mov ['[ebp+var_78],', 'ecx']
jmp ['loc_7917']
cmp ['[ebp+var_48],', '0']
jnz ['loc_7714']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_1EC],', '0']
jz ['short', 'loc_766F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_1EC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_1EC]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_1EC]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_7679']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_1F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1F8]']
mov ['[ebp+var_6C],', 'ecx']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
cmp ['[ebp+var_1D4],', '0']
jz ['short', 'loc_76EC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_1D4]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_1D4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_1D4]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_76F6']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_1E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1E0]']
mov ['[ebp+var_78],', 'ecx']
jmp ['loc_7917']
cmp ['[ebp+var_3C],', '0']
jnz ['loc_781D']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1BC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+var_1BC],', '0']
jz ['short', 'loc_7778']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_1BC]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_1BC]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_1BC]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_7782']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_1C8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1C8]']
mov ['[ebp+var_6C],', 'ecx']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1A4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
cmp ['[ebp+var_1A4],', '0']
jz ['short', 'loc_77F5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_1A4]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_1A4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_1A4]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_77FF']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_1B0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1B0]']
mov ['[ebp+var_78],', 'ecx']
jmp ['loc_7917']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
cmp ['[ebp+var_18C],', '0']
jz ['short', 'loc_7877']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_18C]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18C]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_18C]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_7881']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_198],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_198]']
mov ['[ebp+var_6C],', 'ecx']
mov ['esi,', 'esp']
push ['40h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_174],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
cmp ['[ebp+var_174],', '0']
jz ['short', 'loc_78F4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_174]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_174]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_SUnicodeString@icu_56@@6B@']
mov ['edx,', '[ebp+var_174]']
mov ['[ebp+var_230],', 'edx']
jmp ['short', 'loc_78FE']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_180],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_180]']
mov ['[ebp+var_78],', 'ecx']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_7927']
cmp ['[ebp+var_78],', '0']
jnz ['loc_79E7']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_15C],', 'eax']
mov ['ecx,', '[ebp+var_15C]']
mov ['[ebp+var_168],', 'ecx']
cmp ['[ebp+var_168],', '0']
jz ['short', 'loc_796A']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_168]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_168]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_230],', 'eax']
jmp ['short', 'loc_7974']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_144],', 'eax']
mov ['ecx,', '[ebp+var_144]']
mov ['[ebp+var_150],', 'ecx']
cmp ['[ebp+var_150],', '0']
jz ['short', 'loc_79B7']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_150]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_230],', 'eax']
jmp ['short', 'loc_79C1']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
jmp ['short', 'loc_7A3E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1EquivIterator@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '230h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN50_0']
dd ['offset', '$LN47_0']
dd ['0FFFFFFD0h,', '0Ch']
dd ['offset', '$LN48_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1EquivIterator@icu_56@@QAE@XZ']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1EquivIterator@icu_56@@QAE@XZ']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$2 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-21Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$3 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-204h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$4 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1ECh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$5 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1D4h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$6 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1BCh]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$7 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-1A4h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$8 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-18Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$9 proc near
mov ['esi,', 'esp']
mov ['eax,', '[ebp-174h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-234h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_SUnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$2']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$3']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$4']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$5']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$6']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$7']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$8']
dd ['1']
dd ['offset', '__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$9']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_03FDBHJFLB@XUA?$AA@']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7D67']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_openISOCurrencies_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+Dst],', '0']
push ['1Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_7DC5']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['short', 'loc_7E31']
push ['1']
push ['offset', '_gEnumCurrencyList']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['1Ch']
push ['offset', '_gEnumCurrencyList']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_7E13']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_7E31']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_countCurrencies_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '244h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_244]']
mov ['ecx,', '91h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['loc_81F5']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_81F5']
mov ['[ebp+var_18],', '0']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_08JLPCGLMH@currency?$AA@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7EFA']
xor ['eax,', 'eax']
jmp ['loc_81F7']
push ['5Fh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_CC],', 'eax']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_7F23']
mov ['eax,', '[ebp+var_CC]']
mov ['byte', 'ptr', '[eax],', '0']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['offset', '_CURRENCY_DATA']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_D8],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
push ['offset', '_CURRENCY_MAP']
mov ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_E4],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_F0],', 'eax']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_81B6']
mov ['[ebp+var_FC],', '0']
jmp ['short', 'loc_7FBD']
mov ['eax,', '[ebp+var_FC]']
add ['eax,', '1']
mov ['[ebp+var_FC],', 'eax']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['[ebp+var_FC],', 'eax']
jge ['loc_81B6']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_108],', 'eax']
mov ['[ebp+var_114],', '0']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['0']
push ['offset', '??_C@_04HNEBHLOP@from?$AA@']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_120],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_114]']
push ['ecx']
mov ['edx,', '[ebp+var_120]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_12C],', 'eax']
mov ['eax,', '[ebp+var_12C]']
mov ['eax,', '[eax]']
cdq
mov ['cl,', '20h']
call ['__allshl']
mov ['dword', 'ptr', '[ebp+var_13C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_13C+4],', 'edx']
mov ['eax,', '[ebp+var_12C]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0']
or ['eax,', 'dword', 'ptr', '[ebp+var_13C]']
or ['edx,', 'dword', 'ptr', '[ebp+var_13C+4]']
mov ['dword', 'ptr', '[ebp+var_13C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_13C+4],', 'edx']
fild ['[ebp+var_13C]']
fstp ['[ebp+var_14C]']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['eax,', '2']
jle ['loc_817A']
mov ['[ebp+var_158],', '0']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['0']
push ['offset', '??_C@_02LBCDJBAJ@to?$AA@']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_164],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_158]']
push ['ecx']
mov ['edx,', '[ebp+var_164]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_170],', 'eax']
mov ['eax,', '[ebp+var_170]']
mov ['eax,', '[eax]']
cdq
mov ['cl,', '20h']
call ['__allshl']
mov ['dword', 'ptr', '[ebp+var_13C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_13C+4],', 'edx']
mov ['eax,', '[ebp+var_170]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0']
or ['eax,', 'dword', 'ptr', '[ebp+var_13C]']
or ['edx,', 'dword', 'ptr', '[ebp+var_13C+4]']
mov ['dword', 'ptr', '[ebp+var_13C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_13C+4],', 'edx']
fild ['[ebp+var_13C]']
fstp ['[ebp+var_180]']
fld ['[ebp+arg_4]']
fcomp ['[ebp+var_14C]']
fnstsw ['ax']
test ['ah,', '1']
jnz ['short', 'loc_8169']
fld ['[ebp+var_180]']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['short', 'loc_8169']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_164]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['short', 'loc_8193']
fld ['[ebp+arg_4]']
fcomp ['[ebp+var_14C]']
fnstsw ['ax']
test ['ah,', '1']
jnz ['short', 'loc_8193']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_120]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['loc_7FAE']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_81D3']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_81DB']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_81F5']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_81F7']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '244h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21_1']
dd ['offset', '$LN17_2']
dd ['0FFFFFF40h,', '9Dh']
dd ['offset', '$LN18_1']
dd ['0FFFFFEECh,', '4']
dd ['offset', '$LN19_1']
dd ['0FFFFFEA8h,', '4']
dd ['offset', '$LN20_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_forLocaleAndDate_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '268h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_268]']
mov ['ecx,', '9Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_24],', '0']
cmp ['[ebp+arg_18],', '0']
jz ['loc_8722']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_8722']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_82F0']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_82FA']
cmp ['[ebp+arg_14],', '0']
jnz ['loc_8719']
mov ['[ebp+var_30],', '0']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_08JLPCGLMH@currency?$AA@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_835D']
xor ['eax,', 'eax']
jmp ['loc_8725']
push ['5Fh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_E4],', '0']
jz ['short', 'loc_8386']
mov ['eax,', '[ebp+var_E4]']
mov ['byte', 'ptr', '[eax],', '0']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['offset', '_CURRENCY_DATA']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_F0],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_F0]']
push ['ecx']
push ['offset', '_CURRENCY_MAP']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_FC],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_108],', 'eax']
mov ['[ebp+var_111],', '0']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_869A']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_8426']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['[ebp+arg_C],', 'eax']
jle ['short', 'loc_843C']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_8725']
mov ['[ebp+var_120],', '0']
jmp ['short', 'loc_8457']
mov ['eax,', '[ebp+var_120]']
add ['eax,', '1']
mov ['[ebp+var_120],', 'eax']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['[ebp+var_120],', 'eax']
jge ['loc_869A']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
mov ['edx,', '[ebp+var_108]']
push ['edx']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_12C],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['offset', '??_C@_02EGCJHIOB@id?$AA@']
mov ['edx,', '[ebp+var_12C]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_138],', '0']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['0']
push ['offset', '??_C@_04HNEBHLOP@from?$AA@']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_144],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_138]']
push ['ecx']
mov ['edx,', '[ebp+var_144]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_150],', 'eax']
mov ['eax,', '[ebp+var_150]']
mov ['eax,', '[eax]']
cdq
mov ['cl,', '20h']
call ['__allshl']
mov ['dword', 'ptr', '[ebp+var_160],', 'eax']
mov ['dword', 'ptr', '[ebp+var_160+4],', 'edx']
mov ['eax,', '[ebp+var_150]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0']
or ['eax,', 'dword', 'ptr', '[ebp+var_160]']
or ['edx,', 'dword', 'ptr', '[ebp+var_160+4]']
mov ['dword', 'ptr', '[ebp+var_160],', 'eax']
mov ['dword', 'ptr', '[ebp+var_160+4],', 'edx']
fild ['[ebp+var_160]']
fstp ['[ebp+var_170]']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
call ['_ures_getSize_56']
add ['esp,', '4']
cmp ['eax,', '2']
jle ['loc_8642']
mov ['[ebp+var_17C],', '0']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['0']
push ['offset', '??_C@_02LBCDJBAJ@to?$AA@']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_188],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_17C]']
push ['ecx']
mov ['edx,', '[ebp+var_188]']
push ['edx']
call ['_ures_getIntVector_56']
add ['esp,', '0Ch']
mov ['[ebp+var_194],', 'eax']
mov ['eax,', '[ebp+var_194]']
mov ['eax,', '[eax]']
cdq
mov ['cl,', '20h']
call ['__allshl']
mov ['dword', 'ptr', '[ebp+var_160],', 'eax']
mov ['dword', 'ptr', '[ebp+var_160+4],', 'edx']
mov ['eax,', '[ebp+var_194]']
mov ['eax,', '[eax+4]']
cdq
and ['edx,', '0']
or ['eax,', 'dword', 'ptr', '[ebp+var_160]']
or ['edx,', 'dword', 'ptr', '[ebp+var_160+4]']
mov ['dword', 'ptr', '[ebp+var_160],', 'eax']
mov ['dword', 'ptr', '[ebp+var_160+4],', 'edx']
fild ['[ebp+var_160]']
fstp ['[ebp+var_1A4]']
fld ['[ebp+arg_4]']
fcomp ['[ebp+var_170]']
fnstsw ['ax']
test ['ah,', '1']
jnz ['short', 'loc_8631']
fld ['[ebp+var_1A4]']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['short', 'loc_8631']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_8631']
mov ['[ebp+var_111],', '1']
mov ['eax,', '[ebp+var_188]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['short', 'loc_866A']
fld ['[ebp+arg_4]']
fcomp ['[ebp+var_170]']
fnstsw ['ax']
test ['ah,', '1']
jnz ['short', 'loc_866A']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_866A']
mov ['[ebp+var_111],', '1']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_144]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
movzx ['eax,', '[ebp+var_111]']
test ['eax,', 'eax']
jz ['short', 'loc_8695']
jmp ['short', 'loc_869A']
jmp ['loc_8448']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_86B7']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_86BF']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_86FD']
mov ['eax,', '[ebp+arg_14]']
cmp ['eax,', '[ebp+var_C]']
jle ['short', 'loc_86F9']
movzx ['eax,', '[ebp+var_111]']
test ['eax,', 'eax']
jz ['short', 'loc_86F9']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_u_strcpy_56']
add ['esp,', '8']
jmp ['short', 'loc_86FD']
xor ['eax,', 'eax']
jmp ['short', 'loc_8725']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
jmp ['short', 'loc_8725']
jmp ['short', 'loc_8722']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN34_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '268h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN33_0']
dd ['offset', '$LN28_2']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN29_1']
dd ['0FFFFFF28h,', '9Dh']
dd ['offset', '$LN30_0']
dd ['0FFFFFEC8h,', '4']
dd ['offset', '$LN31_0']
dd ['0FFFFFE84h,', '4']
dd ['offset', '$LN32_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getKeywordValuesForLocale_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '524h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_524]']
mov ['ecx,', '149h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['al,', 'ds:??_C@_00CNPNBAHC@?$AA@']
mov ['[ebp+Str2],', 'al']
push ['9Ch']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_B4],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Str2]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['[ebp+var_B4],', 'eax']
cmp ['[ebp+var_B4],', '0']
jnz ['short', 'loc_889E']
mov ['al,', 'ds:??_C@_00CNPNBAHC@?$AA@']
mov ['[ebp+var_15C],', 'al']
push ['9Ch']
push ['0']
lea ['eax,', '[ebp+var_15B]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_15C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_uloc_addLikelySubtags_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+Str2]']
push ['ecx']
lea ['edx,', '[ebp+var_15C]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_ulist_createEmptyList_56']
add ['esp,', '4']
mov ['[ebp+var_168],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_ulist_createEmptyList_56']
add ['esp,', '4']
mov ['[ebp+var_174],', 'eax']
push ['1Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_180],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_88F0']
cmp ['[ebp+var_180],', '0']
jnz ['short', 'loc_8938']
cmp ['[ebp+var_180],', '0']
jnz ['short', 'loc_8904']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_8913']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_ulist_deleteList_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ulist_deleteList_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_8EAB']
push ['1Ch']
push ['offset', '_defaultKeywordValues']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_180]']
mov ['ecx,', '[ebp+var_168]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
push ['offset', '??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_18C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_18C]']
push ['ecx']
push ['offset', '??_C@_0M@FGDPCCPL@CurrencyMap?$AA@']
mov ['edx,', '[ebp+var_18C]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
lea ['eax,', '[ebp+var_22C]']
push ['eax']
call ['_ures_initStackObject_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_2CC]']
push ['eax']
call ['_ures_initStackObject_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_36C]']
push ['eax']
call ['_ures_initStackObject_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_40C]']
push ['eax']
call ['_ures_initStackObject_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_8CB6']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
call ['_ures_hasNext_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8CB6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_22C]']
push ['ecx']
mov ['edx,', '[ebp+var_18C]']
push ['edx']
call ['_ures_getNextResource_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8A3B']
jmp ['loc_8CB6']
lea ['eax,', '[ebp+var_22C]']
push ['eax']
call ['_ures_getKey_56']
add ['esp,', '4']
mov ['[ebp+Str1],', 'eax']
lea ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_421],', 'al']
movsx ['eax,', '[ebp+var_421]']
test ['eax,', 'eax']
jnz ['short', 'loc_8A8B']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_8A8B']
jmp ['loc_89D4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_2CC]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8AC6']
jmp ['loc_8CB6']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_8CB1']
lea ['eax,', '[ebp+var_2CC]']
push ['eax']
call ['_ures_hasNext_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8CB1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_36C]']
push ['ecx']
lea ['edx,', '[ebp+var_2CC]']
push ['edx']
call ['_ures_getNextResource_56']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_36C]']
push ['eax']
call ['_ures_getType_56']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_8B29']
jmp ['short', 'loc_8AC6']
push ['60h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Str],', 'eax']
mov ['[ebp+var_43C],', '60h']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_8B5A']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_8CB1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_43C]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
push ['offset', '??_C@_02EGCJHIOB@id?$AA@']
lea ['eax,', '[ebp+var_36C]']
push ['eax']
call ['_ures_getUTF8StringByKey_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8B9C']
jmp ['loc_8CB1']
mov ['[ebp+var_445],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_40C]']
push ['ecx']
push ['offset', '??_C@_02LBCDJBAJ@to?$AA@']
lea ['edx,', '[ebp+var_36C]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8BE2']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_8BE9']
mov ['[ebp+var_445],', '1']
movsx ['eax,', '[ebp+var_421]']
test ['eax,', 'eax']
jz ['short', 'loc_8C4A']
movsx ['eax,', '[ebp+var_445]']
test ['eax,', 'eax']
jnz ['short', 'loc_8C4A']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_ulist_containsString_56']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8C4A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_ulist_addItemEndList_56']
add ['esp,', '10h']
jmp ['short', 'loc_8CAC']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_174]']
push ['edx']
call ['_ulist_containsString_56']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8C9D']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_8C9D']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_174]']
push ['edx']
call ['_ulist_addItemEndList_56']
add ['esp,', '10h']
jmp ['short', 'loc_8CAC']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['loc_8AC6']
jmp ['loc_89D4']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_8E19']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_8D1B']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_ulist_getListSize_56']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_8D16']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_uenum_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
push ['offset', '??_C@_03MBICDIME@und?$AA@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucurr_getKeywordValuesForLocale_56']
add ['esp,', '10h']
mov ['[ebp+var_180],', 'eax']
jmp ['loc_8E05']
mov ['[ebp+var_454],', '0']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ulist_resetList_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ulist_getNext_56']
add ['esp,', '4']
mov ['[ebp+var_454],', 'eax']
cmp ['[ebp+var_454],', '0']
jz ['loc_8E05']
mov ['eax,', '[ebp+var_454]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_454]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_ulist_containsString_56']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8E00']
push ['60h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_460],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_454]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_454]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
mov ['edx,', '[ebp+var_454]']
push ['edx']
mov ['eax,', '[ebp+var_460]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_460]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_ulist_addItemEndList_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8E00']
jmp ['short', 'loc_8E05']
jmp ['loc_8D34']
mov ['eax,', '[ebp+var_180]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ulist_resetList_56']
add ['esp,', '4']
jmp ['short', 'loc_8E4B']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_ulist_deleteList_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_168],', '0']
mov ['[ebp+var_180],', '0']
lea ['eax,', '[ebp+var_40C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_36C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_2CC]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_22C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_ulist_deleteList_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_180]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '524h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN42']
dd ['offset', '$LN35_0']
dd ['0FFFFFEA4h,', '9Dh']
dd ['offset', '$LN36_0']
dd ['0FFFFFDD4h,', '98h']
dd ['offset', '$LN37_0']
dd ['0FFFFFD34h,', '98h']
dd ['offset', '$LN38_0']
dd ['0FFFFFC94h,', '98h']
dd ['offset', '$LN39']
dd ['0FFFFFBF4h,', '98h']
dd ['offset', '$LN40']
dd ['0FFFFFBC4h,', '4']
dd ['offset', '$LN41']
assume ['cs:_rdata']
public ['??_C@_03MBICDIME@und?$AA@']
assume ['cs:_rdata']
public ['??_C@_0M@FGDPCCPL@CurrencyMap?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BB@CPLPEJEM@supplementalData?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucurr_getNumericCode_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['loc_9091']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
cmp ['eax,', '3']
jnz ['loc_9091']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['offset', '??_C@_0BF@JLPHACBP@currencyNumericCodes?$AA@']
push ['0']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['offset', '??_C@_07HEKEFGLC@codeMap?$AA@']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9085']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?myUCharsToChars@@YAPADPADPB_W@Z']
add ['esp,', '8']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_T_CString_toUpperCase_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_ures_getInt_56']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9085']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_2']
dd ['offset', '$LN6_4']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN7_1']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_07HEKEFGLC@codeMap?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BF@JLPHACBP@currencyNumericCodes?$AA@']
extrn ['_ulist_reset_keyword_values_iterator_56:near']
extrn ['_ulist_next_keyword_value_56:near']
extrn ['_ulist_count_keyword_values_56:near']
extrn ['_ulist_close_keyword_values_iterator_56:near']
extrn ['_uenum_unextDefault_56:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??0UObject@icu_56@@QAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:near']
extrn ['__imp_??0UObject@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1FieldPosition@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['??8Formattable@icu_56@@QBECABV01@@Z:near']
extrn ['__fltused:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:near']
extrn ['??8FieldPositionIterator@icu_56@@QBECABV01@@Z:near']
extrn ['__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:near']
extrn ['?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:near']
extrn ['??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:near']
extrn ['??1MeasureUnit@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['__purecall:near']
extrn ['??1NumberFormatFactory@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:near']
extrn ['?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:near']
extrn ['??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['__imp___wassert:near']
extrn ['__imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_strcat:near']
extrn ['_strcmp:near']
extrn ['_uloc_getVariant_56:near']
extrn ['_uloc_getCountry_56:near']
extrn ['_umtx_unlock_56:near']
extrn ['_ucln_i18n_registerCleanup_56:near']
extrn ['_umtx_lock_56:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['_memcpy:near']
extrn ['__imp__strncpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_strlen:near']
extrn ['_uhash_close_56:near']
extrn ['__imp_??1Hashtable@icu_56@@QAE@XZ:near']
extrn ['_u_terminateUChars_56:near']
extrn ['_uloc_getParent_56:near']
extrn ['_ures_close_56:near']
extrn ['_u_strcmp_56:near']
extrn ['_ures_getStringByKey_56:near']
extrn ['_ures_getByIndex_56:near']
extrn ['_ures_getByKey_56:near']
extrn ['_ures_openDirect_56:near']
extrn ['_u_strcpy_56:near']
extrn ['_u_strlen_56:near']
extrn ['_u_charsToUChars_56:near']
extrn ['_T_CString_toUpperCase_56:near']
extrn ['_uloc_getKeywordValue_56:near']
extrn ['__imp__strchr:near']
extrn ['_ures_getStringByIndex_56:near']
extrn ['_ures_getByKeyWithFallback_56:near']
extrn ['_ures_open_56:near']
extrn ['_uloc_getName_56:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_ures_getStringByKeyWithFallback_56:near']
extrn ['_uprv_free_56:near']
extrn ['__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:near']
extrn ['_u_strToUpper_56:near']
extrn ['__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:near']
extrn ['_strcpy:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp__qsort:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['??1ChoiceFormat@icu_56@@UAE@XZ:near']
extrn ['?getFormats@ChoiceFormat@icu_56@@UBEPBVUnicodeString@2@AAH@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['_uhash_get_56:near']
extrn ['_uhash_put_56:near']
extrn ['_ures_getKey_56:near']
extrn ['_ures_getSize_56:near']
extrn ['_uhash_open_56:near']
extrn ['_uhash_hashChars_56:near']
extrn ['_uhash_compareChars_56:near']
extrn ['_memcmp:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:near']
extrn ['?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z:near']
extrn ['__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:near']
extrn ['_ures_getIntVector_56:near']
extrn ['__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
extrn ['_uhash_setValueDeleter_56:near']
extrn ['_uhash_hashUChars_56:near']
extrn ['_uhash_compareUChars_56:near']
extrn ['_ures_getString_56:near']
extrn ['__allshl:near']
extrn ['__imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:near']
extrn ['__imp_??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?unescape@UnicodeString@icu_56@@QBE?AV12@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:near']
extrn ['__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:near']
extrn ['??_GUnicodeString@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EUnicodeString@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['_ulist_getNext_56:near']
extrn ['_ulist_resetList_56:near']
extrn ['_uenum_close_56:near']
extrn ['_ulist_getListSize_56:near']
extrn ['_ulist_addItemEndList_56:near']
extrn ['_ulist_containsString_56:near']
extrn ['_ures_getUTF8StringByKey_56:near']
extrn ['_ures_getType_56:near']
extrn ['_ures_getNextResource_56:near']
extrn ['_ures_hasNext_56:near']
extrn ['_ures_initStackObject_56:near']
extrn ['_ulist_deleteList_56:near']
extrn ['_ulist_createEmptyList_56:near']
extrn ['_uloc_addLikelySubtags_56:near']
extrn ['_memset:near']
extrn ['_ures_getInt_56:near']
end

endp
_resetLineNumber proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ds:_lineCount,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_bss']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_getNextToken	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_6C']
mov ['eax,', '6']
jmp ['loc_144']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getNextChar']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_97']
mov ['eax,', '6']
jmp ['loc_144']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', 'ds:_lineCount']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_DC],', 'eax']
cmp ['[ebp+var_DC],', '7Bh']
jg ['short', 'loc_DA']
cmp ['[ebp+var_DC],', '7Bh']
jz ['short', 'loc_F8']
cmp ['[ebp+var_DC],', '0FFFFFFFFh']
jz ['short', 'loc_10D']
cmp ['[ebp+var_DC],', '2Ch']
jz ['short', 'loc_106']
cmp ['[ebp+var_DC],', '3Ah']
jz ['short', 'loc_114']
jmp ['short', 'loc_11B']
cmp ['[ebp+var_DC],', '7Dh']
jz ['short', 'loc_FF']
cmp ['[ebp+var_DC],', '0FFFEh']
jz ['short', 'loc_F1']
jmp ['short', 'loc_11B']
mov ['eax,', '6']
jmp ['short', 'loc_144']
mov ['eax,', '1']
jmp ['short', 'loc_144']
mov ['eax,', '2']
jmp ['short', 'loc_144']
mov ['eax,', '3']
jmp ['short', 'loc_144']
mov ['eax,', '5']
jmp ['short', 'loc_144']
mov ['eax,', '4']
jmp ['short', 'loc_144']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getStringToken']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', 'ds:_lineCount']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_getStringToken	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '128h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_128]']
mov ['ecx,', '4Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_28],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_26],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_40],', '0']
mov ['[ebp+var_49],', '0']
mov ['[ebp+var_55],', '0']
mov ['[ebp+var_64],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1B9']
mov ['eax,', '6']
jmp ['loc_672']
mov ['[ebp+var_9],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ustr_setlen']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1E7']
mov ['eax,', '6']
jmp ['loc_672']
cmp ['[ebp+var_18],', '22h']
jnz ['loc_3A0']
movsx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jnz ['short', 'loc_226']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jle ['short', 'loc_226']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ustr_ucat']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_226']
mov ['eax,', '6']
jmp ['loc_672']
mov ['[ebp+var_9],', '1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFFFFFFh']
jnz ['short', 'loc_24D']
mov ['eax,', '5']
jmp ['loc_672']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_25F']
mov ['eax,', '6']
jmp ['loc_672']
cmp ['[ebp+var_18],', '22h']
jnz ['short', 'loc_272']
movsx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jnz ['short', 'loc_272']
jmp ['loc_39B']
cmp ['[ebp+var_18],', '5Ch']
jnz ['short', 'loc_2B9']
movsx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jnz ['short', 'loc_2B9']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_unescape']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFFFFFEh']
jnz ['short', 'loc_2A9']
mov ['eax,', '6']
jmp ['loc_672']
cmp ['[ebp+var_18],', '0Dh']
jz ['short', 'loc_2B5']
cmp ['[ebp+var_18],', '0Ah']
jnz ['short', 'loc_2B9']
mov ['[ebp+var_55],', '1']
cmp ['[ebp+var_18],', '5Ch']
jnz ['short', 'loc_2D0']
movsx ['eax,', '[ebp+var_49]']
test ['eax,', 'eax']
jnz ['short', 'loc_2D0']
mov ['[ebp+var_49],', '1']
jmp ['loc_37E']
cmp ['[ebp+var_18],', '0FFFFh']
jg ['short', 'loc_2F5']
mov ['eax,', '[ebp+var_34]']
mov ['cx,', 'word', 'ptr', '[ebp+var_18]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '2']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_32A']
mov ['eax,', '[ebp+var_18]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+2],', 'ax']
mov ['[ebp+var_40],', '2']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_34],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ustr_uscat']
add ['esp,', '10h']
mov ['[ebp+var_49],', '0']
mov ['[ebp+var_40],', '0']
cmp ['[ebp+var_18],', '0Dh']
jz ['short', 'loc_35F']
cmp ['[ebp+var_18],', '0Ah']
jnz ['short', 'loc_37E']
movsx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jnz ['short', 'loc_37A']
cmp ['[ebp+var_64],', '0Dh']
jz ['short', 'loc_37A']
mov ['eax,', 'ds:_lineCount']
add ['eax,', '1']
mov ['ds:_lineCount,', 'eax']
mov ['[ebp+var_55],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_390']
mov ['eax,', '6']
jmp ['loc_672']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_64],', 'eax']
jmp ['loc_22A']
jmp ['loc_61E']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jle ['short', 'loc_3CD']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ustr_ucat']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3CD']
mov ['eax,', '6']
jmp ['loc_672']
movsx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jz ['short', 'loc_40A']
call ['_getShowWarning']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3F4']
push ['offset', '??_C@_0CD@JGAINNDO@Mixing?5quoted?5and?5unquoted?5strin@']
mov ['eax,', 'ds:_lineCount']
push ['eax']
call ['_warning']
add ['esp,', '8']
call ['_isStrict']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_40A']
mov ['eax,', '6']
jmp ['loc_672']
mov ['[ebp+var_9],', '0']
cmp ['[ebp+var_18],', '5Ch']
jnz ['short', 'loc_43D']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_unescape']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFFFFFFh']
jnz ['short', 'loc_43D']
mov ['eax,', '6']
jmp ['loc_672']
cmp ['[ebp+var_18],', '0FFFFh']
jg ['short', 'loc_462']
mov ['eax,', '[ebp+var_34]']
mov ['cx,', 'word', 'ptr', '[ebp+var_18]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '2']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_497']
mov ['eax,', '[ebp+var_18]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+2],', 'ax']
mov ['[ebp+var_40],', '2']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_34],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ustr_uscat']
add ['esp,', '10h']
mov ['[ebp+var_40],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_4CE']
mov ['eax,', '6']
jmp ['loc_672']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getNextChar']
add ['esp,', '10h']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFFFFFFh']
jnz ['short', 'loc_502']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ucbuf_ungetc']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['loc_672']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_511']
xor ['eax,', 'eax']
jmp ['loc_672']
cmp ['[ebp+var_18],', '22h']
jz ['short', 'loc_52F']
cmp ['[ebp+var_18],', '7Bh']
jz ['short', 'loc_52F']
cmp ['[ebp+var_18],', '7Dh']
jz ['short', 'loc_52F']
cmp ['[ebp+var_18],', '2Ch']
jz ['short', 'loc_52F']
cmp ['[ebp+var_18],', '3Ah']
jnz ['short', 'loc_544']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ucbuf_ungetc']
add ['esp,', '8']
jmp ['loc_61E']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_isWhitespace']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_55C']
jmp ['loc_61E']
cmp ['[ebp+var_18],', '5Ch']
jnz ['short', 'loc_58B']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_unescape']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFFFFFEh']
jnz ['short', 'loc_58B']
mov ['eax,', '6']
jmp ['loc_672']
cmp ['[ebp+var_18],', '0FFFFh']
jg ['short', 'loc_5B0']
mov ['eax,', '[ebp+var_34]']
mov ['cx,', 'word', 'ptr', '[ebp+var_18]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '2']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_5E5']
mov ['eax,', '[ebp+var_18]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+2],', 'ax']
mov ['[ebp+var_40],', '2']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '4']
mov ['[ebp+var_34],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ustr_uscat']
add ['esp,', '10h']
mov ['[ebp+var_40],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_619']
mov ['eax,', '6']
jmp ['short', 'loc_672']
jmp ['loc_4CE']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getNextChar']
add ['esp,', '10h']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_641']
xor ['eax,', 'eax']
jmp ['short', 'loc_672']
cmp ['[ebp+var_18],', '7Bh']
jz ['short', 'loc_659']
cmp ['[ebp+var_18],', '7Dh']
jz ['short', 'loc_659']
cmp ['[ebp+var_18],', '2Ch']
jz ['short', 'loc_659']
cmp ['[ebp+var_18],', '3Ah']
jnz ['short', 'loc_66D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ucbuf_ungetc']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['short', 'loc_672']
jmp ['loc_1E7']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN55']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '128h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN54']
dd ['offset', '$LN53']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CD@JGAINNDO@Mixing?5quoted?5and?5unquoted?5strin@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_getNextChar	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_712']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_81F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jnz ['short', 'loc_733']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_81F']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_750']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_isWhitespace']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_750']
jmp ['short', 'loc_712']
cmp ['[ebp+var_8],', '2Fh']
jz ['short', 'loc_75E']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_81F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jnz ['short', 'loc_77F']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_81F']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_DC],', 'eax']
cmp ['[ebp+var_DC],', '2Ah']
jz ['short', 'loc_7B0']
cmp ['[ebp+var_DC],', '2Fh']
jz ['short', 'loc_79C']
jmp ['short', 'loc_803']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_seekUntilNewline']
add ['esp,', '0Ch']
jmp ['short', 'loc_81A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '2Ah']
jnz ['short', 'loc_7DF']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_seekUntilEndOfComment']
add ['esp,', '0Ch']
jmp ['short', 'loc_801']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ucbuf_ungetc']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_seekUntilEndOfComment']
add ['esp,', '0Ch']
jmp ['short', 'loc_81A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ucbuf_ungetc']
add ['esp,', '8']
mov ['eax,', '2Fh']
jmp ['short', 'loc_81F']
jmp ['loc_712']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_seekUntilNewline proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_85C']
jmp ['short', 'loc_8AA']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_889']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ustr_u32cat']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_isNewline']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8AA']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jz ['short', 'loc_8AA']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_85C']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_seekUntilEndOfComment proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_8EB']
jmp ['loc_98D']
mov ['eax,', 'ds:_lineCount']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '2Ah']
jnz ['short', 'loc_939']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '2Fh']
jz ['short', 'loc_937']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ucbuf_ungetc']
add ['esp,', '8']
jmp ['short', 'loc_939']
jmp ['short', 'loc_96D']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_953']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ustr_u32cat']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_isNewline']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jz ['short', 'loc_96D']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8F3']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jnz ['short', 'loc_98D']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '3']
push ['offset', '??_C@_0BO@EGHKLCKL@unterminated?5comment?5detected?$AA@']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_error']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BO@EGHKLCKL@unterminated?5comment?5detected?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_unescape	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_9EF']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_A0D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['5Ch']
call ['_ucbuf_ungetc']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_getcx32']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_isWhitespace	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '20h']
jg ['short', 'loc_A7A']
cmp ['[ebp+var_C4],', '20h']
jz ['short', 'loc_AA1']
cmp ['[ebp+var_C4],', '9']
jz ['short', 'loc_AA1']
cmp ['[ebp+var_C4],', '0Ah']
jz ['short', 'loc_A94']
cmp ['[ebp+var_C4],', '0Dh']
jz ['short', 'loc_AA1']
jmp ['short', 'loc_AA5']
cmp ['[ebp+var_C4],', '2029h']
jz ['short', 'loc_A94']
cmp ['[ebp+var_C4],', '0FEFFh']
jz ['short', 'loc_AA1']
jmp ['short', 'loc_AA5']
mov ['eax,', 'ds:_lineCount']
add ['eax,', '1']
mov ['ds:_lineCount,', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_AA7']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_isNewline	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0Ah']
jz ['short', 'loc_AF7']
cmp ['[ebp+var_C4],', '0Dh']
jz ['short', 'loc_B04']
cmp ['[ebp+var_C4],', '2029h']
jz ['short', 'loc_AF7']
jmp ['short', 'loc_B08']
mov ['eax,', 'ds:_lineCount']
add ['eax,', '1']
mov ['ds:_lineCount,', 'eax']
mov ['al,', '1']
jmp ['short', 'loc_B0A']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
extrn ['_ucbuf_ungetc:near']
extrn ['_isStrict:near']
extrn ['_warning:near']
extrn ['_getShowWarning:near']
extrn ['_ustr_uscat:near']
extrn ['_ucbuf_getc:near']
extrn ['_ustr_ucat:near']
extrn ['_ustr_setlen:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_ustr_u32cat:near']
extrn ['_error:near']
extrn ['_ucbuf_getcx32:near']
end

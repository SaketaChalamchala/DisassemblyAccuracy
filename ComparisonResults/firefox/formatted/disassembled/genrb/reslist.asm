endp
_uprv_isInvariantUnicodeString proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_isInvariantUString_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_setIncludeCopyright proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['al,', '[ebp+arg_0]']
mov ['ds:_gIncludeCopyright,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_getIncludeCopyright proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['al,', 'ds:_gIncludeCopyright']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_setFormatVersion proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['_gIsDefaultFormatVersion,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['_gFormatVersion,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_getFormatVersion proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '_gFormatVersion']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_setUsePoolBundle proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['al,', '[ebp+arg_0]']
mov ['ds:_gUsePoolBundle,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_res_none	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '_kNoResource']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0SResource@@QAE@XZ proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+4],', '0FFh']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '20h']
push ['eax']
call ['_ustr_init']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4SResource@@6B@']
public ['??_7SResource@@6B@']
dd ['offset', '?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@SResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4SResource@@6B@']
dd ['offset', '??_R0?AUSResource@@@8']
dd ['offset', '??_R3SResource@@8']
assume ['cs:_data']
public ['??_R0?AUSResource@@@8']
db ['3', 'dup(0)']
assume ['cs:_rdata$r']
public ['??_R3SResource@@8']
dd ['0']
dd ['1']
dd ['offset', '??_R2SResource@@8']
assume ['cs:_rdata$r']
public ['??_R2SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SResource@@8']
align ['10h']
db ['0FFh']
align ['8']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3SResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GSResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_34F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_8]']
mov ['[eax+4],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3D6']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_3E0']
mov ['[ebp+var_D0],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_D0]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '20h']
push ['eax']
call ['_ustr_init']
add ['esp,', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_436']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '20h']
push ['edx']
call ['_ustr_cpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1SResource@@UAE@XZ proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SResource@@6B@']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '20h']
push ['eax']
call ['_ustr_deinit']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1ContainerResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1ContainerResource@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ContainerResource@@6B@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_55F']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'ecx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_54D']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_557']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4FB']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1SResource@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1ContainerResource@@UAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__ehhandler$??1ContainerResource@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1ContainerResource@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ContainerResource@@6B@']
public ['??_7ContainerResource@@6B@']
dd ['offset', '?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@SResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1ContainerResource@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1ContainerResource@@UAE@XZ']
dd ['4', 'dup(0)']
db ['2', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4ContainerResource@@6B@']
dd ['offset', '??_R0?AVContainerResource@@@8']
dd ['offset', '??_R3ContainerResource@@8']
assume ['cs:_data']
public ['??_R0?AVContainerResource@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3ContainerResource@@8']
dd ['2']
dd ['offset', '??_R2ContainerResource@@8']
assume ['cs:_rdata$r']
public ['??_R2ContainerResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ContainerResource@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3ContainerResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GContainerResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ContainerResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6A7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1TableResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TableResource@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1ContainerResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4TableResource@@6B@']
public ['??_7TableResource@@6B@']
dd ['offset', '?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@TableResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4TableResource@@6B@']
dd ['offset', '??_R0?AVTableResource@@@8']
dd ['offset', '??_R3TableResource@@8']
assume ['cs:_data']
public ['??_R0?AVTableResource@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3TableResource@@8']
dd ['3']
dd ['offset', '??_R2TableResource@@8']
assume ['cs:_rdata$r']
public ['??_R2TableResource@@8']
dd ['offset', '??_R1A@?0A@EA@ContainerResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TableResource@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3TableResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GTableResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1TableResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7CB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_82B']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_82B']
cmp ['[ebp+arg_0],', 'offset', '_kNoResource']
jnz ['short', 'loc_830']
jmp ['loc_964']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jnz ['short', 'loc_869']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
jmp ['loc_964']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+10h]']
mov ['[ebp+Str2],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+var_20],', '0']
jz ['loc_951']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+var_20]']
add ['edx,', '[eax+10h]']
mov ['[ebp+Str1],', 'edx']
cmp ['_gFormatVersion,', '1']
jz ['short', 'loc_8B9']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8CE']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_8E1']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jge ['short', 'loc_8F8']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_94C']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_925']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_90F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+30h],', 'ecx']
jmp ['short', 'loc_918']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+1Ch],', 'ecx']
jmp ['short', 'loc_964']
jmp ['short', 'loc_94C']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['offset', '??_C@_0DH@JMPKIDDH@duplicate?5key?5?8?$CFs?8?5in?5table?0?5fir@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_error']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['short', 'loc_964']
jmp ['loc_88B']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DH@JMPKIDDH@duplicate?5key?5?8?$CFs?8?5in?5table?0?5fir@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1ArrayResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ArrayResource@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1ContainerResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4ArrayResource@@6B@']
public ['??_7ArrayResource@@6B@']
dd ['offset', '?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@ArrayResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4ArrayResource@@6B@']
dd ['offset', '??_R0?AVArrayResource@@@8']
dd ['offset', '??_R3ArrayResource@@8']
assume ['cs:_data']
public ['??_R0?AVArrayResource@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3ArrayResource@@8']
dd ['3']
dd ['offset', '??_R2ArrayResource@@8']
assume ['cs:_rdata$r']
public ['??_R2ArrayResource@@8']
dd ['offset', '??_R1A@?0A@EA@ContainerResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ArrayResource@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3ArrayResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GArrayResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ArrayResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AEB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?add@ArrayResource@@QAEXPAUSResource@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B6E']
cmp ['[ebp+arg_0],', 'offset', '_kNoResource']
jz ['short', 'loc_B6E']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jnz ['short', 'loc_B4A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+30h],', 'ecx']
jmp ['short', 'loc_B56']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+34h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1PseudoListResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PseudoListResource@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1ContainerResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4PseudoListResource@@6B@']
public ['??_7PseudoListResource@@6B@']
dd ['offset', '?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@SResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4PseudoListResource@@6B@']
dd ['offset', '??_R0?AVPseudoListResource@@@8']
dd ['offset', '??_R3PseudoListResource@@8']
assume ['cs:_data']
public ['??_R0?AVPseudoListResource@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3PseudoListResource@@8']
dd ['3']
dd ['offset', '??_R2PseudoListResource@@8']
assume ['cs:_rdata$r']
public ['??_R2PseudoListResource@@8']
dd ['offset', '??_R1A@?0A@EA@ContainerResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@PseudoListResource@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3PseudoListResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GPseudoListResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1PseudoListResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C8B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?add@PseudoListResource@@QAEXPAUSResource@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_CFA']
cmp ['[ebp+arg_0],', 'offset', '_kNoResource']
jz ['short', 'loc_CFA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
movzx ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringBaseResource@@6B@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_DB1']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_DB1']
movsx ['eax,', '[ebp+arg_8]']
shl ['eax,', '1Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['short', 'loc_E1D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E1D']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_E1D']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4StringBaseResource@@6B@']
public ['??_7StringBaseResource@@6B@']
dd ['offset', '?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@StringBaseResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4StringBaseResource@@6B@']
dd ['offset', '??_R0?AVStringBaseResource@@@8']
dd ['offset', '??_R3StringBaseResource@@8']
assume ['cs:_data']
public ['??_R0?AVStringBaseResource@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3StringBaseResource@@8']
dd ['2']
dd ['offset', '??_R2StringBaseResource@@8']
assume ['cs:_rdata$r']
public ['??_R2StringBaseResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@StringBaseResource@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3StringBaseResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GStringBaseResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringBaseResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_FAB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringBaseResource@@6B@']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1084']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_1084']
movsx ['eax,', '[ebp+arg_4]']
shl ['eax,', '1Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['short', 'loc_10D3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_10D3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_10D3']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringBaseResource@@6B@']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_1227']
mov ['eax,', 'ds:?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BA@GMKHALLP@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1269']
mov ['ecx,', 'ds:?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1CG@LGPKKOGO@?$AA?$CB?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1CG@LGPKKOGO@?$AA?$CB?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<!fString.isBogus()>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BA@GMKHALLP@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<len', '>']
dw ['3Eh']
unicode ['0,', '<', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\tools\\genrb\\reslist.cpp>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1StringBaseResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1StringBaseResource@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringBaseResource@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1SResource@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1StringBaseResource@@UAE@XZ$0	proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__ehhandler$??1StringBaseResource@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1StringBaseResource@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1StringBaseResource@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1StringBaseResource@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1StringResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringResource@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringBaseResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4StringResource@@6B@']
public ['??_7StringResource@@6B@']
dd ['offset', '?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@StringBaseResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4StringResource@@6B@']
dd ['offset', '??_R0?AVStringResource@@@8']
dd ['offset', '??_R3StringResource@@8']
assume ['cs:_data']
public ['??_R0?AVStringResource@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3StringResource@@8']
dd ['3']
dd ['offset', '??_R2StringResource@@8']
assume ['cs:_rdata$r']
public ['??_R2StringResource@@8']
dd ['offset', '??_R1A@?0A@EA@StringBaseResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@StringResource@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3StringResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GStringResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_15A3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1AliasResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7AliasResource@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringBaseResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4AliasResource@@6B@']
public ['??_7AliasResource@@6B@']
dd ['offset', '?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@StringBaseResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4AliasResource@@6B@']
dd ['offset', '??_R0?AVAliasResource@@@8']
dd ['offset', '??_R3AliasResource@@8']
assume ['cs:_data']
public ['??_R0?AVAliasResource@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3AliasResource@@8']
dd ['3']
dd ['offset', '??_R2AliasResource@@8']
assume ['cs:_rdata$r']
public ['??_R2AliasResource@@8']
dd ['offset', '??_R1A@?0A@EA@StringBaseResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@AliasResource@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3AliasResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GAliasResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1AliasResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_16C7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['7']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IntResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFFFFh']
or ['eax,', '70000000h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4IntResource@@6B@']
public ['??_7IntResource@@6B@']
dd ['offset', '?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@SResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_rdata$r']
public ['??_R4IntResource@@6B@']
dd ['offset', '??_R0?AVIntResource@@@8']
dd ['offset', '??_R3IntResource@@8']
assume ['cs:_data']
public ['??_R0?AVIntResource@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3IntResource@@8']
dd ['2']
dd ['offset', '??_R2IntResource@@8']
assume ['cs:_rdata$r']
public ['??_R2IntResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@IntResource@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3IntResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GIntResource@@UAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1IntResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1823']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1IntResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IntResource@@6B@']
mov ['ecx,', '[ebp+var_8]']
call ['??1SResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0Eh']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IntVectorResource@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
push ['2000h']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_E0]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jnz ['short', 'loc_192B']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__ehhandler$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4IntVectorResource@@6B@']
public ['??_7IntVectorResource@@6B@']
dd ['offset', '?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@IntVectorResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4IntVectorResource@@6B@']
dd ['offset', '??_R0?AVIntVectorResource@@@8']
dd ['offset', '??_R3IntVectorResource@@8']
assume ['cs:_data']
public ['??_R0?AVIntVectorResource@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3IntVectorResource@@8']
dd ['2']
dd ['offset', '??_R2IntVectorResource@@8']
assume ['cs:_rdata$r']
public ['??_R2IntVectorResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@IntVectorResource@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3IntVectorResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GIntVectorResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1IntVectorResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1A6F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1IntVectorResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IntVectorResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
call ['??1SResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1B45']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BinaryResource@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1BFF']
jmp ['loc_1CDC']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1C63']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C63']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_EC]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
jnz ['short', 'loc_1C50']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_1CDC']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_1CC2']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_E0]']
mov ['[ecx+30h],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jnz ['short', 'loc_1C9B']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_1CDC']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_1CDC']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_1CDC']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '10000000h']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1SResource@@UAE@XZ']
endp
__ehhandler$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4BinaryResource@@6B@']
public ['??_7BinaryResource@@6B@']
dd ['offset', '?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['offset', '?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z']
dd ['offset', '?handlePreWrite@BinaryResource@@UAEXPAI@Z']
dd ['offset', '?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4BinaryResource@@6B@']
dd ['offset', '??_R0?AVBinaryResource@@@8']
dd ['offset', '??_R3BinaryResource@@8']
assume ['cs:_data']
public ['??_R0?AVBinaryResource@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3BinaryResource@@8']
dd ['2']
dd ['offset', '??_R2BinaryResource@@8']
assume ['cs:_rdata$r']
public ['??_R2BinaryResource@@8']
dd ['offset', '??_R1A@?0A@EA@SResource@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BinaryResource@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '_kNoResource+1Ch']
dd ['offset', '??_R3BinaryResource@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??_GBinaryResource@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1BinaryResource@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1E1F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1BinaryResource@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BinaryResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
push ['edx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
call ['??1SResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+6Ch],', '0']
jz ['short', 'loc_1F0A']
mov ['ecx,', 'ds:?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BM@MFHCCFIL@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_uhash_get_56']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+6Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+6Ch],', '0']
jz ['loc_1FB8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
mov ['edx,', '[ecx+74h]']
add ['edx,', '1']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
mov ['edx,', '[ebp+var_E8]']
mov ['[ecx+74h],', 'edx']
cmp ['[ebp+var_E8],', '1']
jnz ['short', 'loc_1FB3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jnz ['short', 'loc_1F8A']
mov ['eax,', 'ds:?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '6']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1CA@NKBACKML@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAW?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
mov ['edx,', '[ecx+8]']
and ['edx,', '0FFFFFFFh']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+78h]']
jl ['short', 'loc_1FB3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+78h],', 'eax']
jmp ['loc_2089']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+74h],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['loc_2089']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '28h']
jg ['short', 'loc_2044']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_??AUnicodeString@icu_56@@QBE_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ax']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jz ['short', 'loc_2044']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jge ['short', 'loc_2044']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7Ch],', '0']
jmp ['short', 'loc_206F']
cmp ['[ebp+var_20],', '3EEh']
jg ['short', 'loc_2056']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7Ch],', '1']
jmp ['short', 'loc_206F']
cmp ['[ebp+var_20],', '0FFFFFh']
jg ['short', 'loc_2068']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7Ch],', '2']
jmp ['short', 'loc_206F']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7Ch],', '3']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+7Ch]']
add ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+70h]']
lea ['ecx,', '[ecx+eax+1]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+70h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1CA@NKBACKML@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAW?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AA@']
unicode ['0,', '<fSame->']
dw ['3Eh']
unicode ['0,', '<fWritten>,0']
assume ['cs:_rdata']
public ['??_C@_1BM@MFHCCFIL@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@']
unicode ['0,', '<fSame', '==', 'NULL>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringBaseResource@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2163']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_217F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_215A']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_21D2']
jmp ['short', 'loc_21FF']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
jz ['short', 'loc_21DD']
jmp ['short', 'loc_21FF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?makeRes16@SRBRoot@@QBEHI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2274']
xor ['eax,', 'eax']
jmp ['loc_22F9']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '1Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_14],', '6']
jnz ['short', 'loc_22F6']
cmp ['[ebp+var_20],', '0']
jg ['short', 'loc_22B9']
mov ['eax,', 'ds:?__LINE__Var@?1??makeRes16@SRBRoot@@QBEHI@Z@4JA']
add ['eax,', '7']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BG@HKAMBNGK@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+78h]']
jge ['short', 'loc_22D6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+7Ch]']
jge ['short', 'loc_22D4']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_22F9']
jmp ['short', 'loc_22F6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[eax+78h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+7Ch]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0FFFFh']
jg ['short', 'loc_22F6']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_22F9']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BG@HKAMBNGK@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<offset', '>']
dw ['3Eh']
unicode ['0,', '<', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??makeRes16@SRBRoot@@QBEHI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?mapKey@SRBRoot@@QBEHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2366']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_23F2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '[eax+28h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
cmp ['[ebp+var_2C],', 'eax']
jge ['short', 'loc_23B5']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_38]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+eax*8]']
jge ['short', 'loc_23AD']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_23B3']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_237E']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+eax*8]']
jz ['short', 'loc_23E8']
mov ['eax,', 'ds:?__LINE__Var@?1??mapKey@SRBRoot@@QBEHH@Z@4JA']
add ['eax,', '12h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1DI@LNKBBKFL@?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AAa?$AAp?$AA?$FL?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$FN?$AA?4?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ecx+eax*8+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
public ['??_C@_1DI@LNKBBKFL@?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AAa?$AAp?$AA?$FL?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$FN?$AA?4?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?$AA@']
unicode ['0,', '<oldpos', '==', 'map[start].oldpos>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??mapKey@SRBRoot@@QBEHH@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+6Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_24C7']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
jz ['short', 'loc_248A']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jnz ['short', 'loc_24AF']
mov ['eax,', 'ds:?__LINE__Var@?1??handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z@4JA']
add ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1FE@KAHDBKBH@?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+5]']
mov ['[eax+5],', 'dl']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1FE@KAHDBKBH@?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9@']
unicode ['0,', '<same->']
dw ['3Eh']
unicode ['0,', '<fRes', '!=', 'RES_BOGUS', '&&', 'same->']
dw ['3Eh']
unicode ['0,', '<fWritten>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_256F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2594']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2566']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_25FF']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_25FF']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '80000000h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['loc_269E']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_261A']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_263A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['?write16@SResource@@QAEXPAUSRBRoot@@@Z']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2611']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0FFFFh']
ja ['short', 'loc_269E']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_269E']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_269E']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
or ['eax,', '90000000h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+2Ch]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_26FF']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_26FF']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '20000000h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['loc_282C']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_2721']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_274D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?write16@SResource@@QAEXPAUSRBRoot@@@Z']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '[eax+14h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_20]']
or ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_2718']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+2Ch]']
cmp ['edx,', '[ecx+0Ch]']
jbe ['short', 'loc_2767']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0FFFFh']
ja ['loc_2825']
cmp ['[ebp+var_14],', '0']
jl ['loc_2825']
cmp ['[ebp+var_20],', '0']
jl ['loc_281C']
cmp ['_gFormatVersion,', '1']
jle ['loc_281C']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
or ['eax,', '50000000h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+2Ch]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_27E9']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_280E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_27E0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z']
jmp ['short', 'loc_2823']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '2']
jmp ['short', 'loc_282C']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '20000000h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?write16@SResource@@QAEXPAUSRBRoot@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jl ['short', 'loc_2920']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?mapKey@SRBRoot@@QBEHH@Z']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jl ['short', 'loc_28EA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+2Ch]']
jge ['short', 'loc_28E8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+14h],', 'edx']
jmp ['short', 'loc_2920']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '7FFFFFFFh']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0FFFFh']
jg ['short', 'loc_2920']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0FFFFh']
jg ['short', 'loc_2920']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
jnz ['short', 'loc_2943']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?makeRes16@SRBRoot@@QBEHI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreWrite@StringBaseResource@@UAEXPAI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4]']
shl ['ecx,', '1Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
shr ['eax,', '2']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
lea ['eax,', '[edx+eax*2+6]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreWrite@IntVectorResource@@UAEXPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_2A50']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_2A50']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0E0000000h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['short', 'loc_2A78']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shr ['ecx,', '2']
or ['ecx,', '0E0000000h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*4+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreWrite@BinaryResource@@UAEXPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
test ['edx,', 'edx']
jz ['short', 'loc_2AEC']
mov ['eax,', '[ebp+var_20]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
mov ['eax,', '10h']
sub ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shr ['ecx,', '2']
or ['ecx,', '10000000h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?preWriteAllRes@ContainerResource@@IAEXPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2B57']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2B6B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?preWrite@SResource@@QAEXPAI@Z']
jmp ['short', 'loc_2B4E']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreWrite@ArrayResource@@UAEXPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?preWriteAllRes@ContainerResource@@IAEXPAI@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shr ['ecx,', '2']
or ['ecx,', '80000000h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*4+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreWrite@TableResource@@UAEXPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?preWriteAllRes@ContainerResource@@IAEXPAI@Z']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+34h]']
cmp ['ecx,', '2']
jnz ['short', 'loc_2C5C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shr ['ecx,', '2']
or ['ecx,', '20000000h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
imul ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax+2]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_2C84']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shr ['ecx,', '2']
or ['ecx,', '40000000h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*8+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?preWrite@SResource@@QAEXPAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
jz ['short', 'loc_2CCA']
jmp ['short', 'loc_2CFF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?calcPadding@@YAEI@Z']
add ['esp,', '4']
movzx ['edx,', 'al']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?calcPadding@@YAEI@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['ecx,', '4']
div ['ecx']
test ['edx,', 'edx']
jz ['short', 'loc_2D61']
mov ['eax,', '[ebp+arg_0]']
xor ['edx,', 'edx']
mov ['ecx,', '4']
div ['ecx']
mov ['eax,', '4']
sub ['eax,', 'edx']
mov ['[ebp+var_C4],', 'eax']
jmp ['short', 'loc_2D6B']
mov ['[ebp+var_C4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handlePreWrite@SResource@@UAEXPAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
jnz ['short', 'loc_2DC5']
mov ['ecx,', 'ds:?__LINE__Var@?1??handlePreWrite@SResource@@UAEXPAI@Z@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@']
unicode ['0,', '<FALSE>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??handlePreWrite@SResource@@UAEXPAI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getBuffer@StringBaseResource@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_writeUString']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*2+6]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@StringBaseResource@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_2F07']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_2F1F']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_20]']
call ['?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z']
jmp ['short', 'loc_2EF5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+2Ch]']
jz ['short', 'loc_2F50']
mov ['edx,', 'ds:?__LINE__Var@?1??writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z@4JA']
add ['edx,', '5']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BI@KFIEGPAA@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BI@KFIEGPAA@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@']
unicode ['0,', '<i', '==', 'fCount>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2FBB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2FD6']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
jmp ['short', 'loc_2FB2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_30C4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+2Ch]']
jnb ['short', 'loc_30EA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
jmp ['short', 'loc_30BB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*4+4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
test ['edx,', 'edx']
jz ['short', 'loc_318C']
mov ['eax,', '[ebp+var_20]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
mov ['eax,', '10h']
sub ['eax,', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_writePadding']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jbe ['short', 'loc_31C2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax+4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+34h]']
cmp ['ecx,', '2']
jnz ['loc_32AF']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write16']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_3257']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3273']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write16']
add ['esp,', '8']
jmp ['short', 'loc_324E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*2+2]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '1']
jnz ['short', 'loc_32AD']
push ['2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_writePadding']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_3305']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_32D6']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_32F1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
jmp ['short', 'loc_32CD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*4+4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_338B']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
jnz ['short', 'loc_3389']
mov ['ecx,', 'ds:?__LINE__Var@?1??write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z@4JA']
add ['ecx,', '2']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1CE@CHJMEHIA@?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_33E8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?calcPadding@@YAEI@Z']
add ['esp,', '4']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jle ['short', 'loc_33E1']
movzx ['eax,', '[ebp+var_11]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_writePadding']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_11]']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1CE@CHJMEHIA@?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?$AA@']
unicode ['0,', '<fRes', '!=', 'RES_BOGUS>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
jnz ['short', 'loc_3475']
mov ['ecx,', 'ds:?__LINE__Var@?1??handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z@4JA']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '5FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_608]']
mov ['ecx,', '17Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
and ['ecx,', '3']
jz ['short', 'loc_351B']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['byte', 'ptr', '[ecx+eax],', '0AAh']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+20h],', 'edx']
jmp ['short', 'loc_34EF']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+20h]']
jge ['short', 'loc_354F']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+20h],', '10000h']
jg ['short', 'loc_3543']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+2Ch],', 'edx']
jmp ['short', 'loc_354D']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+2Ch],', '10000h']
jmp ['short', 'loc_3559']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
cmp ['_gFormatVersion,', '1']
jle ['loc_3649']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['offset', '?string_comp@@YACTUElement@@0@Z']
push ['offset', '?string_comp@@YACTUElement@@0@Z']
push ['offset', '?string_hash@@YAHTUElement@@@Z']
call ['_uhash_open_56']
add ['esp,', '10h']
mov ['[ebp+var_484],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_362E']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+74h],', '0']
jz ['loc_362E']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+74h]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_362E']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_490],', 'eax']
jmp ['short', 'loc_35DC']
mov ['eax,', '[ebp+var_490]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_490],', 'ecx']
cmp ['[ebp+var_490],', '0']
jz ['short', 'loc_362E']
mov ['eax,', '[ebp+var_490]']
mov ['[ebp+var_49C],', 'eax']
mov ['eax,', '[ebp+var_49C]']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['eax,', '[ebp+var_49C]']
mov ['dword', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_49C]']
push ['ecx']
mov ['edx,', '[ebp+var_49C]']
push ['edx']
mov ['eax,', '[ebp+var_484]']
push ['eax']
call ['_uhash_put_56']
add ['esp,', '10h']
jmp ['short', 'loc_35CD']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_484]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
call ['?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_3653']
mov ['[ebp+var_484],', '0']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_367B']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+70h],', '0']
jle ['short', 'loc_367B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_484]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_484]']
push ['eax']
call ['_uhash_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_36A4']
jmp ['loc_3F8E']
mov ['eax,', '_gFormatVersion']
mov ['[ebp+var_4A8],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jz ['loc_3746']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+78h]']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+80h]']
mov ['[ebp+var_4B4],', 'ecx']
mov ['eax,', '[ebp+var_4B4]']
sub ['eax,', '1']
cmp ['eax,', '0FFFFFFFh']
jle ['short', 'loc_36EF']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_3F8E']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+78h],', '10000h']
jge ['short', 'loc_3715']
cmp ['[ebp+var_4B4],', '10000h']
jg ['short', 'loc_3715']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+78h]']
mov ['[eax+7Ch],', 'edx']
jmp ['short', 'loc_3744']
mov ['eax,', '[ebp+var_18]']
mov ['eax,', '[eax+78h]']
cdq
push ['0']
push ['0FFFFh']
push ['edx']
push ['eax']
call ['__allmul']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_4B4]']
cdq
push ['edx']
push ['eax']
push ['esi']
push ['ecx']
call ['__alldiv']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+7Ch],', 'eax']
jmp ['short', 'loc_376F']
movsx ['eax,', '_gIsDefaultFormatVersion']
test ['eax,', 'eax']
jz ['short', 'loc_376F']
cmp ['[ebp+var_4A8],', '3']
jnz ['short', 'loc_376F']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+12h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_376F']
mov ['[ebp+var_4A8],', '2']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx]']
call ['?write16@SResource@@QAEXPAUSRBRoot@@@Z']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_37A7']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_3F8E']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
and ['eax,', '1']
jz ['short', 'loc_37DB']
mov ['esi,', 'esp']
push ['0AAAAh']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_30],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx]']
call ['?preWrite@SResource@@QAEXPAI@Z']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+Dest],', '0']
jz ['short', 'loc_383B']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_383B']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '0']
cmp ['[ebp+Dest],', '0']
jz ['loc_3A2A']
mov ['[ebp+var_4C0],', '0']
mov ['[ebp+Count],', '0']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_38B4']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Count],', 'eax']
mov ['eax,', '[ebp+Count]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_3885']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+Count],', 'eax']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+Count]']
mov ['[ebp+arg_C],', 'eax']
jz ['loc_3A2A']
mov ['eax,', '[ebp+var_4C0]']
add ['eax,', '[ebp+Count]']
mov ['[ebp+var_4C0],', 'eax']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '[ebp+var_4C0]']
mov ['byte', 'ptr', '[eax],', '5Ch']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+arg_C],', 'eax']
jz ['loc_3A2A']
mov ['eax,', '[ebp+var_4C0]']
add ['eax,', '1']
mov ['[ebp+var_4C0],', 'eax']
cmp ['[ebp+Source],', '0']
jz ['short', 'loc_3951']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
add ['ecx,', '[ebp+var_4C0]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_4C0]']
mov ['[ebp+var_4C0],', 'eax']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '[ebp+var_4C0]']
mov ['byte', 'ptr', '[eax],', '5Fh']
mov ['eax,', '[ebp+var_4C0]']
add ['eax,', '1']
mov ['[ebp+var_4C0],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Count],', 'eax']
mov ['eax,', '[ebp+Count]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_397A']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+Count],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+Count]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+Dest]']
add ['edx,', '[ebp+var_4C0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+Count]']
mov ['[ebp+arg_C],', 'eax']
jz ['short', 'loc_3A2A']
mov ['eax,', '[ebp+var_4C0]']
add ['eax,', '[ebp+Count]']
mov ['[ebp+var_4C0],', 'eax']
mov ['[ebp+Count],', '5']
mov ['eax,', '[ebp+Count]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_39F3']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+Count],', 'eax']
push ['1']
push ['offset', '??_C@_04MMBENCGO@?4res?$AA@']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Count]']
push ['eax']
push ['offset', '??_C@_04MMBENCGO@?4res?$AA@']
mov ['ecx,', '[ebp+Dest]']
add ['ecx,', '[ebp+var_4C0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Source],', '0']
jz ['short', 'loc_3A6F']
mov ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+var_450]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
push ['offset', '??_C@_01IDAFKMJL@_?$AA@']
lea ['eax,', '[ebp+var_450]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['edx,', '[ebp+var_450]']
push ['edx']
call ['_strcat']
add ['esp,', '8']
jmp ['short', 'loc_3A85']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['edx,', '[ebp+var_450]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
push ['1']
mov ['eax,', '[ebp+var_4A8]']
lea ['ecx,', '_gFormatVersions[eax*4]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['edx,', '[ebp+var_4A8]']
lea ['eax,', '_gFormatVersions[edx*4]']
push ['eax']
push ['offset', 'off_64']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movsx ['ecx,', 'ds:_gIncludeCopyright']
sub ['ecx,', '1']
neg ['ecx']
sbb ['ecx,', 'ecx']
not ['ecx']
and ['ecx,', 'offset', '??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
push ['ecx']
push ['offset', '_dataInfo']
lea ['edx,', '[ebp+var_450]']
push ['edx']
push ['offset', '??_C@_03FFIDGLAK@res?$AA@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_udata_create']
add ['esp,', '18h']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3B0F']
jmp ['loc_3F8E']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_udata_write32']
add ['esp,', '8']
push ['20h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+Dst],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
sar ['ecx,', '2']
mov ['[ebp+var_474],', 'ecx']
mov ['eax,', '[ebp+var_3C]']
shr ['eax,', '2']
mov ['[ebp+var_470],', 'eax']
mov ['eax,', '[ebp+var_470]']
mov ['[ebp+var_46C],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_468],', 'ecx']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3B8B']
mov ['[ebp+var_464],', '1']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '6']
jle ['short', 'loc_3BBC']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[eax+20h]']
sar ['esi,', '2']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
sar ['eax,', '1']
add ['esi,', 'eax']
mov ['[ebp+var_460],', 'esi']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+8],', '7']
jle ['loc_3E12']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+12h]']
test ['ecx,', 'ecx']
jz ['loc_3DE9']
mov ['eax,', '[ebp+var_464]']
or ['eax,', '3']
mov ['[ebp+var_464],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+1Ch]']
push ['ecx']
call ['_computeCRC']
add ['esp,', '0Ch']
mov ['[ebp+var_4D8],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '1']
jg ['short', 'loc_3C30']
jmp ['loc_3DDB']
xor ['eax,', 'eax']
jz ['short', 'loc_3C7C']
mov ['eax,', '[ebp+var_4D8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_computeCRC']
add ['esp,', '0Ch']
mov ['[ebp+var_4D8],', 'eax']
jmp ['loc_3DDB']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '30h']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_520]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['1']
lea ['ecx,', '[ebp+var_520]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_520]']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3CFB']
mov ['ecx,', 'ds:?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '0D0h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BK@FLPIONDA@?$AA?$CB?$AAs?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_520]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_52C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_538],', 'eax']
jmp ['short', 'loc_3D42']
mov ['eax,', '[ebp+var_538]']
sub ['eax,', '1']
mov ['[ebp+var_538],', 'eax']
cmp ['[ebp+var_538],', '0']
jle ['short', 'loc_3D8B']
mov ['eax,', '[ebp+var_52C]']
mov ['cx,', '[eax]']
mov ['[ebp+var_544],', 'cx']
movzx ['eax,', '[ebp+var_544]']
shl ['eax,', '8']
movzx ['ecx,', '[ebp+var_544]']
sar ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_52C]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+var_52C]']
add ['eax,', '2']
mov ['[ebp+var_52C],', 'eax']
jmp ['short', 'loc_3D33']
mov ['eax,', '[ebp+var_4D8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_52C]']
push ['ecx']
call ['_computeCRC']
add ['esp,', '0Ch']
mov ['[ebp+var_4D8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_520]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4D8]']
mov ['[ebp+var_45C],', 'eax']
jmp ['short', 'loc_3E12']
movsx ['eax,', 'ds:_gUsePoolBundle']
test ['eax,', 'eax']
jz ['short', 'loc_3E12']
mov ['eax,', '[ebp+var_464]']
or ['eax,', '4']
mov ['[ebp+var_464],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_45C],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+78h]']
shl ['ecx,', '8']
or ['ecx,', '[ebp+Dst]']
mov ['[ebp+Dst],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+78h]']
sar ['ecx,', '0Ch']
and ['ecx,', '0F000h']
or ['ecx,', '[ebp+var_464]']
mov ['[ebp+var_464],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+7Ch]']
shl ['ecx,', '10h']
or ['ecx,', '[ebp+var_464]']
mov ['[ebp+var_464],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
shl ['ecx,', '2']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+1Ch]']
push ['ecx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_30],', 'eax']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx]']
call ['?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_3C]']
jz ['short', 'loc_3F38']
mov ['ecx,', 'ds:?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '0F2h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1CE@GCLAAIOL@?$AAb?$AAy?$AAt?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_udata_finish']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_48]']
jz ['short', 'loc_3F8E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['offset', '??_C@_0CM@MMAKLGBL@genrb?5error?3?5wrote?5?$CFu?5bytes?5but?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '5']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN61']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '608h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
dd ['offset', '$LN60']
dd ['offset', '$LN55']
dd ['0FFFFFBB0h,', '400h']
dd ['offset', '$LN56']
dd ['0FFFFFB88h,', '20h']
dd ['offset', '$LN57']
dd ['0FFFFFAE0h,', '40h']
dd ['offset', '$LN58']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-520h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CM@MMAKLGBL@genrb?5error?3?5wrote?5?$CFu?5bytes?5but?5@']
assume ['cs:_rdata']
public ['??_C@_1CE@GCLAAIOL@?$AAb?$AAy?$AAt?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@']
unicode ['0,', '<byteOffset', '==', 'top>,0']
assume ['cs:_rdata']
public ['??_C@_1BK@FLPIONDA@?$AA?$CB?$AAs?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<!s.isBogus()>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA']
assume ['cs:_rdata']
public ['??_C@_03FFIDGLAK@res?$AA@']
assume ['cs:_rdata']
public ['??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
db ["'and", 'others.', 'All', 'Rights', 'Reserved.', "',0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_01IDAFKMJL@_?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_04MMBENCGO@?4res?$AA@']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?string_hash@@YAHTUElement@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?hashCode@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?string_comp@@YACTUElement@@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_table_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['3Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_427A']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4284']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_42C8']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_42D2']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8']
dd ['offset', '$LN7']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TableResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
movzx ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ContainerResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_array_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_446E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4478']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_44BC']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_44C6']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_0']
dd ['offset', '$LN7_0']
jb ['short', 'loc_4583']
jnb ['short', '$+2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ArrayResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_string_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['80h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_45F1']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_45FB']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_463F']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4649']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN8_1']
dd ['offset', '$LN7_1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_alias_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['6Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_479A']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_47A4']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_47E8']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_47F2']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_2']
dd ['offset', '$LN7_2']
jb ['short', 'loc_48AF']
jnb ['short', '$+2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['3']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7AliasResource@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_intvector_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['34h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_490E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4918']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_495C']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4966']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_3']
dd ['offset', '$LN7_3']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_int_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['30h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_4A1E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4A28']
mov ['[ebp+var_F4],', '0']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
push ['ecx']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4A6C']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4A76']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_4']
dd ['offset', '$LN7_4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_bin_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['38h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_4B36']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4B40']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4B84']
lea ['ecx,', '[ebp+var_8]']
call ['?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_4B8E']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN8_5']
dd ['offset', '$LN7_5']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+11h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+12h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+74h],', 'offset', '_kNoPoolBundle']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+7Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+80h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4D26']
jmp ['loc_4F04']
cmp ['_gFormatVersion,', '1']
jle ['short', 'loc_4D46']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['10000h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_4DC0']
push ['34h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_F8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_4D99']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_F8]']
call ['??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_4DA3']
mov ['[ebp+var_10C],', '0']
mov ['edx,', '[ebp+var_10C]']
mov ['[ebp+var_104],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_104]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_4E23']
push ['3Ch']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_4DFE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_4E08']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_EC]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_4E49']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4E49']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E6C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E67']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_4F04']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '10000h']
movsx ['eax,', 'ds:_gUsePoolBundle']
test ['eax,', 'eax']
jnz ['short', 'loc_4E89']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_4E95']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '8']
jmp ['short', 'loc_4EB4']
cmp ['_gFormatVersion,', '2']
jl ['short', 'loc_4EAA']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '7']
jmp ['short', 'loc_4EB4']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '6']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
lea ['edx,', 'ds:4[ecx*4]']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+20h],', 'edx']
cmp ['_gFormatVersion,', '1']
jnz ['short', 'loc_4EFD']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+11h],', '0']
jmp ['short', 'loc_4F04']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+11h],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$1 proc near
mov ['eax,', '[ebp-0F8h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$2 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$1']
dd ['0']
dd ['offset', '__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['2']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PseudoListResource@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_res_close	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_5079']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D4]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_5083']
mov ['[ebp+var_DC],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1SRBRoot@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1SRBRoot@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_5126']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_5130']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1SRBRoot@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1SRBRoot@@QAE@XZ proc near 
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1SRBRoot@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1SRBRoot@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1SRBRoot@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5232']
jmp ['short', 'loc_5296']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_5273']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_5296']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?getKeyString@SRBRoot@@QBEPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_52EA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+74h]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '7FFFFFFFh']
add ['eax,', '[ecx+8]']
jmp ['short', 'loc_52F3']
jmp ['short', 'loc_52F3']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
jnz ['short', 'loc_532C']
xor ['eax,', 'eax']
jmp ['short', 'loc_533B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getKeyString@SRBRoot@@QBEPBDH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?getKeyBytes@SRBRoot@@QBEPBDPAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+1Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_53E0']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_54AA']
cmp ['[ebp+Size],', '0']
jl ['short', 'loc_53F2']
cmp ['[ebp+Src],', '0']
jnz ['short', 'loc_5403']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_5403']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_54AA']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_5414']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+20h]']
jmp ['loc_54AA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+24h]']
jl ['short', 'loc_547F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
add ['ecx,', '10000h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+24h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_547F']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_54AA']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_54FD']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_5552']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_5508']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_5552']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_554F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '174h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_174]']
mov ['ecx,', '5Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_8]']
add ['edx,', '[eax+28h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_55C4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_55C4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_55C9']
jmp ['loc_5A49']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '3']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_55EF']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_5A49']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_560D']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ecx+10h]']
jge ['short', 'loc_5664']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '[ecx+8]']
or ['edx,', '80000000h']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+eax*8],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+eax*8+4],', '0']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5659']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5644']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5604']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_567E']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_56C6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+edx*8],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+eax*8+4],', '0']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_56BB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_56A6']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5675']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['offset', '?compareKeySuffixes@@YAHPBX00@Z']
push ['8']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_5A3D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['loc_588C']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_2C]']
mov ['esi,', '[ebp+var_14]']
mov ['edx,', '[esi+edx*8]']
mov ['[ecx+eax*8+4],', 'edx']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_5754']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+eax*8],', '0']
jge ['short', 'loc_5754']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5710']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getKeyString@SRBRoot@@QBEPBDH@Z']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_577A']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5786']
jmp ['short', 'loc_5771']
jmp ['short', 'loc_5791']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_38]']
jge ['loc_5881']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+eax*8],', '0']
jl ['loc_5881']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_57CD']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_57D9']
jmp ['short', 'loc_57C4']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '[ebp+var_74]']
sub ['eax,', 'ecx']
mov ['[ebp+var_8C],', 'eax']
jns ['short', 'loc_57F4']
jmp ['loc_5881']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_80]']
jnb ['short', 'loc_5826']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '1']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_80]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_68]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_5826']
jmp ['short', 'loc_57FA']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_80]']
jnz ['short', 'loc_587A']
mov ['eax,', '[ebp+var_68]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_80]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_587A']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*8]']
add ['edx,', '[ebp+var_8C]']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+eax*8+4],', 'edx']
mov ['eax,', '[ebp+var_74]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5872']
mov ['eax,', '[ebp+var_74]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
mov ['[ebp+var_74],', 'ecx']
jmp ['short', 'loc_5857']
mov ['eax,', '[ebp+var_74]']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['short', 'loc_587C']
jmp ['short', 'loc_5881']
jmp ['loc_5788']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_5710']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['0']
push ['offset', '?compareKeyNewpos@@YAHPBX00@Z']
push ['8']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_5A3D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_B0],', 'ecx']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_58FA']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_5911']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+eax*8+4],', '0']
jge ['short', 'loc_5911']
jmp ['short', 'loc_58F1']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['loc_59ED']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_B0]']
jge ['loc_59BF']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_98]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_5951']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_59BA']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_5986']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*8+4]']
cmp ['edx,', '[ebp+var_98]']
jnz ['short', 'loc_5986']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_A4]']
mov ['[ecx+eax*8+4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5951']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_98]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_98]']
add ['ecx,', '1']
mov ['[ebp+var_98],', 'ecx']
jmp ['loc_591D']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_59ED']
mov ['ecx,', 'ds:?__LINE__Var@?1??compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z@4JA']
add ['ecx,', '67h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BO@GFDGCGLD@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAk?$AAe?$AAy?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax+20h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['0']
push ['offset', '?compareKeyOldpos@@YAHPBX00@Z']
push ['8']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5A3D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+18h],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '174h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BO@GFDGCGLD@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAk?$AAe?$AAy?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@']
unicode ['0,', '<i', '==', 'keysCount>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compareKeySuffixes@@YAHPBX00@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getKeyString@SRBRoot@@QBEPBDH@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getKeyString@SRBRoot@@QBEPBDH@Z']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5AF7']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_5AE2']
mov ['eax,', '[ebp+var_50]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5B0C']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_5AF7']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_5B48']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jnb ['short', 'loc_5B48']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_50]']
sub ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_5C],', 'edx']
jz ['short', 'loc_5B46']
mov ['eax,', '[ebp+var_5C]']
jmp ['short', 'loc_5B70']
jmp ['short', 'loc_5B0C']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[ebp+var_2C]']
sub ['eax,', 'ecx']
mov ['[ebp+var_5C],', 'eax']
jz ['short', 'loc_5B60']
mov ['eax,', '[ebp+var_5C]']
jmp ['short', 'loc_5B70']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['?compareInt32@@YAHHH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compareInt32@@YAHHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_5BB1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_5BC4']
jmp ['short', 'loc_5BC4']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_5BC2']
mov ['eax,', '1']
jmp ['short', 'loc_5BC4']
jmp ['short', 'loc_5BC4']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compareKeyNewpos@@YAHPBX00@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['?compareInt32@@YAHHH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compareKeyOldpos@@YAHPBX00@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['?compareInt32@@YAHHH@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+arg_0]']
or ['eax,', '60000000h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+7Ch]']
mov ['[ebp+var_DC],', 'cl']
cmp ['[ebp+var_DC],', '1']
jz ['short', 'loc_5CE2']
cmp ['[ebp+var_DC],', '2']
jz ['short', 'loc_5CFF']
cmp ['[ebp+var_DC],', '3']
jz ['short', 'loc_5D36']
jmp ['loc_5D7D']
jmp ['loc_5D7D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0DC00h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5D7D']
mov ['eax,', '[ebp+var_14]']
sar ['eax,', '10h']
add ['eax,', '0DFEFh']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5D7D']
mov ['esi,', 'esp']
push ['0DFFFh']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
sar ['eax,', '10h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '208h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_214]']
mov ['ecx,', '82h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5E1C']
jmp ['loc_674A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uhash_count_56']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['edx,', '4']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20C]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5E90']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ']
jmp ['loc_674A']
mov ['[ebp+var_38],', '0FFFFFFFFh']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_5EA9']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_5ED6']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uhash_nextElement_56']
add ['esp,', '8']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+var_44]']
push ['edx']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[esi+8]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_5EA0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
push ['offset', '?compareStringSuffixes@@YAHPBX00@Z']
push ['4']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ']
push ['eax']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5F23']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ']
jmp ['loc_674A']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_60B8']
mov ['eax,', '[ebp+var_50]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['esi,', '[eax+74h]']
sub ['esi,', '1']
mov ['ecx,', '[ebp+var_5C]']
call ['?get16BitStringsLength@StringResource@@QBEHXZ']
imul ['esi,', 'eax']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx+78h],', 'esi']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_5F75']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_60AD']
mov ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '2Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_?endsWith@UnicodeString@icu_56@@QBECABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_60A6']
mov ['ecx,', '[ebp+var_5C]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_74]']
call ['?length@StringBaseResource@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_5FF4']
mov ['eax,', 'ds:?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '29h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1EK@IGAAGIHI@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAu?$AAf?$AAf?$AAi?$AAx?$AAR?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_74]']
movsx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6004']
jmp ['loc_60A4']
mov ['eax,', '[ebp+var_74]']
movsx ['ecx,', 'byte', 'ptr', '[eax+7Ch]']
test ['ecx,', 'ecx']
jnz ['loc_60A4']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+6Ch],', 'ecx']
mov ['ecx,', '[ebp+var_5C]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_74]']
call ['?length@StringBaseResource@@QBEHXZ']
sub ['esi,', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['[eax+70h],', 'esi']
mov ['eax,', '[ebp+var_5C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6089']
mov ['eax,', '[ebp+var_5C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+7Ch]']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[edx+8]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+var_74]']
add ['eax,', '[ecx+70h]']
mov ['edx,', '[ebp+var_74]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFh']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_80]']
cmp ['ecx,', '[eax+78h]']
jl ['short', 'loc_6082']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+78h],', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['byte', 'ptr', '[eax+5],', '1']
mov ['ecx,', '[ebp+var_74]']
call ['?get16BitStringsLength@StringResource@@QBEHXZ']
mov ['ecx,', '[ebp+var_74]']
imul ['eax,', '[ecx+74h]']
mov ['edx,', '[ebp+var_5C]']
add ['eax,', '[edx+78h]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx+78h],', 'eax']
jmp ['short', 'loc_60A8']
jmp ['short', 'loc_60AD']
jmp ['loc_5F6C']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_5F2A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
push ['offset', '?compareStringLengths@@YAHPBX00@Z']
push ['4']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ']
push ['eax']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6105']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ']
jmp ['loc_674A']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+12h]']
test ['ecx,', 'ecx']
jz ['loc_6319']
mov ['[ebp+var_8C],', '0']
mov ['[ebp+var_98],', '0']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_B0],', '0']
jmp ['short', 'loc_614D']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_622E']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_BC],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax+7Ch]']
add ['esi,', 'ecx']
mov ['ecx,', '[ebp+var_BC]']
call ['?length@StringBaseResource@@QBEHXZ']
lea ['edx,', '[esi+eax-1]']
mov ['[ebp+var_C8],', 'edx']
mov ['eax,', '[ebp+var_BC]']
cmp ['dword', 'ptr', '[eax+78h],', '0Ah']
jl ['short', 'loc_61FD']
cmp ['[ebp+var_C8],', '0FFFFFFFh']
jge ['short', 'loc_61FD']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '30h']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_BC]']
call ['?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['ecx,', '[ebp+var_98]']
add ['ecx,', '[eax+78h]']
mov ['[ebp+var_98],', 'ecx']
jmp ['short', 'loc_6229']
mov ['eax,', '[ebp+var_BC]']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', '[eax+78h]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_BC]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['loc_613E']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6253']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
call ['_getShowWarning']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_6314']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
push ['offset', '??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['offset', '??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
push ['offset', '??_C@_0CL@EPPOPPIO@16?9bit?5units?5saved?3?5?5?5?5?5?5?5?$CF6d?5?$DN?5@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_A4]']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_A4]']
push ['ecx']
push ['offset', '??_C@_0CL@LICABABH@16?9bit?5units?5not?5saved?3?5?5?5?$CF6d?5?$DN?5@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_66F2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+74h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+78h]']
cmp ['eax,', '[ecx+18h]']
jle ['short', 'loc_6350']
mov ['ecx,', 'ds:?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['ecx,', '72h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1HG@OLEMCCJA@?$AAf?$AAP?$AAo?$AAo?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAU?$AAs?$AAe?$AAP?$AAo?$AAo@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_636B']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_6416']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+6Ch],', '0']
jnz ['loc_6416']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['eax,', '[ebp+var_E0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6411']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_EC]']
cmp ['ecx,', '[eax+80h]']
jl ['short', 'loc_63F8']
mov ['eax,', '[ebp+var_EC]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+80h],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '30h']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+78h]']
push ['edx']
mov ['ecx,', '[ebp+var_E0]']
call ['?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z']
jmp ['loc_635C']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isBogus@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_644F']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ']
jmp ['loc_674A']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+84h],', '0']
jz ['loc_65BC']
cmp ['_gFormatVersion,', '3']
jl ['loc_65BC']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+84h]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_F8],', 'edx']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_6498']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_65BC']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+6Ch],', '0']
jnz ['loc_65BC']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
add ['ecx,', '2Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6515']
mov ['edx,', 'ds:?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['edx,', '87h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1DK@JFMIABKJ@?$AA?$CB?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA?$DO?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['80h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_1F4],', '0']
jz ['short', 'loc_656B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['edx,', '[eax]']
add ['edx,', '2Ch']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
mov ['ecx,', '[ebp+var_1F4]']
call ['??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_214],', 'eax']
jmp ['short', 'loc_6575']
mov ['[ebp+var_214],', '0']
mov ['edx,', '[ebp+var_214]']
mov ['[ebp+var_200],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_200]']
mov ['[ebp+var_104],', 'eax']
cmp ['[ebp+var_104],', '0']
jnz ['short', 'loc_65A5']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_65BC']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+var_F8]']
call ['?add@PseudoListResource@@QAEXPAUSResource@@@Z']
jmp ['loc_6489']
jmp ['short', 'loc_65CD']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_66F2']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_110],', 'ecx']
mov ['eax,', '[ebp+var_110]']
movsx ['ecx,', 'byte', 'ptr', '[eax+5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6603']
jmp ['short', 'loc_65BE']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[eax+6Ch]']
mov ['[ebp+var_11C],', 'ecx']
mov ['ecx,', '[ebp+var_110]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_11C]']
call ['?length@StringBaseResource@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_6655']
mov ['eax,', 'ds:?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '98h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1EA@ECNKOEMO@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_11C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+7Ch]']
mov ['edx,', '[ebp+var_11C]']
mov ['eax,', '[edx+8]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+var_110]']
add ['eax,', '[ecx+70h]']
mov ['edx,', '[ebp+var_110]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFh']
mov ['edx,', '[ebp+var_14]']
sub ['ecx,', '[edx+78h]']
mov ['[ebp+var_128],', 'ecx']
jns ['short', 'loc_66C0']
mov ['eax,', 'ds:?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '9Ch']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1CM@IKLOGPLH@?$AAl?$AAo?$AAc?$AAa?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_128]']
cmp ['ecx,', '[eax+80h]']
jl ['short', 'loc_66E3']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+80h],', 'eax']
mov ['eax,', '[ebp+var_110]']
mov ['byte', 'ptr', '[eax+5],', '1']
jmp ['loc_65BE']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '30h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+70h]']
add ['edx,', '1']
cmp ['eax,', 'edx']
jle ['short', 'loc_673B']
mov ['eax,', 'ds:?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '0A4h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1GE@MIPJNEOK@?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAU?$AAn?$AAi?$AAt?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAS@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN62']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '214h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
dd ['offset', '$LN61_0']
dd ['offset', '$LN58_0']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN59']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$0 proc	near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$1 proc	near
mov ['eax,', '[ebp-1F4h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-218h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_1GE@MIPJNEOK@?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAU?$AAn?$AAi?$AAt?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAS@']
unicode ['0,', '<f16BitUnits.length()', '>']
dw ['3Ch']
unicode ['0,', '<=', '(f16BitStringsLength', '+', '1)>,0']
assume ['cs:_rdata']
public ['??_C@_1CM@IKLOGPLH@?$AAl?$AAo?$AAc?$AAa?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<localStringIndex', '>']
dw ['3Eh']
unicode ['0,', '<=', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1EA@ECNKOEMO@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<res->']
dw ['3Eh']
unicode ['0,', '<length()', '!=', 'same->']
dw ['3Eh']
unicode ['0,', '<length()>,0']
assume ['cs:_rdata']
public ['??_C@_1DK@JFMIABKJ@?$AA?$CB?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA?$DO?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<!array[i]->']
dw ['3Eh']
unicode ['0,', '<fString.isEmpty()>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1HG@OLEMCCJA@?$AAf?$AAP?$AAo?$AAo?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAU?$AAs?$AAe?$AAP?$AAo?$AAo@']
unicode ['0,', '<fPoolStringIndexLimit', '>']
dw ['3Ch']
unicode ['0,', '<=', 'fUsePoolBundle->']
dw ['3Eh']
unicode ['0,', '<fStringIndexLimit>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CL@LICABABH@16?9bit?5units?5not?5saved?3?5?5?5?$CF6d?5?$DN?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CL@EPPOPPIO@16?9bit?5units?5saved?3?5?5?5?5?5?5?5?$CF6d?5?$DN?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EK@IGAAGIHI@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAu?$AAf?$AAf?$AAi?$AAx?$AAR?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg@']
unicode ['0,', '<res->']
dw ['3Eh']
unicode ['0,', '<length()', '!=', 'suffixRes->']
dw ['3Eh']
unicode ['0,', '<length()>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringResource@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+78h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+7Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?get16BitStringsLength@StringResource@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['esi,', 'byte', 'ptr', '[eax+7Ch]']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
lea ['eax,', '[esi+eax+1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compareStringSuffixes@@YAHPBX00@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getBuffer@StringBaseResource@@QBEPB_WXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
mov ['ecx,', '[ebp+var_14]']
call ['?getBuffer@StringBaseResource@@QBEPB_WXZ']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_6C02']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_6C02']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '2']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_44]']
movzx ['eax,', 'word', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_50],', 'edx']
jz ['short', 'loc_6C00']
mov ['eax,', '[ebp+var_50]']
jmp ['short', 'loc_6C18']
jmp ['short', 'loc_6BC6']
mov ['ecx,', '[ebp+var_14]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?compareStringLengths@@YAHPBX00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+6Ch],', '0']
setnz ['cl']
mov ['edx,', '[ebp+var_14]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+6Ch],', '0']
setnz ['al']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
jz ['short', 'loc_6C7E']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_6CD1']
mov ['ecx,', '[ebp+var_8]']
call ['?length@StringBaseResource@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?length@StringBaseResource@@QBEHXZ']
sub ['esi,', 'eax']
mov ['[ebp+var_20],', 'esi']
jz ['short', 'loc_6C9C']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_6CD1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+78h]']
sub ['edx,', '[ecx+78h]']
mov ['[ebp+var_20],', 'edx']
jz ['short', 'loc_6CB2']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_6CD1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
call ['dword', 'ptr', 'ds:__imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_6D61']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6D61']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_6E6E']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_6E78']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_6FB5']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6FB5']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_70C2']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_70CC']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_7209']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7209']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_7316']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_7320']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_745D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_745D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_756A']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_7574']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_76B1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_76B1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
call ['??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$yc']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??__EkNoPoolBundle@@YAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', 'offset', '_kNoPoolBundle']
call ['??0ResFile@@QAE@XZ']
push ['offset', '??__FkNoPoolBundle@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??0ResFile@@QAE@XZ proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$yc']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??__EkNoResource@@YAXXZ	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', 'offset', '_kNoResource']
call ['??0SResource@@QAE@XZ']
push ['offset', '??__FkNoResource@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$yd']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??__FkNoPoolBundle@@YAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', 'offset', '_kNoPoolBundle']
call ['??1ResFile@@QAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??1ResFile@@QAE@XZ proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?close@ResFile@@QAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$yd']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
??__FkNoResource@@YAXXZ	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', 'offset', '_kNoResource']
call ['??1SResource@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_CRT$XCU']
extrn ['_uprv_isInvariantUString_56:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_ustr_init:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??_GSResource@@UAEPAXI@Z_0:near']
extrn ['??_ESResource@@UAEPAXI@Z:near']
extrn ['??3@YAXPAX@Z:near']
extrn ['_ustr_cpy:near']
extrn ['_ustr_deinit:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??_GContainerResource@@UAEPAXI@Z_0:near']
extrn ['??_EContainerResource@@UAEPAXI@Z:near']
extrn ['??_GTableResource@@UAEPAXI@Z_0:near']
extrn ['??_ETableResource@@UAEPAXI@Z:near']
extrn ['_error:near']
extrn ['_strcmp:near']
extrn ['??_GArrayResource@@UAEPAXI@Z_0:near']
extrn ['??_EArrayResource@@UAEPAXI@Z:near']
extrn ['??_GPseudoListResource@@UAEPAXI@Z_0:near']
extrn ['??_EPseudoListResource@@UAEPAXI@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_?isBogus@UnicodeString@icu_56@@QBECXZ:near']
extrn ['__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:near']
extrn ['__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['??_GStringBaseResource@@UAEPAXI@Z_0:near']
extrn ['??_EStringBaseResource@@UAEPAXI@Z:near']
extrn ['__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp___wassert:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['??_GStringResource@@UAEPAXI@Z_0:near']
extrn ['??_EStringResource@@UAEPAXI@Z:near']
extrn ['??_GAliasResource@@UAEPAXI@Z_0:near']
extrn ['??_EAliasResource@@UAEPAXI@Z:near']
extrn ['??_GIntResource@@UAEPAXI@Z_0:near']
extrn ['??_EIntResource@@UAEPAXI@Z:near']
extrn ['??_U@YAPAXI@Z:near']
extrn ['??_GIntVectorResource@@UAEPAXI@Z_0:near']
extrn ['??_EIntVectorResource@@UAEPAXI@Z:near']
extrn ['??_V@YAXPAX@Z:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_strcpy:near']
extrn ['_strlen:near']
extrn ['??_GBinaryResource@@UAEPAXI@Z_0:near']
extrn ['??_EBinaryResource@@UAEPAXI@Z:near']
extrn ['__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:near']
extrn ['__imp_??AUnicodeString@icu_56@@QBE_WH@Z:near']
extrn ['_uhash_put_56:near']
extrn ['_uhash_get_56:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near']
extrn ['_udata_writeUString:near']
extrn ['_udata_write32:near']
extrn ['_udata_writeBlock:near']
extrn ['_udata_writePadding:near']
extrn ['_udata_write16:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_udata_finish:near']
extrn ['_computeCRC:near']
extrn ['_memset:near']
extrn ['_udata_create:near']
extrn ['_strcat:near']
extrn ['__imp__strncpy:near']
extrn ['_uprv_free_56:near']
extrn ['_uhash_close_56:near']
extrn ['_uhash_open_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__alldiv:near']
extrn ['__allmul:near']
extrn ['__imp_?hashCode@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near']
extrn ['??2@YAPAXI@Z:near']
extrn ['_uprv_malloc_56:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_u_strlen_56:near']
extrn ['_uprv_realloc_56:near']
extrn ['_uprv_sortArray_56:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['__imp__printf:near']
extrn ['_getShowWarning:near']
extrn ['__imp_?endsWith@UnicodeString@icu_56@@QBECABV12@@Z:near']
extrn ['_uhash_nextElement_56:near']
extrn ['_uhash_count_56:near']
extrn ['__imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z:near']
extrn ['_atexit:near']
extrn ['?close@ResFile@@QAEXXZ:near']
end

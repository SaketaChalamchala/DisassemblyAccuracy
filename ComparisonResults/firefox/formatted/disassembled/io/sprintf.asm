endp
_u_sprintf_write proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_42']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_4E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_DC]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
sub ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
lea ['ecx,', '[eax+ecx*2]']
push ['ecx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_sprintf_pad_and_justify proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_F3']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_FF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+arg_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
jz ['loc_20F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[eax+4]']
jge ['loc_20F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+4]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
cmp ['eax,', '[ecx+4]']
jle ['short', 'loc_162']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_2C],', 'ecx']
jns ['short', 'loc_162']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+10h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_u_sprintf_write']
add ['esp,', '0Ch']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
lea ['eax,', '[edx+eax*2]']
push ['eax']
call ['_u_memset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_20D']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_38]']
lea ['eax,', '[ecx+edx*2]']
push ['eax']
call ['_u_memset_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_u_sprintf_write']
add ['esp,', '0Ch']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_226']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_u_sprintf_write']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_239']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_239']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_23C']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_sprintf_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['7FFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_vsnprintf_56']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_sprintf_u_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['7FFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_vsnprintf_u_56']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_vsprintf_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['7FFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_vsnprintf_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_snprintf_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_vsnprintf_56']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_snprintf_u_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_vsnprintf_u_56']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_vsnprintf_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1F0]']
mov ['ecx,', '7Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_12C],', 'eax']
cmp ['[ebp+var_12C],', '40h']
jb ['short', 'loc_482']
mov ['eax,', '[ebp+var_12C]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_480']
xor ['eax,', 'eax']
jmp ['short', 'loc_4D9']
jmp ['short', 'loc_48B']
lea ['eax,', '[ebp+var_120]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_vsnprintf_u_56']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_18]']
lea ['ecx,', '[ebp+var_120]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_4D6']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN8']
dd ['offset', '$LN7']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_vsprintf_u_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['7FFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_vsnprintf_u_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_vsnprintf_u_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_5AD']
mov ['[ebp+arg_4],', '7FFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_40],', 'eax']
push ['offset', '??_C@_0M@EKCLCNAB@en_US_POSIX?$AA@']
lea ['eax,', '[ebp+var_38]']
push ['eax']
call ['_u_locbund_init_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_5D8']
xor ['eax,', 'eax']
jmp ['short', 'loc_62F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '_g_sprintf_stream_handler']
call ['_u_printf_parse_56']
add ['esp,', '1Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_40],', '0']
jle ['short', 'loc_615']
mov ['eax,', '[ebp+var_3C]']
sub ['eax,', '[ebp+var_40]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*2],', 'cx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
call ['_u_locbund_close_56']
add ['esp,', '4']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_62C']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_62F']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN9_0']
dd ['offset', '$LN7_0']
dd ['0FFFFFFBCh,', '28h']
dd ['offset', '$LN8_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0M@EKCLCNAB@en_US_POSIX?$AA@']
extrn ['_u_strncpy_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_u_memset_56:near']
extrn ['_uprv_free_56:near']
extrn ['_u_charsToUChars_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_strlen:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_u_locbund_close_56:near']
extrn ['_u_printf_parse_56:near']
extrn ['_u_locbund_init_56:near']
end

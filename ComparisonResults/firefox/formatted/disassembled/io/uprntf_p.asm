endp
_u_printf_simple_percent_handler proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['1']
push ['offset', '?PERCENT@?1??u_printf_simple_percent_handler@@9@9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_string_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '208h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_208]']
mov ['ecx,', '82h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+Str],', 'ecx']
cmp ['[ebp+Str],', '0']
jz ['loc_4A3']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '40h']
jb ['short', 'loc_47C']
mov ['eax,', '[ebp+var_138]']
lea ['ecx,', '[eax+eax+2]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_138]']
lea ['eax,', '[edx+edx+2]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_138]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_ufmt_defaultCPToUnicode_56']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_47A']
xor ['eax,', 'eax']
jmp ['loc_52F']
jmp ['short', 'loc_4A1']
push ['80h']
lea ['eax,', '[ebp+var_114]']
push ['eax']
mov ['ecx,', '[ebp+var_138]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_ufmt_defaultCPToUnicode_56']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_4AA']
mov ['[ebp+var_C],', 'offset', '_gNullStr']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+var_120],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_4DC']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_120]']
jge ['short', 'loc_4DC']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_120],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_12C],', 'eax']
cmp ['[ebp+var_C],', 'offset', '_gNullStr']
jz ['short', 'loc_529']
lea ['eax,', '[ebp+var_114]']
cmp ['eax,', '[ebp+var_C]']
jz ['short', 'loc_529']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_12C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '208h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN11']
dd ['offset', '$LN10']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_char_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_1C],', '1']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[eax]']
mov ['[ebp+var_31],', 'cl']
push ['3']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['2']
lea ['ecx,', '[ebp+var_31]']
push ['ecx']
call ['_ufmt_defaultCPToUnicode_56']
add ['esp,', '10h']
movzx ['eax,', '[ebp+var_31]']
test ['eax,', 'eax']
jz ['short', 'loc_5DE']
lea ['eax,', '[ebp+var_10]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN4']
dd ['0FFFFFFCFh,', '1']
dd ['offset', '$LN5']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_double_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1138h']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1138]']
mov ['ecx,', '44Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
fld ['qword', 'ptr', '[eax]']
fstp ['[ebp+var_10]']
mov ['[ebp+var_1038],', '800h']
mov ['[ebp+var_1068],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_102C],', 'ax']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_6CF']
xor ['eax,', 'eax']
jmp ['loc_843']
push ['7']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1044],', 'eax']
push ['6']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1050],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_715']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_742']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_732']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_742']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_772']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_set_sign']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
push ['0']
push ['400h']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_10]']
fstp ['[esp+115Ch+var_115C]']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_formatDouble_56']
add ['esp,', '1Ch']
mov ['[ebp+var_105C],', 'eax']
cmp ['[ebp+var_1068],', '0']
jle ['short', 'loc_7B5']
mov ['[ebp+var_105C],', '0']
mov ['eax,', '[ebp+var_1044]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1050]']
push ['eax']
push ['6']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_819']
mov ['[ebp+var_1074],', '0']
lea ['eax,', '[ebp+var_1074]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_reset_sign']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_105C]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16']
dd ['offset', '$LN11_0']
dd ['0FFFFEFD4h,', '800h']
dd ['offset', '$LN12_0']
dd ['0FFFFEFC8h,', '4']
dd ['offset', '$LN13']
dd ['0FFFFEF98h,', '4']
dd ['offset', '$LN14']
dd ['0FFFFEF8Ch,', '4']
dd ['offset', '$LN15']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_set_sign proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9A1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_unum_getTextAttribute_56']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Fh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_96A']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1']
push ['offset', '_gSpaceStr']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_unum_setTextAttribute_56']
add ['esp,', '14h']
jmp ['short', 'loc_99F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['8']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['7']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_unum_getSymbol_56']
add ['esp,', '14h']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_unum_setTextAttribute_56']
add ['esp,', '14h']
jmp ['short', 'loc_9AA']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8']
dd ['offset', '$LN7_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_reset_sign proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A41']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_unum_setTextAttribute_56']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_integer_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '112Ch']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_112C]']
mov ['ecx,', '44Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_1038],', '800h']
mov ['[ebp+var_1044],', '0FFFFFFFFh']
mov ['[ebp+var_105C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_102C],', 'ax']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_AD1']
movsx ['eax,', 'word', 'ptr', '[ebp+var_10]']
cdq
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_AE6']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+16h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AE6']
mov ['eax,', '[ebp+var_10]']
cdq
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_B04']
xor ['eax,', 'eax']
jmp ['loc_C28']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_B34']
push ['4']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1044],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B64']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_set_sign']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
push ['0']
push ['400h']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_formatInt64_56']
add ['esp,', '1Ch']
mov ['[ebp+var_1050],', 'eax']
cmp ['[ebp+var_105C],', '0']
jle ['short', 'loc_BA6']
mov ['[ebp+var_1050],', '0']
cmp ['[ebp+var_1044],', '0FFFFFFFFh']
jz ['short', 'loc_BC4']
mov ['eax,', '[ebp+var_1044]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BFE']
mov ['[ebp+var_1068],', '0']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_reset_sign']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1050]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '112Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17_0']
dd ['offset', '$LN12_1']
dd ['0FFFFEFD4h,', '800h']
dd ['offset', '$LN13_0']
dd ['0FFFFEFC8h,', '4']
dd ['offset', '$LN14_0']
dd ['0FFFFEFA4h,', '4']
dd ['offset', '$LN15_0']
dd ['0FFFFEF98h,', '4']
dd ['offset', '$LN16_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_hex_handler proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8ECh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8EC]']
mov ['ecx,', '23Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_824],', '400h']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D35']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_D4F']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+16h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_D4F']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_D70']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+12h]']
test ['edx,', 'edx']
jz ['short', 'loc_D70']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8EC],', 'ecx']
jmp ['short', 'loc_D7B']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8EC],', 'eax']
mov ['ecx,', '[ebp+var_8EC]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'word', 'ptr', '[edx+0Ah]']
cmp ['eax,', '78h']
setz ['cl']
movzx ['edx,', 'cl']
push ['edx']
push ['10h']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['edx,', '[ebp+var_824]']
push ['edx']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_ufmt_64tou_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '[ebp+var_C]']
jz ['short', 'loc_E24']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_E24']
cmp ['[ebp+var_824],', '3FEh']
jge ['short', 'loc_E24']
mov ['eax,', '[ebp+var_824]']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '30h']
mov ['[ebp+Src],', 'ax']
mov ['eax,', '[ebp+arg_C]']
mov ['cx,', '[eax+0Ah]']
mov ['[ebp+var_816],', 'cx']
mov ['eax,', '[ebp+var_824]']
add ['eax,', '2']
mov ['[ebp+var_824],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_824]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN11_1']
dd ['offset', '$LN9_0']
dd ['0FFFFF7DCh,', '4']
dd ['offset', '$LN10_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_octal_handler	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8ECh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8EC]']
mov ['ecx,', '23Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_824],', '400h']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_F0D']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_F27']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+16h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F27']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jnz ['short', 'loc_F48']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+12h]']
test ['edx,', 'edx']
jz ['short', 'loc_F48']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8EC],', 'ecx']
jmp ['short', 'loc_F53']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8EC],', 'eax']
mov ['ecx,', '[ebp+var_8EC]']
push ['ecx']
push ['0']
push ['8']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
call ['_ufmt_64tou_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FE3']
movzx ['eax,', '[ebp+Src]']
cmp ['eax,', '30h']
jz ['short', 'loc_FE3']
cmp ['[ebp+var_824],', '3FFh']
jge ['short', 'loc_FE3']
mov ['eax,', '[ebp+var_824]']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '30h']
mov ['[ebp+Src],', 'ax']
mov ['eax,', '[ebp+var_824]']
add ['eax,', '1']
mov ['[ebp+var_824],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_824]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11_2']
dd ['offset', '$LN9_1']
dd ['0FFFFF7DCh,', '4']
dd ['offset', '$LN10_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_uinteger_handler proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '90Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_90C]']
mov ['ecx,', '243h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_830],', '0FFFFFFFFh']
mov ['[ebp+var_848],', '0']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_10D3']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_10ED']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+16h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10ED']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
and ['ecx,', '0']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_110B']
xor ['eax,', 'eax']
jmp ['loc_11C5']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_113B']
push ['4']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_830],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_848]']
push ['eax']
push ['0']
push ['400h']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_formatInt64_56']
add ['esp,', '1Ch']
mov ['[ebp+var_83C],', 'eax']
cmp ['[ebp+var_848],', '0']
jle ['short', 'loc_117D']
mov ['[ebp+var_83C],', '0']
cmp ['[ebp+var_830],', '0FFFFFFFFh']
jz ['short', 'loc_119B']
mov ['eax,', '[ebp+var_830]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_83C]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '90Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12_4']
dd ['offset', '$LN10_2']
dd ['0FFFFF7B8h,', '4']
dd ['offset', '$LN11_3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_pointer_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8D8]']
mov ['ecx,', '236h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_814],', '400h']
push ['1']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+var_814]']
push ['edx']
lea ['eax,', '[ebp+var_808]']
push ['eax']
call ['_ufmt_ptou_56']
add ['esp,', '10h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_814]']
push ['eax']
lea ['ecx,', '[ebp+var_808]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_0']
dd ['offset', '$LN3']
dd ['0FFFFF7ECh,', '4']
dd ['offset', '$LN4_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_scientific_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1180h']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1180]']
mov ['ecx,', '460h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
fld ['qword', 'ptr', '[eax]']
fstp ['[ebp+var_10]']
mov ['[ebp+var_1038],', '800h']
mov ['[ebp+var_105C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_102C],', 'ax']
push ['4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_136B']
xor ['eax,', 'eax']
jmp ['loc_15D6']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
push ['10h']
lea ['ecx,', '[ebp+var_1074]']
push ['ecx']
push ['0Bh']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_getSymbol_56']
add ['esp,', '14h']
mov ['[ebp+var_1080],', 'eax']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '65h']
jnz ['short', 'loc_13CF']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_1080]']
push ['eax']
lea ['ecx,', '[ebp+var_1074]']
push ['ecx']
push ['10h']
lea ['edx,', '[ebp+var_10B0]']
push ['edx']
call ['_u_strToLower_56']
add ['esp,', '18h']
mov ['[ebp+var_108C],', 'eax']
jmp ['short', 'loc_1401']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_1080]']
push ['eax']
lea ['ecx,', '[ebp+var_1074]']
push ['ecx']
push ['10h']
lea ['edx,', '[ebp+var_10B0]']
push ['edx']
call ['_u_strToUpper_56']
add ['esp,', '18h']
mov ['[ebp+var_108C],', 'eax']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
mov ['ecx,', '[ebp+var_108C]']
push ['ecx']
lea ['edx,', '[ebp+var_10B0]']
push ['edx']
push ['0Bh']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setSymbol_56']
add ['esp,', '14h']
push ['7']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1044],', 'eax']
push ['6']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1050],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_14A8']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '65h']
jz ['short', 'loc_146C']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '45h']
jnz ['short', 'loc_1482']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_14A6']
push ['1']
push ['7']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['6']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_14D5']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_14C5']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_14D5']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1505']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_set_sign']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_105C]']
push ['eax']
push ['0']
push ['400h']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_10]']
fstp ['[esp+11A4h+var_11A4]']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_formatDouble_56']
add ['esp,', '1Ch']
mov ['[ebp+var_1098],', 'eax']
cmp ['[ebp+var_105C],', '0']
jle ['short', 'loc_1548']
mov ['[ebp+var_1098],', '0']
mov ['eax,', '[ebp+var_1044]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1050]']
push ['eax']
push ['6']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_15AC']
mov ['[ebp+var_10BC],', '0']
lea ['eax,', '[ebp+var_10BC]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_reset_sign']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1098]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN23']
dd ['offset', '$LN16_1']
dd ['0FFFFEFD4h,', '800h']
dd ['offset', '$LN17_1']
dd ['0FFFFEFC8h,', '4']
dd ['offset', '$LN18_0']
dd ['0FFFFEFA4h,', '4']
dd ['offset', '$LN19']
dd ['0FFFFEF8Ch,', '10h']
dd ['offset', '$LN20']
dd ['0FFFFEF50h,', '10h']
dd ['offset', '$LN21']
dd ['0FFFFEF44h,', '4']
dd ['offset', '$LN22']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_percent_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1138h']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1138]']
mov ['ecx,', '44Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
fld ['qword', 'ptr', '[eax]']
fstp ['[ebp+var_10]']
mov ['[ebp+var_1038],', '800h']
mov ['[ebp+var_1068],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_102C],', 'ax']
push ['3']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_171B']
xor ['eax,', 'eax']
jmp ['loc_188F']
push ['7']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1044],', 'eax']
push ['6']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1050],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_1761']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_178E']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_177E']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_178E']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_17BE']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_set_sign']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
push ['0']
push ['400h']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_10]']
fstp ['[esp+115Ch+var_115C]']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_formatDouble_56']
add ['esp,', '1Ch']
mov ['[ebp+var_105C],', 'eax']
cmp ['[ebp+var_1068],', '0']
jle ['short', 'loc_1801']
mov ['[ebp+var_105C],', '0']
mov ['eax,', '[ebp+var_1044]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1050]']
push ['eax']
push ['6']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1865']
mov ['[ebp+var_1074],', '0']
lea ['eax,', '[ebp+var_1074]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_reset_sign']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_105C]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN16_2']
dd ['offset', '$LN11_4']
dd ['0FFFFEFD4h,', '800h']
dd ['offset', '$LN12_5']
dd ['0FFFFEFC8h,', '4']
dd ['offset', '$LN13_2']
dd ['0FFFFEF98h,', '4']
dd ['offset', '$LN14_1']
dd ['0FFFFEF8Ch,', '4']
dd ['offset', '$LN15_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_ustring_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_196F']
mov ['[ebp+var_20],', 'offset', '_gNullStr']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_1998']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_8]']
jge ['short', 'loc_1998']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_uchar_handler	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['cx,', '[eax]']
mov ['[ebp+var_14],', 'cx']
mov ['esi,', 'esp']
push ['1']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN4_1']
dd ['offset', '$LN3_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_scidbl_handler proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
fld ['qword', 'ptr', '[eax]']
fstp ['[ebp+var_30]']
push ['18h']
mov ['eax,', '[ebp+Src]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+Dst],', '0FFFFFFFFh']
jnz ['short', 'loc_1B05']
sub ['esp,', '8']
fld ['[ebp+var_30]']
fstp ['[esp+138h+var_138]']
call ['_uprv_trunc_56']
add ['esp,', '8']
fld ['[ebp+var_30]']
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_1B05']
mov ['eax,', '66h']
mov ['[ebp+var_16],', 'ax']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_u_printf_double_handler']
add ['esp,', '14h']
mov ['[ebp+var_3C],', 'eax']
jmp ['loc_1C31']
fld ['ds:__real@3f1a36e2eb1c432d']
fcomp ['[ebp+var_30]']
fnstsw ['ax']
test ['ah,', '41h']
jz ['short', 'loc_1B47']
cmp ['[ebp+Dst],', '1']
jge ['short', 'loc_1B2B']
fld ['[ebp+var_30]']
fcomp ['ds:__real@412e848000000000']
fnstsw ['ax']
test ['ah,', '1']
jz ['short', 'loc_1B47']
cmp ['[ebp+Dst],', '0FFFFFFFFh']
jz ['short', 'loc_1B83']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_pow10_56']
add ['esp,', '4']
fcomp ['[ebp+var_30]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_1B83']
movzx ['eax,', '[ebp+var_16]']
sub ['eax,', '2']
mov ['[ebp+var_16],', 'ax']
cmp ['[ebp+Dst],', '0FFFFFFFFh']
jnz ['short', 'loc_1B5F']
mov ['[ebp+Dst],', '5']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_u_printf_scientific_handler']
add ['esp,', '14h']
mov ['[ebp+var_3C],', 'eax']
jmp ['loc_1C31']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_1BA1']
xor ['eax,', 'eax']
jmp ['loc_1C34']
push ['12h']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '66h']
mov ['[ebp+var_16],', 'ax']
cmp ['[ebp+var_60],', '0FFFFFFFFh']
jnz ['short', 'loc_1BCE']
mov ['[ebp+var_60],', '6']
push ['1']
push ['10h']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_60]']
push ['eax']
push ['12h']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_u_printf_double_handler']
add ['esp,', '14h']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_54]']
push ['eax']
push ['12h']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
push ['0']
push ['10h']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13_3']
dd ['offset', '$LN12_6']
assume ['cs:_rdata']
public ['__real@412e848000000000']
assume ['cs:_rdata']
public ['__real@3f1a36e2eb1c432d']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_count_handler	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_spellout_handler proc	near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1138h']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1138]']
mov ['ecx,', '44Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
fld ['qword', 'ptr', '[eax]']
fstp ['[ebp+var_10]']
mov ['[ebp+var_1038],', '800h']
mov ['[ebp+var_1068],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_102C],', 'ax']
push ['5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_1D3F']
xor ['eax,', 'eax']
jmp ['loc_1EB3']
push ['7']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1044],', 'eax']
push ['6']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_getAttribute_56']
add ['esp,', '8']
mov ['[ebp+var_1050],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jz ['short', 'loc_1D85']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_1DB2']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1DA2']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_1DB2']
push ['6']
push ['8']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1DE2']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_set_sign']
add ['esp,', '14h']
lea ['eax,', '[ebp+var_1068]']
push ['eax']
push ['0']
push ['400h']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_10]']
fstp ['[esp+115Ch+var_115C]']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_unum_formatDouble_56']
add ['esp,', '1Ch']
mov ['[ebp+var_105C],', 'eax']
cmp ['[ebp+var_1068],', '0']
jle ['short', 'loc_1E25']
mov ['[ebp+var_105C],', '0']
mov ['eax,', '[ebp+var_1044]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1050]']
push ['eax']
push ['6']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_unum_setAttribute_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+11h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1E89']
mov ['[ebp+var_1074],', '0']
lea ['eax,', '[ebp+var_1074]']
push ['eax']
lea ['ecx,', '[ebp+var_1038]']
push ['ecx']
lea ['edx,', '[ebp+var_102C]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_u_printf_reset_sign']
add ['esp,', '14h']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_105C]']
push ['eax']
lea ['ecx,', '[ebp+var_824]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16_3']
dd ['offset', '$LN11_5']
dd ['0FFFFEFD4h,', '800h']
dd ['offset', '$LN12_7']
dd ['0FFFFEFC8h,', '4']
dd ['offset', '$LN13_4']
dd ['0FFFFEF98h,', '4']
dd ['offset', '$LN14_3']
dd ['0FFFFEF8Ch,', '4']
dd ['offset', '$LN15_2']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_printf_parse_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '180h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '60h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_60]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_9C],', 'eax']
mov ['[ebp+var_A8],', '0']
mov ['[ebp+var_B4],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1FC0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['short', 'loc_1FF1']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_9C]']
push ['edx']
call ['_parseArguments']
add ['esp,', '0Ch']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_B4],', '0']
jle ['short', 'loc_1FF1']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_2D1E']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_2004']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jl ['loc_2CFE']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '25h']
jz ['short', 'loc_202D']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_202D']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_200D']
mov ['eax,', '[ebp+var_78]']
cmp ['eax,', '[ebp+var_90]']
jbe ['short', 'loc_206C']
mov ['eax,', '[ebp+var_78]']
sub ['eax,', '[ebp+var_90]']
sar ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_14]']
add ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_207B']
jmp ['loc_2CFE']
mov ['[ebp+var_48],', '0FFFFFFFFh']
mov ['[ebp+var_44],', '0FFFFFFFFh']
mov ['[ebp+var_40],', '0FFFFFFFFh']
push ['18h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0Ch],', 'ax']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_213A']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_2285']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_225F']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2238']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_225F']
mov ['eax,', '[ebp+var_40]']
imul ['eax,', '0Ah']
mov ['[ebp+var_40],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_40]']
lea ['eax,', '[edx+ecx-30h]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '2']
mov ['[ebp+var_78],', 'ecx']
jmp ['loc_21CA']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '24h']
jz ['short', 'loc_227C']
mov ['[ebp+var_40],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_2285']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_22CB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jz ['short', 'loc_22CB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jz ['short', 'loc_22CB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '23h']
jz ['short', 'loc_22CB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_22CB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '28h']
jnz ['loc_2451']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_17C],', 'ecx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_17C]']
mov ['[ebp+var_180],', 'eax']
mov ['ecx,', '[ebp+var_180]']
sub ['ecx,', '20h']
mov ['[ebp+var_180],', 'ecx']
cmp ['[ebp+var_180],', '10h']
ja ['$LN76']
mov ['edx,', '[ebp+var_180]']
movzx ['eax,', 'ds:$LN102[edx]']
jmp ['ds:$LN108[eax*4]']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+10h],', '1']
jmp ['$LN76']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+11h],', '1']
jmp ['$LN76']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+11h],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0Fh],', '1']
jmp ['$LN76']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0Eh],', '1']
jmp ['$LN76']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+12h],', '1']
mov ['eax,', '30h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0Ch],', 'ax']
jmp ['$LN76']
mov ['eax,', '[ebp+var_78]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_17C+2],', 'cx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_17C+2]']
push ['eax']
call ['_ufmt_digitvalue_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0Ch],', 'ax']
mov ['eax,', '[ebp+var_78]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_17C+2],', 'cx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_17C+2]']
push ['eax']
call ['_ufmt_digitvalue_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
shl ['edx,', '4']
add ['edx,', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_78]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_17C+2],', 'cx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_17C+2]']
push ['eax']
call ['_ufmt_digitvalue_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
shl ['edx,', '4']
add ['edx,', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_78]']
mov ['cx,', '[eax]']
mov ['word', 'ptr', '[ebp+var_17C+2],', 'cx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_17C+2]']
push ['eax']
call ['_ufmt_digitvalue_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
shl ['edx,', '4']
add ['edx,', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['loc_2285']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jnz ['loc_25C3']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFEh']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_2598']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2571']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_2598']
mov ['eax,', '[ebp+var_48]']
imul ['eax,', '0Ah']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_48]']
lea ['eax,', '[edx+ecx-30h]']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '2']
mov ['[ebp+var_78],', 'ecx']
jmp ['loc_2503']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '24h']
jz ['short', 'loc_25B5']
mov ['[ebp+var_48],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_25BE']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['loc_26EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2635']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_26EE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_26BB']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_26EE']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[ecx+eax-30h]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['loc_264D']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jnz ['loc_299D']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jnz ['loc_2877']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFEh']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_27A2']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_2872']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2825']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_284C']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '0Ah']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_44]']
lea ['eax,', '[edx+ecx-30h]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '2']
mov ['[ebp+var_78],', 'ecx']
jmp ['loc_27B7']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '24h']
jz ['short', 'loc_2869']
mov ['[ebp+var_44],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_2872']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['loc_299D']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_28E9']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_299D']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_296E']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_299D']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+Dst]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx]']
lea ['ecx,', '[ecx+eax-30h]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['loc_2900']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '68h']
jz ['short', 'loc_29BE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '6Ch']
jz ['short', 'loc_29BE']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '4Ch']
jnz ['short', 'loc_2A32']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_17C],', 'ecx']
mov ['edx,', '[ebp+var_78]']
add ['edx,', '2']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_17C]']
mov ['[ebp+var_180],', 'eax']
cmp ['[ebp+var_180],', '4Ch']
jz ['short', 'loc_2A2B']
cmp ['[ebp+var_180],', '68h']
jz ['short', 'loc_29FC']
cmp ['[ebp+var_180],', '6Ch']
jz ['short', 'loc_2A05']
jmp ['short', 'loc_2A32']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+14h],', '1']
jmp ['short', 'loc_2A32']
mov ['eax,', '[ebp+var_78]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '6Ch']
jnz ['short', 'loc_2A22']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+16h],', '1']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_2A29']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+15h],', '1']
jmp ['short', 'loc_2A32']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+13h],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_78]']
mov ['dx,', '[ecx]']
mov ['[eax+0Ah],', 'dx']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '2']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+Dst]']
mov ['dx,', '[ecx+0Ah]']
mov ['[eax+8],', 'dx']
cmp ['[ebp+var_5C],', '0FFFFFFFEh']
jnz ['short', 'loc_2A96']
cmp ['[ebp+var_48],', '0FFFFFFFFh']
jnz ['short', 'loc_2A77']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '4']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx-4]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jge ['short', 'loc_2A96']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '-1']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+10h],', '1']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFEh']
jnz ['short', 'loc_2AC9']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jnz ['short', 'loc_2AB8']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '4']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx-4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_2AC9']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
sub ['ecx,', '20h']
mov ['[ebp+var_C],', 'cx']
movzx ['eax,', '[ebp+var_C]']
cmp ['eax,', '6Ch']
jge ['loc_2CC8']
movzx ['eax,', '[ebp+var_C]']
mov ['ecx,', '_g_u_printf_infos[eax*8]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_40],', '0']
jle ['loc_2B95']
mov ['eax,', '[ebp+var_40]']
sub ['eax,', '1']
mov ['[ebp+var_40],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_17C],', 'eax']
mov ['ecx,', '[ebp+var_17C]']
sub ['ecx,', '2']
mov ['[ebp+var_17C],', 'ecx']
cmp ['[ebp+var_17C],', '8']
ja ['short', 'loc_2B89']
mov ['edx,', '[ebp+var_17C]']
jmp ['ds:$LN109[edx*4]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_A8]']
mov ['edx,', '[ecx+eax*8]']
mov ['dword', 'ptr', '[ebp+var_1C],', 'edx']
jmp ['short', 'loc_2B90']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_A8]']
mov ['edx,', '[ecx+eax*8]']
mov ['dword', 'ptr', '[ebp+var_1C],', 'edx']
mov ['eax,', '[ecx+eax*8+4]']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'eax']
jmp ['short', 'loc_2B90']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_A8]']
fld ['dword', 'ptr', '[ecx+eax*8]']
fstp ['dword', 'ptr', '[ebp+var_1C]']
jmp ['short', 'loc_2B90']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_A8]']
fld ['qword', 'ptr', '[ecx+eax*8]']
fstp ['[ebp+var_1C]']
jmp ['short', 'loc_2B90']
mov ['dword', 'ptr', '[ebp+var_1C],', '0']
jmp ['loc_2C52']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_17C],', 'eax']
mov ['ecx,', '[ebp+var_17C]']
sub ['ecx,', '2']
mov ['[ebp+var_17C],', 'ecx']
cmp ['[ebp+var_17C],', '8']
ja ['loc_2C4B']
mov ['edx,', '[ebp+var_17C]']
jmp ['ds:$LN110[edx*4]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '4']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx-4]']
mov ['dword', 'ptr', '[ebp+var_1C],', 'edx']
jmp ['short', 'loc_2C52']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax+16h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2C0B']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '8']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['edx,', '[ecx-8]']
mov ['dword', 'ptr', '[ebp+var_1C],', 'edx']
mov ['eax,', '[ecx-4]']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'eax']
jmp ['short', 'loc_2C21']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '4']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
mov ['eax,', '[ecx-4]']
cdq
mov ['dword', 'ptr', '[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'edx']
jmp ['short', 'loc_2C52']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '8']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
fld ['qword', 'ptr', '[ecx-8]']
fstp ['dword', 'ptr', '[ebp+var_1C]']
jmp ['short', 'loc_2C52']
mov ['eax,', '[ebp+arg_18]']
add ['eax,', '8']
mov ['[ebp+arg_18],', 'eax']
mov ['ecx,', '[ebp+arg_18]']
fld ['qword', 'ptr', '[ecx-8]']
fstp ['[ebp+var_1C]']
jmp ['short', 'loc_2C52']
mov ['dword', 'ptr', '[ebp+var_1C],', '0']
movzx ['eax,', '[ebp+var_C]']
mov ['ecx,', 'dword_1C[eax*8]']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_2C95']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['[ebp+var_34]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_14]']
add ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_2CC6']
mov ['eax,', '[ebp+var_78]']
sub ['eax,', '[ebp+var_90]']
sar ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_14]']
add ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_2CF9']
mov ['eax,', '[ebp+var_78]']
sub ['eax,', '[ebp+var_90]']
sar ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_14]']
add ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
jmp ['loc_1FF1']
cmp ['[ebp+var_A8],', '0']
jz ['short', 'loc_2D16']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_78]']
sub ['eax,', '[ebp+arg_4]']
sar ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN107']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN106']
dd ['offset', '$LN103']
dd ['0FFFFFFA0h,', '24h']
dd ['offset', '$LN104']
dd ['0FFFFFF4Ch,', '4']
dd ['offset', '$LN105']
align ['10h']
dd ['offset', '$LN72']
dd ['offset', '$LN70']
dd ['offset', '$LN74']
dd ['offset', '$LN75']
dd ['offset', '$LN71']
dd ['offset', '$LN76']
db ['6,', '6,', '6,', '6']
db ['2,', '6,', '6,', '3']
db ['6,', '4,', '6,', '6']
db ['5']
align ['10h']
dd ['offset', '$LN19_0']
dd ['offset', '$LN19_0']
dd ['offset', '$LN20_0']
dd ['offset', '$LN20_0']
dd ['offset', '$LN18_1']
dd ['offset', '$LN17_4']
dd ['offset', '$LN19_0']
dd ['offset', '$LN20_0']
dd ['offset', '$LN10_3']
dd ['offset', '$LN10_3']
dd ['offset', '$LN11_6']
dd ['offset', '$LN11_6']
dd ['offset', '$LN7_1']
dd ['offset', '$LN6_1']
dd ['offset', '$LN10_3']
dd ['offset', '$LN11_6']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_parseArguments	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '25h']
jz ['short', 'loc_2E6F']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2E6F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_2E4F']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2E7E']
jmp ['loc_3043']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2EF9']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_3029']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_3015']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_2FEE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_3015']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ah']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_38]']
lea ['eax,', '[edx+ecx-30h]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
jmp ['loc_2F80']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '24h']
jz ['short', 'loc_3027']
xor ['eax,', 'eax']
jmp ['loc_3507']
jmp ['short', 'loc_3030']
xor ['eax,', 'eax']
jmp ['loc_3507']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jle ['short', 'loc_303E']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_2E4F']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '2']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '3']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3088']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3088']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_30CE']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_309A']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_30AC']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_30BE']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_3507']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '25h']
jz ['short', 'loc_30F4']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_30F4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_30D4']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3103']
jmp ['loc_33E6']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['loc_3228']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_3201']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jnz ['short', 'loc_3228']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ah']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_38]']
lea ['eax,', '[edx+ecx-30h]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
jmp ['loc_3193']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '68h']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '6Ch']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '4Ch']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '23h']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '28h']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jz ['loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '31h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '32h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '33h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '34h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '35h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '36h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '37h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '38h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jz ['short', 'loc_334B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '24h']
jnz ['short', 'loc_33A0']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '68h']
jz ['short', 'loc_3375']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '6Ch']
jz ['short', 'loc_3375']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '4Ch']
jnz ['short', 'loc_3392']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '6Ch']
jnz ['short', 'loc_3392']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_3231']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_44],', 'cx']
movzx ['eax,', '[ebp+var_44]']
sub ['eax,', '20h']
mov ['[ebp+var_50],', 'ax']
movzx ['eax,', '[ebp+var_50]']
cmp ['eax,', '6Ch']
jge ['short', 'loc_33D4']
movzx ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '_g_u_printf_infos[eax*8]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_33E1']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
jmp ['loc_30D4']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_33F8']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_34EC']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
sub ['eax,', '3']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '7']
ja ['loc_34DA']
mov ['ecx,', '[ebp+var_124]']
jmp ['ds:$LN53[ecx*4]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['eax,', '[eax-4]']
mov ['[edx+ecx*8],', 'eax']
jmp ['loc_34E7']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3487']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['esi,', '[eax-8]']
mov ['[edx+ecx*8],', 'esi']
mov ['eax,', '[eax-4]']
mov ['[edx+ecx*8+4],', 'eax']
jmp ['short', 'loc_34A4']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ecx-4]']
cdq
mov ['ecx,', '[ebp+var_38]']
mov ['esi,', '[ebp+var_8]']
mov ['[esi+ecx*8],', 'eax']
mov ['[esi+ecx*8+4],', 'edx']
jmp ['short', 'loc_34E7']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
fld ['qword', 'ptr', '[ecx-8]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_8]']
fstp ['dword', 'ptr', '[eax+edx*8]']
jmp ['short', 'loc_34E7']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
fld ['qword', 'ptr', '[ecx-8]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_8]']
fstp ['qword', 'ptr', '[eax+edx*8]']
jmp ['short', 'loc_34E7']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+eax*8],', '0']
jmp ['loc_33EF']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_2']
dd ['offset', '$LN7_2']
dd ['offset', '$LN7_2']
dd ['offset', '$LN3_1']
dd ['offset', '$LN2']
dd ['offset', '$LN6_2']
dd ['offset', '$LN7_2']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_uprv_free_56:near']
extrn ['_u_strlen_56:near']
extrn ['_ufmt_defaultCPToUnicode_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_strlen:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_unum_formatDouble_56:near']
extrn ['_unum_setAttribute_56:near']
extrn ['_unum_getAttribute_56:near']
extrn ['_u_locbund_getNumberFormat_56:near']
extrn ['__fltused:near']
extrn ['__chkstk:near']
extrn ['_unum_getSymbol_56:near']
extrn ['_unum_setTextAttribute_56:near']
extrn ['_unum_getTextAttribute_56:near']
extrn ['_unum_formatInt64_56:near']
extrn ['__imp__memmove:near']
extrn ['_ufmt_64tou_56:near']
extrn ['_ufmt_ptou_56:near']
extrn ['_unum_setSymbol_56:near']
extrn ['_u_strToUpper_56:near']
extrn ['_u_strToLower_56:near']
extrn ['_uprv_pow10_56:near']
extrn ['_uprv_trunc_56:near']
extrn ['_memcpy:near']
extrn ['_ufmt_digitvalue_56:near']
extrn ['_memset:near']
end

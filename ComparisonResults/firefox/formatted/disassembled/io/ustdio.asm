endp
_u_fsettransliterator_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_41']
mov ['eax,', '[ebp+arg_8]']
jmp ['loc_144']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_58']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_8]']
jmp ['loc_144']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1']
jz ['short', 'loc_71']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10h']
mov ['eax,', '[ebp+arg_8]']
jmp ['loc_144']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_C1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_BC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['loc_141']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_11F']
push ['14h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_EE']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_8]']
jmp ['short', 'loc_144']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx],', '0']
jmp ['short', 'loc_136']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_flush_translit_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ufile_flush_translit_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_18C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_18E']
jmp ['short', 'loc_1A2']
push ['1']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['0']
call ['_u_file_write_flush_56']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ufile_flush_io_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1E5']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1E7']
jmp ['short', 'loc_1FB']
push ['0']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['0']
call ['_u_file_write_flush_56']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ufile_close_translit_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_23C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_23E']
jmp ['short', 'loc_297']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_flush_translit_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_266']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_utrans_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_280']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_fputs_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_u_strlen_56']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_file_write_56']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '_DELIMITERS_LEN']
push ['ecx']
push ['offset', '_DELIMITERS']
call ['_u_file_write_56']
add ['esp,', '0Ch']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_fputc_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_1D],', '0']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_369']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_0]']
mov ['[ebp+eax*2+var_8],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_3BD']
cmp ['[ebp+arg_0],', '10FFFFh']
ja ['short', 'loc_3B9']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
cmp ['eax,', '2']
jnb ['short', 'loc_3B9']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+ecx*2+var_8],', 'ax']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+ecx*2+var_8],', 'ax']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_3BD']
mov ['[ebp+var_1D],', '1']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_3CC']
mov ['eax,', '0FFFFh']
jmp ['short', 'loc_400']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
call ['_u_file_write_56']
add ['esp,', '0Ch']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_3F0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_3FA']
mov ['[ebp+var_E8],', '0FFFFh']
mov ['eax,', '[ebp+var_E8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN10']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_file_write_flush_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '53Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_53C]']
mov ['ecx,', '14Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'eax']
lea ['eax,', '[ebp+var_438]']
mov ['[ebp+var_444],', 'eax']
mov ['[ebp+var_450],', '0']
mov ['[ebp+var_45C],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_4AA']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4D9']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_4D9']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_file_translit']
add ['esp,', '10h']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_57E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+0Ch]']
sar ['edx,', '1']
mov ['[ebp+var_468],', 'edx']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_516']
mov ['eax,', '[ebp+var_468]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_516']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_468]']
jge ['short', 'loc_52C']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_53C],', 'ecx']
jmp ['short', 'loc_538']
mov ['edx,', '[ebp+var_468]']
mov ['[ebp+var_53C],', 'edx']
mov ['eax,', '[ebp+var_53C]']
mov ['[ebp+var_450],', 'eax']
mov ['eax,', '[ebp+var_450]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_450]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_450]']
jmp ['loc_6AB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_5CF']
lea ['eax,', '[ebp+var_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_30]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
lea ['edx,', '[ebp+var_444]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ucnv_fromUnicode_56']
add ['esp,', '20h']
jmp ['short', 'loc_635']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '[ebp+var_18]']
sar ['eax,', '1']
mov ['[ebp+var_474],', 'eax']
cmp ['[ebp+var_474],', '400h']
jle ['short', 'loc_5FA']
mov ['[ebp+var_474],', '400h']
mov ['[ebp+var_C],', '0Fh']
mov ['eax,', '[ebp+var_474]']
push ['eax']
mov ['ecx,', '[ebp+var_444]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_474]']
mov ['ecx,', '[ebp+var_18]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_444]']
add ['eax,', '[ebp+var_474]']
mov ['[ebp+var_444],', 'eax']
mov ['eax,', '[ebp+var_444]']
lea ['ecx,', '[ebp+var_438]']
sub ['eax,', 'ecx']
mov ['[ebp+var_45C],', 'eax']
cmp ['[ebp+var_45C],', '0']
jle ['short', 'loc_68F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_45C]']
push ['edx']
push ['1']
lea ['eax,', '[ebp+var_438]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fwrite']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_24]']
sar ['eax,', '1']
add ['eax,', '[ebp+var_450]']
mov ['[ebp+var_450],', 'eax']
lea ['eax,', '[ebp+var_438]']
mov ['[ebp+var_444],', 'eax']
cmp ['[ebp+var_C],', '0Fh']
jz ['loc_58A']
mov ['eax,', '[ebp+var_450]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '53Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20']
dd ['offset', '$LN16']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN17']
dd ['0FFFFFBC8h,', '400h']
dd ['offset', '$LN18']
dd ['0FFFFFBBCh,', '4']
dd ['offset', '$LN19']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_file_translit proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_54],', '0']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_77A']
lea ['eax,', '[ebp+var_18]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_793']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_793']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['short', 'loc_79B']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_9B6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+0Ch]']
cmp ['ecx,', '[eax+8]']
jle ['short', 'loc_7ED']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+0Ch]']
sub ['ecx,', '[eax+8]']
shl ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[edx+8]']
mov ['edx,', '[eax]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ecx+0Ch]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
add ['eax,', '[ecx+0Ch]']
shl ['eax,', '2']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+4]']
jle ['short', 'loc_88B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_852']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_86F']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_880']
xor ['eax,', 'eax']
jmp ['loc_9B6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['edx,', '[eax+0Ch]']
mov ['eax,', '[ecx]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+arg_8]']
add ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
mov ['[eax+0Ch],', 'edx']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_949']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_48],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_3C],', 'eax']
lea ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_utrans_transIncrementalUChars_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_40]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_40]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_3C]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx]']
jmp ['short', 'loc_9B6']
jmp ['short', 'loc_9B6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_30],', 'edx']
lea ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_utrans_transUChars_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN18_0']
dd ['offset', '$LN13']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN14']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN15']
dd ['0FFFFFFB8h,', '10h']
dd ['offset', '$LN16_0']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN17_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_file_write_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_file_write_flush_56']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ufile_fill_uchar_buffer_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '554h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_554]']
mov ['ecx,', '155h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_ADA']
jmp ['loc_D3C']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_480],', 'eax']
mov ['eax,', '[ebp+var_480]']
mov ['ecx,', '[ebp+var_480]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+838h],', '0']
jnz ['short', 'loc_B13']
cmp ['[ebp+var_6C],', '0']
jle ['short', 'loc_B13']
jmp ['loc_D3C']
cmp ['[ebp+var_6C],', '0']
jz ['short', 'loc_B54']
push ['1']
mov ['eax,', '[ebp+var_480]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_6C]']
shl ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_480]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '34h']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '400h']
sub ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_B84']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ucnv_getMinCharSize_56']
add ['esp,', '4']
movsx ['eax,', 'al']
shl ['eax,', '1']
mov ['[ebp+var_554],', 'eax']
jmp ['short', 'loc_B8E']
mov ['[ebp+var_554],', '1']
mov ['eax,', '[ebp+var_60]']
cdq
idiv ['[ebp+var_554]']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+838h],', '0']
jnz ['loc_C2B']
cmp ['[ebp+var_48],', '400h']
jge ['short', 'loc_BBF']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_554],', 'eax']
jmp ['short', 'loc_BC9']
mov ['[ebp+var_554],', '400h']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_554]']
push ['eax']
lea ['ecx,', '[ebp+var_474]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fgets']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48C],', 'eax']
cmp ['[ebp+var_48C],', '0']
jz ['short', 'loc_C16']
lea ['eax,', '[ebp+var_474]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_554],', 'eax']
jmp ['short', 'loc_C20']
mov ['[ebp+var_554],', '0']
mov ['ecx,', '[ebp+var_554]']
mov ['[ebp+var_54],', 'ecx']
jmp ['short', 'loc_C75']
cmp ['[ebp+var_48],', '400h']
jge ['short', 'loc_C3F']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_554],', 'eax']
jmp ['short', 'loc_C49']
mov ['[ebp+var_554],', '400h']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_554]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_474]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fread']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54],', 'eax']
mov ['[ebp+var_C],', '0']
lea ['eax,', '[ebp+var_474]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_54]']
lea ['ecx,', '[ebp+eax+var_474]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2+34h]']
mov ['[ebp+var_30],', 'edx']
mov ['[ebp+var_3C],', '400h']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_CFF']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__feof']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
setnz ['al']
movzx ['ecx,', 'al']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_24]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2+34h]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_ucnv_toUnicode_56']
add ['esp,', '20h']
jmp ['short', 'loc_D1F']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_30]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_480]']
mov ['ecx,', '[ebp+var_480]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_480]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+4],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '554h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22']
dd ['offset', '$LN18_1']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN19_1']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN20_0']
dd ['0FFFFFB8Ch,', '400h']
dd ['offset', '$LN21_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgets_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_DF9']
xor ['eax,', 'eax']
jmp ['loc_1094']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_E1B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ufile_fill_uchar_buffer_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jnz ['short', 'loc_E3D']
xor ['eax,', 'eax']
jmp ['loc_1094']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_38],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
cmp ['[ebp+var_8],', '0']
jle ['loc_1089']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_1089']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_14]']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_E84']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_E93']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
movzx ['eax,', '[ebp+var_44]']
test ['eax,', 'eax']
jnz ['loc_FE6']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_F31']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jl ['short', 'loc_EC1']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '0Dh']
jle ['short', 'loc_EF3']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '85h']
jz ['short', 'loc_EF3']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2028h']
jz ['short', 'loc_EF3']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '2029h']
jz ['short', 'loc_EF3']
mov ['[ebp+var_115],', '0']
jmp ['short', 'loc_EFA']
mov ['[ebp+var_115],', '1']
movsx ['ecx,', '[ebp+var_115]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F31']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_20]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '2']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_E9F']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_FE6']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jl ['short', 'loc_F53']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '0Dh']
jle ['short', 'loc_F85']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '85h']
jz ['short', 'loc_F85']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2028h']
jz ['short', 'loc_F85']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['eax,', '2029h']
jz ['short', 'loc_F85']
mov ['[ebp+var_115],', '0']
jmp ['short', 'loc_F8C']
mov ['[ebp+var_115],', '1']
movsx ['ecx,', '[ebp+var_115]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FE6']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
setz ['dl']
movsx ['eax,', 'dl']
test ['eax,', 'eax']
jz ['short', 'loc_FB6']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_44],', 'cx']
jmp ['short', 'loc_FBF']
mov ['eax,', '1']
mov ['[ebp+var_44],', 'ax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_20]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '2']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1055']
movzx ['eax,', '[ebp+var_44]']
test ['eax,', 'eax']
jz ['short', 'loc_104C']
movzx ['eax,', '[ebp+var_44]']
cmp ['eax,', '0Dh']
jnz ['short', 'loc_1013']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '0Ah']
jnz ['short', 'loc_1013']
mov ['[ebp+var_115],', '1']
jmp ['short', 'loc_101A']
mov ['[ebp+var_115],', '0']
movsx ['eax,', '[ebp+var_115]']
test ['eax,', 'eax']
jz ['short', 'loc_104C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_20]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '2']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '1']
mov ['[ebp+var_44],', 'ax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
movzx ['eax,', '[ebp+var_44]']
cmp ['eax,', '1']
jnz ['short', 'loc_1068']
jmp ['short', 'loc_1089']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ufile_fill_uchar_buffer_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_E50']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ufile_getch_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '0']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_1107']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[ecx]']
mov ['[edx],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'edx']
mov ['[ebp+var_5],', '1']
jmp ['short', 'loc_1151']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+10h]']
jb ['short', 'loc_1121']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_fill_uchar_buffer_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_1151']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[ecx]']
mov ['[edx],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'edx']
mov ['[ebp+var_5],', '1']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetc_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ufile_getch_56']
add ['esp,', '8']
mov ['ax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ufile_getch32_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_122E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
cmp ['ecx,', '[edx+4]']
jb ['short', 'loc_122E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_fill_uchar_buffer_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_12BF']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_14]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_12BB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+4]']
jnb ['short', 'loc_12B0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_20],', 'dx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
shl ['ecx,', '0Ah']
movzx ['edx,', '[ebp+var_20]']
lea ['eax,', '[ecx+edx-35FDC00h]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['[ebp+var_5],', '1']
jmp ['short', 'loc_12B9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
jmp ['short', 'loc_12BF']
mov ['[ebp+var_5],', '1']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetcx_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ufile_getch32_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_fungetc_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jz ['short', 'loc_139B']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_13A7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
cmp ['ecx,', '[edx+8]']
jnz ['short', 'loc_13A7']
mov ['[ebp+arg_0],', '0FFFFh']
jmp ['loc_1430']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_140F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
movzx ['ecx,', 'ax']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_1406']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
movzx ['ecx,', 'ax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_140D']
mov ['[ebp+arg_0],', '0FFFFh']
jmp ['short', 'loc_1430']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '[ebp+arg_0]']
jz ['short', 'loc_1430']
mov ['[ebp+arg_0],', '0FFFFh']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_file_read_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_149C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ufile_fill_uchar_buffer_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_14]']
cmp ['[ebp+var_8],', 'eax']
jle ['short', 'loc_14B0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_14F9']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jl ['loc_146A']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_uprv_malloc_56:near']
extrn ['_uprv_free_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_utrans_close_56:near']
extrn ['_u_strlen_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp__fwrite:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_ucnv_fromUnicode_56:near']
extrn ['_u_strncpy_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['_utrans_transUChars_56:near']
extrn ['_utrans_transIncrementalUChars_56:near']
extrn ['_uprv_realloc_56:near']
extrn ['__imp__memmove:near']
extrn ['_u_charsToUChars_56:near']
extrn ['_ucnv_toUnicode_56:near']
extrn ['__imp__feof:near']
extrn ['__imp__fread:near']
extrn ['_strlen:near']
extrn ['__imp__fgets:near']
extrn ['_ucnv_getMinCharSize_56:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_memcpy:near']
end

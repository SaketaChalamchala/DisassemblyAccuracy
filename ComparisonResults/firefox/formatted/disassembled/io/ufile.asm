endp
_u_finit_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_finit_owner']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_finit_owner	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_82']
xor ['eax,', 'eax']
jmp ['loc_1D0']
push ['83Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9F']
xor ['eax,', 'eax']
jmp ['loc_1D0']
push ['83Ch']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___fileno']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+838h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+838h],', '0']
jl ['short', 'loc_11D']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+838h],', '2']
jg ['short', 'loc_11D']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'eax']
mov ['edi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___fileno']
add ['esp,', '4']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
shl ['eax,', '5']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+4],', 'esi']
jmp ['short', 'loc_126']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '34h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '34h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '34h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '18h']
push ['ecx']
call ['_u_locbund_init_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_171']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_1D0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_181']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_197']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ucnv_open_56']
add ['esp,', '8']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_1AB']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+arg_C]']
mov ['[eax+834h],', 'cl']
jmp ['short', 'loc_1CD']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '18h']
push ['eax']
call ['_u_locbund_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13']
dd ['offset', '$LN12']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fadopt_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_finit_owner']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fopen_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2A1']
xor ['eax,', 'eax']
jmp ['short', 'loc_2D9']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_finit_owner']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2D6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fopen_u_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E4]']
mov ['ecx,', '79h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_114]']
push ['ecx']
call ['_u_austrcpy_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_114]']
push ['eax']
call ['_u_fopen_56']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_3B3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp___wfopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_120],', 'eax']
cmp ['[ebp+var_120],', '0']
jz ['short', 'loc_394']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_120]']
push ['edx']
call ['_finit_owner']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_3B3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_120]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7']
dd ['offset', '$LN6']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fstropen_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_42C']
xor ['eax,', 'eax']
jmp ['short', 'loc_4A4']
push ['83Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_446']
xor ['eax,', 'eax']
jmp ['short', 'loc_4A4']
push ['83Ch']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '18h']
push ['ecx']
call ['_u_locbund_init_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_4A1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_4A4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_feof_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4E0']
mov ['al,', '1']
jmp ['short', 'loc_541']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+10h]']
setnb ['al']
mov ['[ebp+var_5],', 'al']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_53E']
movsx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_52C']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__feof']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_52C']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_536']
mov ['[ebp+var_D0],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_D0]']
jmp ['short', 'loc_541']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fflush_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_flush_translit_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_flush_io_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_5B2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5DA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_5DA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
xor ['edx,', 'edx']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_frewind_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_fflush_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ucnv_reset_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_665']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__rewind']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '34h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '34h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_671']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+0Ch],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fclose_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_715']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_fflush_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ufile_close_translit_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+834h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6EB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
call ['_u_locbund_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ucnv_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetfile_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetlocale_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fsetlocale_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
call ['_u_locbund_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
call ['_u_locbund_init_56']
add ['esp,', '8']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
sub ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetcodepage_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_839']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ucnv_getName_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_839']
xor ['eax,', 'eax']
jmp ['short', 'loc_83C']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fsetcodepage_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+14h]']
jnz ['short', 'loc_8FA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+14h]']
jnz ['short', 'loc_8FA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ucnv_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucnv_open_56']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_8FA']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_1']
dd ['offset', '$LN5_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetConverter_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_u_fgetNumberFormat_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
call ['_u_locbund_getNumberFormat_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_u_locbund_close_56:near']
extrn ['_ucnv_open_56:near']
extrn ['_uprv_free_56:near']
extrn ['_u_locbund_init_56:near']
extrn ['__imp____iob_func:near']
extrn ['__imp___fileno:near']
extrn ['_memset:near']
extrn ['_uprv_malloc_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp__fclose:near']
extrn ['__imp__fopen:near']
extrn ['__imp___wfopen:near']
extrn ['_u_austrcpy_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__imp__feof:near']
extrn ['__imp__fflush:near']
extrn ['_ufile_flush_io_56:near']
extrn ['_ufile_flush_translit_56:near']
extrn ['__imp__rewind:near']
extrn ['_ucnv_reset_56:near']
extrn ['_ucnv_close_56:near']
extrn ['_ufile_close_translit_56:near']
extrn ['_ucnv_getName_56:near']
extrn ['_u_locbund_getNumberFormat_56:near']
end

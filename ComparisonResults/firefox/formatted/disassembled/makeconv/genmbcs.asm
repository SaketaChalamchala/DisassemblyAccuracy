endp
_MBCSGetDummy	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', 'dword_6F72C']
push ['0']
push ['offset', '_gDummy']
call ['_memset']
add ['esp,', '0Ch']
mov ['ds:byte_6F89E,', '1']
movsx ['eax,', 'byte', 'ptr', 'ds:_SMALL']
test ['eax,', 'eax']
jz ['short', 'loc_150']
mov ['eax,', '0FFFFh']
mov ['ds:word_6F89C,', 'ax']
mov ['ds:byte_6F89F,', '1']
jmp ['short', 'loc_15B']
mov ['eax,', '0D7FFh']
mov ['ds:word_6F89C,', 'ax']
mov ['eax,', 'offset', '_gDummy']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_bss']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
align ['10h']
dd ['21Eh', 'dup(?)']
db ['2', 'dup(?)']
align ['10h']
dd ['3DD8h', 'dup(?)']
align ['10h']
db ['?']
align ['4']
dd ['3EFFh', 'dup(?)']
dd ['0FBBFh', 'dup(?)']
align ['4']
dd ['1FFh', 'dup(?)']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_MBCSOpen	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', 'dword_6F72C']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_6F904']
mov ['esi,', 'esp']
push ['offset', '??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?MBCSInit@@YAXPAUMBCSData@@PAUUCMFile@@@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSInit@@YAXPAUMBCSData@@PAUUCMFile@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', 'dword_6F72C']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax],', 'offset', '?MBCSClose@@YAXPAUNewConverter@@@Z']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '?MBCSIsValid@@YACPAUNewConverter@@PBEH@Z']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+8],', 'offset', '?MBCSAddTable@@YACPAUNewConverter@@PAUUCMTable@@PAUUConverterStaticData@@@Z']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '?MBCSWrite@@YAIPAUNewConverter@@PBUUConverterStaticData@@PAUUNewDataMemory@@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSClose@@YAXPAUNewConverter@@@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_6F9F6']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?MBCSDestruct@@YAXPAUMBCSData@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSDestruct@@YAXPAUMBCSData@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF1C[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSIsValid@@YACPAUNewConverter@@PBEH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', '8']
push ['eax']
call ['_ucm_countChars']
add ['esp,', '0Ch']
cmp ['eax,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_MBCSOkForBaseFromUnicode proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '2']
jnz ['short', 'loc_6FAE9']
cmp ['[ebp+arg_8],', '1']
jz ['short', 'loc_6FB15']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jnz ['short', 'loc_6FAFC']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6FB15']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jg ['short', 'loc_6FB19']
cmp ['[ebp+arg_8],', '1']
jle ['short', 'loc_6FB19']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6FB19']
xor ['al,', 'al']
jmp ['short', 'loc_6FB72']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6FB56']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jg ['short', 'loc_6FB56']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:word_6F728[eax]']
cmp ['[ebp+arg_C],', 'ecx']
jg ['short', 'loc_6FB56']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6FB52']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jnz ['short', 'loc_6FB56']
xor ['al,', 'al']
jmp ['short', 'loc_6FB72']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72B[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6FB70']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_6FB70']
xor ['al,', 'al']
jmp ['short', 'loc_6FB72']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSAddTable@@YACPAUNewConverter@@PAUUCMTable@@PAUUConverterStaticData@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx+28h]']
mov ['[eax+4Fh],', 'dl']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4Fh]']
cmp ['ecx,', '3']
jnz ['short', 'loc_6FBE3']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EL@GIDGGLCP@error?3?5contains?5mappings?5for?5bot@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_6FFF3']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+45h],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20410[ecx]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+29h]']
and ['ecx,', '1']
setnz ['dl']
mov ['[ebp+var_59],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_59]']
mov ['ds:byte_6F72A[eax],', 'cl']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jz ['short', 'loc_6FC4F']
mov ['eax,', '0D7FFh']
mov ['ecx,', '[ebp+var_8]']
mov ['ds:word_6F728[ecx],', 'ax']
movsx ['eax,', 'byte', 'ptr', 'ds:_SMALL']
test ['eax,', 'eax']
jz ['short', 'loc_6FC4D']
cmp ['[ebp+var_38],', '1']
jle ['short', 'loc_6FC4D']
mov ['eax,', '[ebp+var_8]']
mov ['ds:byte_6F72B[eax],', '1']
jmp ['short', 'loc_6FC96']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ds:word_6F728[ecx],', 'ax']
movsx ['eax,', 'byte', 'ptr', 'ds:_SMALL']
test ['eax,', 'eax']
jz ['short', 'loc_6FC96']
cmp ['[ebp+var_38],', '1']
jle ['short', 'loc_6FC96']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EI@NGLGFNMN@makeconv?5warning?3?5?9?9small?5not?5av@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?MBCSStartMappings@@YACPAUMBCSData@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6FCB0']
xor ['al,', 'al']
jmp ['loc_6FFF3']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+4Eh],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+4Dh],', '0']
mov ['[ebp+var_4D],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_6FCE5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+8]']
jge ['loc_6FFE0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+0Ah]']
mov ['[ebp+var_41],', 'cl']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'ds:byte_6F72B[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6FD55']
movsx ['eax,', '[ebp+var_41]']
cmp ['eax,', '1']
jg ['short', 'loc_6FD55']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:word_6F728[eax]']
cmp ['ecx,', '[ebp+var_20]']
jge ['short', 'loc_6FD55']
cmp ['[ebp+var_20],', '0FFFFh']
jg ['short', 'loc_6FD55']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:word_6F728[eax]']
cmp ['ecx,', '0FEFFh']
jge ['short', 'loc_6FD55']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_8]']
mov ['ds:word_6F728[ecx],', 'ax']
movsx ['eax,', '[ebp+var_41]']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
add ['ecx,', '1']
mov ['[ebp+var_124],', 'ecx']
cmp ['[ebp+var_124],', '5']
ja ['loc_6FFA8']
mov ['edx,', '[ebp+var_124]']
jmp ['ds:$LN30[edx*4]']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?MBCSAddToUnicode@@YACPAUMBCSData@@PBEHHC@Z']
add ['esp,', '14h']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_4D]']
and ['ecx,', 'eax']
mov ['[ebp+var_4D],', 'cl']
cmp ['[ebp+var_38],', '1']
jnz ['short', 'loc_6FDF0']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?MBCSSingleAddFromUnicode@@YACPAUMBCSData@@PBEHHC@Z']
add ['esp,', '14h']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_4D]']
and ['ecx,', 'eax']
mov ['[ebp+var_4D],', 'cl']
jmp ['short', 'loc_6FE64']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_MBCSOkForBaseFromUnicode']
add ['esp,', '14h']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6FE4D']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?MBCSAddFromUnicode@@YACPAUMBCSData@@PBEHHC@Z']
add ['esp,', '14h']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_4D]']
and ['ecx,', 'eax']
mov ['[ebp+var_4D],', 'cl']
jmp ['short', 'loc_6FE64']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ah],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Bh],', '1']
jmp ['loc_6FFDB']
cmp ['[ebp+var_38],', '1']
jnz ['short', 'loc_6FEA8']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+4Eh],', '1']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?MBCSSingleAddFromUnicode@@YACPAUMBCSData@@PBEHHC@Z']
add ['esp,', '14h']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_4D]']
and ['ecx,', 'eax']
mov ['[ebp+var_4D],', 'cl']
jmp ['short', 'loc_6FF23']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_MBCSOkForBaseFromUnicode']
add ['esp,', '14h']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6FF0C']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+4Eh],', '1']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?MBCSAddFromUnicode@@YACPAUMBCSData@@PBEHHC@Z']
add ['esp,', '14h']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_4D]']
and ['ecx,', 'eax']
mov ['[ebp+var_4D],', 'cl']
jmp ['short', 'loc_6FF23']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ah],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Bh],', '1']
jmp ['loc_6FFDB']
cmp ['[ebp+var_38],', '1']
jle ['short', 'loc_6FF51']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jnz ['short', 'loc_6FF51']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ah],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Bh],', '1']
jmp ['loc_6FFDB']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+4Dh],', '1']
movzx ['eax,', '[ebp+var_41]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?MBCSAddToUnicode@@YACPAUMBCSData@@PBEHHC@Z']
add ['esp,', '14h']
movsx ['eax,', 'al']
movsx ['ecx,', '[ebp+var_4D]']
and ['ecx,', 'eax']
mov ['[ebp+var_4D],', 'cl']
jmp ['short', 'loc_6FFDB']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ah],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Bh],', '1']
jmp ['short', 'loc_6FFDB']
movsx ['eax,', '[ebp+var_41]']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0CG@LMBBJPIA@error?3?5illegal?5fallback?5indicato@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_6FFF3']
jmp ['loc_6FCD3']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['?MBCSPostprocess@@YAXPAUMBCSData@@PBUUConverterStaticData@@@Z']
add ['esp,', '8']
mov ['al,', '[ebp+var_4D]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15']
dd ['offset', '$LN10']
dd ['offset', '$LN5']
dd ['offset', '$LN3']
dd ['offset', '$LN2']
assume ['cs:_rdata']
public ['??_C@_0CG@LMBBJPIA@error?3?5illegal?5fallback?5indicato@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EI@NGLGFNMN@makeconv?5warning?3?5?9?9small?5not?5av@']
db ["'", "etc.',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0EL@GIDGGLCP@error?3?5contains?5mappings?5for?5bot@']
db ["'e", "points',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSStartMappings@@YACPAUMBCSData@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20414[ecx]']
mov ['[ebp+Size],', 'edx']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_70133']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
push ['offset', '??_C@_0CK@HMAMFBNL@the?5total?5number?5of?5offsets?5is?50@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Size],', '0']
jle ['loc_701C6']
mov ['eax,', '[ebp+Size]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_10018[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['ds:dword_10018[eax],', '0']
jnz ['short', 'loc_70195']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['offset', '??_C@_0DH@HHELGJEO@error?3?5out?5of?5memory?5allocating?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_703D0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_701A7']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+Size]']
jge ['short', 'loc_701C6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '0FFFEh']
mov ['eax,', '[ebp+var_8]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_7019E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20410[ecx]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_701E4']
mov ['[ebp+Size],', 'offset', 'dword_20000']
jmp ['short', 'loc_701ED']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '14h']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF1C[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['ds:dword_6EF1C[eax],', '0']
jnz ['short', 'loc_70243']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['offset', '??_C@_0DL@HLFAOCEM@error?3?5out?5of?5memory?5allocating?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_703D0']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF1C[ecx]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', '40h']
mov ['[ebp+var_38],', '40h']
mov ['[ebp+var_44],', '40h']
mov ['[ebp+var_50],', '80h']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_7028F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_38]']
sar ['eax,', '6']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_702B7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+Size]']
mov ['ds:word_1001C[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+Size]']
add ['eax,', '40h']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_70286']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF20[ecx],', 'eax']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_7031E']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_702E4']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_50]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_7031C']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:word_1001C[eax]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '[ebp+Size]']
mov ['ds:word_1089C[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '10h']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_702DB']
jmp ['short', 'loc_70375']
mov ['eax,', '[ebp+var_44]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_7033F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_50]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_70375']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:word_1001C[eax]']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+Size]']
mov ['ds:dword_3001C[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_70336']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_7038D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_50]']
cdq
and ['edx,', '3Fh']
add ['eax,', 'edx']
sar ['eax,', '6']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_703BB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+Size]']
mov ['ds:word_6EF28[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+Size]']
add ['eax,', '40h']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_70384']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_50]']
imul ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF24[ecx],', 'eax']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0DL@HLFAOCEM@error?3?5out?5of?5memory?5allocating?5@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DH@HHELGJEO@error?3?5out?5of?5memory?5allocating?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CK@HMAMFBNL@the?5total?5number?5of?5offsets?5is?50@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSAddToUnicode@@YACPAUMBCSData@@PBEHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
cmp ['ds:dword_20408[ecx],', '0']
jnz ['short', 'loc_704FE']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CH@IEHFNBLJ@error?3?5there?5is?5no?5state?5informa@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
cmp ['[ebp+arg_8],', '2']
jnz ['short', 'loc_7051A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
movsx ['edx,', 'ds:byte_20419[ecx]']
cmp ['edx,', '0Ch']
jnz ['short', 'loc_7051A']
mov ['[ebp+var_4D],', '1']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
movzx ['edx,', '[ebp+var_4D]']
shl ['edx,', '0Ah']
lea ['eax,', '[ecx+edx+8]']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_705C3']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_705A7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
movzx ['ecx,', '[ebp+var_4D]']
push ['ecx']
push ['offset', '??_C@_0EK@IHMOJLEM@error?3?5byte?5sequence?5too?5short?0?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '18h']
mov ['[ebp+var_4D],', 'al']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFFh']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_70CF3']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_70621']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
movzx ['ecx,', '[ebp+var_4D]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_2C]']
push ['edx']
push ['offset', '??_C@_0EI@JPCHFLKG@error?3?5byte?5sequence?5too?5long?5by@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '8']
ja ['loc_70CA4']
mov ['ecx,', '[ebp+var_124]']
jmp ['ds:$LN60[ecx*4]']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0DN@INKFOFLD@error?3?5byte?5sequence?5ends?5in?5ill@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0EB@IHGDKPFP@error?3?5byte?5sequence?5ends?5in?5sta@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0EA@FOEEAGEJ@error?3?5byte?5sequence?5ends?5in?5una@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '80FFFFFFh']
cmp ['eax,', '8000FFFEh']
jz ['loc_7081B']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
jz ['short', 'loc_70754']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '2']
jnz ['short', 'loc_70761']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFh']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_70771']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFh']
add ['eax,', 'offset', 'dword_10000']
mov ['[ebp+var_44],', 'eax']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jl ['short', 'loc_707C9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0EF@PGJNLKIL@error?3?5duplicate?5codepage?5byte?5s@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
jmp ['short', 'loc_7081B']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_7081B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0DO@MKHAKDC@duplicate?5codepage?5byte?5sequence@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FF0FFFFFh']
movsx ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '3']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '0FFFFFFFEh']
add ['ecx,', '2']
xor ['edx,', 'edx']
cmp ['[ebp+arg_C],', 'offset', 'dword_10000']
setnl ['dl']
add ['ecx,', 'edx']
shl ['ecx,', '14h']
or ['eax,', 'ecx']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+arg_C],', '0FFFFh']
jg ['short', 'loc_70863']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFF00000h']
or ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_70879']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFF00000h']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', 'offset', 'dword_10000']
or ['eax,', 'ecx']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
movzx ['edx,', '[ebp+var_4D]']
shl ['edx,', '0Ah']
lea ['eax,', '[ecx+edx+8]']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx-1]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+edx*4],', 'ecx']
jmp ['loc_70CEF']
movzx ['eax,', 'word', 'ptr', '[ebp+var_38]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0FFFEh']
jnz ['short', 'loc_708E2']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?removeFallback@@YAHPAUMBCSData@@I@Z']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jz ['loc_7098C']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jl ['short', 'loc_7093A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0EF@PGJNLKIL@error?3?5duplicate?5codepage?5byte?5s@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
jmp ['short', 'loc_7098C']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_7098C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0DO@MKHAKDC@duplicate?5codepage?5byte?5sequence@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_C],', 'offset', 'dword_10000']
jl ['short', 'loc_709DF']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0EJ@MOMGMCDC@error?3?5code?5point?5does?5not?5fit?5i@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['short', 'loc_70A19']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
cmp ['eax,', '0FFFEh']
jnz ['short', 'loc_70A17']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?setFallback@@YACPAUMBCSData@@IH@Z']
add ['esp,', '0Ch']
jmp ['loc_70CF8']
jmp ['short', 'loc_70A2D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_C]']
mov ['[ecx+edx*2],', 'ax']
jmp ['loc_70CEF']
movzx ['eax,', 'word', 'ptr', '[ebp+var_38]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0FFFEh']
jge ['loc_70B62']
cmp ['[ebp+var_44],', '0D800h']
jge ['short', 'loc_70A6D']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_70AB8']
cmp ['[ebp+var_44],', '0DFFFh']
jg ['short', 'loc_70AA4']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '3FFh']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10018[ecx]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[edx+ecx*2+2]']
and ['edx,', '3FFh']
lea ['eax,', 'dword_10000[eax+edx]']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_70AB8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2+2]']
mov ['[ebp+var_5C],', 'eax']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jl ['short', 'loc_70B10']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0EF@PGJNLKIL@error?3?5duplicate?5codepage?5byte?5s@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_70CF8']
jmp ['short', 'loc_70B62']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_70B62']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0DO@MKHAKDC@duplicate?5codepage?5byte?5sequence@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['loc_70C05']
cmp ['[ebp+var_44],', '0DBFFh']
jle ['short', 'loc_70B80']
cmp ['[ebp+var_44],', '0E000h']
jnz ['short', 'loc_70B82']
jmp ['short', 'loc_70C00']
cmp ['[ebp+arg_C],', '0FFFFh']
jg ['short', 'loc_70BBF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '0E001h']
mov ['eax,', '[ebp+var_20]']
mov ['[ecx+eax*2],', 'dx']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_C]']
mov ['[ecx+edx*2],', 'ax']
jmp ['short', 'loc_70C00']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '0Ah']
add ['eax,', '0DBC0h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10018[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['[edx+ecx*2],', 'ax']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3FFh']
add ['eax,', '0DC00h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10018[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['[edx+ecx*2],', 'ax']
jmp ['loc_70CA2']
cmp ['[ebp+arg_C],', '0D800h']
jge ['short', 'loc_70C24']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_C]']
mov ['[ecx+edx*2],', 'ax']
jmp ['short', 'loc_70CA2']
cmp ['[ebp+arg_C],', '0FFFFh']
jg ['short', 'loc_70C61']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '0E000h']
mov ['eax,', '[ebp+var_20]']
mov ['[ecx+eax*2],', 'dx']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10018[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_C]']
mov ['[ecx+edx*2],', 'ax']
jmp ['short', 'loc_70CA2']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10018[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['[edx+ecx*2],', 'ax']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3FFh']
add ['eax,', '0DC00h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10018[ecx]']
mov ['ecx,', '[ebp+var_20]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_70CEF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['offset', '??_C@_0FH@KDCIKFOB@internal?5error?3?5byte?5sequence?5re@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_70CF8']
mov ['al,', '1']
jmp ['short', 'loc_70CF8']
jmp ['loc_70521']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN59']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN58']
dd ['offset', '$LN57']
align ['4']
dd ['offset', '$LN41']
dd ['offset', '$LN41']
dd ['offset', '$LN41']
dd ['offset', '$LN31']
dd ['offset', '$LN21']
dd ['offset', '$LN42']
dd ['offset', '$LN44']
dd ['offset', '$LN43']
assume ['cs:_rdata']
public ['??_C@_0FH@KDCIKFOB@internal?5error?3?5byte?5sequence?5re@']
db ["'", '0x%02x:', '0x%s', "(U+%x)',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EJ@MOMGMCDC@error?3?5code?5point?5does?5not?5fit?5i@']
db ["'->0x%s',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DO@MKHAKDC@duplicate?5codepage?5byte?5sequence@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EF@PGJNLKIL@error?3?5duplicate?5codepage?5byte?5s@']
db ["'4x',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EA@FOEEAGEJ@error?3?5byte?5sequence?5ends?5in?5una@']
assume ['cs:_rdata']
public ['??_C@_0EB@IHGDKPFP@error?3?5byte?5sequence?5ends?5in?5sta@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DN@INKFOFLD@error?3?5byte?5sequence?5ends?5in?5ill@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EI@JPCHFLKG@error?3?5byte?5sequence?5too?5long?5by@']
db ["'U+%x)',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0EK@IHMOJLEM@error?3?5byte?5sequence?5too?5short?0?5@']
db ["'", "(U+%x)',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CH@IEHFNBLJ@error?3?5there?5is?5no?5state?5informa@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?printBytes@@YAPADPADPBEH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_71092']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sar ['ecx,', '4']
push ['ecx']
call ['?hexDigit@@YADE@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0Fh']
push ['ecx']
call ['?hexDigit@@YADE@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_71038']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hexDigit@@YADE@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '9']
jg ['short', 'loc_710E6']
movzx ['ecx,', '[ebp+arg_0]']
add ['ecx,', '30h']
mov ['[ebp+var_C1],', 'cl']
jmp ['short', 'loc_710F3']
movzx ['edx,', '[ebp+arg_0]']
add ['edx,', '57h']
mov ['[ebp+var_C1],', 'dl']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setFallback@@YACPAUMBCSData@@IH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10014[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
push ['eax']
call ['_ucm_findFallback']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_71157']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+eax*8+18h],', 'edx']
mov ['al,', '1']
jmp ['short', 'loc_711CB']
jmp ['short', 'loc_711CB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10014[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '2000h']
jl ['short', 'loc_711A0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0DJ@MCOAJFMC@error?3?5too?5many?5toUnicode?5fallba@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_711CB']
jmp ['short', 'loc_711CB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+eax*8+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+eax*8+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_10014[ecx],', 'eax']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DJ@MCOAJFMC@error?3?5too?5many?5toUnicode?5fallba@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeFallback@@YAHPAUMBCSData@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10014[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
push ['eax']
call ['_ucm_findFallback']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_712BF']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_10014[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*8+4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_20]']
mov ['esi,', '[ebp+var_14]']
mov ['edx,', '[esi+edx*8-8]']
mov ['[ecx+eax*8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_20]']
mov ['esi,', '[ebp+var_14]']
mov ['edx,', '[esi+edx*8-4]']
mov ['[ecx+eax*8+4],', 'edx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_10014[ecx],', 'eax']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_712C2']
jmp ['short', 'loc_712C2']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSSingleAddFromUnicode@@YACPAUMBCSData@@PBEHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '2']
jnz ['short', 'loc_71306']
mov ['al,', '1']
jmp ['loc_71675']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF1C[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['[ebp+var_35],', 'cl']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '0Ah']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7134B']
cmp ['[ebp+arg_C],', '1FFFh']
jg ['short', 'loc_7134B']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '4']
and ['eax,', '3Fh']
and ['eax,', '0FFFFFFFCh']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_71357']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '4']
and ['eax,', '3Fh']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['loc_7141F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF20[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_713B5']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_74]']
jnb ['short', 'loc_713B5']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1089A[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['short', 'loc_713B5']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_71390']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '40h']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0FBC0h']
jbe ['short', 'loc_71401']
movzx ['eax,', '[ebp+var_35]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0DE@MJJPHHL@error?3?5too?5many?5stage?52?5entries?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71675']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_74]']
mov ['ds:word_1001C[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_50]']
mov ['ds:dword_6EF20[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
add ['edx,', '[ebp+var_68]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7145C']
cmp ['[ebp+arg_C],', '1FFFh']
jg ['short', 'loc_7145C']
mov ['[ebp+var_44],', '40h']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3Fh']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_7146C']
mov ['[ebp+var_44],', '10h']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0Fh']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1089C[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['loc_71553']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_714C7']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_74]']
jnb ['short', 'loc_714C7']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
test ['edx,', 'edx']
jnz ['short', 'loc_714C7']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_714A5']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', 'offset', 'dword_10000']
jbe ['short', 'loc_71513']
movzx ['eax,', '[ebp+var_35]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0DA@INMEGIJN@error?3?5too?5many?5code?5points?5at?5U@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71675']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_50]']
jnb ['short', 'loc_71547']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_74]']
mov ['ds:word_1089C[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '10h']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_71519']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_50]']
mov ['ds:dword_6EF24[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1089C[ecx+eax*2]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
mov ['edx,', '[ebp+var_68]']
lea ['eax,', '[ecx+edx*2]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jg ['short', 'loc_71593']
movzx ['eax,', '[ebp+var_35]']
or ['eax,', '0F00h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'ax']
jmp ['short', 'loc_715D1']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '0E000h']
cmp ['eax,', '1900h']
jb ['short', 'loc_715B1']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '0F0000h']
cmp ['eax,', 'offset', 'dword_20000']
jnb ['short', 'loc_715C2']
movzx ['eax,', '[ebp+var_35]']
or ['eax,', '0C00h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'ax']
jmp ['short', 'loc_715D1']
movzx ['eax,', '[ebp+var_35]']
or ['eax,', '800h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '100h']
jl ['loc_71673']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jl ['short', 'loc_7162B']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFh']
mov ['esi,', 'esp']
push ['eax']
movzx ['ecx,', '[ebp+var_35]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['offset', '??_C@_0ED@DFBEPMBN@error?3?5duplicate?5Unicode?5code?5po@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_71675']
jmp ['short', 'loc_71673']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_71673']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFh']
mov ['esi,', 'esp']
push ['eax']
movzx ['ecx,', '[ebp+var_35]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['offset', '??_C@_0DM@NGGBIDF@duplicate?5Unicode?5code?5point?5at?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DM@NGGBIDF@duplicate?5Unicode?5code?5point?5at?5@']
assume ['cs:_rdata']
public ['??_C@_0ED@DFBEPMBN@error?3?5duplicate?5Unicode?5code?5po@']
db ['0Ah,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DA@INMEGIJN@error?3?5too?5many?5code?5points?5at?5U@']
assume ['cs:_rdata']
public ['??_C@_0DE@MJJPHHL@error?3?5too?5many?5stage?52?5entries?5@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSAddFromUnicode@@YACPAUMBCSData@@PBEHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20410[ecx]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
movsx ['edx,', 'ds:byte_20419[ecx]']
cmp ['edx,', '0Ch']
jnz ['short', 'loc_71824']
movsx ['eax,', 'byte', 'ptr', 'ds:_IGNORE_SISO_CHECK']
test ['eax,', 'eax']
jnz ['short', 'loc_71824']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Eh']
jz ['short', 'loc_717DA']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Fh']
jnz ['short', 'loc_71824']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0EG@CCNIKDPG@error?3?5illegal?5mapping?5to?5SI?5or?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71EDA']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '1']
jnz ['short', 'loc_71879']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_71879']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_71879']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['offset', '??_C@_0DN@MPOALDBM@error?3?5unable?5to?5encode?5a?5?$HM1?5fal@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71EDA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF1C[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '0Ah']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_718BF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:word_6F728[eax]']
cmp ['[ebp+arg_C],', 'ecx']
jg ['short', 'loc_718BF']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '4']
and ['eax,', '3Fh']
and ['eax,', '0FFFFFFFCh']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_718CE']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '4']
and ['eax,', '3Fh']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['loc_71A08']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF20[eax]']
mov ['[ebp+var_B0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_71945']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_BC]']
cmp ['eax,', '[ebp+var_B0]']
jnb ['short', 'loc_71945']
mov ['eax,', '[ebp+var_B0]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ds:dword_30018[ecx+eax*4],', '0']
jnz ['short', 'loc_71945']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_71913']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '40h']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '0FBC0h']
jbe ['short', 'loc_719AA']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0DC@LIKCDKFK@error?3?5too?5many?5stage?52?5entries?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71EDA']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_8C]']
jnb ['short', 'loc_719F9']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_B0]']
mov ['ds:word_1001C[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '40h']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_719B3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8C]']
mov ['ds:dword_6EF20[eax],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
add ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_71A53']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:word_6F728[eax]']
cmp ['[ebp+arg_C],', 'ecx']
jg ['short', 'loc_71A53']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '6']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3Fh']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_71A68']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '4']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0Fh']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ds:dword_3001C[ecx+eax*4],', '0']
jnz ['loc_71C07']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
mov ['[ebp+var_B0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['loc_71B39']
cmp ['[ebp+var_A4],', '10h']
jb ['loc_71B39']
mov ['eax,', '[ebp+var_A4]']
and ['eax,', '0FFFFFFF0h']
imul ['eax,', '[ebp+var_74]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_71AD8']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
cmp ['eax,', '[ebp+var_D4]']
jnb ['short', 'loc_71B00']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
test ['edx,', 'edx']
jnz ['short', 'loc_71B00']
jmp ['short', 'loc_71AC9']
mov ['eax,', '[ebp+var_C8]']
shr ['eax,', '4']
xor ['edx,', 'edx']
div ['[ebp+var_74]']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
shl ['eax,', '4']
imul ['eax,', '[ebp+var_74]']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '[ebp+var_80]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '14h']
cmp ['[ebp+var_8C],', 'eax']
jbe ['short', 'loc_71BA0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0CO@FCICPMNC@error?3?5too?5many?5code?5points?5at?5U@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71EDA']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_8C]']
jnb ['short', 'loc_71BF8']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '4']
xor ['edx,', 'edx']
div ['[ebp+var_74]']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ebp+arg_0]']
mov ['ds:dword_3001C[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '4']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_71BA9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8C]']
mov ['ds:dword_6EF24[eax],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', 'ds:dword_3001C[ecx+eax*4]']
shl ['edx,', '4']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_71C67']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'ds:word_6F728[eax]']
cmp ['[ebp+arg_C],', 'ecx']
jg ['short', 'loc_71C67']
cmp ['[ebp+var_68],', '0FFFFh']
jbe ['short', 'loc_71C52']
mov ['eax,', '0FEFFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:word_6F728[ecx],', 'ax']
jmp ['short', 'loc_71C67']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_68]']
mov ['ds:word_6EF28[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '2']
jz ['short', 'loc_71CC6']
cmp ['[ebp+var_19C],', '3']
jz ['short', 'loc_71CAC']
cmp ['[ebp+var_19C],', '4']
jz ['short', 'loc_71C9A']
jmp ['short', 'loc_71CE0']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '[ebp+var_A4]']
imul ['eax,', '[ebp+var_74]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '2']
jz ['short', 'loc_71D3A']
cmp ['[ebp+var_19C],', '3']
jz ['short', 'loc_71D4F']
cmp ['[ebp+var_19C],', '4']
jz ['short', 'loc_71DA8']
jmp ['short', 'loc_71DB8']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_50]']
mov ['[eax],', 'cx']
jmp ['short', 'loc_71DB8']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '10h']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
or ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
or ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_71DB8']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
shr ['eax,', '4']
add ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_0]']
and ['edx,', 'ds:dword_3001C[ecx+eax*4]']
jnz ['short', 'loc_71DEA']
cmp ['[ebp+var_5C],', '0']
jz ['loc_71E94']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jl ['short', 'loc_71E42']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0EB@MIKNBNCN@error?3?5duplicate?5Unicode?5code?5po@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_71EDA']
jmp ['short', 'loc_71E94']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_71E94']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['?printBytes@@YAPADPADPBEH@Z']
add ['esp,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0DK@OEANOAED@duplicate?5Unicode?5code?5point?5at?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jg ['short', 'loc_71ED8']
mov ['eax,', '[ebp+var_A4]']
shr ['eax,', '4']
add ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_0]']
or ['edx,', 'ds:dword_3001C[ecx+eax*4]']
mov ['eax,', '[ebp+var_A4]']
shr ['eax,', '4']
add ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_3001C[ecx+eax*4],', 'edx']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN48']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '19Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN47']
dd ['offset', '$LN46']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DK@OEANOAED@duplicate?5Unicode?5code?5point?5at?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EB@MIKNBNCN@error?3?5duplicate?5Unicode?5code?5po@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CO@FCICPMNC@error?3?5too?5many?5code?5points?5at?5U@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DC@LIKCDKFK@error?3?5too?5many?5stage?52?5entries?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DN@MPOALDBM@error?3?5unable?5to?5encode?5a?5?$HM1?5fal@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EG@CCNIKDPG@error?3?5illegal?5mapping?5to?5SI?5or?5@']
db ["'x%s',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSPostprocess@@YAXPAUMBCSData@@PBUUConverterStaticData@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:dword_20408[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'edx']
movzx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_10014[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', 'offset', 'dword_10018']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucm_optimizeStates']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?transformEUC@@YACPAUMBCSData@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7211B']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_72155']
cmp ['[ebp+var_14],', '1']
jnz ['short', 'loc_72149']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?singleCompactStage3@@YAXPAUMBCSData@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?singleCompactStage2@@YAXPAUMBCSData@@@Z']
add ['esp,', '4']
jmp ['short', 'loc_72155']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?compactStage2@@YAXPAUMBCSData@@@Z']
add ['esp,', '4']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['loc_721EB']
cmp ['[ebp+var_14],', '1']
jnz ['short', 'loc_72176']
mov ['[ebp+var_E8],', 'offset', '??_C@_02KMALDIDP@16?$AA@']
jmp ['short', 'loc_72180']
mov ['[ebp+var_E8],', 'offset', '??_C@_02MLODCJFF@32?$AA@']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF20[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', 'ds:dword_6EF20[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
push ['offset', '??_C@_0DG@BECNOHKB@fromUnicode?5number?5of?5uint?$CFs_t?5i@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', 'ds:dword_6EF24[eax]']
xor ['edx,', 'edx']
div ['[ebp+var_20]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', 'ds:dword_6EF24[ecx]']
xor ['edx,', 'edx']
div ['[ebp+var_20]']
push ['eax']
mov ['edx,', '[ebp+var_20]']
push ['edx']
push ['offset', '??_C@_0EC@FJCFIHFI@fromUnicode?5number?5of?5?$CFd?9byte?5st@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EC@FJCFIHFI@fromUnicode?5number?5of?5?$CFd?9byte?5st@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DG@BECNOHKB@fromUnicode?5number?5of?5uint?$CFs_t?5i@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02MLODCJFF@32?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02KMALDIDP@16?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?transformEUC@@YACPAUMBCSData@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20410[ecx]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '3']
jnb ['short', 'loc_722BE']
xor ['al,', 'al']
jmp ['loc_7253F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF1C[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_2C],', '4']
jnz ['short', 'loc_722E5']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_722F7']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_72331']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jz ['short', 'loc_7232F']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '8Eh']
jz ['short', 'loc_7232F']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '8Fh']
jz ['short', 'loc_7232F']
xor ['al,', 'al']
jmp ['loc_7253F']
jmp ['short', 'loc_722EE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF1C[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['ds:byte_20419[edx],', 'al']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
imul ['eax,', '[ebp+var_38]']
xor ['edx,', 'edx']
div ['[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF24[ecx],', 'eax']
cmp ['[ebp+var_2C],', '3']
jnz ['loc_72433']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_72389']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_38]']
jnb ['loc_7242E']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jnz ['short', 'loc_723C9']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_50]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_72420']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '8Eh']
jnz ['short', 'loc_723FB']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
and ['ecx,', '7Fh']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_50]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_72420']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
and ['eax,', '7Fh']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_50]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_72380']
jmp ['loc_7253D']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_68],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_72451']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_38]']
jnb ['loc_7253D']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '4']
mov ['[ebp+var_68],', 'edx']
cmp ['[ebp+var_20],', '0FFFFFFh']
ja ['short', 'loc_724B5']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
jmp ['loc_72538']
cmp ['[ebp+var_20],', '8EFFFFFFh']
ja ['short', 'loc_724FC']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '10h']
and ['eax,', '7Fh']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
jmp ['short', 'loc_72538']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '8']
and ['eax,', '7Fh']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
jmp ['loc_72448']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?singleCompactStage2@@YAXPAUMBCSData@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8DC]']
mov ['ecx,', '237h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_7E8],', 'ax']
mov ['eax,', '40h']
mov ['[ebp+var_818],', 'ax']
mov ['cx,', '[ebp+var_818]']
mov ['[ebp+var_800],', 'cx']
movzx ['eax,', '[ebp+var_800]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF20[ecx]']
jnb ['loc_727D1']
movzx ['eax,', '[ebp+var_818]']
sub ['eax,', '1']
mov ['[ebp+var_80C],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_7F4],', 'ax']
jmp ['short', 'loc_725D7']
mov ['ax,', '[ebp+var_7F4]']
add ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
cmp ['eax,', '40h']
jge ['short', 'loc_72623']
movzx ['eax,', '[ebp+var_800]']
movzx ['ecx,', '[ebp+var_7F4]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'ds:word_1089C[edx+eax*2]']
test ['eax,', 'eax']
jnz ['short', 'loc_72623']
movzx ['eax,', '[ebp+var_80C]']
movzx ['ecx,', '[ebp+var_7F4]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'ds:word_1089C[edx+eax*2]']
test ['eax,', 'eax']
jnz ['short', 'loc_72623']
jmp ['short', 'loc_725C5']
movzx ['eax,', '[ebp+var_7F4]']
test ['eax,', 'eax']
jle ['loc_726EE']
movzx ['eax,', '[ebp+var_818]']
movzx ['ecx,', '[ebp+var_7F4]']
sub ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_800]']
sar ['edx,', '6']
mov ['[ebp+edx*2+var_7E8],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
movzx ['ecx,', '[ebp+var_800]']
add ['ecx,', 'eax']
mov ['[ebp+var_800],', 'cx']
movzx ['eax,', '[ebp+var_7F4]']
mov ['ecx,', '40h']
sub ['ecx,', 'eax']
mov ['[ebp+var_7F4],', 'cx']
jmp ['short', 'loc_72694']
mov ['ax,', '[ebp+var_7F4]']
sub ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
test ['eax,', 'eax']
jle ['short', 'loc_726E9']
movzx ['eax,', '[ebp+var_800]']
movzx ['ecx,', '[ebp+var_818]']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ax,', 'ds:word_1089C[esi+eax*2]']
mov ['ds:word_1089C[edx+ecx*2],', 'ax']
mov ['cx,', '[ebp+var_818]']
add ['cx,', '1']
mov ['[ebp+var_818],', 'cx']
mov ['dx,', '[ebp+var_800]']
add ['dx,', '1']
mov ['[ebp+var_800],', 'dx']
jmp ['short', 'loc_72682']
jmp ['loc_727CC']
movzx ['eax,', '[ebp+var_818]']
movzx ['ecx,', '[ebp+var_800]']
cmp ['eax,', 'ecx']
jge ['loc_72794']
movzx ['eax,', '[ebp+var_800]']
sar ['eax,', '6']
mov ['cx,', '[ebp+var_818]']
mov ['[ebp+eax*2+var_7E8],', 'cx']
mov ['eax,', '40h']
mov ['[ebp+var_7F4],', 'ax']
jmp ['short', 'loc_7273D']
mov ['ax,', '[ebp+var_7F4]']
sub ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
test ['eax,', 'eax']
jle ['short', 'loc_72792']
movzx ['eax,', '[ebp+var_800]']
movzx ['ecx,', '[ebp+var_818]']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ax,', 'ds:word_1089C[esi+eax*2]']
mov ['ds:word_1089C[edx+ecx*2],', 'ax']
mov ['cx,', '[ebp+var_818]']
add ['cx,', '1']
mov ['[ebp+var_818],', 'cx']
mov ['dx,', '[ebp+var_800]']
add ['dx,', '1']
mov ['[ebp+var_800],', 'dx']
jmp ['short', 'loc_7272B']
jmp ['short', 'loc_727CC']
movzx ['eax,', '[ebp+var_800]']
sar ['eax,', '6']
mov ['cx,', '[ebp+var_800]']
mov ['[ebp+eax*2+var_7E8],', 'cx']
movzx ['eax,', '[ebp+var_818]']
add ['eax,', '40h']
mov ['[ebp+var_818],', 'ax']
mov ['cx,', '[ebp+var_818]']
mov ['[ebp+var_800],', 'cx']
jmp ['loc_72593']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_7282C']
movzx ['eax,', '[ebp+var_818]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF20[ecx]']
jnb ['short', 'loc_7282C']
movzx ['eax,', '[ebp+var_818]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF20[ecx]']
sub ['edx,', 'eax']
shl ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
movzx ['eax,', '[ebp+var_818]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF20[ecx]']
push ['edx']
push ['offset', '??_C@_0EE@JKLNCONI@compacting?5stage?52?5from?5stage2To@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_818]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF20[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_7F4],', 'ax']
jmp ['short', 'loc_72859']
mov ['ax,', '[ebp+var_7F4]']
add ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
cmp ['eax,', '440h']
jge ['short', 'loc_72898']
movzx ['eax,', '[ebp+var_7F4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
sar ['edx,', '6']
movzx ['eax,', '[ebp+var_7F4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+edx*2+var_7E8]']
mov ['ds:word_1001C[ecx+eax*2],', 'dx']
jmp ['short', 'loc_72847']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN23']
dd ['offset', '$LN22']
assume ['cs:_rdata']
public ['??_C@_0EE@JKLNCONI@compacting?5stage?52?5from?5stage2To@']
db ["'s',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?singleCompactStage3@@YAXPAUMBCSData@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '2108h']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2108]']
mov ['ecx,', '842h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:dword_6EF1C[eax]']
mov ['[ebp+var_C],', 'ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_2014],', 'ax']
mov ['eax,', '10h']
mov ['[ebp+var_2044],', 'ax']
mov ['cx,', '[ebp+var_2044]']
mov ['[ebp+var_202C],', 'cx']
movzx ['eax,', '[ebp+var_202C]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF24[ecx]']
jnb ['loc_72BA5']
movzx ['eax,', '[ebp+var_2044]']
sub ['eax,', '1']
mov ['[ebp+var_2038],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_2020],', 'ax']
jmp ['short', 'loc_729C3']
mov ['ax,', '[ebp+var_2020]']
add ['ax,', '1']
mov ['[ebp+var_2020],', 'ax']
movzx ['eax,', '[ebp+var_2020]']
cmp ['eax,', '10h']
jge ['short', 'loc_72A07']
movzx ['eax,', '[ebp+var_202C]']
movzx ['ecx,', '[ebp+var_2020]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
test ['eax,', 'eax']
jnz ['short', 'loc_72A07']
movzx ['eax,', '[ebp+var_2038]']
movzx ['ecx,', '[ebp+var_2020]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
test ['eax,', 'eax']
jnz ['short', 'loc_72A07']
jmp ['short', 'loc_729B1']
movzx ['eax,', '[ebp+var_2020]']
test ['eax,', 'eax']
jle ['loc_72ACA']
movzx ['eax,', '[ebp+var_2044]']
movzx ['ecx,', '[ebp+var_2020]']
sub ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_202C]']
sar ['edx,', '4']
mov ['[ebp+edx*2+var_2014],', 'ax']
movzx ['eax,', '[ebp+var_2020]']
movzx ['ecx,', '[ebp+var_202C]']
add ['ecx,', 'eax']
mov ['[ebp+var_202C],', 'cx']
movzx ['eax,', '[ebp+var_2020]']
mov ['ecx,', '10h']
sub ['ecx,', 'eax']
mov ['[ebp+var_2020],', 'cx']
jmp ['short', 'loc_72A78']
mov ['ax,', '[ebp+var_2020]']
sub ['ax,', '1']
mov ['[ebp+var_2020],', 'ax']
movzx ['eax,', '[ebp+var_2020]']
test ['eax,', 'eax']
jle ['short', 'loc_72AC5']
movzx ['eax,', '[ebp+var_202C]']
movzx ['ecx,', '[ebp+var_2044]']
mov ['edx,', '[ebp+var_C]']
mov ['esi,', '[ebp+var_C]']
mov ['ax,', '[esi+eax*2]']
mov ['[edx+ecx*2],', 'ax']
mov ['cx,', '[ebp+var_2044]']
add ['cx,', '1']
mov ['[ebp+var_2044],', 'cx']
mov ['dx,', '[ebp+var_202C]']
add ['dx,', '1']
mov ['[ebp+var_202C],', 'dx']
jmp ['short', 'loc_72A66']
jmp ['loc_72BA0']
movzx ['eax,', '[ebp+var_2044]']
movzx ['ecx,', '[ebp+var_202C]']
cmp ['eax,', 'ecx']
jge ['loc_72B68']
movzx ['eax,', '[ebp+var_202C]']
sar ['eax,', '4']
mov ['cx,', '[ebp+var_2044]']
mov ['[ebp+eax*2+var_2014],', 'cx']
mov ['eax,', '10h']
mov ['[ebp+var_2020],', 'ax']
jmp ['short', 'loc_72B19']
mov ['ax,', '[ebp+var_2020]']
sub ['ax,', '1']
mov ['[ebp+var_2020],', 'ax']
movzx ['eax,', '[ebp+var_2020]']
test ['eax,', 'eax']
jle ['short', 'loc_72B66']
movzx ['eax,', '[ebp+var_202C]']
movzx ['ecx,', '[ebp+var_2044]']
mov ['edx,', '[ebp+var_C]']
mov ['esi,', '[ebp+var_C]']
mov ['ax,', '[esi+eax*2]']
mov ['[edx+ecx*2],', 'ax']
mov ['cx,', '[ebp+var_2044]']
add ['cx,', '1']
mov ['[ebp+var_2044],', 'cx']
mov ['dx,', '[ebp+var_202C]']
add ['dx,', '1']
mov ['[ebp+var_202C],', 'dx']
jmp ['short', 'loc_72B07']
jmp ['short', 'loc_72BA0']
movzx ['eax,', '[ebp+var_202C]']
sar ['eax,', '4']
mov ['cx,', '[ebp+var_202C]']
mov ['[ebp+eax*2+var_2014],', 'cx']
movzx ['eax,', '[ebp+var_2044]']
add ['eax,', '10h']
mov ['[ebp+var_2044],', 'ax']
mov ['cx,', '[ebp+var_2044]']
mov ['[ebp+var_202C],', 'cx']
jmp ['loc_7297F']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_72C00']
movzx ['eax,', '[ebp+var_2044]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF24[ecx]']
jnb ['short', 'loc_72C00']
movzx ['eax,', '[ebp+var_2044]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF24[ecx]']
sub ['edx,', 'eax']
shl ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
movzx ['eax,', '[ebp+var_2044]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF24[ecx]']
push ['edx']
push ['offset', '??_C@_0EE@BOAKNGOC@compacting?5stage?53?5from?5stage3To@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_2044]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF24[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_2020],', 'ax']
jmp ['short', 'loc_72C2D']
mov ['ax,', '[ebp+var_2020]']
add ['ax,', '1']
mov ['[ebp+var_2020],', 'ax']
movzx ['eax,', '[ebp+var_2020]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF20[ecx]']
jnb ['short', 'loc_72C70']
movzx ['eax,', '[ebp+var_2020]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1089C[ecx+eax*2]']
sar ['edx,', '4']
movzx ['eax,', '[ebp+var_2020]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+edx*2+var_2014]']
mov ['ds:word_1089C[ecx+eax*2],', 'dx']
jmp ['short', 'loc_72C1B']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN23_0']
dd ['offset', '$LN22_0']
assume ['cs:_rdata']
public ['??_C@_0EE@BOAKNGOC@compacting?5stage?53?5from?5stage3To@']
db ["'s',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compactStage2@@YAXPAUMBCSData@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8DC]']
mov ['ecx,', '237h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_7E8],', 'ax']
mov ['eax,', '40h']
mov ['[ebp+var_818],', 'ax']
mov ['cx,', '[ebp+var_818]']
mov ['[ebp+var_800],', 'cx']
movzx ['eax,', '[ebp+var_800]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF20[ecx]']
jnb ['loc_72F7D']
movzx ['eax,', '[ebp+var_818]']
sub ['eax,', '1']
mov ['[ebp+var_80C],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_7F4],', 'ax']
jmp ['short', 'loc_72D8B']
mov ['ax,', '[ebp+var_7F4]']
add ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
cmp ['eax,', '40h']
jge ['short', 'loc_72DD3']
movzx ['eax,', '[ebp+var_800]']
movzx ['ecx,', '[ebp+var_7F4]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['ds:dword_3001C[edx+eax*4],', '0']
jnz ['short', 'loc_72DD3']
movzx ['eax,', '[ebp+var_80C]']
movzx ['ecx,', '[ebp+var_7F4]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['ds:dword_3001C[edx+eax*4],', '0']
jnz ['short', 'loc_72DD3']
jmp ['short', 'loc_72D79']
movzx ['eax,', '[ebp+var_7F4]']
test ['eax,', 'eax']
jle ['loc_72E9C']
movzx ['eax,', '[ebp+var_818]']
movzx ['ecx,', '[ebp+var_7F4]']
sub ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_800]']
sar ['edx,', '6']
mov ['[ebp+edx*2+var_7E8],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
movzx ['ecx,', '[ebp+var_800]']
add ['ecx,', 'eax']
mov ['[ebp+var_800],', 'cx']
movzx ['eax,', '[ebp+var_7F4]']
mov ['ecx,', '40h']
sub ['ecx,', 'eax']
mov ['[ebp+var_7F4],', 'cx']
jmp ['short', 'loc_72E44']
mov ['ax,', '[ebp+var_7F4]']
sub ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
test ['eax,', 'eax']
jle ['short', 'loc_72E97']
movzx ['eax,', '[ebp+var_800]']
movzx ['ecx,', '[ebp+var_818]']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', 'ds:dword_3001C[esi+eax*4]']
mov ['ds:dword_3001C[edx+ecx*4],', 'eax']
mov ['cx,', '[ebp+var_818]']
add ['cx,', '1']
mov ['[ebp+var_818],', 'cx']
mov ['dx,', '[ebp+var_800]']
add ['dx,', '1']
mov ['[ebp+var_800],', 'dx']
jmp ['short', 'loc_72E32']
jmp ['loc_72F78']
movzx ['eax,', '[ebp+var_818]']
movzx ['ecx,', '[ebp+var_800]']
cmp ['eax,', 'ecx']
jge ['loc_72F40']
movzx ['eax,', '[ebp+var_800]']
sar ['eax,', '6']
mov ['cx,', '[ebp+var_818]']
mov ['[ebp+eax*2+var_7E8],', 'cx']
mov ['eax,', '40h']
mov ['[ebp+var_7F4],', 'ax']
jmp ['short', 'loc_72EEB']
mov ['ax,', '[ebp+var_7F4]']
sub ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
test ['eax,', 'eax']
jle ['short', 'loc_72F3E']
movzx ['eax,', '[ebp+var_800]']
movzx ['ecx,', '[ebp+var_818]']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', 'ds:dword_3001C[esi+eax*4]']
mov ['ds:dword_3001C[edx+ecx*4],', 'eax']
mov ['cx,', '[ebp+var_818]']
add ['cx,', '1']
mov ['[ebp+var_818],', 'cx']
mov ['dx,', '[ebp+var_800]']
add ['dx,', '1']
mov ['[ebp+var_800],', 'dx']
jmp ['short', 'loc_72ED9']
jmp ['short', 'loc_72F78']
movzx ['eax,', '[ebp+var_800]']
sar ['eax,', '6']
mov ['cx,', '[ebp+var_800]']
mov ['[ebp+eax*2+var_7E8],', 'cx']
movzx ['eax,', '[ebp+var_818]']
add ['eax,', '40h']
mov ['[ebp+var_818],', 'ax']
mov ['cx,', '[ebp+var_818]']
mov ['[ebp+var_800],', 'cx']
jmp ['loc_72D47']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_72FD9']
movzx ['eax,', '[ebp+var_818]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ds:dword_6EF20[ecx]']
jnb ['short', 'loc_72FD9']
movzx ['eax,', '[ebp+var_818]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF20[ecx]']
sub ['edx,', 'eax']
shl ['edx,', '2']
mov ['esi,', 'esp']
push ['edx']
movzx ['eax,', '[ebp+var_818]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', 'ds:dword_6EF20[ecx]']
push ['edx']
push ['offset', '??_C@_0EE@JKLNCONI@compacting?5stage?52?5from?5stage2To@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_818]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ds:dword_6EF20[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_7F4],', 'ax']
jmp ['short', 'loc_73006']
mov ['ax,', '[ebp+var_7F4]']
add ['ax,', '1']
mov ['[ebp+var_7F4],', 'ax']
movzx ['eax,', '[ebp+var_7F4]']
cmp ['eax,', '440h']
jge ['short', 'loc_73045']
movzx ['eax,', '[ebp+var_7F4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
sar ['edx,', '6']
movzx ['eax,', '[ebp+var_7F4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+edx*2+var_7E8]']
mov ['ds:word_1001C[ecx+eax*2],', 'dx']
jmp ['short', 'loc_72FF4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN23_1']
dd ['offset', '$LN22_1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?MBCSWrite@@YAIPAUNewConverter@@PBUUConverterStaticData@@PAUUNewDataMemory@@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_90],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_8F],', 'ax']
mov ['[ebp+var_8D],', 'al']
mov ['[ebp+var_8C],', '0']
mov ['[ebp+var_88],', '0']
mov ['[ebp+var_84],', '0']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_7C],', '0']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_6C],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF20[eax]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'ds:byte_6F72B[eax]']
test ['ecx,', 'ecx']
jz ['loc_7325C']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'ds:word_6F728[eax]']
add ['ecx,', '1']
mov ['[ebp+var_9C],', 'ecx']
mov ['[ebp+var_A8],', '0']
mov ['eax,', '[ebp+var_9C]']
sar ['eax,', '0Ah']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_9C]']
and ['eax,', '3FFh']
jz ['short', 'loc_731A7']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'ds:word_1001C[ecx+eax*2]']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '0']
jz ['short', 'loc_731A7']
mov ['eax,', '[ebp+var_9C]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_731E1']
cmp ['[ebp+var_48],', '0']
jle ['short', 'loc_731D5']
mov ['eax,', '[ebp+var_48]']
sub ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'ds:word_1001C[edx+ecx*2]']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '0']
jnz ['short', 'loc_731D5']
jmp ['short', 'loc_731A7']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '40h']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_70]']
or ['eax,', '40h']
mov ['[ebp+var_70],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'eax']
movsx ['eax,', 'byte', 'ptr', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_7325A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', 'ds:dword_6EF20[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['offset', '??_C@_0DN@KGEGBIPJ@?$CL?5omitting?5?$CFlu?5out?5of?5?$CFlu?5stage2@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[ecx+edx*4]']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0CB@FBPIBKCK@?$CL?5total?5size?5savings?3?5?$CFlu?5bytes?6@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_73263']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4Fh]']
and ['ecx,', '1']
jz ['short', 'loc_73278']
mov ['[ebp+var_54],', '440h']
jmp ['short', 'loc_7327F']
mov ['[ebp+var_54],', '40h']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
cmp ['ds:dword_20410[ecx],', '1']
jnz ['short', 'loc_73307']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_732A0']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_54]']
jge ['short', 'loc_732CC']
movzx ['eax,', 'word', 'ptr', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_C]']
movzx ['ecx,', 'ds:word_1001C[edx+ecx*2]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[ebp+var_C]']
mov ['ds:word_1001C[eax+edx*2],', 'cx']
jmp ['short', 'loc_73297']
mov ['eax,', '[ebp+var_24]']
lea ['ecx,', '[eax+eax+1]']
and ['ecx,', '0FFFFFFFEh']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_C]']
mov ['ds:dword_6EF24[edx],', 'ecx']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_73302']
mov ['byte', 'ptr', '[ebp+var_8F+1],', '1Fh']
jmp ['loc_73387']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_73319']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_54]']
jge ['short', 'loc_7334A']
movzx ['eax,', 'word', 'ptr', '[ebp+var_54]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_C]']
movzx ['ecx,', 'ds:word_1001C[edx+ecx*2]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[ebp+var_C]']
mov ['ds:word_1001C[eax+edx*2],', 'cx']
jmp ['short', 'loc_73310']
mov ['eax,', '[ebp+var_24]']
shl ['eax,', '2']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'ds:byte_6F72A[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_73387']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'ds:word_6F728[eax]']
add ['ecx,', '1']
sar ['ecx,', '6']
mov ['[ebp+var_3C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'ds:word_6F728[eax]']
sar ['ecx,', '8']
mov ['byte', 'ptr', '[ebp+var_8F+1],', 'cl']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
add ['ecx,', '3']
and ['ecx,', '0FFFFFFFCh']
mov ['edx,', '[ebp+var_C]']
mov ['ds:dword_6EF24[edx],', 'ecx']
mov ['eax,', '[ebp+var_70]']
and ['eax,', '0FFC0h']
jz ['short', 'loc_733CA']
mov ['[ebp+var_90],', '5']
mov ['eax,', '[ebp+var_70]']
and ['eax,', '40h']
jz ['short', 'loc_733C1']
mov ['[ebp+var_60],', '0Ah']
jmp ['short', 'loc_733C8']
mov ['[ebp+var_60],', '9']
jmp ['short', 'loc_733D8']
mov ['[ebp+var_90],', '4']
mov ['[ebp+var_60],', '8']
mov ['byte', 'ptr', '[ebp+var_8F],', '4']
mov ['eax,', '[ebp+var_70]']
or ['eax,', '[ebp+var_60]']
mov ['[ebp+var_70],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20408[ecx]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_10014[eax]']
mov ['[ebp+var_88],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20408[ecx]']
shl ['edx,', '0Ah']
mov ['eax,', '[ebp+var_60]']
lea ['ecx,', '[edx+eax*4]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', 'ds:dword_10014[edx]']
lea ['ecx,', '[ecx+eax*8]']
mov ['[ebp+var_84],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20414[ecx]']
mov ['eax,', '[ebp+var_84]']
lea ['ecx,', '[eax+edx*2]']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_80]']
lea ['edx,', '[ecx+eax*2]']
add ['edx,', '[ebp+var_24]']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_7C]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_70]']
and ['eax,', '40h']
jnz ['short', 'loc_73480']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_74]']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
movzx ['edx,', 'ds:byte_20419[ecx]']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '2']
jz ['short', 'loc_734E2']
cmp ['[ebp+var_30],', '0FFFFFFh']
jbe ['short', 'loc_734D6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_30]']
push ['eax']
push ['offset', '??_C@_0DJ@MAFGALNE@error?3?5offset?50x?$CFlx?5to?5extension@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_73617']
mov ['eax,', '[ebp+var_30]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_78]']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_60]']
shl ['eax,', '2']
push ['eax']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8C]']
shl ['eax,', '0Ah']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_10014[eax]']
shl ['ecx,', '3']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '14h']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', 'ds:dword_20414[ecx]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_10018[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_54]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', 'offset', 'word_1001C']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
cmp ['ds:dword_20410[ecx],', '1']
jnz ['short', 'loc_735AC']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', 'word_1089C[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
jmp ['short', 'loc_735CA']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', 'dword_3001C[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_70]']
and ['eax,', '40h']
jnz ['short', 'loc_735F2']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', 'ds:dword_6EF24[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', 'ds:dword_6EF1C[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
cmp ['[ebp+var_3C],', '0']
jbe ['short', 'loc_73614']
mov ['eax,', '[ebp+var_3C]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', 'offset', 'word_6EF28']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN35']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN34']
dd ['offset', '$LN33']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DJ@MAFGALNE@error?3?5offset?50x?$CFlx?5to?5extension@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CB@FBPIBKCK@?$CL?5total?5size?5savings?3?5?$CFlu?5bytes?6@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DN@KGEGBIPJ@?$CL?5omitting?5?$CFlu?5out?5of?5?$CFlu?5stage2@']
extrn ['_SMALL:near']
extrn ['_memset:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__exit:near']
extrn ['__imp__printf:near']
extrn ['_uprv_malloc_56:near']
extrn ['_uprv_free_56:near']
extrn ['_ucm_countChars:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_VERBOSE:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_ucm_findFallback:near']
extrn ['_IGNORE_SISO_CHECK:near']
extrn ['_ucm_optimizeStates:near']
extrn ['__chkstk:near']
extrn ['_udata_writeBlock:near']
end

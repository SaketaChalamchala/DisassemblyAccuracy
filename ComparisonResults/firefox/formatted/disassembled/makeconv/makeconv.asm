endp
_uprv_isInvariantUnicodeString proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_isInvariantUString_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_main		proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$_main']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '600h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_60C]']
mov ['ecx,', '180h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_u_getVersion_56']
add ['esp,', '4']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
push ['offset', 'dword_160']
call ['_memcpy']
add ['esp,', '0Ch']
call ['_u_getDataDirectory_56']
mov ['ds:dword_1B8,', 'eax']
push ['offset', '_options']
push ['9']
mov ['eax,', '[ebp+argv]']
push ['eax']
mov ['ecx,', '[ebp+argc]']
push ['ecx']
call ['_u_parseArgs']
add ['esp,', '10h']
mov ['[ebp+argc],', 'eax']
cmp ['[ebp+argc],', '0']
jge ['short', 'loc_358']
mov ['eax,', '[ebp+argc]']
neg ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+argv]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_365']
cmp ['[ebp+argc],', '2']
jge ['short', 'loc_365']
mov ['[ebp+argc],', '0FFFFFFFFh']
cmp ['[ebp+argc],', '0']
jl ['short', 'loc_385']
movsx ['eax,', 'ds:byte_176']
test ['eax,', 'eax']
jnz ['short', 'loc_385']
movsx ['eax,', 'ds:byte_18A']
test ['eax,', 'eax']
jz ['loc_419']
cmp ['[ebp+argc],', '0']
jge ['short', 'loc_3A5']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
mov ['[ebp+var_60C],', 'eax']
jmp ['short', 'loc_3BD']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['[ebp+var_60C],', 'eax']
mov ['eax,', '[ebp+var_60C]']
mov ['[ebp+File],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+argv]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['offset', '??_C@_0BIH@LEKGGKP@usage?3?5?$CFs?5?$FL?9options?$FN?5files?4?4?4?6?7r@']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BEA@MBIOMLNL@?7?5?5?5?5?5?5?9?9small?5?5?5?5?5?5?5Generate?5sm@']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
cmp ['[ebp+argc],', '0']
setl ['al']
jmp ['loc_C31']
movsx ['eax,', 'ds:byte_1B2']
test ['eax,', 'eax']
jz ['short', 'loc_478']
movzx ['eax,', 'ds:byte_15D']
mov ['esi,', 'esp']
push ['eax']
movzx ['ecx,', 'ds:byte_15C']
push ['ecx']
push ['offset', '??_C@_0FL@GKOCANAO@makeconv?5version?5?$CFu?4?$CFu?0?5ICU?5tool@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
push ['offset', '??_C@_03OFAPEBGM@?$CFs?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', 'ds:byte_19E']
mov ['ds:?haveCopyright@@3CA,', 'al']
mov ['eax,', 'ds:dword_1B8']
mov ['[ebp+var_428],', 'eax']
mov ['al,', 'ds:byte_1DA']
mov ['ds:_VERBOSE,', 'al']
mov ['al,', 'ds:byte_216']
mov ['ds:?QUIET@@3CA,', 'al']
mov ['al,', 'ds:byte_1EE']
mov ['ds:_SMALL,', 'al']
movsx ['eax,', 'ds:byte_202']
test ['eax,', 'eax']
jz ['short', 'loc_4BD']
mov ['ds:_IGNORE_SISO_CHECK,', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_??0CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_474],', '0']
cmp ['[ebp+var_428],', '0']
jz ['loc_5A1']
mov ['eax,', '[ebp+var_428]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_5A1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_428]']
push ['eax']
lea ['ecx,', '[ebp+var_604]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBD@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_474]']
push ['ecx']
mov ['edi,', 'esp']
lea ['edx,', '[ebp+var_474]']
push ['edx']
lea ['eax,', '[ebp+var_604]']
push ['eax']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?ensureEndsWithFileSeparator@CharString@icu_56@@QAEAAV12@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_474]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5A1']
mov ['eax,', '[ebp+var_474]']
mov ['[ebp+var_5F4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_5F4]']
jmp ['loc_C31']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_480],', 'eax']
cmp ['[ebp+argc],', '2']
jg ['short', 'loc_5D6']
movsx ['eax,', 'ds:_VERBOSE']
test ['eax,', 'eax']
jnz ['short', 'loc_5D6']
mov ['byte', 'ptr', '[ebp+var_60C+3],', '0']
jmp ['short', 'loc_5DD']
mov ['byte', 'ptr', '[ebp+var_60C+3],', '1']
mov ['cl,', 'byte', 'ptr', '[ebp+var_60C+3]']
mov ['[ebp+var_489],', 'cl']
mov ['eax,', '[ebp+argv]']
add ['eax,', '4']
mov ['[ebp+argv],', 'eax']
jmp ['short', 'loc_5FD']
mov ['eax,', '[ebp+argv]']
add ['eax,', '4']
mov ['[ebp+argv],', 'eax']
mov ['eax,', '[ebp+argc]']
sub ['eax,', '1']
mov ['[ebp+argc],', 'eax']
jz ['loc_C03']
mov ['[ebp+var_498],', '0']
mov ['eax,', '[ebp+argv]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_getLongPathname']
add ['esp,', '4']
mov ['[ebp+Source],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_480]']
push ['eax']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_480],', '0']
jz ['short', 'loc_6A5']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_findBasename']
add ['esp,', '4']
mov ['[ebp+var_4B0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4B0]']
push ['eax']
lea ['ecx,', '[ebp+var_5E8]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBD@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_498]']
push ['ecx']
lea ['edx,', '[ebp+var_5E8]']
push ['edx']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_6E4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+var_5D8]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBD@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_498]']
push ['ecx']
lea ['edx,', '[ebp+var_5D8]']
push ['edx']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_498]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_72D']
mov ['eax,', '[ebp+var_498]']
mov ['[ebp+var_5C8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_5C8]']
jmp ['loc_C31']
mov ['esi,', 'esp']
push ['2Eh']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?lastIndexOf@CharString@icu_56@@QBEHD@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4BC],', 'eax']
mov ['eax,', '[ebp+var_4BC]']
cmp ['eax,', '[ebp+var_480]']
jl ['short', 'loc_774']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4BC]']
push ['eax']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?length@CharString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '[ebp+var_480]']
cmp ['eax,', '294h']
jl ['short', 'loc_80D']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_480]']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0BM@NPOCIIDC@converter?5name?5?$CFs?5too?5long?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5BC],', '0Fh']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_5BC]']
jmp ['loc_C31']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_480]']
push ['eax']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['offset', '??_C@_04FFJDPJDA@?4cnv?$AA@']
lea ['ecx,', '[ebp+var_5B0]']
call ['dword', 'ptr', 'ds:__imp_??0StringPiece@icu_56@@QAE@PBD@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_498]']
push ['eax']
lea ['ecx,', '[ebp+var_5B0]']
push ['ecx']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_498]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8BE']
mov ['eax,', '[ebp+var_498]']
mov ['[ebp+var_5A0],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_5A0]']
jmp ['loc_C31']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['?initConvData@@YAXPAUConvData@@@Z']
add ['esp,', '4']
lea ['eax,', '[ebp+var_498]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['?createConverter@@YAXPAUConvData@@PBDPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_498]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_97E']
mov ['eax,', '[ebp+var_498]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
mov ['edi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['offset', '??_C@_0DG@BIFONMIB@Error?5creating?5converter?5for?5?$CC?$CFs@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_474]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_979']
mov ['eax,', '[ebp+var_498]']
mov ['[ebp+var_474],', 'eax']
jmp ['loc_BA5']
push ['5Ch']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?strrchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_4C8],', 'eax']
cmp ['[ebp+var_4C8],', '0']
jnz ['short', 'loc_9CC']
push ['2Fh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['?strrchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_4C8],', 'eax']
cmp ['[ebp+var_4C8],', '0']
jnz ['short', 'loc_9CA']
lea ['eax,', '[ebp+Dest]']
mov ['[ebp+var_4C8],', 'eax']
jmp ['short', 'loc_9DB']
mov ['eax,', '[ebp+var_4C8]']
add ['eax,', '1']
mov ['[ebp+var_4C8],', 'eax']
lea ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_4C8]']
push ['ecx']
call ['_uprv_stricmp_56']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_A37']
movsx ['eax,', 'ds:?QUIET@@3CA']
test ['eax,', 'eax']
jnz ['short', 'loc_A37']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_74]']
push ['eax']
push ['offset', '??_C@_04FFJDPJDA@?4cnv?$AA@']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_0CB@FAAGEOEI@Warning?3?5?$CFs?$CFs?5claims?5to?5be?5?8?$CFs?8?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+Dest]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+var_74]']
push ['eax']
call ['_uprv_isInvariantString_56']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AAD']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_74]']
push ['eax']
push ['offset', '??_C@_0GD@PLKDPECN@Error?3?5A?5converter?5name?5must?5con@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_474]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AAD']
mov ['[ebp+var_474],', '0Dh']
mov ['[ebp+var_498],', '0']
lea ['eax,', '[ebp+var_498]']
push ['eax']
mov ['ecx,', '[ebp+var_428]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['?writeConverterData@@YAXPAUConvData@@PBD1PAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_498]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B6C']
mov ['eax,', '[ebp+var_498]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
mov ['edi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
push ['offset', '??_C@_0CH@GKPFJOEP@Error?5writing?5?$CC?$CFs?$CC?5file?5for?5?$CC?$CFs?$CC@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_474]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B6A']
mov ['eax,', '[ebp+var_498]']
mov ['[ebp+var_474],', 'eax']
jmp ['short', 'loc_BA5']
movsx ['eax,', '[ebp+var_489]']
test ['eax,', 'eax']
jz ['short', 'loc_BA5']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_480]']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['?cleanupConvData@@YAXPAUConvData@@@Z']
add ['esp,', '4']
jmp ['loc_5F4']
mov ['eax,', '[ebp+var_474]']
mov ['[ebp+var_594],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_468]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_594]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN47']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '60Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN46']
dd ['offset', '$LN39']
dd ['0FFFFFBFCh,', '294h']
dd ['offset', '$LN40']
dd ['0FFFFFBF0h,', '4']
dd ['offset', '$LN41']
dd ['0FFFFFB98h,', '38h']
dd ['offset', '$LN42']
dd ['0FFFFFB8Ch,', '4']
dd ['offset', '$LN43']
dd ['0FFFFFB68h,', '4']
dd ['offset', '$LN44']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$_main$0	proc near	
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-468h]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$_main proc near		
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-610h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$_main']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CH@GKPFJOEP@Error?5writing?5?$CC?$CFs?$CC?5file?5for?5?$CC?$CFs?$CC@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GD@PLKDPECN@Error?3?5A?5converter?5name?5must?5con@']
db ["'%s", 'is', 'not', 'a', 'valid', 'converter', "name.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CB@FAAGEOEI@Warning?3?5?$CFs?$CFs?5claims?5to?5be?5?8?$CFs?8?6@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DG@BIFONMIB@Error?5creating?5converter?5for?5?$CC?$CFs@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04FFJDPJDA@?4cnv?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BM@NPOCIIDC@converter?5name?5?$CFs?5too?5long?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_03OFAPEBGM@?$CFs?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
db ["'and", 'others.', 'All', 'Rights', 'Reserved.', "',0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FL@GKOCANAO@makeconv?5version?5?$CFu?4?$CFu?0?5ICU?5tool@']
db ["'les", 'and', 'write', '.cnv', "files',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BEA@MBIOMLNL@?7?5?5?5?5?5?5?9?9small?5?5?5?5?5?5?5Generate?5sm@']
db ["9,'", 'significantly', 'smaller', 'but', 'may', 'not', 'be', "compati'"]
db ["'ble", "with',0Ah"]
db ["9,'", 'older', 'versions', 'of', 'ICU', 'and', 'will', 'require', 'heap', "'"]
db ["'memory',0Ah"]
db ["9,'", 'allocation', 'when', "loaded.',0Ah"]
db ["9,'", '--ignore-siso-check', 'Use', 'SI/SO', 'other', 'than', "0xf/0xe.',0Ah"]
db ['0']
assume ['cs:_rdata']
public ['??_C@_0BIH@LEKGGKP@usage?3?5?$CFs?5?$FL?9options?$FN?5files?4?4?4?6?7r@']
db ["9,'read", '.ucm', 'codepage', 'mapping', 'files', 'and', 'write', '.cnv', "files',0Ah"]
db ["'options:',0Ah"]
db ["9,'-h", 'or', '-?', 'or', '--help', 'this', 'usage', "text',0Ah"]
db ["9,'-V", 'or', '--version', 'show', 'a', 'version', "message',0Ah"]
db ["9,'-c", 'or', '--copyright', 'include', 'a', 'copyright', "notice',0Ah"]
db ["9,'-d", 'or', '--destdir', 'destination', 'directory,', 'followed', 'by', 'the', "path',0Ah"]
db ["9,'-v", 'or', '--verbose', 'Turn', 'on', 'verbose', "output',0Ah"]
db ["9,'-q", 'or', '--quiet', 'do', 'not', 'display', 'warnings', 'and', "progress',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$_main$0']
dd ['offset', '__unwindtable$_main']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?strrchr@@YAPADPADH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initConvData@@YAXPAUConvData@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['154h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0Ch],', '0E4h']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0F0h],', '64h']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0F0h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+18h],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?cleanupConvData@@YAXPAUConvData@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_13C7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_1380']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_13B0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeConverterData@@YAXPAUConvData@@PBD1PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1422']
jmp ['loc_161F']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_143B']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_144D']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movsx ['ecx,', 'ds:?haveCopyright@@3CA']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', 'offset', '??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
push ['ecx']
push ['offset', '_dataInfo']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_03MMAEEAFE@cnv?$AA@']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_udata_create']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_14DC']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_03MMAEEAFE@cnv?$AA@']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_0CF@IKBMFADM@Couldn?8t?5create?5the?5udata?5?$CFs?4?$CFs?3@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_161F']
movsx ['eax,', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_1507']
mov ['esi,', 'esp']
push ['offset', '??_C@_03MMAEEAFE@cnv?$AA@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '??_C@_0BG@PJEDMNNG@?9?5Opened?5udata?5?$CFs?4?$CFs?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['64h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0F0h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '64h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '1']
jz ['short', 'loc_1565']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0F0h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '2']
jz ['short', 'loc_15A3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0F0h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_udata_finish']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_15F9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '??_C@_0DN@INPLCDOJ@error?3?5wrote?5?$CFu?5bytes?5to?5the?5?4cn@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '5']
movsx ['eax,', 'ds:_VERBOSE']
test ['eax,', 'eax']
jz ['short', 'loc_161F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
push ['offset', '??_C@_0CA@EDMMBPAH@?9?5Wrote?5?$CFu?5bytes?5to?5the?5udata?4?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CA@EDMMBPAH@?9?5Wrote?5?$CFu?5bytes?5to?5the?5udata?4?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0DN@INPLCDOJ@error?3?5wrote?5?$CFu?5bytes?5to?5the?5?4cn@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BG@PJEDMNNG@?9?5Opened?5udata?5?$CFs?4?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@IKBMFADM@Couldn?8t?5create?5the?5udata?5?$CFs?4?$CFs?3@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03MMAEEAFE@cnv?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createConverter@@YAXPAUConvData@@PBDPAW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '494h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_494]']
mov ['ecx,', '125h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_171A']
jmp ['loc_1F75']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?initConvData@@YAXPAUConvData@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_165],', 'al']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_175A']
jmp ['loc_1F75']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0F0h']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_180],', 'ecx']
movsx ['eax,', '[ebp+var_165]']
test ['eax,', 'eax']
jz ['loc_1A03']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_MBCSOpen']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_17B0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_1901']
mov ['eax,', '[ebp+var_174]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_174]']
add ['edx,', '48h']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1822']
mov ['esi,', 'esp']
push ['offset', '??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_1901']
mov ['eax,', '[ebp+var_174]']
movzx ['ecx,', 'byte', 'ptr', '[eax+50h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1896']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_174]']
add ['eax,', '50h']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1896']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['short', 'loc_1901']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jle ['short', 'loc_18E1']
push ['0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_180]']
push ['eax']
call ['_ucm_checkBaseExt']
add ['esp,', '14h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_18E1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['short', 'loc_1901']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
movsx ['eax,', 'byte', 'ptr', '[edx+29h]']
and ['eax,', '1']
jz ['short', 'loc_1901']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_19FE']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0F0h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_195E']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_19FE']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ucm_moveMappings']
add ['esp,', '8']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jle ['short', 'loc_19FE']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_CnvExtOpen']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_19BE']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_19FE']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0F0h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_19FE']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_1F75']
lea ['eax,', '[ebp+var_15C]']
push ['eax']
call ['?initConvData@@YAXPAUConvData@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_findBasename']
add ['esp,', '4']
mov ['[ebp+var_394],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
add ['ecx,', '2041Ch']
push ['ecx']
mov ['edx,', '[ebp+var_394]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
push ['offset', '??_C@_04IBAPKJLK@?4ucm?$AA@']
mov ['eax,', '[ebp+var_394]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
lea ['edx,', '[ebp+var_15C]']
push ['edx']
call ['?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_165],', 'al']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1AA8']
jmp ['loc_1F75']
jmp ['loc_1F66']
movsx ['eax,', '[ebp+var_165]']
test ['eax,', 'eax']
jnz ['short', 'loc_1AF2']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Dest]']
push ['eax']
push ['offset', '??_C@_0DK@DHKEHOLK@error?3?5the?5?$DMicu?3base?$DO?5file?5?$CC?$CFs?$CC?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_1F66']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_CnvExtOpen']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_1B1D']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_1F66']
mov ['eax,', '[ebp+var_15C]']
add ['eax,', '8']
mov ['[ebp+var_18C],', 'eax']
mov ['eax,', '[ebp+var_180]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20410h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1B5A']
mov ['eax,', '[ebp+var_180]']
mov ['dword', 'ptr', '[eax+20404h],', '2']
mov ['ecx,', '[ebp+var_174]']
mov ['byte', 'ptr', '[ecx+46h],', '2']
jmp ['short', 'loc_1B96']
mov ['eax,', '[ebp+var_180]']
cmp ['dword', 'ptr', '[eax+20404h],', '0']
jnz ['short', 'loc_1B96']
mov ['eax,', '[ebp+var_180]']
mov ['ecx,', '[ebp+var_18C]']
mov ['edx,', '[ecx+20404h]']
mov ['[eax+20404h],', 'edx']
mov ['eax,', '[ebp+var_174]']
mov ['ecx,', '[ebp+var_180]']
mov ['dl,', '[ecx+20404h]']
mov ['[eax+46h],', 'dl']
mov ['eax,', '[ebp+var_180]']
mov ['ecx,', '[ebp+var_180]']
mov ['edx,', '[eax+20408h]']
cmp ['edx,', '[ecx+20404h]']
jge ['short', 'loc_1BDD']
mov ['eax,', '[ebp+var_180]']
mov ['ecx,', '[ebp+var_18C]']
mov ['edx,', '[ecx+20408h]']
mov ['[eax+20408h],', 'edx']
mov ['eax,', '[ebp+var_174]']
mov ['ecx,', '[ebp+var_180]']
mov ['dl,', '[ecx+20408h]']
mov ['[eax+47h],', 'dl']
mov ['eax,', '[ebp+var_174]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1C1D']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_174]']
add ['edx,', '48h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_174]']
mov ['cl,', '[ebp+var_20]']
mov ['[eax+4Ch],', 'cl']
mov ['[ebp+var_3B5],', '0']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_3A0],', 'edx']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
imul ['edx,', '0Ch']
add ['edx,', '[ebp+var_3A0]']
mov ['[ebp+var_3AC],', 'edx']
jmp ['short', 'loc_1C5F']
mov ['eax,', '[ebp+var_3A0]']
add ['eax,', '0Ch']
mov ['[ebp+var_3A0],', 'eax']
mov ['eax,', '[ebp+var_3A0]']
cmp ['eax,', '[ebp+var_3AC]']
jnb ['short', 'loc_1CBB']
movzx ['eax,', '[ebp+var_3B5]']
cmp ['eax,', '3']
jz ['short', 'loc_1CBB']
mov ['eax,', '[ebp+var_3A0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1C9A']
movzx ['eax,', '[ebp+var_3B5]']
or ['eax,', '1']
mov ['[ebp+var_3B5],', 'al']
jmp ['short', 'loc_1CB9']
mov ['eax,', '[ebp+var_3A0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '3']
jnz ['short', 'loc_1CB9']
movzx ['eax,', '[ebp+var_3B5]']
or ['eax,', '2']
mov ['[ebp+var_3B5],', 'al']
jmp ['short', 'loc_1C50']
movzx ['eax,', '[ebp+var_3B5]']
and ['eax,', '1']
jz ['short', 'loc_1CD1']
mov ['eax,', '[ebp+var_174]']
mov ['byte', 'ptr', '[eax+4Eh],', '1']
movzx ['eax,', '[ebp+var_3B5]']
and ['eax,', '2']
jz ['short', 'loc_1CE7']
mov ['eax,', '[ebp+var_174]']
mov ['byte', 'ptr', '[eax+4Dh],', '1']
mov ['eax,', '[ebp+var_174]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_174]']
add ['edx,', '48h']
push ['edx']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
call ['_ucm_countChars']
add ['esp,', '0Ch']
cmp ['eax,', '1']
jz ['short', 'loc_1D48']
mov ['esi,', 'esp']
push ['offset', '??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_1F66']
mov ['eax,', '[ebp+var_174]']
movzx ['ecx,', 'byte', 'ptr', '[eax+50h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1DAE']
push ['1']
mov ['eax,', '[ebp+var_174]']
add ['eax,', '50h']
push ['eax']
mov ['ecx,', '[ebp+var_18C]']
push ['ecx']
call ['_ucm_countChars']
add ['esp,', '0Ch']
cmp ['eax,', '1']
jz ['short', 'loc_1DAE']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_1F66']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_ucm_checkValidity']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1E00']
push ['0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_18C]']
push ['edx']
call ['_ucm_checkBaseExt']
add ['esp,', '14h']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1E0E']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_1F66']
mov ['eax,', '[ebp+var_180]']
cmp ['dword', 'ptr', '[eax+20408h],', '1']
jle ['loc_1F26']
call ['_MBCSGetDummy']
mov ['[ebp+var_3C4],', 'eax']
mov ['[ebp+var_3D0],', '0']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_3A0],', 'edx']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
imul ['edx,', '0Ch']
add ['edx,', '[ebp+var_3A0]']
mov ['[ebp+var_3AC],', 'edx']
jmp ['short', 'loc_1E71']
mov ['eax,', '[ebp+var_3A0]']
add ['eax,', '0Ch']
mov ['[ebp+var_3A0],', 'eax']
mov ['eax,', '[ebp+var_3A0]']
cmp ['eax,', '[ebp+var_3AC]']
jnb ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_3A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
push ['ecx']
mov ['edx,', '[ebp+var_3A0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_3A0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+9]']
push ['edx']
mov ['eax,', '[ebp+var_3A0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_3C4]']
push ['ecx']
call ['_MBCSOkForBaseFromUnicode']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1EED']
mov ['eax,', '[ebp+var_3A0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+var_3A0]']
mov ['[edx+0Ah],', 'cl']
mov ['eax,', '[ebp+var_3A0]']
mov ['byte', 'ptr', '[eax+0Bh],', '1']
mov ['eax,', '[ebp+var_3D0]']
add ['eax,', '1']
mov ['[ebp+var_3D0],', 'eax']
jmp ['loc_1E62']
cmp ['[ebp+var_3D0],', '0']
jz ['short', 'loc_1F26']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_15C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_moveMappings']
add ['esp,', '8']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0F0h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1F66']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
lea ['eax,', '[ebp+var_15C]']
push ['eax']
call ['?cleanupConvData@@YAXPAUConvData@@@Z']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN59']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '494h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN58']
dd ['offset', '$LN56']
dd ['0FFFFFC78h,', '1F4h']
dd ['offset', '$LN57']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DK@DHKEHOLK@error?3?5the?5?$DMicu?3base?$DO?5file?5?$CC?$CFs?$CC?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04IBAPKJLK@?4ucm?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@']
db ["'s", 'codepage', "structure!',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4FC]']
mov ['ecx,', '13Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2100']
xor ['al,', 'al']
jmp ['loc_239C']
call ['_ucm_open']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
push ['offset', '??_C@_01KDCPPGHE@r?$AA@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_T_FileStream_open']
add ['esp,', '8']
mov ['[ebp+var_420],', 'eax']
cmp ['[ebp+var_420],', '0']
jnz ['short', 'loc_213A']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '4']
xor ['al,', 'al']
jmp ['loc_239C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_420]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?readHeader@@YAXPAUConvData@@PAU_FileStream@@PAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_216D']
xor ['al,', 'al']
jmp ['loc_239C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+2041Ch]']
test ['edx,', 'edx']
jnz ['short', 'loc_21AB']
mov ['[ebp+var_435],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '8']
mov ['[ebp+var_42C],', 'ecx']
movzx ['eax,', 'ds:_IGNORE_SISO_CHECK']
push ['eax']
mov ['ecx,', '[ebp+var_42C]']
push ['ecx']
call ['_ucm_processStates']
add ['esp,', '8']
jmp ['short', 'loc_21BC']
mov ['[ebp+var_435],', '0']
mov ['[ebp+var_42C],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_42C]']
push ['ecx']
movzx ['edx,', '[ebp+var_435]']
push ['edx']
mov ['eax,', '[ebp+var_420]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ucm_readTable']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2200']
xor ['al,', 'al']
jmp ['loc_239C']
push ['400h']
lea ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+var_420]']
push ['ecx']
call ['_T_FileStream_readLine']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['loc_2333']
push ['0']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_414],', 'eax']
lea ['eax,', '[ebp+Str1]']
cmp ['eax,', '[ebp+var_414]']
jnb ['short', 'loc_2295']
mov ['eax,', '[ebp+var_414]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_2284']
mov ['eax,', '[ebp+var_414]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_2284']
mov ['eax,', '[ebp+var_414]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '20h']
jz ['short', 'loc_2284']
mov ['eax,', '[ebp+var_414]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '9']
jnz ['short', 'loc_2295']
mov ['eax,', '[ebp+var_414]']
sub ['eax,', '1']
mov ['[ebp+var_414],', 'eax']
jmp ['short', 'loc_223A']
mov ['eax,', '[ebp+var_414]']
mov ['byte', 'ptr', '[eax],', '0']
movsx ['eax,', '[ebp+Str1]']
cmp ['eax,', '23h']
jz ['short', 'loc_22C1']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['_u_skipWhitespace']
add ['esp,', '4']
cmp ['eax,', '[ebp+var_414]']
jnz ['short', 'loc_22C6']
jmp ['loc_2200']
push ['offset', '??_C@_07GOGBKBKH@CHARMAP?$AA@']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_2302']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_42C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_420]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_readTable']
add ['esp,', '14h']
jmp ['short', 'loc_232C']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CO@BNKIBFOH@unexpected?5text?5after?5the?5base?5m@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2333']
jmp ['loc_2200']
mov ['eax,', '[ebp+var_420]']
push ['eax']
call ['_T_FileStream_close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
movsx ['eax,', 'byte', 'ptr', '[edx+29h]']
cmp ['eax,', '3']
jz ['short', 'loc_2363']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
movsx ['eax,', 'byte', 'ptr', '[edx+29h]']
cmp ['eax,', '3']
jnz ['short', 'loc_2396']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EI@JJAOHFPI@error?3?5some?5entries?5have?5the?5map@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
mov ['al,', '[ebp+var_435]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21']
dd ['offset', '$LN20']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EI@JJAOHFPI@error?3?5some?5entries?5have?5the?5map@']
db ["'some", 'do', "not',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0CO@BNKIBFOH@unexpected?5text?5after?5the?5base?5m@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_07GOGBKBKH@CHARMAP?$AA@']
assume ['cs:_rdata']
public ['??_C@_01KDCPPGHE@r?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?strchr@@YAPADPADH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Val]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readHeader@@YAXPAUConvData@@PAU_FileStream@@PAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '564h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_564]']
mov ['ecx,', '159h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_24FA']
jmp ['loc_29F5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0F0h']
mov ['[ebp+var_444],', 'eax']
mov ['eax,', '[ebp+var_444]']
mov ['byte', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+var_444]']
mov ['byte', 'ptr', '[eax+4Ch],', '0']
push ['400h']
lea ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_T_FileStream_readLine']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['loc_2791']
lea ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+var_420]']
push ['ecx']
lea ['edx,', '[ebp+Str1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_parseHeaderLine']
add ['esp,', '10h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2568']
jmp ['short', 'loc_251C']
push ['offset', '??_C@_07GOGBKBKH@CHARMAP?$AA@']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_2585']
jmp ['loc_2791']
push ['offset', '??_C@_0O@PMHEBCGH@code_set_name?$AA@']
mov ['eax,', '[ebp+var_420]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_25EB']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25E6']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+var_444]']
add ['ecx,', '4']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_444]']
add ['eax,', '40h']
push ['eax']
mov ['ecx,', '[ebp+var_444]']
add ['ecx,', '44h']
push ['ecx']
mov ['edx,', '[ebp+Source]']
push ['edx']
call ['?getPlatformAndCCSIDFromName@@YAXPBDPACPAH@Z']
add ['esp,', '0Ch']
jmp ['loc_278C']
push ['offset', '??_C@_07DHHCIPCK@subchar?$AA@']
mov ['eax,', '[ebp+var_420]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_26E2']
mov ['eax,', '[ebp+Source]']
mov ['[ebp+var_414],', 'eax']
lea ['eax,', '[ebp+var_414]']
push ['eax']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
call ['_ucm_parseBytes']
add ['esp,', '0Ch']
mov ['[ebp+var_475],', 'al']
movsx ['eax,', '[ebp+var_475]']
cmp ['eax,', '1']
jl ['short', 'loc_269E']
movsx ['eax,', '[ebp+var_475]']
cmp ['eax,', '4']
jg ['short', 'loc_269E']
mov ['eax,', '[ebp+var_414]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_269E']
mov ['eax,', '[ebp+var_444]']
mov ['cl,', '[ebp+var_475]']
mov ['[eax+4Ch],', 'cl']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
movsx ['ecx,', '[ebp+var_475]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_444]']
add ['eax,', '48h']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_26DD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Source]']
push ['eax']
push ['offset', '??_C@_0BN@IKIAJPCK@error?3?5illegal?5?$DMsubchar?$DO?5?$CFs?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_29F5']
jmp ['loc_278C']
push ['offset', '??_C@_08BNNBLMOL@subchar1?$AA@']
mov ['eax,', '[ebp+var_420]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_278C']
mov ['eax,', '[ebp+Source]']
mov ['[ebp+var_414],', 'eax']
lea ['eax,', '[ebp+var_414]']
push ['eax']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
lea ['edx,', '[ebp+var_4A0]']
push ['edx']
call ['_ucm_parseBytes']
add ['esp,', '0Ch']
movsx ['eax,', 'al']
cmp ['eax,', '1']
jnz ['short', 'loc_274D']
mov ['eax,', '[ebp+var_414]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_274D']
mov ['eax,', '[ebp+var_444]']
mov ['cl,', '[ebp+var_4A0]']
mov ['[eax+50h],', 'cl']
jmp ['short', 'loc_278C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Source]']
push ['eax']
push ['offset', '??_C@_0BO@JDOMDOBA@error?3?5illegal?5?$DMsubchar1?$DO?5?$CFs?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_29F5']
jmp ['loc_251C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_444]']
mov ['al,', '[ecx+20410h]']
mov ['[edx+47h],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_444]']
mov ['al,', '[ecx+2040Ch]']
mov ['[edx+46h],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_444]']
mov ['al,', '[ecx+20418h]']
mov ['[edx+45h],', 'al']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+45h]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['short', 'loc_2814']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DE@KDMCFGMF@ucm?5error?3?5missing?5conversion?5ty@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_29F5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+2041Ch]']
test ['edx,', 'edx']
jnz ['loc_295D']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+45h]']
mov ['edx,', 'dword', 'ptr', 'ds:_ucnv_converterStaticData[ecx*4]']
mov ['[ebp+var_438],', 'edx']
cmp ['[ebp+var_438],', '0']
jz ['loc_295D']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2876']
mov ['eax,', '[ebp+var_438]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_444]']
add ['ecx,', '4']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_444]']
cmp ['dword', 'ptr', '[eax+40h],', '0']
jnz ['short', 'loc_2894']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_438]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+40h],', 'edx']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+44h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_28B4']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_438]']
mov ['dl,', '[ecx+44h]']
mov ['[eax+44h],', 'dl']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+46h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_28D4']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_438]']
mov ['dl,', '[ecx+46h]']
mov ['[eax+46h],', 'dl']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+47h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_28F4']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_438]']
mov ['dl,', '[ecx+47h]']
mov ['[eax+47h],', 'dl']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_295D']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_438]']
mov ['dl,', '[ecx+4Ch]']
mov ['[eax+4Ch],', 'dl']
mov ['eax,', '[ebp+var_438]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
test ['ecx,', 'ecx']
jle ['short', 'loc_295D']
push ['1']
mov ['eax,', '[ebp+var_438]']
add ['eax,', '48h']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_438]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4Ch]']
push ['edx']
mov ['eax,', '[ebp+var_438]']
add ['eax,', '48h']
push ['eax']
mov ['ecx,', '[ebp+var_444]']
add ['ecx,', '48h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+20419h]']
test ['edx,', 'edx']
jge ['short', 'loc_2987']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx+20410h]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ecx+20419h],', 'dl']
mov ['eax,', '[ebp+var_444]']
movzx ['ecx,', 'byte', 'ptr', '[eax+50h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_29F5']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+46h]']
cmp ['ecx,', '1']
jg ['short', 'loc_29C2']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+45h]']
cmp ['ecx,', '2']
jz ['short', 'loc_29F5']
mov ['eax,', '[ebp+var_444]']
movsx ['ecx,', 'byte', 'ptr', '[eax+45h]']
cmp ['ecx,', '9']
jz ['short', 'loc_29F5']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EJ@LKLPEECH@error?3?5?$DMsubchar1?$DO?5defined?5for?5a?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Dh']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN39_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '564h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN38']
dd ['offset', '$LN32']
dd ['0FFFFFBECh,', '4']
dd ['offset', '$LN33']
dd ['0FFFFFBE0h,', '4']
dd ['offset', '$LN34']
dd ['0FFFFFBD4h,', '4']
dd ['offset', '$LN35']
dd ['0FFFFFB94h,', '1Fh']
dd ['offset', '$LN36']
dd ['0FFFFFB60h,', '1Fh']
dd ['offset', '$LN37']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EJ@LKLPEECH@error?3?5?$DMsubchar1?$DO?5defined?5for?5a?5@']
db ["'ATEFUL',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DE@KDMCFGMF@ucm?5error?3?5missing?5conversion?5ty@']
assume ['cs:_rdata']
public ['??_C@_0BO@JDOMDOBA@error?3?5illegal?5?$DMsubchar1?$DO?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08BNNBLMOL@subchar1?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BN@IKIAJPCK@error?3?5illegal?5?$DMsubchar?$DO?5?$CFs?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_07DHHCIPCK@subchar?$AA@']
assume ['cs:_rdata']
public ['??_C@_0O@PMHEBCGH@code_set_name?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPlatformAndCCSIDFromName@@YAXPBDPACPAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '69h']
jz ['short', 'loc_2BAC']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '49h']
jnz ['short', 'loc_2C20']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '62h']
jz ['short', 'loc_2BC4']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '42h']
jnz ['short', 'loc_2C20']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
cmp ['ecx,', '6Dh']
jz ['short', 'loc_2BDC']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
cmp ['ecx,', '4Dh']
jnz ['short', 'loc_2C20']
mov ['eax,', '[ebp+Str]']
add ['eax,', '3']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_2BF9']
mov ['eax,', '[ebp+Str]']
add ['eax,', '1']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['esi,', 'esp']
push ['0Ah']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strtoul']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_2C2F']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '0FFh']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_uprv_isInvariantUString_56:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__fflush:near']
extrn ['__imp__puts:near']
extrn ['_uprv_isInvariantString_56:near']
extrn ['_uprv_stricmp_56:near']
extrn ['_u_errorName_56:near']
extrn ['_strcpy:near']
extrn ['__imp_?data@CharString@icu_56@@QAEPADXZ:near']
extrn ['__imp_?lastIndexOf@CharString@icu_56@@QBEHD@Z:near']
extrn ['_findBasename:near']
extrn ['__imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z:near']
extrn ['_getLongPathname:near']
extrn ['__imp_?length@CharString@icu_56@@QBEHXZ:near']
extrn ['__imp_??1CharString@icu_56@@QAE@XZ:near']
extrn ['__imp_?ensureEndsWithFileSeparator@CharString@icu_56@@QAEAAV12@AAW4UErrorCode@@@Z:near']
extrn ['__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??0StringPiece@icu_56@@QAE@PBD@Z:near']
extrn ['__imp_??0CharString@icu_56@@QAE@XZ:near']
extrn ['__imp__exit:near']
extrn ['__imp__printf:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_parseArgs:near']
extrn ['_u_getDataDirectory_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_u_getVersion_56:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp__strrchr:near']
extrn ['_memset:near']
extrn ['_ucm_close:near']
extrn ['_udata_finish:near']
extrn ['_udata_writeBlock:near']
extrn ['_udata_create:near']
extrn ['_MBCSOkForBaseFromUnicode:near']
extrn ['_MBCSGetDummy:near']
extrn ['_ucm_checkValidity:near']
extrn ['_ucm_countChars:near']
extrn ['_strcat:near']
extrn ['_CnvExtOpen:near']
extrn ['_ucm_moveMappings:near']
extrn ['_ucm_sortTable:near']
extrn ['_ucm_checkBaseExt:near']
extrn ['_MBCSOpen:near']
extrn ['_T_FileStream_close:near']
extrn ['_strcmp:near']
extrn ['_u_skipWhitespace:near']
extrn ['_T_FileStream_readLine:near']
extrn ['_ucm_readTable:near']
extrn ['_ucm_processStates:near']
		extrn _ucm_processStates:near
extrn ['_T_FileStream_open:near']
extrn ['_ucm_open:near']
extrn ['__imp__strchr:near']
extrn ['_ucnv_converterStaticData:near']
extrn ['_ucm_parseBytes:near']
extrn ['_ucm_parseHeaderLine:near']
extrn ['__imp__strtoul:near']
end

endp
?BinaryDataToHexString@@YAXPBEAAKPA_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_36']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_70']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_19LOMEABKM@?$AA?$CF?$AA?4?$AA2?$AAx?$AA?$AA@']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__wsprintfW']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2D']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$mn']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?CalculateMD5@@YAHPBDKPAPAEAAK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+phProv],', '0']
mov ['[ebp+phHash],', '0']
mov ['esi,', 'esp']
push ['0F0000000h']
push ['1']
push ['0']
push ['0']
lea ['eax,', '[ebp+phProv]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CryptAcquireContextW@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_118']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '80090016h']
jz ['short', 'loc_EF']
xor ['eax,', 'eax']
jmp ['loc_233']
mov ['esi,', 'esp']
push ['0F0000008h']
push ['1']
push ['0']
push ['0']
lea ['eax,', '[ebp+phProv]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CryptAcquireContextW@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_118']
xor ['eax,', 'eax']
jmp ['loc_233']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phHash]']
push ['eax']
push ['0']
push ['0']
push ['8003h']
mov ['ecx,', '[ebp+phProv]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CryptCreateHash@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_143']
xor ['eax,', 'eax']
jmp ['loc_233']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+dwDataLen]']
push ['eax']
mov ['ecx,', '[ebp+pbData]']
push ['ecx']
mov ['edx,', '[ebp+phHash]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CryptHashData@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_16B']
xor ['eax,', 'eax']
jmp ['loc_233']
mov ['[ebp+pdwDataLen],', '4']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+pdwDataLen]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+phHash]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CryptGetHashParam@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_19C']
xor ['eax,', 'eax']
jmp ['loc_233']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_EC]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
push ['2']
mov ['eax,', '[ebp+phHash]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CryptGetHashParam@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1FA']
xor ['eax,', 'eax']
jmp ['short', 'loc_233']
cmp ['[ebp+phHash],', '0']
jz ['short', 'loc_213']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+phHash]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CryptDestroyHash@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+phProv],', '0']
jz ['short', 'loc_22E']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+phProv]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CryptReleaseContext@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN15']
dd ['offset', '$LN12']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN13']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN14']
assume ['cs:_text$mn']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?CalculateRegistryPathFromFilePath@@YAHQB_WPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcslen']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2DC']
xor ['eax,', 'eax']
jmp ['loc_44C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Str]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '5Ch']
jz ['short', 'loc_2FC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Str]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_305']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+eax+4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__wcsncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___wcslwr']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['dword', 'ptr', '[ebp+var_2C],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?CalculateMD5@@YAHPBDKPAPAEAAK@Z']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_3C4']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+var_11C]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_44C']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['[ebp+Source],', 'offset', '??_C@_1EK@FHBKBBLP@?$AAS?$AAO?$AAF?$AAT?$AAW?$AAA?$AAR?$AAE?$AA?2?$AAM?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAM?$AAa?$AAi?$AAn?$AAt?$AAe?$AAn?$AAa?$AAn?$AAc?$AAe?$AAS?$AAe?$AAr?$AAv@']
mov ['esi,', 'esp']
push ['104h']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__wcsncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wcslen']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+Dest]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?BinaryDataToHexString@@YAXPBEAAKPA_W@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_104],', 'eax']
mov ['ecx,', '[ebp+var_104]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN7']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN8']
align ['4']
assume ['cs:_rdata']
public ['??_C@_19LOMEABKM@?$AA?$CF?$AA?4?$AA2?$AAx?$AA?$AA@']
unicode ['0,', '<%.2x>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1EK@FHBKBBLP@?$AAS?$AAO?$AAF?$AAT?$AAW?$AAA?$AAR?$AAE?$AA?2?$AAM?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAM?$AAa?$AAi?$AAn?$AAt?$AAe?$AAn?$AAa?$AAn?$AAc?$AAe?$AAS?$AAe?$AAr?$AAv@']
unicode ['0,', '<SOFTWARE\\Mozilla\\MaintenanceService\\>,0']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['??2@YAPAXI@Z:near']
extrn ['??3@YAXPAX@Z:near']
extrn ['_memset:near']
extrn ['__imp__wcslen:near']
extrn ['__imp__wcsncpy:near']
extrn ['__imp___wcslwr:near']
extrn ['__imp__GetLastError@0:near']
extrn ['__imp__wsprintfW:near']
extrn ['__imp__CryptAcquireContextW@20:near']
extrn ['__imp__CryptReleaseContext@8:near']
extrn ['__imp__CryptGetHashParam@20:near']
extrn ['__imp__CryptCreateHash@20:near']
extrn ['__imp__CryptHashData@16:near']
extrn ['__imp__CryptDestroyHash@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
end

endp
?getEventsPerIteration@UPerfFunction@@UAEJXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?time@UPerfFunction@@UAENHPAW4UErrorCode@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
lea ['eax,', '[ebp+PerformanceCount]']
push ['eax']
call ['?utimer_getTime@@YAXPAUUTimer@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
test ['eax,', 'eax']
jle ['short', 'loc_7ED']
mov ['[ebp+var_104],', '1']
jmp ['short', 'loc_7F7']
mov ['[ebp+var_104],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_81C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_7D1']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
call ['?utimer_getTime@@YAXPAUUTimer@@@Z']
add ['esp,', '4']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+PerformanceCount]']
push ['ecx']
call ['?utimer_getDeltaSeconds@@YANPAUUTimer@@0@Z']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN7']
dd ['0FFFFFFC4h,', '10h']
dd ['offset', '$LN8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?utimer_getTime@@YAXPAUUTimer@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+lpPerformanceCount]']
push ['eax']
call ['?uprv_initFrequency@@YAHPAUUTimer@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+lpPerformanceCount]']
push ['eax']
call ['?uprv_start@@YAXPAUUTimer@@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?uprv_initFrequency@@YAHPAUUTimer@@@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__QueryPerformanceFrequency@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?uprv_start@@YAXPAUUTimer@@@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpPerformanceCount]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__QueryPerformanceCounter@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?utimer_getDeltaSeconds@@YANPAUUTimer@@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uprv_compareFrequency@@YACPAUUTimer@@0@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9BB']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?uprv_delta@@YANPAUUTimer@@0@Z']
add ['esp,', '8']
jmp ['short', 'loc_9C1']
fld ['ds:__real@bff0000000000000']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['__real@bff0000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?uprv_delta@@YANPAUUTimer@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C8]']
mov ['ecx,', '32h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
sub ['edx,', '[ecx]']
mov ['eax,', '[eax+4]']
sbb ['eax,', '[ecx+4]']
mov ['dword', 'ptr', '[ebp+var_C8],', 'edx']
mov ['dword', 'ptr', '[ebp+var_C8+4],', 'eax']
fild ['[ebp+var_C8]']
mov ['ecx,', '[ebp+arg_0]']
fild ['qword', 'ptr', '[ecx+8]']
fdivp ['st(1),', 'st']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?uprv_compareFrequency@@YACPAUUTimer@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'eax']
mov ['[ebp+var_C8],', 'ecx']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+8]']
jnz ['short', 'loc_A91']
mov ['edx,', '[ebp+var_C4]']
mov ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[edx+0Ch]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_A91']
mov ['[ebp+var_C9],', '1']
jmp ['short', 'loc_A98']
mov ['[ebp+var_C9],', '0']
mov ['al,', '[ebp+var_C9]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UPerfFunction@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfFunction@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UPerfFunction@@6B@']
public ['??_7UPerfFunction@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getEventsPerIteration@UPerfFunction@@UAEJXZ']
dd ['offset', '?time@UPerfFunction@@UAENHPAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4UPerfFunction@@6B@']
dd ['offset', '??_R0?AVUPerfFunction@@@8']
dd ['offset', '??_R3UPerfFunction@@8']
assume ['cs:_data']
public ['??_R0?AVUPerfFunction@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UPerfFunction@@8']
dd ['1']
dd ['offset', '??_R2UPerfFunction@@8']
assume ['cs:_rdata$r']
public ['??_R2UPerfFunction@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UPerfFunction@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_09CIKJIKME@file?9name?$AA@+4']
dd ['offset', '??_R3UPerfFunction@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UPerfFunction@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfFunction@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UPerfFunction@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUPerfFunction@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UPerfFunction@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C03']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUPerfFunction@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_C7D']
push ['offset', '??1UPerfFunction@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C75']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_C9C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UPerfFunction@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C99']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UPerfTest@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfTest@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+34h]']
mov ['[eax+34h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
mov ['[eax+3Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+40h]']
mov ['[eax+40h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+41h]']
mov ['[eax+41h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+44h]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
mov ['[eax+48h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['[eax+4Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['[eax+50h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[eax+54h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[eax+58h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UPerfTest@@6B@']
public ['??_7UPerfTest@@6B@']
dd ['offset', '??_EUPerfTest@@UAEPAXI@Z']
dd ['offset', '?runIndexedTest@UPerfTest@@MAEPAVUPerfFunction@@HCAAPBDPAD@Z']
dd ['offset', '?runTestLoop@UPerfTest@@MAECPAD0@Z']
dd ['offset', '?callTest@UPerfTest@@MAECAAV1@PAD@Z']
assume ['cs:_rdata$r']
public ['??_R4UPerfTest@@6B@']
dd ['offset', '??_R0?AVUPerfTest@@@8']
dd ['offset', '??_R3UPerfTest@@8']
assume ['cs:_data']
public ['??_R0?AVUPerfTest@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UPerfTest@@8']
dd ['1']
dd ['offset', '??_R2UPerfTest@@8']
assume ['cs:_rdata$r']
public ['??_R2UPerfTest@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UPerfTest@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_09CIKJIKME@file?9name?$AA@+4']
dd ['offset', '??_R3UPerfTest@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UPerfTest@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+34h]']
mov ['[eax+34h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
mov ['[eax+3Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+40h]']
mov ['[eax+40h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+41h]']
mov ['[eax+41h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+44h]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
mov ['[eax+48h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['[eax+4Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['[eax+50h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[eax+54h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[eax+58h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUPerfTest@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UPerfTest@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_FFB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUPerfTest@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1075']
push ['offset', '??1UPerfTest@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['5Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_106D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1094']
mov ['ecx,', '[ebp+var_8]']
call ['??1UPerfTest@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1091']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UPerfFunction@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfFunction@@6B@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UPerfTest@@IAE@HQAPBDAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfTest@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', 'offset', '??_C@_01LFCBOECM@?4?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+44h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?init@UPerfTest@@IAEXQAUUOption@@HAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01LFCBOECM@?4?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UPerfTest@@IAE@HQAPBDQAUUOption@@HPBDAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfTest@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', 'offset', '??_C@_01LFCBOECM@?4?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+44h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?init@UPerfTest@@IAEXQAUUOption@@HAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@UPerfTest@@IAEXQAUUOption@@HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['[ebp+var_14],', '0Dh']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_135B']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
imul ['edx,', '14h']
add ['edx,', 'offset', '_options']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
push ['offset', '_options']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_u_parseArgs']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+28h],', 'eax']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_139E']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '14h']
push ['eax']
push ['offset', 'dword_5D0']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '1']
jz ['short', 'loc_13BD']
movsx ['eax,', 'ds:byte_4DE']
test ['eax,', 'eax']
jnz ['short', 'loc_13BD']
movsx ['eax,', 'ds:byte_4F2']
test ['eax,', 'eax']
jz ['short', 'loc_13CB']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1618']
movsx ['eax,', 'ds:byte_506']
test ['eax,', 'eax']
jz ['short', 'loc_13DD']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+40h],', '1']
movsx ['eax,', 'ds:byte_51A']
test ['eax,', 'eax']
jz ['short', 'loc_13F4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:dword_50C']
mov ['[eax+24h],', 'ecx']
movsx ['eax,', 'ds:byte_52E']
test ['eax,', 'eax']
jz ['short', 'loc_140B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:dword_520']
mov ['[eax+18h],', 'ecx']
movsx ['eax,', 'ds:byte_542']
test ['eax,', 'eax']
jz ['short', 'loc_141D']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1Ch],', '1']
movsx ['eax,', 'ds:byte_556']
test ['eax,', 'eax']
jz ['short', 'loc_1434']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:dword_548']
mov ['[eax+20h],', 'ecx']
movsx ['eax,', 'ds:byte_56A']
test ['eax,', 'eax']
jz ['short', 'loc_145D']
mov ['esi,', 'esp']
mov ['eax,', 'ds:Str']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__atoi']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+44h],', 'eax']
movsx ['eax,', 'ds:byte_57E']
test ['eax,', 'eax']
jz ['short', 'loc_14A1']
mov ['esi,', 'esp']
mov ['eax,', 'ds:dword_570']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__atoi']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+48h],', 'eax']
movsx ['eax,', 'ds:byte_592']
test ['eax,', 'eax']
jz ['short', 'loc_149F']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1618']
jmp ['short', 'loc_14D6']
movsx ['eax,', 'ds:byte_592']
test ['eax,', 'eax']
jz ['short', 'loc_14CC']
mov ['esi,', 'esp']
mov ['eax,', 'ds:dword_584']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__atoi']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4Ch],', 'eax']
jmp ['short', 'loc_14D6']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+48h],', '3E8h']
movsx ['eax,', 'ds:byte_5A6']
test ['eax,', 'eax']
jz ['short', 'loc_14EF']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '0']
movsx ['eax,', 'ds:byte_5BA']
test ['eax,', 'eax']
jz ['short', 'loc_1508']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+34h],', '0']
movsx ['eax,', 'ds:byte_5CE']
test ['eax,', 'eax']
jz ['short', 'loc_151F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:dword_5C0']
mov ['[eax+50h],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['loc_1618']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_ucbuf_resolveFileName']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_157C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_1618']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_158D']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['_ucbuf_resolveFileName']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_ucbuf_open']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1618']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
push ['eax']
push ['offset', '??_C@_0CN@DHEIFFPJ@Could?5not?5open?5the?5input?5file?5?$CFs@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
dd ['offset', '$LN26']
dd ['offset', '$LN25']
assume ['cs:_rdata']
public ['??_C@_0CN@DHEIFFPJ@Could?5not?5open?5the?5input?5file?5?$CFs@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLines@UPerfTest@@QAEPAUULine@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16F3']
xor ['eax,', 'eax']
jmp ['loc_18F1']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_1707']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+2Ch]']
jmp ['loc_18F1']
push ['4E200h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_134]']
mov ['[eax+2Ch],', 'ecx']
mov ['[ebp+var_14],', '9C40h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['[ebp+Src],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ucbuf_readline']
add ['esp,', '0Ch']
mov ['[ebp+Src],', 'eax']
cmp ['[ebp+Src],', '0']
jz ['short', 'loc_177A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_177F']
jmp ['loc_18EB']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
mov ['edx,', '[ebp+var_128]']
mov ['[eax+ecx*8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
mov ['edx,', '[ebp+var_2C]']
mov ['[eax+ecx*8+4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+2Ch]']
mov ['eax,', '[edx+eax*8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+30h],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
cmp ['ecx,', '[ebp+var_14]']
jl ['loc_18E6']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '9C40h']
mov ['[ebp+var_14],', 'eax']
xor ['ecx,', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '8']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_11C]']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_18A5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
push ['offset', '??_C@_0CA@BBPGOECO@Out?5of?5memory?5reading?5line?5?$CFd?4?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_18F1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
shl ['ecx,', '3']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_104],', 'ecx']
mov ['edx,', '[ebp+var_104]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax+2Ch],', 'ecx']
jmp ['loc_1745']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+2Ch]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
assume ['cs:_rdata']
public ['??_C@_0CA@BBPGOECO@Out?5of?5memory?5reading?5line?5?$CFd?4?6?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UPerfTest@@QAEPB_WAAHAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_198C']
xor ['eax,', 'eax']
jmp ['short', 'loc_1A0A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ucbuf_size']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
lea ['edx,', '[ecx+ecx+2]']
push ['edx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+38h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ucbuf_getBuffer']
add ['esp,', '0Ch']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
call ['_u_strncpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
xor ['edx,', 'edx']
mov ['[eax+ecx*2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+3Ch]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+38h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?run@UPerfTest@@QAECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+28h],', '1']
jnz ['short', 'loc_1A5D']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?runTest@UPerfTest@@QAECPAD0@Z']
jmp ['loc_1B37']
mov ['[ebp+var_11],', '0']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_1A73']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+28h]']
jge ['loc_1B34']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['loc_1B2F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+Str],', 'eax']
push ['40h']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_1ACF']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ds:_execCount,', '0']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?runTest@UPerfTest@@QAECPAD0@Z']
mov ['[ebp+var_11],', 'al']
movsx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['short', 'loc_1AFD']
cmp ['ds:_execCount,', '0']
jg ['short', 'loc_1B2F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['offset', '??_C@_0CE@BGDELAFC@?6?9?9?9ERROR?3?5Test?5doesn?8t?5exist?3?5?$CF@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_1B37']
jmp ['loc_1A6A']
mov ['al,', '[ebp+var_11]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CE@BGDELAFC@?6?9?9?9ERROR?3?5Test?5doesn?8t?5exist?3?5?$CF@']
db ["'---ERROR:", 'Test', "doesn',27h,'t", 'exist:', "%s!',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?strchr@@YAPADPADH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Val]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?runTest@UPerfTest@@QAECPAD0@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+Str1],', '0']
jz ['short', 'loc_1BFD']
push ['2Fh']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1C17']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+58h],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1C21']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+58h],', '0']
cmp ['[ebp+Str1],', '0']
jz ['short', 'loc_1C46']
mov ['eax,', '[ebp+Str1]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C46']
push ['offset', '??_C@_01NBENCBCI@?$CK?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1C65']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11],', 'al']
jmp ['short', 'loc_1CB6']
push ['offset', '??_C@_04PCOPKCKE@LIST?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1C95']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11],', '1']
jmp ['short', 'loc_1CB6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11],', 'al']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1CC2']
mov ['eax,', '[ebp+var_20]']
mov ['byte', 'ptr', '[eax],', '2Fh']
mov ['al,', '[ebp+var_11]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04PCOPKCKE@LIST?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01NBENCBCI@?$CK?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setPath@UPerfTest@@QAEXPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+58h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?runIndexedTest@UPerfTest@@MAEPAVUPerfFunction@@HCAAPBDPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CO@LMIDGJJA@?$CK?$CK?$CK?5runIndexedTest?5needs?5to?5be?5o@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CO@LMIDGJJA@?$CK?$CK?$CK?5runIndexedTest?5needs?5to?5be?5o@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?runTestLoop@UPerfTest@@MAECPAD0@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1C8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1C8]']
mov ['ecx,', '72h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_35],', '0']
mov ['[ebp+var_44],', '0']
mov ['eax,', 'ds:?gTest@UPerfTest@@2PAV1@A']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ds:?gTest@UPerfTest@@2PAV1@A,', 'eax']
mov ['[ebp+var_5C],', '0']
fldz
fstp ['[ebp+var_6C]']
mov ['[ebp+var_78],', '1']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+Str1]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Str1],', '0']
jz ['short', 'loc_1E42']
mov ['eax,', '[ebp+Str1]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1E47']
jmp ['loc_26B5']
cmp ['[ebp+Str2],', '0']
jnz ['short', 'loc_1E53']
mov ['[ebp+var_29],', '1']
jmp ['short', 'loc_1E6B']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
setz ['dl']
mov ['[ebp+var_29],', 'dl']
movsx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jz ['loc_26A2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', 'ds:_execCount']
add ['eax,', '1']
mov ['ds:_execCount,', 'eax']
mov ['[ebp+var_35],', '1']
cmp ['[ebp+var_90],', '0']
jnz ['short', 'loc_1EF0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0BK@FCJFGPEI@?$CFs?5function?5returned?5NULL?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_26C0']
mov ['eax,', '[ebp+var_90]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_90]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '1']
jge ['short', 'loc_1F50']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0CP@NMJIIHCA@?$CFs?5returned?5an?5illegal?5operation@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_26C0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+48h],', '0']
jnz ['loc_20BE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_78],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+40h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1FA4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
push ['offset', '??_C@_0BO@DPGPFGBP@?$DN?5?$CFs?5calibrating?5?$CFi?5seconds?5?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_9C],', '1']
fldz
fstp ['[ebp+var_6C]']
fild ['[ebp+var_78]']
fmul ['ds:__real@3feccccccccccccd']
call ['__ftol2_sse']
mov ['[ebp+var_1C4],', 'eax']
fild ['[ebp+var_1C4]']
fcomp ['[ebp+var_6C]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['loc_20BC']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_1FEF']
fld ['[ebp+var_6C]']
fldz
fucompp
fnstsw ['ax']
test ['ah,', '44h']
jp ['short', 'loc_2009']
mov ['eax,', '[ebp+var_9C]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_9C]']
imul ['eax,', '0Ah']
mov ['[ebp+var_9C],', 'eax']
jmp ['short', 'loc_2057']
fild ['[ebp+var_78]']
fdiv ['[ebp+var_6C]']
fimul ['[ebp+var_5C]']
fadd ['ds:__real@3fe0000000000000']
call ['__ftol2_sse']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_2057']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CH@KJLAKLPI@Unable?5to?5converge?5on?5desired?5du@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_26C0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_90]']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_6C]']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_20B7']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0CJ@JFALIDEG@Performance?5test?5failed?5with?5err@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_20BC']
jmp ['loc_1FB3']
jmp ['short', 'loc_20C7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+48h]']
mov ['[ebp+var_5C],', 'ecx']
fld ['ds:__real@412e848000000000']
fstp ['[ebp+var_AC]']
fldz
fstp ['[ebp+var_BC]']
mov ['[ebp+var_C8],', '0FFFFFFFFh']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_2100']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_D4]']
cmp ['ecx,', '[eax+44h]']
jge ['loc_23D2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0M@OPPNMGAG@?$DN?5?$CFs?5begin?5?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+40h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_21B5']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+48h],', '0']
jle ['short', 'loc_2185']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
push ['offset', '??_C@_03PELOGHMK@?$CFi?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_21B3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_78]']
push ['eax']
push ['offset', '??_C@_03PELOGHMK@?$CFi?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_21DF']
mov ['esi,', 'esp']
push ['offset', '??_C@_01EEMJAFIK@?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_90]']
mov ['edx,', '[eax+10h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fstp ['[ebp+var_6C]']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2242']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0CJ@JFALIDEG@Performance?5test?5failed?5with?5err@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_23D2']
fld ['[ebp+var_BC]']
fadd ['[ebp+var_6C]']
fstp ['[ebp+var_BC]']
fld ['[ebp+var_AC]']
fcomp ['[ebp+var_6C]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['short', 'loc_226A']
fld ['[ebp+var_6C]']
fstp ['[ebp+var_AC]']
mov ['eax,', '[ebp+var_90]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_90]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+40h]']
cmp ['ecx,', '1']
jnz ['loc_2337']
cmp ['[ebp+var_C8],', '0FFFFFFFFh']
jnz ['short', 'loc_22E9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_84]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_6C]']
fstp ['[esp+1E4h+var_1E4]']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['offset', '??_C@_0CJ@KFLKAPCK@?$DN?5?$CFs?5end?3?5?$CFf?5loops?3?5?$CFi?5operation@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '1Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2332']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_6C]']
fstp ['qword', 'ptr', '[esp]']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0DE@OHJBABJJ@?$DN?5?$CFs?5end?3?5?$CFf?5loops?3?5?$CFi?5operation@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_23CD']
cmp ['[ebp+var_C8],', '0FFFFFFFFh']
jnz ['short', 'loc_2384']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_84]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_6C]']
fstp ['[esp+1E4h+var_1E4]']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['offset', '??_C@_0BE@CHADNHJA@?$DN?5?$CFs?5end?5?$CFf?5?$CFi?5?$CFli?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '1Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_23CD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_6C]']
fstp ['qword', 'ptr', '[esp]']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0BI@NIKOPCAD@?$DN?5?$CFs?5end?5?$CFf?5?$CFi?5?$CFli?5?$CFli?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_20F1']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+40h]']
test ['ecx,', 'ecx']
jz ['loc_2652']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_2652']
mov ['eax,', '[ebp+var_8]']
fild ['dword', 'ptr', '[eax+44h]']
fdivr ['[ebp+var_BC]']
fstp ['[ebp+var_E4]']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_2419']
cmp ['[ebp+var_84],', '0']
jnz ['short', 'loc_244C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0BA@JFDCCOHJ@?$CFs?5did?5not?5run?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2652']
cmp ['[ebp+var_C8],', '0FFFFFFFFh']
jnz ['loc_252E']
fld ['[ebp+var_E4]']
fmul ['ds:__real@41cdcd6500000000']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '[ebp+var_84]']
mov ['[ebp+var_1C4],', 'eax']
fild ['[ebp+var_1C4]']
fdivp ['st(1),', 'st']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+1DCh+var_1DC]']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_E4]']
fstp ['qword', 'ptr', '[esp]']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['offset', '??_C@_0CM@CAIGJCLE@?$CF?$CF?$DN?5?$CFs?5avg?3?5?$CF?44g?5loops?3?5?$CFi?5avg?1o@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fld ['[ebp+var_AC]']
fmul ['ds:__real@41cdcd6500000000']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '[ebp+var_84]']
mov ['[ebp+var_1C4],', 'eax']
fild ['[ebp+var_1C4]']
fdivp ['st(1),', 'st']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+1DCh+var_1DC]']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
sub ['esp,', '8']
fld ['[ebp+var_AC]']
fstp ['qword', 'ptr', '[esp]']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['offset', '??_C@_0CL@FGKMDIJE@_?$DN?5?$CFs?5min?3?5?$CF?44g?5loops?3?5?$CFi?5min?1op@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2652']
fld ['[ebp+var_E4]']
fmul ['ds:__real@41cdcd6500000000']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_1C4],', 'eax']
fild ['[ebp+var_1C4]']
fdivp ['st(1),', 'st']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+1DCh+var_1DC]']
fld ['[ebp+var_E4]']
fmul ['ds:__real@41cdcd6500000000']
mov ['ecx,', '[ebp+var_5C]']
imul ['ecx,', '[ebp+var_84]']
mov ['[ebp+var_1C8],', 'ecx']
fild ['[ebp+var_1C8]']
fdivp ['st(1),', 'st']
sub ['esp,', '8']
fstp ['[esp+1E4h+var_1E4]']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_E4]']
fstp ['[esp+1F0h+var_1F0]']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0DP@DMEJJKKH@?$CF?$CF?$DN?5?$CFs?5avg?3?5?$CF?44g?5loops?3?5?$CFi?5avg?1o@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '28h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
fld ['[ebp+var_AC]']
fmul ['ds:__real@41cdcd6500000000']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_1C4],', 'eax']
fild ['[ebp+var_1C4]']
fdivp ['st(1),', 'st']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+1DCh+var_1DC]']
fld ['[ebp+var_AC]']
fmul ['ds:__real@41cdcd6500000000']
mov ['ecx,', '[ebp+var_5C]']
imul ['ecx,', '[ebp+var_84]']
mov ['[ebp+var_1C8],', 'ecx']
fild ['[ebp+var_1C8]']
fdivp ['st(1),', 'st']
sub ['esp,', '8']
fstp ['[esp+1E4h+var_1E4]']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
sub ['esp,', '8']
fld ['[ebp+var_AC]']
fstp ['[esp+1F0h+var_1F0]']
mov ['eax,', '[ebp+Str1]']
push ['eax']
push ['offset', '??_C@_0DO@BAPFMIBB@_?$DN?5?$CFs?5min?3?5?$CF?44g?5loops?3?5?$CFi?5min?1op@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '28h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_1B0],', 'eax']
mov ['ecx,', '[ebp+var_1B0]']
mov ['[ebp+var_1BC],', 'ecx']
cmp ['[ebp+var_1BC],', '0']
jz ['short', 'loc_2698']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_1BC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_1BC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C4],', 'eax']
jmp ['short', 'loc_26A2']
mov ['[ebp+var_1C4],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+Str1],', '0']
jnz ['loc_1E10']
mov ['eax,', '[ebp+var_50]']
mov ['ds:?gTest@UPerfTest@@2PAV1@A,', 'eax']
mov ['al,', '[ebp+var_35]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN49']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN48']
dd ['offset', '$LN46']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN47']
assume ['cs:_rdata']
public ['??_C@_0DO@BAPFMIBB@_?$DN?5?$CFs?5min?3?5?$CF?44g?5loops?3?5?$CFi?5min?1op@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DP@DMEJJKKH@?$CF?$CF?$DN?5?$CFs?5avg?3?5?$CF?44g?5loops?3?5?$CFi?5avg?1o@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CL@FGKMDIJE@_?$DN?5?$CFs?5min?3?5?$CF?44g?5loops?3?5?$CFi?5min?1op@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CM@CAIGJCLE@?$CF?$CF?$DN?5?$CFs?5avg?3?5?$CF?44g?5loops?3?5?$CFi?5avg?1o@']
assume ['cs:_rdata']
public ['__real@41cdcd6500000000']
assume ['cs:_rdata']
public ['??_C@_0BA@JFDCCOHJ@?$CFs?5did?5not?5run?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BI@NIKOPCAD@?$DN?5?$CFs?5end?5?$CFf?5?$CFi?5?$CFli?5?$CFli?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BE@CHADNHJA@?$DN?5?$CFs?5end?5?$CFf?5?$CFi?5?$CFli?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0DE@OHJBABJJ@?$DN?5?$CFs?5end?3?5?$CFf?5loops?3?5?$CFi?5operation@']
assume ['cs:_rdata']
public ['??_C@_0CJ@KFLKAPCK@?$DN?5?$CFs?5end?3?5?$CFf?5loops?3?5?$CFi?5operation@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_01EEMJAFIK@?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03PELOGHMK@?$CFi?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0M@OPPNMGAG@?$DN?5?$CFs?5begin?5?$AA@']
assume ['cs:_rdata']
public ['__real@412e848000000000']
assume ['cs:_rdata']
public ['??_C@_0CJ@JFALIDEG@Performance?5test?5failed?5with?5err@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CH@KJLAKLPI@Unable?5to?5converge?5on?5desired?5du@']
align ['10h']
assume ['cs:_rdata']
public ['__real@3fe0000000000000']
assume ['cs:_rdata']
public ['__real@3feccccccccccccd']
assume ['cs:_rdata']
public ['??_C@_0BO@DPGPFGBP@?$DN?5?$CFs?5calibrating?5?$CFi?5seconds?5?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CP@NMJIIHCA@?$CFs?5returned?5an?5illegal?5operation@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BK@FCJFGPEI@?$CFs?5function?5returned?5NULL?$AA@']
align ['4']
assume ['cs:_rdata']
public ['__real@0000000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?usage@UPerfTest@@UAEXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['offset', '?gUsageString@UPerfTest@@2QBDB']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_2A0C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+40h]']
mov ['[ebp+var_11],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+40h],', '1']
mov ['esi,', 'esp']
push ['offset', '??_C@_0N@DEFLPKOO@Test?5names?3?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0N@NAAKPPPI@?9?9?9?9?9?9?9?9?9?9?9?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2AA8']
jmp ['short', 'loc_2AEF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
push ['offset', '??_C@_03OFAPEBGM@?$CFs?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_2AEF']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2A7E']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_11]']
mov ['[eax+40h],', 'cl']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN10_0']
dd ['offset', '$LN9_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03OFAPEBGM@?$CFs?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0N@NAAKPPPI@?9?9?9?9?9?9?9?9?9?9?9?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0N@DEFLPKOO@Test?5names?3?6?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setCaller@UPerfTest@@QAEXPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+54h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+54h],', '0']
jz ['short', 'loc_2BA4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ecx+40h]']
mov ['[edx+40h],', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?callTest@UPerfTest@@MAECAAV1@PAD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', 'ds:_execCount']
sub ['eax,', '1']
mov ['ds:_execCount,', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setCaller@UPerfTest@@QAEXPAV1@@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+58h]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?runTest@UPerfTest@@QAECPAD0@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UPerfTest@@UAE@XZ proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UPerfTest@@6B@']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_2C68']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_2C80']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_2C98']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ucbuf_close']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['___security_cookie:near']
extrn ['__fltused:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__imp__QueryPerformanceFrequency@4:near']
extrn ['__imp__QueryPerformanceCounter@4:near']
extrn ['??_7type_info@@6B@:near']
extrn ['__purecall:near']
extrn ['??3@YAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__imp__printf:near']
extrn ['_u_errorName_56:near']
extrn ['_ucbuf_open:near']
extrn ['_uprv_malloc_56:near']
extrn ['_ucbuf_resolveFileName:near']
extrn ['__imp__atoi:near']
extrn ['_u_parseArgs:near']
extrn ['_memcpy:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_ucbuf_readline:near']
extrn ['??2@YAPAXI@Z:near']
extrn ['_u_strncpy_56:near']
extrn ['_ucbuf_getBuffer:near']
extrn ['_ucbuf_size:near']
extrn ['__imp__strchr:near']
extrn ['_strcmp:near']
extrn ['__ftol2_sse:near']
extrn ['__imp__puts:near']
extrn ['_ucbuf_close:near']
extrn ['_uprv_free_56:near']
end

endp
_cleanUpTestTree proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Memory]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_8059E']
mov ['eax,', '[ebp+Memory]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_cleanUpTestTree']
add ['esp,', '4']
mov ['eax,', '[ebp+Memory]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_805B6']
mov ['eax,', '[ebp+Memory]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_cleanUpTestTree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__free']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_addTest	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_80622']
push ['0']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['_createTestNode']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_addTestNode']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_80662']
mov ['eax,', 'ds:?__LINE__Var@?1??addTest@@9@9']
add ['eax,', '8']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GC@DICOJOLO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BK@EGGGPDMA@?$AAn?$AAe?$AAw?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BK@EGGGPDMA@?$AAn?$AAe?$AAw?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<newNode', '!=', '0>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GC@DICOJOLO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\tools\\ctestfw\\ctest.c>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??addTest@@9@9']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_createTestNode	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Count]']
add ['eax,', '11h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__malloc']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Count]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '0Ch']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+Count]']
mov ['byte', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_addTestNode	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['short', 'loc_807D6']
mov ['eax,', '[ebp+Source]']
add ['eax,', '1']
mov ['[ebp+Source],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+Source]']
push ['edx']
call ['_getNextLevel']
add ['esp,', '0Ch']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_80843']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+Source]']
push ['edx']
call ['_getNextLevel']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Count]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
call ['_createTestNode']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+Source],', 'eax']
cmp ['[ebp+Source],', '0']
jnz ['short', 'loc_807FF']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_808AF']
mov ['eax,', '[ebp+Count]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+Source]']
push ['edx']
call ['_strncmp_nullcheck']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_80893']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_80891']
mov ['eax,', '[ebp+Count]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
call ['_createTestNode']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
jmp ['short', 'loc_80893']
jmp ['short', 'loc_80843']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_8089E']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_808AF']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+Source],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_807DC']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN16']
dd ['offset', '$LN14']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN15']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_strncmp_nullcheck proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
cmp ['eax,', '[ebp+MaxCount]']
jl ['short', 'loc_8094D']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+MaxCount]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8094D']
mov ['eax,', '3']
jmp ['short', 'loc_8096B']
jmp ['short', 'loc_8096B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+MaxCount]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getNextLevel	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1CC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
push ['2Fh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_80A19']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+Str]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+ecx+Dest],', '0']
jmp ['short', 'loc_80A2A']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_str_timeDelta	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
fld ['ds:__real@40fadb0000000000']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_80AFD']
fld ['[ebp+arg_4]']
fdiv ['ds:__real@40ed4c0000000000']
sub ['esp,', '8']
fstp ['[esp+0E4h+var_E4]']
call ['_uprv_floor_56']
add ['esp,', '8']
fstp ['[ebp+var_C]']
fld ['[ebp+var_C]']
fmul ['ds:__real@40ed4c0000000000']
fsubr ['[ebp+arg_4]']
fdiv ['ds:__real@408f400000000000']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+0E4h+var_E4]']
sub ['esp,', '8']
fld ['[ebp+var_C]']
fstp ['[esp+0ECh+var_EC]']
push ['offset', '??_C@_0BA@HKDGLKJE@?$FL?$CI?$CF?40fm?5?$CF?41fs?$CJ?$FN?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_80BB1']
fld ['ds:__real@4097700000000000']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_80B39']
fld ['[ebp+arg_4]']
fdiv ['ds:__real@408f400000000000']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+0E4h+var_E4]']
push ['offset', '??_C@_09IEMGGBPG@?$CI?$CI?$CF?41fs?$CJ?$CJ?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_80BB1']
fld ['ds:__real@408c200000000000']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_80B75']
fld ['[ebp+arg_4]']
fdiv ['ds:__real@408f400000000000']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+0E4h+var_E4]']
push ['offset', '??_C@_09LGFLIKMP@?$CI?5?$CF?42fs?5?$CJ?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_80BB1']
fld ['ds:__real@4014000000000000']
fcomp ['[ebp+arg_4]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_80BAB']
mov ['esi,', 'esp']
sub ['esp,', '8']
fld ['[ebp+arg_4]']
fstp ['[esp+0E4h+var_E4]']
push ['offset', '??_C@_0L@KGAKJJDO@?5?$CI?$CF?40fms?$CJ?5?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_80BB1']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0L@KGAKJJDO@?5?$CI?$CF?40fms?$CJ?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['__real@4014000000000000']
assume ['cs:_rdata']
public ['??_C@_09LGFLIKMP@?$CI?5?$CF?42fs?5?$CJ?$AA@']
align ['4']
assume ['cs:_rdata']
public ['__real@408c200000000000']
assume ['cs:_rdata']
public ['??_C@_09IEMGGBPG@?$CI?$CI?$CF?41fs?$CJ?$CJ?$AA@']
align ['4']
assume ['cs:_rdata']
public ['__real@4097700000000000']
assume ['cs:_rdata']
public ['??_C@_0BA@HKDGLKJE@?$FL?$CI?$CF?40fm?5?$CF?41fs?$CJ?$FN?$AA@']
assume ['cs:_rdata']
public ['__real@408f400000000000']
assume ['cs:_rdata']
public ['__real@40ed4c0000000000']
assume ['cs:_rdata']
public ['__real@40fadb0000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_showTests	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8C8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8C8]']
mov ['ecx,', '232h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_80C5D']
push ['offset', '??_C@_0BF@JGOJDOAC@TEST?5CAN?8T?5BE?5FOUND?$CB?$AA@']
call ['_log_err']
add ['esp,', '4']
push ['1']
lea ['eax,', '[ebp+var_804]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_iterateTestsWithLevel']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '8C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BF@JGOJDOAC@TEST?5CAN?8T?5BE?5FOUND?$CB?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_iterateTestsWithLevel proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '400h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_400]']
mov ['ecx,', '100h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['al,', 'ds:??_C@_00CNPNBAHC@?$AA@']
mov ['[ebp+Dest],', 'al']
push ['7Fh']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+Source],', '2Fh']
mov ['[ebp+var_9F],', '0']
fld ['ds:__real@bff0000000000000']
fstp ['[ebp+var_B0]']
fld ['ds:__real@bff0000000000000']
fstp ['[ebp+var_C0]']
cmp ['[ebp+arg_4],', '2']
jge ['short', 'loc_80D51']
call ['_uprv_getRawUTCtime_56']
fstp ['[ebp+var_B0]']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_80D5C']
jmp ['loc_812BE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_80D83']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
cmp ['[ebp+var_C],', 'eax']
jge ['short', 'loc_80DC2']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
add ['edx,', '0Ch']
push ['edx']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
lea ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
jmp ['short', 'loc_80D7A']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
add ['edx,', '0Ch']
push ['edx']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ds:_INDENT_LEVEL,', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
test ['ecx,', 'ecx']
jz ['short', 'loc_80E0A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
push ['offset', '??_C@_03IKGEINEE@?$CFs?5?$AA@']
call ['_log_testinfo_i']
add ['esp,', '8']
jmp ['short', 'loc_80E1D']
mov ['eax,', 'ds:_ARGV_0']
push ['eax']
push ['offset', '??_C@_05HHHBCPMM@?$CI?$CFs?$CJ?5?$AA@']
call ['_log_testinfo_i']
add ['esp,', '8']
mov ['ds:_ON_LINE,', '1']
cmp ['[ebp+arg_C],', '0']
jnz ['loc_810CF']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['loc_810CF']
mov ['eax,', 'ds:_ERROR_COUNT']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ds:_currentTest,', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_INDENT_LEVEL,', 'eax']
mov ['ds:_ONE_ERROR,', '0']
mov ['ds:_HANGING_OUTPUT,', '0']
call ['_uprv_getRawUTCtime_56']
fstp ['[ebp+var_E8]']
lea ['eax,', '[ebp+Dest]']
push ['eax']
push ['offset', '_gTestName']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax]']
call ['ecx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
call ['_uprv_getRawUTCtime_56']
fstp ['[ebp+var_F8]']
movsx ['eax,', 'ds:_HANGING_OUTPUT']
test ['eax,', 'eax']
jz ['short', 'loc_80ECA']
push ['offset', '??_C@_01EEMJAFIK@?6?$AA@']
call ['_log_testinfo']
add ['esp,', '4']
mov ['ds:_HANGING_OUTPUT,', '0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ds:_INDENT_LEVEL,', 'eax']
mov ['ds:_currentTest,', '0']
cmp ['ds:_ONE_ERROR,', '0']
jle ['short', 'loc_80EFE']
cmp ['ds:_ERROR_COUNT,', '0']
jnz ['short', 'loc_80EFE']
mov ['eax,', 'ds:_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_ERROR_COUNT,', 'eax']
mov ['ds:_ONE_ERROR,', '0']
fld ['[ebp+var_F8]']
fsub ['[ebp+var_E8]']
sub ['esp,', '8']
fstp ['[esp+414h+var_414]']
lea ['eax,', '[ebp+var_200]']
push ['eax']
call ['_str_timeDelta']
add ['esp,', '0Ch']
fld ['[ebp+var_F8]']
fsub ['[ebp+var_E8]']
fdiv ['ds:__real@408f400000000000']
mov ['esi,', 'esp']
sub ['esp,', '8']
fstp ['[esp+414h+var_414]']
push ['offset', '??_C@_02NJPGOMH@?$CFf?$AA@']
lea ['eax,', '[ebp+var_308]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_CC]']
sub ['eax,', 'ds:_ERROR_COUNT']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', 'offset', '??_C@_05KKCIMGE@error?$AA@']
push ['eax']
lea ['ecx,', '[ebp+var_308]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_ctest_xml_testcase']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_CC]']
cmp ['eax,', 'ds:_ERROR_COUNT']
jz ['short', 'loc_80FFE']
lea ['eax,', '[ebp+Dest]']
push ['eax']
mov ['ecx,', 'ds:_ERROR_COUNT']
sub ['ecx,', '[ebp+var_CC]']
push ['ecx']
push ['offset', '??_C@_0BI@GFEKBBB@?$HN?5?9?9?9?$FL?$CFd?5ERRORS?5in?5?$CFs?$FN?5?$AA@']
call ['_log_testinfo_i']
add ['esp,', '0Ch']
mov ['eax,', 'ds:_ERRONEOUS_FUNCTION_COUNT']
shl ['eax,', '7']
add ['eax,', 'offset', '_ERROR_LOG']
mov ['[ebp+var_400],', 'eax']
mov ['ecx,', 'ds:_ERRONEOUS_FUNCTION_COUNT']
add ['ecx,', '1']
mov ['ds:_ERRONEOUS_FUNCTION_COUNT,', 'ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+var_400]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
jmp ['loc_8109F']
movsx ['eax,', 'ds:_ON_LINE']
test ['eax,', 'eax']
jnz ['short', 'loc_8105B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '2Dh']
sub ['ecx,', 'eax']
mov ['dword', 'ptr', '[ebp+var_314],', 'ecx']
push ['offset', '??_C@_03JMFMNIFM@?9?9?9?$AA@']
mov ['eax,', 'dword', 'ptr', '[ebp+var_314]']
push ['eax']
push ['offset', '??_C@_0L@JCNMFACC@?$HN?5?$CF?$CKs?$FLOK?$FN?5?$AA@']
call ['_log_testinfo_i']
add ['esp,', '0Ch']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
sub ['eax,', '[ebp+var_D8]']
cmp ['eax,', '19h']
jle ['short', 'loc_81059']
lea ['eax,', '[ebp+Dest]']
push ['eax']
push ['offset', '??_C@_04KMMDIKEB@?5?$CFs?5?$AA@']
call ['_log_testinfo']
add ['esp,', '8']
jmp ['short', 'loc_8109F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+arg_4]']
mov ['ecx,', '2Dh']
sub ['ecx,', 'eax']
mov ['dword', 'ptr', '[ebp+var_320],', 'ecx']
jns ['short', 'loc_81086']
mov ['dword', 'ptr', '[ebp+var_320],', '0']
push ['offset', '??_C@_03JMFMNIFM@?9?9?9?$AA@']
mov ['eax,', 'dword', 'ptr', '[ebp+var_320]']
push ['eax']
push ['offset', '??_C@_09CPGHJGEM@?5?$CF?$CKs?$FLOK?$FN?5?$AA@']
call ['_log_testinfo']
add ['esp,', '0Ch']
movsx ['eax,', '[ebp+var_200]']
test ['eax,', 'eax']
jz ['short', 'loc_810C8']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_200]']
push ['eax']
push ['offset', '??_C@_02DKCKIIND@?$CFs?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_ON_LINE,', '1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ds:_INDENT_LEVEL,', 'eax']
cmp ['[ebp+arg_C],', '1']
jnz ['short', 'loc_8110A']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['eax,', '[edx]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0FFFFFFF1h']
add ['eax,', '2Fh']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
push ['offset', '??_C@_08GINAGNBL@?9?9?9?$CFs?$CFc?6?$AA@']
call ['_log_testinfo']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_INDENT_LEVEL,', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_8124B']
mov ['eax,', 'ds:_ERROR_COUNT']
mov ['[ebp+var_32C],', 'eax']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
mov ['[ebp+var_338],', 'eax']
cmp ['[ebp+arg_C],', '1']
jz ['short', 'loc_8115B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ds:_INDENT_LEVEL,', 'eax']
push ['offset', '??_C@_02KCPFEJNG@?$HL?6?$AA@']
call ['_log_testinfo']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_INDENT_LEVEL,', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_iterateTestsWithLevel']
add ['esp,', '10h']
cmp ['[ebp+arg_C],', '1']
jz ['loc_8124B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ds:_INDENT_LEVEL,', 'eax']
push ['offset', '??_C@_02MJBDPJEM@?$HN?5?$AA@']
call ['_log_testinfo_i']
add ['esp,', '4']
cmp ['[ebp+arg_4],', '1']
jle ['short', 'loc_811FA']
mov ['eax,', 'ds:_ERROR_COUNT']
cmp ['eax,', '[ebp+var_32C]']
jle ['short', 'loc_811FA']
mov ['eax,', 'ds:_ERROR_COUNT']
sub ['eax,', '[ebp+var_32C]']
cmp ['eax,', '1']
jnz ['short', 'loc_811C7']
mov ['[ebp+var_400],', 'offset', '??_C@_05KKCIMGE@error?$AA@']
jmp ['short', 'loc_811D1']
mov ['[ebp+var_400],', 'offset', '??_C@_06EOMHCNPI@errors?$AA@']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+var_400]']
push ['edx']
mov ['eax,', 'ds:_ERROR_COUNT']
sub ['eax,', '[ebp+var_32C]']
push ['eax']
push ['offset', '??_C@_0P@BNHDODKF@?$FL?$CFd?5?$CFs?5in?5?$CFs?$FN?5?$AA@']
call ['_log_testinfo']
add ['esp,', '10h']
jmp ['short', 'loc_81244']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
sub ['eax,', '[ebp+var_338]']
cmp ['eax,', '19h']
jg ['short', 'loc_81210']
cmp ['[ebp+arg_4],', '1']
jge ['short', 'loc_81244']
movsx ['eax,', '[ebp+Dest]']
test ['eax,', 'eax']
jz ['short', 'loc_81231']
lea ['eax,', '[ebp+Dest]']
push ['eax']
push ['offset', '??_C@_04KMMDIKEB@?5?$CFs?5?$AA@']
call ['_log_testinfo']
add ['esp,', '8']
jmp ['short', 'loc_81244']
mov ['eax,', 'ds:_ARGV_0']
push ['eax']
push ['offset', '??_C@_08ENKAFBAE@?5?1?5?$CI?$CFs?$CJ?5?$AA@']
call ['_log_testinfo']
add ['esp,', '8']
mov ['ds:_ON_LINE,', '1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '2']
jge ['short', 'loc_8127F']
call ['_uprv_getRawUTCtime_56']
fstp ['[ebp+var_C0]']
fld ['[ebp+var_C0]']
fsub ['[ebp+var_B0]']
sub ['esp,', '8']
fstp ['[esp+414h+var_414]']
call ['_print_timeDelta']
add ['esp,', '8']
cmp ['[ebp+arg_C],', '1']
jz ['short', 'loc_8129D']
movsx ['eax,', 'ds:_ON_LINE']
test ['eax,', 'eax']
jz ['short', 'loc_8129D']
push ['offset', '??_C@_01EEMJAFIK@?6?$AA@']
call ['_log_testinfo']
add ['esp,', '4']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_812BE']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_iterateTestsWithLevel']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN40']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '400h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN39']
dd ['offset', '$LN35']
dd ['0FFFFFF60h,', '2']
dd ['offset', '$LN36']
dd ['0FFFFFE00h,', '100h']
dd ['offset', '$LN37']
dd ['0FFFFFCF8h,', '100h']
dd ['offset', '$LN38']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_08ENKAFBAE@?5?1?5?$CI?$CFs?$CJ?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0P@BNHDODKF@?$FL?$CFd?5?$CFs?5in?5?$CFs?$FN?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06EOMHCNPI@errors?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02MJBDPJEM@?$HN?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02KCPFEJNG@?$HL?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08GINAGNBL@?9?9?9?$CFs?$CFc?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02DKCKIIND@?$CFs?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_09CPGHJGEM@?5?$CF?$CKs?$FLOK?$FN?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04KMMDIKEB@?5?$CFs?5?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0L@JCNMFACC@?$HN?5?$CF?$CKs?$FLOK?$FN?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03JMFMNIFM@?9?9?9?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BI@GFEKBBB@?$HN?5?9?9?9?$FL?$CFd?5ERRORS?5in?5?$CFs?$FN?5?$AA@']
assume ['cs:_rdata']
public ['??_C@_05KKCIMGE@error?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02NJPGOMH@?$CFf?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01EEMJAFIK@?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05HHHBCPMM@?$CI?$CFs?$CJ?5?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_03IKGEINEE@?$CFs?5?$AA@']
assume ['cs:_rdata']
public ['__real@bff0000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_print_timeDelta proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1CC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
sub ['esp,', '8']
fld ['[ebp+arg_0]']
fstp ['[esp+1E0h+var_1E0]']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_str_timeDelta']
add ['esp,', '0Ch']
movsx ['eax,', '[ebp+Dest]']
test ['eax,', 'eax']
jz ['short', 'loc_81465']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Dest]']
push ['eax']
push ['offset', '??_C@_02DKCKIIND@?$CFs?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_1']
dd ['offset', '$LN4_0']
jnb ['short', 'loc_8151E']
jb ['short', '$+2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_runTests	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8E0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8E0]']
mov ['ecx,', '238h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_814DD']
push ['offset', '??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@']
call ['_log_err']
add ['esp,', '4']
mov ['ds:_ERROR_COUNT,', '0']
mov ['eax,', 'ds:_ERROR_COUNT']
mov ['ds:_ERRONEOUS_FUNCTION_COUNT,', 'eax']
push ['0']
lea ['eax,', '[ebp+var_810]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_iterateTestsWithLevel']
add ['esp,', '10h']
mov ['ds:_ON_LINE,', '0']
cmp ['ds:_knownList,', '0']
jz ['short', 'loc_8156F']
mov ['eax,', 'ds:_knownList']
push ['eax']
call ['_udbg_knownIssue_print']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_81557']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DB@CHHPMNNC@?$CITo?5run?5suppressed?5tests?0?5use?5th@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', 'ds:_knownList']
push ['eax']
call ['_udbg_knownIssue_close']
add ['esp,', '4']
mov ['ds:_knownList,', '0']
cmp ['ds:_ERROR_COUNT,', '0']
jz ['loc_8173C']
mov ['esi,', 'esp']
push ['offset', '??_C@_0L@GILEGBOG@?6SUMMARY?3?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_ERROR_COUNT']
push ['eax']
push ['offset', '??_C@_0CB@DMAFLBPA@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5?$FLTotal?5error?5count?3?7?$CFd?$FN?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0M@NHCOHMGE@?5Errors?5in?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_8165C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', 'ds:_ERRONEOUS_FUNCTION_COUNT']
jge ['short', 'loc_8169F']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '7']
add ['eax,', 'offset', '_ERROR_LOG']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_05MGFEFMAH@?$FL?$CFs?$FN?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_81653']
cmp ['ds:_SUMMARY_FILE,', '0']
jz ['loc_8173A']
mov ['esi,', 'esp']
push ['offset', '??_C@_01NOFIACDB@w?$AA@']
mov ['eax,', 'ds:_SUMMARY_FILE']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jz ['short', 'loc_8173A']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_816EA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', 'ds:_ERRONEOUS_FUNCTION_COUNT']
jge ['short', 'loc_81721']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '7']
add ['eax,', 'offset', '_ERROR_LOG']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_03OFAPEBGM@?$CFs?6?$AA@']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_816E1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_81749']
push ['offset', '??_C@_0CF@DIHJIFPO@?6?$FLAll?5tests?5passed?5successfully?4@']
call ['_log_testinfo']
add ['esp,', '4']
cmp ['ds:_DATA_ERROR_COUNT,', '0']
jz ['short', 'loc_81777']
cmp ['ds:_WARN_ON_MISSING_DATA,', '0']
jnz ['short', 'loc_8176A']
push ['offset', '??_C@_0MH@FFLCIJLN@?7?$CKNote?$CK?5some?5errors?5are?5data?9loa@']
call ['_log_testinfo']
add ['esp,', '4']
jmp ['short', 'loc_81777']
push ['offset', '??_C@_0EE@OICEBPGO@?7?$CKWARNING?$CK?5some?5data?9loading?5err@']
call ['_log_testinfo']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '8E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN20']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EE@OICEBPGO@?7?$CKWARNING?$CK?5some?5data?9loading?5err@']
db ["'.',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0MH@FFLCIJLN@?7?$CKNote?$CK?5some?5errors?5are?5data?9loa@']
db ["'", 'not', 'the', "',0Ah"]
db ["9,'stock", 'ICU', 'data', '(i.e', 'some', 'have', 'been', 'added', 'or', 'removed),', 'consider', "u'"]
db ["'sing',0Ah"]
db ["9,'the", "',27h,'-w',27h,'", 'option', 'to', 'turn', 'these', 'errors', 'into', "warnings.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@DIHJIFPO@?6?$FLAll?5tests?5passed?5successfully?4@']
db ["'[All", 'tests', 'passed', "successfully...]',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_03OFAPEBGM@?$CFs?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_01NOFIACDB@w?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05MGFEFMAH@?$FL?$CFs?$FN?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0M@NHCOHMGE@?5Errors?5in?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0CB@DMAFLBPA@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5?$FLTotal?5error?5count?3?7?$CFd?$FN?6@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0L@GILEGBOG@?6SUMMARY?3?6?$AA@']
db ["'SUMMARY:',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DB@CHHPMNNC@?$CITo?5run?5suppressed?5tests?0?5use?5th@']
db ['0Ah,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getTestName	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_currentTest,', '0']
jz ['short', 'loc_819BB']
mov ['eax,', 'ds:_currentTest']
add ['eax,', '0Ch']
jmp ['short', 'loc_819BD']
jmp ['short', 'loc_819BD']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getTest	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_819FC']
push ['offset', '??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@']
call ['_log_err']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_81A8C']
mov ['eax,', '[ebp+Str1]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['short', 'loc_81A10']
mov ['eax,', '[ebp+Str1]']
add ['eax,', '1']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+MaxCount]']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_getNextLevel']
add ['esp,', '0Ch']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_81A3D']
xor ['eax,', 'eax']
jmp ['short', 'loc_81A8C']
mov ['eax,', '[ebp+MaxCount]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strncmp_nullcheck']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_81A73']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_81A71']
xor ['eax,', 'eax']
jmp ['short', 'loc_81A8C']
jmp ['short', 'loc_81A3D']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_81A7E']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_81A8C']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_81A16']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14_0']
dd ['offset', '$LN12']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN13']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_vlog_info	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['_first_line_info']
mov ['esi,', 'esp']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', 'ds:_INDENT_LEVEL']
push ['eax']
push ['offset', '??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_81B6F']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__vfprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+ArgList],', '0']
mov ['eax,', '[ebp+Format]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_81BEB']
mov ['eax,', '[ebp+Format]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Format]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_81BF4']
mov ['ds:_HANGING_OUTPUT,', '1']
jmp ['short', 'loc_81BFB']
mov ['ds:_HANGING_OUTPUT,', '0']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
add ['eax,', '1']
mov ['ds:_GLOBAL_PRINT_COUNT,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_first_line_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '??_C@_01BJJEKLCA@?$CC?$AA@']
call ['_go_offline_with_marker']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_01BJJEKLCA@?$CC?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_go_offline_with_marker	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['al,', 'ds:_ON_LINE']
mov ['[ebp+var_5],', 'al']
movsx ['eax,', 'ds:_ON_LINE']
test ['eax,', 'eax']
jz ['short', 'loc_81CAD']
push ['offset', '??_C@_03NMMCOAOG@?5?$HL?6?$AA@']
call ['_log_testinfo']
add ['esp,', '4']
mov ['ds:_ON_LINE,', '0']
movsx ['eax,', 'ds:_HANGING_OUTPUT']
test ['eax,', 'eax']
jz ['short', 'loc_81CC0']
movsx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_81CEF']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_81CEF']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_03NMMCOAOG@?5?$HL?6?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_testinfo_i	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['_first_line_test']
mov ['esi,', 'esp']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', 'ds:_INDENT_LEVEL']
push ['eax']
push ['offset', '??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+arg_4]']
mov ['[ebp+ArgList],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__vfprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+ArgList],', '0']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
add ['eax,', '1']
mov ['ds:_GLOBAL_PRINT_COUNT,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_first_line_test proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_01CLKCMJKC@?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_01CLKCMJKC@?5?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_testinfo	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_4]']
mov ['[ebp+ArgList],', 'eax']
call ['_first_line_test']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__vfprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+ArgList],', '0']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
add ['eax,', '1']
mov ['ds:_GLOBAL_PRINT_COUNT,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_err	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['_first_line_err']
mov ['esi,', 'esp']
push ['0Ah']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_81F32']
mov ['eax,', 'ds:_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_ERROR_COUNT,', 'eax']
jmp ['short', 'loc_81F3C']
mov ['ds:_ONE_ERROR,', '1']
lea ['eax,', '[ebp+arg_4]']
mov ['[ebp+ArgList],', 'eax']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['0']
call ['_vlog_err']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_first_line_err	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '??_C@_01DCLJPIOD@?$CB?$AA@']
call ['_go_offline_with_marker']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_01DCLJPIOD@?$CB?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_vlog_err	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_ERR_MSG,', '0']
jnz ['short', 'loc_81FD8']
jmp ['loc_820FF']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_01DCLJPIOD@?$CB?$AA@']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', 'ds:_INDENT_LEVEL']
push ['eax']
push ['offset', '??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_82066']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__vfprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+ArgList],', '0']
mov ['eax,', '[ebp+Format]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_820E2']
mov ['eax,', '[ebp+Format]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Format]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_820EB']
mov ['ds:_HANGING_OUTPUT,', '1']
jmp ['short', 'loc_820F2']
mov ['ds:_HANGING_OUTPUT,', '0']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
add ['eax,', '1']
mov ['ds:_GLOBAL_PRINT_COUNT,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_knownIssue	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_8]']
mov ['[ebp+Args],', 'eax']
mov ['eax,', '[ebp+Args]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['edx']
call ['_vlog_knownIssue']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_vlog_knownIssue proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8E4]']
mov ['ecx,', '239h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
movsx ['eax,', 'ds:_NO_KNOWN']
test ['eax,', 'eax']
jz ['short', 'loc_8219A']
xor ['al,', 'al']
jmp ['loc_82244']
cmp ['[ebp+Format],', '0']
jnz ['short', 'loc_821A7']
mov ['[ebp+Format],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Args]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__vsprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_81D]']
push ['eax']
lea ['ecx,', '[ebp+var_811]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
push ['offset', '_gTestName']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', 'ds:_knownList']
push ['ecx']
call ['_udbg_knownIssue_open']
add ['esp,', '18h']
mov ['ds:_knownList,', 'eax']
movsx ['eax,', '[ebp+var_811]']
test ['eax,', 'eax']
jnz ['short', 'loc_82210']
movsx ['eax,', '[ebp+var_81D]']
test ['eax,', 'eax']
jz ['short', 'loc_8222A']
lea ['eax,', '[ebp+Dest]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
push ['offset', '??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@']
call ['_log_info']
add ['esp,', '0Ch']
jmp ['short', 'loc_82242']
lea ['eax,', '[ebp+Dest]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
push ['ecx']
push ['offset', '??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@']
call ['_log_verbose']
add ['esp,', '0Ch']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN8']
dd ['0FFFFF7EFh,', '1']
dd ['offset', '$LN9']
dd ['0FFFFF7E3h,', '1']
dd ['offset', '$LN10']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_err_status	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_8]']
mov ['[ebp+ArgList],', 'eax']
cmp ['[ebp+arg_0],', '4']
jz ['short', 'loc_8230C']
cmp ['[ebp+arg_0],', '2']
jnz ['short', 'loc_8238A']
mov ['eax,', 'ds:_DATA_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_DATA_ERROR_COUNT,', 'eax']
cmp ['ds:_WARN_ON_MISSING_DATA,', '0']
jnz ['short', 'loc_82373']
call ['_first_line_err']
mov ['esi,', 'esp']
push ['0Ah']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_82352']
mov ['eax,', 'ds:_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_ERROR_COUNT,', 'eax']
jmp ['short', 'loc_8235F']
mov ['eax,', 'ds:_ONE_ERROR']
add ['eax,', '1']
mov ['ds:_ONE_ERROR,', 'eax']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['0']
call ['_vlog_err']
add ['esp,', '0Ch']
jmp ['short', 'loc_82388']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@']
call ['_vlog_info']
add ['esp,', '0Ch']
jmp ['short', 'loc_823D9']
call ['_first_line_err']
mov ['esi,', 'esp']
push ['0Ah']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_823BA']
mov ['eax,', 'ds:_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_ERROR_COUNT,', 'eax']
jmp ['short', 'loc_823C7']
mov ['eax,', 'ds:_ONE_ERROR']
add ['eax,', '1']
mov ['ds:_ONE_ERROR,', 'eax']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['0']
call ['_vlog_err']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_info	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_4]']
mov ['[ebp+ArgList],', 'eax']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
push ['0']
call ['_vlog_info']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_verbose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_4]']
mov ['[ebp+ArgList],', 'eax']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
push ['0']
call ['_vlog_verbose']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_vlog_verbose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_VERBOSITY,', '0']
jnz ['short', 'loc_824BC']
jmp ['loc_825BE']
call ['_first_line_verbose']
mov ['esi,', 'esp']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', 'ds:_INDENT_LEVEL']
push ['eax']
push ['offset', '??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_82525']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__vfprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fflush']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+ArgList],', '0']
mov ['eax,', 'ds:_GLOBAL_PRINT_COUNT']
add ['eax,', '1']
mov ['ds:_GLOBAL_PRINT_COUNT,', 'eax']
mov ['eax,', '[ebp+Format]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_825AE']
mov ['eax,', '[ebp+Format]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Format]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_825B7']
mov ['ds:_HANGING_OUTPUT,', '1']
jmp ['short', 'loc_825BE']
mov ['ds:_HANGING_OUTPUT,', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_first_line_verbose proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '??_C@_01MHEDDDHA@v?$AA@']
call ['_go_offline_with_marker']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_01MHEDDDHA@v?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_log_data_err	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
lea ['eax,', '[ebp+arg_4]']
mov ['[ebp+ArgList],', 'eax']
call ['_go_offline_err']
mov ['eax,', 'ds:_DATA_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_DATA_ERROR_COUNT,', 'eax']
cmp ['ds:_WARN_ON_MISSING_DATA,', '0']
jnz ['short', 'loc_82694']
mov ['esi,', 'esp']
push ['0Ah']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_82680']
mov ['eax,', 'ds:_ERROR_COUNT']
add ['eax,', '1']
mov ['ds:_ERROR_COUNT,', 'eax']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['0']
call ['_vlog_err']
add ['esp,', '0Ch']
jmp ['short', 'loc_826A9']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@']
call ['_vlog_info']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_go_offline_err	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['_go_offline']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_go_offline	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0']
call ['_go_offline_with_marker']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_initArgs	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['ds:_VERBOSITY,', '0']
mov ['ds:_ERR_MSG,', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['ds:_ARGV_0,', 'ecx']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_8278A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jge ['loc_82D31']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Fh']
jnz ['short', 'loc_827AE']
jmp ['short', 'loc_82781']
jmp ['loc_82D2C']
push ['offset', '??_C@_02EMMNKJLI@?9a?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_827E4']
push ['offset', '??_C@_04LJDGFNO@?9all?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_827EB']
jmp ['short', 'loc_82781']
jmp ['loc_82D2C']
push ['offset', '??_C@_02EJEOCNCO@?9v?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_82821']
push ['offset', '??_C@_08FBJJFDKJ@?9verbose?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82830']
mov ['ds:_VERBOSITY,', '1']
jmp ['loc_82D2C']
push ['offset', '??_C@_02PJGDNHPF@?9l?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82850']
jmp ['loc_82D2C']
push ['offset', '??_C@_03EKCFJHJ@?9e1?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_8287A']
mov ['ds:_QUICK,', '0FFFFFFFFh']
jmp ['loc_82D2C']
push ['offset', '??_C@_02CIKBGMLM@?9e?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_828A4']
mov ['ds:_QUICK,', '0']
jmp ['loc_82D2C']
push ['offset', '??_C@_02CDKGGFJA@?9K?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_828CB']
mov ['ds:_NO_KNOWN,', '1']
jmp ['loc_82D2C']
mov ['esi,', 'esp']
push ['2']
push ['offset', '??_C@_02LNCFEIBO@?9E?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_82909']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
add ['edx,', '2']
mov ['ds:_SUMMARY_FILE,', 'edx']
jmp ['loc_82D2C']
push ['offset', '??_C@_02FAFFBMGP@?9w?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82933']
mov ['ds:_WARN_ON_MISSING_DATA,', '1']
jmp ['loc_82D2C']
push ['offset', '??_C@_02OAHIOGLE@?9m?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_82AB6']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
cmp ['eax,', '[ebp+arg_0]']
jge ['loc_82A63']
mov ['[ebp+EndPtr],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strtol']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_MINIMUM_MEMORY_SIZE_FAILURE,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+EndPtr]']
cmp ['edx,', '[ecx+eax*4]']
jnz ['short', 'loc_829E3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_help']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_82D66']
mov ['eax,', '[ebp+EndPtr]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_82A63']
mov ['eax,', '[ebp+EndPtr]']
add ['eax,', '1']
mov ['[ebp+Str],', 'eax']
mov ['[ebp+EndPtr],', '0']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtol']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_MAXIMUM_MEMORY_SIZE_FAILURE,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+EndPtr]']
cmp ['edx,', '[ecx+eax*4]']
jnz ['short', 'loc_82A63']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_help']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_82D66']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['offset', '_ctest_libFree']
push ['offset', '_ctest_libRealloc']
push ['offset', '_ctest_libMalloc']
push ['0']
call ['_u_setMemoryFunctions_56']
add ['esp,', '14h']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_82AB1']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0CC@EHEPPJKJ@u_setMemoryFunctions?5returned?5?$CFs@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_82D66']
jmp ['loc_82D2C']
push ['offset', '??_C@_02MLFFLFHH@?9n?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_82AEC']
push ['offset', '??_C@_0M@CHADBAFI@?9no_err_msg?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82AFB']
mov ['ds:_ERR_MSG,', '0']
jmp ['loc_82D2C']
push ['offset', '??_C@_02CNCCOICK@?9r?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82B31']
cmp ['ds:_REPEAT_TESTS_INIT,', '0']
jnz ['short', 'loc_82B2C']
mov ['eax,', 'ds:_REPEAT_TESTS']
add ['eax,', '1']
mov ['ds:_REPEAT_TESTS,', 'eax']
jmp ['loc_82D2C']
push ['offset', '??_C@_02NHMNAAKA@?9x?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82B9D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_0]']
jl ['short', 'loc_82B7B']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EF@IMCGMIKN@?$CK?5Error?3?5?8?9x?8?5option?5requires?5an@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_82D66']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_ctest_xml_setFileName']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_82B98']
xor ['eax,', 'eax']
jmp ['loc_82D66']
jmp ['loc_82D2C']
push ['offset', '??_C@_07PMLFEMPN@?9t_info?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82BC7']
mov ['ds:_ICU_TRACE,', '7']
jmp ['loc_82D2C']
push ['offset', '??_C@_08NDFAFKKJ@?9t_error?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82BF1']
mov ['ds:_ICU_TRACE,', '0']
jmp ['loc_82D2C']
push ['offset', '??_C@_07HJDCEPKF@?9t_warn?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82C1B']
mov ['ds:_ICU_TRACE,', '3']
jmp ['loc_82D2C']
push ['offset', '??_C@_0L@LAOIPKIK@?9t_verbose?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82C45']
mov ['ds:_ICU_TRACE,', '9']
jmp ['loc_82D2C']
push ['offset', '??_C@_05GHGIKFDG@?9t_oc?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82C6F']
mov ['ds:_ICU_TRACE,', '5']
jmp ['loc_82D2C']
push ['offset', '??_C@_02JNAPBCPB@?9h?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_82CA5']
push ['offset', '??_C@_06LMIDBODK@?9?9help?$AA@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82CBC']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_help']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_82D66']
jmp ['short', 'loc_82D2C']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_82CF9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['[ebp+arg_8]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_82CF9']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_82D2C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0BG@BEGIPHIA@?$CK?5unknown?5option?3?5?$CFs?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_help']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_82D66']
jmp ['loc_82781']
cmp ['ds:_ICU_TRACE,', '0FFFFFFFFh']
jz ['short', 'loc_82D61']
push ['offset', '_TraceData']
push ['offset', '_TraceExit']
push ['offset', '_TraceEntry']
push ['0']
call ['_utrace_setFunctions_56']
add ['esp,', '10h']
mov ['eax,', 'ds:_ICU_TRACE']
push ['eax']
call ['_utrace_setLevel_56']
add ['esp,', '4']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN62']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN61']
dd ['offset', '$LN59']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN60']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BG@BEGIPHIA@?$CK?5unknown?5option?3?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06LMIDBODK@?9?9help?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02JNAPBCPB@?9h?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05GHGIKFDG@?9t_oc?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0L@LAOIPKIK@?9t_verbose?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07HJDCEPKF@?9t_warn?$AA@']
assume ['cs:_rdata']
public ['??_C@_08NDFAFKKJ@?9t_error?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07PMLFEMPN@?9t_info?$AA@']
assume ['cs:_rdata']
public ['??_C@_0EF@IMCGMIKN@?$CK?5Error?3?5?8?9x?8?5option?5requires?5an@']
db ["'tfile.xml',27h,'.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_02NHMNAAKA@?9x?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02CNCCOICK@?9r?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0M@CHADBAFI@?9no_err_msg?$AA@']
assume ['cs:_rdata']
public ['??_C@_02MLFFLFHH@?9n?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CC@EHEPPJKJ@u_setMemoryFunctions?5returned?5?$CFs@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_02OAHIOGLE@?9m?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02FAFFBMGP@?9w?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02LNCFEIBO@?9E?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02CDKGGFJA@?9K?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02CIKBGMLM@?9e?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03EKCFJHJ@?9e1?$AA@']
assume ['cs:_rdata']
public ['??_C@_02PJGDNHPF@?9l?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08FBJJFDKJ@?9verbose?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_02EJEOCNCO@?9v?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04LJDGFNO@?9all?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02EMMNKJLI@?9a?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_TraceEntry	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C0]']
mov ['ecx,', '0B0h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_utrace_functionName_56']
add ['esp,', '4']
push ['eax']
push ['offset', '??_C@_0N@ILABBDEO@?$CFs?$CI?$CJ?5enter?4?6?$AA@']
mov ['ecx,', 'ds:_traceFnNestingDepth']
imul ['ecx,', '3']
push ['ecx']
push ['1F4h']
lea ['edx,', '[ebp+Str]']
push ['edx']
call ['_utrace_format_56']
add ['esp,', '14h']
mov ['[ebp+var_9],', '0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', 'ds:_traceFnNestingDepth']
add ['eax,', '1']
mov ['ds:_traceFnNestingDepth,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN4_1']
dd ['offset', '$LN3']
assume ['cs:_rdata']
public ['??_C@_0N@ILABBDEO@?$CFs?$CI?$CJ?5enter?4?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_TraceExit	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C0]']
mov ['ecx,', '0B0h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['ds:_traceFnNestingDepth,', '0']
jle ['short', 'loc_8300A']
mov ['eax,', 'ds:_traceFnNestingDepth']
sub ['eax,', '1']
mov ['ds:_traceFnNestingDepth,', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_utrace_functionName_56']
add ['esp,', '4']
push ['eax']
push ['offset', '??_C@_05GALAIONK@?$CFs?$CI?$CJ?5?$AA@']
mov ['ecx,', 'ds:_traceFnNestingDepth']
imul ['ecx,', '3']
push ['ecx']
push ['1F4h']
lea ['edx,', '[ebp+Str]']
push ['edx']
call ['_utrace_format_56']
add ['esp,', '14h']
mov ['[ebp+var_9],', '0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', 'ds:_traceFnNestingDepth']
imul ['edx,', '3']
push ['edx']
push ['1F4h']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['_utrace_vformat_56']
add ['esp,', '14h']
mov ['[ebp+var_9],', '0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
push ['0Ah']
call ['dword', 'ptr', 'ds:__imp__putc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_3']
dd ['offset', '$LN4_2']
assume ['cs:_rdata']
public ['??_C@_05GALAIONK@?$CFs?$CI?$CJ?5?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_TraceData	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C0]']
mov ['ecx,', '0B0h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', 'ds:_traceFnNestingDepth']
imul ['edx,', '3']
push ['edx']
push ['1F4h']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['_utrace_vformat_56']
add ['esp,', '14h']
mov ['[ebp+var_9],', '0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
mov ['esi,', 'esp']
push ['eax']
push ['0Ah']
call ['dword', 'ptr', 'ds:__imp__putc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN4_3']
dd ['offset', '$LN3_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_libMalloc proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:_MINIMUM_MEMORY_SIZE_FAILURE']
cmp ['eax,', '[ebp+Size]']
ja ['short', 'loc_8325B']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', 'ds:_MAXIMUM_MEMORY_SIZE_FAILURE']
ja ['short', 'loc_8325B']
xor ['eax,', 'eax']
jmp ['short', 'loc_83271']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__malloc']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_libRealloc proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:_MINIMUM_MEMORY_SIZE_FAILURE']
cmp ['eax,', '[ebp+NewSize]']
ja ['short', 'loc_832BF']
mov ['eax,', '[ebp+NewSize]']
cmp ['eax,', 'ds:_MAXIMUM_MEMORY_SIZE_FAILURE']
ja ['short', 'loc_832BF']
xor ['eax,', 'eax']
jmp ['short', 'loc_832D9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+NewSize]']
push ['eax']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__realloc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_libFree	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__free']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_runTestRequest	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', 'ds:_ARGV_0']
push ['eax']
call ['_ctest_xml_init']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_8338D']
mov ['eax,', '1']
jmp ['loc_83569']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_8339F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_834E1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Fh']
jnz ['loc_8347B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0BI@FNIHCHFH@Selecting?5subtree?5?8?$CFs?8?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jnz ['short', 'loc_833FA']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_83413']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getTest']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_83438']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CH@GBFFJDEP@?$CK?5Could?5not?5find?5any?5matching?5su@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_83569']
mov ['ds:_ON_LINE,', '0']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_83453']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_showTests']
add ['esp,', '4']
jmp ['short', 'loc_8345F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_runTests']
add ['esp,', '4']
mov ['ds:_ON_LINE,', '0']
mov ['eax,', '[ebp+var_38]']
add ['eax,', 'ds:_ERROR_COUNT']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_834DC']
push ['offset', '??_C@_02EMMNKJLI@?9a?$AA@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_834B1']
push ['offset', '??_C@_04LJDGFNO@?9all?$AA@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_834BA']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_834DC']
push ['offset', '??_C@_02PJGDNHPF@?9l?$AA@']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_834DC']
mov ['[ebp+var_20],', '1']
jmp ['loc_83396']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_83523']
mov ['ds:_ON_LINE,', '0']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_83502']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_showTests']
add ['esp,', '4']
jmp ['short', 'loc_8350E']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_runTests']
add ['esp,', '4']
mov ['ds:_ON_LINE,', '0']
mov ['eax,', '[ebp+var_38]']
add ['eax,', 'ds:_ERROR_COUNT']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_8354A']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_8354A']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_8354A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
push ['eax']
push ['offset', '??_C@_0BD@NOIHIDFB@?5Total?5errors?3?5?$CFd?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_REPEAT_TESTS_INIT,', '1']
call ['_ctest_xml_fini']
test ['eax,', 'eax']
jz ['short', 'loc_83566']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BD@NOIHIDFB@?5Total?5errors?3?5?$CFd?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CH@GBFFJDEP@?$CK?5Could?5not?5find?5any?5matching?5su@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BI@FNIHCHFH@Selecting?5subtree?5?8?$CFs?8?6?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_help		proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_0KH@EMDCIAHK@Usage?3?5?$CFs?5?$FL?5?9l?5?$FN?5?$FL?5?9v?5?$FN?5?$FL?5?9verbo@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CF@KMCEMKNN@?5?5?5?5?9l?5?5To?5get?5a?5list?5of?5test?5na@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CC@OEFODDPA@?5?5?5?5?9e?5?5to?5do?5exhaustive?5testing@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CD@CANHEGEO@?5?5?5?5?9verbose?5To?5turn?5ON?5verbosit@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DA@DEOMECGD@?5?5?5?5?9v?5?5To?5turn?5ON?5verbosity?$CIsam@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DJ@CCNCBHBI@?5?5?5?5?9x?5file?4xml?5?5?5Write?5junit?5fo@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BP@DINFJLOB@?5?5?5?5?9h?5?5To?5print?5this?5message?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CO@HPAOEJKO@?5?5?5?5?9K?5?5to?5turn?5OFF?5suppressing?5@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CN@EJKNLGJL@?5?5?5?5?9n?5?5To?5turn?5OFF?5printing?5err@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0HM@DMOHKHJD@?5?5?5?5?9w?5?5Don?8t?5fail?5on?5data?9loadi@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EL@ONIINNNO@?5?5?5?5?9t_info?5?$HM?5?9t_error?5?$HM?5?9t_warn@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BP@GKFAIMJC@?5?5?5?5?9no_err_msg?5?$CIsame?5as?5?9n?$CJ?5?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EJ@GLOGNBEH@?5?5?5?5?9m?5n?$FL?9q?$FN?5Min?9Max?5memory?5size@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EG@GFMGGOJM@?5?5?5?5?5?5?5?5The?5default?5is?5the?5maxim@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CP@LLGCKPNI@?5?5?5?5?9r?5?5Repeat?5tests?5after?5calli@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CD@CMKAPPKN@?5?5?5?5?$FL?1subtest?$FN?5?5To?5run?5a?5subtest@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EB@LLAJLCBI@?5?5?5?5eg?3?5to?5run?5just?5the?5utility?5@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EB@LLAJLCBI@?5?5?5?5eg?3?5to?5run?5just?5the?5utility?5@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CD@CMKAPPKN@?5?5?5?5?$FL?1subtest?$FN?5?5To?5run?5a?5subtest@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CP@LLGCKPNI@?5?5?5?5?9r?5?5Repeat?5tests?5after?5calli@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EG@GFMGGOJM@?5?5?5?5?5?5?5?5The?5default?5is?5the?5maxim@']
db ["'al.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EJ@GLOGNBEH@?5?5?5?5?9m?5n?$FL?9q?$FN?5Min?9Max?5memory?5size@']
db ["'ilure.',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BP@GKFAIMJC@?5?5?5?5?9no_err_msg?5?$CIsame?5as?5?9n?$CJ?5?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EL@ONIINNNO@?5?5?5?5?9t_info?5?$HM?5?9t_error?5?$HM?5?9t_warn@']
db ["'", "tracing',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0HM@DMOHKHJD@?5?5?5?5?9w?5?5Don?8t?5fail?5on?5data?9loadi@']
db ["'", 'user', 'has', 'reduced/changed', 'the', 'common', 'set', 'of', 'ICU', 'data', "',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0CN@EJKNLGJL@?5?5?5?5?9n?5?5To?5turn?5OFF?5printing?5err@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CO@HPAOEJKO@?5?5?5?5?9K?5?5to?5turn?5OFF?5suppressing?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BP@DINFJLOB@?5?5?5?5?9h?5?5To?5print?5this?5message?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DJ@CCNCBHBI@?5?5?5?5?9x?5file?4xml?5?5?5Write?5junit?5fo@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DA@DEOMECGD@?5?5?5?5?9v?5?5To?5turn?5ON?5verbosity?$CIsam@']
assume ['cs:_rdata']
public ['??_C@_0CD@CANHEGEO@?5?5?5?5?9verbose?5To?5turn?5ON?5verbosit@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CC@OEFODDPA@?5?5?5?5?9e?5?5to?5do?5exhaustive?5testing@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@KMCEMKNN@?5?5?5?5?9l?5?5To?5get?5a?5list?5of?5test?5na@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0KH@EMDCIAHK@Usage?3?5?$CFs?5?$FL?5?9l?5?$FN?5?$FL?5?9v?5?$FN?5?$FL?5?9verbo@']
db ["'sg]',0Ah"]
db ["'", '[', '-h', ']', '[-t_info', '|', '-t_error', '|', '-t_warn', '|', '-t_oc', '|', '-t_verbose]', "[-'"]
db ["'m", 'n[-q]', "]',0Ah"]
db ["'", '[', '/path/to/test', "]',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getTestOption	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
sub ['ecx,', '1']
mov ['[ebp+var_C4],', 'ecx']
cmp ['[ebp+var_C4],', '5']
ja ['short', 'loc_83C22']
mov ['edx,', '[ebp+var_C4]']
jmp ['ds:$LN12_1[edx*4]']
mov ['eax,', 'ds:_VERBOSITY']
jmp ['short', 'loc_83C24']
mov ['eax,', 'ds:_WARN_ON_MISSING_DATA']
jmp ['short', 'loc_83C24']
mov ['eax,', 'ds:_QUICK']
jmp ['short', 'loc_83C24']
mov ['eax,', 'ds:_REPEAT_TESTS']
jmp ['short', 'loc_83C24']
mov ['eax,', 'ds:_ERR_MSG']
jmp ['short', 'loc_83C24']
mov ['eax,', 'ds:_ICU_TRACE']
jmp ['short', 'loc_83C24']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7_0']
dd ['offset', '$LN3_1']
dd ['offset', '$LN5_5']
dd ['offset', '$LN6_3']
dd ['offset', '$LN2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_setTestOption	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0FFFFFF9Dh']
jnz ['short', 'loc_83C80']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getTestOption']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
sub ['ecx,', '1']
mov ['[ebp+var_C4],', 'ecx']
cmp ['[ebp+var_C4],', '5']
ja ['short', '$LN10_0']
mov ['edx,', '[ebp+var_C4]']
jmp ['ds:$LN12_2[edx*4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_VERBOSITY,', 'eax']
jmp ['short', '$LN10_0']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_WARN_ON_MISSING_DATA,', 'eax']
jmp ['short', '$LN10_0']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_QUICK,', 'eax']
jmp ['short', '$LN10_0']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_REPEAT_TESTS,', 'eax']
jmp ['short', '$LN10_0']
mov ['eax,', '[ebp+arg_4]']
mov ['ds:_ICU_TRACE,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_4']
dd ['offset', '$LN10_0']
dd ['offset', '$LN4_5']
dd ['offset', '$LN5_6']
dd ['offset', '$LN2_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_xml_setFileName proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ds:_XML_FILE_NAME,', 'eax']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_xml_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_XML_FILE_NAME,', '0']
jnz ['short', 'loc_83D6A']
xor ['eax,', 'eax']
jmp ['loc_83EAE']
mov ['esi,', 'esp']
push ['offset', '??_C@_01NOFIACDB@w?$AA@']
mov ['eax,', 'ds:_XML_FILE_NAME']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_XML_FILE,', 'eax']
cmp ['ds:_XML_FILE,', '0']
jnz ['short', 'loc_83DE6']
mov ['esi,', 'esp']
push ['offset', '??_C@_05FFKPLNPJ@fopen?$AA@']
call ['dword', 'ptr', 'ds:__imp__perror']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_XML_FILE_NAME']
push ['eax']
push ['offset', '??_C@_0CK@EHNGEBCI@?5Error?3?5couldn?8t?5open?5XML?5output@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '1']
jmp ['loc_83EAE']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_83E18']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__isalnum']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_83E18']
mov ['eax,', '[ebp+Source]']
add ['eax,', '1']
mov ['[ebp+Source],', 'eax']
jmp ['short', 'loc_83DE6']
mov ['eax,', '[ebp+Source]']
push ['eax']
push ['offset', '_XML_PREFIX']
call ['_strcpy']
add ['esp,', '8']
push ['offset', '_XML_PREFIX']
call ['_strlen']
add ['esp,', '4']
add ['eax,', 'offset', '_XML_PREFIX']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_83E52']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_83E8A']
cmp ['[ebp+var_8],', 'offset', '_XML_PREFIX']
jbe ['short', 'loc_83E8A']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__isalnum']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_83E8A']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_83E49']
mov ['esi,', 'esp']
push ['offset', '_XML_PREFIX']
push ['offset', '??_C@_0BH@FFIPOJKE@?$DMtestsuite?5name?$DN?$CC?$CFs?$CC?$DO?6?$AA@']
mov ['eax,', 'ds:_XML_FILE']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BH@FFIPOJKE@?$DMtestsuite?5name?$DN?$CC?$CFs?$CC?$DO?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CK@EHNGEBCI@?5Error?3?5couldn?8t?5open?5XML?5output@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05FFKPLNPJ@fopen?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_xml_fini	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_XML_FILE,', '0']
jnz ['short', 'loc_83F3B']
xor ['eax,', 'eax']
jmp ['short', 'loc_83F99']
mov ['esi,', 'esp']
push ['offset', '??_C@_0O@OKFDLHJB@?$DM?1testsuite?$DO?6?$AA@']
mov ['eax,', 'ds:_XML_FILE']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_XML_FILE']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_XML_FILE_NAME']
push ['eax']
push ['offset', '??_C@_0CB@PADDDKAP@?5?$CI?5test?5results?5written?5to?5?$CFs?5?$CJ?6@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ds:_XML_FILE,', '0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CB@PADDDKAP@?5?$CI?5test?5results?5written?5to?5?$CFs?5?$CJ?6@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0O@OKFDLHJB@?$DM?1testsuite?$DO?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ctest_xml_testcase proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_XML_FILE,', '0']
jnz ['short', 'loc_8400F']
xor ['eax,', 'eax']
jmp ['short', 'loc_8408B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_XML_PREFIX']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '_XML_PREFIX']
push ['offset', '??_C@_0DE@BLOAECLK@?7?$DMtestcase?5classname?$DN?$CC?$CFs?3?$CFs?$CC?5nam@']
mov ['eax,', 'ds:_XML_FILE']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '1Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_8406C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0DF@HBNPDNJ@?$DO?6?7?7?$DMfailure?5type?$DN?$CCerr?$CC?5message?$DN@']
mov ['ecx,', 'ds:_XML_FILE']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_84089']
mov ['esi,', 'esp']
push ['offset', '??_C@_03PCPALPJL@?1?$DO?6?$AA@']
mov ['eax,', 'ds:_XML_FILE']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_03PCPALPJL@?1?$DO?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0DF@HBNPDNJ@?$DO?6?7?7?$DMfailure?5type?$DN?$CCerr?$CC?5message?$DN@']
db ["9,9,'<failure", 'type="err"', 'message="%s"/>\',0Ah']
db ["9,'</testcase>',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DE@BLOAECLK@?7?$DMtestcase?5classname?$DN?$CC?$CFs?3?$CFs?$CC?5nam@']
extrn ['__imp__free:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp___wassert:near']
extrn ['__imp__strncpy:near']
extrn ['__imp__malloc:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp__strncmp:near']
extrn ['_strlen:near']
extrn ['__imp__strchr:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__imp__sprintf:near']
extrn ['_uprv_floor_56:near']
extrn ['__fltused:near']
extrn ['__imp__printf:near']
extrn ['_strcpy:near']
extrn ['_strcat:near']
extrn ['_uprv_getRawUTCtime_56:near']
extrn ['_memset:near']
extrn ['__imp__fclose:near']
extrn ['__imp__fopen:near']
extrn ['__imp__fflush:near']
extrn ['_udbg_knownIssue_close:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_udbg_knownIssue_print:near']
extrn ['__imp__vfprintf:near']
extrn ['__imp__fputs:near']
extrn ['_udbg_knownIssue_open:near']
extrn ['__imp__vsprintf:near']
extrn ['_utrace_setLevel_56:near']
extrn ['_utrace_setFunctions_56:near']
extrn ['_u_errorName_56:near']
extrn ['_u_setMemoryFunctions_56:near']
extrn ['__imp__strtol:near']
extrn ['_strcmp:near']
extrn ['_utrace_format_56:near']
extrn ['_utrace_functionName_56:near']
extrn ['__imp__putc:near']
extrn ['_utrace_vformat_56:near']
extrn ['__imp__realloc:near']
extrn ['__imp__isalnum:near']
extrn ['__imp__perror:near']
end

endp
??0DataMap@@QAE@ABV0@@Z	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7DataMap@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4DataMap@@6B@']
public ['??_7DataMap@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_rdata$r']
public ['??_R4DataMap@@6B@']
dd ['offset', '??_R0?AVDataMap@@@8']
dd ['offset', '??_R3DataMap@@8']
assume ['cs:_data']
public ['??_R0?AVDataMap@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3DataMap@@8']
dd ['1']
dd ['offset', '??_R2DataMap@@8']
assume ['cs:_rdata$r']
public ['??_R2DataMap@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@DataMap@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3DataMap@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4DataMap@@QAEAAV0@ABV0@@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GDataMap@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1DataMap@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_137']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EDataMap@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1B1']
push ['offset', '??1DataMap@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1A9']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1D0']
mov ['ecx,', '[ebp+var_8]']
call ['??1DataMap@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1CD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RBDataMap@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0DataMap@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RBDataMap@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4RBDataMap@@6B@']
public ['??_7RBDataMap@@6B@']
dd ['offset', '?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z']
dd ['offset', '?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z']
dd ['offset', '?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4RBDataMap@@6B@']
dd ['offset', '??_R0?AVRBDataMap@@@8']
dd ['offset', '??_R3RBDataMap@@8']
assume ['cs:_data']
public ['??_R0?AVRBDataMap@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3RBDataMap@@8']
dd ['2']
dd ['offset', '??_R2RBDataMap@@8']
assume ['cs:_rdata$r']
public ['??_R2RBDataMap@@8']
dd ['offset', '??_R1A@?0A@EA@DataMap@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RBDataMap@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3RBDataMap@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4RBDataMap@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4DataMap@@QAEAAV0@ABV0@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRBDataMap@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1RBDataMap@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_36B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ERBDataMap@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_3E5']
push ['offset', '??1RBDataMap@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3DD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_404']
mov ['ecx,', '[ebp+var_8]']
call ['??1RBDataMap@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_401']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TestData@@QAE@ABV0@@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestData@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4TestData@@6B@']
public ['??_7TestData@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4TestData@@6B@']
dd ['offset', '??_R0?AVTestData@@@8']
dd ['offset', '??_R3TestData@@8']
assume ['cs:_data']
public ['??_R0?AVTestData@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3TestData@@8']
dd ['1']
dd ['offset', '??_R2TestData@@8']
assume ['cs:_rdata$r']
public ['??_R2TestData@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TestData@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3TestData@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4TestData@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GTestData@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestData@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5F7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ETestData@@UAEPAXI@Z	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_671']
push ['offset', '??1TestData@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['24h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_669']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_690']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestData@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_68D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RBTestData@@QAE@ABV0@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0TestData@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RBTestData@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4RBTestData@@6B@']
public ['??_7RBTestData@@6B@']
dd ['offset', '?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z']
dd ['offset', '?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z']
dd ['offset', '?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4RBTestData@@6B@']
dd ['offset', '??_R0?AVRBTestData@@@8']
dd ['offset', '??_R3RBTestData@@8']
assume ['cs:_data']
public ['??_R0?AVRBTestData@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3RBTestData@@8']
dd ['2']
dd ['offset', '??_R2RBTestData@@8']
assume ['cs:_rdata$r']
public ['??_R2RBTestData@@8']
dd ['offset', '??_R1A@?0A@EA@TestData@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RBTestData@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3RBTestData@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRBTestData@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1RBTestData@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7E7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ERBTestData@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_861']
push ['offset', '??1RBTestData@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['34h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_859']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_880']
mov ['ecx,', '[ebp+var_8]']
call ['??1RBTestData@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_87D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TestLog@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestLog@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4TestLog@@6B@']
public ['??_7TestLog@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4TestLog@@6B@']
dd ['offset', '??_R0?AVTestLog@@@8']
dd ['offset', '??_R3TestLog@@8']
assume ['cs:_data']
public ['??_R0?AVTestLog@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3TestLog@@8']
dd ['1']
dd ['offset', '??_R2TestLog@@8']
assume ['cs:_rdata$r']
public ['??_R2TestLog@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TestLog@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3TestLog@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TestLog@@QAE@ABV0@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestLog@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4TestLog@@QAEAAV0@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GTestLog@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestLog@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9EF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ETestLog@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_A69']
push ['offset', '??1TestLog@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A61']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_A88']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestLog@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A85']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0ErrorCode@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IcuTestErrorCode@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4IcuTestErrorCode@@6B@']
public ['??_7IcuTestErrorCode@@6B@']
dd ['offset', '?handleFailure@IcuTestErrorCode@@MBEXXZ']
assume ['cs:_rdata$r']
public ['??_R4IcuTestErrorCode@@6B@']
dd ['offset', '??_R0?AVIcuTestErrorCode@@@8']
dd ['offset', '??_R3IcuTestErrorCode@@8']
assume ['cs:_data']
public ['??_R0?AVIcuTestErrorCode@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3IcuTestErrorCode@@8']
dd ['3']
dd ['offset', '??_R2IcuTestErrorCode@@8']
assume ['cs:_rdata$r']
public ['??_R2IcuTestErrorCode@@8']
dd ['offset', '??_R1A@?0A@EA@ErrorCode@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@IcuTestErrorCode@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3IcuTestErrorCode@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ErrorCode@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3ErrorCode@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVErrorCode@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ErrorCode@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ErrorCode@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ErrorCode@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0IcuTestErrorCode@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IcuTestErrorCode@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GIcuTestErrorCode@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1IcuTestErrorCode@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D0D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EIcuTestErrorCode@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_D93']
push ['offset', '??1IcuTestErrorCode@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D8B']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_DBC']
mov ['ecx,', '[ebp+var_8]']
call ['??1IcuTestErrorCode@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DB9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TestDataModule@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestDataModule@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4TestDataModule@@6B@']
public ['??_7TestDataModule@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4TestDataModule@@6B@']
dd ['offset', '??_R0?AVTestDataModule@@@8']
dd ['offset', '??_R3TestDataModule@@8']
assume ['cs:_data']
public ['??_R0?AVTestDataModule@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3TestDataModule@@8']
dd ['1']
dd ['offset', '??_R2TestDataModule@@8']
assume ['cs:_rdata$r']
public ['??_R2TestDataModule@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@TestDataModule@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3TestDataModule@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GTestDataModule@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestDataModule@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EEB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ETestDataModule@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_F65']
push ['offset', '??1TestDataModule@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F5D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_F84']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestDataModule@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F81']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RBTestDataModule@@QAE@ABV0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0TestDataModule@@QAE@ABV0@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RBTestDataModule@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4RBTestDataModule@@6B@']
public ['??_7RBTestDataModule@@6B@']
dd ['offset', '?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z']
dd ['offset', '?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z']
dd ['offset', '?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z']
assume ['cs:_rdata$r']
public ['??_R4RBTestDataModule@@6B@']
dd ['offset', '??_R0?AVRBTestDataModule@@@8']
dd ['offset', '??_R3RBTestDataModule@@8']
assume ['cs:_data']
public ['??_R0?AVRBTestDataModule@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3RBTestDataModule@@8']
dd ['2']
dd ['offset', '??_R2RBTestDataModule@@8']
assume ['cs:_rdata$r']
public ['??_R2RBTestDataModule@@8']
dd ['offset', '??_R1A@?0A@EA@TestDataModule@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RBTestDataModule@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'off_40']
dd ['offset', '??_R3RBTestDataModule@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRBTestDataModule@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1RBTestDataModule@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_10F7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ERBTestDataModule@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1171']
push ['offset', '??1RBTestDataModule@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['28h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1169']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1190']
mov ['ecx,', '[ebp+var_8]']
call ['??1RBTestDataModule@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_118D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1TestLog@@UAE@XZ proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestLog@@6B@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1IcuTestErrorCode@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1IcuTestErrorCode@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IcuTestErrorCode@@6B@']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_124F']
mov ['ecx,', '[ebp+var_14]']
call ['?handleFailure@IcuTestErrorCode@@MBEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
call ['dword', 'ptr', 'ds:__imp_??1ErrorCode@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1IcuTestErrorCode@@UAE@XZ$0 proc near	
mov ['esi,', 'esp']
mov ['ecx,', '[ebp-14h]']
call ['dword', 'ptr', 'ds:__imp_??1ErrorCode@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1IcuTestErrorCode@@UAE@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1IcuTestErrorCode@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1IcuTestErrorCode@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1IcuTestErrorCode@@UAE@XZ']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', '11FCh']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1208]']
mov ['ecx,', '47Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_15B1']
lea ['eax,', '[ebp+arg_8]']
mov ['[ebp+Args],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Args]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__vsprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Args],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_11A0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11FC],', 'eax']
mov ['eax,', '[ebp+var_11FC]']
mov ['[ebp+var_1200],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1200]']
push ['ecx']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_11E8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1204],', 'eax']
mov ['edx,', '[ebp+var_1204]']
mov ['[ebp+var_1208],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edi,', 'esp']
mov ['eax,', '[ebp+var_1208]']
push ['eax']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_11E8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_11A0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
lea ['ecx,', '[ebp+var_1110]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11FC],', 'eax']
mov ['ecx,', '[ebp+var_11FC]']
mov ['[ebp+var_1200],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1200]']
push ['edx']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_1158]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1204],', 'eax']
mov ['eax,', '[ebp+var_1204]']
mov ['[ebp+var_1208],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_1208]']
push ['ecx']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1158]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1110]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_1008]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11F1],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_11F1]']
jmp ['short', 'loc_15C5']
jmp ['short', 'loc_15C5']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1208h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN13']
dd ['offset', '$LN10']
dd ['0FFFFEFF8h,', '40h']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1008h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-11A0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-11E8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1110h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1158h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-120Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@']
unicode ['0,', '<', '-', '>,0']
assume ['cs:_rdata']
public ['??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@']
unicode ['0,', '<', 'failure:', '>,0']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2']
align ['10h']
dd ['offset', '__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', '11FCh']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1208]']
mov ['ecx,', '47Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_19F9']
lea ['eax,', '[ebp+arg_8]']
mov ['[ebp+Args],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Args]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__vsprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Args],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_11A0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11FC],', 'eax']
mov ['eax,', '[ebp+var_11FC]']
mov ['[ebp+var_1200],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1200]']
push ['ecx']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_11E8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1204],', 'eax']
mov ['edx,', '[ebp+var_1204]']
mov ['[ebp+var_1208],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edi,', 'esp']
mov ['eax,', '[ebp+var_1208]']
push ['eax']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_11E8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_11A0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+Dest]']
push ['eax']
lea ['ecx,', '[ebp+var_1110]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11FC],', 'eax']
mov ['ecx,', '[ebp+var_11FC]']
mov ['[ebp+var_1200],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1200]']
push ['edx']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_1158]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1204],', 'eax']
mov ['eax,', '[ebp+var_1204]']
mov ['[ebp+var_1208],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_1208]']
push ['ecx']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1158]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1110]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_1008]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11F1],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1008]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_11F1]']
jmp ['short', 'loc_1A0D']
jmp ['short', 'loc_1A0D']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+this]']
call ['dword', 'ptr', 'ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1208h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13_0']
dd ['offset', '$LN10_0']
dd ['0FFFFEFF8h,', '40h']
dd ['offset', '$LN11_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1008h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-11A0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-11E8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1110h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1158h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-120Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0']
align ['8']
dd ['offset', '__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2']
align ['8']
dd ['offset', '__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleFailure@IcuTestErrorCode@@MBEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?handleFailure@IcuTestErrorCode@@MBEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1B8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1C4]']
mov ['ecx,', '6Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
call ['dword', 'ptr', 'ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
lea ['ecx,', '[ebp+var_168]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B8],', 'eax']
mov ['eax,', '[ebp+var_1B8]']
mov ['[ebp+var_1BC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1BC]']
push ['ecx']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_1B0]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C0],', 'eax']
mov ['edx,', '[ebp+var_1C0]']
mov ['[ebp+var_1C4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edi,', 'esp']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1B0]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_168]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
call ['dword', 'ptr', 'ds:__imp_?get@ErrorCode@icu_56@@QBE?AW4UErrorCode@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '2']
jz ['short', 'loc_1CC4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
call ['dword', 'ptr', 'ds:__imp_?get@ErrorCode@icu_56@@QBE?AW4UErrorCode@@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '4']
jnz ['short', 'loc_1CE6']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1D06']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_60]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11_1']
dd ['offset', '$LN9']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-60h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-168h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$2 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1B0h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?handleFailure@IcuTestErrorCode@@MBEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1C8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?handleFailure@IcuTestErrorCode@@MBEXXZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$2']
dd ['offset', '__unwindtable$?handleFailure@IcuTestErrorCode@@MBEXXZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E6D']
xor ['eax,', 'eax']
jmp ['loc_1F44']
mov ['[ebp+var_14],', '0']
push ['28h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_1EB3']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_F8]']
call ['??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_1EBD']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_104]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1EF5']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_1F44']
jmp ['short', 'loc_1F44']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1F38']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_1F42']
mov ['[ebp+var_10C],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0 proc near
mov ['eax,', '[ebp-0F8h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestDataModule@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1TestDataModule@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TestDataModule@@6B@']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_20ED']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_20E3']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_20ED']
mov ['[ebp+var_E8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@TestDataModule@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1RBTestDataModule@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RBTestDataModule@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
call ['??1TestDataModule@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RBTestDataModule@@6B@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+1Ch],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
test ['ecx,', 'ecx']
jz ['loc_23B0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['offset', '??_C@_08OCIHCEBA@TestData?$AA@']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ures_getSize_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['offset', '??_C@_04BJPIHCBA@Info?$AA@']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+18h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_234F']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1JC@NJKEKHLM@?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?9?$AA?5@']
push ['1']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_140],', 'eax']
mov ['eax,', '[ebp+var_140]']
mov ['[ebp+var_144],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_144]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_120]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
jmp ['short', 'loc_23B0']
push ['8']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_12C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_12C],', '0']
jz ['short', 'loc_238A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['ecx,', '[ebp+var_12C]']
call ['??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_140],', 'eax']
jmp ['short', 'loc_2394']
mov ['[ebp+var_140],', '0']
mov ['eax,', '[ebp+var_140]']
mov ['[ebp+var_138],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_138]']
mov ['[ecx+8],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1TestDataModule@@UAE@XZ']
endp
__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$1 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-120h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$2 proc near
mov ['eax,', '[ebp-12Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-148h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1JC@NJKEKHLM@?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?9?$AA?5@']
unicode ['0,', '<Unable', 'to', 'initalize', 'test', 'data', '-', 'missing', 'mandatory', 'descrip>']
unicode ['0,', '<tion', 'resources!>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_04BJPIHCBA@Info?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08OCIHCEBA@TestData?$AA@']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$1']
align ['8']
dd ['offset', '__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_255D']
mov ['al,', '1']
jmp ['short', 'loc_255F']
jmp ['short', 'loc_255F']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
cmp ['ecx,', '1']
jnz ['loc_2704']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ures_getByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['offset', '??_C@_07EJKOAGME@Headers?$AA@']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_26EA']
push ['34h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_2659']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_128]']
call ['??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_2663']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_13C]']
mov ['[ebp+var_134],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_269B']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_270F']
jmp ['short', 'loc_26E8']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_26DE']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_26E8']
mov ['[ebp+var_13C],', '0']
jmp ['short', 'loc_2702']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['short', 'loc_270D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN16']
dd ['offset', '$LN14_1']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z$0	proc near
mov ['eax,', '[ebp-128h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-140h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_07EJKOAGME@Headers?$AA@']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_13C]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1Ch]']
cmp ['ecx,', '1']
jnz ['loc_2960']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['offset', '??_C@_07EJKOAGME@Headers?$AA@']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_ures_getByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2946']
push ['34h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_128],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_128],', '0']
jz ['short', 'loc_28B5']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_128]']
call ['??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_28BF']
mov ['[ebp+var_13C],', '0']
mov ['eax,', '[ebp+var_13C]']
mov ['[ebp+var_134],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_28F7']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_296B']
jmp ['short', 'loc_2944']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_110],', 'eax']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_293A']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
jmp ['short', 'loc_2944']
mov ['[ebp+var_13C],', '0']
jmp ['short', 'loc_295E']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
jmp ['short', 'loc_2969']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '2']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '13Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
dd ['offset', '$LN16_0']
dd ['offset', '$LN14_2']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z$0 proc near
mov ['eax,', '[ebp-128h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-140h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1E4]']
mov ['ecx,', '76h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2BF3']
mov ['[ebp+var_24],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['loc_2BEC']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['_ures_openDirect_56']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['loc_2BEC']
mov ['esi,', 'esp']
push ['0']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_180]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D0],', 'eax']
mov ['ecx,', '[ebp+var_1D0]']
mov ['[ebp+var_1D4],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1D4]']
push ['edx']
mov ['edi,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1FO@PHABEGHA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAr?$AAe@']
push ['1']
lea ['ecx,', '[ebp+var_1C8]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D8],', 'eax']
mov ['eax,', '[ebp+var_1D8]']
mov ['[ebp+var_1DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1DC]']
push ['ecx']
lea ['edx,', '[ebp+var_138]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E0],', 'eax']
mov ['eax,', '[ebp+var_1E0]']
mov ['[ebp+var_1E4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_1E4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+0Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_138]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_1C8]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_180]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_24]']
jmp ['short', 'loc_2BF5']
jmp ['short', 'loc_2BF5']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-180h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$1	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-1C8h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$2	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-138h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FO@PHABEGHA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAr?$AAe@']
unicode ['0,', '<Could', 'not', 'load', 'test', 'data', 'from', 'resourcebundle:', '>,0']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['__purecall:near']
extrn ['??3@YAXPAX@Z:near']
extrn ['??1DataMap@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_V@YAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z:near']
extrn ['?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:near']
extrn ['?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:near']
extrn ['?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z:near']
extrn ['?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:near']
extrn ['?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z:near']
extrn ['?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z:near']
extrn ['?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:near']
extrn ['?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z:near']
extrn ['??1RBDataMap@@UAE@XZ:near']
extrn ['??1TestData@@UAE@XZ:near']
extrn ['?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z:near']
extrn ['?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z:near']
extrn ['?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z:near']
extrn ['??1RBTestData@@UAE@XZ:near']
extrn ['__imp_??0ErrorCode@icu_56@@QAE@XZ:near']
extrn ['__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??1ErrorCode@icu_56@@UAE@XZ:near']
extrn ['__imp_?isFailure@ErrorCode@icu_56@@QBECXZ:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:near']
extrn ['__imp__vsprintf:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__chkstk:near']
extrn ['__imp_?get@ErrorCode@icu_56@@QBE?AW4UErrorCode@@XZ:near']
extrn ['??2@YAPAXI@Z:near']
extrn ['_uprv_free_56:near']
extrn ['_ures_close_56:near']
extrn ['??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z:near']
extrn ['_ures_getSize_56:near']
extrn ['_ures_getByKey_56:near']
extrn ['??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z:near']
extrn ['_ures_getByIndex_56:near']
extrn ['__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:near']
extrn ['_ures_openDirect_56:near']
end

endp
?usageAndDie@@YAXH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_progName']
push ['eax']
push ['offset', '??_C@_0DH@BIPILLDB@Usage?3?5?$CFs?5?$FL?9v?$FN?5?$FL?9options?$FN?5?9r?5rul@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
call ['_u_getDataDirectory_56']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0BPK@HAPFEGHF@?7Read?5in?5break?5iteration?5rules?5t@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BPK@HAPFEGHF@?7Read?5in?5break?5iteration?5rules?5t@']
db ['0Ah']
db ["'options:',0Ah"]
db ["9,'-h", 'or', '-?', 'or', '--help', 'this', 'usage', "text',0Ah"]
db ["9,'-V", 'or', '--version', 'show', 'a', 'version', "message',0Ah"]
db ["9,'-c", 'or', '--copyright', 'include', 'a', 'copyright', "notice',0Ah"]
db ["9,'-v", 'or', '--verbose', 'turn', 'on', 'verbose', "output',0Ah"]
db ["9,'-q", 'or', '--quiet', 'do', 'not', 'display', 'warnings', 'and', "progress',0Ah"]
db ["9,'-i", 'or', '--icudatadir', 'directory', 'for', 'locating', 'any', 'needed', "intermedia'"]
db ["'te", 'data', "files,',0Ah"]
db ["9,'", 'followed', 'by', 'path,', 'defaults', 'to', "%s',0Ah"]
db ["9,'-d", 'or', '--destdir', 'destination', 'directory,', 'followed', 'by', 'the', "path',0Ah"]
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DH@BIPILLDB@Usage?3?5?$CFs?5?$FL?9v?$FN?5?$FL?9options?$FN?5?9r?5rul@']
align ['4']
assume ['cs:_bss']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_main		proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$_main']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2BCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C8]']
mov ['ecx,', '0AFh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+Code],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_48],', '0']
mov ['eax,', '[ebp+argv]']
mov ['ecx,', '[eax]']
mov ['ds:_progName,', 'ecx']
push ['offset', '_options']
push ['9']
mov ['eax,', '[ebp+argv]']
push ['eax']
mov ['ecx,', '[ebp+argc]']
push ['ecx']
call ['_u_parseArgs']
add ['esp,', '10h']
mov ['[ebp+argc],', 'eax']
cmp ['[ebp+argc],', '0']
jge ['short', 'loc_588']
mov ['eax,', '[ebp+argc]']
neg ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+argv]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
call ['?usageAndDie@@YAXH@Z']
db ['83h']
db ['0C4h']
db ['4']
movsx ['eax,', 'ds:byte_14E']
test ['eax,', 'eax']
jnz ['short', 'loc_59E']
movsx ['eax,', 'ds:byte_162']
test ['eax,', 'eax']
jz ['short', 'loc_5A8']
push ['0']
call ['?usageAndDie@@YAXH@Z']
db ['83h']
db ['0C4h']
db ['4']
movsx ['eax,', 'ds:byte_18A']
test ['eax,', 'eax']
jz ['short', 'loc_5BE']
movsx ['eax,', 'ds:byte_19E']
test ['eax,', 'eax']
jnz ['short', 'loc_5F2']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DD@OCLOMIED@rule?5file?5and?5output?5file?5must?5b@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
call ['?usageAndDie@@YAXH@Z']
db ['83h']
db ['0C4h']
db ['4']
mov ['eax,', 'ds:dword_17C']
mov ['[ebp+Filename],', 'eax']
mov ['eax,', 'ds:dword_190']
mov ['[ebp+Format],', 'eax']
movsx ['eax,', 'ds:byte_1B2']
test ['eax,', 'eax']
jz ['short', 'loc_61B']
mov ['eax,', 'ds:dword_1A4']
push ['eax']
call ['_u_setDataDirectory_56']
add ['esp,', '4']
mov ['[ebp+Code],', '0']
movsx ['eax,', 'ds:byte_1C6']
test ['eax,', 'eax']
jz ['short', 'loc_635']
mov ['eax,', 'ds:dword_1B8']
mov ['[ebp+var_3C],', 'eax']
movsx ['eax,', 'ds:byte_1DA']
test ['eax,', 'eax']
jz ['short', 'loc_647']
mov ['[ebp+var_48],', 'offset', '??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
lea ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_init_56']
add ['esp,', '4']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6B4']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+argv]']
mov ['edx,', '[ecx]']
push ['edx']
push ['offset', '??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['1']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Code],', '0']
mov ['esi,', 'esp']
push ['offset', '??_C@_02JDPG@rb?$AA@']
mov ['eax,', '[ebp+Filename]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jnz ['short', 'loc_71E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Filename]']
push ['eax']
push ['offset', '??_C@_0BK@GKEMPMBF@Could?5not?5open?5file?5?$CC?$CFs?$CC?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['2']
push ['0']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fseek']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ftell']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Count],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fseek']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Count]']
add ['eax,', '0Ah']
push ['eax']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2C0],', 'eax']
mov ['ecx,', '[ebp+var_2C0]']
mov ['[ebp+DstBuf],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+File]']
push ['eax']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+DstBuf]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fread']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+Count]']
jz ['short', 'loc_7F3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Filename]']
push ['eax']
push ['offset', '??_C@_0BJ@KDFMPOJA@Error?5reading?5file?5?$CC?$CFs?$CC?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+DstBuf]']
add ['eax,', '[ebp+Count]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+DstBuf]']
mov ['[ebp+var_90],', 'eax']
lea ['eax,', '[ebp+Code]']
push ['eax']
lea ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+Count]']
push ['edx']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_ucnv_detectUnicodeSignature_56']
add ['esp,', '10h']
mov ['[ebp+var_9C],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_865']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_9C],', '0']
jz ['short', 'loc_88C']
mov ['eax,', '[ebp+var_90]']
add ['eax,', '[ebp+var_84]']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+Count]']
sub ['eax,', '[ebp+var_84]']
mov ['[ebp+Count],', 'eax']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
call ['_ucnv_open_56']
add ['esp,', '8']
mov ['[ebp+var_A8],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_902']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0BL@KFLPHDLH@ucnv_open?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
push ['edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
call ['_ucnv_toUChars_56']
add ['esp,', '18h']
mov ['[ebp+var_B4],', 'eax']
cmp ['[ebp+Code],', '0Fh']
jz ['short', 'loc_97A']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0BP@CFBDPEPG@ucnv_toUChars?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Code],', '0']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '1']
xor ['ecx,', 'ecx']
mov ['edx,', '2']
mul ['edx']
seto ['cl']
neg ['ecx']
or ['ecx,', 'eax']
push ['ecx']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2B4],', 'eax']
mov ['eax,', '[ebp+var_2B4]']
mov ['[ebp+var_C0],', 'eax']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
call ['_ucnv_toUChars_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A41']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0BP@CFBDPEPG@ucnv_toUChars?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
call ['_ucnv_close_56']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['0']
lea ['ecx,', '[ebp+var_108]']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_158],', '0']
mov ['[ebp+var_154],', '0']
mov ['esi,', 'esp']
push ['178h']
call ['dword', 'ptr', 'ds:__imp_??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_29C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_29C],', '0']
jz ['short', 'loc_AFB']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Code]']
push ['eax']
lea ['ecx,', '[ebp+var_158]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
mov ['ecx,', '[ebp+var_29C]']
call ['dword', 'ptr', 'ds:__imp_??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_29C]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_SRuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_29C]']
mov ['[ebp+var_2C8],', 'ecx']
jmp ['short', 'loc_B05']
mov ['[ebp+var_2C8],', '0']
mov ['edx,', '[ebp+var_2C8]']
mov ['[ebp+var_2A8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_2A8]']
mov ['[ebp+var_164],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B8C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_154]']
push ['eax']
mov ['ecx,', '[ebp+var_158]']
push ['ecx']
mov ['edx,', '[ebp+Code]']
push ['edx']
call ['_u_errorName_56']
add ['esp,', '4']
push ['eax']
push ['offset', '??_C@_0EF@FGLKDKKM@createRuleBasedBreakIterator?3?5IC@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_170]']
push ['eax']
mov ['ecx,', '[ebp+var_164]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_164]']
mov ['eax,', '[edx+60h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_17C],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_17C]']
add ['eax,', '4']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['ecx,', '[ebp+var_17C]']
add ['ecx,', '4']
push ['ecx']
push ['offset', 'off_200']
call ['_memcpy']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['offset', 'dword_1F4']
mov ['edx,', '[ebp+Format]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_udata_create']
add ['esp,', '18h']
mov ['[ebp+var_194],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C68']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
push ['offset', '??_C@_0CP@IFLBHPGC@genbrk?3?5Could?5not?5open?5output?5fi@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_170]']
push ['eax']
mov ['ecx,', '[ebp+var_17C]']
push ['ecx']
mov ['edx,', '[ebp+var_194]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+var_194]']
push ['ecx']
call ['_udata_finish']
add ['esp,', '8']
mov ['[ebp+var_188],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_CF2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
push ['offset', '??_C@_0CK@GGBHJNNO@genbrk?3?5error?5?$CFd?5writing?5the?5out@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_188]']
cmp ['eax,', '[ebp+var_170]']
jz ['short', 'loc_D3F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Format]']
push ['eax']
push ['offset', '??_C@_0CD@IEKCIACJ@Error?5writing?5to?5output?5file?5?$CC?$CFs@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_164]']
mov ['[ebp+var_284],', 'eax']
mov ['ecx,', '[ebp+var_284]']
mov ['[ebp+var_290],', 'ecx']
cmp ['[ebp+var_290],', '0']
jz ['short', 'loc_D85']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_290]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_290]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C8],', 'eax']
jmp ['short', 'loc_D8F']
mov ['[ebp+var_2C8],', '0']
mov ['eax,', '[ebp+var_C0]']
mov ['[ebp+var_278],', 'eax']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+DstBuf]']
mov ['[ebp+var_26C],', 'eax']
mov ['ecx,', '[ebp+var_26C]']
push ['ecx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
call ['_u_cleanup_56']
movsx ['eax,', 'ds:byte_1EE']
test ['eax,', 'eax']
jnz ['short', 'loc_DE9']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CG@BNLHCBNB@genbrk?3?5tool?5completed?5successfu@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_260],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_108]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_260]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN37']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN36']
dd ['offset', '$LN30']
dd ['0FFFFFF7Ch,', '4']
dd ['offset', '$LN31']
dd ['0FFFFFEF8h,', '40h']
dd ['offset', '$LN32']
dd ['0FFFFFEA8h,', '48h']
dd ['offset', '$LN33']
db ['90h']
db ['0FEh,', '2', 'dup(0FFh)']
dd ['4']
dd ['offset', '$LN34']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$_main$0	proc near	
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-108h]']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$_main$1	proc near	
mov ['esi,', 'esp']
mov ['eax,', '[ebp-29Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$_main proc near		
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2CCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$_main']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CG@BNLHCBNB@genbrk?3?5tool?5completed?5successfu@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CD@IEKCIACJ@Error?5writing?5to?5output?5file?5?$CC?$CFs@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CK@GGBHJNNO@genbrk?3?5error?5?$CFd?5writing?5the?5out@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CP@IFLBHPGC@genbrk?3?5Could?5not?5open?5output?5fi@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EF@FGLKDKKM@createRuleBasedBreakIterator?3?5IC@']
db ["'%d',0Ah,0"]
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4RuleBasedBreakIterator@icu_56@@6B@']
public ['??_SRuleBasedBreakIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ']
dd ['offset', '??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z']
dd ['offset', '?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ']
dd ['offset', '?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ']
dd ['offset', '?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z']
dd ['offset', '?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z']
dd ['offset', '?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z']
dd ['offset', '?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z']
dd ['offset', '?first@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?last@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z']
dd ['offset', '?next@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?current@RuleBasedBreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z']
dd ['offset', '?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z']
dd ['offset', '?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z']
dd ['offset', '?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z']
dd ['offset', '?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z']
dd ['offset', '?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z']
dd ['offset', '?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ']
dd ['offset', '?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z']
dd ['offset', '?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ']
dd ['offset', '?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z']
assume ['cs:_rdata']
public ['??_C@_0BP@CFBDPEPG@ucnv_toUChars?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BL@KFLPHDLH@ucnv_open?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@KDFMPOJA@Error?5reading?5file?5?$CC?$CFs?$CC?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BK@GKEMPMBF@Could?5not?5open?5file?5?$CC?$CFs?$CC?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02JDPG@rb?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
db ["'and", 'others.', 'All', 'Rights', 'Reserved.', "',0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DD@OCLOMIED@rule?5file?5and?5output?5file?5must?5b@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$_main$0']
align ['8']
dd ['offset', '__unwindfunclet$_main$1']
dd ['offset', '__unwindtable$_main']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4RuleBasedBreakIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVRuleBasedBreakIterator@icu_56@@@8']
dd ['offset', '??_R3RuleBasedBreakIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVRuleBasedBreakIterator@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3RuleBasedBreakIterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2RuleBasedBreakIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2RuleBasedBreakIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@BreakIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RuleBasedBreakIterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_04PCJFHION@help?$AA@+4']
dd ['offset', '??_R3RuleBasedBreakIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BreakIterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_04PCJFHION@help?$AA@+4']
dd ['offset', '??_R3BreakIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVBreakIterator@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3BreakIterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2BreakIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2BreakIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_04PCJFHION@help?$AA@+4']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '??_C@_04PCJFHION@help?$AA@+4']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_04PCJFHION@help?$AA@+4']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1447']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
extrn ['__imp__exit:near']
extrn ['_u_getDataDirectory_56:near']
extrn ['__imp__printf:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['_u_cleanup_56:near']
extrn ['??_V@YAXPAX@Z:near']
extrn ['_udata_finish:near']
extrn ['_udata_writeBlock:near']
extrn ['_udata_create:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['__imp_??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z:near']
extrn ['__imp_??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['_ucnv_close_56:near']
extrn ['_ucnv_toUChars_56:near']
extrn ['_ucnv_open_56:near']
extrn ['_ucnv_detectUnicodeSignature_56:near']
extrn ['__imp__fclose:near']
extrn ['__imp__fread:near']
extrn ['??_U@YAPAXI@Z:near']
extrn ['__imp__ftell:near']
extrn ['__imp__fseek:near']
extrn ['__imp__fopen:near']
extrn ['_u_errorName_56:near']
extrn ['_u_init_56:near']
extrn ['_u_setDataDirectory_56:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_parseArgs:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z:near']
extrn ['?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ:near']
extrn ['??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z:near']
extrn ['?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ:near']
extrn ['?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ:near']
extrn ['?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z:near']
extrn ['?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z:near']
extrn ['?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z:near']
extrn ['?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z:near']
extrn ['?first@RuleBasedBreakIterator@icu_56@@UAEHXZ:near']
extrn ['?last@RuleBasedBreakIterator@icu_56@@UAEHXZ:near']
extrn ['?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ:near']
extrn ['?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z:near']
extrn ['?next@RuleBasedBreakIterator@icu_56@@UAEHXZ:near']
extrn ['?current@RuleBasedBreakIterator@icu_56@@UBEHXZ:near']
extrn ['?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z:near']
extrn ['?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z:near']
extrn ['?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z:near']
extrn ['?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ:near']
extrn ['?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z:near']
extrn ['?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z:near']
extrn ['?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z:near']
extrn ['?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ:near']
extrn ['?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ:near']
extrn ['?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z:near']
extrn ['?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ:near']
extrn ['?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z:near']
extrn ['__imp_??1RuleBasedBreakIterator@icu_56@@UAE@XZ:near']
end

endp
_udata_create	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '320h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_320]']
mov ['ecx,', '0C8h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_5A']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_63']
xor ['eax,', 'eax']
jmp ['loc_373']
jmp ['short', 'loc_89']
cmp ['[ebp+Source],', '0']
jz ['short', 'loc_79']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_79']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_89']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_373']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_AC']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_373']
mov ['[ebp+var_250],', '0']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_106']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_106']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_250]']
mov ['[ebp+var_250],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Str]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '5Ch']
jz ['short', 'loc_106']
mov ['eax,', '[ebp+var_250]']
add ['eax,', '1']
mov ['[ebp+var_250],', 'eax']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_250]']
mov ['[ebp+var_250],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_146']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_146']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_250]']
mov ['[ebp+var_250],', 'eax']
cmp ['[ebp+var_250],', '1FFh']
jbe ['short', 'loc_16E']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_373']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1DC']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1DC']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
lea ['ecx,', '[ebp+eax+Dest]']
mov ['[ebp+var_25C],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_25C]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_1DA']
mov ['eax,', '[ebp+var_25C]']
mov ['byte', 'ptr', '[eax],', '5Ch']
mov ['ecx,', '[ebp+var_25C]']
add ['ecx,', '1']
mov ['[ebp+var_25C],', 'ecx']
mov ['eax,', '[ebp+var_25C]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1E3']
mov ['[ebp+Dest],', '0']
mov ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_22D']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_22D']
push ['offset', '??_C@_01LFCBOECM@?4?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
push ['offset', '??_C@_02GMLFBBN@wb?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_T_FileStream_open']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_26A']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '4']
xor ['eax,', 'eax']
jmp ['loc_373']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '4']
mov ['[ebp+var_18],', 'cx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2AA']
mov ['eax,', '[ebp+arg_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2AA']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_24],', 'ax']
movzx ['eax,', '[ebp+var_24]']
movzx ['ecx,', '[ebp+var_18]']
add ['ecx,', 'eax']
mov ['[ebp+var_18],', 'cx']
jmp ['short', 'loc_2B0']
xor ['eax,', 'eax']
mov ['[ebp+var_24],', 'ax']
movzx ['eax,', '[ebp+var_18]']
add ['eax,', '0Fh']
and ['eax,', '0FFFFFFF0h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax+6],', '0DAh']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax+7],', '27h']
push ['4']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_24]']
test ['eax,', 'eax']
jle ['short', 'loc_31E']
movzx ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_18]']
and ['eax,', '0Fh']
mov ['[ebp+var_18],', 'ax']
movzx ['eax,', '[ebp+var_18]']
test ['eax,', 'eax']
jz ['short', 'loc_370']
movzx ['eax,', '[ebp+var_18]']
mov ['ecx,', '10h']
sub ['ecx,', 'eax']
mov ['[ebp+var_18],', 'cx']
movzx ['eax,', '[ebp+var_18]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '320h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN24']
dd ['offset', '$LN22']
dd ['0FFFFFDBCh,', '10h']
dd ['offset', '$LN23']
align ['4']
assume ['cs:_rdata']
public ['??_C@_02GMLFBBN@wb?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01LFCBOECM@?4?$AA@']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_finish	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_417']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_41B']
xor ['eax,', 'eax']
jmp ['short', 'loc_483']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_480']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_474']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_T_FileStream_size']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_T_FileStream_error']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_457']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '4']
jmp ['short', 'loc_466']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_T_FileStream_close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_createDummy proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_550']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0']
push ['offset', '_dummyDataInfo']
mov ['edx,', '[ebp+Source]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_udata_create']
add ['esp,', '18h']
push ['eax']
call ['_udata_finish']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_550']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_u_errorName_56']
add ['esp,', '4']
push ['eax']
push ['offset', '??_C@_0CL@ODPEEBNH@error?5?$CFs?5writing?5dummy?5data?5file@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0CL@ODPEEBNH@error?5?$CFs?5writing?5dummy?5data?5file@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_write8	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5D0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_5D0']
push ['1']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_write16	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_624']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_624']
push ['2']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_write32	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_678']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_678']
push ['4']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_writeBlock proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6D4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6D4']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_6D4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_writePadding proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_757']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_757']
cmp ['[ebp+arg_4],', '10h']
jl ['short', 'loc_73A']
push ['10h']
push ['offset', '?padding@?1??udata_writePadding@@9@9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '10h']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_714']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_757']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '?padding@?1??udata_writePadding@@9@9']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_writeString proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_7C9']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_7C9']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jnz ['short', 'loc_7AD']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_7C9']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_udata_writeUString proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_83F']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_83F']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jnz ['short', 'loc_821']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_83F']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_memset:near']
extrn ['_T_FileStream_write:near']
extrn ['_T_FileStream_open:near']
extrn ['_strcat:near']
extrn ['_strcpy:near']
extrn ['_uprv_free_56:near']
extrn ['_strlen:near']
extrn ['_uprv_malloc_56:near']
extrn ['___security_cookie:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_T_FileStream_close:near']
extrn ['_T_FileStream_error:near']
extrn ['_T_FileStream_size:near']
extrn ['__imp__exit:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_errorName_56:near']
extrn ['_u_strlen_56:near']
end

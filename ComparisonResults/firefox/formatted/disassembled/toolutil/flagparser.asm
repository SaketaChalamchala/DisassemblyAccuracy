endp
_parseFlagsFile	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_1D],', '0']
mov ['[ebp+var_44],', '0']
push ['offset', '??_C@_01KDCPPGHE@r?$AA@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_T_FileStream_open']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_63']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '4']
jmp ['$parseFlagsFile_cleanup$3833']
mov ['eax,', '_currentBufferSize']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_8F']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9D']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$parseFlagsFile_cleanup$3833']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_E6']
mov ['[ebp+var_1D],', '0']
mov ['eax,', '_currentBufferSize']
shl ['eax,', '1']
mov ['_currentBufferSize,', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '_currentBufferSize']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_E6']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$parseFlagsFile_cleanup$3833']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+arg_10]']
jge ['loc_214']
mov ['eax,', '_currentBufferSize']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
call ['_T_FileStream_readLine']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_118']
jmp ['loc_214']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '23h']
jnz ['short', 'loc_125']
jmp ['short', 'loc_ED']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '_currentBufferSize']
sub ['ecx,', '1']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_16A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '_currentBufferSize']
movsx ['ecx,', 'byte', 'ptr', '[eax-2]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_16A']
mov ['[ebp+var_1D],', '1']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_T_FileStream_rewind']
add ['esp,', '4']
jmp ['loc_214']
jmp ['loc_20F']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '_currentBufferSize']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_extractFlag']
add ['esp,', '1Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1B9']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_1AE']
mov ['eax,', '_currentBufferSize']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_1B5']
mov ['[ebp+var_44],', '0FFFFFFFFh']
jmp ['short', 'loc_214']
jmp ['short', 'loc_20F']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1E4']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_1DD']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
jmp ['short', 'loc_1E2']
jmp ['loc_ED']
jmp ['short', 'loc_20F']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_118]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
jmp ['loc_ED']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', '$parseFlagsFile_cleanup$3833']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['loc_9D']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_T_FileStream_close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_261']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jz ['short', 'loc_261']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_27C']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_279']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_279']
mov ['_currentBufferSize,', '200h']
mov ['eax,', '[ebp+var_44]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_01KDCPPGHE@r?$AA@']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_extractFlag	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_35],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_352']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getFlagOffset']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_304']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_C]']
jl ['short', 'loc_31D']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '0Fh']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_3E6']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_336']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_352']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_350']
mov ['[ebp+var_35],', '1']
jmp ['short', 'loc_2FB']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jnz ['short', 'loc_360']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_3E3']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_3E3']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_387']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_14]']
jge ['short', 'loc_3E3']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_3E1']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3E3']
jmp ['short', 'loc_37E']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_data,', 'fs:nothing,', 'gs:nothing']
endp
_getFlagOffset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_433']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_456']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Dh']
jnz ['short', 'loc_454']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_456']
jmp ['short', 'loc_42A']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_469']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_470']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_T_FileStream_close:near']
extrn ['_strcpy:near']
extrn ['_T_FileStream_rewind:near']
extrn ['_strlen:near']
extrn ['_T_FileStream_readLine:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_T_FileStream_open:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__strncmp:near']
extrn ['_uprv_checkValidMemory:near']
end

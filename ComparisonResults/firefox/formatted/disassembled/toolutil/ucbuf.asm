endp
_ucbuf_autodetect_fs proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_28],', 'ax']
push ['8']
lea ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_T_FileStream_read']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
lea ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ucnv_detectUnicodeSignature_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_T_FileStream_rewind']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_8A']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_T_FileStream_read']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_A2']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['al,', 'al']
jmp ['loc_135']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ucnv_open_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
lea ['eax,', '[ebp+var_10]']
mov ['[ebp+var_40],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
lea ['eax,', '[ebp+edx+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
lea ['edx,', '[ebp+var_26]']
push ['edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ucnv_toUnicode_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+var_40]']
lea ['ecx,', '[ebp+var_10]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_10F']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_133']
lea ['eax,', '[ebp+var_26]']
cmp ['[ebp+var_34],', 'eax']
jnz ['short', 'loc_12A']
movzx ['eax,', '[ebp+var_28]']
cmp ['eax,', '0FEFFh']
jz ['short', 'loc_133']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '5']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12']
dd ['offset', '$LN8']
dd ['0FFFFFFD8h,', '2']
dd ['offset', '$LN9']
db ['0CCh']
db ['3', 'dup(0FFh)']
dd ['4']
dd ['offset', '$LN10']
dd ['0FFFFFFC0h,', '4']
dd ['offset', '$LN11']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_autodetect proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1F3']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1FA']
xor ['eax,', 'eax']
jmp ['loc_28F']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_20C']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_20C']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_219']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_28F']
push ['offset', '??_C@_02JDPG@rb?$AA@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_T_FileStream_open']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_240']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_28F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ucbuf_autodetect_fs']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_26A']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_28F']
jmp ['short', 'loc_28F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucnv_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_T_FileStream_close']
add ['esp,', '4']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_02JDPG@rb?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_getc	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2D4']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2D8']
xor ['eax,', 'eax']
jmp ['short', 'loc_33A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jb ['short', 'loc_314']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_2F4']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_33A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_fillucbuf']
add ['esp,', '8']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_314']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_33A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_C2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
movzx ['eax,', '[ebp+var_C2]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_fillucbuf proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '5E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_5E4]']
mov ['ecx,', '179h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_18],', '0']
mov ['[ebp+Src],', '0']
mov ['[ebp+var_414],', '0']
push ['3E7h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_414]']
mov ['[ebp+var_420],', 'eax']
mov ['[ebp+var_42C],', '0']
mov ['[ebp+var_438],', '0']
mov ['[ebp+var_444],', '0']
mov ['[ebp+var_450],', '0']
mov ['[ebp+var_45C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_43A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+4]']
sar ['edx,', '1']
mov ['[ebp+var_444],', 'edx']
mov ['eax,', '[ebp+var_444]']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_48C']
mov ['[ebp+var_45C],', '3E8h']
mov ['eax,', '[ebp+var_45C]']
sub ['eax,', '[ebp+var_444]']
push ['eax']
mov ['ecx,', '[ebp+var_420]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_T_FileStream_read']
add ['esp,', '0Ch']
mov ['[ebp+var_42C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_42C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_504']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_T_FileStream_size']
add ['esp,', '4']
mov ['[ebp+var_45C],', 'eax']
mov ['eax,', '[ebp+var_45C]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_420],', 'eax']
cmp ['[ebp+var_420],', '0']
jnz ['short', 'loc_4CF']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_9A0']
mov ['eax,', '[ebp+var_45C]']
push ['eax']
mov ['ecx,', '[ebp+var_420]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_T_FileStream_read']
add ['esp,', '0Ch']
mov ['[ebp+var_42C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+var_42C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+10h],', 'ecx']
cmp ['[ebp+var_42C],', '0']
jnz ['short', 'loc_517']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['loc_8FB']
mov ['[ebp+var_480],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_474]']
push ['ecx']
lea ['edx,', '[ebp+var_468]']
push ['edx']
mov ['eax,', '[ebp+var_480]']
push ['eax']
push ['offset', '_UCNV_TO_U_CALLBACK_STOP_56']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_ucnv_setToUCallBack_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_420]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_42C]']
mov ['[ebp+var_450],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_450]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_444]']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
call ['_ucnv_toUnicode_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['loc_8EB']
mov ['[ebp+var_4E9],', '14h']
mov ['[ebp+var_4F8],', '0']
mov ['[ebp+var_504],', '0']
mov ['[ebp+var_510],', '0']
mov ['[ebp+var_51C],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_64D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0FO@NCCEOLOJ@?6?$CD?$CD?$CDWARNING?3?5Encountered?5abnorma@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_51C]']
push ['eax']
lea ['ecx,', '[ebp+var_4E9]']
push ['ecx']
lea ['edx,', '[ebp+var_4A0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_getInvalidChars_56']
add ['esp,', '10h']
movsx ['eax,', '[ebp+var_4E9]']
mov ['[ebp+eax+var_4A0],', '0']
mov ['eax,', '[ebp+Src]']
sub ['eax,', '[ebp+var_420]']
movsx ['ecx,', '[ebp+var_4E9]']
sub ['eax,', 'ecx']
mov ['[ebp+var_510],', 'eax']
cmp ['[ebp+var_510],', '14h']
jg ['short', 'loc_6AD']
mov ['[ebp+var_5E4],', '0']
jmp ['short', 'loc_6BC']
mov ['eax,', '[ebp+var_510]']
sub ['eax,', '13h']
mov ['[ebp+var_5E4],', 'eax']
mov ['ecx,', '[ebp+var_5E4]']
mov ['[ebp+var_4F8],', 'ecx']
movsx ['eax,', '[ebp+var_4E9]']
mov ['ecx,', '[ebp+var_510]']
sub ['ecx,', 'eax']
mov ['[ebp+var_504],', 'ecx']
mov ['eax,', '[ebp+var_504]']
sub ['eax,', '[ebp+var_4F8]']
push ['eax']
mov ['ecx,', '[ebp+var_420]']
add ['ecx,', '[ebp+var_4F8]']
push ['ecx']
lea ['edx,', '[ebp+var_4C0]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_504]']
sub ['eax,', '[ebp+var_4F8]']
mov ['[ebp+eax+var_4C0],', '0']
movsx ['eax,', '[ebp+var_4E9]']
add ['eax,', '[ebp+var_510]']
mov ['[ebp+var_4F8],', 'eax']
mov ['eax,', '[ebp+var_510]']
add ['eax,', '14h']
mov ['ecx,', '[ebp+var_450]']
sub ['ecx,', '[ebp+var_420]']
cmp ['eax,', 'ecx']
jg ['short', 'loc_757']
mov ['edx,', '[ebp+var_510]']
add ['edx,', '13h']
mov ['[ebp+var_5E4],', 'edx']
jmp ['short', 'loc_769']
mov ['eax,', '[ebp+var_450]']
sub ['eax,', '[ebp+var_420]']
mov ['[ebp+var_5E4],', 'eax']
mov ['ecx,', '[ebp+var_5E4]']
mov ['[ebp+var_504],', 'ecx']
mov ['eax,', '[ebp+var_504]']
sub ['eax,', '[ebp+var_4F8]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
lea ['edx,', '[ebp+var_4E0]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_504]']
sub ['eax,', '[ebp+var_4F8]']
mov ['[ebp+eax+var_4E0],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
cmp ['ecx,', '1']
jnz ['loc_84C']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_4C0]']
push ['eax']
push ['offset', '??_C@_0BC@EDBMLMME@?7Pre?9context?3?5?$CFs?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_4A0]']
push ['eax']
push ['offset', '??_C@_0O@JGBDPAO@?7Context?3?5?$CFs?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_4E0]']
push ['eax']
push ['offset', '??_C@_0BD@OAOAFOMK@?7Post?9context?3?5?$CFs?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_reset_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_51C]']
push ['eax']
lea ['ecx,', '[ebp+var_474]']
push ['ecx']
lea ['edx,', '[ebp+var_468]']
push ['edx']
mov ['eax,', '[ebp+var_480]']
push ['eax']
push ['offset', '_UCNV_TO_U_CALLBACK_SUBSTITUTE_56']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_ucnv_setToUCallBack_56']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_444]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_420]']
mov ['[ebp+Src],', 'eax']
lea ['eax,', '[ebp+var_51C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_450]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_444]']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
call ['_ucnv_toUnicode_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_C]']
sar ['eax,', '1']
mov ['[ebp+var_438],', 'eax']
jmp ['short', 'loc_958']
mov ['eax,', '[ebp+var_42C]']
push ['eax']
mov ['ecx,', '[ebp+var_444]']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_420]']
push ['ecx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
cmp ['ecx,', '[ebp+var_45C]']
jle ['short', 'loc_93A']
mov ['edx,', '[ebp+var_45C]']
mov ['[ebp+var_5E4],', 'edx']
jmp ['short', 'loc_94C']
mov ['eax,', '[ebp+var_42C]']
add ['eax,', '[ebp+var_444]']
mov ['[ebp+var_5E4],', 'eax']
mov ['ecx,', '[ebp+var_5E4]']
mov ['[ebp+var_438],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_438]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
xor ['edx,', 'edx']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_420]']
lea ['ecx,', '[ebp+var_414]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_99D']
mov ['eax,', '[ebp+var_420]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '5E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN30']
dd ['offset', '$LN20']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN21']
dd ['0FFFFFBECh,', '3E8h']
dd ['offset', '$LN22']
dd ['0FFFFFB98h,', '4']
dd ['offset', '$LN23']
dd ['0FFFFFB8Ch,', '4']
dd ['offset', '$LN24']
dd ['0FFFFFB60h,', '15h']
dd ['offset', '$LN25']
dd ['0FFFFFB40h,', '15h']
dd ['offset', '$LN26']
dd ['0FFFFFB20h,', '15h']
dd ['offset', '$LN27']
dd ['0FFFFFB17h,', '1']
dd ['offset', '$LN28']
dd ['0FFFFFAE4h,', '4']
dd ['offset', '$LN29']
assume ['cs:_rdata']
public ['??_C@_0BD@OAOAFOMK@?7Post?9context?3?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0O@JGBDPAO@?7Context?3?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@EDBMLMME@?7Pre?9context?3?5?$CFs?6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0FO@NCCEOLOJ@?6?$CD?$CD?$CDWARNING?3?5Encountered?5abnorma@']
db ["'###WARNING:", 'Encountered', 'abnormal', 'bytes', 'while', 'converting', 'input', "str'"]
db ["'eam", 'to', 'target', 'encoding:', "%s',0Ah,0"]
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_getc32	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFFh']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_B73']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_B7A']
xor ['eax,', 'eax']
jmp ['loc_C22']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+8]']
jb ['short', 'loc_BBC']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_B9C']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_C22']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_fillucbuf']
add ['esp,', '8']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_BBC']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_C22']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_C04']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
shl ['edx,', '0Ah']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movzx ['eax,', 'word', 'ptr', '[ecx+2]']
lea ['ecx,', '[edx+eax-35FDC00h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_C1F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_getcx32	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C6E']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_C75']
xor ['eax,', 'eax']
jmp ['loc_DFD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+4],', 'ecx']
jb ['short', 'loc_C96']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_fillucbuf']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_CC1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_CC8']
mov ['[ebp+var_30],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_30],', '5Ch']
jz ['short', 'loc_CE2']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_DFD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx+4]']
sar ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0Ah']
jge ['short', 'loc_D19']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_fillucbuf']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
push ['offset', '__charAt']
call ['_u_unescapeAt_56']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0FFFFFFFFh']
jnz ['loc_DC7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_DB7']
mov ['[ebp+var_68],', '14h']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_68]']
jge ['short', 'loc_D66']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+eax+var_5C],', '0']
mov ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
push ['offset', '??_C@_0BH@MHOIFCG@Bad?5escape?3?5?$FL?$CFc?$CFs?$FN?4?4?4?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '12h']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_DFD']
jmp ['short', 'loc_DFA']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_3C]']
jnz ['short', 'loc_DE1']
cmp ['[ebp+var_24],', '75h']
jnz ['short', 'loc_DF5']
cmp ['[ebp+var_3C],', '75h']
jnz ['short', 'loc_DF5']
cmp ['[ebp+var_30],', '5Ch']
jnz ['short', 'loc_DF5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
jmp ['short', 'loc_DFA']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_DFD']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN19']
dd ['offset', '$LN17']
dd ['0FFFFFFA4h,', '15h']
dd ['offset', '$LN18']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BH@MHOIFCG@Bad?5escape?3?5?$FL?$CFc?$CFs?$FN?4?4?4?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
__charAt	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[ecx+edx*2]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_EE2']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_EE9']
xor ['eax,', 'eax']
jmp ['loc_11D7']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_EF5']
cmp ['[ebp+Str1],', '0']
jnz ['short', 'loc_F05']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_11D7']
push ['offset', '??_C@_01JOAMLHOP@?9?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_F24']
call ['_T_FileStream_stdin']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_F38']
push ['offset', '??_C@_02JDPG@rb?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_T_FileStream_open']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_11CC']
push ['24h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_T_FileStream_size']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_F80']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_T_FileStream_close']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_11D7']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[ebp+arg_8]']
mov ['[eax+20h],', 'cl']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[ebp+arg_C]']
mov ['[eax+21h],', 'cl']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_FC3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_FE7']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1Ch']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ucbuf_autodetect_fs']
add ['esp,', '14h']
jmp ['short', 'loc_101E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucbuf_isCPKnown']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_101E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1Ch']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ucbuf_autodetect_fs']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_1047']
mov ['eax,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_1047']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ucnv_open_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+1Ch],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_107D']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_T_FileStream_close']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_11D7']
mov ['eax,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_10BC']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_10BC']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DN@PBMNKNBG@?$CD?$CD?$CDWARNING?3?5No?5converter?5defined@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_10E2']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax+0Ch],', '5DCh']
jmp ['short', 'loc_10F8']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+14h]']
lea ['ecx,', '[ecx+eax+1]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '1']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_1132']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_ucbuf_close']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_11D7']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_119F']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
push ['offset', '??_C@_0CC@JOFLAJED@Could?5not?5open?5codepage?5?$FL?$CFs?$FN?3?5?$CFs@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_ucbuf_close']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_11D7']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_ucbuf_fillucbuf']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_11C7']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_ucbuf_close']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_11D7']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_11D7']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '4']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN24_0']
dd ['offset', '$LN23_0']
assume ['cs:_rdata']
public ['??_C@_0CC@JOFLAJED@Could?5not?5open?5codepage?5?$FL?$CFs?$FN?3?5?$CFs@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DN@PBMNKNBG@?$CD?$CD?$CDWARNING?3?5No?5converter?5defined@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01JOAMLHOP@?9?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_isCPKnown proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_05EGJIMALK@UTF?98?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_12BA']
mov ['al,', '1']
jmp ['loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_08NLKHJAFK@UTF?916BE?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_12D6']
mov ['al,', '1']
jmp ['loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_08NBDJLNFA@UTF?916LE?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_12F2']
mov ['al,', '1']
jmp ['loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_06KNDPGIKI@UTF?916?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_130E']
mov ['al,', '1']
jmp ['loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_06MKNHHJMC@UTF?932?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1327']
mov ['al,', '1']
jmp ['short', 'loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_08COAFFEGN@UTF?932BE?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1340']
mov ['al,', '1']
jmp ['short', 'loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_08CEJLHJGH@UTF?932LE?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1359']
mov ['al,', '1']
jmp ['short', 'loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_04GGPJHDNC@SCSU?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1372']
mov ['al,', '1']
jmp ['short', 'loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_06FKEBPDGA@BOCU?91?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_138B']
mov ['al,', '1']
jmp ['short', 'loc_13A6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '??_C@_05MBAANMHF@UTF?97?$AA@']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_13A4']
mov ['al,', '1']
jmp ['short', 'loc_13A6']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_05MBAANMHF@UTF?97?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06FKEBPDGA@BOCU?91?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04GGPJHDNC@SCSU?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08CEJLHJGH@UTF?932LE?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_08COAFFEGN@UTF?932BE?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06MKNHHJMC@UTF?932?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06KNDPGIKI@UTF?916?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08NBDJLNFA@UTF?916LE?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08NLKHJAFK@UTF?916BE?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05EGJIMALK@UTF?98?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_ungetc	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx]']
jz ['short', 'loc_1465']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx-2]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_1465']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_close	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_14CF']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_14A8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_T_FileStream_close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucbuf_closebuf']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_closebuf	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_rewind	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1566']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_156B']
jmp ['loc_166B']
cmp ['[ebp+arg_0],', '0']
jz ['loc_166B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_T_FileStream_rewind']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_T_FileStream_size']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
sub ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_resetToUnicode_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jle ['loc_166B']
xor ['eax,', 'eax']
mov ['[ebp+var_C],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_T_FileStream_read']
add ['esp,', '0Ch']
mov ['[ebp+var_40],', 'eax']
lea ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
lea ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_40]']
lea ['edx,', '[ebp+ecx+var_28]']
push ['edx']
lea ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_A]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_toUnicode_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_163C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_166B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[eax+14h]']
jnz ['short', 'loc_1662']
lea ['eax,', '[ebp+var_A]']
cmp ['[ebp+var_18],', 'eax']
jnz ['short', 'loc_1662']
movzx ['eax,', '[ebp+var_C]']
cmp ['eax,', '0FEFFh']
jz ['short', 'loc_166B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '5']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN10_0']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN11_0']
dd ['0FFFFFFD8h,', '8']
dd ['offset', '$LN12_0']
db ['0CCh']
db ['3', 'dup(0FFh)']
dd ['4']
dd ['offset', '$LN13_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_size	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1760']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1751']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_T_FileStream_size']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_0]']
sub ['esi,', '[edx+14h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ucnv_getMinCharSize_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
mov ['eax,', 'esi']
cdq
idiv ['ecx']
jmp ['short', 'loc_1762']
jmp ['short', 'loc_1760']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx]']
sar ['eax,', '1']
jmp ['short', 'loc_1762']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_getBuffer proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_17A4']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_17A8']
xor ['eax,', 'eax']
jmp ['short', 'loc_17D8']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_17B4']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_17C1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_17D8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
sar ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_resolveFileName proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1821']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1828']
xor ['eax,', 'eax']
jmp ['loc_1954']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1848']
cmp ['[ebp+Source],', '0']
jz ['short', 'loc_1848']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1848']
cmp ['[ebp+Dest],', '0']
jnz ['short', 'loc_1858']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1858']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1954']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_18FF']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax+2]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_8]']
jl ['short', 'loc_18A2']
cmp ['[ebp+Dest],', '0']
jnz ['short', 'loc_18BA']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0Fh']
xor ['eax,', 'eax']
jmp ['loc_1954']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Source]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_18F3']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '2Eh']
jz ['short', 'loc_18F3']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '5Ch']
mov ['eax,', '[ebp+Dest]']
add ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+1],', '0']
jmp ['short', 'loc_1941']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_8]']
jl ['short', 'loc_191C']
cmp ['[ebp+Dest],', '0']
jnz ['short', 'loc_1931']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0Fh']
xor ['eax,', 'eax']
jmp ['short', 'loc_1954']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Dest]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_readline	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+21h]']
test ['ecx,', 'ecx']
jz ['loc_1ABC']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_19CE']
xor ['eax,', 'eax']
jmp ['loc_1B7E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jb ['short', 'loc_19F8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_19F8']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Bh']
xor ['eax,', 'eax']
jmp ['loc_1B7E']
jmp ['short', 'loc_1A17']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucbuf_fillucbuf']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1A17']
xor ['eax,', 'eax']
jmp ['loc_1B7E']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0Dh']
jnz ['short', 'loc_1A69']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
ja ['short', 'loc_1A69']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jnz ['short', 'loc_1A69']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+4]']
sar ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_1B7E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_1A88']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
call ['_ucbuf_isCharNewLine']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1AB2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+4]']
sar ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_1B7E']
jmp ['loc_19AB']
jmp ['loc_1B7E']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jnz ['short', 'loc_1AE4']
xor ['eax,', 'eax']
jmp ['loc_1B7E']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0Dh']
jnz ['short', 'loc_1B33']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
ja ['short', 'loc_1B33']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jnz ['short', 'loc_1B33']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+4]']
sar ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_1B7E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_1B52']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
call ['_ucbuf_isCharNewLine']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1B79']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+4]']
sar ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_1B7E']
jmp ['loc_1ABC']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucbuf_isCharNewLine proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '85h']
jg ['short', 'loc_1BF1']
cmp ['[ebp+var_C4],', '85h']
jz ['short', 'loc_1C0B']
cmp ['[ebp+var_C4],', '0Ah']
jz ['short', 'loc_1C0B']
cmp ['[ebp+var_C4],', '0Bh']
jle ['short', 'loc_1C0F']
cmp ['[ebp+var_C4],', '0Dh']
jle ['short', 'loc_1C0B']
jmp ['short', 'loc_1C0F']
cmp ['[ebp+var_C4],', '2028h']
jl ['short', 'loc_1C0F']
cmp ['[ebp+var_C4],', '2029h']
jle ['short', 'loc_1C0B']
jmp ['short', 'loc_1C0F']
mov ['al,', '1']
jmp ['short', 'loc_1C11']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_ucnv_toUnicode_56:near']
extrn ['_ucnv_open_56:near']
extrn ['_T_FileStream_rewind:near']
extrn ['_ucnv_detectUnicodeSignature_56:near']
extrn ['_T_FileStream_read:near']
extrn ['___security_cookie:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_T_FileStream_close:near']
extrn ['_ucnv_close_56:near']
extrn ['_T_FileStream_open:near']
extrn ['_uprv_free_56:near']
extrn ['_u_charsToUChars_56:near']
extrn ['_UCNV_TO_U_CALLBACK_SUBSTITUTE_56:near']
extrn ['_ucnv_reset_56:near']
extrn ['_memcpy:near']
extrn ['_ucnv_getInvalidChars_56:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_errorName_56:near']
extrn ['_ucnv_setToUCallBack_56:near']
extrn ['_UCNV_TO_U_CALLBACK_STOP_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_T_FileStream_size:near']
extrn ['__imp__memmove:near']
extrn ['_memset:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_u_unescapeAt_56:near']
extrn ['_T_FileStream_stdin:near']
extrn ['_strcmp:near']
extrn ['_ucnv_compareNames_56:near']
extrn ['_ucnv_resetToUnicode_56:near']
extrn ['_ucnv_getMinCharSize_56:near']
extrn ['_strcat:near']
extrn ['_strcpy:near']
extrn ['_strlen:near']
end

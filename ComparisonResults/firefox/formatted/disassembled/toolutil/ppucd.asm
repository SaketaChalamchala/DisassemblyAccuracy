endp
??0PropertyNames@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PropertyNames@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4PropertyNames@icu_56@@6B@']
public ['??_7PropertyNames@icu_56@@6B@']
dd ['offset', '?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z']
dd ['offset', '?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_rdata$r']
public ['??_R4PropertyNames@icu_56@@6B@']
dd ['offset', '??_R0?AVPropertyNames@icu_56@@@8']
dd ['offset', '??_R3PropertyNames@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVPropertyNames@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3PropertyNames@icu_56@@8']
dd ['1']
dd ['offset', '??_R2PropertyNames@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2PropertyNames@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@PropertyNames@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_C@_0O@EPGGOOOP@algnamesrange?$AA@+4']
dd ['offset', '??_R3PropertyNames@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0PropertyNames@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PropertyNames@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4PropertyNames@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GPropertyNames@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1PropertyNames@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_22B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EPropertyNames@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_2A5']
push ['offset', '??1PropertyNames@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_29D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_2C4']
mov ['ecx,', '[ebp+var_8]']
call ['??1PropertyNames@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2C1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIntProp@UniProps@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*4-3FBCh]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UniProps@icu_56@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UniProps@icu_56@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '8']
mov ['edi,', '[ebp+var_14]']
add ['edi,', '8']
mov ['ecx,', '0Eh']
rep ['movsd']
movsb
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '44h']
mov ['edi,', '[ebp+var_14]']
add ['edi,', '44h']
mov ['ecx,', '16h']
rep ['movsd']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+9Ch]']
mov ['[eax+9Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A0h]']
mov ['[eax+0A0h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A4h]']
mov ['[eax+0A4h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A8h]']
mov ['[eax+0A8h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0ACh]']
mov ['[eax+0ACh],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B0h]']
mov ['[eax+0B0h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B4h]']
mov ['[eax+0B4h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B8h]']
mov ['[eax+0B8h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0BCh]']
mov ['[eax+0BCh],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0C0h]']
mov ['[eax+0C0h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0C4h]']
mov ['[eax+0C4h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0C8h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0C8h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '108h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '108h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '148h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '148h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '188h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '188h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1C8h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1C8h']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$0 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$1 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '108h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$2 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '148h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$3 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '188h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0UniProps@icu_56@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UniProps@icu_56@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$3']
dd ['offset', '__unwindtable$??0UniProps@icu_56@@QAE@ABU01@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UniProps@icu_56@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_64F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '39h']
jnb ['short', 'loc_669']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+8]']
mov ['[eax+8],', 'dl']
jmp ['short', 'loc_646']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_67B']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '16h']
jnb ['short', 'loc_697']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
mov ['esi,', '[ebp+arg_0]']
mov ['edx,', '[esi+edx*4+44h]']
mov ['[ecx+eax*4+44h],', 'edx']
jmp ['short', 'loc_672']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_6A9']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '4']
jnb ['short', 'loc_6C9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_2C]']
mov ['dl,', '[ecx+9Ch]']
mov ['[eax+9Ch],', 'dl']
jmp ['short', 'loc_6A0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A0h]']
mov ['[eax+0A0h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A4h]']
mov ['[eax+0A4h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0A8h]']
mov ['[eax+0A8h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0ACh]']
mov ['[eax+0ACh],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B0h]']
mov ['[eax+0B0h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B4h]']
mov ['[eax+0B4h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B8h]']
mov ['[eax+0B8h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0BCh]']
mov ['[eax+0BCh],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0C0h]']
mov ['[eax+0C0h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0C4h]']
mov ['[eax+0C4h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0C8h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0C8h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '108h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '108h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '148h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '148h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '188h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '188h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1C8h']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1C8h']
call ['dword', 'ptr', 'ds:__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setPropertyNames@PreparsedUCD@icu_56@@QAEXPBVPropertyNames@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLineNumber@PreparsedUCD@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getUnicodeVersion@PreparsedUCD@icu_56@@QBEAAY03$$CBEXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '28h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '6']
jl ['short', 'loc_912']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '8']
jg ['short', 'loc_912']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_919']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_96A']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_96A']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_971']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0PreparsedUCD@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
call ['??0UniProps@icu_56@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '228h']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '228h']
call ['??0UniProps@icu_56@@QAE@ABU01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '424h']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '424h']
call ['??0UniProps@icu_56@@QAE@ABU01@@Z']
push ['3000h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '620h']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '620h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '2Ch']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '228h']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__ehhandler$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$1']
dd ['offset', '__unwindtable$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4PreparsedUCD@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_BF3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '4']
jnb ['short', 'loc_C0D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+28h]']
mov ['[eax+28h],', 'dl']
jmp ['short', 'loc_BEA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2Ch']
call ['??4UniProps@icu_56@@QAEAAU01@ABU01@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '228h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '228h']
call ['??4UniProps@icu_56@@QAEAAU01@ABU01@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '424h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '424h']
call ['??4UniProps@icu_56@@QAEAAU01@ABU01@@Z']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_C5F']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '3000h']
jnb ['short', 'loc_C82']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx+620h]']
mov ['[eax+620h],', 'dl']
jmp ['short', 'loc_C56']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1PropertyNames@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7PropertyNames@icu_56@@6B@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_getPropertyEnum_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_u_getPropertyValueEnum_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UniProps@icu_56@@QAE@XZ proc	near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UniProps@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0A0h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0A4h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0A8h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0ACh],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0B0h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0B4h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0B8h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0BCh],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0C0h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0C4h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '108h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '148h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '188h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['39h']
push ['0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '8']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['58h']
push ['0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '44h']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['4']
push ['0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '9Ch']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '108h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$2 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '148h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$3 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '188h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??0UniProps@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UniProps@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$0']
align ['8']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$3']
dd ['offset', '__unwindtable$??0UniProps@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UniProps@icu_56@@QAE@XZ proc	near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1UniProps@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '188h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '148h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '108h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '108h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$2 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '148h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$3 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '188h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_??1UnicodeString@icu_56@@UAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$??1UniProps@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1UniProps@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$3']
dd ['offset', '__unwindtable$??1UniProps@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['4']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_1216']
mov ['ecx,', '[ebp+var_E0]']
call ['??0PropertyNames@icu_56@@QAE@XZ']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1220']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_E8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
call ['??0UniProps@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '228h']
call ['??0UniProps@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '424h']
call ['??0UniProps@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_12D6']
jmp ['loc_13CF']
cmp ['[ebp+Filename],', '0']
jz ['short', 'loc_12FC']
mov ['eax,', '[ebp+Filename]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_12FC']
mov ['eax,', '[ebp+Filename]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_131A']
mov ['eax,', '[ebp+Filename]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_131A']
mov ['[ebp+Filename],', '0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_133B']
mov ['esi,', 'esp']
push ['offset', '??_C@_01KDCPPGHE@r?$AA@']
mov ['eax,', '[ebp+Filename]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fopen']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_13B2']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BM@NOPNOOEA@error?5opening?5preparsed?5UCD?$AA@']
call ['dword', 'ptr', 'ds:__imp__perror']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Filename],', '0']
jz ['short', 'loc_136C']
mov ['eax,', '[ebp+Filename]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_1376']
mov ['[ebp+var_E8],', 'offset', '??_C@_0BF@GHKHHFLO@?$CCno?5file?5name?5given?$CC?$AA@']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
push ['offset', '??_C@_0CF@CEIPKEIP@error?5opening?5preparsed?5UCD?5file@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '4']
jmp ['short', 'loc_13CF']
push ['4']
push ['0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '28h']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+620h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '2Ch']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '228h']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$2 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '424h']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__ehhandler$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@CEIPKEIP@error?5opening?5preparsed?5UCD?5file@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BF@GHKHHFLO@?$CCno?5file?5name?5given?$CC?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BM@NOPNOOEA@error?5opening?5preparsed?5UCD?$AA@']
assume ['cs:_rdata']
public ['??_C@_01KDCPPGHE@r?$AA@']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$2']
dd ['offset', '__unwindtable$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1PreparsedUCD@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1PreparsedUCD@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_14]']
cmp ['[ecx+8],', 'eax']
jz ['short', 'loc_1585']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__fclose']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_15CA']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_15D4']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '424h']
call ['??1UniProps@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '228h']
call ['??1UniProps@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2Ch']
call ['??1UniProps@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '2Ch']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$1 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '228h']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$2 proc near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '424h']
jmp ['??1UniProps@icu_56@@QAE@XZ']
endp
__ehhandler$??1PreparsedUCD@icu_56@@QAE@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1PreparsedUCD@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$2']
dd ['offset', '__unwindtable$??1PreparsedUCD@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?readLine@PreparsedUCD@icu_56@@QAE?AW4LineType@12@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16EF']
xor ['eax,', 'eax']
jmp ['loc_19DE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1729']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '3']
jnz ['short', 'loc_1727']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
jmp ['short', 'loc_16EF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
shl ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+620h]']
mov ['[ebp+Buf],', 'eax']
mov ['eax,', '[ebp+Buf]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Buf]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+Buf]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
push ['1000h']
mov ['edx,', '[ebp+Buf]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fgets']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_1801']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__ferror']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_17FA']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BM@HAPPBACF@error?5reading?5preparsed?5UCD?$AA@']
call ['dword', 'ptr', 'ds:__imp__perror']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['offset', '??_C@_0CN@MIGBAGME@error?5reading?5preparsed?5UCD?5befo@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '4']
xor ['eax,', 'eax']
jmp ['loc_19DE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+Buf]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '23h']
jnz ['short', 'loc_1843']
push ['0']
mov ['eax,', '[ebp+Buf]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '1']
mov ['eax,', '1']
jmp ['loc_19DE']
push ['0']
mov ['eax,', '[ebp+Buf]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+Buf]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_1882']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', '[eax-1]']
mov ['[ebp+var_29],', 'cl']
movsx ['edx,', '[ebp+var_29]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_1877']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '0Dh']
jnz ['short', 'loc_1882']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1854']
mov ['eax,', '[ebp+Buf]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_18B0']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', '[eax-1]']
mov ['[ebp+var_29],', 'cl']
movsx ['edx,', '[ebp+var_29]']
cmp ['edx,', '20h']
jz ['short', 'loc_18A5']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '9']
jnz ['short', 'loc_18B0']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1882']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+24h],', 'ecx']
mov ['eax,', '[ebp+Buf]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_18E4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+20h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '1']
mov ['eax,', '1']
jmp ['loc_19DE']
mov ['eax,', '[ebp+Buf]']
mov ['[ebp+Str],', 'eax']
push ['3Bh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['[ebp+Str],', 'eax']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1912']
mov ['eax,', '[ebp+Str]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '1']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_18EA']
push ['0']
mov ['eax,', '[ebp+Buf]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'eax']
mov ['[ebp+var_50],', '2']
jmp ['short', 'loc_1938']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0Ah']
jnz ['short', 'loc_1980']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+Buf]']
push ['edx']
push ['offset', '??_C@_0EK@GOJIBCL@error?5in?5preparsed?5UCD?3?5unknown?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['short', 'loc_19DE']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', 'ds:_lineTypeStrings[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+Buf]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_199D']
jmp ['short', 'loc_199F']
jmp ['short', 'loc_192F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '2']
jnz ['short', 'loc_19D8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+24h]']
jnb ['short', 'loc_19D8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '28h']
push ['edx']
call ['_u_versionFromString_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+1Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
public ['??_C@_0EK@GOJIBCL@error?5in?5preparsed?5UCD?3?5unknown?5@']
db ["'on", 'line', "%ld',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CN@MIGBAGME@error?5reading?5preparsed?5UCD?5befo@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BM@HAPPBACF@error?5reading?5preparsed?5UCD?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?strchr@@YAPADPADH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Val]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?firstField@PreparsedUCD@icu_56@@AAEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
shl ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+620h]']
mov ['[ebp+Str],', 'eax']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'eax']
mov ['eax,', '[ebp+Str]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextField@PreparsedUCD@icu_56@@QAEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+24h]']
jnz ['short', 'loc_1B71']
xor ['eax,', 'eax']
jmp ['short', 'loc_1B94']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '1']
mov ['[ebp+Str],', 'ecx']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?strchr@@YAPADPADH@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'eax']
mov ['eax,', '[ebp+Str]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getProps@PreparsedUCD@icu_56@@QAEPBUUniProps@2@AAVUnicodeSet@2@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1BE7']
xor ['eax,', 'eax']
jmp ['loc_1EDE']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
call ['?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1C1C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1EDE']
mov ['ecx,', '[ebp+var_8]']
call ['?firstField@PreparsedUCD@icu_56@@AAEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?nextField@PreparsedUCD@icu_56@@QAEPBDXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1C76']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['offset', '??_C@_0FM@BCFCIPLO@error?5in?5preparsed?5UCD?3?5missing?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['loc_1EDE']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1C9C']
xor ['eax,', 'eax']
jmp ['loc_1EDE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_100],', 'ecx']
cmp ['[ebp+var_100],', '6']
jz ['short', 'loc_1CD0']
cmp ['[ebp+var_100],', '7']
jz ['loc_1D88']
cmp ['[ebp+var_100],', '8']
jz ['loc_1DB9']
jmp ['loc_1E87']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jl ['short', 'loc_1D1A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['offset', '??_C@_0EJ@COFDJIMH@error?5in?5preparsed?5UCD?3?5second?5l@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['loc_1EDE']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_1D29']
cmp ['[ebp+var_2C],', '10FFFFh']
jz ['short', 'loc_1D6E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
push ['offset', '??_C@_0EP@GLAMKFPE@error?5in?5preparsed?5UCD?3?5default?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['loc_1EDE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2Ch']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+0Ch],', 'edx']
jmp ['loc_1E94']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '228h']
call ['??4UniProps@icu_56@@QAEAAU01@ABU01@@Z']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '228h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+10h],', 'edx']
jmp ['loc_1E94']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+228h]']
cmp ['ecx,', '[ebp+var_20]']
jg ['short', 'loc_1DF1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+22Ch]']
jg ['short', 'loc_1DF1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '228h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '424h']
call ['??4UniProps@icu_56@@QAEAAU01@ABU01@@Z']
jmp ['loc_1E7A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+22Ch]']
jg ['short', 'loc_1E0D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+228h]']
jge ['short', 'loc_1E24']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '424h']
call ['??4UniProps@icu_56@@QAEAAU01@ABU01@@Z']
jmp ['short', 'loc_1E7A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+22Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+228h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
push ['offset', '??_C@_0GH@HOIGFLFF@error?5in?5preparsed?5UCD?3?5cp?5range@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['eax,', 'eax']
jmp ['short', 'loc_1EDE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '424h']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1E94']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1EDE']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?nextField@PreparsedUCD@icu_56@@QAEPBDXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1EDB']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1ED9']
xor ['eax,', 'eax']
jmp ['short', 'loc_1EDE']
jmp ['short', 'loc_1EA5']
mov ['eax,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN26']
dd ['offset', '$LN24']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN25']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GH@HOIGFLFF@error?5in?5preparsed?5UCD?3?5cp?5range@']
db ["'erlaps", 'with', 'block', 'range', "%04lX..%04lX',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EP@GLAMKFPE@error?5in?5preparsed?5UCD?3?5default?5@']
db ["'s',27h,'", 'on', 'line', "%ld',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EJ@COFDJIMH@error?5in?5preparsed?5UCD?3?5second?5l@']
db ["'ne", "%ld',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FM@BCFCIPLO@error?5in?5preparsed?5UCD?3?5missing?5@']
db ["'second", 'field)', 'on', 'line', "%ld',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1BCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1C8]']
mov ['ecx,', '6Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??0CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+Str],', 'eax']
mov ['esi,', 'esp']
push ['3Dh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['loc_21A3']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_2191']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_0FN@CJPGCBAK@error?5in?5preparsed?5UCD?3?5mix?5of?5b@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_1BD],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1BD]']
jmp ['loc_29BD']
mov ['[ebp+var_7C],', '0']
mov ['eax,', '[ebp+Str]']
add ['eax,', '1']
mov ['[ebp+Str],', 'eax']
jmp ['short', 'loc_21F8']
cmp ['[ebp+var_70],', '0']
jnz ['short', 'loc_21B2']
mov ['[ebp+var_7C],', '1']
jmp ['short', 'loc_21F8']
mov ['[ebp+var_7C],', '0FFFFFFFFh']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
sub ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+var_70]']
add ['eax,', '1']
mov ['[ebp+var_70],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jge ['loc_22E0']
mov ['[ebp+var_94],', '0']
jmp ['short', 'loc_2246']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '1']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '3']
jnz ['short', 'loc_227A']
mov ['[ebp+var_1B1],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1B1]']
jmp ['loc_29BD']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', 'ds:_ppucdProperties[eax*8]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_uprv_stricmp_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_22DB']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', 'ds:dword_8C[eax*8]']
mov ['[ebp+var_88],', 'ecx']
cmp ['[ebp+var_88],', '0']
jge ['short', 'loc_22D9']
mov ['eax,', 'ds:?__LINE__Var@?1??parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@3@PBDAAVUnicodeSet@3@AAW4UErrorCode@@@Z@4JA']
add ['eax,', '22h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1GI@EBLKJGFB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
push ['offset', '??_C@_1BA@LDCEKLCH@?$AAp?$AAr?$AAo?$AAp?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_22E0']
jmp ['loc_2237']
cmp ['[ebp+var_88],', '39h']
jge ['short', 'loc_2343']
cmp ['[ebp+var_7C],', '0']
jl ['short', 'loc_2300']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_88]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_7C]']
mov ['[eax+8],', 'cl']
jmp ['short', 'loc_233E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_0FD@ODNMKAC@error?5in?5preparsed?5UCD?3?5enum?9pro@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
jmp ['loc_2924']
cmp ['[ebp+var_7C],', '0']
jl ['short', 'loc_238C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_0FJ@COAKGGEJ@error?5in?5preparsed?5UCD?3?5binary?9p@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
jmp ['loc_2924']
cmp ['[ebp+var_88],', '1000h']
jge ['short', 'loc_23DE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_88]']
push ['edx']
push ['offset', '??_C@_0EC@FGPBAAMM@error?5in?5preparsed?5UCD?3?5prop?5val@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
jmp ['loc_2924']
cmp ['[ebp+var_88],', '1016h']
jge ['loc_24E9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_88]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+4]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0FFFFFFFFh']
jnz ['short', 'loc_2485']
cmp ['[ebp+var_88],', '1002h']
jnz ['short', 'loc_2485']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtoul']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', 'eax']
mov ['eax,', '[ebp+var_70]']
cmp ['eax,', '[ebp+EndPtr]']
jnb ['short', 'loc_2485']
mov ['eax,', '[ebp+EndPtr]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2485']
cmp ['[ebp+var_B8],', '0FEh']
ja ['short', 'loc_2485']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0FFFFFFFFh']
jnz ['short', 'loc_24CE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_0DP@BDNEGABI@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
jmp ['short', 'loc_24E4']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_A0]']
mov ['[ecx+eax*4-3FBCh],', 'edx']
jmp ['loc_2924']
mov ['eax,', '[ebp+var_70]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Ch']
jnz ['loc_2690']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_1C8],', 'eax']
cmp ['[ebp+var_1C8],', '7000h']
jg ['short', 'loc_254C']
cmp ['[ebp+var_1C8],', '7000h']
jz ['loc_262B']
mov ['ecx,', '[ebp+var_1C8]']
sub ['ecx,', '4001h']
mov ['[ebp+var_1C8],', 'ecx']
cmp ['[ebp+var_1C8],', '0Ch']
ja ['$LN25_0']
mov ['edx,', '[ebp+var_1C8]']
jmp ['ds:$LN77[edx*4]']
jmp ['$LN25_0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0A0h],', '0FFFFFFFFh']
jmp ['loc_268B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0A4h],', '0FFFFFFFFh']
jmp ['loc_268B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0A8h],', '0FFFFFFFFh']
jmp ['loc_268B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0ACh],', '0FFFFFFFFh']
jmp ['loc_268B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0B0h],', '0FFFFFFFFh']
jmp ['loc_268B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0B4h],', '0FFFFFFFFh']
jmp ['loc_268B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0C8h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_268B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_268B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '148h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_268B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '188h']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_268B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1C8h']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax+1C8h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_268B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '??_C@_0EH@BBKEPFJE@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '9']
jmp ['loc_2924']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_1C8],', 'eax']
cmp ['[ebp+var_1C8],', '4000h']
jg ['short', 'loc_26C9']
cmp ['[ebp+var_1C8],', '4000h']
jz ['loc_2788']
cmp ['[ebp+var_1C8],', '3000h']
jz ['short', 'loc_2716']
jmp ['$LN3']
cmp ['[ebp+var_1C8],', '7000h']
jg ['short', 'loc_2711']
cmp ['[ebp+var_1C8],', '7000h']
jz ['loc_28DD']
mov ['ecx,', '[ebp+var_1C8]']
sub ['ecx,', '4001h']
mov ['[ebp+var_1C8],', 'ecx']
cmp ['[ebp+var_1C8],', '0Fh']
ja ['$LN3']
mov ['edx,', '[ebp+var_1C8]']
jmp ['ds:$LN78[edx*4]']
jmp ['$LN3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_70]']
mov ['[eax+0BCh],', 'ecx']
mov ['eax,', '[ebp+var_70]']
mov ['cl,', '[eax]']
mov ['[ebp+var_C1],', 'cl']
movsx ['eax,', '[ebp+var_C1]']
cmp ['eax,', '30h']
jl ['short', 'loc_2765']
movsx ['eax,', '[ebp+var_C1]']
cmp ['eax,', '39h']
jg ['short', 'loc_2765']
mov ['eax,', '[ebp+var_70]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2765']
movsx ['eax,', '[ebp+var_C1]']
sub ['eax,', '30h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0B8h],', 'eax']
jmp ['short', 'loc_2772']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0B8h],', '0FFFFFFFFh']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_70]']
mov ['[eax+0C0h],', 'ecx']
jmp ['loc_2924']
mov ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '9Ch']
push ['ecx']
call ['_u_versionFromString_56']
add ['esp,', '8']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0A0h],', 'eax']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0A4h],', 'eax']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0A8h],', 'eax']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0ACh],', 'eax']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0B0h],', 'eax']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0B4h],', 'eax']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0C8h']
push ['ecx']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '108h']
push ['ecx']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z']
jmp ['loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '148h']
push ['ecx']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '188h']
push ['ecx']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_2924']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_70]']
mov ['[eax+0C4h],', 'ecx']
jmp ['short', 'loc_2924']
jmp ['short', 'loc_2924']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1C8h']
push ['ecx']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_2924']
mov ['[ebp+var_1A5],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_1A5]']
jmp ['loc_29BD']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_297C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['dword', 'ptr', 'ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_199],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_199]']
jmp ['short', 'loc_29BD']
jmp ['short', 'loc_29A4']
mov ['[ebp+var_18D],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_18D]']
jmp ['short', 'loc_29BD']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN76']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN75']
dd ['offset', '$LN72']
dd ['0FFFFFF54h,', '4']
dd ['offset', '$LN73']
dd ['offset', '$LN30']
dd ['offset', '$LN25_0']
dd ['offset', '$LN29']
dd ['offset', '$LN25_0']
dd ['offset', '$LN34']
dd ['offset', '$LN33']
dd ['offset', '$LN32']
dd ['offset', '$LN31']
dd ['offset', '$LN28']
dd ['offset', '$LN25_0']
dd ['offset', '$LN27_0']
dd ['offset', '$LN35']
dd ['offset', '$LN10']
dd ['offset', '$LN3']
dd ['offset', '$LN9']
dd ['offset', '$LN18']
dd ['offset', '$LN14']
dd ['offset', '$LN13']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
dd ['offset', '$LN8']
dd ['offset', '$LN3']
dd ['offset', '$LN7']
dd ['offset', '$LN15']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
dd ['offset', '$LN5']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0 proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-58h]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1CCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EH@BBKEPFJE@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
db ["'n", 'line', "%ld',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DP@BDNEGABI@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
db ["'ld',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EC@FGPBAAMM@error?5in?5preparsed?5UCD?3?5prop?5val@']
db ["'e", "%ld',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FJ@COAKGGEJ@error?5in?5preparsed?5UCD?3?5binary?9p@']
db ["'-binary", 'property', 'on', 'line', "%ld',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0FD@ODNMKAC@error?5in?5preparsed?5UCD?3?5enum?9pro@']
db ["'y", 'property', 'on', 'line', "%ld',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BA@LDCEKLCH@?$AAp?$AAr?$AAo?$AAp?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
unicode ['0,', '<prop>']
dw ['3Eh']
unicode ['0,', '<=0>,0']
assume ['cs:_rdata']
public ['??_C@_1GI@EBLKJGFB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\tools\\toolutil\\ppucd.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@3@PBDAAVUnicodeSet@3@AAW4UErrorCode@@@Z@4JA']
assume ['cs:_rdata']
public ['??_C@_0FN@CJPGCBAK@error?5in?5preparsed?5UCD?3?5mix?5of?5b@']
db ["'ty", 'syntax', "',27h,'%s',27h,'", 'on', 'line', "%ld',0Ah,0"]
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRangeForAlgNames@PreparsedUCD@icu_56@@QAECAAH0AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2DC7']
xor ['al,', 'al']
jmp ['loc_2E4C']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '9']
jz ['short', 'loc_2DDD']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['al,', 'al']
jmp ['short', 'loc_2E4C']
mov ['ecx,', '[ebp+var_8]']
call ['?firstField@PreparsedUCD@icu_56@@AAEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?nextField@PreparsedUCD@icu_56@@QAEPBDXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2E34']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['offset', '??_C@_0FJ@JJPNBDAA@error?5in?5preparsed?5UCD?3?5missing?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '9']
xor ['al,', 'al']
jmp ['short', 'loc_2E4C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FJ@JJPNBDAA@error?5in?5preparsed?5UCD?3?5missing?5@']
db ["'ond", 'field)', 'on', 'line', "%ld',0Ah,0"]
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['10h']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtoul']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+EndPtr]']
cmp ['eax,', '[ebp+Str]']
jbe ['short', 'loc_2F1D']
mov ['eax,', '[ebp+EndPtr]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2F1D']
cmp ['[ebp+var_20],', '110000h']
jb ['short', 'loc_2F60']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
push ['offset', '??_C@_0EE@KAFJKEGG@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '9']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2F63']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_0']
assume ['cs:_rdata']
public ['??_C@_0EE@KAFJKEGG@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
db ["'ine", "%ld',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_parseCodePointRange']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3071']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '??_C@_0EK@ELHJJIBP@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_3083']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN6_1']
dd ['offset', '$LN4']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN5_1']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EK@ELHJJIBP@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
db ["'e", 'on', 'line', "%ld',0Ah,0"]
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_parseString']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_31F0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_u_parseString']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3250']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '??_C@_0EI@LLLFILCN@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EI@LLLFILCN@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
db ["'on", 'line', "%ld',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '134h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_140]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_330F']
jmp ['loc_358C']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??0CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0']
mov ['esi,', 'esp']
push ['20h']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_70],', 'eax']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_33DA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
sub ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['edi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_?clear@CharString@icu_56@@QAEAAV12@XZ']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_?data@CharString@icu_56@@QAEPADXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_64],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_33D8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_358C']
jmp ['short', 'loc_33E0']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_64],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_64]']
push ['eax']
push ['100Ah']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_7C],', 'eax']
cmp ['[ebp+var_7C],', '0FFFFFFFFh']
jnz ['short', 'loc_346F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_64]']
push ['edx']
push ['offset', '??_C@_0EF@EFKGHKPD@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_358C']
jmp ['loc_3504']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_34EE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_64]']
push ['edx']
push ['offset', '??_C@_0EC@KDEAPDNP@error?5in?5preparsed?5UCD?3?5scx?5has?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_358C']
jmp ['short', 'loc_3504']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['dword', 'ptr', 'ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_70],', '0']
jz ['short', 'loc_3515']
mov ['eax,', '[ebp+var_70]']
add ['eax,', '1']
mov ['[ebp+Str],', 'eax']
jmp ['short', 'loc_3517']
jmp ['short', 'loc_351C']
jmp ['loc_333E']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3573']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['offset', '??_C@_0DA@MEICKNBO@error?5in?5preparsed?5UCD?3?5empty?5sc@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '9']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_58]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '140h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN19']
dd ['offset', '$LN17']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0	proc near
mov ['esi,', 'esp']
lea ['ecx,', '[ebp-58h]']
call ['dword', 'ptr', 'ds:__imp_??1CharString@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
jmp ['__RTC_CheckEsp']
endp
__ehhandler$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-144h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DA@MEICKNBO@error?5in?5preparsed?5UCD?3?5empty?5sc@']
assume ['cs:_rdata']
public ['??_C@_0EC@KDEAPDNP@error?5in?5preparsed?5UCD?3?5scx?5has?5@']
db ["'e", "%ld',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EF@EFKGHKPD@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@']
db ["'line", "%ld',0Ah,0"]
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['??3@YAXPAX@Z:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_V@YAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__imp_??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['_memcpy:near']
extrn ['_u_getPropertyEnum_56:near']
extrn ['_u_getPropertyValueEnum_56:near']
extrn ['_memset:near']
extrn ['__imp_??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['__imp_??0UnicodeString@icu_56@@QAE@XZ:near']
extrn ['__imp_??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['__imp__fprintf:near']
extrn ['__imp__perror:near']
extrn ['__imp__fopen:near']
extrn ['__imp____iob_func:near']
extrn ['??2@YAPAXI@Z:near']
extrn ['__imp__fclose:near']
extrn ['_u_versionFromString_56:near']
extrn ['_strcmp:near']
extrn ['__imp__ferror:near']
extrn ['__imp__fgets:near']
extrn ['__imp__strchr:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near']
extrn ['__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near']
extrn ['__imp__strtoul:near']
extrn ['__imp___wassert:near']
extrn ['_uprv_stricmp_56:near']
extrn ['__imp_?data@CharString@icu_56@@QAEPADXZ:near']
extrn ['__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:near']
extrn ['__imp_??1CharString@icu_56@@QAE@XZ:near']
extrn ['__imp_??0CharString@icu_56@@QAE@XZ:near']
extrn ['_u_parseCodePointRange:near']
extrn ['__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:near']
extrn ['_u_parseString:near']
extrn ['__imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:near']
extrn ['__imp_?clear@CharString@icu_56@@QAEAAV12@XZ:near']
end

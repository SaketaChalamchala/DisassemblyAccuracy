endp
_uprv_isInvariantUnicodeString proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['dword', 'ptr', 'ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_uprv_isInvariantUString_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0IcuToolErrorCode@icu_56@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0ErrorCode@icu_56@@QAE@XZ']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IcuToolErrorCode@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4IcuToolErrorCode@icu_56@@6B@']
public ['??_7IcuToolErrorCode@icu_56@@6B@']
dd ['offset', '?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ']
assume ['cs:_rdata$r']
public ['??_R4IcuToolErrorCode@icu_56@@6B@']
dd ['offset', '??_R0?AVIcuToolErrorCode@icu_56@@@8']
dd ['offset', '??_R3IcuToolErrorCode@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVIcuToolErrorCode@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3IcuToolErrorCode@icu_56@@8']
dd ['3']
dd ['offset', '??_R2IcuToolErrorCode@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2IcuToolErrorCode@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@ErrorCode@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'loc_3F+1']
dd ['offset', '??_R3IcuToolErrorCode@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ErrorCode@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'loc_3F+1']
dd ['offset', '??_R3ErrorCode@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVErrorCode@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ErrorCode@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ErrorCode@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ErrorCode@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', 'loc_3F+1']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', 'loc_3F+1']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7IcuToolErrorCode@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['dword', 'ptr', 'ds:__imp_??4ErrorCode@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1IcuToolErrorCode@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_331']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_3B7']
push ['offset', '??1IcuToolErrorCode@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3AF']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_3E0']
mov ['ecx,', '[ebp+var_8]']
call ['??1IcuToolErrorCode@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3DD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp_??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAutoPrefix@Package@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+48Eh],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setAutoPrefixWithType@Package@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+48Eh],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+48Fh],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Package@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+Dst],', 'ecx']
push ['31200h']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_158]']
mov ['ecx,', '53h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+Code],', '0']
lea ['eax,', '[ebp+Code]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_getDataInfo']
add ['esp,', '14h']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_546']
jmp ['loc_70F']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '8']
push ['eax']
call ['?getDataFormat@icu_56@@YAHQBE@Z']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jl ['loc_70F']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_158],', 'eax']
cmp ['[ebp+var_158],', '0']
jz ['short', 'loc_582']
cmp ['[ebp+var_158],', '1']
jz ['short', 'loc_5E7']
jmp ['loc_6E9']
push ['offset', '_ures_swap_56']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['??0NativeItem@icu_56@@QAE@PBUItem@1@P6AHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z@Z']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?getLength@NativeItem@icu_56@@QBEHXZ']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?getBytes@NativeItem@icu_56@@QBEPBEXZ']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?getDataInfo@NativeItem@icu_56@@QBEPBUUDataInfo@@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_6C]']
call ['??1NativeItem@icu_56@@QAE@XZ']
jmp ['loc_6E9']
lea ['eax,', '[ebp+Code]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
push ['ecx']
call ['_udata_openSwapper_56']
add ['esp,', '14h']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_66D']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
push ['offset', '??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_78]']
mov ['dword', 'ptr', '[eax+28h],', 'offset', '_printError']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
mov ['ecx,', '[ebp+var_78]']
mov ['[ecx+2Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_84],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_90],', 'ecx']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_78]']
push ['edx']
call ['?ucnv_enumDependencies@icu_56@@YAXPBUUDataSwapper@@PBDPBUUDataInfo@@PBEHP6AXPAX11@Z4PAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['eax,', '[ebp+var_78]']
push ['eax']
call ['_udata_closeSwapper_56']
add ['esp,', '4']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_70F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '158h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN18']
dd ['offset', '$LN13']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN14']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN15']
dd ['0FFFFFF94h,', '14h']
dd ['offset', '$LN16']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z$0 proc	near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1NativeItem@icu_56@@QAE@XZ']
endp
__ehhandler$?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-15Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z$0']
dd ['offset', '__unwindtable$?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_printError	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+ArgList]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__vfprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NativeItem@icu_56@@QAE@PBUItem@1@P6AHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setItem@NativeItem@icu_56@@QAEXPBUItem@2@P6AHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1NativeItem@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDataInfo@NativeItem@icu_56@@QBEPBUUDataInfo@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBytes@NativeItem@icu_56@@QBEPBEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLength@NativeItem@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setItem@NativeItem@icu_56@@QAEXPBUItem@2@P6AHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['[ebp+Code],', '0']
lea ['eax,', '[ebp+Code]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_getDataInfo']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A68']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jnz ['short', 'loc_AAB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jnz ['short', 'loc_AAB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
jmp ['loc_C3F']
lea ['eax,', '[ebp+Code]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
movzx ['eax,', 'byte', 'ptr', '[edx+5]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
push ['eax']
call ['_udata_openSwapper_56']
add ['esp,', '14h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B39']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
push ['offset', '??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_38]']
mov ['dword', 'ptr', '[eax+28h],', 'offset', '_printError']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+2Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_104],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_104]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_BCA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx]']
push ['edx']
push ['offset', '??_C@_0DF@LELJOKEO@icupkg?3?5unable?5to?5allocate?5memor@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+Code]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_getDataInfo']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_udata_closeSwapper_56']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN8']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN9']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN10']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DF@LELJOKEO@icupkg?3?5unable?5to?5allocate?5memor@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '21Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_228]']
mov ['ecx,', '87h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_res_read_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_DB0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
push ['offset', '??_C@_0EK@ODBGBBOF@icupkg?3?5?4res?5format?5version?5?$CF02x@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['10h']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jg ['short', 'loc_DD4']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jnz ['short', 'loc_DF4']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
cmp ['ecx,', '1']
jl ['short', 'loc_DF4']
movsx ['eax,', '[ebp+var_18]']
test ['eax,', 'eax']
jnz ['short', 'loc_DF4']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?checkParent@icu_56@@YAXPBDP6AXPAX00@Z1PAW4UErrorCode@@@Z']
add ['esp,', '10h']
lea ['ecx,', '[ebp+var_58]']
call ['??0NativeItem@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
movsx ['eax,', '[ebp+var_16]']
test ['eax,', 'eax']
jz ['loc_103E']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
push ['0C8h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
push ['offset', '??_C@_04MMBENCGO@?4res?$AA@']
push ['4']
push ['offset', '??_C@_04CJIJKHMO@pool?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['?makeTargetName@icu_56@@YAXPBD0H0PADHPAW4UErrorCode@@@Z']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E60']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1NativeItem@icu_56@@QAE@XZ']
jmp ['loc_1077']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
call ['[ebp+arg_10]']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
call ['?findItem@Package@icu_56@@QBEHPBDH@Z']
mov ['[ebp+var_134],', 'eax']
cmp ['[ebp+var_134],', '0']
jge ['short', 'loc_EB2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1NativeItem@icu_56@@QAE@XZ']
jmp ['loc_1077']
push ['offset', '_ures_swap_56']
mov ['eax,', '[ebp+var_134]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
call ['?getItem@Package@icu_56@@QBEPBUItem@2@H@Z']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
call ['?setItem@NativeItem@icu_56@@QAEXPBUItem@2@P6AHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z@Z']
lea ['ecx,', '[ebp+var_58]']
call ['?getDataInfo@NativeItem@icu_56@@QBEPBUUDataInfo@@XZ']
mov ['[ebp+var_140],', 'eax']
mov ['eax,', '[ebp+var_140]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jg ['short', 'loc_F31']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Dst]']
push ['eax']
push ['offset', '??_C@_0CB@IPBJJPHL@icupkg?3?5?$CFs?5is?5not?5a?5pool?5bundle?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1NativeItem@icu_56@@QAE@XZ']
jmp ['loc_1077']
lea ['ecx,', '[ebp+var_58]']
call ['?getBytes@NativeItem@icu_56@@QBEPBEXZ']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_14C]']
add ['eax,', '4']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_158]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFh']
mov ['[ebp+var_164],', 'ecx']
cmp ['[ebp+var_164],', '7']
jle ['short', 'loc_F79']
mov ['eax,', '[ebp+var_158]']
mov ['ecx,', '[eax+14h]']
and ['ecx,', '2']
jnz ['short', 'loc_FBE']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Dst]']
push ['eax']
push ['offset', '??_C@_0CB@IPBJJPHL@icupkg?3?5?$CFs?5is?5not?5a?5pool?5bundle?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1NativeItem@icu_56@@QAE@XZ']
jmp ['loc_1077']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_158]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+1Ch]']
jnz ['short', 'loc_FF8']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', '[ebp+var_158]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_158]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14C]']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_103E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
push ['offset', '??_C@_0CL@MDDOCAEP@icupkg?3?5?$CFs?5has?5mismatched?5checks@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1NativeItem@icu_56@@QAE@XZ']
jmp ['short', 'loc_1077']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?ures_enumDependencies@icu_56@@YAXPBDPBUResourceData@@I00HP6AXPAX00@Z2PAVPackage@1@PAW4UErrorCode@@@Z']
add ['esp,', '28h']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1NativeItem@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '228h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20']
dd ['offset', '$LN16_0']
dd ['0FFFFFFA8h,', '14h']
dd ['offset', '$LN17']
dd ['0FFFFFED8h,', '0C8h']
dd ['offset', '$LN18_0']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1NativeItem@icu_56@@QAE@XZ']
endp
__ehhandler$?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-22Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_0CL@MDDOCAEP@icupkg?3?5?$CFs?5has?5mismatched?5checks@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CB@IPBJJPHL@icupkg?3?5?$CFs?5is?5not?5a?5pool?5bundle?6@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04CJIJKHMO@pool?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04MMBENCGO@?4res?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EK@ODBGBBOF@icupkg?3?5?4res?5format?5version?5?$CF02x@']
db ["'lformed',0Ah,0"]
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?ures_enumDependencies@icu_56@@YAXPBDPBUUDataInfo@@PBEHP6AXPAX00@Z3PAVPackage@1@PAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0NativeItem@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeTargetName@icu_56@@YAXPBD0H0PADHPAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['2Fh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_12AE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_12B4']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+Str]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_12D2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_14]']
jl ['short', 'loc_1332']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_0EA@EMFDKEOO@icupkg?1makeTargetName?$CI?$CFs?$CJ?5target@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_137A']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy_0']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+Size]']
push ['edx']
call ['_memcpy_0']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+Size]']
add ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_memcpy_0']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EA@EMFDKEOO@icupkg?1makeTargetName?$CI?$CFs?$CJ?5target@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?checkParent@icu_56@@YAXPBDP6AXPAX00@Z1PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['2Fh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_141A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1420']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
push ['2Eh']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_145C']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_8]']
jbe ['short', 'loc_1480']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Fh']
jz ['short', 'loc_1480']
jmp ['short', 'loc_1462']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_8]']
jz ['short', 'loc_1499']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+Buf2],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_14CC']
mov ['[ebp+Buf2],', 'offset', '??_C@_04NBFCGMPH@root?$AA@']
mov ['[ebp+Size],', '4']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+Size]']
jnz ['short', 'loc_14CC']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_14CC']
jmp ['short', 'loc_14F0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?checkIDSuffix@icu_56@@YAXPBD0H0P6AXPAX00@Z1PAW4UErrorCode@@@Z']
add ['esp,', '1Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_04NBFCGMPH@root?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?checkIDSuffix@icu_56@@YAXPBD0H0P6AXPAX00@Z1PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '194h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_194]']
mov ['ecx,', '65h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0C8h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['?makeTargetName@icu_56@@YAXPBD0H0PADHPAW4UErrorCode@@@Z']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_158F']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
call ['[ebp+arg_10]']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '194h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ures_enumDependencies@icu_56@@YAXPBDPBUResourceData@@I00HP6AXPAX00@Z2PAVPackage@1@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '154h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '55h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_res_getPublicType_56']
add ['esp,', '4']
mov ['[ebp+var_154],', 'eax']
cmp ['[ebp+var_154],', '8']
ja ['$LN22']
mov ['ecx,', '[ebp+var_154]']
jmp ['ds:$LN29[ecx*4]']
mov ['[ebp+var_5],', '1']
cmp ['[ebp+arg_14],', '1']
jnz ['short', 'loc_167E']
cmp ['[ebp+Str1],', '0']
jz ['short', 'loc_167E']
push ['offset', '??_C@_07OJBLMIMJ@?$CF?$CFALIAS?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_167C']
jmp ['$LN22']
jmp ['short', 'loc_16AF']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_16AA']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_16AA']
push ['offset', '??_C@_0N@KBOFKNOI@?$CF?$CFDEPENDENCY?$AA@']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_16A4']
jmp ['$LN22']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_16AF']
jmp ['$LN22']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_res_getString_56']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
movzx ['eax,', '[ebp+var_5]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?checkAlias@icu_56@@YAXPBDIPB_WHCP6AXPAX00@Z2PAW4UErrorCode@@@Z']
add ['esp,', '20h']
jmp ['$LN22']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_res_getAlias_56']
add ['esp,', '0Ch']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?checkAlias@icu_56@@YAXPBDIPB_WHCP6AXPAX00@Z2PAW4UErrorCode@@@Z']
add ['esp,', '20h']
jmp ['$LN22']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_res_countArrayItems_56']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_175B']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['loc_180F']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_res_getTableItemByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?ures_enumDependencies@icu_56@@YAXPBDPBUResourceData@@I00HP6AXPAX00@Z2PAVPackage@1@PAW4UErrorCode@@@Z']
add ['esp,', '28h']
mov ['eax,', '[ebp+arg_24]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_180A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_0EO@OGIOGHDE@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '1Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_180F']
jmp ['loc_1752']
jmp ['$LN22']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_res_countArrayItems_56']
add ['esp,', '8']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_80],', '0']
jmp ['short', 'loc_1839']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_74]']
jge ['$LN22']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_res_getArrayItem_56']
add ['esp,', '0Ch']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+arg_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['?ures_enumDependencies@icu_56@@YAXPBDPBUResourceData@@I00HP6AXPAX00@Z2PAVPackage@1@PAW4UErrorCode@@@Z']
add ['esp,', '28h']
mov ['eax,', '[ebp+arg_24]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_18E7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['offset', '??_C@_0EK@FDDEPEO@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', '$LN22']
jmp ['loc_1830']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN27']
dd ['offset', '$LN24']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN25']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN26']
align ['4']
dd ['offset', '$LN22']
dd ['offset', '$LN11_0']
dd ['offset', '$LN12_0']
dd ['offset', '$LN22']
dd ['offset', '$LN22']
dd ['offset', '$LN22']
dd ['offset', '$LN22']
dd ['offset', '$LN6_0']
assume ['cs:_rdata']
public ['??_C@_0EK@FDDEPEO@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
db ["'", "failed',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EO@OGIOGHDE@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
db ["'08x)", "failed',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0N@KBOFKNOI@?$CF?$CFDEPENDENCY?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07OJBLMIMJ@?$CF?$CFALIAS?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?checkAlias@icu_56@@YAXPBDIPB_WHCP6AXPAX00@Z2PAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_uprv_isInvariantUString_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1AAF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_0FK@OECMEJOI@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0Ah']
jmp ['loc_1BEC']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1AC1']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_1ADA']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '2Fh']
jz ['short', 'loc_1ADA']
jmp ['short', 'loc_1AB8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_res_getPublicType_56']
add ['esp,', '4']
cmp ['eax,', '3']
jnz ['short', 'loc_1AFE']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_1AF6']
jmp ['loc_1BEC']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_C],', 'eax']
jmp ['short', 'loc_1B46']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_1B46']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['offset', '??_C@_0EC@BDHFJGHA@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['loc_1BEC']
cmp ['[ebp+arg_C],', '20h']
jl ['short', 'loc_1B8D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
push ['offset', '??_C@_0EP@LKHEFMNI@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_1BEC']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_u_UCharsToChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+eax+var_34],', '0']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_1BBD']
mov ['[ebp+var_FC],', 'offset', '??_C@_04MMBENCGO@?4res?$AA@']
jmp ['short', 'loc_1BC7']
mov ['[ebp+var_FC],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
push ['0FFFFFFFFh']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?checkIDSuffix@icu_56@@YAXPBD0H0P6AXPAX00@Z1PAW4UErrorCode@@@Z']
add ['esp,', '1Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15_0']
db ['3', 'dup(0FFh)']
dd ['offset', 'loc_1E+2']
dd ['offset', '$LN14_0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EP@LKHEFMNI@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
db ["'%ld", 'too', "long',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EC@BDHFJGHA@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
db ['27h,0Ah,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FK@OECMEJOI@icupkg?1ures_enumDependencies?$CI?$CFs?5@']
db ["'on-invariant", "characters',0Ah,0"]
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_enumDependencies@icu_56@@YAXPBUUDataSwapper@@PBDPBUUDataInfo@@PBEHP6AXPAX11@Z4PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '164h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_164]']
mov ['ecx,', '59h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '6']
jnz ['short', 'loc_1D70']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
cmp ['ecx,', '2']
jge ['short', 'loc_1DBB']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
push ['offset', '??_C@_0EN@FCNDGFLH@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['10h']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_10],', '64h']
jl ['short', 'loc_1DEC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_1E0F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['offset', '??_C@_0GC@IMEKLAKJ@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
jmp ['loc_2011']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_10],', 'eax']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax+45h]']
cmp ['ecx,', '2']
jnz ['loc_2011']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+arg_10],', '28h']
jge ['short', 'loc_1E60']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['offset', '??_C@_0GI@HGJLFJJG@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
jmp ['loc_2011']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '4']
jnz ['short', 'loc_1E80']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '1']
jl ['short', 'loc_1E80']
mov ['[ebp+var_3C],', '8']
jmp ['short', 'loc_1EF9']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5']
jnz ['short', 'loc_1ECB']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '3']
jl ['short', 'loc_1ECB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_54]']
and ['ecx,', '0FF80h']
jnz ['short', 'loc_1ECB']
mov ['eax,', '[ebp+var_54]']
and ['eax,', '3Fh']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_1EF9']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
push ['offset', '??_C@_0EH@LPAAAIC@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['loc_2011']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
shr ['eax,', '8']
mov ['[ebp+var_60],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_48]']
mov ['[ebp+var_2D],', 'al']
movzx ['eax,', '[ebp+var_2D]']
cmp ['eax,', '0Eh']
jnz ['loc_2011']
mov ['eax,', '[ebp+var_60]']
add ['eax,', '80h']
cmp ['[ebp+arg_10],', 'eax']
jge ['short', 'loc_1F63']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['offset', '??_C@_0HM@PPBGPHJK@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
jmp ['loc_2011']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+Str],', 'edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '20h']
jl ['short', 'loc_1FB7']
mov ['eax,', '[ebp+var_94]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_0EB@GMAMONDF@icupkg?1ucnv_enumDependencies?$CI?$CFs?$CJ@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_printError_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10h']
jmp ['short', 'loc_2011']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_88]']
push ['ecx']
mov ['edx,', '[ebp+var_94]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
push ['offset', '??_C@_04FFJDPJDA@?4cnv?$AA@']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?checkIDSuffix@icu_56@@YAXPBD0H0P6AXPAX00@Z1PAW4UErrorCode@@@Z']
add ['esp,', '1Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '164h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN17_0']
dd ['offset', '$LN16_2']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_04FFJDPJDA@?4cnv?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EB@GMAMONDF@icupkg?1ucnv_enumDependencies?$CI?$CFs?$CJ@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0HM@PPBGPHJK@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
db ["'for", 'an', 'ICU', 'MBCS', '.cnv', 'conversion', 'table', 'with', 'extension', "data',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0EH@LPAAAIC@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
db ["'d.%d',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0GI@HGJLFJJG@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
db ["'for", 'an', 'ICU', 'MBCS', '.cnv', 'conversion', "table',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0GC@IMEKLAKJ@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
db ["'or", 'an', 'ICU', '.cnv', 'conversion', "table',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EN@FCNDGFLH@icupkg?1ucnv_enumDependencies?$CI?$CJ?3?5@']
db ["'", "supported',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDataFormat@icu_56@@YAHQBE@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_22BC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '3']
jge ['short', 'loc_22E6']
push ['4']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '_dataFormats[ecx*4]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_22E4']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_22E9']
jmp ['short', 'loc_22B3']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_uprv_isInvariantUString_56:near']
extrn ['__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near']
extrn ['__imp_?length@UnicodeString@icu_56@@QBEHXZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp_??0ErrorCode@icu_56@@QAE@XZ:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ:near']
extrn ['__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z:near']
extrn ['__imp_??4ErrorCode@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['__imp_??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1IcuToolErrorCode@icu_56@@UAE@XZ:near']
extrn ['__imp_??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['_memcpy:near']
extrn ['_udata_closeSwapper_56:near']
extrn ['__imp__exit:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_errorName_56:near']
extrn ['_udata_openSwapper_56:near']
extrn ['_ures_swap_56:near']
extrn ['_getDataInfo:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp__vfprintf:near']
extrn ['??_V@YAXPAX@Z:near']
extrn ['??_U@YAPAXI@Z:near']
extrn ['?getItem@Package@icu_56@@QBEPBUItem@2@H@Z:near']
extrn ['?findItem@Package@icu_56@@QBEHPBDH@Z:near']
extrn ['_res_read_56:near']
extrn ['_memcpy_0:near']
extrn ['_strlen:near']
extrn ['__imp__strrchr:near']
extrn ['_memcmp:near']
extrn ['_res_getArrayItem_56:near']
extrn ['_res_getTableItemByIndex_56:near']
extrn ['_res_countArrayItems_56:near']
extrn ['_res_getAlias_56:near']
extrn ['_res_getString_56:near']
extrn ['_strcmp:near']
extrn ['_res_getPublicType_56:near']
extrn ['_u_UCharsToChars_56:near']
extrn ['_udata_printError_56:near']
end

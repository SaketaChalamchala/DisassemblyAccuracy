endp
_isFileModTimeLater proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2E']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_32']
xor ['al,', 'al']
jmp ['short', 'loc_7C']
movsx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '1']
jnz ['short', 'loc_3D']
jmp ['short', 'loc_79']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_T_FileStream_file_exists']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_75']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?whichFileModTimeIsLater@@YAHPBD0@Z']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_6F']
cmp ['[ebp+var_14],', '2']
jnz ['short', 'loc_73']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_79']
mov ['[ebp+var_5],', '0']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?whichFileModTimeIsLater@@YAHPBD0@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '170h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_170]']
mov ['ecx,', '5Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_stat']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_171']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_stat']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_171']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+Time1],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+Time2],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
mov ['edx,', '[ebp+Time2]']
push ['edx']
mov ['eax,', '[ebp+Time1]']
push ['eax']
call ['_difftime']
add ['esp,', '10h']
fstp ['[ebp+var_AC]']
fldz
fcomp ['[ebp+var_AC]']
fnstsw ['ax']
test ['ah,', '41h']
jnz ['short', 'loc_159']
mov ['[ebp+var_C],', '2']
jmp ['short', 'loc_16F']
fldz
fcomp ['[ebp+var_AC]']
fnstsw ['ax']
test ['ah,', '5']
jp ['short', 'loc_16F']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_1AA']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '??_C@_0CJ@FDHENEDB@Unable?5to?5get?5stats?5from?5file?3?5?$CF@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '170h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN10']
dd ['offset', '$LN8']
dd ['0FFFFFF84h,', '30h']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CJ@FDHENEDB@Unable?5to?5get?5stats?5from?5file?3?5?$CF@']
align ['4']
assume ['cs:_rdata']
public ['__real@0000000000000000']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_stat		proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp___stat64i32']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_difftime	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', 'dword', 'ptr', '[ebp+arg_8+4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Time2]']
push ['edx']
mov ['eax,', '[ebp+Time1]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp___difftime64']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_swapFileSepChar proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_31F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_361']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+arg_4]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_343']
mov ['al,', '[ebp+arg_8]']
mov ['[ebp+var_D9],', 'al']
jmp ['short', 'loc_351']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_D9],', 'dl']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_D9]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_316']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_T_FileStream_file_exists:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['___security_cookie:near']
extrn ['__fltused:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp___stat64i32:near']
extrn ['__imp___difftime64:near']
extrn ['_strlen:near']
end

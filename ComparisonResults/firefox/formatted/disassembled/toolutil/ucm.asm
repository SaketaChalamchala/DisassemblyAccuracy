endp
_ucm_printMapping proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C8]']
mov ['ecx,', '32h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_38']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
mov ['[ebp+var_C4],', 'edx']
jmp ['short', 'loc_4A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_61']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C8],', 'edx']
jmp ['short', 'loc_75']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_C8],', 'ecx']
mov ['edx,', '[ebp+File]']
push ['edx']
mov ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+var_C8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_printMapping']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_printMapping	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_E0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['[ebp+var_8],', 'ecx']
jge ['short', 'loc_113']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_08FDPBAGCL@?$DMU?$CF04lX?$DO?$AA@']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_D7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+File]']
push ['eax']
push ['20h']
call ['dword', 'ptr', 'ds:__imp__fputc']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_13D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['[ebp+var_8],', 'ecx']
jge ['short', 'loc_170']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_06MNBAJCJJ@?2x?$CF02X?$AA@']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_134']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
test ['ecx,', 'ecx']
jl ['short', 'loc_1A0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_05EKIKELJJ@?5?$HM?$CFu?6?$AA@']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1BB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+File]']
push ['eax']
push ['offset', '??_C@_01EEMJAFIK@?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__fputs']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_01EEMJAFIK@?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05EKIKELJJ@?5?$HM?$CFu?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06MNBAJCJJ@?2x?$CF02X?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08FDPBAGCL@?$DMU?$CF04lX?$DO?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_printTable	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_262']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_242']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_260']
mov ['eax,', '[ebp+File]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
jmp ['short', 'loc_230']
jmp ['short', 'loc_2A7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_27D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_2A7']
mov ['eax,', '[ebp+File]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+ecx*4]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
jmp ['short', 'loc_274']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_sortTable	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2EA']
jmp ['loc_428']
mov ['[ebp+Code],', '0']
lea ['eax,', '[ebp+Code]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '_compareMappingsUnicodeFirst']
push ['0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jnz ['short', 'loc_37C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jnz ['short', 'loc_37C']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CK@PMMPLNPI@ucm?5error?3?5unable?5to?5allocate?5re@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_38E']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_3AA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_14]']
mov ['[ecx+edx*4],', 'eax']
jmp ['short', 'loc_385']
lea ['eax,', '[ebp+Code]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '_compareMappingsBytesFirst']
push ['4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
cmp ['[ebp+Code],', '0']
jle ['short', 'loc_421']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0DE@KPDCOECJ@ucm?5error?3?5sortTable?$CI?$CJ?1uprv_sort@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2Ah],', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN11']
dd ['offset', '$LN10']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DE@KPDCOECJ@ucm?5error?3?5sortTable?$CI?$CJ?1uprv_sort@']
assume ['cs:_rdata']
public ['??_C@_0CK@PMMPLNPI@ucm?5error?3?5unable?5to?5allocate?5re@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_compareMappingsUnicodeFirst proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_compareMappings']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_compareMappings proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_582']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_compareUnicode']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_580']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_compareBytes']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_5C0']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_compareBytes']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5C0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_compareUnicode']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_5CB']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_5DB']
mov ['eax,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[eax+0Ah]']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
sub ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_compareUnicode	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_635']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_635']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['eax,', '[eax]']
sub ['eax,', '[ecx]']
jmp ['loc_70D']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_64C']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_660']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_680']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_694']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_C]']
movsx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['ecx,', 'eax']
jg ['short', 'loc_6BB']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_6C5']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_6D7']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_6FD']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_2C]']
mov ['esi,', '[ebp+var_14]']
mov ['eax,', '[ecx+eax*4]']
sub ['eax,', '[esi+edx*4]']
mov ['[ebp+var_20],', 'eax']
jz ['short', 'loc_6FB']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_70D']
jmp ['short', 'loc_6CE']
mov ['eax,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[eax+8]']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
sub ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_compareBytes	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_764']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['edx,', '[ebp+arg_C]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
cmp ['ecx,', 'eax']
jg ['short', 'loc_758']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_762']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_78D']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['edx,', '[ebp+arg_C]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
jz ['short', 'loc_783']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_841']
jmp ['short', 'loc_78D']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_7A7']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '4']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_7B9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_100],', 'ecx']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_7DC']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '4']
mov ['[ebp+var_100],', 'edx']
jmp ['short', 'loc_7EE']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_C]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_100],', 'ecx']
mov ['eax,', '[ebp+var_100]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_809']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_831']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
jz ['short', 'loc_82F']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_841']
jmp ['short', 'loc_800']
mov ['eax,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[eax+9]']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+9]']
sub ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_compareMappingsBytesFirst proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx]']
push ['eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx]']
push ['eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_compareMappings']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_moveMappings proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0ECh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+Src]']
mov ['ecx,', '3Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+Dst],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+Dst]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+Dst]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_9FD']
mov ['eax,', '[ebp+Dst]']
mov ['cl,', '[eax+0Bh]']
mov ['[ebp+var_1D],', 'cl']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['loc_9EF']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0Bh],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_99D']
movsx ['eax,', '[ebp+var_1D]']
and ['eax,', '1']
jz ['short', 'loc_99D']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_942']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '4']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_954']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+Dst]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_E8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_96B']
mov ['edx,', '[ebp+Dst]']
mov ['[ebp+Src],', 'edx']
jmp ['short', 'loc_97F']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+Src],', 'ecx']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ucm_addMapping']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '0Ch']
cmp ['[ebp+Dst],', 'eax']
jnb ['short', 'loc_9CE']
push ['1']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '0Ch']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['0Ch']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2Ah],', '0']
jmp ['short', 'loc_9F8']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '0Ch']
mov ['[ebp+Dst],', 'eax']
jmp ['loc_8F1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0ECh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_checkValidity proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_29],', '1']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_ADE']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_A73']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_F4],', 'edx']
jmp ['short', 'loc_A85']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_F4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ucm_countChars']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '1']
jge ['short', 'loc_AD0']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
mov ['[ebp+var_29],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_A4D']
mov ['al,', '[ebp+var_29]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_checkBaseExt proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+29h]']
and ['ecx,', '2']
jz ['short', 'loc_B53']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EF@IIHMOMMN@ucm?5error?3?5the?5base?5table?5contai@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_C5B']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+29h]']
and ['ecx,', '2']
jz ['short', 'loc_B90']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EG@HOBDINMN@ucm?5error?3?5extension?5table?5conta@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_C5B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
movzx ['edx,', 'cl']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_checkBaseExtUnicode']
add ['esp,', '14h']
movzx ['ebx,', 'al']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
cmp ['[ebp+arg_C],', '0']
setnz ['cl']
movzx ['edx,', 'cl']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_checkBaseExtBytes']
add ['esp,', '14h']
movzx ['eax,', 'al']
or ['ebx,', 'eax']
mov ['[ebp+var_5],', 'bl']
movzx ['eax,', '[ebp+var_5]']
and ['eax,', '2']
jz ['short', 'loc_C08']
xor ['al,', 'al']
jmp ['short', 'loc_C5B']
movzx ['eax,', '[ebp+var_5]']
and ['eax,', '1']
jz ['short', 'loc_C59']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ucm_moveMappings']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucm_moveMappings']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_C59']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EG@HOBDINMN@ucm?5error?3?5extension?5table?5conta@']
db ["'ags',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EF@IIHMOMMN@ucm?5error?3?5the?5base?5table?5contai@']
db ["'gs',0Ah,0"]
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_checkBaseExtUnicode proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '110h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+Buf1]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_41],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_D60']
mov ['al,', '[ebp+var_41]']
jmp ['loc_10F8']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
test ['ecx,', 'ecx']
jl ['short', 'loc_D77']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '2']
jle ['short', 'loc_D83']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '4']
jnz ['short', 'loc_D85']
jmp ['short', 'loc_D90']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_D50']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_DA0']
mov ['al,', '[ebp+var_41]']
jmp ['loc_10F8']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
test ['ecx,', 'ecx']
jl ['short', 'loc_DB7']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '2']
jle ['short', 'loc_DC3']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '4']
jnz ['short', 'loc_DC5']
jmp ['short', 'loc_DD0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D90']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_compareUnicode']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jge ['loc_F72']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_E31']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '2']
jnz ['short', 'loc_E12']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jle ['short', 'loc_E31']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_41]']
or ['eax,', '1']
mov ['[ebp+var_41],', 'al']
jmp ['loc_F64']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['ecx,', 'eax']
jge ['loc_F64']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_E5E']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+Buf2],', 'edx']
jmp ['short', 'loc_E72']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+Buf2],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['eax,', '1']
jnz ['short', 'loc_E89']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+Buf1],', 'ecx']
jmp ['short', 'loc_E9D']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
lea ['eax,', '[edx+eax*4]']
mov ['[ebp+Buf1],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['loc_F64']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_EEA']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_41]']
or ['eax,', '1']
mov ['[ebp+var_41],', 'al']
jmp ['short', 'loc_F64']
mov ['esi,', 'esp']
push ['offset', '??_C@_0II@LDMAGCBC@ucm?5error?3?5the?5base?5table?5contai@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_41]']
or ['eax,', '2']
mov ['[ebp+var_41],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_10F3']
cmp ['[ebp+var_38],', '0']
jnz ['loc_10EA']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+0Ah]']
cmp ['ecx,', 'eax']
jnz ['loc_1041']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
cmp ['ecx,', 'eax']
jnz ['loc_1041']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_FC2']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+Buf2],', 'edx']
jmp ['short', 'loc_FD4']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf2],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_FEE']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+Buf1],', 'edx']
jmp ['short', 'loc_1000']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf1],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_1041']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_41]']
or ['eax,', '1']
mov ['[ebp+var_41],', 'al']
jmp ['loc_10DF']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_1065']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_41]']
or ['eax,', '1']
mov ['[ebp+var_41],', 'al']
jmp ['short', 'loc_10DF']
mov ['esi,', 'esp']
push ['offset', '??_C@_0KL@GDLIFBBG@ucm?5error?3?5the?5base?5table?5contai@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_41]']
or ['eax,', '2']
mov ['[ebp+var_41],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_10F3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_D50']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0KL@GDLIFBBG@ucm?5error?3?5the?5base?5table?5contai@']
db ['0Ah']
db ["'", 'is', 'the', 'same', 'as', 'the', 'input', 'sequence', 'of', 'an', 'extension', "mapp'"]
db ["'ing',0Ah"]
db ["'", 'but', 'it', 'maps', "differently',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0II@LDMAGCBC@ucm?5error?3?5the?5base?5table?5contai@']
db ['0Ah']
db ["'", 'is', 'a', 'prefix', 'of', 'the', 'input', 'sequence', 'of', 'an', 'extension', "mapp'"]
db ["'ing',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_checkBaseExtBytes proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+Buf1]']
mov ['ecx,', '53h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_71],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+20411h]']
cmp ['ecx,', '0Ch']
setz ['dl']
mov ['[ebp+var_7D],', 'dl']
jmp ['short', 'loc_12B1']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_50]']
jnz ['short', 'loc_12C1']
mov ['al,', '[ebp+var_71]']
jmp ['loc_167C']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+eax*4]']
imul ['edx,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax]']
mov ['[ebp+var_8],', 'edx']
movsx ['eax,', '[ebp+arg_10]']
cmp ['eax,', '2']
jnz ['short', 'loc_12EC']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jnz ['short', 'loc_12EC']
jmp ['short', 'loc_12A8']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1303']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '3']
jnz ['short', 'loc_1305']
jmp ['short', 'loc_1307']
jmp ['short', 'loc_12A8']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_5C]']
jnz ['short', 'loc_1317']
mov ['al,', '[ebp+var_71]']
jmp ['loc_167C']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+eax*4]']
imul ['edx,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
add ['edx,', '[eax]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1342']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '3']
jnz ['short', 'loc_1344']
jmp ['short', 'loc_134F']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_1307']
push ['1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_compareBytes']
add ['esp,', '14h']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jge ['loc_14F5']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_139D']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_71]']
or ['eax,', '1']
mov ['[ebp+var_71],', 'al']
jmp ['loc_14E7']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+9]']
cmp ['ecx,', 'eax']
jge ['loc_14E7']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jz ['short', 'loc_13CB']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jle ['loc_14E7']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_13E5']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+Buf2],', 'edx']
jmp ['short', 'loc_13F7']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf2],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_1411']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+Buf1],', 'edx']
jmp ['short', 'loc_1423']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf1],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['loc_14E7']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_146D']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_71]']
or ['eax,', '1']
mov ['[ebp+var_71],', 'al']
jmp ['short', 'loc_14E7']
mov ['esi,', 'esp']
push ['offset', '??_C@_0II@LDMAGCBC@ucm?5error?3?5the?5base?5table?5contai@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_71]']
or ['eax,', '2']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_1677']
cmp ['[ebp+var_68],', '0']
jnz ['loc_166E']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+0Ah]']
cmp ['ecx,', 'eax']
jnz ['loc_15C5']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['ecx,', 'eax']
jnz ['loc_15C5']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1542']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+Buf2],', 'edx']
jmp ['short', 'loc_1556']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+Buf2],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['eax,', '1']
jnz ['short', 'loc_156D']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+Buf1],', 'ecx']
jmp ['short', 'loc_1581']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
lea ['eax,', '[edx+eax*4]']
mov ['[ebp+Buf1],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
mov ['ecx,', '[ebp+Buf1]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_15C5']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_71]']
or ['eax,', '1']
mov ['[ebp+var_71],', 'al']
jmp ['loc_1663']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_15E9']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Bh],', 'cl']
movzx ['eax,', '[ebp+var_71]']
or ['eax,', '1']
mov ['[ebp+var_71],', 'al']
jmp ['short', 'loc_1663']
mov ['esi,', 'esp']
push ['offset', '??_C@_0KL@GDLIFBBG@ucm?5error?3?5the?5base?5table?5contai@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_71]']
or ['eax,', '2']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1677']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_12A6']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '14Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_mergeTables proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '11Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+Src]']
mov ['ecx,', '47h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_38]']
jge ['loc_18C8']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_44]']
jge ['loc_18C8']
push ['1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_compareMappings']
add ['esp,', '14h']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_1759']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_18C3']
cmp ['[ebp+var_50],', '0']
jge ['loc_1800']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '[ebp+Size]']
jnz ['short', 'loc_17B6']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_1789']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+Buf1],', 'edx']
jmp ['short', 'loc_179B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf1],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_17D9']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_17E2']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jnz ['short', 'loc_17E2']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
movzx ['edx,', '[ebp+arg_10]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_17E2']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ah],', '2']
jmp ['short', 'loc_17E9']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ah],', '1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_18C3']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1827']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0FFFDh']
jz ['loc_18B1']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '1Ah']
jz ['loc_18B1']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Ah],', '3']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_1848']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+Buf1],', 'edx']
jmp ['short', 'loc_185A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf1],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1871']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+Src],', 'edx']
jmp ['short', 'loc_1885']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+Src],', 'ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ucm_addMapping']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_16F5']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_38]']
jge ['loc_1971']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '[ebp+Size]']
jnz ['short', 'loc_1927']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_18FA']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+Buf1],', 'edx']
jmp ['short', 'loc_190C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf1],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_194A']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_1953']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1953']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
movzx ['edx,', '[ebp+arg_10]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_1953']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ah],', '2']
jmp ['short', 'loc_195A']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+0Ah],', '1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_18C8']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_44]']
jge ['loc_1A33']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_19A0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0FFFDh']
jz ['loc_1A1C']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '1Ah']
jz ['short', 'loc_1A1C']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+0Ah],', '3']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_19C1']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+Buf1],', 'edx']
jmp ['short', 'loc_19D3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Buf1],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_19EA']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+Src],', 'edx']
jmp ['short', 'loc_19FE']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+Src],', 'ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ucm_addMapping']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_1971']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2Ah],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_separateMappings proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '110h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_110]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_35],', '0']
mov ['[ebp+var_41],', '1']
jmp ['short', 'loc_1AA0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_1C70']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['loc_1B42']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1B42']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '0Eh']
jz ['short', 'loc_1ADC']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '0Fh']
jnz ['short', 'loc_1B42']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EA@EOCFOBDB@warning?3?5removing?5illegal?5mappin@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ucm_printMapping']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Bh],', 'cl']
mov ['[ebp+var_35],', '1']
jmp ['loc_1A97']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_1B5C']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_1B6E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_10C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1B85']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_110],', 'edx']
jmp ['short', 'loc_1B99']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_10C]']
push ['edx']
mov ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '8']
push ['edx']
call ['_ucm_mappingType']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jge ['loc_1C51']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jg ['short', 'loc_1BE1']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '4']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_1BF3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
mov ['[ebp+var_10C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1C0A']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_110],', 'edx']
jmp ['short', 'loc_1C1E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_110],', 'ecx']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['edx,', '[ebp+var_10C]']
push ['edx']
mov ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_printMapping']
add ['esp,', '10h']
mov ['[ebp+var_41],', '0']
jmp ['short', 'loc_1C6B']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_1C6B']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Bh],', 'cl']
mov ['[ebp+var_35],', '1']
jmp ['loc_1A97']
movsx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jnz ['short', 'loc_1C7C']
xor ['al,', 'al']
jmp ['short', 'loc_1CD2']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jz ['short', 'loc_1CC2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_ucm_moveMappings']
add ['esp,', '8']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
call ['_ucm_checkBaseExt']
add ['esp,', '14h']
jmp ['short', 'loc_1CD2']
jmp ['short', 'loc_1CD2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_sortTable']
add ['esp,', '4']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EA@EOCFOBDB@warning?3?5removing?5illegal?5mappin@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_parseBytes	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_29],', '0']
movsx ['eax,', '[ebp+var_29]']
test ['eax,', 'eax']
jle ['short', 'loc_1D6E']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jnz ['short', 'loc_1D6E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_1D7E']
jmp ['loc_1E44']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '78h']
jnz ['short', 'loc_1DB7']
mov ['esi,', 'esp']
push ['10h']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtoul']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1D],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
cmp ['[ebp+EndPtr],', 'edx']
jz ['short', 'loc_1DE9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '??_C@_0EB@GHKLNFAL@ucm?5error?3?5byte?5must?5be?5formatte@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
or ['al,', '0FFh']
jmp ['short', 'loc_1E4F']
movsx ['eax,', '[ebp+var_29]']
cmp ['eax,', '1Fh']
jnz ['short', 'loc_1E24']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '??_C@_0CD@EAEBNBFL@ucm?5error?3?5too?5many?5bytes?5on?5?$CC?$CFs@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
or ['al,', '0FFh']
jmp ['short', 'loc_1E4F']
movsx ['eax,', '[ebp+var_29]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ebp+var_1D]']
mov ['[ecx+eax],', 'dl']
mov ['al,', '[ebp+var_29]']
add ['al,', '1']
mov ['[ebp+var_29],', 'al']
mov ['eax,', '[ebp+EndPtr]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_1D52']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['al,', '[ebp+var_29]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11_0']
dd ['offset', '$LN10_0']
assume ['cs:_rdata']
public ['??_C@_0CD@EAEBNBFL@ucm?5error?3?5too?5many?5bytes?5on?5?$CC?$CFs@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EB@GHKLNFAL@ucm?5error?3?5byte?5must?5be?5formatte@']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_parseMappingLine proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_41],', '0']
mov ['al,', '[ebp+var_41]']
mov ['[ebp+var_35],', 'al']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jle ['short', 'loc_1F3E']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jnz ['short', 'loc_1F3E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_1F4E']
jmp ['loc_2075']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '55h']
jnz ['short', 'loc_1F92']
mov ['esi,', 'esp']
push ['10h']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtoul']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
cmp ['[ebp+EndPtr],', 'edx']
jz ['short', 'loc_1F92']
mov ['eax,', '[ebp+EndPtr]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Eh']
jz ['short', 'loc_1FC7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0FF@BFOMKOAL@ucm?5error?3?5Unicode?5code?5point?5mu@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_226B']
cmp ['[ebp+var_20],', '10FFFFh']
ja ['short', 'loc_1FDF']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_2014']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0EG@BHFFBENH@ucm?5error?3?5Unicode?5code?5point?5mu@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_226B']
movsx ['eax,', '[ebp+var_35]']
cmp ['eax,', '13h']
jnz ['short', 'loc_2052']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0CJ@MEKHBNOB@ucm?5error?3?5too?5many?5code?5points?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_226B']
movsx ['eax,', '[ebp+var_35]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+eax*4],', 'edx']
mov ['al,', '[ebp+var_35]']
add ['al,', '1']
mov ['[ebp+var_35],', 'al']
mov ['eax,', '[ebp+EndPtr]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_1F22']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jnz ['short', 'loc_20B7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0CL@EFJBKJEG@ucm?5error?3?5no?5Unicode?5code?5point@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_226B']
jmp ['loc_2137']
movsx ['eax,', '[ebp+var_35]']
cmp ['eax,', '1']
jnz ['short', 'loc_20CC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_2137']
mov ['[ebp+var_5C],', '0']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
movsx ['ecx,', '[ebp+var_35]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['0']
call ['_u_strFromUTF32_56']
add ['esp,', '18h']
cmp ['[ebp+var_5C],', '0']
jle ['short', 'loc_20FC']
cmp ['[ebp+var_5C],', '0Fh']
jnz ['short', 'loc_2102']
cmp ['[ebp+var_2C],', '13h']
jle ['short', 'loc_2137']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0CE@GLKDIMDP@ucm?5error?3?5too?5many?5UChars?5on?5?$CC?$CF@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_226B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_u_skipWhitespace']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['_ucm_parseBytes']
add ['esp,', '0Ch']
mov ['[ebp+var_41],', 'al']
movsx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jge ['short', 'loc_216E']
xor ['al,', 'al']
jmp ['loc_226B']
jmp ['short', 'loc_21DC']
movsx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jnz ['short', 'loc_21AD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0BN@JICJNCFF@ucm?5error?3?5no?5bytes?5on?5?$CC?$CFs?$CC?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_226B']
jmp ['short', 'loc_21DC']
movsx ['eax,', '[ebp+var_41]']
cmp ['eax,', '4']
jg ['short', 'loc_21DC']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
movsx ['ecx,', '[ebp+var_41]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_21EE']
mov ['[ebp+var_4D],', '0FFh']
jmp ['short', 'loc_224E']
jmp ['short', 'loc_2243']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '7Ch']
jnz ['short', 'loc_2243']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '30h']
mov ['[ebp+var_4D],', 'cl']
movzx ['eax,', '[ebp+var_4D]']
cmp ['eax,', '4']
jle ['short', 'loc_2241']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '??_C@_0DF@HMFHDCCB@ucm?5error?3?5fallback?5indicator?5mu@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['short', 'loc_226B']
jmp ['short', 'loc_224E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_21DC']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_35]']
mov ['[eax+8],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_41]']
mov ['[eax+9],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_4D]']
mov ['[eax+0Ah],', 'cl']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN35']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN34']
dd ['offset', '$LN30']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN31']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN32']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN33']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DF@HMFHDCCB@ucm?5error?3?5fallback?5indicator?5mu@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BN@JICJNCFF@ucm?5error?3?5no?5bytes?5on?5?$CC?$CFs?$CC?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CE@GLKDIMDP@ucm?5error?3?5too?5many?5UChars?5on?5?$CC?$CF@']
assume ['cs:_rdata']
public ['??_C@_0CL@EFJBKJEG@ucm?5error?3?5no?5Unicode?5code?5point@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CJ@MEKHBNOB@ucm?5error?3?5too?5many?5code?5points?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EG@BHFFBENH@ucm?5error?3?5Unicode?5code?5point?5mu@']
db ['\'%s"\',0Ah,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0FF@BFOMKOAL@ucm?5error?3?5Unicode?5code?5point?5mu@']
db ["'hex", 'digits)', '-', '"%s"\',0Ah,0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_openTable	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['2Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_24C4']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CK@BDKHHBOF@ucm?5error?3?5unable?5to?5allocate?5a?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['2Ch']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CK@BDKHHBOF@ucm?5error?3?5unable?5to?5allocate?5a?5@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_closeTable	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2583']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_resetTable	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_25EF']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+29h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2Ah],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_addMapping	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+4]']
jl ['loc_26D5']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_263D']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '3E8h']
jmp ['short', 'loc_264C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_26B3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
push ['offset', '??_C@_0CN@ILCHCMNM@ucm?5error?3?5unable?5to?5allocate?5?$CFd@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_26D5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jle ['short', 'loc_2757']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_2757']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '2710h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_2757']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
push ['offset', '??_C@_0CL@GPMHICEF@ucm?5error?3?5unable?5to?5allocate?5?$CFd@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jle ['short', 'loc_27D6']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_27D6']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '2710h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_27D6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
push ['offset', '??_C@_0CI@NDIGKBOO@ucm?5error?3?5unable?5to?5allocate?5?$CFd@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jle ['loc_2885']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+14h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+10h]']
jle ['short', 'loc_284B']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EB@GAPDKKEP@ucm?5error?3?5too?5many?5code?5points?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+8]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[edx+eax*4]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '4']
jle ['loc_292F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+20h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+1Ch]']
jle ['short', 'loc_28FA']
mov ['esi,', 'esp']
push ['offset', '??_C@_0DN@HMHPLMLN@ucm?5error?3?5too?5many?5bytes?5in?5map@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+9]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '[ebp+var_20]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+4],', 'ecx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_2941']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['[ebp+var_20],', 'ecx']
jge ['short', 'loc_2995']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '10000h']
jl ['short', 'loc_2974']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+28h]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'cl']
jmp ['short', 'loc_2993']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_2993']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+28h]']
or ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'cl']
jmp ['short', 'loc_2938']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
test ['ecx,', 'ecx']
jge ['short', 'loc_29B2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+29h]']
or ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+29h],', 'cl']
jmp ['short', 'loc_29C2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+29h]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+29h],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx]']
mov ['[ebp+Dst],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['0Ch']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+2Ah],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DN@HMHPLMLN@ucm?5error?3?5too?5many?5bytes?5in?5map@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EB@GAPDKKEP@ucm?5error?3?5too?5many?5code?5points?5@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CI@NDIGKBOO@ucm?5error?3?5unable?5to?5allocate?5?$CFd@']
assume ['cs:_rdata']
public ['??_C@_0CL@GPMHICEF@ucm?5error?3?5unable?5to?5allocate?5?$CFd@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CN@ILCHCMNM@ucm?5error?3?5unable?5to?5allocate?5?$CFd@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_open	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['20458h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_2B97']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CJ@FIDJIJID@ucm?5error?3?5unable?5to?5allocate?5a?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['20458h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
call ['_ucm_openTable']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx],', 'eax']
call ['_ucm_openTable']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+20008h],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+20418h],', '0FFh']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+20419h],', '0FFh']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+20410h],', '1']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+2040Ch],', '1']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CJ@FIDJIJID@ucm?5error?3?5unable?5to?5allocate?5a?5@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_close	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2C8D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_closeTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ucm_closeTable']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_mappingType proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucm_countChars']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
jge ['short', 'loc_2CEB']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_2D70']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jnz ['short', 'loc_2D6B']
cmp ['[ebp+var_8],', '1']
jnz ['short', 'loc_2D6B']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '3']
jg ['short', 'loc_2D6B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20408h],', '1']
jz ['short', 'loc_2D65']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '2']
jnz ['short', 'loc_2D2D']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jz ['short', 'loc_2D6B']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '1']
jnz ['short', 'loc_2D43']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2D6B']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '1']
jg ['short', 'loc_2D65']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '1']
jle ['short', 'loc_2D65']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2D6B']
xor ['eax,', 'eax']
jmp ['short', 'loc_2D70']
jmp ['short', 'loc_2D70']
mov ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_addMappingAuto proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '2']
jnz ['short', 'loc_2E12']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '1']
jle ['short', 'loc_2E12']
mov ['esi,', 'esp']
push ['offset', '??_C@_0EE@DFPOEIMB@ucm?5error?3?5illegal?5?$DMsubchar1?$DO?5?$HM2@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_printMapping']
add ['esp,', '10h']
xor ['al,', 'al']
jmp ['loc_2EB4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2E66']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_ucm_mappingType']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_2E64']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_printMapping']
add ['esp,', '10h']
xor ['al,', 'al']
jmp ['short', 'loc_2EB4']
jmp ['short', 'loc_2E6D']
mov ['[ebp+var_8],', '1']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_2E97']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2E97']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ucm_addMapping']
add ['esp,', '10h']
jmp ['short', 'loc_2EB2']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ucm_addMapping']
add ['esp,', '10h']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0EE@DFPOEIMB@ucm?5error?3?5illegal?5?$DMsubchar1?$DO?5?$HM2@']
db ["'s',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_addMappingFromLine	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '164h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_164]']
mov ['ecx,', '59h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '23h']
jz ['short', 'loc_2F89']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_skipWhitespace']
add ['esp,', '4']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+var_9C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_2F89']
mov ['eax,', '[ebp+var_9C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_2F89']
mov ['eax,', '[ebp+var_9C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jnz ['short', 'loc_2F8D']
mov ['al,', '1']
jmp ['short', 'loc_2FF6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
lea ['edx,', '[ebp+var_68]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_ucm_parseMappingLine']
add ['esp,', '10h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2FE6']
lea ['edx,', '[ebp+Src]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucm_addMappingAuto']
add ['esp,', '18h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2FE6']
mov ['[ebp+var_164],', '1']
jmp ['short', 'loc_2FF0']
mov ['[ebp+var_164],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_164]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '164h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN10_1']
dd ['offset', '$LN7']
dd ['0FFFFFF98h,', '4Ch']
dd ['offset', '$LN8']
dd ['0FFFFFF70h,', '1Fh']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucm_readTable	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2D8]']
mov ['ecx,', '0B6h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_309D']
jmp ['loc_31DA']
mov ['[ebp+var_211],', '1']
push ['1F4h']
lea ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_T_FileStream_readLine']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_30F6']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BM@NJFMKDPP@incomplete?5charmap?5section?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_211],', '0']
jmp ['loc_31C6']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_208],', 'eax']
lea ['eax,', '[ebp+Str]']
cmp ['eax,', '[ebp+var_208]']
jnb ['short', 'loc_3154']
mov ['eax,', '[ebp+var_208]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_3143']
mov ['eax,', '[ebp+var_208]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '0Ah']
jnz ['short', 'loc_3154']
mov ['eax,', '[ebp+var_208]']
sub ['eax,', '1']
mov ['[ebp+var_208],', 'eax']
jmp ['short', 'loc_3117']
mov ['eax,', '[ebp+var_208]']
mov ['byte', 'ptr', '[eax],', '0']
movsx ['eax,', '[ebp+Str]']
test ['eax,', 'eax']
jz ['short', 'loc_3174']
movsx ['eax,', '[ebp+Str]']
cmp ['eax,', '23h']
jnz ['short', 'loc_3179']
jmp ['loc_30A4']
push ['offset', '??_C@_0M@EJMIGPNB@END?5CHARMAP?$AA@']
lea ['eax,', '[ebp+Str]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3193']
jmp ['short', 'loc_31C6']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucm_addMappingFromLine']
add ['esp,', '10h']
movsx ['ecx,', 'al']
movsx ['edx,', '[ebp+var_211]']
and ['edx,', 'ecx']
mov ['[ebp+var_211],', 'dl']
jmp ['loc_30A4']
movsx ['eax,', '[ebp+var_211]']
test ['eax,', 'eax']
jnz ['short', 'loc_31DA']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0Dh']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16']
dd ['offset', '$LN15']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0M@EJMIGPNB@END?5CHARMAP?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BM@NJFMKDPP@incomplete?5charmap?5section?6?$AA@']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__fputs:near']
extrn ['__imp__fputc:near']
extrn ['__imp__fprintf:near']
extrn ['_u_errorName_56:near']
extrn ['__imp__exit:near']
extrn ['__imp____iob_func:near']
extrn ['_uprv_malloc_56:near']
extrn ['_uprv_sortArray_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_ucm_countChars:near']
extrn ['_memcmp:near']
extrn ['__imp__strtoul:near']
extrn ['_u_skipWhitespace:near']
extrn ['_u_strFromUTF32_56:near']
extrn ['_memset:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_realloc_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['_strcmp:near']
extrn ['__imp__strchr:near']
extrn ['_T_FileStream_readLine:near']
end

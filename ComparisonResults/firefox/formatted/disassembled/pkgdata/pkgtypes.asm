endp
_pkg_writeCharListWrap proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4D8]']
mov ['ecx,', '136h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['loc_20E']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['loc_1A4']
push ['1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['3FCh']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_19],', '0']
cmp ['[ebp+arg_10],', '0']
jge ['short', 'loc_DD']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
movsx ['ecx,', '[ebp+eax+var_415]']
cmp ['ecx,', '22h']
jnz ['short', 'loc_B6']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+eax+var_415],', '0']
movsx ['eax,', '[ebp+Dest]']
cmp ['eax,', '22h']
jnz ['short', 'loc_D8']
lea ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
jmp ['loc_16D']
cmp ['[ebp+arg_10],', '0']
jle ['loc_16D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '22h']
jz ['short', 'loc_13C']
push ['offset', '??_C@_01BJJEKLCA@?$CC?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
push ['1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['3FCh']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncat']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '22h']
jz ['short', 'loc_16D']
push ['offset', '??_C@_01BJJEKLCA@?$CC?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_200']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_200']
cmp ['[ebp+var_C],', '3Ch']
jle ['short', 'loc_1E3']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1E3']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_2F']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN16']
dd ['offset', '$LN15']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01BJJEKLCA@?$CC?$AA@']
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_writeCharList proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4CC]']
mov ['ecx,', '133h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['loc_463']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['loc_429']
push ['1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['3FFh']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_9],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
cmp ['eax,', '3FFh']
jb ['short', 'loc_33C']
mov ['eax,', 'ds:?__LINE__Var@?1??pkg_writeCharList@@9@9']
add ['eax,', '0Bh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0DE@BCCCKHNP@d?3?2mozilla?2intl?2icu?2source?2tools@']
push ['offset', '??_C@_0EA@LCGHKMPN@?$CFs?3?$CFd?3?5Internal?5error?0?5line?5too?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_C],', '0']
jge ['short', 'loc_399']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
movsx ['ecx,', '[ebp+eax+var_409]']
cmp ['ecx,', '22h']
jnz ['short', 'loc_375']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+eax+var_409],', '0']
movsx ['eax,', '[ebp+Dest]']
cmp ['eax,', '22h']
jnz ['short', 'loc_397']
lea ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
jmp ['short', 'loc_406']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_406']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '22h']
jz ['short', 'loc_3D5']
push ['offset', '??_C@_01BJJEKLCA@?$CC?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '22h']
jz ['short', 'loc_406']
push ['offset', '??_C@_01BJJEKLCA@?$CC?$AA@']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_455']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_455']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T_FileStream_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['loc_290']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN16_0']
dd ['offset', '$LN15_0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EA@LCGHKMPN@?$CFs?3?$CFd?3?5Internal?5error?0?5line?5too?5@']
assume ['cs:_rdata']
public ['??_C@_0DE@BCCCKHNP@d?3?2mozilla?2intl?2icu?2source?2tools@']
assume ['cs:_data']
public ['?__LINE__Var@?1??pkg_writeCharList@@9@9']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_countCharList proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_567']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_54D']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_prependToList proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5A9']
xor ['eax,', 'eax']
jmp ['short', 'loc_5BD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_appendToList proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_605']
lea ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_635']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_635']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_62D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_619']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_64E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
call ['_pkg_prependToList']
add ['esp,', '8']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_664']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
call ['_pkg_prependToList']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_67B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_683']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_convertToNativePathSeparators proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['2Fh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_70F']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5Ch']
jmp ['short', 'loc_6E6']
mov ['eax,', '[ebp+Str]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_appendUniqueDirToList proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4E4]']
mov ['ecx,', '139h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
push ['5Ch']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_414],', 'eax']
mov ['esi,', 'esp']
push ['2Fh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strrchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_420],', 'eax']
cmp ['[ebp+var_414],', '0']
jz ['short', 'loc_7AC']
cmp ['[ebp+var_420],', '0']
jz ['short', 'loc_7B8']
mov ['eax,', '[ebp+var_420]']
cmp ['eax,', '[ebp+var_414]']
jbe ['short', 'loc_7B8']
mov ['eax,', '[ebp+var_420]']
mov ['[ebp+var_414],', 'eax']
cmp ['[ebp+var_414],', '0']
jnz ['short', 'loc_7C9']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_89C']
mov ['eax,', '[ebp+var_414]']
sub ['eax,', '[ebp+Str]']
cmp ['eax,', '400h']
jb ['short', 'loc_814']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['400h']
push ['offset', '??_C@_0CG@LLLLPABP@?$CD?$CD?5ERR?3?5Path?5too?5long?5?$FL?$CFd?5chars?$FN@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_89C']
mov ['eax,', '[ebp+var_414]']
sub ['eax,', '[ebp+Str]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_414]']
sub ['eax,', '[ebp+Str]']
mov ['[ebp+eax+Dest],', '0']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_convertToNativePathSeparators']
add ['esp,', '4']
lea ['eax,', '[ebp+Dest]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pkg_listContains']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_899']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_uprv_strdup_56']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pkg_appendToList']
add ['esp,', '0Ch']
jmp ['short', 'loc_89C']
jmp ['short', 'loc_89C']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN10']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CG@LLLLPABP@?$CD?$CD?5ERR?3?5Path?5too?5long?5?$FL?$CFd?5chars?$FN@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_deleteList	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_95F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['short', 'loc_92E']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_pkg_listContains proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
jmp ['short', 'loc_99D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9BF']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_9BD']
mov ['al,', '1']
jmp ['short', 'loc_9C1']
jmp ['short', 'loc_994']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_T_FileStream_write:near']
extrn ['_strcat:near']
extrn ['__imp__strncat:near']
extrn ['_strcpy:near']
extrn ['_strlen:near']
extrn ['__imp__strncpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__exit:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp__strchr:near']
extrn ['_uprv_strdup_56:near']
extrn ['__imp__strrchr:near']
extrn ['_uprv_free_56:near']
extrn ['_strcmp:near']
end

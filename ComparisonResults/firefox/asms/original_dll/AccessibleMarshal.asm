;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DA763289C23790BB2EE889F744D88BB6
; Input	CRC32 :	C4193C4B

; File Name   :	C:\compspace\compare\firefox\dlls\original\AccessibleMarshal.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	10000000
; Section 1. (virtual address 00001000)
; Virtual size			: 00000A08 (   2568.)
; Section size in file		: 00000C00 (   3072.)
; Offset to raw	data for section: 00000400
; Flags	60300020: Text Executable Readable
; Alignment	: 4 bytes
; Exported entry   2. DllGetClassObject
; PDB File Name	: c:\builds\moz2_slave\rel-m-rel-w32_bld-000000000000\build\obj-firefox\accessible\interfaces\msaa\AccessibleMarshal.pdb
; OS type	  :  MS	Windows
; Application type:  DLL 32bit

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		;org 10001000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; HRESULT __stdcall DllGetClassObject(const IID	*const rclsid, const IID *const	riid, LPVOID *ppv)
		public DllGetClassObject
DllGetClassObject proc near		; DATA XREF: .rdata:off_10003C68o

rclsid		= dword	ptr  4
riid		= dword	ptr  8
ppv		= dword	ptr  0Ch

		mov	eax, pProxyFileList
		mov	eax, [eax+4]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_10001012
		mov	eax, [eax]
		jmp	short loc_10001014
; ---------------------------------------------------------------------------

loc_10001012:				; CODE XREF: DllGetClassObject+Cj
		xor	eax, eax

loc_10001014:				; CODE XREF: DllGetClassObject+10j
		push	offset pPSF	; pPSFactoryBuffer
		push	eax		; pclsid
		push	offset pProxyFileList ;	pProxyFileList
		push	[esp+0Ch+ppv]	; ppv
		push	[esp+10h+riid]	; riid
		push	[esp+14h+rclsid] ; rclsid
		call	ds:NdrDllGetClassObject
		retn	0Ch
DllGetClassObject endp

; Exported entry   1. DllCanUnloadNow

; =============== S U B	R O U T	I N E =======================================


; HRESULT __stdcall DllCanUnloadNow()
		public DllCanUnloadNow
DllCanUnloadNow	proc near		; DATA XREF: .rdata:off_10003C68o
		push	offset pPSF	; pPSFactoryBuffer
		call	ds:NdrDllCanUnloadNow
		retn
DllCanUnloadNow	endp


; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_10001040(IRpcStubBuffer *This)
sub_10001040	proc near		; DATA XREF: .rdata:10003250o
					; .rdata:100034E0o ...

This		= dword	ptr  4

		push	offset pPSF	; pPSF
		push	[esp+4+This]	; This
		call	ds:NdrCStdStubBuffer_Release
		retn	4
sub_10001040	endp


; =============== S U B	R O U T	I N E =======================================


; BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
_DllMain@12	proc near		; CODE XREF: ___DllMainCRTStartup+7Dp
					; ___DllMainCRTStartup+97p

hinstDLL	= dword	ptr  4
fdwReason	= dword	ptr  8
lpvReserved	= dword	ptr  0Ch

		cmp	[esp+fdwReason], 1
		jnz	short loc_1000106A
		mov	ecx, [esp+hinstDLL]
		push	ecx		; hLibModule
		mov	hDll, ecx
		call	ds:DisableThreadLibraryCalls

loc_1000106A:				; CODE XREF: DllMain(x,x,x)+5j
		xor	eax, eax
		inc	eax
		retn	0Ch
_DllMain@12	endp

; Exported entry   3. DllRegisterServer

; =============== S U B	R O U T	I N E =======================================


; HRESULT __stdcall DllRegisterServer()
		public DllRegisterServer
DllRegisterServer proc near		; DATA XREF: .rdata:off_10003C68o
		mov	eax, pProxyFileList
		mov	eax, [eax+4]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_10001082
		mov	eax, [eax]
		jmp	short loc_10001084
; ---------------------------------------------------------------------------

loc_10001082:				; CODE XREF: DllRegisterServer+Cj
		xor	eax, eax

loc_10001084:				; CODE XREF: DllRegisterServer+10j
		push	eax		; pclsid
		push	offset pProxyFileList ;	pProxyFileList
		push	hDll		; hDll
		call	ds:NdrDllRegisterProxy
		retn
DllRegisterServer endp

; Exported entry   4. DllUnregisterServer

; =============== S U B	R O U T	I N E =======================================


; HRESULT __stdcall DllUnregisterServer()
		public DllUnregisterServer
DllUnregisterServer proc near		; DATA XREF: .rdata:off_10003C68o
		mov	eax, pProxyFileList
		mov	eax, [eax+4]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_100010A9
		mov	eax, [eax]
		jmp	short loc_100010AB
; ---------------------------------------------------------------------------

loc_100010A9:				; CODE XREF: DllUnregisterServer+Cj
		xor	eax, eax

loc_100010AB:				; CODE XREF: DllUnregisterServer+10j
		push	eax		; pclsid
		push	offset pProxyFileList ;	pProxyFileList
		push	hDll		; hDll
		call	ds:NdrDllUnregisterProxy
		retn
DllUnregisterServer endp

; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_AddRef]
; [00000006 BYTES: COLLAPSED FUNCTION IUnknown_QueryInterface_Proxy]
; [00000006 BYTES: COLLAPSED FUNCTION NdrOleFree]
; [00000006 BYTES: COLLAPSED FUNCTION NdrOleAllocate]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_CountRefs]
; [00000006 BYTES: COLLAPSED FUNCTION IUnknown_Release_Proxy]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_DebugServerQueryInterface]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_QueryInterface]
; [00000006 BYTES: COLLAPSED FUNCTION IUnknown_AddRef_Proxy]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_DebugServerRelease]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_Disconnect]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_IsIIDSupported]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_Invoke]
; [00000006 BYTES: COLLAPSED FUNCTION CStdStubBuffer_Connect]
; [00000006 BYTES: COLLAPSED FUNCTION BSTR_UserSize]
; [00000006 BYTES: COLLAPSED FUNCTION BSTR_UserMarshal]
; [00000006 BYTES: COLLAPSED FUNCTION BSTR_UserUnmarshal]
; [00000006 BYTES: COLLAPSED FUNCTION BSTR_UserFree]
; ---------------------------------------------------------------------------

loc_1000112A:				; DATA XREF: __except_handler4+Fo
		cmp	ecx, ___security_cookie
		jnz	short loc_10001134
		rep retn
; ---------------------------------------------------------------------------

loc_10001134:				; CODE XREF: .text:10001130j
		jmp	___report_gsfailure
; [0000004C BYTES: COLLAPSED FUNCTION _pre_c_init]

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10001185	proc near		; CODE XREF: ___DllMainCRTStartup+64p
					; ___DllMainCRTStartup+A3p ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		cmp	[ebp+arg_4], 0
		push	ebx
		push	esi
		push	edi
		jnz	loc_100012C0
		mov	eax, dword_100050D0
		test	eax, eax
		jle	loc_100012B9
		dec	eax
		mov	ebx, offset dword_10005414
		mov	dword_100050D0,	eax
		xor	edi, edi
		mov	eax, large fs:18h
		mov	[ebp+var_4], edi
		mov	edx, [eax+4]
		jmp	short loc_100011C3
; ---------------------------------------------------------------------------

loc_100011BF:				; CODE XREF: sub_10001185+48j
		cmp	eax, edx
		jz	short loc_100011D1

loc_100011C3:				; CODE XREF: sub_10001185+38j
		xor	eax, eax
		mov	ecx, edx
		lock cmpxchg [ebx], ecx
		test	eax, eax
		jnz	short loc_100011BF
		jmp	short loc_100011D8
; ---------------------------------------------------------------------------

loc_100011D1:				; CODE XREF: sub_10001185+3Cj
		mov	[ebp+var_4], 1

loc_100011D8:				; CODE XREF: sub_10001185+4Aj
		cmp	dword_10005418,	2
		jz	short loc_100011EE
		push	1Fh
		call	_amsg_exit
		pop	ecx
		jmp	loc_10001370
; ---------------------------------------------------------------------------

loc_100011EE:				; CODE XREF: sub_10001185+5Aj
		push	Ptr		; Ptr
		call	ds:DecodePointer
		mov	esi, eax
		mov	[ebp+arg_8], esi
		test	esi, esi
		jz	loc_100012A1
		push	dword_1000541C	; Ptr
		call	ds:DecodePointer
		mov	ebx, eax
		mov	[ebp+arg_4], esi
		mov	[ebp+arg_0], ebx

loc_1000121B:				; CODE XREF: sub_10001185+9Fj
					; sub_10001185+AAj ...
		sub	ebx, 4
		cmp	ebx, esi
		jb	short loc_1000127E
		cmp	[ebx], edi
		jz	short loc_1000121B
		push	edi		; Ptr
		call	ds:EncodePointer
		cmp	[ebx], eax
		jz	short loc_1000121B
		push	dword ptr [ebx]	; Ptr
		call	ds:DecodePointer
		push	edi		; Ptr
		mov	esi, eax
		call	ds:EncodePointer
		mov	[ebx], eax
		call	esi
		push	Ptr		; Ptr
		mov	esi, ds:DecodePointer
		call	esi ; DecodePointer
		push	dword_1000541C	; Ptr
		mov	[ebp+var_8], eax
		call	esi ; DecodePointer
		mov	ecx, [ebp+var_8]
		cmp	[ebp+arg_4], ecx
		jnz	short loc_1000126F
		mov	esi, [ebp+arg_8]
		cmp	[ebp+arg_0], eax
		jz	short loc_1000121B

loc_1000126F:				; CODE XREF: sub_10001185+E0j
		mov	esi, ecx
		mov	[ebp+arg_4], ecx
		mov	[ebp+arg_8], esi
		mov	ebx, eax
		mov	[ebp+arg_0], eax
		jmp	short loc_1000121B
; ---------------------------------------------------------------------------

loc_1000127E:				; CODE XREF: sub_10001185+9Bj
		cmp	esi, 0FFFFFFFFh
		jz	short loc_1000128B
		push	esi
		call	ds:frex
		pop	ecx

loc_1000128B:				; CODE XREF: sub_10001185+FCj
		push	edi		; Ptr
		call	ds:EncodePointer
		mov	dword_1000541C,	eax
		mov	ebx, offset dword_10005414
		mov	Ptr, eax

loc_100012A1:				; CODE XREF: sub_10001185+7Cj
		mov	dword_10005418,	edi
		cmp	[ebp+var_4], edi
		jnz	loc_10001370
		xor	eax, eax
		xchg	eax, [ebx]
		jmp	loc_10001370
; ---------------------------------------------------------------------------

loc_100012B9:				; CODE XREF: sub_10001185+19j
					; sub_10001185+19Fj
		xor	eax, eax
		jmp	loc_10001373
; ---------------------------------------------------------------------------

loc_100012C0:				; CODE XREF: sub_10001185+Cj
		cmp	[ebp+arg_4], 1
		jnz	loc_10001370
		mov	eax, large fs:18h
		xor	edi, edi
		mov	esi, edi
		mov	ebx, offset dword_10005414
		mov	edx, [eax+4]
		jmp	short loc_100012E2
; ---------------------------------------------------------------------------

loc_100012DE:				; CODE XREF: sub_10001185+167j
		cmp	eax, edx
		jz	short loc_100012F0

loc_100012E2:				; CODE XREF: sub_10001185+157j
		xor	eax, eax
		mov	ecx, edx
		lock cmpxchg [ebx], ecx
		test	eax, eax
		jnz	short loc_100012DE
		jmp	short loc_100012F3
; ---------------------------------------------------------------------------

loc_100012F0:				; CODE XREF: sub_10001185+15Bj
		xor	esi, esi
		inc	esi

loc_100012F3:				; CODE XREF: sub_10001185+169j
		cmp	dword_10005418,	edi
		push	2
		pop	edi
		jz	short loc_10001307
		push	1Fh
		call	_amsg_exit
		jmp	short loc_1000133C
; ---------------------------------------------------------------------------

loc_10001307:				; CODE XREF: sub_10001185+177j
		push	offset dword_100030EC
		push	offset dword_100030E0
		mov	dword_10005418,	1
		call	_initterm_e
		pop	ecx
		pop	ecx
		test	eax, eax
		jnz	short loc_100012B9
		push	offset dword_100030DC
		push	offset dword_100030D8
		call	_initterm
		pop	ecx
		mov	dword_10005418,	edi

loc_1000133C:				; CODE XREF: sub_10001185+180j
		pop	ecx
		test	esi, esi
		jnz	short loc_10001345
		xor	eax, eax
		xchg	eax, [ebx]

loc_10001345:				; CODE XREF: sub_10001185+1BAj
		cmp	dword_10005424,	0
		jz	short loc_1000136A
		push	offset dword_10005424
		call	__IsNonwritableInCurrentImage
		pop	ecx
		test	eax, eax
		jz	short loc_1000136A
		push	[ebp+arg_8]
		push	edi
		push	[ebp+arg_0]
		call	dword_10005424

loc_1000136A:				; CODE XREF: sub_10001185+1C7j
					; sub_10001185+1D6j
		inc	dword_100050D0

loc_10001370:				; CODE XREF: sub_10001185+64j
					; sub_10001185+125j ...
		xor	eax, eax
		inc	eax

loc_10001373:				; CODE XREF: sub_10001185+136j
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	0Ch
sub_10001185	endp

; [00000023 BYTES: COLLAPSED FUNCTION DllEntryPoint]
; [00000133 BYTES: COLLAPSED FUNCTION ___DllMainCRTStartup]
; [0000003D BYTES: COLLAPSED FUNCTION ___raise_securityfailure]
; [000000FB BYTES: COLLAPSED FUNCTION ___report_gsfailure]
; [00000006 BYTES: COLLAPSED FUNCTION __CppXcptFilter]
; [00000006 BYTES: COLLAPSED FUNCTION _amsg_exit]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10001620	proc near		; CODE XREF: __IsNonwritableInCurrentImage+59p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		xor	edx, edx
		push	ebx
		push	esi
		push	edi
		mov	ecx, [eax+3Ch]
		add	ecx, eax
		movzx	eax, word ptr [ecx+14h]
		movzx	ebx, word ptr [ecx+6]
		add	eax, 18h
		add	eax, ecx
		test	ebx, ebx
		jz	short loc_1000165C
		mov	edi, [ebp+arg_4]

loc_10001644:				; CODE XREF: sub_10001620+3Aj
		mov	esi, [eax+0Ch]
		cmp	edi, esi
		jb	short loc_10001654
		mov	ecx, [eax+8]
		add	ecx, esi
		cmp	edi, ecx
		jb	short loc_1000165E

loc_10001654:				; CODE XREF: sub_10001620+29j
		inc	edx
		add	eax, 28h
		cmp	edx, ebx
		jb	short loc_10001644

loc_1000165C:				; CODE XREF: sub_10001620+1Fj
		xor	eax, eax

loc_1000165E:				; CODE XREF: sub_10001620+32j
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		retn
sub_10001620	endp

; ---------------------------------------------------------------------------
		align 10h
; [000000BA BYTES: COLLAPSED FUNCTION __IsNonwritableInCurrentImage]
		align 10h
; [00000031 BYTES: COLLAPSED FUNCTION __ValidateImageBase]
; [0000003C BYTES: COLLAPSED FUNCTION ___atonexitinit]

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_1000179D(_onexit_t Func)
sub_1000179D	proc near		; CODE XREF: sub_10001846+6p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
Ptr		= dword	ptr -1Ch
ms_exc		= CPPEH_RECORD ptr -18h
Func		= dword	ptr  8

		push	14h
		push	offset stru_10003C20
		call	__SEH_prolog4
		and	[ebp+var_24], 0
		push	Ptr		; Ptr
		mov	esi, ds:DecodePointer
		call	esi ; DecodePointer
		mov	[ebp+Ptr], eax
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_100017CF
		push	[ebp+Func]	; Func
		call	ds:_onexit
		pop	ecx
		jmp	short loc_10001834
; ---------------------------------------------------------------------------

loc_100017CF:				; CODE XREF: sub_1000179D+24j
		push	8
		call	_lock
		pop	ecx
		and	[ebp+ms_exc.registration.TryLevel], 0
		push	Ptr		; Ptr
		call	esi ; DecodePointer
		mov	[ebp+Ptr], eax
		push	dword_1000541C	; Ptr
		call	esi ; DecodePointer
		mov	[ebp+var_20], eax
		lea	eax, [ebp+var_20]
		push	eax
		lea	eax, [ebp+Ptr]
		push	eax
		push	[ebp+Func]	; Ptr
		mov	esi, ds:EncodePointer
		call	esi ; EncodePointer
		push	eax
		call	__dllonexit
		add	esp, 0Ch
		mov	edi, eax
		mov	[ebp+var_24], edi
		push	[ebp+Ptr]	; Ptr
		call	esi ; EncodePointer
		mov	Ptr, eax
		push	[ebp+var_20]	; Ptr
		call	esi ; EncodePointer
		mov	dword_1000541C,	eax
		mov	[ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
		call	loc_1000183D
; ---------------------------------------------------------------------------

loc_10001832:				; CODE XREF: sub_1000179D+A8j
		mov	eax, edi

loc_10001834:				; CODE XREF: sub_1000179D+30j
		call	__SEH_epilog4
		retn
; ---------------------------------------------------------------------------

loc_1000183A:				; DATA XREF: .rdata:stru_10003C20o
		mov	edi, [ebp+var_24] ; Finally handler 0 for function 1000179D

loc_1000183D:				; CODE XREF: sub_1000179D+90j
		push	8
		call	_unlock
		pop	ecx
		retn
sub_1000179D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_10001846(_onexit_t Func)
sub_10001846	proc near		; CODE XREF: _pre_c_init+36p
					; _pre_c_init+42p

Func		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	[ebp+Func]	; Func
		call	sub_1000179D
		neg	eax
		pop	ecx
		sbb	eax, eax
		neg	eax
		dec	eax
		pop	ebp
		retn
sub_10001846	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1000185B	proc near		; CODE XREF: DllEntryPoint+9p

PerformanceCount= LARGE_INTEGER	ptr -14h
SystemTimeAsFileTime= _FILETIME	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		and	[ebp+SystemTimeAsFileTime.dwLowDateTime], 0
		and	[ebp+SystemTimeAsFileTime.dwHighDateTime], 0
		mov	eax, ___security_cookie
		push	esi
		push	edi
		mov	edi, 0BB40E64Eh
		mov	esi, 0FFFF0000h
		cmp	eax, edi
		jz	short loc_1000188B
		test	esi, eax
		jz	short loc_1000188B
		not	eax
		mov	dword_10005004,	eax
		jmp	short loc_100018F1
; ---------------------------------------------------------------------------

loc_1000188B:				; CODE XREF: sub_1000185B+21j
					; sub_1000185B+25j
		lea	eax, [ebp+SystemTimeAsFileTime]
		push	eax		; lpSystemTimeAsFileTime
		call	ds:GetSystemTimeAsFileTime
		mov	eax, [ebp+SystemTimeAsFileTime.dwHighDateTime]
		xor	eax, [ebp+SystemTimeAsFileTime.dwLowDateTime]
		mov	[ebp+var_4], eax
		call	ds:GetCurrentThreadId
		xor	[ebp+var_4], eax
		call	ds:GetCurrentProcessId
		xor	[ebp+var_4], eax
		lea	eax, [ebp+PerformanceCount]
		push	eax		; lpPerformanceCount
		call	ds:QueryPerformanceCounter
		mov	ecx, dword ptr [ebp+PerformanceCount+4]
		lea	eax, [ebp+var_4]
		xor	ecx, dword ptr [ebp+PerformanceCount]
		xor	ecx, [ebp+var_4]
		xor	ecx, eax
		cmp	ecx, edi
		jnz	short loc_100018D3
		mov	ecx, 0BB40E64Fh
		jmp	short loc_100018E3
; ---------------------------------------------------------------------------

loc_100018D3:				; CODE XREF: sub_1000185B+6Fj
		test	esi, ecx
		jnz	short loc_100018E3
		mov	eax, ecx
		or	eax, 4711h
		shl	eax, 10h
		or	ecx, eax

loc_100018E3:				; CODE XREF: sub_1000185B+76j
					; sub_1000185B+7Aj
		mov	___security_cookie, ecx
		not	ecx
		mov	dword_10005004,	ecx

loc_100018F1:				; CODE XREF: sub_1000185B+2Ej
		pop	edi
		pop	esi
		mov	esp, ebp
		pop	ebp
		retn
sub_1000185B	endp


; =============== S U B	R O U T	I N E =======================================


sub_100018F7	proc near		; CODE XREF: _pre_c_init+2Cp
		push	esi
		push	edi
		mov	esi, offset dword_10003BC8
		mov	edi, offset dword_10003BC8
		jmp	short loc_10001910
; ---------------------------------------------------------------------------

loc_10001905:				; CODE XREF: sub_100018F7+1Bj
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_1000190D
		call	eax

loc_1000190D:				; CODE XREF: sub_100018F7+12j
		add	esi, 4

loc_10001910:				; CODE XREF: sub_100018F7+Cj
		cmp	esi, edi
		jb	short loc_10001905
		pop	edi
		pop	esi
		retn
sub_100018F7	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl Func()
Func		proc near		; DATA XREF: _pre_c_init+31o
		push	esi
		push	edi
		mov	esi, offset dword_10003BD0
		mov	edi, offset dword_10003BD0
		jmp	short loc_10001930
; ---------------------------------------------------------------------------

loc_10001925:				; CODE XREF: Func+1Bj
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_1000192D
		call	eax

loc_1000192D:				; CODE XREF: Func+12j
		add	esi, 4

loc_10001930:				; CODE XREF: Func+Cj
		cmp	esi, edi
		jb	short loc_10001925
		pop	edi
		pop	esi
		retn
Func		endp

; ---------------------------------------------------------------------------
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _initterm]
; [00000006 BYTES: COLLAPSED FUNCTION _initterm_e]

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_10001944()
sub_10001944	proc near		; DATA XREF: _pre_c_init+3Bo
		push	offset dword_100053F8
		call	__clean_type_info_names_internal
		pop	ecx
		retn
sub_10001944	endp

; [00000045 BYTES: COLLAPSED FUNCTION __SEH_prolog4]
; [00000014 BYTES: COLLAPSED FUNCTION __SEH_epilog4]
; [00000023 BYTES: COLLAPSED FUNCTION __except_handler4]
; [00000006 BYTES: COLLAPSED FUNCTION _crt_debugger_hook]
; [00000006 BYTES: COLLAPSED FUNCTION __crtUnhandledException]
; [00000006 BYTES: COLLAPSED FUNCTION __crtTerminateProcess]
; [00000006 BYTES: COLLAPSED FUNCTION _lock]
; [00000006 BYTES: COLLAPSED FUNCTION _unlock]
; [00000006 BYTES: COLLAPSED FUNCTION __dllonexit]
; [00000006 BYTES: COLLAPSED FUNCTION __clean_type_info_names_internal]
; [00000006 BYTES: COLLAPSED FUNCTION _except_handler4_common]
; [00000006 BYTES: COLLAPSED FUNCTION IsProcessorFeaturePresent]
; [00000006 BYTES: COLLAPSED FUNCTION memcmp]
		align 200h
		dd 100h	dup(?)
_text		ends

; Section 2. (virtual address 00002000)
; Virtual size			: 000000B4 (	180.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001000
; Flags	60300020: Text Executable Readable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_orpc		segment	dword public 'CODE' use32
		assume cs:_orpc
		;org 10002000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	sub_10002000(void *Buf1, int)
sub_10002000	proc near		; DATA XREF: .rdata:10003280o

var_4		= dword	ptr -4
Buf1		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ecx
		push	10h		; Size
		push	4
		pop	eax
		imul	eax, 0
		mov	eax, ds:off_100032B8[eax]
		push	dword ptr [eax+4] ; Buf2
		push	[ebp+Buf1]	; Buf1
		call	memcmp
		add	esp, 0Ch
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jnz	short loc_10002034
		mov	eax, [ebp+arg_4]
		and	dword ptr [eax], 0
		xor	eax, eax
		inc	eax
		jmp	short loc_10002036
; ---------------------------------------------------------------------------

loc_10002034:				; CODE XREF: sub_10002000+27j
		xor	eax, eax

loc_10002036:				; CODE XREF: sub_10002000+32j
		mov	esp, ebp
		pop	ebp
		retn	8
sub_10002000	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	sub_1000203C(void *Buf1, int)
sub_1000203C	proc near		; DATA XREF: .rdata:10003488o

var_4		= dword	ptr -4
Buf1		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ecx
		push	10h		; Size
		push	4
		pop	eax
		imul	eax, 0
		mov	eax, ds:off_10003774[eax]
		push	dword ptr [eax+4] ; Buf2
		push	[ebp+Buf1]	; Buf1
		call	memcmp
		add	esp, 0Ch
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jnz	short loc_10002070
		mov	eax, [ebp+arg_4]
		and	dword ptr [eax], 0
		xor	eax, eax
		inc	eax
		jmp	short loc_10002072
; ---------------------------------------------------------------------------

loc_10002070:				; CODE XREF: sub_1000203C+27j
		xor	eax, eax

loc_10002072:				; CODE XREF: sub_1000203C+32j
		mov	esp, ebp
		pop	ebp
		retn	8
sub_1000203C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	sub_10002078(void *Buf1, int)
sub_10002078	proc near		; DATA XREF: .rdata:10003A14o

var_4		= dword	ptr -4
Buf1		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ecx
		push	10h		; Size
		push	4
		pop	eax
		imul	eax, 0
		mov	eax, ds:off_10003A2C[eax]
		push	dword ptr [eax+4] ; Buf2
		push	[ebp+Buf1]	; Buf1
		call	memcmp
		add	esp, 0Ch
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jnz	short loc_100020AC
		mov	eax, [ebp+arg_4]
		and	dword ptr [eax], 0
		xor	eax, eax
		inc	eax
		jmp	short loc_100020AE
; ---------------------------------------------------------------------------

loc_100020AC:				; CODE XREF: sub_10002078+27j
		xor	eax, eax

loc_100020AE:				; CODE XREF: sub_10002078+32j
		mov	esp, ebp
		pop	ebp
		retn	8
sub_10002078	endp

; ---------------------------------------------------------------------------
		align 200h
		dd 380h	dup(?)
_orpc		ends

; Section 3. (virtual address 00003000)
; Virtual size			: 00001262 (   4706.)
; Section size in file		: 00001400 (   5120.)
; Offset to raw	data for section: 00001200
; Flags	40300040: Data Readable
; Alignment	: 4 bytes
;
; Imports from KERNEL32.dll
;
; ===========================================================================

; Segment type:	Externs
; _idata
; BOOL __stdcall DisableThreadLibraryCalls(HMODULE hLibModule)
		extrn DisableThreadLibraryCalls:dword ;	CODE XREF: DllMain(x,x,x)+12p
					; DATA XREF: DllMain(x,x,x)+12r ...
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn GetSystemTimeAsFileTime:dword ; CODE XREF: sub_1000185B+34p
					; DATA XREF: sub_1000185B+34r
; DWORD	__stdcall GetCurrentThreadId()
		extrn GetCurrentThreadId:dword ; CODE XREF: sub_1000185B+43p
					; DATA XREF: sub_1000185B+43r
; DWORD	__stdcall GetCurrentProcessId()
		extrn GetCurrentProcessId:dword	; CODE XREF: sub_1000185B+4Cp
					; DATA XREF: sub_1000185B+4Cr
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn QueryPerformanceCounter:dword ; CODE XREF: sub_1000185B+59p
					; DATA XREF: sub_1000185B+59r
; BOOL __stdcall IsProcessorFeaturePresent(DWORD ProcessorFeature)
		extrn __imp_IsProcessorFeaturePresent:dword
					; DATA XREF: IsProcessorFeaturePresentr
; BOOL __stdcall IsDebuggerPresent()
		extrn IsDebuggerPresent:dword ;	CODE XREF: ___raise_securityfailure+3p
					; DATA XREF: ___raise_securityfailure+3r
; PVOID	__stdcall DecodePointer(PVOID Ptr)
		extrn DecodePointer:dword ; CODE XREF: sub_10001185+6Fp
					; sub_10001185+88p ...
; PVOID	__stdcall EncodePointer(PVOID Ptr)
		extrn EncodePointer:dword ; CODE XREF: _pre_c_init+10p
					; sub_10001185+A2p ...

;
; Imports from MSVCR120.dll
;
		extrn __imp__except_handler4_common:dword
					; DATA XREF: _except_handler4_commonr
					; .rdata:10003D3Co
		extrn __imp___clean_type_info_names_internal:dword
					; DATA XREF: __clean_type_info_names_internalr
; _onexit_t __cdecl onexit(_onexit_t Func)
		extrn _onexit:dword	; CODE XREF: sub_1000179D+29p
					; DATA XREF: sub_1000179D+29r
		extrn __imp___dllonexit:dword ;	DATA XREF: __dllonexitr
		extrn _calloc_crt:dword	; CODE XREF: ___atonexitinit+11p
					; DATA XREF: ___atonexitinit+11r
		extrn __imp__unlock:dword ; DATA XREF: _unlockr
		extrn __imp__lock:dword	; DATA XREF: _lockr
		extrn __imp___crtTerminateProcess:dword	; DATA XREF: __crtTerminateProcessr
		extrn __imp___crtUnhandledException:dword
					; DATA XREF: __crtUnhandledExceptionr
		extrn __imp__crt_debugger_hook:dword ; DATA XREF: _crt_debugger_hookr
		extrn __imp__initterm_e:dword ;	DATA XREF: _initterm_er
		extrn __imp__initterm:dword ; DATA XREF: _inittermr
		extrn _malloc_crt:dword	; CODE XREF: _pre_c_init+6p
					; DATA XREF: _pre_c_init+6r
		extrn __imp__amsg_exit:dword ; DATA XREF: _amsg_exitr
		extrn __imp___CppXcptFilter:dword ; DATA XREF: __CppXcptFilterr
; int __cdecl memcmp(const void	*Buf1, const void *Buf2, size_t	Size)
		extrn __imp_memcmp:dword ; DATA	XREF: memcmpr

;
; Imports from OLEAUT32.dll
;
; void __stdcall BSTR_UserFree(unsigned	__int32	*, BSTR	*)
		extrn __imp_BSTR_UserFree:dword	; DATA XREF: BSTR_UserFreer
					; .rdata:10003D28o
; unsigned __int8 *__stdcall BSTR_UserUnmarshal(unsigned __int32 *, unsigned __int8 *, BSTR *)
		extrn __imp_BSTR_UserUnmarshal:dword ; DATA XREF: BSTR_UserUnmarshalr
; unsigned __int8 *__stdcall BSTR_UserMarshal(unsigned __int32 *, unsigned __int8 *, BSTR *)
		extrn __imp_BSTR_UserMarshal:dword ; DATA XREF:	BSTR_UserMarshalr
; unsigned __int32 __stdcall BSTR_UserSize(unsigned __int32 *, unsigned	__int32, BSTR *)
		extrn __imp_BSTR_UserSize:dword	; DATA XREF: BSTR_UserSizer

;
; Imports from RPCRT4.dll
;
; HRESULT __stdcall NdrDllUnregisterProxy(HMODULE hDll,	const ProxyFileInfo **pProxyFileList, const CLSID *pclsid)
		extrn NdrDllUnregisterProxy:dword ; CODE XREF: DllUnregisterServer+20p
					; DATA XREF: DllUnregisterServer+20r ...
; HRESULT __stdcall NdrDllGetClassObject(const IID *const rclsid, const	IID *const riid, void **ppv, const ProxyFileInfo **pProxyFileList, const CLSID *pclsid,	CStdPSFactoryBuffer *pPSFactoryBuffer)
		extrn NdrDllGetClassObject:dword ; CODE	XREF: DllGetClassObject+2Bp
					; DATA XREF: DllGetClassObject+2Br
; HRESULT __stdcall NdrDllCanUnloadNow(CStdPSFactoryBuffer *pPSFactoryBuffer)
		extrn NdrDllCanUnloadNow:dword ; CODE XREF: DllCanUnloadNow+5p
					; DATA XREF: DllCanUnloadNow+5r
; HRESULT __stdcall NdrDllRegisterProxy(HMODULE	hDll, const ProxyFileInfo **pProxyFileList, const CLSID	*pclsid)
		extrn NdrDllRegisterProxy:dword	; CODE XREF: DllRegisterServer+20p
					; DATA XREF: DllRegisterServer+20r
; ULONG	__stdcall NdrCStdStubBuffer_Release(IRpcStubBuffer *This, IPSFactoryBuffer *pPSF)
		extrn NdrCStdStubBuffer_Release:dword ;	CODE XREF: sub_10001040+9p
					; DATA XREF: sub_10001040+9r
; HRESULT __stdcall CStdStubBuffer_Connect(IRpcStubBuffer *This, IUnknown *pUnkServer)
		extrn __imp_CStdStubBuffer_Connect:dword
					; DATA XREF: CStdStubBuffer_Connectr
; HRESULT __stdcall CStdStubBuffer_Invoke(IRpcStubBuffer *This,	RPCOLEMESSAGE *pRpcMsg,	IRpcChannelBuffer *pRpcChannelBuffer)
		extrn __imp_CStdStubBuffer_Invoke:dword	; DATA XREF: CStdStubBuffer_Invoker
; ULONG	__stdcall CStdStubBuffer_AddRef(IRpcStubBuffer *This)
		extrn __imp_CStdStubBuffer_AddRef:dword	; DATA XREF: CStdStubBuffer_AddRefr
; void __stdcall CStdStubBuffer_Disconnect(IRpcStubBuffer *This)
		extrn __imp_CStdStubBuffer_Disconnect:dword
					; DATA XREF: CStdStubBuffer_Disconnectr
; void __stdcall CStdStubBuffer_DebugServerRelease(IRpcStubBuffer *This, void *pv)
		extrn __imp_CStdStubBuffer_DebugServerRelease:dword
					; DATA XREF: CStdStubBuffer_DebugServerReleaser
; ULONG	__stdcall IUnknown_AddRef_Proxy(IUnknown *This)
		extrn __imp_IUnknown_AddRef_Proxy:dword	; DATA XREF: IUnknown_AddRef_Proxyr
; HRESULT __stdcall IUnknown_QueryInterface_Proxy(IUnknown *This, const	IID *const riid, void **ppvObject)
		extrn __imp_IUnknown_QueryInterface_Proxy:dword
					; DATA XREF: IUnknown_QueryInterface_Proxyr
; HRESULT __stdcall CStdStubBuffer_QueryInterface(IRpcStubBuffer *This,	const IID *const riid, void **ppvObject)
		extrn __imp_CStdStubBuffer_QueryInterface:dword
					; DATA XREF: CStdStubBuffer_QueryInterfacer
; HRESULT __stdcall CStdStubBuffer_DebugServerQueryInterface(IRpcStubBuffer *This, void	**ppv)
		extrn __imp_CStdStubBuffer_DebugServerQueryInterface:dword
					; DATA XREF: CStdStubBuffer_DebugServerQueryInterfacer
; ULONG	__stdcall IUnknown_Release_Proxy(IUnknown *This)
		extrn __imp_IUnknown_Release_Proxy:dword
					; DATA XREF: IUnknown_Release_Proxyr
; ULONG	__stdcall CStdStubBuffer_CountRefs(IRpcStubBuffer *This)
		extrn __imp_CStdStubBuffer_CountRefs:dword
					; DATA XREF: CStdStubBuffer_CountRefsr
; void *__stdcall NdrOleAllocate(size_t	Size)
		extrn __imp_NdrOleAllocate:dword ; DATA	XREF: NdrOleAllocater
; void __stdcall NdrOleFree(void *NodeToFree)
		extrn __imp_NdrOleFree:dword ; DATA XREF: NdrOleFreer
; IRpcStubBuffer *__stdcall CStdStubBuffer_IsIIDSupported(IRpcStubBuffer *This,	const IID *const riid)
		extrn __imp_CStdStubBuffer_IsIIDSupported:dword
					; DATA XREF: CStdStubBuffer_IsIIDSupportedr

;
; Imports from mozglue.dll
;
		extrn frex:dword	; CODE XREF: sub_10001185+FFp
					; DATA XREF: sub_10001185+FFr ...


; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 100030D8h
dword_100030D8	dd 0			; DATA XREF: sub_10001185+1A6o
dword_100030DC	dd 0			; DATA XREF: sub_10001185+1A1o
dword_100030E0	dd 0			; DATA XREF: sub_10001185+187o
		dd offset _pre_c_init
		dd offset ___atonexitinit
dword_100030EC	dd 0			; DATA XREF: sub_10001185:loc_10001307o
; Debug	Directory entries
		dd 0			; Characteristics
		dd 5632BA67h		; TimeDateStamp: Fri Oct 30 00:31:35 2015
		dw 0			; MajorVersion
		dw 0			; MinorVersion
		dd 2			; Type:	IMAGE_DEBUG_TYPE_CODEVIEW
		dd 8Fh			; SizeOfData
		dd rva asc_10003B10	; AddressOfRawData
		dd 1D10h		; PointerToRawData
		dd 0			; Characteristics
		dd 5632BA67h		; TimeDateStamp: Fri Oct 30 00:31:35 2015
		dw 0			; MajorVersion
		dw 0			; MinorVersion
		dd 0Ch			; Type
		dd 14h			; SizeOfData
		dd rva dword_10003BA0	; AddressOfRawData
		dd 1DA0h		; PointerToRawData
		dd 0			; Characteristics
		dd 5632BA67h		; TimeDateStamp: Fri Oct 30 00:31:35 2015
		dw 0			; MajorVersion
		dw 0			; MinorVersion
		dd 0Ah			; Type:	IMAGE_DEBUG_TYPE_RESERVED10
		dd 4			; SizeOfData
		dd rva dword_10003BB4	; AddressOfRawData
		dd 1DB4h		; PointerToRawData
dword_10003144	dd 0			; DATA XREF: ___DllMainCRTStartup:loc_100013DDr
					; ___DllMainCRTStartup+A8r ...
off_10003148	dd offset dword_100050D8 ; DATA	XREF: ___report_gsfailure+EDo
		dd offset dword_10005128
dword_10003150	dd 0D68D6D0h, 4D08D93Dh, 0DF00DA3h, 245BF4D1h
					; DATA XREF: .rdata:off_10003238o
					; .data:1000501Co
dword_10003160	dd 0			; DATA XREF: .rdata:off_10003298o
					; .rdata:off_100032C8o
		dd offset NdrOleAllocate
		dd offset NdrOleFree
		align 20h
		dd offset word_100031FA
		dd 1, 50002h, 0
		dd 800025Bh, 0
		dd offset off_100033C4
		align 10h
		dd 1, 3	dup(0)
off_100031B0	dd offset aIsimpledomdocu ; DATA XREF: .rdata:10003278o
					; .rdata:100032A4o ...
					; "ISimpleDOMDocument"
		dd 0
dword_100031B8	dd 240000h, 6C0048h, 0BA0090h, 0 ; DATA	XREF: .rdata:10003898o
		dd 1C0411h, 0E0013h, 2011Bh, 0FFFC0009h, 5B060001h, 80317h
		dd 808FFF0h, 83B45B5Ch,	40000h,	0FFDE0000h, 5C080C11h
		dd 0
		db 2 dup(0)
word_100031FA	dw 0			; DATA XREF: .rdata:10003180o
		dd 1C0411h, 0E0013h, 2011Bh, 0FFFC0009h, 5B060001h, 80317h
		dd 808FFF0h, 83B45B5Ch,	40000h,	0FFDE0000h, 60011h, 0FFE60012h
		dd 83B4h, 4, 0FFF4h
off_10003238	dd offset dword_10003150 ; DATA	XREF: .rdata:off_100032C0o
		dd offset off_10003298
		dd 9, 0
		dd offset CStdStubBuffer_QueryInterface
		dd offset CStdStubBuffer_AddRef
		dd offset sub_10001040
		dd offset CStdStubBuffer_Connect
		dd offset CStdStubBuffer_Disconnect
		dd offset CStdStubBuffer_Invoke
		dd offset CStdStubBuffer_IsIIDSupported
		dd offset CStdStubBuffer_CountRefs
		dd offset CStdStubBuffer_DebugServerQueryInterface
		dd offset CStdStubBuffer_DebugServerRelease
off_10003270	dd offset off_100032B8	; DATA XREF: .data:pProxyFileListo
		dd offset off_100032C0
		dd offset off_100031B0
		dd 0
		dd offset sub_10002000
		dd 20001h, 4 dup(0)
off_10003298	dd offset dword_10003160 ; DATA	XREF: .rdata:1000323Co
		align 10h
		dd offset word_100032E2
		dd offset off_100031B0+2
		dd 4 dup(0)
off_100032B8	dd offset off_10005018	; DATA XREF: sub_10002000+Cr
					; .rdata:off_10003270o
		align 10h
off_100032C0	dd offset off_10003238	; DATA XREF: .rdata:10003274o
		align 8
off_100032C8	dd offset dword_10003160 ; DATA	XREF: .data:off_10005018o
		dd offset word_100032E2
		dd offset off_100031B0+2
		dd 3 dup(0)
		db 2 dup(0)
word_100032E2	dw 6C33h		; DATA XREF: .rdata:100032A0o
					; .rdata:100032CCo
		align 8
		dd 0C0003h, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 6C330008h, 0
		dd 0C0004h, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 6C330008h, 0
		dd 0C0005h, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 6C330008h, 0
		dd 0C0006h, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 6C330008h, 0
		dd 100007h, 80006h, 3080345h, 1, 480000h, 60004h, 82113h
		dd 700020h, 8000Ch, 6C33h, 80000h, 0Ch,	2460008h, 508h
		dd 1, 4010Bh, 700032h, 80008h, 0
off_100033C4	dd offset BSTR_UserSize	; DATA XREF: .rdata:10003198o
		dd offset BSTR_UserMarshal
		dd offset BSTR_UserUnmarshal
		dd offset BSTR_UserFree
dword_100033D4	dd 1814CEEBh, 407F49E2h, 75FA99AFh, 7267D5Ah, 0
					; DATA XREF: .rdata:off_100034C8o
					; .data:1000504Co
dword_100033E8	dd 0			; DATA XREF: .rdata:off_10003458o
					; .rdata:off_100034A8o
		dd offset NdrOleAllocate
		dd offset NdrOleFree
		dd 5 dup(0)
		dd offset word_10003782
		dd 1, 50002h, 0
		dd 800025Bh, 0
		dd offset off_10003854
		align 8
dword_10003428	dd 1, 3	dup(0)		; DATA XREF: .rdata:10003464o
					; .rdata:100034B0o
		dd 420000h, 0B4007Eh, 12600F0h,	16E014Ah, 1B60192h, 1FE01DAh
		dd 0FFFF0228h, 24Ch
off_10003458	dd offset dword_100033E8 ; DATA	XREF: .rdata:100034CCo
		align 10h
		dd offset word_10003502
		dd offset dword_10003428+0Ah
		dd 4 dup(0)
off_10003478	dd offset off_10003774	; DATA XREF: .data:100050C4o
		dd offset off_100034A0
		dd offset off_100034C0
		align 8
		dd offset sub_1000203C
		dd 20001h, 4 dup(0)
off_100034A0	dd offset off_100034C8	; DATA XREF: .rdata:1000347Co
		align 8
off_100034A8	dd offset dword_100033E8 ; DATA	XREF: .data:off_10005048o
		dd offset word_10003502
		dd offset dword_10003428+0Ah
		align 10h
off_100034C0	dd offset aIsimpledomnode ; DATA XREF: .rdata:10003480o
					; "ISimpleDOMNode"
		align 8
off_100034C8	dd offset dword_100033D4 ; DATA	XREF: .rdata:off_100034A0o
		dd offset off_10003458
		dd 12h,	0
		dd offset CStdStubBuffer_QueryInterface
		dd offset CStdStubBuffer_AddRef
		dd offset sub_10001040
		dd offset CStdStubBuffer_Connect
		dd offset CStdStubBuffer_Disconnect
		dd offset CStdStubBuffer_Invoke
		dd offset CStdStubBuffer_IsIIDSupported
		dd offset CStdStubBuffer_CountRefs
		dd offset CStdStubBuffer_DebugServerQueryInterface
		dd offset CStdStubBuffer_DebugServerRelease
		db 2 dup(0)
word_10003502	dw 6C33h		; DATA XREF: .rdata:10003460o
					; .rdata:100034ACo
		align 8
		dd 200003h, 740000h, 3080745h, 1, 21130000h, 200004h, 82150h
		dd 21130006h, 20000Ch, 102150h,	21500008h, 80014h, 182150h
		dd 700006h, 8001Ch, 6C33h, 40000h, 6001Ch, 6450022h, 10308h
		dd 0
		dd 40048h, 1130006h, 360008h, 0C0113h, 1130050h, 360010h
		dd 142150h, 700006h, 80018h, 6C33h, 50000h, 60018h, 5470008h
		dd 10708h, 1, 40048h, 10B0006h,	740008h, 0C010Bh, 113008Eh
		dd 0A40010h, 140070h, 6C330008h, 0
		dd 1C0006h, 22000Bh, 3080645h, 1, 480000h, 60004h, 80048h
		dd 1130003h, 36000Ch, 100113h, 21500036h, 60014h, 180070h
		dd 6C330008h, 0
		dd 180007h, 8000Bh, 7080547h, 10001h, 480000h, 60004h
		dd 80048h, 10B0003h, 74000Ch, 100113h, 7000A4h,	80014h
		dd 6C33h, 80000h, 5000Ch, 2440008h, 108h, 0
		dd 40048h, 700003h, 80008h, 6C33h, 90000h, 0Ch,	2450008h
		dd 108h, 0
		dd 40013h, 7000BAh, 80008h, 6C33h, 0A0000h, 0Ch, 2450008h
		dd 108h, 0
		dd 40013h, 7000BAh, 80008h, 6C33h, 0B0000h, 0Ch, 2450008h
		dd 108h, 0
		dd 40013h, 7000BAh, 80008h, 6C33h, 0C0000h, 0Ch, 2450008h
		dd 108h, 0
		dd 40013h, 7000BAh, 80008h, 6C33h, 0D0000h, 0Ch, 2450008h
		dd 108h, 0
		dd 40013h, 7000BAh, 80008h, 6C33h, 0E0000h, 80010h, 3450008h
		dd 108h, 0
		dd 40048h, 130008h, 0BA0008h, 0C0070h, 6C330008h, 0
		dd 0C000Fh, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 6C330008h, 0
		dd 0C0011h, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 8
off_10003774	dd offset off_10005048	; DATA XREF: sub_1000203C+Cr
					; .rdata:off_10003478o
		dd 2 dup(0)
		db 2 dup(0)
word_10003782	dw 0			; DATA XREF: .rdata:10003408o
		dd 1C0411h, 0E0013h, 2011Bh, 0FFFC0009h, 5B060001h, 80317h
		dd 808FFF0h, 83B45B5Ch,	40000h,	0FFDE0000h, 5C060C11h
		dd 5C080C11h, 20011h, 321h, 40027h, 54270001h, 14h, 0FFD8004Ch
		dd 115B5Ch, 11C0002h, 270002h, 10004h, 145427h,	5B060000h
		dd 100011h, 0FFAE0012h,	83B4h, 4, 321FFF4h, 270000h, 10004h
		dd 40027h, 4C0001h, 5B5CFFE4h, 20011h, 2011Ch, 40027h
		dd 270001h, 10004h, 115B06h, 3210002h, 270000h,	10004h
		dd 40027h, 4C0001h, 5B5CFF6Ah, 21011h, 0CEEB5A2Fh, 49E21814h
		dd 99AF407Fh, 7D5A75FAh, 726h
off_10003854	dd offset BSTR_UserSize	; DATA XREF: .rdata:10003420o
		dd offset BSTR_UserMarshal
		dd offset BSTR_UserUnmarshal
		dd offset BSTR_UserFree
dword_10003864	dd 4E747BE5h, 42652052h, 0CA8EF08Ah, 0C0D1AAD7h, 0
					; DATA XREF: .rdata:off_10003A48o
					; .data:1000509Co
dword_10003878	dd 0			; DATA XREF: .rdata:off_100038C8o
					; .rdata:off_100038E0o
		dd offset NdrOleAllocate
		dd offset NdrOleFree
		dd 5 dup(0)
		dd offset dword_100031B8+0Eh
		dd 1, 50002h, 0
		dd 800025Bh, 0
		dd offset off_10003A80
		align 8
		dd 1, 3	dup(0)
off_100038C8	dd offset dword_10003878 ; DATA	XREF: .data:off_10005098o
		dd offset word_1000390A
		dd offset off_10003A34+2
		align 10h
off_100038E0	dd offset dword_10003878 ; DATA	XREF: .rdata:10003A4Co
		align 8
		dd offset word_1000390A
		dd offset off_10003A34+2
		align 20h
off_10003900	dd offset off_10003A48	; DATA XREF: .rdata:10003A08o
		dd 0
		db 2 dup(0)
word_1000390A	dw 6C33h		; DATA XREF: .rdata:100038CCo
					; .rdata:100038E8o
		align 10h
		dd 0C0003h, 80000h, 3080245h, 1, 21130000h, 200004h, 80070h
		dd 6C330008h, 0
		dd 200004h, 780010h, 1080744h, 0
		dd 480000h, 80004h, 80048h, 21500008h, 8000Ch, 102150h
		dd 21500008h, 80014h, 182150h, 700008h,	8001Ch,	6C33h
		dd 50000h, 100020h, 7440078h, 108h, 0
		dd 40048h, 480008h, 80008h, 0C2150h, 21500008h,	80010h
		dd 142150h, 21500008h, 80018h, 1C0070h,	6C330008h, 0
		dd 100006h, 80010h, 1080344h, 0
		dd 480000h, 80004h, 80048h, 700008h, 8000Ch, 6C33h, 70000h
		dd 0Ch,	2450008h, 10308h, 0
		dd 42113h, 700020h, 80008h, 0
off_10003A04	dd offset off_10003A2C	; DATA XREF: .data:100050C8o
		dd offset off_10003900
		dd offset off_10003A34
		dd 0
		dd offset sub_10002078
		dd 20001h, 4 dup(0)
off_10003A2C	dd offset off_10005098	; DATA XREF: sub_10002078+Cr
					; .rdata:off_10003A04o
		dd 0
off_10003A34	dd offset aIsimpledomtext ; DATA XREF: .rdata:10003A0Co
					; .rdata:100038D0o ...
					; "ISimpleDOMText"
		dd 0
		dd 240000h, 0A80066h, 0D2h
off_10003A48	dd offset dword_10003864 ; DATA	XREF: .rdata:off_10003900o
		dd offset off_100038E0
		dd 8, 0
		dd offset CStdStubBuffer_QueryInterface
		dd offset CStdStubBuffer_AddRef
		dd offset sub_10001040
		dd offset CStdStubBuffer_Connect
		dd offset CStdStubBuffer_Disconnect
		dd offset CStdStubBuffer_Invoke
		dd offset CStdStubBuffer_IsIIDSupported
		dd offset CStdStubBuffer_CountRefs
		dd offset CStdStubBuffer_DebugServerQueryInterface
		dd offset CStdStubBuffer_DebugServerRelease
off_10003A80	dd offset BSTR_UserSize	; DATA XREF: .rdata:100038B0o
		dd offset BSTR_UserMarshal
		dd offset BSTR_UserUnmarshal
		dd offset BSTR_UserFree
aIsimpledomdocu	db 'ISimpleDOMDocument',0 ; DATA XREF: .rdata:off_100031B0o
		align 4
aIsimpledomnode	db 'ISimpleDOMNode',0   ; DATA XREF: .rdata:off_100034C0o
		align 4
aIsimpledomtext	db 'ISimpleDOMText',0   ; DATA XREF: .rdata:off_10003A34o
		align 8
__load_config_used dd 48h		; Size
		dd 0			; Time stamp
		dw 2 dup(0)		; Version: 0.0
		dd 0			; GlobalFlagsClear
		dd 0			; GlobalFlagsSet
		dd 0			; CriticalSectionDefaultTimeout
		dd 0			; DeCommitFreeBlockThreshold
		dd 0			; DeCommitTotalFreeThreshold
		dd 0			; LockPrefixTable
		dd 0			; MaximumAllocationSize
		dd 0			; VirtualMemoryThreshold
		dd 0			; ProcessAffinityMask
		dd 0			; ProcessHeapFlags
		dw 0			; CSDVersion
		dw 0			; Reserved1
		dd 0			; EditList
		dd offset ___security_cookie ; SecurityCookie
		dd offset ___safe_se_handler_table ; SEHandlerTable
		dd 1			; SEHandlerCount
; Debug	information (IMAGE_DEBUG_TYPE_CODEVIEW)
asc_10003B10	db 'RSDS'               ; DATA XREF: .rdata:10003104o
					; CV signature
		dd 760C3A5Fh		; Data1	; GUID
		dw 0C4F6h		; Data2
		dw 4304h		; Data3
		db 0B2h, 86h, 7, 18h, 40h, 0CFh, 0, 6Dh; Data4
		dd 2			; Age
		db 'c:\builds\moz2_slave\rel-m-rel-w32_bld-000000000000\build\obj-fir' ; PdbFileName
		db 'efox\accessible\interfaces\msaa\AccessibleMarshal.pdb',0
		align 10h
; Debug	information (type 12)
dword_10003BA0	dd 0			; DATA XREF: .rdata:10003120o
		dd 2 dup(15h), 2 dup(0)
; Debug	information (IMAGE_DEBUG_TYPE_RESERVED10)
dword_10003BB4	dd 50475500h, 2	dup(0)	; DATA XREF: .rdata:1000313Co
___safe_se_handler_table dd rva	__except_handler4 ; DATA XREF: .rdata:10003B08o
		align 8
dword_10003BC8	dd 2 dup(0)		; DATA XREF: sub_100018F7+2o
					; sub_100018F7+7o
dword_10003BD0	dd 2 dup(0)		; DATA XREF: Func+2o Func+7o
stru_10003BD8	dd 0FFFFFFFEh		; GSCookieOffset
					; DATA XREF: ___DllMainCRTStartup+2o
		dd 0			; GSCookieXOROffset ; SEH scope	table for function 1000139F
		dd 0FFFFFFD0h		; EHCookieOffset
		dd 0			; EHCookieXOROffset
		dd 0FFFFFFFEh		; ScopeRecord.EnclosingLevel
		dd 0			; ScopeRecord.FilterFunc
		dd offset $LN18		; ScopeRecord.HandlerFunc
		dd 0			; ScopeRecord.EnclosingLevel
		dd offset $LN22		; ScopeRecord.FilterFunc
		dd offset $LN23		; ScopeRecord.HandlerFunc
stru_10003C00	dd 0FFFFFFFEh		; GSCookieOffset
					; DATA XREF: __IsNonwritableInCurrentImage+5o
		dd 0			; GSCookieXOROffset ; SEH scope	table for function 10001670
		dd 0FFFFFFD8h		; EHCookieOffset
		dd 0			; EHCookieXOROffset
		dd 0FFFFFFFEh		; ScopeRecord.EnclosingLevel
		dd offset loc_100016F9	; ScopeRecord.FilterFunc
		dd offset loc_1000170C	; ScopeRecord.HandlerFunc
		align 10h
stru_10003C20	dd 0FFFFFFFEh		; GSCookieOffset ; DATA	XREF: sub_1000179D+2o
		dd 0			; GSCookieXOROffset ; SEH scope	table for function 1000179D
		dd 0FFFFFFCCh		; EHCookieOffset
		dd 0			; EHCookieXOROffset
		dd 0FFFFFFFEh		; ScopeRecord.EnclosingLevel
		dd 0			; ScopeRecord.FilterFunc
		dd offset loc_1000183A	; ScopeRecord.HandlerFunc
		align 10h
;
; Export directory for AccessibleMarshal.dll
;
		dd 0			; Characteristics
		dd 5632BA67h		; TimeDateStamp: Fri Oct 30 00:31:35 2015
		dw 0			; MajorVersion
		dw 0			; MinorVersion
		dd rva aAccessiblemars	; Name
		dd 1			; Base
		dd 4			; NumberOfFunctions
		dd 4			; NumberOfNames
		dd rva off_10003C68	; AddressOfFunctions
		dd rva off_10003C78	; AddressOfNames
		dd rva word_10003C88	; AddressOfNameOrdinals
;
; Export Address Table for AccessibleMarshal.dll
;
off_10003C68	dd rva DllCanUnloadNow,	rva DllGetClassObject, rva DllRegisterServer
					; DATA XREF: .rdata:10003C5Co
		dd rva DllUnregisterServer
;
; Export Names Table for AccessibleMarshal.dll
;
off_10003C78	dd rva aDllcanunloadno,	rva aDllgetclassobj, rva aDllregisterser
					; DATA XREF: .rdata:10003C60o
		dd rva aDllunregisters	; "DllCanUnloadNow"
;
; Export Ordinals Table	for AccessibleMarshal.dll
;
word_10003C88	dw 0, 1, 2, 3		; DATA XREF: .rdata:10003C64o
aAccessiblemars	db 'AccessibleMarshal.dll',0 ; DATA XREF: .rdata:10003C4Co
aDllcanunloadno	db 'DllCanUnloadNow',0  ; DATA XREF: .rdata:off_10003C78o
aDllgetclassobj	db 'DllGetClassObject',0 ; DATA XREF: .rdata:off_10003C78o
aDllregisterser	db 'DllRegisterServer',0 ; DATA XREF: .rdata:off_10003C78o
aDllunregisters	db 'DllUnregisterServer',0 ; DATA XREF: .rdata:off_10003C78o
		align 10h
__IMPORT_DESCRIPTOR_KERNEL32 dd	rva off_10003D68 ; Import Name Table
		dd 0			; Time stamp
		dd 0			; Forwarder Chain
		dd rva aKernel32_dll	; DLL Name
		dd rva DisableThreadLibraryCalls ; Import Address Table
__IMPORT_DESCRIPTOR_RPCRT4 dd rva off_10003DE8 ; Import	Name Table
		dd 0			; Time stamp
		dd 0			; Forwarder Chain
		dd rva aRpcrt4_dll	; DLL Name
		dd rva NdrDllUnregisterProxy ; Import Address Table
__IMPORT_DESCRIPTOR_OLEAUT32 dd	rva dword_10003DD4 ; Import Name Table
		dd 0			; Time stamp
		dd 0			; Forwarder Chain
		dd rva aOleaut32_dll	; DLL Name
		dd rva __imp_BSTR_UserFree ; Import Address Table
__IMPORT_DESCRIPTOR_MSVCR120 dd	rva off_10003D90 ; Import Name Table
		dd 0			; Time stamp
		dd 0			; Forwarder Chain
		dd rva aMsvcr120_dll	; DLL Name
		dd rva __imp__except_handler4_common ; Import Address Table
__IMPORT_DESCRIPTOR_mozglue dd rva off_10003E38	; Import Name Table
		dd 0			; Time stamp
		dd 0			; Forwarder Chain
		dd rva aMozglue_dll	; DLL Name
		dd rva frex		; Import Address Table
		dd 5 dup(0)
;
; Import names for KERNEL32.dll
;
off_10003D68	dd rva word_10003E40	; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_KERNEL32o
		dd rva word_1000423E
		dd rva word_10004228
		dd rva word_10004212
		dd rva word_100041F8
		dd rva word_100041DC
		dd rva word_100041C8
		dd rva word_100041B8
		dd rva word_100041A8
		dd 0
;
; Import names for MSVCR120.dll
;
off_10003D90	dd rva word_1000418E	; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_MSVCR120o
		dd rva word_1000416A
		dd rva word_10004154
		dd rva word_10004146
		dd rva word_10004138
		dd rva word_1000412E
		dd rva word_10004126
		dd rva word_10004100
		dd rva word_100040E6
		dd rva word_100040D0
		dd rva word_100040C2
		dd rva word_100040B6
		dd rva word_100040A8
		dd rva word_10004092
		dd rva word_10004080
		dd rva word_10004258
		dd 0
;
; Import names for OLEAUT32.dll
;
dword_10003DD4	dd 8000011Eh		; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_OLEAUT32o
		dd 8000011Dh
		dd 8000011Ch
		dd 8000011Bh
		dd 0
;
; Import names for RPCRT4.dll
;
off_10003DE8	dd rva word_1000404E	; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_RPCRT4o
		dd rva word_10004036
		dd rva word_10004020
		dd rva word_1000400A
		dd rva word_10003FEE
		dd rva word_10003FD4
		dd rva word_10003FBC
		dd rva word_10003E6A
		dd rva word_10003F80
		dd rva word_10003F5C
		dd rva word_10003F44
		dd rva word_10003E82
		dd rva word_10003F24
		dd rva word_10003EF8
		dd rva word_10003EDE
		dd rva word_10003EC2
		dd rva word_10003EB0
		dd rva word_10003EA2
		dd rva word_10003F9C
		dd 0
;
; Import names for mozglue.dll
;
off_10003E38	dd rva word_100040A0	; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_mozglueo
		dd 0
word_10003E40	dw 113h			; DATA XREF: .rdata:off_10003D68o
		db 'DisableThreadLibraryCalls',0
aKernel32_dll	db 'KERNEL32.dll',0     ; DATA XREF: .rdata:10003CFCo
		align 2
word_10003E6A	dw 0			; DATA XREF: .rdata:10003E04o
		db 'CStdStubBuffer_AddRef',0
word_10003E82	dw 10h			; DATA XREF: .rdata:10003E14o
		db 'IUnknown_QueryInterface_Proxy',0
word_10003EA2	dw 108h			; DATA XREF: .rdata:10003E2Co
		db 'NdrOleFree',0
		align 10h
word_10003EB0	dw 107h			; DATA XREF: .rdata:10003E28o
		db 'NdrOleAllocate',0
		align 2
word_10003EC2	dw 2			; DATA XREF: .rdata:10003E24o
		db 'CStdStubBuffer_CountRefs',0
		align 2
word_10003EDE	dw 11h			; DATA XREF: .rdata:10003E20o
		db 'IUnknown_Release_Proxy',0
		align 4
word_10003EF8	dw 3			; DATA XREF: .rdata:10003E1Co
		db 'CStdStubBuffer_DebugServerQueryInterface',0
		align 4
word_10003F24	dw 8			; DATA XREF: .rdata:10003E18o
		db 'CStdStubBuffer_QueryInterface',0
word_10003F44	dw 0Fh			; DATA XREF: .rdata:10003E10o
		db 'IUnknown_AddRef_Proxy',0
word_10003F5C	dw 4			; DATA XREF: .rdata:10003E0Co
		db 'CStdStubBuffer_DebugServerRelease',0
word_10003F80	dw 5			; DATA XREF: .rdata:10003E08o
		db 'CStdStubBuffer_Disconnect',0
word_10003F9C	dw 7			; DATA XREF: .rdata:10003E30o
		db 'CStdStubBuffer_IsIIDSupported',0
word_10003FBC	dw 6			; DATA XREF: .rdata:10003E00o
		db 'CStdStubBuffer_Invoke',0
word_10003FD4	dw 1			; DATA XREF: .rdata:10003DFCo
		db 'CStdStubBuffer_Connect',0
		align 2
word_10003FEE	dw 99h			; DATA XREF: .rdata:10003DF8o
		db 'NdrCStdStubBuffer_Release',0
word_1000400A	dw 0CFh			; DATA XREF: .rdata:10003DF4o
		db 'NdrDllRegisterProxy',0
word_10004020	dw 0CDh			; DATA XREF: .rdata:10003DF0o
		db 'NdrDllCanUnloadNow',0
		align 2
word_10004036	dw 0CEh			; DATA XREF: .rdata:10003DECo
		db 'NdrDllGetClassObject',0
		align 2
word_1000404E	dw 0D0h			; DATA XREF: .rdata:off_10003DE8o
		db 'NdrDllUnregisterProxy',0
aRpcrt4_dll	db 'RPCRT4.dll',0       ; DATA XREF: .rdata:10003D10o
		align 2
aOleaut32_dll	db 'OLEAUT32.dll',0     ; DATA XREF: .rdata:10003D24o
		align 10h
word_10004080	dw 16Fh			; DATA XREF: .rdata:10003DC8o
		db '__CppXcptFilter',0
word_10004092	dw 217h			; DATA XREF: .rdata:10003DC4o
		db '_amsg_exit',0
		align 10h
word_100040A0	dw 69h			; DATA XREF: .rdata:off_10003E38o
		db 'frex',0
		align 4
word_100040A8	dw 3A5h			; DATA XREF: .rdata:10003DC0o
		db '_malloc_crt',0
word_100040B6	dw 30Ch			; DATA XREF: .rdata:10003DBCo
		db '_initterm',0
word_100040C2	dw 30Dh			; DATA XREF: .rdata:10003DB8o
		db '_initterm_e',0
word_100040D0	dw 250h			; DATA XREF: .rdata:10003DB4o
		db '_crt_debugger_hook',0
		align 2
word_100040E6	dw 1ACh			; DATA XREF: .rdata:10003DB0o
		db '__crtUnhandledException',0
word_10004100	dw 1ABh			; DATA XREF: .rdata:10003DACo
		db '__crtTerminateProcess',0
aMsvcr120_dll	db 'MSVCR120.dll',0     ; DATA XREF: .rdata:10003D38o
		align 2
word_10004126	dw 394h			; DATA XREF: .rdata:10003DA8o
		db '_lock',0
word_1000412E	dw 504h			; DATA XREF: .rdata:10003DA4o
		db '_unlock',0
word_10004138	dw 22Eh			; DATA XREF: .rdata:10003DA0o
		db '_calloc_crt',0
word_10004146	dw 1AEh			; DATA XREF: .rdata:10003D9Co
		db '__dllonexit',0
word_10004154	dw 43Ah			; DATA XREF: .rdata:10003D98o
		db '_onexit',0
aMozglue_dll	db 'mozglue.dll',0      ; DATA XREF: .rdata:10003D4Co
word_1000416A	dw 18Ch			; DATA XREF: .rdata:10003D94o
		db '__clean_type_info_names_internal',0
		align 2
word_1000418E	dw 27Ah			; DATA XREF: .rdata:off_10003D90o
		db '_except_handler4_common',0
word_100041A8	dw 121h			; DATA XREF: .rdata:10003D88o
		db 'EncodePointer',0
word_100041B8	dw 0FEh			; DATA XREF: .rdata:10003D84o
		db 'DecodePointer',0
word_100041C8	dw 367h			; DATA XREF: .rdata:10003D80o
		db 'IsDebuggerPresent',0
word_100041DC	dw 36Dh			; DATA XREF: .rdata:10003D7Co
		db 'IsProcessorFeaturePresent',0
word_100041F8	dw 42Dh			; DATA XREF: .rdata:10003D78o
		db 'QueryPerformanceCounter',0
word_10004212	dw 20Ah			; DATA XREF: .rdata:10003D74o
		db 'GetCurrentProcessId',0
word_10004228	dw 20Eh			; DATA XREF: .rdata:10003D70o
		db 'GetCurrentThreadId',0
		align 2
word_1000423E	dw 2D6h			; DATA XREF: .rdata:10003D6Co
		db 'GetSystemTimeAsFileTime',0
word_10004258	dw 6E5h			; DATA XREF: .rdata:10003DCCo
		db 'memcmp',0
		align 1000h
_rdata		ends

; Section 4. (virtual address 00005000)
; Virtual size			: 00000428 (   1064.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00002600
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 10005000h
___security_cookie dd 0BB40E64Eh	; DATA XREF: .text:loc_1000112Ar
					; ___report_gsfailure+D3r ...
dword_10005004	dd 44BF19B1h		; DATA XREF: ___report_gsfailure+E3r
					; sub_1000185B+29w ...
		align 10h
dword_10005010	dd 0FFFFFFFFh		; DATA XREF: ___DllMainCRTStartup+1Cw
					; ___DllMainCRTStartup:$LN20w
		align 8
off_10005018	dd offset off_100032C8	; DATA XREF: .rdata:off_100032B8o
		dd offset dword_10003150
		dd offset IUnknown_QueryInterface_Proxy
		dd offset IUnknown_AddRef_Proxy
		dd offset IUnknown_Release_Proxy
		dd 6 dup(0FFFFFFFFh), 0
off_10005048	dd offset off_100034A8	; DATA XREF: .rdata:off_10003774o
		dd offset dword_100033D4
		dd offset IUnknown_QueryInterface_Proxy
		dd offset IUnknown_AddRef_Proxy
		dd offset IUnknown_Release_Proxy
		dd 0Dh dup(0FFFFFFFFh),	0
		dd 0FFFFFFFFh
off_10005098	dd offset off_100038C8	; DATA XREF: .rdata:off_10003A2Co
		dd offset dword_10003864
		dd offset IUnknown_QueryInterface_Proxy
		dd offset IUnknown_AddRef_Proxy
		dd offset IUnknown_Release_Proxy
		dd 5 dup(0FFFFFFFFh)
; ProxyFileInfo	*pProxyFileList
pProxyFileList	dd offset off_10003270	; DATA XREF: DllGetClassObjectr
					; DllGetClassObject+1Ao ...
		dd offset off_10003478
		dd offset off_10003A04
		align 10h
dword_100050D0	dd 0			; DATA XREF: sub_10001185+12r
					; sub_10001185+25w ...
		align 8
dword_100050D8	dd 0			; DATA XREF: ___report_gsfailure+9Fw
					; .rdata:off_10003148o
dword_100050DC	dd 0			; DATA XREF: ___report_gsfailure+A9w
		dd 0
dword_100050E4	dd 0			; DATA XREF: ___report_gsfailure+9Aw
dword_100050E8	dd 0			; DATA XREF: ___report_gsfailure+B3w
dword_100050EC	dd 0			; DATA XREF: ___report_gsfailure+C3w
		dd 0Eh dup(0)
dword_10005128	dd 0			; DATA XREF: ___report_gsfailure+8Bw
					; .rdata:1000314Co
		dd 22h dup(0)
word_100051B4	dw 0			; DATA XREF: ___report_gsfailure+5Fw
		align 4
word_100051B8	dw 0			; DATA XREF: ___report_gsfailure+58w
		align 4
word_100051BC	dw 0			; DATA XREF: ___report_gsfailure+51w
		align 10h
word_100051C0	dw 0			; DATA XREF: ___report_gsfailure+4Aw
		align 4
dword_100051C4	dd 0			; DATA XREF: ___report_gsfailure+36w
dword_100051C8	dd 0			; DATA XREF: ___report_gsfailure+30w
dword_100051CC	dd 0			; DATA XREF: ___report_gsfailure+2Aw
dword_100051D0	dd 0			; DATA XREF: ___report_gsfailure+24w
dword_100051D4	dd 0			; DATA XREF: ___report_gsfailure+1Ew
dword_100051D8	dd 0			; DATA XREF: ___report_gsfailure:loc_10001528w
dword_100051DC	dd 0			; DATA XREF: ___report_gsfailure+70w
dword_100051E0	dd 0			; DATA XREF: ___report_gsfailure+78w
					; ___report_gsfailure+95r
word_100051E4	dw 0			; DATA XREF: ___report_gsfailure+43w
		align 4
dword_100051E8	dd 0			; DATA XREF: ___report_gsfailure+67w
dword_100051EC	dd 0			; DATA XREF: ___report_gsfailure+80w
word_100051F0	dw 0			; DATA XREF: ___report_gsfailure+3Cw
		align 4
		dd 3 dup(0)
		dd 7Dh dup(?)
dword_100053F4	dd ?			; DATA XREF: ___raise_securityfailure+Bw
					; ___raise_securityfailure+1Dr
dword_100053F8	dd 2 dup(?)		; DATA XREF: sub_10001944o
; CStdPSFactoryBuffer pPSF
pPSF		CStdPSFactoryBuffer <?>	; DATA XREF: DllGetClassObject:loc_10001014o
					; DllCanUnloadNowo ...
; HMODULE hDll
hDll		dd ?			; DATA XREF: DllMain(x,x,x)+Cw
					; DllRegisterServer+1Ar ...
dword_10005414	dd ?			; DATA XREF: sub_10001185+20o
					; sub_10001185+112o ...
dword_10005418	dd ?			; DATA XREF: sub_10001185:loc_100011D8r
					; sub_10001185:loc_100012A1w ...
; PVOID	dword_1000541C
dword_1000541C	dd ?			; DATA XREF: _pre_c_init+1Bw
					; sub_10001185+82r ...
; PVOID	Ptr
Ptr		dd ?			; DATA XREF: _pre_c_init+16w
					; sub_10001185:loc_100011EEr ...
dword_10005424	dd ?			; DATA XREF: sub_10001185:loc_10001345r
					; sub_10001185+1C9o ...
		align 1000h
_data		ends


		end DllEntryPoint

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	20001959AC7D9A06A78E3B4BBFF9829A
; Input	CRC32 :	7AE470D8

; File Name   :	D:\compspace\objfiles\firefox\genrb\prscmnts.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		public ??_C@_0N@FBAAFECH@?$FOnote?2s?$CK?$CI?4?$CK?$CJ?$AA@
; `string'
??_C@_0N@FBAAFECH@?$FOnote?2s?$CK?$CI?4?$CK?$CJ?$AA@ db	'^note\s*(.*)',0
					; DATA XREF: .data:00000028o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ??_C@_0BC@NIKEGGP@?$FOtranslate?2s?$CK?$CI?4?$CK?$CJ?$AA@
; `string'
??_C@_0BC@NIKEGGP@?$FOtranslate?2s?$CK?$CI?4?$CK?$CJ?$AA@ db '^translate\s*(.*)',0
					; DATA XREF: .data:char	const *	* patternStringso
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 24h
		public ?patternStrings@@3PAPBDA
; char *patternStrings
?patternStrings@@3PAPBDA dd offset ??_C@_0BC@NIKEGGP@?$FOtranslate?2s?$CK?$CI?4?$CK?$CJ?$AA@
					; DATA XREF: _getCount+162r
					; _getAt+162r
					; "^translate\\s*(.*)"
		dd offset ??_C@_0N@FBAAFECH@?$FOnote?2s?$CK?$CI?4?$CK?$CJ?$AA@ ; "^note\\s*(.*)"
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl removeText(wchar_t *, int, char, int, int, int, int, int,	int, int, int, int, int, int, int, int,	int, int, unsigned int,	char, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, enum UErrorCode *)
		public _removeText
_removeText	proc near		; CODE XREF: _trim+65p	_trim+BAp ...

var_2D8		= byte ptr -2D8h
var_2D4		= byte ptr -2D4h
var_28C		= dword	ptr -28Ch
var_280		= dword	ptr -280h
var_274		= dword	ptr -274h
var_1A8		= byte ptr -1A8h
var_160		= byte ptr -160h
var_48		= byte ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h
arg_48		= dword	ptr  50h
arg_4C		= byte ptr  54h
arg_8C		= dword	ptr  94h

		push	ebp
		mov	ebp, esp
		sub	esp, 2D8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_2D8]
		mov	ecx, 0B6h ; '¶'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_8C], 0
		jz	short loc_75
		mov	eax, [ebp+arg_8C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_AE

loc_75:					; CODE XREF: _removeText+2Fj
		mov	[ebp+var_28C], 0
		mov	esi, esp
		lea	ecx, [ebp+arg_8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+arg_4C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_28C]
		jmp	loc_25F
; ---------------------------------------------------------------------------

loc_AE:					; CODE XREF: _removeText+47j
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString(wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_8C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_48]
		push	ecx		; unsigned int
		lea	edx, [ebp+var_48]
		push	edx		; struct icu_56::UnicodeString *
		lea	eax, [ebp+arg_8]
		push	eax		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_160] ; this
		call	dword ptr ds:__imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@0IAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::RegexMatcher(icu_56::UnicodeString const	&,icu_56::UnicodeString	const &,uint,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_8C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_168
		mov	[ebp+var_280], 0
		mov	esi, esp
		lea	ecx, [ebp+var_160] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+arg_8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+arg_4C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_280]
		jmp	loc_25F
; ---------------------------------------------------------------------------

loc_168:				; CODE XREF: _removeText+DAj
		mov	esi, esp
		lea	ecx, [ebp+var_1A8] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_8C]
		push	eax
		lea	ecx, [ebp+arg_4C]
		push	ecx
		lea	edx, [ebp+var_2D4]
		push	edx
		lea	ecx, [ebp+var_160]
		call	dword ptr ds:__imp_?replaceAll@RegexMatcher@icu_56@@UAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::RegexMatcher::replaceAll(icu_56::UnicodeString const &,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax
		lea	ecx, [ebp+var_1A8]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=(icu_56::UnicodeString &&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_2D4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_8C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; wchar_t *
		lea	ecx, [ebp+var_1A8] ; this
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ;	icu_56::UnicodeString::extract(wchar_t *,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_274], eax
		mov	esi, esp
		lea	ecx, [ebp+var_1A8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_160] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+arg_8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+arg_4C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_274]

loc_25F:				; CODE XREF: _removeText+7Dj
					; _removeText+137j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN10
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 2D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_removeText	endp

; ---------------------------------------------------------------------------
		align 10h
$LN10		dd 3			; DATA XREF: _removeText+237o
		dd offset $LN9
$LN9		dd 0FFFFFFB8h, 40h	; DATA XREF: .text:00000294o
		dd offset $LN6		; "src"
		dd 0FFFFFEA0h, 110h
		dd offset $LN7		; "myMatcher"
		dd 0FFFFFE58h, 40h
		dd offset $LN8		; "dest"
$LN8		db 'dest',0             ; DATA XREF: .text:000002B8o
$LN7		db 'myMatcher',0        ; DATA XREF: .text:000002ACo
$LN6		db 'src',0              ; DATA XREF: .text:000002A0o
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 2D0h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 2D4h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near ; CODE XREF: _removeText+3Ap
					; _removeText+CDp ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 304h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _trim
_trim		proc near		; CODE XREF: _removeCmtText+34p
					; _getDescription+1ADp	...

var_108		= byte ptr -108h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		push	ebx
		push	esi		; enum UErrorCode *
		push	edi		; enum UErrorCode *
		lea	edi, [ebp+var_108]
		mov	ecx, 42h ; 'B'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_104], esp
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0		; unsigned int
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_F8], esp
		mov	esi, esp
		push	offset ??_C@_0L@MBHODLNK@?$FO?$FL?5?2r?2n?$FN?$CL?5?$AA@ ; "^[ \\r\\n]+	"
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; wchar_t *
		call	_removeText
		add	esp, 90h
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_EC], esp
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0		; unsigned int
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_E0], esp
		mov	esi, esp
		push	offset ??_C@_04BPOCOCDC@?$FO?2s?$CL?$AA@ ; "^\\s+"
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; wchar_t *
		call	_removeText
		add	esp, 90h
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_D4], esp
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0		; unsigned int
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_C8], esp
		mov	esi, esp
		push	offset ??_C@_04HIEEGNPN@?2s?$CL$?$AA@ ;	"\\s+$"
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; wchar_t *
		call	_removeText
		add	esp, 90h
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_4]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 108h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_trim		endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 438h
		public ??_C@_04HIEEGNPN@?2s?$CL$?$AA@
; char `string'[]
??_C@_04HIEEGNPN@?2s?$CL$?$AA@ db '\s+$',0 ; DATA XREF: _trim+F5o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 440h
		public ??_C@_04BPOCOCDC@?$FO?2s?$CL?$AA@
; char `string'[]
??_C@_04BPOCOCDC@?$FO?2s?$CL?$AA@ db '^\s+',0 ; DATA XREF: _trim+A0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 448h
		public ??_C@_0L@MBHODLNK@?$FO?$FL?5?2r?2n?$FN?$CL?5?$AA@
; char `string'[]
??_C@_0L@MBHODLNK@?$FO?$FL?5?2r?2n?$FN?$CL?5?$AA@ db '^[ \r\n]+ ',0 ; DATA XREF: _trim+4Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 454h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _removeCmtText
_removeCmtText	proc near

var_148		= byte ptr -148h
var_144		= dword	ptr -144h
var_138		= dword	ptr -138h
var_12C		= dword	ptr -12Ch
var_120		= dword	ptr -120h
var_114		= dword	ptr -114h
var_48		= byte ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 148h
		push	ebx
		push	esi		; enum UErrorCode *
		push	edi		; int
		lea	edi, [ebp+var_148]
		mov	ecx, 52h ; 'R'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		call	_trim
		add	esp, 0Ch
		mov	[ebp+arg_4], eax
		mov	esi, esp
		push	offset ??_C@_0M@NOKHOJDH@?$FO?2s?$CK?$DP?2?$CK?2s?$CK?$DP?$AA@ ; "^\\s*?\\*\\s*?"
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_144], esp
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	8		; unsigned int
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_138], esp
		mov	esi, esp
		lea	edx, [ebp+var_48]
		push	edx		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; wchar_t *
		call	_removeText
		add	esp, 90h
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_120], esp
		mov	esi, esp
		push	offset ??_C@_01CLKCMJKC@?5?$AA@	; char *
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0		; unsigned int
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_114], esp
		mov	esi, esp
		push	offset ??_C@_08IGBGJLNF@?$FL?5?2r?2n?$FN?$CL?$AA@ ; "[ \\r\\n]+"
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; wchar_t *
		call	_removeText
		add	esp, 90h
		mov	[ebp+var_12C], eax
		mov	esi, esp
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_12C]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 148h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_removeCmtText	endp

; ---------------------------------------------------------------------------
		align 4
$LN5		dd 1			; DATA XREF: _removeCmtText+123o
		dd offset $LN4
$LN4		dd 0FFFFFFB8h, 40h	; DATA XREF: .text:000005A8o
		dd offset $LN3		; "patString"
$LN3		db 'patString',0        ; DATA XREF: .text:000005B4o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5C4h
		public ??_C@_08IGBGJLNF@?$FL?5?2r?2n?$FN?$CL?$AA@
; char `string'[]
??_C@_08IGBGJLNF@?$FL?5?2r?2n?$FN?$CL?$AA@ db '[ \r\n]+',0 ; DATA XREF: _removeCmtText+DCo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5D0h
		public ??_C@_01CLKCMJKC@?5?$AA@
; char `string'[]
??_C@_01CLKCMJKC@?5?$AA@ db 20h, 0	; DATA XREF: _removeCmtText+BBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5D4h
		public ??_C@_0M@NOKHOJDH@?$FO?2s?$CK?$DP?2?$CK?2s?$CK?$DP?$AA@
; enum UErrorCode `string'
??_C@_0M@NOKHOJDH@?$FO?2s?$CK?$DP?2?$CK?2s?$CK?$DP?$AA@	db '^\s*?\*\s*?',0
					; DATA XREF: _removeCmtText+41o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getText(wchar_t *, int, int, int,	char, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, enum UErrorCode *)
		public _getText
_getText	proc near		; CODE XREF: _getTranslate+71p
					; _getNote+71p

var_810		= byte ptr -810h
var_80C		= byte ptr -80Ch
var_7C4		= dword	ptr -7C4h
var_7B8		= dword	ptr -7B8h
var_7AC		= dword	ptr -7ACh
var_7A0		= dword	ptr -7A0h
var_794		= dword	ptr -794h
var_6C8		= byte ptr -6C8h
var_680		= dword	ptr -680h
var_674		= byte ptr -674h
var_55C		= byte ptr -55Ch
var_514		= dword	ptr -514h
var_508		= byte ptr -508h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= byte ptr  18h
arg_50		= dword	ptr  58h

		push	ebp
		mov	ebp, esp
		sub	esp, 810h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_810]
		mov	ecx, 204h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_50], 0
		jz	short loc_623
		mov	eax, [ebp+arg_50]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_64A

loc_623:				; CODE XREF: _getText+2Cj
		mov	[ebp+var_7C4], 0
		mov	esi, esp
		lea	ecx, [ebp+arg_10] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_7C4]
		jmp	loc_998
; ---------------------------------------------------------------------------

loc_64A:				; CODE XREF: _getText+41j
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax		; enum UErrorCode *
		mov	ecx, dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ	; icu_56::UnicodeString::UnicodeString(void)
		push	ecx		; unsigned int
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_L@YGXPAXIHP6EX0@Z1@Z	; `eh vector constructor iterator'(void *,uint,int,void (*)(void *),void (*)(void *))
		mov	esi, esp
		mov	eax, [ebp+arg_50]
		push	eax		; enum UErrorCode *
		push	0		; unsigned int
		mov	edi, esp
		push	offset ??_C@_01EOFPKCAF@?$EA?$AA@ ; "@"
		lea	ecx, [ebp+var_80C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z	; icu_56::RegexPattern::compile(icu_56::UnicodeString const &,uint,UErrorCode &)
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	esi, esp
		lea	ecx, [ebp+var_80C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString(wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_50]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_739
		mov	[ebp+var_7B8], 0
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	esi, esp
		lea	ecx, [ebp+arg_10] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_7B8]
		jmp	loc_998
; ---------------------------------------------------------------------------

loc_739:				; CODE XREF: _getText+105j
		mov	esi, esp
		mov	eax, [ebp+arg_50]
		push	eax
		push	14h
		lea	ecx, [ebp+var_508]
		push	ecx
		lea	edx, [ebp+var_55C]
		push	edx
		mov	eax, [ebp+var_514]
		mov	edx, [eax]
		mov	ecx, [ebp+var_514]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_50]
		push	eax		; enum UErrorCode *
		push	20h ; ' '       ; unsigned int
		lea	ecx, [ebp+arg_10]
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_674] ; this
		call	dword ptr ds:__imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z ;	icu_56::RegexMatcher::RegexMatcher(icu_56::UnicodeString const &,uint,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_50]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_804
		mov	[ebp+var_7AC], 0
		mov	esi, esp
		lea	ecx, [ebp+var_674] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	esi, esp
		lea	ecx, [ebp+arg_10] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_7AC]
		jmp	loc_998
; ---------------------------------------------------------------------------

loc_804:				; CODE XREF: _getText+1BBj
		mov	[ebp+var_680], 0
		jmp	short loc_81F
; ---------------------------------------------------------------------------

loc_810:				; CODE XREF: _getText:loc_931j
		mov	eax, [ebp+var_680]
		add	eax, 1
		mov	[ebp+var_680], eax

loc_81F:				; CODE XREF: _getText+22Ej
		cmp	[ebp+var_680], 14h
		jge	loc_936
		mov	eax, [ebp+var_680]
		shl	eax, 6
		lea	ecx, [ebp+eax+var_508]
		mov	esi, esp
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_674] ; this
		call	dword ptr ds:__imp_?reset@RegexMatcher@icu_56@@UAEAAV12@ABVUnicodeString@2@@Z ;	icu_56::RegexMatcher::reset(icu_56::UnicodeString const	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_50]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_674] ; this
		call	dword ptr ds:__imp_?lookingAt@RegexMatcher@icu_56@@UAECAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::lookingAt(UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	loc_931
		mov	esi, esp
		mov	eax, [ebp+arg_50]
		push	eax
		push	1
		lea	ecx, [ebp+var_6C8]
		push	ecx
		lea	ecx, [ebp+var_674]
		call	dword ptr ds:__imp_?group@RegexMatcher@icu_56@@UBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::group(int,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_50]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_C]
		push	ecx		; int
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		push	eax		; wchar_t *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ;	icu_56::UnicodeString::extract(wchar_t *,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_7A0], eax
		mov	esi, esp
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_674] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	ecx
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	esi, esp
		lea	ecx, [ebp+arg_10] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_7A0]
		jmp	short loc_998
; ---------------------------------------------------------------------------

loc_931:				; CODE XREF: _getText+290j
		jmp	loc_810
; ---------------------------------------------------------------------------

loc_936:				; CODE XREF: _getText+246j
		mov	[ebp+var_794], 0
		mov	esi, esp
		lea	ecx, [ebp+var_674] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	esi, esp
		lea	ecx, [ebp+arg_10] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_794]

loc_998:				; CODE XREF: _getText+65j
					; _getText+154j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN16
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 810h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getText	endp

; ---------------------------------------------------------------------------
		align 4
$LN16		dd 4			; DATA XREF: _getText+3BCo
		dd offset $LN15
$LN15		dd 0FFFFFAF8h, 500h	; DATA XREF: .text:000009CCo
		dd offset $LN11		; "stringArray"
		dd 0FFFFFAA4h, 40h
		dd offset $LN12		; "src"
		dd 0FFFFF98Ch, 110h
		dd offset $LN13		; "matcher"
		dd 0FFFFF938h, 40h
		dd offset $LN14
$LN14		dd 74756Fh		; DATA XREF: .text:000009FCo
$LN13		db 'matcher',0          ; DATA XREF: .text:000009F0o
$LN12		db 'src',0              ; DATA XREF: .text:000009E4o
$LN11		db 'stringArray',0      ; DATA XREF: .text:000009D8o
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A1Ch
		public ??_C@_01EOFPKCAF@?$EA?$AA@
; char `string'[]
??_C@_01EOFPKCAF@?$EA?$AA@ db '@',0     ; DATA XREF: _getText+91o
					; _getDescription+71o ...
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0A20h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getDescription(wchar_t *,	int, int, int, enum UErrorCode *)
		public _getDescription
_getDescription	proc near

var_698		= byte ptr -698h
var_694		= byte ptr -694h
var_64C		= dword	ptr -64Ch
var_640		= dword	ptr -640h
var_634		= dword	ptr -634h
var_568		= dword	ptr -568h
var_55C		= byte ptr -55Ch
var_514		= dword	ptr -514h
var_508		= byte ptr -508h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 698h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_698]
		mov	ecx, 1A6h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_10], 0
		jz	short loc_A63
		mov	eax, [ebp+arg_10]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_A6A

loc_A63:				; CODE XREF: _getDescription+2Cj
		xor	eax, eax
		jmp	loc_C4A
; ---------------------------------------------------------------------------

loc_A6A:				; CODE XREF: _getDescription+41j
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax		; enum UErrorCode *
		mov	ecx, dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ	; icu_56::UnicodeString::UnicodeString(void)
		push	ecx		; unsigned int
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_L@YGXPAXIHP6EX0@Z1@Z	; `eh vector constructor iterator'(void *,uint,int,void (*)(void *),void (*)(void *))
		mov	esi, esp
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		push	8		; unsigned int
		mov	edi, esp
		push	offset ??_C@_01EOFPKCAF@?$EA?$AA@ ; "@"
		lea	ecx, [ebp+var_694] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z	; icu_56::RegexPattern::compile(icu_56::UnicodeString const &,uint,UErrorCode &)
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	esi, esp
		lea	ecx, [ebp+var_694] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString(wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_10]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_B47
		mov	[ebp+var_64C], 0
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_64C]
		jmp	loc_C4A
; ---------------------------------------------------------------------------

loc_B47:				; CODE XREF: _getDescription+E5j
		mov	esi, esp
		mov	eax, [ebp+arg_10]
		push	eax
		push	14h
		lea	ecx, [ebp+var_508]
		push	ecx
		lea	edx, [ebp+var_55C]
		push	edx
		mov	eax, [ebp+var_514]
		mov	edx, [eax]
		mov	ecx, [ebp+var_514]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	40h ; '@'       ; wchar_t
		lea	ecx, [ebp+var_508] ; this
		call	dword ptr ds:__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z ; icu_56::UnicodeString::indexOf(wchar_t)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_C0F
		mov	esi, esp
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_C]
		push	ecx		; int
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		push	eax		; wchar_t *
		lea	ecx, [ebp+var_508] ; this
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ;	icu_56::UnicodeString::extract(wchar_t *,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_568], eax
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, [ebp+var_568]
		push	ecx
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		push	eax
		call	_trim
		add	esp, 0Ch
		mov	[ebp+var_640], eax
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	ecx
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_640]
		jmp	short loc_C4A
; ---------------------------------------------------------------------------

loc_C0F:				; CODE XREF: _getDescription+171j
		mov	[ebp+var_634], 0
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_634]

loc_C4A:				; CODE XREF: _getDescription+45j
					; _getDescription+122j	...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN10_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 698h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getDescription	endp

; ---------------------------------------------------------------------------
		align 4
$LN10_0		dd 2			; DATA XREF: _getDescription+22Eo
		dd offset $LN9_0
$LN9_0		dd 0FFFFFAF8h, 500h	; DATA XREF: .text:00000C80o
		dd offset $LN7_0	; "stringArray"
		dd 0FFFFFAA4h, 40h
		dd offset $LN8_0
$LN8_0		dd 637273h		; DATA XREF: .text:00000C98o
$LN7_0		db 'stringArray',0      ; DATA XREF: .text:00000C8Co
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getCount(wchar_t *, int, int, enum UErrorCode *)
		public _getCount
_getCount	proc near

var_810		= byte ptr -810h
var_80C		= byte ptr -80Ch
var_7C4		= dword	ptr -7C4h
var_7B8		= dword	ptr -7B8h
var_7AC		= dword	ptr -7ACh
var_6E0		= dword	ptr -6E0h
var_6D4		= dword	ptr -6D4h
var_6C8		= byte ptr -6C8h
var_5B0		= byte ptr -5B0h
var_568		= dword	ptr -568h
var_55C		= byte ptr -55Ch
var_514		= dword	ptr -514h
var_508		= byte ptr -508h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 810h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_810]
		mov	ecx, 204h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_C], 0
		jz	short loc_CEF
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_CF6

loc_CEF:				; CODE XREF: _getCount+2Cj
		xor	eax, eax
		jmp	loc_1006
; ---------------------------------------------------------------------------

loc_CF6:				; CODE XREF: _getCount+41j
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax		; enum UErrorCode *
		mov	ecx, dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ	; icu_56::UnicodeString::UnicodeString(void)
		push	ecx		; unsigned int
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_L@YGXPAXIHP6EX0@Z1@Z	; `eh vector constructor iterator'(void *,uint,int,void (*)(void *),void (*)(void *))
		mov	esi, esp
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		push	8		; unsigned int
		mov	edi, esp
		push	offset ??_C@_01EOFPKCAF@?$EA?$AA@ ; "@"
		lea	ecx, [ebp+var_80C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z	; icu_56::RegexPattern::compile(icu_56::UnicodeString const &,uint,UErrorCode &)
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	esi, esp
		lea	ecx, [ebp+var_80C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString(wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_DD3
		mov	[ebp+var_7C4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_7C4]
		jmp	loc_1006
; ---------------------------------------------------------------------------

loc_DD3:				; CODE XREF: _getCount+E5j
		mov	esi, esp
		mov	eax, [ebp+arg_C]
		push	eax
		push	14h
		lea	ecx, [ebp+var_508]
		push	ecx
		lea	edx, [ebp+var_55C]
		push	edx
		mov	eax, [ebp+var_514]
		mov	edx, [eax]
		mov	ecx, [ebp+var_514]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_568], eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		mov	ecx, ds:?patternStrings@@3PAPBDA[eax*4]	; char const * * patternStrings
		push	ecx		; char *
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		push	20h ; ' '       ; unsigned int
		lea	ecx, [ebp+var_5B0]
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z ;	icu_56::RegexMatcher::RegexMatcher(icu_56::UnicodeString const &,uint,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_ECA
		mov	[ebp+var_7B8], 0
		mov	esi, esp
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_7B8]
		jmp	loc_1006
; ---------------------------------------------------------------------------

loc_ECA:				; CODE XREF: _getCount+1B2j
		mov	[ebp+var_6D4], 0
		mov	[ebp+var_6E0], 0
		jmp	short loc_EEF
; ---------------------------------------------------------------------------

loc_EE0:				; CODE XREF: _getCount:loc_F52j
		mov	eax, [ebp+var_6E0]
		add	eax, 1
		mov	[ebp+var_6E0], eax

loc_EEF:				; CODE XREF: _getCount+232j
		mov	eax, [ebp+var_6E0]
		cmp	eax, [ebp+var_568]
		jge	short loc_F54
		mov	eax, [ebp+var_6E0]
		shl	eax, 6
		lea	ecx, [ebp+eax+var_508]
		mov	esi, esp
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_?reset@RegexMatcher@icu_56@@UAEAAV12@ABVUnicodeString@2@@Z ;	icu_56::RegexMatcher::reset(icu_56::UnicodeString const	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_?lookingAt@RegexMatcher@icu_56@@UAECAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::lookingAt(UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_F52
		mov	eax, [ebp+var_6D4]
		add	eax, 1
		mov	[ebp+var_6D4], eax

loc_F52:				; CODE XREF: _getCount+295j
		jmp	short loc_EE0
; ---------------------------------------------------------------------------

loc_F54:				; CODE XREF: _getCount+24Fj
		cmp	[ebp+arg_8], 0
		jnz	short loc_F9E
		cmp	[ebp+var_6D4], 1
		jle	short loc_F9E
		mov	esi, esp
		push	offset ??_C@_0CP@DPIBPAJD@Multiple?5?$EAtranslate?5tags?5cannot?5@ ; "Multiple @translate tags cannot be supp"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	10h		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_F9E:				; CODE XREF: _getCount+2ACj
					; _getCount+2B5j
		mov	eax, [ebp+var_6D4]
		mov	[ebp+var_7AC], eax
		mov	esi, esp
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	ecx
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_7AC]

loc_1006:				; CODE XREF: _getCount+45j
					; _getCount+122j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN17
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 810h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getCount	endp

; ---------------------------------------------------------------------------
		align 4
$LN17		dd 4			; DATA XREF: _getCount+35Eo
		dd offset $LN16_0
$LN16_0		dd 0FFFFFAF8h, 500h	; DATA XREF: .text:0000103Co
		dd offset $LN12_0	; "stringArray"
		dd 0FFFFFAA4h, 40h
		dd offset $LN13_0	; "src"
		dd 0FFFFFA50h, 40h
		dd offset $LN14_0	; "patternString"
		dd 0FFFFF938h, 110h
		dd offset $LN15_0	; "matcher"
$LN15_0		db 'matcher',0          ; DATA XREF: .text:0000106Co
$LN14_0		db 'patternString',0    ; DATA XREF: .text:00001060o
$LN13_0		db 'src',0              ; DATA XREF: .text:00001054o
$LN12_0		db 'stringArray',0      ; DATA XREF: .text:00001048o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1098h
		public ??_C@_0CP@DPIBPAJD@Multiple?5?$EAtranslate?5tags?5cannot?5@
; char `string'[]
??_C@_0CP@DPIBPAJD@Multiple?5?$EAtranslate?5tags?5cannot?5@ db 'Multiple @translate tags cannot be supported.',0Ah,0
					; DATA XREF: _getCount+2B9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 10C8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getAt(wchar_t *, int, int, int, int, int,	enum UErrorCode	*)
		public _getAt
_getAt		proc near

var_864		= byte ptr -864h
var_860		= byte ptr -860h
var_818		= dword	ptr -818h
var_80C		= dword	ptr -80Ch
var_800		= dword	ptr -800h
var_7F4		= dword	ptr -7F4h
var_728		= byte ptr -728h
var_6E0		= dword	ptr -6E0h
var_6D4		= dword	ptr -6D4h
var_6C8		= byte ptr -6C8h
var_5B0		= byte ptr -5B0h
var_568		= dword	ptr -568h
var_55C		= byte ptr -55Ch
var_514		= dword	ptr -514h
var_508		= byte ptr -508h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 864h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_864]
		mov	ecx, 219h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_18], 0
		jz	short loc_110B
		mov	eax, [ebp+arg_18]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_1112

loc_110B:				; CODE XREF: _getAt+2Cj
		xor	eax, eax
		jmp	loc_14AD
; ---------------------------------------------------------------------------

loc_1112:				; CODE XREF: _getAt+41j
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax		; enum UErrorCode *
		mov	ecx, dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ	; icu_56::UnicodeString::UnicodeString(void)
		push	ecx		; unsigned int
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_L@YGXPAXIHP6EX0@Z1@Z	; `eh vector constructor iterator'(void *,uint,int,void (*)(void *),void (*)(void *))
		mov	esi, esp
		mov	eax, [ebp+arg_18]
		push	eax		; enum UErrorCode *
		push	8		; unsigned int
		mov	edi, esp
		push	offset ??_C@_01EOFPKCAF@?$EA?$AA@ ; "@"
		lea	ecx, [ebp+var_860] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z	; icu_56::RegexPattern::compile(icu_56::UnicodeString const &,uint,UErrorCode &)
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	esi, esp
		lea	ecx, [ebp+var_860] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z	; icu_56::UnicodeString::UnicodeString(wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_18]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_11EF
		mov	[ebp+var_818], 0
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_818]
		jmp	loc_14AD
; ---------------------------------------------------------------------------

loc_11EF:				; CODE XREF: _getAt+E5j
		mov	esi, esp
		mov	eax, [ebp+arg_18]
		push	eax
		push	14h
		lea	ecx, [ebp+var_508]
		push	ecx
		lea	edx, [ebp+var_55C]
		push	edx
		mov	eax, [ebp+var_514]
		mov	edx, [eax]
		mov	ecx, [ebp+var_514]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_568], eax
		mov	esi, esp
		mov	eax, [ebp+arg_14]
		mov	ecx, ds:?patternStrings@@3PAPBDA[eax*4]	; char const * * patternStrings
		push	ecx		; char *
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_18]
		push	eax		; enum UErrorCode *
		push	20h ; ' '       ; unsigned int
		lea	ecx, [ebp+var_5B0]
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z ;	icu_56::RegexMatcher::RegexMatcher(icu_56::UnicodeString const &,uint,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_18]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_12E6
		mov	[ebp+var_80C], 0
		mov	esi, esp
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_80C]
		jmp	loc_14AD
; ---------------------------------------------------------------------------

loc_12E6:				; CODE XREF: _getAt+1B2j
		mov	[ebp+var_6D4], 0
		mov	[ebp+var_6E0], 0
		jmp	short loc_130B
; ---------------------------------------------------------------------------

loc_12FC:				; CODE XREF: _getAt:loc_1443j
		mov	eax, [ebp+var_6E0]
		add	eax, 1
		mov	[ebp+var_6E0], eax

loc_130B:				; CODE XREF: _getAt+232j
		mov	eax, [ebp+var_6E0]
		cmp	eax, [ebp+var_568]
		jge	loc_1448
		mov	eax, [ebp+var_6E0]
		shl	eax, 6
		lea	ecx, [ebp+eax+var_508]
		mov	esi, esp
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_?reset@RegexMatcher@icu_56@@UAEAAV12@ABVUnicodeString@2@@Z ;	icu_56::RegexMatcher::reset(icu_56::UnicodeString const	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_18]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_?lookingAt@RegexMatcher@icu_56@@UAECAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::lookingAt(UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	loc_1443
		mov	eax, [ebp+var_6D4]
		cmp	eax, [ebp+arg_10]
		jnz	loc_1434
		mov	esi, esp
		mov	eax, [ebp+arg_18]
		push	eax
		push	1
		lea	ecx, [ebp+var_728]
		push	ecx
		lea	ecx, [ebp+var_6C8]
		call	dword ptr ds:__imp_?group@RegexMatcher@icu_56@@UBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::group(int,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_18]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_C]
		push	ecx		; int
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		push	eax		; wchar_t *
		lea	ecx, [ebp+var_728] ; this
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ;	icu_56::UnicodeString::extract(wchar_t *,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_800], eax
		mov	esi, esp
		lea	ecx, [ebp+var_728] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	ecx
		push	14h
		push	40h ; '@'
		lea	edx, [ebp+var_508]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_800]
		jmp	short loc_14AD
; ---------------------------------------------------------------------------

loc_1434:				; CODE XREF: _getAt+2A8j
		mov	eax, [ebp+var_6D4]
		add	eax, 1
		mov	[ebp+var_6D4], eax

loc_1443:				; CODE XREF: _getAt+299j
		jmp	loc_12FC
; ---------------------------------------------------------------------------

loc_1448:				; CODE XREF: _getAt+24Fj
		mov	[ebp+var_7F4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_6C8] ; this
		call	dword ptr ds:__imp_??1RegexMatcher@icu_56@@UAE@XZ ; icu_56::RegexMatcher::~RegexMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_5B0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_55C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ	; icu_56::UnicodeString::~UnicodeString(void)
		push	eax
		push	14h
		push	40h ; '@'
		lea	ecx, [ebp+var_508]
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+var_7F4]

loc_14AD:				; CODE XREF: _getAt+45j _getAt+122j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN18
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 864h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getAt		endp

; ---------------------------------------------------------------------------
$LN18		dd 5			; DATA XREF: _getAt+3E9o
		dd offset $LN17_0
$LN17_0		dd 0FFFFFAF8h, 500h	; DATA XREF: .text:000014E0o
		dd offset $LN12_1	; "stringArray"
		dd 0FFFFFAA4h, 40h
		dd offset $LN13_1	; "src"
		dd 0FFFFFA50h, 40h
		dd offset $LN14_1	; "patternString"
		dd 0FFFFF938h, 110h
		dd offset $LN15_1	; "matcher"
		dd 0FFFFF8D8h, 40h
		dd offset $LN16_1
$LN16_1		dd 74756Fh		; DATA XREF: .text:0000151Co
$LN15_1		db 'matcher',0          ; DATA XREF: .text:00001510o
$LN14_1		db 'patternString',0    ; DATA XREF: .text:00001504o
$LN13_1		db 'src',0              ; DATA XREF: .text:000014F8o
$LN12_1		db 'stringArray',0      ; DATA XREF: .text:000014ECo
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 154Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getTranslate(wchar_t *, int, int,	int, int)
		public _getTranslate
_getTranslate	proc near

var_130		= byte ptr -130h
var_12C		= dword	ptr -12Ch
var_120		= dword	ptr -120h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 130h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_130]
		mov	ecx, 4Ch ; 'L'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	esi, esp
		push	offset ??_C@_0BD@IFPBIHOJ@?$FOtranslate?2s?$CK?$DP?$CI?4?$CK?$CJ?$AA@ ;	"^translate\\s*?(.*)"
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_12C], esp
		mov	esi, esp
		lea	edx, [ebp+var_48]
		push	edx		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_C]
		push	eax		; int
		mov	ecx, [ebp+arg_8]
		push	ecx		; int
		mov	edx, [ebp+arg_4]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; wchar_t *
		call	_getText
		add	esp, 54h
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		push	eax
		call	_trim
		add	esp, 0Ch
		mov	[ebp+var_120], eax
		mov	esi, esp
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_120]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 130h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getTranslate	endp

; ---------------------------------------------------------------------------
		align 4
$LN5_0		dd 1			; DATA XREF: _getTranslate+B4o
		dd offset $LN4_0
$LN4_0		dd 0FFFFFFB8h, 40h	; DATA XREF: .text:00001630o
		dd offset $LN3_0	; "notePatternString"
$LN3_0		db 'notePatternString',0 ; DATA XREF: .text:0000163Co
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1654h
		public ??_C@_0BD@IFPBIHOJ@?$FOtranslate?2s?$CK?$DP?$CI?4?$CK?$CJ?$AA@
; enum UErrorCode `string'
??_C@_0BD@IFPBIHOJ@?$FOtranslate?2s?$CK?$DP?$CI?4?$CK?$CJ?$AA@ db '^translate\s*?(.*)',0
					; DATA XREF: _getTranslate+2Ao
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1668h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getNote(wchar_t *, int, int, int,	int)
		public _getNote
_getNote	proc near

var_130		= byte ptr -130h
var_12C		= dword	ptr -12Ch
var_120		= dword	ptr -120h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 130h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_130]
		mov	ecx, 4Ch ; 'L'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	esi, esp
		push	offset ??_C@_0O@PNKKMEFJ@?$FOnote?2s?$CK?$DP?$CI?4?$CK?$CJ?$AA@	; "^note\\s*?(.*)"
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBD@Z ;	icu_56::UnicodeString::UnicodeString(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		sub	esp, 40h
		mov	ecx, esp	; this
		mov	[ebp+var_12C], esp
		mov	esi, esp
		lea	edx, [ebp+var_48]
		push	edx		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_C]
		push	eax		; int
		mov	ecx, [ebp+arg_8]
		push	ecx		; int
		mov	edx, [ebp+arg_4]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; wchar_t *
		call	_getText
		add	esp, 54h
		mov	[ebp+var_54], eax
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+arg_8]
		mov	eax, [edx]
		push	eax
		call	_trim
		add	esp, 0Ch
		mov	[ebp+var_120], eax
		mov	esi, esp
		lea	ecx, [ebp+var_48] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_120]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5_1
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 130h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getNote	endp

; ---------------------------------------------------------------------------
		align 4
$LN5_1		dd 1			; DATA XREF: _getNote+B4o
		dd offset $LN4_1
$LN4_1		dd 0FFFFFFB8h, 40h	; DATA XREF: .text:0000174Co
		dd offset $LN3_1	; "notePatternString"
$LN3_1		db 'notePatternString',0 ; DATA XREF: .text:00001758o
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1770h
		public ??_C@_0O@PNKKMEFJ@?$FOnote?2s?$CK?$DP?$CI?4?$CK?$CJ?$AA@
; enum UErrorCode `string'
??_C@_0O@PNKKMEFJ@?$FOnote?2s?$CK?$DP?$CI?4?$CK?$CJ?$AA@ db '^note\s*?(.*)',0
					; DATA XREF: _getNote+2Ao
_rdata		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; int __thiscall icu_56::UnicodeString::extract(icu_56::UnicodeString *__hidden	this, wchar_t *, int, enum UErrorCode *)
		extrn __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:near
					; CODE XREF: _removeText+1BAp
					; _getText+2CEp ...
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString &&)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:near
					; CODE XREF: _removeText+181p
					; DATA XREF: _removeText+181r
; struct icu_56::UnicodeString __thiscall __high icu_56::RegexMatcher::replaceAll(const	struct icu_56::UnicodeString *,	enum UErrorCode	*)
		extrn __imp_?replaceAll@RegexMatcher@icu_56@@UAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z:near
					; CODE XREF: _removeText+16Bp
					; DATA XREF: _removeText+16Br
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near
					; CODE XREF: _removeText+144p
					; _trim+2Fp ...
; _DWORD __thiscall icu_56::RegexMatcher::~RegexMatcher(icu_56::RegexMatcher *__hidden this)
		extrn __imp_??1RegexMatcher@icu_56@@UAE@XZ:near	; CODE XREF: _removeText+EEp
					; _removeText+1EAp ...
; _DWORD __thiscall icu_56::RegexMatcher::RegexMatcher(icu_56::RegexMatcher *__hidden this, const struct icu_56::UnicodeString *, const	struct icu_56::UnicodeString *,	unsigned int, enum UErrorCode *)
		extrn __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@0IAAW4UErrorCode@@@Z:near
					; CODE XREF: _removeText+B7p
					; DATA XREF: _removeText+B7r
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const wchar_t *,	int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:near
					; CODE XREF: _removeText+8Fp
					; _getText+E5p	...
; enum UErrorCode *icu_56::UnicodeString::~UnicodeString
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near
					; CODE XREF: _removeText+58p
					; _removeText+6Ap ...
		extrn ___security_cookie:near ;	DATA XREF: _removeText+1Er
					; _removeCmtText+1Er ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _removeText+24Cp
					; _removeCmtText+138p ...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _removeText+23Dp
					; _removeCmtText+129p ...
		extrn __RTC_CheckEsp:near ; CODE XREF: _removeText+60p
					; _removeText+72p ...
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const char *)
		extrn __imp_??0UnicodeString@icu_56@@QAE@PBD@Z:near ; CODE XREF: _trim+50p
					; _trim+A5p ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const struct icu_56::UnicodeString *)
		extrn __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: _removeCmtText+87p
					; _getTranslate+54p ...
; struct icu_56::UnicodeString __thiscall __high icu_56::RegexMatcher::group(int, enum UErrorCode *)
		extrn __imp_?group@RegexMatcher@icu_56@@UBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z:near
					; CODE XREF: _getText+2ABp _getAt+2C3p
					; DATA XREF: ...
; signed __int8	__thiscall icu_56::RegexMatcher::lookingAt(icu_56::RegexMatcher	*__hidden this,	enum UErrorCode	*)
		extrn __imp_?lookingAt@RegexMatcher@icu_56@@UAECAAW4UErrorCode@@@Z:near
					; CODE XREF: _getText+27Ep
					; _getCount+283p ...
; struct icu_56::RegexMatcher *__thiscall icu_56::RegexMatcher::reset(icu_56::RegexMatcher *__hidden this, const struct	icu_56::UnicodeString *)
		extrn __imp_?reset@RegexMatcher@icu_56@@UAEAAV12@ABVUnicodeString@2@@Z:near
					; CODE XREF: _getText+265p
					; _getCount+26Ap ...
; _DWORD __thiscall icu_56::RegexMatcher::RegexMatcher(icu_56::RegexMatcher *__hidden this, const struct icu_56::UnicodeString *, unsigned int,	enum UErrorCode	*)
		extrn __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z:near
					; CODE XREF: _getText+19Bp
					; _getCount+192p ...
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near ; CODE XREF: _getText+137p
					; _getText+202p ...
; struct icu_56::RegexPattern *__cdecl static icu_56::RegexPattern::compile(const struct icu_56::UnicodeString *, unsigned int,	enum UErrorCode	*)
		extrn __imp_?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z:near
					; CODE XREF: _getText+AAp
					; _getDescription+8Ap ...
; void __stdcall `eh vector constructor	iterator'(void *, unsigned int, int, void (__thiscall *)(void *), void (__thiscall *)(void *))
		extrn ??_L@YGXPAXIHP6EX0@Z1@Z:near ; CODE XREF:	_getText+82p
					; _getDescription+62p ...
; int __thiscall icu_56::UnicodeString::indexOf(icu_56::UnicodeString *__hidden	this, wchar_t)
		extrn __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:near
					; CODE XREF: _getDescription+161p
					; DATA XREF: _getDescription+161r
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _getCount+2E5p
					; DATA XREF: _getCount+2E5r
; int _fprintf(FILE *File, const char *Format, ...)
		extrn __imp__fprintf:near ; CODE XREF: _getCount+2D1p
					; DATA XREF: _getCount+2D1r
; FILE *__cdecl	___iob_func()
		extrn __imp____iob_func:near ; CODE XREF: _getCount+2C0p
					; DATA XREF: _getCount+2C0r


		end

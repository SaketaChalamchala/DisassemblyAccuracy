;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	8C5962CFF564C36F3897AA5CA389DAAE
; Input	CRC32 :	10653224

; File Name   :	D:\compspace\objfiles\firefox\freehelper\ftotval.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRTD"

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
$SG7053		db '..\..\..\src\base\ftotval.c',0 ; DATA XREF: _FT_OpenType_Validate+1Eo
$SG7057		db '..\..\..\src\base\ftotval.c',0
					; DATA XREF: _FT_OpenType_Validate:loc_C0o
$SG7065		db 'opentype-validate',0 ; DATA XREF: _FT_OpenType_Validate+7Ao
		align 4
$SG7068		db '..\..\..\src\base\ftotval.c',0
					; DATA XREF: _FT_OpenType_Validate:loc_13Ao
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 68h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_OpenType_Validate
_FT_OpenType_Validate proc near

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	esi
		mov	eax, 0CCCCCCCCh
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], eax
		mov	[ebp+var_8], eax
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_0], 0
		jnz	short loc_A2
		push	offset $SG7053	; "..\\..\\..\\src\\base\\ftotval.c"
		push	2Bh ; '+'
		push	23h ; '#'
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 23h
		mov	[ebp+var_8], eax
		jmp	$Exit$11
; ---------------------------------------------------------------------------

loc_A2:					; CODE XREF: _FT_OpenType_Validate+1Cj
		cmp	[ebp+arg_8], 0
		jz	short loc_C0
		cmp	[ebp+arg_C], 0
		jz	short loc_C0
		cmp	[ebp+arg_10], 0
		jz	short loc_C0
		cmp	[ebp+arg_14], 0
		jz	short loc_C0
		cmp	[ebp+arg_18], 0
		jnz	short loc_D9

loc_C0:					; CODE XREF: _FT_OpenType_Validate+3Ej
					; _FT_OpenType_Validate+44j ...
		push	offset $SG7057	; "..\\..\\..\\src\\base\\ftotval.c"
		push	35h ; '5'
		push	6
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 6
		mov	[ebp+var_8], eax
		jmp	short $Exit$11
; ---------------------------------------------------------------------------

loc_D9:					; CODE XREF: _FT_OpenType_Validate+56j
					; _FT_OpenType_Validate+96j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	[ebp+var_C], ecx
		push	offset $SG7065	; "opentype-validate"
		mov	edx, [ebp+var_C]
		push	edx
		call	_ft_module_get_service
		add	esp, 8
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		mov	[ebp+var_4], eax
		xor	ecx, ecx
		jnz	short loc_D9
		cmp	[ebp+var_4], 0
		jz	short loc_13A
		mov	esi, esp
		mov	edx, [ebp+arg_18]
		push	edx
		mov	eax, [ebp+arg_14]
		push	eax
		mov	ecx, [ebp+arg_10]
		push	ecx
		mov	edx, [ebp+arg_C]
		push	edx
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_4]
		mov	ecx, [eax]
		call	ecx
		add	esp, 1Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_8], eax
		jmp	short $Exit$11
; ---------------------------------------------------------------------------

loc_13A:				; CODE XREF: _FT_OpenType_Validate+9Cj
		push	offset $SG7068	; "..\\..\\..\\src\\base\\ftotval.c"
		push	44h ; 'D'
		push	7
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 7
		mov	[ebp+var_8], eax

$Exit$11:				; CODE XREF: _FT_OpenType_Validate+35j
					; _FT_OpenType_Validate+6Fj ...
		mov	eax, [ebp+var_8]
		pop	esi
		add	esp, 10h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_OpenType_Validate endp

; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_OpenType_Free
_FT_OpenType_Free proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ecx
		mov	[ebp+var_4], 0CCCCCCCCh
		cmp	[ebp+arg_0], 0
		jnz	short loc_17B
		jmp	short loc_19F
; ---------------------------------------------------------------------------

loc_17B:				; CODE XREF: _FT_OpenType_Free+Fj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+64h]
		mov	[ebp+var_4], ecx

loc_184:				; CODE XREF: _FT_OpenType_Free+35j
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+var_4]
		push	eax
		call	_ft_mem_free
		add	esp, 8
		mov	[ebp+arg_4], 0
		xor	ecx, ecx
		jnz	short loc_184

loc_19F:				; CODE XREF: _FT_OpenType_Free+11j
		add	esp, 4
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_OpenType_Free endp

; ---------------------------------------------------------------------------
		align 10h
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 1B0h
; COMDAT (pick any)
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 1B4h
; COMDAT (pick any)
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _FT_Throw:near	; CODE XREF: _FT_OpenType_Validate+27p
					; _FT_OpenType_Validate+61p ...
		extrn _ft_mem_free:near	; CODE XREF: _FT_OpenType_Free+24p
		extrn _ft_module_get_service:near ; CODE XREF: _FT_OpenType_Validate+83p
		extrn __RTC_CheckEsp:near ; CODE XREF: _FT_OpenType_Validate+C8p
					; _FT_OpenType_Validate+F2p ...
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo


		end

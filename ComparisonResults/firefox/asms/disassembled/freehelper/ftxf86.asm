;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F9DD8C023BD214F78064CFE95CAE9B1D
; Input	CRC32 :	4D7A66D6

; File Name   :	D:\compspace\objfiles\firefox\freehelper\ftxf86.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRTD"

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
$SG6862		db 'xf86-driver-name',0 ; DATA XREF: _FT_Get_X11_Font_Format+46o
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 14h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_Get_X11_Font_Format
_FT_Get_X11_Font_Format	proc near

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0Ch
		push	esi
		mov	[ebp+var_C], 0CCCCCCCCh
		mov	[ebp+var_8], 0CCCCCCCCh
		mov	[ebp+var_4], 0CCCCCCCCh
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jz	short loc_84

loc_3D:					; CODE XREF: _FT_Get_X11_Font_Format+6Ej
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	[ebp+var_8], ecx
		mov	[ebp+var_C], 0
		mov	edx, [ebp+var_8]
		mov	eax, [edx]
		cmp	dword ptr [eax+20h], 0
		jz	short loc_7A
		mov	esi, esp
		push	offset $SG6862	; "xf86-driver-name"
		mov	ecx, [ebp+var_8]
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx]
		mov	ecx, [eax+20h]
		call	ecx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C], eax

loc_7A:					; CODE XREF: _FT_Get_X11_Font_Format+42j
		mov	edx, [ebp+var_C]
		mov	[ebp+var_4], edx
		xor	eax, eax
		jnz	short loc_3D

loc_84:					; CODE XREF: _FT_Get_X11_Font_Format+27j
		mov	eax, [ebp+var_4]
		pop	esi
		add	esp, 0Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_Get_X11_Font_Format	endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 98h
; COMDAT (pick any)
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 9Ch
; COMDAT (pick any)
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_CheckEsp:near ; CODE XREF: _FT_Get_X11_Font_Format+5Ep
					; _FT_Get_X11_Font_Format+79p
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo


		end

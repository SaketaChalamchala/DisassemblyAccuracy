;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	0C2EA3C3B77C50A0E64F32EBC404E4AC
; Input	CRC32 :	B254EC98

; File Name   :	D:\compspace\objfiles\firefox\freehelper\fttype1.obj
; Format      :	COFF (X386MAGIC)
; includelib "MSVCRTD"

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
$SG7516		db '..\..\..\src\base\fttype1.c',0 ; DATA XREF: _FT_Get_PS_Font_Info+1Eo
$SG7518		db '..\..\..\src\base\fttype1.c',0 ; DATA XREF: _FT_Get_PS_Font_Info+3Do
$SG7528		db 'postscript-info',0  ; DATA XREF: _FT_Get_PS_Font_Info+73o
$SG7531		db '..\..\..\src\base\fttype1.c',0
					; DATA XREF: _FT_Get_PS_Font_Info:loc_263o
$SG7547		db 'postscript-info',0  ; DATA XREF: _FT_Has_PS_Glyph_Names+42o
$SG7557		db '..\..\..\src\base\fttype1.c',0 ; DATA XREF: _FT_Get_PS_Font_Private+1Eo
$SG7559		db '..\..\..\src\base\fttype1.c',0 ; DATA XREF: _FT_Get_PS_Font_Private+3Do
$SG7569		db 'postscript-info',0  ; DATA XREF: _FT_Get_PS_Font_Private+73o
$SG7572		db '..\..\..\src\base\fttype1.c',0
					; DATA XREF: _FT_Get_PS_Font_Private:loc_365o
$SG7597		db 'postscript-info',0  ; DATA XREF: _FT_Get_PS_Font_Value+4Do
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$mn	segment	para public 'CODE' use32
		assume cs:_text$mn
		;org 0E8h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_Has_PS_Glyph_Names
_FT_Has_PS_Glyph_Names proc near

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	esi
		mov	eax, 0CCCCCCCCh
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], eax
		mov	[ebp+var_8], eax
		mov	[ebp+var_4], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jz	short loc_17E

loc_10D:				; CODE XREF: _FT_Has_PS_Glyph_Names+6Aj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], 0
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		cmp	dword ptr [eax+20h], 0
		jz	short loc_14A
		mov	esi, esp
		push	offset $SG7547	; "postscript-info"
		mov	ecx, [ebp+var_C]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [eax+20h]
		call	ecx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_10], eax

loc_14A:				; CODE XREF: _FT_Has_PS_Glyph_Names+3Ej
		mov	edx, [ebp+var_10]
		mov	[ebp+var_8], edx
		xor	eax, eax
		jnz	short loc_10D
		cmp	[ebp+var_8], 0
		jz	short loc_17E
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+8], 0
		jz	short loc_17E
		mov	esi, esp
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		call	ecx
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], eax

loc_17E:				; CODE XREF: _FT_Has_PS_Glyph_Names+23j
					; _FT_Has_PS_Glyph_Names+70j ...
		mov	eax, [ebp+var_4]
		pop	esi
		add	esp, 10h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_Has_PS_Glyph_Names endp

; ---------------------------------------------------------------------------
		db 8 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_Get_PS_Font_Info
_FT_Get_PS_Font_Info proc near

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	esi
		mov	eax, 0CCCCCCCCh
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], eax
		mov	[ebp+var_8], eax
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_0], 0
		jnz	short loc_1CF
		push	offset $SG7516	; "..\\..\\..\\src\\base\\fttype1.c"
		push	25h ; '%'
		push	23h ; '#'
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 23h
		jmp	loc_27D
; ---------------------------------------------------------------------------

loc_1CF:				; CODE XREF: _FT_Get_PS_Font_Info+1Cj
		cmp	[ebp+arg_4], 0
		jnz	short loc_1EE
		push	offset $SG7518	; "..\\..\\..\\src\\base\\fttype1.c"
		push	28h ; '('
		push	6
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 6
		jmp	loc_27D
; ---------------------------------------------------------------------------

loc_1EE:				; CODE XREF: _FT_Get_PS_Font_Info+3Bj
					; _FT_Get_PS_Font_Info+9Bj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], 0
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		cmp	dword ptr [eax+20h], 0
		jz	short loc_22B
		mov	esi, esp
		push	offset $SG7528	; "postscript-info"
		mov	ecx, [ebp+var_C]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [eax+20h]
		call	ecx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_10], eax

loc_22B:				; CODE XREF: _FT_Get_PS_Font_Info+6Fj
		mov	edx, [ebp+var_10]
		mov	[ebp+var_8], edx
		xor	eax, eax
		jnz	short loc_1EE
		cmp	[ebp+var_8], 0
		jz	short loc_263
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx], 0
		jz	short loc_263
		mov	esi, esp
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		call	edx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], eax
		jmp	short loc_27A
; ---------------------------------------------------------------------------

loc_263:				; CODE XREF: _FT_Get_PS_Font_Info+A1j
					; _FT_Get_PS_Font_Info+A9j
		push	offset $SG7531	; "..\\..\\..\\src\\base\\fttype1.c"
		push	2Fh ; '/'
		push	6
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 6
		mov	[ebp+var_4], eax

loc_27A:				; CODE XREF: _FT_Get_PS_Font_Info+C9j
		mov	eax, [ebp+var_4]

loc_27D:				; CODE XREF: _FT_Get_PS_Font_Info+32j
					; _FT_Get_PS_Font_Info+51j
		pop	esi
		add	esp, 10h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_Get_PS_Font_Info endp

; ---------------------------------------------------------------------------
		db 0Ch dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_Get_PS_Font_Private
_FT_Get_PS_Font_Private	proc near

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	esi
		mov	eax, 0CCCCCCCCh
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], eax
		mov	[ebp+var_8], eax
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_0], 0
		jnz	short loc_2CF
		push	offset $SG7557	; "..\\..\\..\\src\\base\\fttype1.c"
		push	55h ; 'U'
		push	23h ; '#'
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 23h
		jmp	loc_37F
; ---------------------------------------------------------------------------

loc_2CF:				; CODE XREF: _FT_Get_PS_Font_Private+1Cj
		cmp	[ebp+arg_4], 0
		jnz	short loc_2EE
		push	offset $SG7559	; "..\\..\\..\\src\\base\\fttype1.c"
		push	58h ; 'X'
		push	6
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 6
		jmp	loc_37F
; ---------------------------------------------------------------------------

loc_2EE:				; CODE XREF: _FT_Get_PS_Font_Private+3Bj
					; _FT_Get_PS_Font_Private+9Bj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], 0
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		cmp	dword ptr [eax+20h], 0
		jz	short loc_32B
		mov	esi, esp
		push	offset $SG7569	; "postscript-info"
		mov	ecx, [ebp+var_C]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [eax+20h]
		call	ecx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_10], eax

loc_32B:				; CODE XREF: _FT_Get_PS_Font_Private+6Fj
		mov	edx, [ebp+var_10]
		mov	[ebp+var_8], edx
		xor	eax, eax
		jnz	short loc_2EE
		cmp	[ebp+var_8], 0
		jz	short loc_365
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+0Ch], 0
		jz	short loc_365
		mov	esi, esp
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+0Ch]
		call	edx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], eax
		jmp	short loc_37C
; ---------------------------------------------------------------------------

loc_365:				; CODE XREF: _FT_Get_PS_Font_Private+A1j
					; _FT_Get_PS_Font_Private+AAj
		push	offset $SG7572	; "..\\..\\..\\src\\base\\fttype1.c"
		push	5Fh ; '_'
		push	6
		call	_FT_Throw
		add	esp, 0Ch
		or	eax, 6
		mov	[ebp+var_4], eax

loc_37C:				; CODE XREF: _FT_Get_PS_Font_Private+CBj
		mov	eax, [ebp+var_4]

loc_37F:				; CODE XREF: _FT_Get_PS_Font_Private+32j
					; _FT_Get_PS_Font_Private+51j
		pop	esi
		add	esp, 10h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_Get_PS_Font_Private	endp

; ---------------------------------------------------------------------------
		db 0Ah dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _FT_Get_PS_Font_Value
_FT_Get_PS_Font_Value proc near

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	esi
		mov	eax, 0CCCCCCCCh
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], eax
		mov	[ebp+var_8], eax
		mov	[ebp+var_4], eax
		mov	[ebp+var_4], 0
		mov	[ebp+var_8], 0
		cmp	[ebp+arg_0], 0
		jz	loc_449

loc_3C8:				; CODE XREF: _FT_Get_PS_Font_Value+75j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+60h]
		mov	[ebp+var_C], ecx
		mov	[ebp+var_10], 0
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		cmp	dword ptr [eax+20h], 0
		jz	short loc_405
		mov	esi, esp
		push	offset $SG7597	; "postscript-info"
		mov	ecx, [ebp+var_C]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [eax+20h]
		call	ecx
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_10], eax

loc_405:				; CODE XREF: _FT_Get_PS_Font_Value+49j
		mov	edx, [ebp+var_10]
		mov	[ebp+var_8], edx
		xor	eax, eax
		jnz	short loc_3C8
		cmp	[ebp+var_8], 0
		jz	short loc_449
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+10h], 0
		jz	short loc_449
		mov	esi, esp
		mov	edx, [ebp+arg_10]
		push	edx
		mov	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+10h]
		call	edx
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], eax

loc_449:				; CODE XREF: _FT_Get_PS_Font_Value+2Aj
					; _FT_Get_PS_Font_Value+7Bj ...
		mov	eax, [ebp+var_4]
		pop	esi
		add	esp, 10h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_FT_Get_PS_Font_Value endp

; ---------------------------------------------------------------------------
		align 4
_text$mn	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 45Ch
; COMDAT (pick any)
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 460h
; COMDAT (pick any)
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _FT_Throw:near	; CODE XREF: _FT_Get_PS_Font_Info+27p
					; _FT_Get_PS_Font_Info+46p ...
		extrn __RTC_CheckEsp:near ; CODE XREF: _FT_Has_PS_Glyph_Names+5Ap
					; _FT_Has_PS_Glyph_Names+8Ep ...
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo


		end

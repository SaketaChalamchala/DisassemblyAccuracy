;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	E13832A74A4CAA0D0F6C00043F6A6926
; Input	CRC32 :	726D4F18

; File Name   :	D:\compspace\objfiles\firefox\icupkg\icupkg.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		public ??_C@_0L@FGHKEDMG@toc_prefix?$AA@
; `string'
??_C@_0L@FGHKEDMG@toc_prefix?$AA@ db 'toc_prefix',0 ; DATA XREF: .data:000001ECo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@
; `string'
??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@ db 'auto_toc_prefix_with_type',0
					; DATA XREF: .data:000001D8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@
; `string'
??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@	db 'auto_toc_prefix',0 ; DATA XREF: .data:000001C4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ??_C@_07LKPNGKOE@outlist?$AA@
; `string'
??_C@_07LKPNGKOE@outlist?$AA@ db 'outlist',0 ; DATA XREF: .data:000001B0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ??_C@_04DONFEANM@list?$AA@
; `string'
??_C@_04DONFEANM@list?$AA@ db 'list',0  ; DATA XREF: .data:0000019Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ??_C@_07EMKILFJA@extract?$AA@
; `string'
??_C@_07EMKILFJA@extract?$AA@ db 'extract',0 ; DATA XREF: .data:00000188o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ??_C@_06LEMKAMD@remove?$AA@
; `string'
??_C@_06LEMKAMD@remove?$AA@ db 'remove',0 ; DATA XREF: .data:00000174o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ??_C@_03BDGOHNNK@add?$AA@
; `string'
??_C@_03BDGOHNNK@add?$AA@ dd 646461h	; DATA XREF: .data:00000160o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ??_C@_09FACEGBDM@matchmode?$AA@
; `string'
??_C@_09FACEGBDM@matchmode?$AA@	db 'matchmode',0 ; DATA XREF: .data:0000014Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ??_C@_08LJAPBEEB@writepkg?$AA@
; `string'
??_C@_08LJAPBEEB@writepkg?$AA@ db 'writepkg',0 ; DATA XREF: .data:00000138o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ??_C@_07HIFNFPHK@destdir?$AA@
; `string'
??_C@_07HIFNFPHK@destdir?$AA@ db 'destdir',0 ; DATA XREF: .data:00000124o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ??_C@_09CMGPLHNH@sourcedir?$AA@
; `string'
??_C@_09CMGPLHNH@sourcedir?$AA@	db 'sourcedir',0 ; DATA XREF: .data:00000110o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ??_C@_07GJGNEJFD@comment?$AA@
; `string'
??_C@_07GJGNEJFD@comment?$AA@ db 'comment',0 ; DATA XREF: .data:000000FCo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ??_C@_09JHBDCMB@copyright?$AA@
; `string'
??_C@_09JHBDCMB@copyright?$AA@ db 'copyright',0 ; DATA XREF: .data:000000E8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ??_C@_04GPMDFGEJ@type?$AA@
; `string'
??_C@_04GPMDFGEJ@type?$AA@ db 'type',0  ; DATA XREF: .data:000000D4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ??_C@_04PCJFHION@help?$AA@
; `string'
??_C@_04PCJFHION@help?$AA@ db 'help',0  ; DATA XREF: .data:_optionso
					; .data:000000C0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 0ACh
_options	dd offset ??_C@_04PCJFHION@help?$AA@ ; DATA XREF: _main+5Bo
					; "help"
		dd 3 dup(0)
		db 68h,	0
byte_BE		db 0			; DATA XREF: _main+75r
		align 10h
		dd offset ??_C@_04PCJFHION@help?$AA@ ; "help"
		align 10h
		db 3Fh,	0
byte_D2		db 0			; DATA XREF: _main+80r
		align 4
		dd offset ??_C@_04GPMDFGEJ@type?$AA@ ; "type"
dword_D8	dd 0			; DATA XREF: _main+3BEr
		dd 2 dup(0)
		db 74h,	1
byte_E6		db 0			; DATA XREF: _main:loc_5B3r
		align 4
		dd offset ??_C@_09JHBDCMB@copyright?$AA@ ; "copyright"
		dd 3 dup(0)
		db 63h,	0
byte_FA		db 0			; DATA XREF: _main+4E6r _main:loc_7D0r
		align 4
		dd offset ??_C@_07GJGNEJFD@comment?$AA@	; "comment"
dword_100	dd 0			; DATA XREF: _main+5C2r
		dd 2 dup(0)
		db 43h,	1
byte_10E	db 0			; DATA XREF: _main+4DBr _main:loc_7BBr
		align 10h
		dd offset ??_C@_09CMGPLHNH@sourcedir?$AA@ ; "sourcedir"
dword_114	dd 0			; DATA XREF: _main+258r
		align 10h
		db 73h,	1
byte_122	db 0			; DATA XREF: _main:loc_451r
		align 4
		dd offset ??_C@_07HIFNFPHK@destdir?$AA@	; "destdir"
dword_128	dd 0			; DATA XREF: _main+274r
		dd 2 dup(0)
		db 64h,	1
byte_136	db 0			; DATA XREF: _main:loc_46Dr
		align 4
		dd offset ??_C@_08LJAPBEEB@writepkg?$AA@ ; "writepkg"
		dd 3 dup(0)
		db 77h,	0
byte_14A	db 0			; DATA XREF: _main:loc_6C1r
		align 4
		dd offset ??_C@_09FACEGBDM@matchmode?$AA@ ; "matchmode"
; char *Str1
Str1		dd 0			; DATA XREF: _main+5F7r
		dd 2 dup(0)
		db 6Dh,	1
byte_15E	db 0			; DATA XREF: _main+4F1r _main:loc_7EBr
		align 10h
		dd offset ??_C@_03BDGOHNNK@add?$AA@ ; `string'
dword_164	dd 0			; DATA XREF: _main+85Dr
		align 10h
		db 61h,	1
byte_172	db 0			; DATA XREF: _main+507r _main+798r
		align 4
		dd offset ??_C@_06LEMKAMD@remove?$AA@ ;	"remove"
dword_178	dd 0			; DATA XREF: _main+6FFr
		dd 2 dup(0)
		db 72h,	1
byte_186	db 0			; DATA XREF: _main+4FCr _main:loc_83Er
		align 4
		dd offset ??_C@_07EMKILFJA@extract?$AA@	; "extract"
dword_18C	dd 0			; DATA XREF: _main+973r
		dd 2 dup(0)
		db 78h,	1
byte_19A	db 0			; DATA XREF: _main+512r _main:loc_AB2r
		align 4
		dd offset ??_C@_04DONFEANM@list?$AA@ ; "list"
		dd 3 dup(0)
		db 6Ch,	0
byte_1AE	db 0			; DATA XREF: _main+51Dr _main:loc_C0Br
		align 10h
		dd offset ??_C@_07LKPNGKOE@outlist?$AA@	; "outlist"
dword_1B4	dd 0			; DATA XREF: _main+A2Ar
		align 10h
		db 6Fh,	1
byte_1C2	db 0			; DATA XREF: _main+A16r
		align 4
		dd offset ??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@ ; "auto_toc_prefix"
		dd 3 dup(0)
		db 1, 0
byte_1D6	db 0			; DATA XREF: _main+175r
		align 4
		dd offset ??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@ ; "auto_toc_prefix_with_type"
		dd 3 dup(0)
		db 1, 0
byte_1EA	db 0			; DATA XREF: _main:loc_3A8r
		align 4
		dd offset ??_C@_0L@FGHKEDMG@toc_prefix?$AA@ ; "toc_prefix"
; char *dword_1F0
dword_1F0	dd 0			; DATA XREF: _main+CADr
		dd 2 dup(0)
		db 2 dup(1)
byte_1FE	db 0			; DATA XREF: _main+1AFr _main:loc_EA4r
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 200h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
		public ?_CRT_glob@@3HA
; int _CRT_glob
?_CRT_glob@@3HA	dd ?
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 204h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

var_6A8		= dword	ptr -6A8h
var_6A0		= dword	ptr -6A0h
var_694		= dword	ptr -694h
var_688		= dword	ptr -688h
var_67C		= dword	ptr -67Ch
var_670		= dword	ptr -670h
var_664		= dword	ptr -664h
var_658		= dword	ptr -658h
var_64C		= dword	ptr -64Ch
var_640		= dword	ptr -640h
var_634		= dword	ptr -634h
var_628		= dword	ptr -628h
var_61C		= dword	ptr -61Ch
var_610		= dword	ptr -610h
var_604		= dword	ptr -604h
var_5F8		= dword	ptr -5F8h
var_5EC		= dword	ptr -5ECh
var_5E0		= dword	ptr -5E0h
var_5D4		= dword	ptr -5D4h
var_508		= dword	ptr -508h
Buf2		= dword	ptr -4FCh
var_4F8		= word ptr -4F8h
Dest		= byte ptr -4ECh
var_E4		= dword	ptr -0E4h
var_D8		= dword	ptr -0D8h
var_CC		= dword	ptr -0CCh
var_C0		= dword	ptr -0C0h
var_B4		= dword	ptr -0B4h
var_A8		= dword	ptr -0A8h
var_9C		= dword	ptr -9Ch
var_90		= dword	ptr -90h
var_81		= byte ptr -81h
var_75		= byte ptr -75h
var_69		= byte ptr -69h
var_5D		= byte ptr -5Dh
var_54		= dword	ptr -54h
var_48		= dword	ptr -48h
Source		= dword	ptr -3Ch
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
argc		= dword	ptr  8
argv		= dword	ptr  0Ch
envp		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$_main
		mov	eax, large fs:0
		push	eax
		sub	esp, 69Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_6A8]
		mov	ecx, 1A7h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_90], 0
		mov	eax, [ebp+argv]
		mov	ecx, [eax]
		push	ecx
		call	_findBasename
		add	esp, 4
		mov	[ebp+var_18], eax
		push	offset _options
		push	11h
		mov	eax, [ebp+argv]
		push	eax
		mov	ecx, [ebp+argc]
		push	ecx
		call	_u_parseArgs
		add	esp, 10h
		mov	[ebp+argc], eax
		movsx	eax, ds:byte_BE
		test	eax, eax
		jnz	short loc_298
		movsx	ecx, ds:byte_D2
		test	ecx, ecx
		jnz	short loc_298
		mov	byte ptr [ebp+var_6A8+3], 0
		jmp	short loc_29F
; ---------------------------------------------------------------------------

loc_298:				; CODE XREF: _main+7Ej	_main+89j
		mov	byte ptr [ebp+var_6A8+3], 1

loc_29F:				; CODE XREF: _main+92j
		mov	dl, byte ptr [ebp+var_6A8+3]
		mov	[ebp+var_69], dl
		movsx	eax, [ebp+var_69]
		test	eax, eax
		jz	short loc_2C5
		push	1
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		xor	eax, eax
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_2C5:				; CODE XREF: _main+AAj
		push	31200h		; unsigned int
		call	??2@YAPAXI@Z	; operator new(uint)
		add	esp, 4
		mov	[ebp+var_694], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_694], 0
		jz	short loc_305
		mov	esi, esp
		mov	ecx, [ebp+var_694] ; this
		call	dword ptr ds:__imp_??0Package@icu_56@@QAE@XZ ; icu_56::Package::Package(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_6A8], eax
		jmp	short loc_30F
; ---------------------------------------------------------------------------

loc_305:				; CODE XREF: _main+E2j
		mov	[ebp+var_6A8], 0

loc_30F:				; CODE XREF: _main+FFj
		mov	eax, [ebp+var_6A8]
		mov	[ebp+var_6A0], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_6A0]
		mov	[ebp+var_9C], ecx
		cmp	[ebp+var_9C], 0
		jnz	short loc_36B
		mov	esi, esp
		push	offset ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@ ; "icupkg: not enough memory\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, 7
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_36B:				; CODE XREF: _main+131j
		mov	[ebp+var_75], 0
		mov	[ebp+var_C0], 0
		movsx	eax, ds:byte_1D6
		test	eax, eax
		jz	short loc_3A8
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?setAutoPrefix@Package@icu_56@@QAEXXZ ; icu_56::Package::setAutoPrefix(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_C0]
		add	eax, 1
		mov	[ebp+var_C0], eax

loc_3A8:				; CODE XREF: _main+17Ej
		movsx	eax, ds:byte_1EA
		test	eax, eax
		jz	short loc_424
		movsx	eax, ds:byte_1FE
		test	eax, eax
		jz	short loc_400
		mov	esi, esp
		push	offset ??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@	; "icupkg: --auto_toc_prefix_with_type and"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_400:				; CODE XREF: _main+1B8j
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?setAutoPrefixWithType@Package@icu_56@@QAEXXZ ; icu_56::Package::setAutoPrefixWithType(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_C0]
		add	eax, 1
		mov	[ebp+var_C0], eax

loc_424:				; CODE XREF: _main+1ADj
		cmp	[ebp+argc], 2
		jl	short loc_439
		cmp	[ebp+argc], 3
		jg	short loc_439
		cmp	[ebp+var_C0], 1
		jle	short loc_451

loc_439:				; CODE XREF: _main+224j _main+22Aj
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_451:				; CODE XREF: _main+233j
		movsx	eax, ds:byte_122
		test	eax, eax
		jz	short loc_466
		mov	eax, ds:dword_114
		mov	[ebp+var_24], eax
		jmp	short loc_46D
; ---------------------------------------------------------------------------

loc_466:				; CODE XREF: _main+256j
		mov	[ebp+var_24], 0

loc_46D:				; CODE XREF: _main+260j
		movsx	eax, ds:byte_136
		test	eax, eax
		jz	short loc_482
		mov	eax, ds:dword_128
		mov	[ebp+var_30], eax
		jmp	short loc_489
; ---------------------------------------------------------------------------

loc_482:				; CODE XREF: _main+272j
		mov	[ebp+var_30], 0

loc_489:				; CODE XREF: _main+27Cj
		push	offset ??_C@_03CLCAEGCJ@new?$AA@ ; "new"
		mov	eax, [ebp+argv]
		mov	ecx, [eax+4]
		push	ecx		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_4FC
		cmp	[ebp+var_C0], 0
		jz	short loc_4EC
		mov	esi, esp
		push	offset ??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ ; "icupkg: --auto_toc_prefix[_with_type] b"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_4EC:				; CODE XREF: _main+2A4j
		mov	[ebp+Source], 0
		mov	[ebp+var_81], 1
		jmp	short loc_55E
; ---------------------------------------------------------------------------

loc_4FC:				; CODE XREF: _main+29Bj
		mov	eax, [ebp+argv]
		mov	ecx, [eax+4]
		mov	[ebp+Source], ecx
		mov	eax, [ebp+Source]
		push	eax		; Str
		call	?isPackageName@@YACPBD@Z ; isPackageName(char const *)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_53A
		mov	esi, esp
		mov	eax, [ebp+Source]
		push	eax		; char *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?readPackage@Package@icu_56@@QAEXPBD@Z ; icu_56::Package::readPackage(char const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_81], 1
		jmp	short loc_55E
; ---------------------------------------------------------------------------

loc_53A:				; CODE XREF: _main+312j
		mov	esi, esp
		mov	eax, [ebp+Source]
		push	eax		; char *
		mov	ecx, [ebp+var_24]
		push	ecx		; char *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?addFile@Package@icu_56@@QAEXPBD0@Z ; icu_56::Package::addFile(char const *,char const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_81], 0

loc_55E:				; CODE XREF: _main+2F6j _main+334j
		cmp	[ebp+argc], 3
		jl	short loc_58D
		mov	eax, [ebp+argv]
		mov	ecx, [eax+8]
		mov	[ebp+var_48], ecx
		mov	eax, [ebp+argv]
		mov	ecx, [eax+8]
		push	ecx		; Str2
		mov	edx, [ebp+argv]
		mov	eax, [edx+4]
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jz	short loc_58B
		mov	[ebp+var_75], 1

loc_58B:				; CODE XREF: _main+381j
		jmp	short loc_5B3
; ---------------------------------------------------------------------------

loc_58D:				; CODE XREF: _main+35Ej
		movsx	eax, [ebp+var_81]
		test	eax, eax
		jz	short loc_5A1
		mov	[ebp+var_48], 0
		jmp	short loc_5B3
; ---------------------------------------------------------------------------

loc_5A1:				; CODE XREF: _main+392j
		mov	eax, [ebp+Source]
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_30]
		setnz	cl
		mov	[ebp+var_75], cl

loc_5B3:				; CODE XREF: _main:loc_58Bj _main+39Bj
		movsx	eax, ds:byte_E6
		test	eax, eax
		jz	loc_698
		mov	eax, ds:dword_D8
		mov	[ebp+var_CC], eax
		mov	eax, [ebp+var_CC]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jz	short loc_5E8
		mov	eax, [ebp+var_CC]
		movsx	ecx, byte ptr [eax+1]
		test	ecx, ecx
		jz	short loc_600

loc_5E8:				; CODE XREF: _main+3D4j
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_600:				; CODE XREF: _main+3E2j
		mov	eax, [ebp+var_CC]
		mov	cl, [eax]
		mov	[ebp+var_5D], cl
		mov	al, [ebp+var_5D]
		mov	byte ptr [ebp+var_6A8],	al
		cmp	byte ptr [ebp+var_6A8],	62h ; 'b'
		jz	short loc_631
		cmp	byte ptr [ebp+var_6A8],	65h ; 'e'
		jz	short loc_631
		cmp	byte ptr [ebp+var_6A8],	6Ch ; 'l'
		jz	short loc_631
		jmp	short loc_633
; ---------------------------------------------------------------------------

loc_631:				; CODE XREF: _main+417j _main+420j ...
		jmp	short loc_64B
; ---------------------------------------------------------------------------

loc_633:				; CODE XREF: _main+42Bj
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_64B:				; CODE XREF: _main:loc_631j
		movsx	eax, [ebp+var_81]
		test	eax, eax
		jz	short loc_67F
		movsx	esi, [ebp+var_5D]
		mov	edi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getInType@Package@icu_56@@QAEDXZ ; icu_56::Package::getInType(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		cmp	esi, ecx
		jnz	short loc_67F
		mov	byte ptr [ebp+var_6A8+3], 0
		jmp	short loc_686
; ---------------------------------------------------------------------------

loc_67F:				; CODE XREF: _main+450j _main+470j
		mov	byte ptr [ebp+var_6A8+3], 1

loc_686:				; CODE XREF: _main+479j
		movsx	edx, byte ptr [ebp+var_6A8+3]
		movsx	eax, [ebp+var_75]
		or	eax, edx
		mov	[ebp+var_75], al
		jmp	short loc_6C1
; ---------------------------------------------------------------------------

loc_698:				; CODE XREF: _main+3B8j
		movsx	eax, [ebp+var_81]
		test	eax, eax
		jz	short loc_6BD
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getInType@Package@icu_56@@QAEDXZ ; icu_56::Package::getInType(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_5D], al
		jmp	short loc_6C1
; ---------------------------------------------------------------------------

loc_6BD:				; CODE XREF: _main+49Dj
		mov	[ebp+var_5D], 0

loc_6C1:				; CODE XREF: _main+492j _main+4B7j
		movsx	eax, ds:byte_14A
		test	eax, eax
		jz	short loc_6D0
		mov	[ebp+var_75], 1

loc_6D0:				; CODE XREF: _main+4C6j
		movsx	eax, [ebp+var_81]
		test	eax, eax
		jnz	loc_7BB
		movsx	eax, ds:byte_10E
		test	eax, eax
		jnz	short loc_72C
		movsx	eax, ds:byte_FA
		test	eax, eax
		jnz	short loc_72C
		movsx	eax, ds:byte_15E
		test	eax, eax
		jnz	short loc_72C
		movsx	eax, ds:byte_186
		test	eax, eax
		jnz	short loc_72C
		movsx	eax, ds:byte_172
		test	eax, eax
		jnz	short loc_72C
		movsx	eax, ds:byte_19A
		test	eax, eax
		jnz	short loc_72C
		movsx	eax, ds:byte_1AE
		test	eax, eax
		jz	short loc_744

loc_72C:				; CODE XREF: _main+4E4j _main+4EFj ...
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_744:				; CODE XREF: _main+526j
		movsx	eax, [ebp+var_75]
		test	eax, eax
		jz	short loc_770
		mov	esi, esp
		movzx	eax, [ebp+var_5D]
		push	eax		; char
		push	0		; int
		mov	ecx, [ebp+var_48]
		push	ecx		; char *
		mov	edx, [ebp+var_30]
		push	edx		; char *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?extractItem@Package@icu_56@@QAEXPBD0HD@Z ; icu_56::Package::extractItem(char const *,char const *,int,char)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_770:				; CODE XREF: _main+546j
		mov	eax, [ebp+var_9C]
		mov	[ebp+var_67C], eax
		mov	ecx, [ebp+var_67C]
		mov	[ebp+var_688], ecx
		cmp	[ebp+var_688], 0
		jz	short loc_7A6
		push	1
		mov	ecx, [ebp+var_688]
		call	??_GPackage@icu_56@@QAEPAXI@Z ;	icu_56::Package::`scalar deleting destructor'(uint)
		mov	[ebp+var_6A8], eax
		jmp	short loc_7B0
; ---------------------------------------------------------------------------

loc_7A6:				; CODE XREF: _main+58Bj
		mov	[ebp+var_6A8], 0

loc_7B0:				; CODE XREF: _main+5A0j
		mov	eax, [ebp+var_90]
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_7BB:				; CODE XREF: _main+4D5j
		movsx	eax, ds:byte_10E
		test	eax, eax
		jz	short loc_7D0
		mov	eax, ds:dword_100
		mov	[ebp+var_54], eax
		jmp	short loc_7EB
; ---------------------------------------------------------------------------

loc_7D0:				; CODE XREF: _main+5C0j
		movsx	eax, ds:byte_FA
		test	eax, eax
		jz	short loc_7E4
		mov	[ebp+var_54], offset ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; " Copyright (C) 2015, International Busi"...
		jmp	short loc_7EB
; ---------------------------------------------------------------------------

loc_7E4:				; CODE XREF: _main+5D5j
		mov	[ebp+var_54], 0

loc_7EB:				; CODE XREF: _main+5CAj _main+5DEj
		movsx	eax, ds:byte_15E
		test	eax, eax
		jz	short loc_83E
		push	offset ??_C@_07ILDPOMPA@noslash?$AA@ ; "noslash"
		mov	eax, ds:Str1
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_826
		mov	esi, esp
		push	1		; unsigned int
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?setMatchMode@Package@icu_56@@QAEXI@Z ; icu_56::Package::setMatchMode(uint)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_83E
; ---------------------------------------------------------------------------

loc_826:				; CODE XREF: _main+607j
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_83E:				; CODE XREF: _main+5F0j _main+620j
		movsx	eax, ds:byte_186
		test	eax, eax
		jz	loc_992
		push	31200h		; unsigned int
		call	??2@YAPAXI@Z	; operator new(uint)
		add	esp, 4
		mov	[ebp+var_664], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_664], 0
		jz	short loc_88D
		mov	esi, esp
		mov	ecx, [ebp+var_664] ; this
		call	dword ptr ds:__imp_??0Package@icu_56@@QAE@XZ ; icu_56::Package::Package(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_6A8], eax
		jmp	short loc_897
; ---------------------------------------------------------------------------

loc_88D:				; CODE XREF: _main+66Aj
		mov	[ebp+var_6A8], 0

loc_897:				; CODE XREF: _main+687j
		mov	eax, [ebp+var_6A8]
		mov	[ebp+var_670], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_670]
		mov	[ebp+var_A8], ecx
		cmp	[ebp+var_A8], 0
		jnz	short loc_8FA
		mov	esi, esp
		push	offset ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@ ; "icupkg: not enough memory\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	7		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_8FA:				; CODE XREF: _main+6B9j
		mov	eax, [ebp+var_A8]
		push	eax
		push	0
		mov	ecx, ds:dword_178
		push	ecx
		push	0
		call	_readList
		add	esp, 10h
		test	eax, eax
		jz	short loc_97A
		mov	esi, esp
		mov	eax, [ebp+var_A8]
		push	eax		; struct icu_56::Package *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?removeItems@Package@icu_56@@QAEXABV12@@Z ; icu_56::Package::removeItems(icu_56::Package const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_64C], eax
		mov	ecx, [ebp+var_64C]
		mov	[ebp+var_658], ecx
		cmp	[ebp+var_658], 0
		jz	short loc_96A
		push	1
		mov	ecx, [ebp+var_658]
		call	??_GPackage@icu_56@@QAEPAXI@Z ;	icu_56::Package::`scalar deleting destructor'(uint)
		mov	[ebp+var_6A8], eax
		jmp	short loc_974
; ---------------------------------------------------------------------------

loc_96A:				; CODE XREF: _main+74Fj
		mov	[ebp+var_6A8], 0

loc_974:				; CODE XREF: _main+764j
		mov	[ebp+var_75], 1
		jmp	short loc_992
; ---------------------------------------------------------------------------

loc_97A:				; CODE XREF: _main+712j
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_992:				; CODE XREF: _main+643j _main+774j
		mov	[ebp+var_B4], 0
		movsx	eax, ds:byte_172
		test	eax, eax
		jz	loc_AB2
		push	31200h		; unsigned int
		call	??2@YAPAXI@Z	; operator new(uint)
		add	esp, 4
		mov	[ebp+var_634], eax
		mov	[ebp+var_4], 2
		cmp	[ebp+var_634], 0
		jz	short loc_9EB
		mov	esi, esp
		mov	ecx, [ebp+var_634] ; this
		call	dword ptr ds:__imp_??0Package@icu_56@@QAE@XZ ; icu_56::Package::Package(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_6A8], eax
		jmp	short loc_9F5
; ---------------------------------------------------------------------------

loc_9EB:				; CODE XREF: _main+7C8j
		mov	[ebp+var_6A8], 0

loc_9F5:				; CODE XREF: _main+7E5j
		mov	eax, [ebp+var_6A8]
		mov	[ebp+var_640], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_640]
		mov	[ebp+var_B4], ecx
		cmp	[ebp+var_B4], 0
		jnz	short loc_A58
		mov	esi, esp
		push	offset ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@ ; "icupkg: not enough memory\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	7		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_A58:				; CODE XREF: _main+817j
		mov	eax, [ebp+var_B4]
		push	eax
		push	1
		mov	ecx, ds:dword_164
		push	ecx
		mov	edx, [ebp+var_24]
		push	edx
		call	_readList
		add	esp, 10h
		test	eax, eax
		jz	short loc_A9A
		mov	esi, esp
		mov	eax, [ebp+var_B4]
		push	eax		; struct icu_56::Package *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?addItems@Package@icu_56@@QAEXABV12@@Z ; icu_56::Package::addItems(icu_56::Package const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_75], 1
		jmp	short loc_AB2
; ---------------------------------------------------------------------------

loc_A9A:				; CODE XREF: _main+872j
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_AB2:				; CODE XREF: _main+7A1j _main+894j
		movsx	eax, ds:byte_19A
		test	eax, eax
		jz	loc_C0B
		push	31200h		; unsigned int
		call	??2@YAPAXI@Z	; operator new(uint)
		add	esp, 4
		mov	[ebp+var_61C], eax
		mov	[ebp+var_4], 3
		cmp	[ebp+var_61C], 0
		jz	short loc_B01
		mov	esi, esp
		mov	ecx, [ebp+var_61C] ; this
		call	dword ptr ds:__imp_??0Package@icu_56@@QAE@XZ ; icu_56::Package::Package(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_6A8], eax
		jmp	short loc_B0B
; ---------------------------------------------------------------------------

loc_B01:				; CODE XREF: _main+8DEj
		mov	[ebp+var_6A8], 0

loc_B0B:				; CODE XREF: _main+8FBj
		mov	eax, [ebp+var_6A8]
		mov	[ebp+var_628], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_628]
		mov	[ebp+var_A8], ecx
		cmp	[ebp+var_A8], 0
		jnz	short loc_B6E
		mov	esi, esp
		push	offset ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@ ; "icupkg: not enough memory\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	7		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_B6E:				; CODE XREF: _main+92Dj
		mov	eax, [ebp+var_A8]
		push	eax
		push	0
		mov	ecx, ds:dword_18C
		push	ecx
		push	0
		call	_readList
		add	esp, 10h
		test	eax, eax
		jz	short loc_BF3
		mov	esi, esp
		movzx	eax, [ebp+var_5D]
		push	eax		; char
		mov	ecx, [ebp+var_A8]
		push	ecx		; struct icu_56::Package *
		mov	edx, [ebp+var_30]
		push	edx		; char *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z ; icu_56::Package::extractItems(char const *,icu_56::Package const &,char)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_A8]
		mov	[ebp+var_604], eax
		mov	ecx, [ebp+var_604]
		mov	[ebp+var_610], ecx
		cmp	[ebp+var_610], 0
		jz	short loc_BE7
		push	1
		mov	ecx, [ebp+var_610]
		call	??_GPackage@icu_56@@QAEPAXI@Z ;	icu_56::Package::`scalar deleting destructor'(uint)
		mov	[ebp+var_6A8], eax
		jmp	short loc_BF1
; ---------------------------------------------------------------------------

loc_BE7:				; CODE XREF: _main+9CCj
		mov	[ebp+var_6A8], 0

loc_BF1:				; CODE XREF: _main+9E1j
		jmp	short loc_C0B
; ---------------------------------------------------------------------------

loc_BF3:				; CODE XREF: _main+986j
		push	0
		mov	eax, [ebp+var_18]
		push	eax
		call	?printUsage@@YAXPBDC@Z ; printUsage(char const *,signed	char)
		add	esp, 8
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_C0B:				; CODE XREF: _main+8B7j _main:loc_BF1j
		movsx	eax, ds:byte_1AE
		test	eax, eax
		jz	loc_D6E
		movsx	eax, ds:byte_1C2
		test	eax, eax
		jz	loc_CEB
		push	offset ??_C@_01NOFIACDB@w?$AA@ ; `string'
		mov	eax, ds:dword_1B4
		push	eax
		call	_T_FileStream_open
		add	esp, 8
		mov	[ebp+var_E4], eax
		cmp	[ebp+var_E4], 0
		jz	loc_CDC
		mov	[ebp+var_D8], 0
		jmp	short loc_C6A
; ---------------------------------------------------------------------------

loc_C5B:				; CODE XREF: _main+AC5j
		mov	eax, [ebp+var_D8]
		add	eax, 1
		mov	[ebp+var_D8], eax

loc_C6A:				; CODE XREF: _main+A55j
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getItemCount@Package@icu_56@@QBEHXZ	; icu_56::Package::getItemCount(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_D8], eax
		jge	short loc_CCB
		mov	esi, esp
		mov	eax, [ebp+var_D8]
		push	eax		; int
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getItem@Package@icu_56@@QBEPBUItem@2@H@Z ; icu_56::Package::getItem(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [eax]
		push	ecx
		mov	edx, [ebp+var_E4]
		push	edx
		call	_T_FileStream_writeLine
		add	esp, 8
		push	offset ??_C@_01EEMJAFIK@?6?$AA@	; "\n"
		mov	eax, [ebp+var_E4]
		push	eax
		call	_T_FileStream_writeLine
		add	esp, 8
		jmp	short loc_C5B
; ---------------------------------------------------------------------------

loc_CCB:				; CODE XREF: _main+A81j
		mov	eax, [ebp+var_E4]
		push	eax
		call	_T_FileStream_close
		add	esp, 4
		jmp	short loc_CE6
; ---------------------------------------------------------------------------

loc_CDC:				; CODE XREF: _main+A45j
		mov	eax, 1
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_CE6:				; CODE XREF: _main+AD6j
		jmp	loc_D6E
; ---------------------------------------------------------------------------

loc_CEB:				; CODE XREF: _main+A1Fj
		mov	[ebp+var_D8], 0
		jmp	short loc_D06
; ---------------------------------------------------------------------------

loc_CF7:				; CODE XREF: _main+B68j
		mov	eax, [ebp+var_D8]
		add	eax, 1
		mov	[ebp+var_D8], eax

loc_D06:				; CODE XREF: _main+AF1j
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getItemCount@Package@icu_56@@QBEHXZ	; icu_56::Package::getItemCount(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_D8], eax
		jge	short loc_D6E
		mov	esi, esp
		mov	eax, [ebp+var_D8]
		push	eax		; int
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getItem@Package@icu_56@@QBEPBUItem@2@H@Z ; icu_56::Package::getItem(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	ecx, [eax]
		push	ecx
		push	offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@ ; "%s\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 20h ; ' '
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_CF7
; ---------------------------------------------------------------------------

loc_D6E:				; CODE XREF: _main+A10j _main:loc_CE6j ...
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?checkDependencies@Package@icu_56@@QAECXZ ; icu_56::Package::checkDependencies(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jnz	short loc_D94
		mov	eax, 2
		jmp	loc_F76
; ---------------------------------------------------------------------------

loc_D94:				; CODE XREF: _main+B84j
		movsx	eax, [ebp+var_75]
		test	eax, eax
		jz	loc_EF0
		cmp	[ebp+var_48], 0
		jz	short loc_DB4
		mov	eax, [ebp+var_48]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jnz	loc_EA4

loc_DB4:				; CODE XREF: _main+BA0j
		cmp	[ebp+Source], 0
		jz	short loc_DC4
		mov	eax, [ebp+Source]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jnz	short loc_DFF

loc_DC4:				; CODE XREF: _main+BB4j
		mov	esi, esp
		push	offset ??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@ ; "icupkg: unable to auto-generate an	outp"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_DFF:				; CODE XREF: _main+BBEj
		mov	eax, ds:??_C@_05HDOCAHPA@?$DP?4dat?$AA@	; `string'
		mov	[ebp+Buf2], eax
		mov	cx, ds:word_1050
		mov	[ebp+var_4F8], cx
		mov	esi, esp
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?getInType@Package@icu_56@@QAEDXZ ; icu_56::Package::getInType(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+Buf2], al
		mov	eax, [ebp+Source]
		push	eax		; Source
		lea	ecx, [ebp+Dest]
		push	ecx		; Dest
		call	_strcpy
		add	esp, 8
		push	0		; Val
		lea	eax, [ebp+Dest]
		push	eax		; Str
		call	?strchr@@YAPADPADH@Z ; strchr(char *,int)
		add	esp, 8
		mov	[ebp+var_508], eax
		mov	eax, [ebp+var_508]
		lea	ecx, [ebp+Dest]
		sub	eax, ecx
		cmp	eax, 5
		jle	short loc_E9B
		push	5		; Size
		lea	eax, [ebp+Buf2]
		push	eax		; Buf2
		mov	ecx, [ebp+var_508]
		sub	ecx, 5
		push	ecx		; Buf1
		call	_memcmp
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_E9B
		mov	eax, [ebp+var_508]
		mov	cl, [ebp+var_5D]
		mov	[eax-5], cl

loc_E9B:				; CODE XREF: _main+C6Aj _main+C89j
		lea	eax, [ebp+Dest]
		mov	[ebp+var_48], eax

loc_EA4:				; CODE XREF: _main+BAAj
		movsx	eax, ds:byte_1FE
		test	eax, eax
		jz	short loc_ECA
		mov	esi, esp
		mov	eax, ds:dword_1F0
		push	eax		; char *
		mov	ecx, [ebp+var_9C] ; this
		call	dword ptr ds:__imp_?setPrefix@Package@icu_56@@QAEXPBD@Z	; icu_56::Package::setPrefix(char const	*)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_ECA:				; CODE XREF: _main+CA9j
		movzx	eax, [ebp+var_5D]
		push	eax
		mov	ecx, [ebp+var_9C]
		push	ecx
		push	0
		push	0
		mov	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_48]
		push	eax
		call	_writePackageDatFile
		add	esp, 18h
		mov	[ebp+var_90], eax

loc_EF0:				; CODE XREF: _main+B96j
		mov	eax, [ebp+var_B4]
		mov	[ebp+var_5EC], eax
		mov	ecx, [ebp+var_5EC]
		mov	[ebp+var_5F8], ecx
		cmp	[ebp+var_5F8], 0
		jz	short loc_F26
		push	1
		mov	ecx, [ebp+var_5F8]
		call	??_GPackage@icu_56@@QAEPAXI@Z ;	icu_56::Package::`scalar deleting destructor'(uint)
		mov	[ebp+var_6A8], eax
		jmp	short loc_F30
; ---------------------------------------------------------------------------

loc_F26:				; CODE XREF: _main+D0Bj
		mov	[ebp+var_6A8], 0

loc_F30:				; CODE XREF: _main+D20j
		mov	eax, [ebp+var_9C]
		mov	[ebp+var_5D4], eax
		mov	ecx, [ebp+var_5D4]
		mov	[ebp+var_5E0], ecx
		cmp	[ebp+var_5E0], 0
		jz	short loc_F66
		push	1
		mov	ecx, [ebp+var_5E0]
		call	??_GPackage@icu_56@@QAEPAXI@Z ;	icu_56::Package::`scalar deleting destructor'(uint)
		mov	[ebp+var_6A8], eax
		jmp	short loc_F70
; ---------------------------------------------------------------------------

loc_F66:				; CODE XREF: _main+D4Bj
		mov	[ebp+var_6A8], 0

loc_F70:				; CODE XREF: _main+D60j
		mov	eax, [ebp+var_90]

loc_F76:				; CODE XREF: _main+BCj	_main+162j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN107
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 6A8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_main		endp

; ---------------------------------------------------------------------------
$LN107		dd 2			; DATA XREF: _main+D76o
		dd offset $LN106
$LN106		dd 0FFFFFB14h, 400h	; DATA XREF: .text:00000FB4o
		dd offset $LN103	; "outFilenameBuffer"
		dd 0FFFFFB04h, 6
		dd offset $LN104	; "suffix"
$LN104		db 'suffix',0           ; DATA XREF: .text:00000FCCo
$LN103		db 'outFilenameBuffer',0 ; DATA XREF: .text:00000FC0o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0FECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$0	proc near	; DATA XREF: .xdata$x:000011BCo
		mov	eax, [ebp-694h]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		pop	ecx
		retn
__unwindfunclet$_main$0	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$1	proc near	; DATA XREF: .xdata$x:000011C4o
		mov	eax, [ebp-664h]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		pop	ecx
		retn
__unwindfunclet$_main$1	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$2	proc near	; DATA XREF: .xdata$x:000011CCo
		mov	eax, [ebp-634h]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		pop	ecx
		retn
__unwindfunclet$_main$2	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$3	proc near	; DATA XREF: .xdata$x:000011D4o
		mov	eax, [ebp-61Ch]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		pop	ecx
		retn
__unwindfunclet$_main$3	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$_main proc near		; DATA XREF: _main+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-6ACh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$_main
		jmp	___CxxFrameHandler3
__ehhandler$_main endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 104Ch
		public ??_C@_05HDOCAHPA@?$DP?4dat?$AA@
; `string'
??_C@_05HDOCAHPA@?$DP?4dat?$AA@	dd 61642E3Fh ; DATA XREF: _main:loc_DFFr
word_1050	dw 74h			; DATA XREF: _main+C06r
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1054h
		public ??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@
; char `string'[]
??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@ db 'icupkg: unable to auto-generate an output filename if there is no'
					; DATA XREF: _main+BC2o
		db ' input filename',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10A8h
		public ??_C@_03OFAPEBGM@?$CFs?6?$AA@
; char `string'[4]
??_C@_03OFAPEBGM@?$CFs?6?$AA@ db '%s',0Ah,0 ; DATA XREF: _main+B40o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10ACh
		public ??_C@_01EEMJAFIK@?6?$AA@
; `string'
??_C@_01EEMJAFIK@?6?$AA@ db 0Ah,0	; DATA XREF: _main+AB1o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10B0h
		public ??_C@_01NOFIACDB@w?$AA@
; `string'
??_C@_01NOFIACDB@w?$AA@	db 77h,	0	; DATA XREF: _main+A25o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10B4h
		public ??_C@_07ILDPOMPA@noslash?$AA@
; char `string'[]
??_C@_07ILDPOMPA@noslash?$AA@ db 'noslash',0 ; DATA XREF: _main+5F2o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 10BCh
		public ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
; `string'
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@	db ' Copyright (C) 2015, International Business Machines Corporation '
					; DATA XREF: _main+5D7o
		db 'and others. All Rights Reserved. ',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1120h
		public ??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
; char `string'[]
??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ db 'icupkg: --auto_toc_prefix[_with_type] but no input package',0Ah,0
					; DATA XREF: _main+2A8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 115Ch
		public ??_C@_03CLCAEGCJ@new?$AA@
; char `string'[]
??_C@_03CLCAEGCJ@new?$AA@ db 'new',0    ; DATA XREF: _main:loc_489o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1160h
		public ??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@
; char `string'[]
??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@ db 'icupkg: --auto_toc_prefix_with_type and also --toc_prefix',0Ah,0
					; DATA XREF: _main+1BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 119Ch
		public ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@
; char `string'[]
??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@	db 'icupkg: not enough memory',0Ah,0
					; DATA XREF: _main+135o _main+6BDo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 11B8h
__unwindtable$_main dd 0FFFFFFFFh	; DATA XREF: .xdata$x:000011E0o
		dd offset __unwindfunclet$_main$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$_main$1
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$_main$2
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$_main$3
__ehfuncinfo$_main dd 19930522h, 4	; DATA XREF: __ehhandler$_main+1Eo
		dd offset __unwindtable$_main
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 11FCh
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 1200h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1204h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; char *__cdecl	strchr(char *Str, int Val)
		public ?strchr@@YAPADPADH@Z
?strchr@@YAPADPADH@Z proc near		; CODE XREF: _main+C4Bp

var_C0		= byte ptr -0C0h
Str		= dword	ptr  8
Val		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		mov	eax, [ebp+Val]
		push	eax		; Val
		mov	ecx, [ebp+Str]
		push	ecx		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?strchr@@YAPADPADH@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1250h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl printUsage(char const *,	signed char)
?printUsage@@YAXPBDC@Z proc near	; CODE XREF: _main+B2p	_main+1EAp ...

var_D0		= dword	ptr -0D0h
File		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		movsx	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_1290
		mov	esi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	esi, esp
		call	__RTC_CheckEsp
		add	eax, 20h ; ' '
		mov	[ebp+var_D0], eax
		jmp	short loc_12A8
; ---------------------------------------------------------------------------

loc_1290:				; CODE XREF: printUsage(char const *,signed char)+24j
		mov	esi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	esi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		mov	[ebp+var_D0], eax

loc_12A8:				; CODE XREF: printUsage(char const *,signed char)+3Ej
		mov	ecx, [ebp+var_D0]
		mov	[ebp+File], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		movsx	ecx, [ebp+arg_4]
		neg	ecx
		sbb	cl, cl
		and	cl, 0E0h
		add	cl, 75h	; 'u'
		movsx	edx, cl
		push	edx
		push	offset ??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@ ; "%csage: %s [-h|-?|--help ] [-tl|-tb|-te"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, [ebp+arg_4]
		test	eax, eax
		jz	loc_146D
		mov	esi, esp
		push	offset ??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@ ; "\nRead the input	ICU .dat package file,"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@ ; "\nIf the input filename is	\"new\"	then"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@ ; "\nThis tool can	also be	used to	just sw"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@ ;	"\nOptions:\n\t(Only the last occurrence"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@ ; "\n\t-tl or	--type l   output for little"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@ ; "\n\t-a list or --add list      add item"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@ ; "\n\t-w or --writepkg	write the output "...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@ ; "\n\t-m mode or --matchmode mode  set th"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@ ;	"\n\tIn	the .dat package, the Table of C"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@ ; "\n\t--auto_toc_prefix		 automa"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@ ; "\"%&'()*+,-./:;<=>?_"
		push	offset ??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@ ; "\n\tList file syntax: Items are	listed "...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@ ; "\tItems for	removal	or extraction may c"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@ ; "\n\tItems must be listed	relative to th"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset ??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@	; "\n\t-s path or --sourcedir path  direct"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_146D:				; CODE XREF: printUsage(char const *,signed char)+98j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?printUsage@@YAXPBDC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1484h
		public ??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@
; char `string'[]
??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+204o
		db 9,'-s path or --sourcedir path  directory for the --add items',0Ah
		db 9,'-d path or --destdir path    directory for the --extract items',0Ah
		db 0Ah
		db 9,'-l or --list                 list the package items',0Ah
		db 9,'                             (after modifying the package)',0Ah
		db 9,'                             to stdout or to output list file',0Ah
		db 9,'-o path or --outlist path    path/filename for the --list output'
		db 0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 15F8h
		public ??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@
; char `string'[]
??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@ db	0Ah
					; DATA XREF: printUsage(char const *,signed char)+1E9o
		db 9,'Items must be listed relative to the package, and the --sourcedi'
		db 'r or',0Ah
		db 9,'the --destdir path will be prepended.',0Ah
		db 9,'The paths are only prepended to item filenames while adding or',0Ah
		db 9,'extracting items, not to ICU .dat package or list filenames.',0Ah
		db 9,0Ah
		db 9,'Paths may contain ',27h,'/',27h,' instead of the platform',27h,'s',0Ah
		db 9,'file separator character, and are converted as appropriate.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1758h
		public ??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@
; char `string'[]
??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@ db 9,'Items for removal or extraction may contain a single ',27h,'*',27h,' w'
					; DATA XREF: printUsage(char const *,signed char)+1CEo
		db 'ildcard',0Ah
		db 9,'character. The ',27h,'*',27h,' matches zero or more characters.',0Ah
		db 9,'If --matchmode noslash (-m noslash) is set, then the ',27h,'*',27h,0Ah
		db 9,'does not match ',27h,'/',27h,'.',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1820h
		public ??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@
; char `string'[]
??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+1B3o
		db 9,'List file syntax: Items are listed on one or more lines and sepa'
		db 'rated',0Ah
		db 9,'by whitespace (space+tab).',0Ah
		db 9,'Comments begin with # and are ignored. Empty lines are ignored.',0Ah
		db 9,'Lines where the first non-whitespace character is one of %s',0Ah
		db 9,'are also ignored, to reserve for future syntax.',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1934h
		public ??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@
; `string'
??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@ db '"%&',27h,'()*+,-./:;<=>?_',0
					; DATA XREF: printUsage(char const *,signed char)+1AEo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1948h
		public ??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@
; char `string'[]
??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+193o
		db 9,'--auto_toc_prefix            automatic ToC entries prefix',0Ah
		db 9,'                             Uses the prefix of the first entry '
		db 'of the',0Ah
		db 9,'                             input package, rather than its base'
		db 'name.',0Ah
		db 9,'                             Requires a non-empty input package.'
		db 0Ah
		db 9,'--auto_toc_prefix_with_type  auto_toc_prefix + adjust platform t'
		db 'ype',0Ah
		db 9,'                             Same as auto_toc_prefix but also ch'
		db 'ecks that',0Ah
		db 9,'                             the prefix ends with the input plat'
		db 'form',0Ah
		db 9,'                             type letter, and modifies it to the'
		db ' output',0Ah
		db 9,'                             platform type letter.',0Ah
		db 9,'                At most one of the auto_toc_prefix options',0Ah
		db 9,'                can be used at a time.',0Ah
		db 9,'--toc_prefix prefix          ToC prefix to be used in the output'
		db ' package',0Ah
		db 9,'                             Overrides the package basename',0Ah
		db 9,'                             and --auto_toc_prefix.',0Ah
		db 9,'                             Cannot be combined with --auto_toc_'
		db 'prefix_with_type.',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1D1Ch
		public ??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@
; char `string'[]
??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+178o
		db 9,'In the .dat package, the Table of Contents (ToC) contains an ent'
		db 'ry',0Ah
		db 9,'for each item of the form prefix/tree/itemname .',0Ah
		db 9,'The prefix normally matches the package basename, and icupkg che'
		db 'cks that,',0Ah
		db 9,'but this is not necessary when ICU need not find and load the pa'
		db 'ckage by filename.',0Ah
		db 9,'ICU package names end with the platform type letter, and thus di'
		db 'ffer',0Ah
		db 9,'between platform types. This is not required for user data packa'
		db 'ges.',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1EC0h
		public ??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@
; char `string'[]
??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@	db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+15Do
		db 9,'-m mode or --matchmode mode  set the matching mode for item name'
		db 's with',0Ah
		db 9,'                             wildcards',0Ah
		db 9,'        noslash: the ',27h,'*',27h,' wildcard does not match the ',27h,'/'
		db 27h,' tree separator',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1F7Ch
		public ??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@
; char `string'[]
??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@	db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+142o
		db 9,'-w or --writepkg  write the output package even if no items are '
		db 'removed',0Ah
		db 9,'                  or added (e.g., for only swapping the data)',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2008h
		public ??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@
; char `string'[]
??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@ db	0Ah
					; DATA XREF: printUsage(char const *,signed char)+127o
		db 9,'-a list or --add list      add items to the package',0Ah
		db 9,'-r list or --remove list   remove items from the package',0Ah
		db 9,'-x list or --extract list  extract items from the package',0Ah
		db 9,'The list can be a single item',27h,'s filename,',0Ah
		db 9,'or a .txt filename with a list of item filenames,',0Ah
		db 9,'or an ICU .dat package filename.',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2134h
		public ??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@
; char `string'[]
??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+10Co
		db 9,'-tl or --type l   output for little-endian/ASCII charset family',0Ah
		db 9,'-tb or --type b   output for big-endian/ASCII charset family',0Ah
		db 9,'-te or --type e   output for big-endian/EBCDIC charset family',0Ah
		db 9,'                  The output type defaults to the input type.',0Ah
		db 0Ah
		db 9,'-c or --copyright include the ICU copyright notice',0Ah
		db 9,'-C comment or --comment comment   include a comment string',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 22A4h
		public ??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@
; char `string'[]
??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+F1o
		db 'Options:',0Ah
		db 9,'(Only the last occurrence of an option is used.)',0Ah
		db 0Ah
		db 9,'-h or -? or --help    print this message and exit',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2318h
		public ??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@
; char `string'[]
??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+D6o
		db 'This tool can also be used to just swap a single ICU data file, r'
		db 'eplacing the',0Ah
		db 'former icuswap tool. For this mode, provide the infilename (and o'
		db 'ptional',0Ah
		db 'outfilename) for a non-package ICU data file.',0Ah
		db 'Allowed options include -t, -w, -s and -d.',0Ah
		db 'The filenames can be absolute, or relative to the source/dest dir'
		db ' paths.',0Ah
		db 'Other options are not allowed in this mode.',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2480h
		public ??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@
; char `string'[]
??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@ db 0Ah
					; DATA XREF: printUsage(char const *,signed char)+BBo
		db 'If the input filename is "new" then an empty package is created.',0Ah
		db 'If the output filename is missing, then it is automatically gener'
		db 'ated',0Ah
		db 'from the input filename: If the input filename ends with an l, b,'
		db ' or e',0Ah
		db 'matching its platform properties, then the output filename will',0Ah
		db 'contain the letter from the -t (--type) option.',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25C0h
		public ??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@
; char `string'[]
??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@ db	0Ah
					; DATA XREF: printUsage(char const *,signed char)+A0o
		db 'Read the input ICU .dat package file, modify it according to the '
		db 'options,',0Ah
		db 'swap it to the desired platform properties (charset & endianness)'
		db ',',0Ah
		db 'and optionally write the resulting ICU .dat package to the output'
		db ' file.',0Ah
		db 'Items are removed, then added, then extracted and listed.',0Ah
		db 'An ICU .dat package is written if items are removed or added,',0Ah
		db 'or if the input and output filenames differ,',0Ah
		db 'or if the --writepkg (-w) option is set.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2768h
		public ??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@
; char `string'[]
??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@ db '%csage: %s [-h|-?|--help ] [-tl|-tb|-te] [-c] [-C comment]',0Ah
					; DATA XREF: printUsage(char const *,signed char)+79o
		db 9,'[-a list] [-r list] [-x list] [-l [-o outputListFileName]]',0Ah
		db 9,'[-s path] [-d path] [-w] [-m mode]',0Ah
		db 9,'[--auto_toc_prefix] [--auto_toc_prefix_with_type] [--toc_prefix]'
		db 0Ah
		db 9,'infilename [outfilename]',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2860h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl isPackageName(char *Str)
?isPackageName@@YACPBD@Z proc near	; CODE XREF: _main+305p

var_D0		= byte ptr -0D0h
var_CD		= byte ptr -0CDh
var_8		= dword	ptr -8
Str		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		sub	eax, 4
		mov	[ebp+var_8], eax
		cmp	[ebp+var_8], 0
		jle	short loc_28B7
		push	offset ??_C@_04PBCOOEDG@?4dat?$AA@ ; ".dat"
		mov	eax, [ebp+Str]
		add	eax, [ebp+var_8]
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_28B7
		mov	[ebp+var_CD], 1
		jmp	short loc_28BE
; ---------------------------------------------------------------------------

loc_28B7:				; CODE XREF: isPackageName(char	const *)+34j
					; isPackageName(char const *)+4Cj
		mov	[ebp+var_CD], 0

loc_28BE:				; CODE XREF: isPackageName(char	const *)+55j
		mov	al, [ebp+var_CD]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?isPackageName@@YACPBD@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28D8h
		public ??_C@_04PBCOOEDG@?4dat?$AA@
; char `string'[]
??_C@_04PBCOOEDG@?4dat?$AA@ db '.dat',0 ; DATA XREF: isPackageName(char const *)+36o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 28E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void * __thiscall icu_56::Package::`scalar deleting destructor'(unsigned int)
		public ??_GPackage@icu_56@@QAEPAXI@Z
??_GPackage@icu_56@@QAEPAXI@Z proc near	; CODE XREF: _main+595p _main+759p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1Package@icu_56@@QAE@XZ ; icu_56::Package::~Package(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2929
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		add	esp, 4

loc_2929:				; CODE XREF: icu_56::Package::`scalar deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GPackage@icu_56@@QAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; void __cdecl operator	delete(void *)
		extrn ??3@YAXPAX@Z:near	; CODE XREF: __unwindfunclet$_main$0+7p
					; __unwindfunclet$_main$1+7p ...
		extrn _writePackageDatFile:near	; CODE XREF: _main+CDEp
; void __thiscall icu_56::Package::setPrefix(icu_56::Package *__hidden this, const char	*)
		extrn __imp_?setPrefix@Package@icu_56@@QAEXPBD@Z:near
					; CODE XREF: _main+CB9p
					; DATA XREF: _main+CB9r
; int __cdecl memcmp(const void	*Buf1, const void *Buf2, size_t	Size)
		extrn _memcmp:near	; CODE XREF: _main+C7Fp
; char *__cdecl	strcpy(char *Dest, const char *Source)
		extrn _strcpy:near	; CODE XREF: _main+C3Ap
; signed __int8	__thiscall icu_56::Package::checkDependencies(icu_56::Package *__hidden	this)
		extrn __imp_?checkDependencies@Package@icu_56@@QAECXZ:near
					; CODE XREF: _main+B72p
					; DATA XREF: _main+B72r
		extrn _T_FileStream_close:near ; CODE XREF: _main+ACEp
		extrn _T_FileStream_writeLine:near ; CODE XREF:	_main+AA9p
					; _main+ABDp
; const	struct icu_56::Item *__thiscall	icu_56::Package::getItem(icu_56::Package *__hidden this, int)
		extrn __imp_?getItem@Package@icu_56@@QBEPBUItem@2@H@Z:near
					; CODE XREF: _main+A92p _main+B2Ep
					; DATA XREF: ...
; int __thiscall icu_56::Package::getItemCount(icu_56::Package *__hidden this)
		extrn __imp_?getItemCount@Package@icu_56@@QBEHXZ:near
					; CODE XREF: _main+A6Ep _main+B0Ap
					; DATA XREF: ...
		extrn _T_FileStream_open:near ;	CODE XREF: _main+A30p
; void __thiscall icu_56::Package::extractItems(icu_56::Package	*__hidden this,	const char *, const struct icu_56::Package *, char)
		extrn __imp_?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z:near
					; CODE XREF: _main+9A0p
					; DATA XREF: _main+9A0r
; void __thiscall icu_56::Package::addItems(icu_56::Package *__hidden this, const struct icu_56::Package *)
		extrn __imp_?addItems@Package@icu_56@@QAEXABV12@@Z:near
					; CODE XREF: _main+883p
					; DATA XREF: _main+883r
; void __thiscall icu_56::Package::removeItems(icu_56::Package *__hidden this, const struct icu_56::Package *)
		extrn __imp_?removeItems@Package@icu_56@@QAEXABV12@@Z:near
					; CODE XREF: _main+723p
					; DATA XREF: _main+723r
		extrn _readList:near	; CODE XREF: _main+708p _main+868p ...
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _main+6E9p _main+847p ...
; void __thiscall icu_56::Package::setMatchMode(icu_56::Package	*__hidden this,	unsigned int)
		extrn __imp_?setMatchMode@Package@icu_56@@QAEXI@Z:near
					; CODE XREF: _main+613p
					; DATA XREF: _main+613r
; void __thiscall icu_56::Package::extractItem(icu_56::Package *__hidden this, const char *, const char	*, int,	char)
		extrn __imp_?extractItem@Package@icu_56@@QAEXPBD0HD@Z:near
					; CODE XREF: _main+55Fp
					; DATA XREF: _main+55Fr
; char __thiscall icu_56::Package::getInType(icu_56::Package *__hidden this)
		extrn __imp_?getInType@Package@icu_56@@QAEDXZ:near ; CODE XREF:	_main+45Ep
					; _main+4A7p ...
; void __thiscall icu_56::Package::addFile(icu_56::Package *__hidden this, const char *, const char *)
		extrn __imp_?addFile@Package@icu_56@@QAEXPBD0@Z:near ; CODE XREF: _main+346p
					; DATA XREF: _main+346r
; void __thiscall icu_56::Package::readPackage(icu_56::Package *__hidden this, const char *)
		extrn __imp_?readPackage@Package@icu_56@@QAEXPBD@Z:near
					; CODE XREF: _main+320p
					; DATA XREF: _main+320r
; int __cdecl strcmp(const char	*Str1, const char *Str2)
		extrn _strcmp:near	; CODE XREF: _main+291p _main+377p ...
; void __thiscall icu_56::Package::setAutoPrefixWithType(icu_56::Package *__hidden this)
		extrn __imp_?setAutoPrefixWithType@Package@icu_56@@QAEXXZ:near
					; CODE XREF: _main+204p
					; DATA XREF: _main+204r
; void __thiscall icu_56::Package::setAutoPrefix(icu_56::Package *__hidden this)
		extrn __imp_?setAutoPrefix@Package@icu_56@@QAEXXZ:near
					; CODE XREF: _main+188p
					; DATA XREF: _main+188r
; int _fprintf(FILE *File, const char *Format, ...)
		extrn __imp__fprintf:near ; CODE XREF: _main+14Dp _main+1D4p ...
; FILE *__cdecl	___iob_func()
		extrn __imp____iob_func:near ; CODE XREF: _main+13Cp
					; _main+1C3p ...
; _DWORD __thiscall icu_56::Package::Package(icu_56::Package *__hidden this)
		extrn __imp_??0Package@icu_56@@QAE@XZ:near ; CODE XREF:	_main+ECp
					; _main+674p ...
; void *__cdecl	operator new(unsigned int)
		extrn ??2@YAPAXI@Z:near	; CODE XREF: _main+C6p	_main+64Ep ...
		extrn _u_parseArgs:near	; CODE XREF: _main+6Ap
		extrn _findBasename:near ; CODE	XREF: _main+50p
		extrn ___security_cookie:near ;	DATA XREF: _main+2Cr
		extrn ___CxxFrameHandler3:near ; CODE XREF: __ehhandler$_main+23j
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _main+D96p
					; __ehhandler$_main+Fp	...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _main+D7Cp
		extrn __RTC_CheckEsp:near ; CODE XREF: _main+F4p _main+144p ...
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; char *__cdecl	_strchr(const char *Str, int Val)
		extrn __imp__strchr:near ; CODE	XREF: strchr(char *,int)+28p
					; DATA XREF: strchr(char *,int)+28r
; size_t __cdecl strlen(const char *Str)
		extrn _strlen:near	; CODE XREF: isPackageName(char	const *)+22p
; _DWORD __thiscall icu_56::Package::~Package(icu_56::Package *__hidden	this)
		extrn __imp_??1Package@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::Package::`scalar deleting destructor'(uint)+28p
					; DATA XREF: icu_56::Package::`scalar deleting destructor'(uint)+28r


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	EAA89BF1B3289BBD8827ADB857B3ABB9
; Input	CRC32 :	D3EE1D34

; File Name   :	D:\compspace\objfiles\firefox\gensprep\store.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
_sprepTrie	dd ?			; DATA XREF: _init+2Dw	_init+3Fr ...
		align 8
; `generateData'::`2'::sprepTrieBlock
?sprepTrieBlock@?1??generateData@@9@9 dd 39h dup(?) ; DATA XREF: _generateData+55o
					; _generateData+22Ao
		db ?
byte_ED		db 3 dup(?)		; DATA XREF: .data:?__LINE__Var@?1??storeMappingData@@9@9@39dcc198o
		dd 44h dup(?)
		db 3 dup(?)
byte_203	db ?			; DATA XREF: .data:off_1870Co
		dd 6127h dup(?)
dword_186A0	dd 2 dup(?)		; DATA XREF: _generateData+50o
_indexes	dd ?			; DATA XREF: _generateData+202w
					; _generateData+215o
dword_186AC	dd ?			; DATA XREF: _generateData+20Ew
					; _generateData+23Br
dword_186B0	dd ?			; DATA XREF: _setUnicodeVersionNC+5Aw
					; _storeMappingData+EDw ...
		align 10h
dword_186C0	dd ?			; DATA XREF: _storeMappingData+3E5w
dword_186C4	dd ?			; DATA XREF: _setOptions+21w
		dd 8 dup(?)
_mappingData	dd ?			; DATA XREF: _generateData+241r
					; _storeMappingData+92w ...
_mappingDataCapacity dd	?		; DATA XREF: _storeMapping+3E3r
					; _storeMapping+3EBw ...
_currentIndex	dw ?			; DATA XREF: _generateData+133r
					; _storeMappingData+E3r ...
		align 4
_maxLength	dd ?			; DATA XREF: _storeMapping+3F7r
					; _storeMapping+406w ...
_hashTable	dd ?			; DATA XREF: _storeMapping+3Fr
					; _storeMapping+60w ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 186FCh
_dataInfo	dd 14h,	20000h,	50525053h, 2050203h ; DATA XREF: _generateData+19Bo
off_1870C	dd offset byte_203	; DATA XREF: _setUnicodeVersion+42o
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18710h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _setUnicodeVersion
_setUnicodeVersion proc	near

var_CC		= byte ptr -0CCh
Src		= byte ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		push	eax
		lea	ecx, [ebp+Src]
		push	ecx
		call	_u_versionFromString_56
		add	esp, 8
		push	1
		lea	eax, [ebp+Src]
		push	eax
		call	_uprv_checkValidMemory
		add	esp, 8
		push	4		; Size
		lea	ecx, [ebp+Src]
		push	ecx		; Src
		push	offset off_1870C ; Dst
		call	_memcpy
		add	esp, 0Ch
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_setUnicodeVersion endp

; ---------------------------------------------------------------------------
$LN5		dd 1			; DATA XREF: _setUnicodeVersion+53o
		dd offset $LN4
$LN4		dd 0FFFFFFF8h, 4	; DATA XREF: .text:00018788o
		dd offset $LN3		; "version"
$LN3		db 'version',0          ; DATA XREF: .text:00018794o
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 187A0h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 187A4h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 187A8h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _setUnicodeVersionNC
_setUnicodeVersionNC proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		movzx	ecx, byte ptr [eax]
		shl	ecx, 18h
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		movzx	ecx, byte ptr [eax+1]
		shl	ecx, 10h
		add	ecx, [ebp+var_8]
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		movzx	ecx, byte ptr [eax+2]
		shl	ecx, 8
		add	ecx, [ebp+var_8]
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		movzx	ecx, byte ptr [eax+3]
		add	ecx, [ebp+var_8]
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ds:dword_186B0,	eax
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_setUnicodeVersionNC endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18810h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _init
_init		proc near

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		push	4409Ch
		push	1
		call	_uprv_calloc_56
		add	esp, 8
		mov	ds:_sprepTrie, eax
		push	0
		push	0
		push	0
		push	2CECh
		push	0
		mov	eax, ds:_sprepTrie
		push	eax
		call	_utrie_open_56
		add	esp, 18h
		test	eax, eax
		jnz	short loc_1889C
		mov	esi, esp
		push	offset ??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@ ; "error: failed to initialize	tries\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	7		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1889C:				; CODE XREF: _init+4Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_init		endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 188B0h
		public ??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@
; char `string'[]
??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@ db 'error: failed to initialize tries',0Ah,0
					; DATA XREF: _init+53o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 188D4h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _setOptions
_setOptions	proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	ds:dword_186C4,	eax
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_setOptions	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18904h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _storeMapping
_storeMapping	proc near

var_120		= byte ptr -120h
var_5C		= word ptr -5Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= word ptr -38h
var_2C		= word ptr -2Ch
var_20		= word ptr -20h
var_14		= word ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 120h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_120]
		mov	ecx, 48h ; 'H'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		xor	eax, eax
		mov	[ebp+var_14], ax
		xor	eax, eax
		mov	[ebp+var_38], ax
		mov	[ebp+var_44], 0
		mov	[ebp+var_50], 0
		cmp	ds:_hashTable, 0
		jnz	short loc_1897C
		mov	eax, [ebp+arg_10]
		push	eax
		push	0
		push	offset _compareEntries
		push	offset _hashEntry
		call	_uhash_open_56
		add	esp, 10h
		mov	ds:_hashTable, eax
		push	offset _valueDeleter
		mov	eax, ds:_hashTable
		push	eax
		call	_uhash_setValueDeleter_56
		add	esp, 8

loc_1897C:				; CODE XREF: _storeMapping+46j
		push	0
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, ds:_sprepTrie
		push	ecx
		call	_utrie_get32_56
		add	esp, 0Ch
		mov	[ebp+var_50], eax
		cmp	[ebp+var_50], 0
		jz	short loc_189F3
		mov	eax, [ebp+var_50]
		sub	eax, 0FFF0h
		cmp	eax, 2
		jnz	short loc_189B4
		movzx	eax, [ebp+var_38]
		add	eax, 1
		mov	[ebp+var_38], ax
		jmp	short loc_189F3
; ---------------------------------------------------------------------------

loc_189B4:				; CODE XREF: _storeMapping+A1j
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset ??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@ ; "Type for	codepoint \\U%08X already set!"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_189F3:				; CODE XREF: _storeMapping+94j
					; _storeMapping+AEj
		xor	eax, eax
		mov	[ebp+var_20], ax
		jmp	short loc_18A07
; ---------------------------------------------------------------------------

loc_189FB:				; CODE XREF: _storeMapping+12Cj
		mov	ax, [ebp+var_20]
		add	ax, 1
		mov	[ebp+var_20], ax

loc_18A07:				; CODE XREF: _storeMapping+F5j
		movsx	eax, [ebp+var_20]
		cmp	eax, [ebp+arg_8]
		jge	short loc_18A32
		movsx	eax, [ebp+var_20]
		mov	ecx, [ebp+arg_4]
		mov	edx, 0FFFFh
		cmp	edx, [ecx+eax*4]
		sbb	eax, eax
		neg	eax
		add	eax, 1
		movsx	ecx, [ebp+var_14]
		add	ecx, eax
		mov	[ebp+var_14], cx
		jmp	short loc_189FB
; ---------------------------------------------------------------------------

loc_18A32:				; CODE XREF: _storeMapping+10Aj
		movsx	eax, [ebp+var_14]
		test	eax, eax
		jnz	loc_18AF3
		mov	eax, 0FEFCh
		mov	[ebp+var_38], ax
		movzx	eax, [ebp+var_38]
		cmp	eax, 0FFF0h
		jge	short loc_18AB3
		movzx	eax, [ebp+var_38]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, ds:_sprepTrie
		push	edx
		call	_utrie_set32_56
		add	esp, 0Ch
		movsx	eax, al
		test	eax, eax
		jnz	short loc_18AAC
		mov	esi, esp
		push	offset ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ ; "Could not set the value for code point."...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18AAC:				; CODE XREF: _storeMapping+16Bj
		jmp	loc_18D8F
; ---------------------------------------------------------------------------
		jmp	short loc_18AF3
; ---------------------------------------------------------------------------

loc_18AB3:				; CODE XREF: _storeMapping+14Cj
		mov	esi, esp
		push	0FFF0h
		push	offset ??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@	; "trieWord cannot contain value greater t"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Ch		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18AF3:				; CODE XREF: _storeMapping+134j
					; _storeMapping+1ADj
		movsx	eax, [ebp+var_14]
		cmp	eax, 1
		jnz	loc_18BE6
		mov	eax, [ebp+arg_4]
		movsx	ecx, word ptr [eax]
		mov	edx, [ebp+arg_0]
		sub	edx, ecx
		mov	[ebp+var_5C], dx
		movsx	eax, [ebp+var_5C]
		cmp	eax, 0FFFFE000h
		jl	loc_18BE6
		movsx	eax, [ebp+var_5C]
		cmp	eax, 1FFFh
		jg	loc_18BE6
		movsx	eax, [ebp+var_5C]
		shl	eax, 2
		mov	[ebp+var_38], ax
		movzx	eax, [ebp+var_38]
		and	eax, 2
		jz	short loc_18B7C
		mov	esi, esp
		push	offset ??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@ ; "The second bit in	the trie word is not "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	5		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18B7C:				; CODE XREF: _storeMapping+23Bj
		movzx	eax, [ebp+var_38]
		cmp	eax, 0FFF0h
		jge	short loc_18BE6
		movzx	eax, [ebp+var_38]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, ds:_sprepTrie
		push	edx
		call	_utrie_set32_56
		add	esp, 0Ch
		movsx	eax, al
		test	eax, eax
		jnz	short loc_18BE1
		mov	esi, esp
		push	offset ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ ; "Could not set the value for code point."...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18BE1:				; CODE XREF: _storeMapping+2A0j
		jmp	loc_18D8F
; ---------------------------------------------------------------------------

loc_18BE6:				; CODE XREF: _storeMapping+1F6j
					; _storeMapping+214j ...
		push	2
		movsx	eax, [ebp+var_14]
		add	eax, 1
		push	eax
		call	_uprv_calloc_56
		add	esp, 8
		mov	[ebp+var_8], eax
		xor	eax, eax
		mov	[ebp+var_20], ax
		xor	ecx, ecx
		mov	[ebp+var_2C], cx
		jmp	short loc_18C15
; ---------------------------------------------------------------------------

loc_18C09:				; CODE XREF: _storeMapping:loc_18CADj
		mov	ax, [ebp+var_20]
		add	ax, 1
		mov	[ebp+var_20], ax

loc_18C15:				; CODE XREF: _storeMapping+303j
		movsx	eax, [ebp+var_20]
		cmp	eax, [ebp+arg_8]
		jge	loc_18CB2
		movsx	eax, [ebp+var_20]
		mov	ecx, [ebp+arg_4]
		cmp	dword ptr [ecx+eax*4], 0FFFFh
		ja	short loc_18C56
		movsx	eax, [ebp+var_20]
		movsx	ecx, [ebp+var_2C]
		mov	edx, [ebp+var_8]
		mov	esi, [ebp+arg_4]
		mov	ax, [esi+eax*4]
		mov	[edx+ecx*2], ax
		mov	cx, [ebp+var_2C]
		add	cx, 1
		mov	[ebp+var_2C], cx
		jmp	short loc_18CAD
; ---------------------------------------------------------------------------

loc_18C56:				; CODE XREF: _storeMapping+32Cj
		movsx	eax, [ebp+var_20]
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx+eax*4]
		shr	edx, 0Ah
		add	edx, 0D7C0h
		movsx	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_8]
		mov	[ecx+eax*2], dx
		mov	dx, [ebp+var_2C]
		add	dx, 1
		mov	[ebp+var_2C], dx
		movsx	eax, [ebp+var_20]
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx+eax*4]
		and	edx, 3FFh
		or	edx, 0DC00h
		movsx	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_8]
		mov	[ecx+eax*2], dx
		mov	dx, [ebp+var_2C]
		add	dx, 1
		mov	[ebp+var_2C], dx

loc_18CAD:				; CODE XREF: _storeMapping+350j
		jmp	loc_18C09
; ---------------------------------------------------------------------------

loc_18CB2:				; CODE XREF: _storeMapping+318j
		push	0Ch
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	ecx, [ebp+var_8]
		mov	[eax], ecx
		mov	eax, [ebp+var_44]
		mov	ecx, [ebp+arg_C]
		mov	[eax+8], ecx
		mov	eax, [ebp+var_44]
		mov	cx, [ebp+var_14]
		mov	[eax+4], cx
		mov	eax, [ebp+var_44]
		movsx	ecx, word ptr [eax+4]
		cmp	ecx, 3
		jle	short loc_18CF4
		mov	eax, ds:_mappingDataCapacity
		add	eax, 1
		mov	ds:_mappingDataCapacity, eax

loc_18CF4:				; CODE XREF: _storeMapping+3E1j
		mov	eax, [ebp+var_44]
		movsx	ecx, word ptr [eax+4]
		cmp	ds:_maxLength, ecx
		jge	short loc_18D10
		mov	eax, [ebp+var_44]
		movsx	ecx, word ptr [eax+4]
		mov	ds:_maxLength, ecx

loc_18D10:				; CODE XREF: _storeMapping+3FDj
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, [ebp+var_44]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, ds:_hashTable
		push	eax
		call	_uhash_iput_56
		add	esp, 10h
		movsx	eax, [ebp+var_14]
		add	eax, ds:_mappingDataCapacity
		mov	ds:_mappingDataCapacity, eax
		mov	eax, [ebp+arg_10]
		cmp	dword ptr [eax], 0
		jle	short loc_18D8F
		mov	eax, [ebp+arg_10]
		mov	ecx, [eax]
		push	ecx
		call	_u_errorName_56
		add	esp, 4
		mov	esi, esp
		push	eax		; Format
		push	offset ??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@ ; "Failed to put entries into	the hastable"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_10]
		mov	ecx, [eax]
		push	ecx		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18D8F:				; CODE XREF: _storeMapping:loc_18AACj
					; _storeMapping:loc_18BE1j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 120h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_storeMapping	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18DA4h
		public ??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@
; char `string'[]
??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@ db 'Failed to put entries into the hastable. Error: %s',0Ah,0
					; DATA XREF: _storeMapping+44Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 18DD8h
		public ??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@
; char `string'[]
??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@ db 'The second bit in the trie word is not zero while storing a delta'
					; DATA XREF: _storeMapping+23Fo
		db '.',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18E1Ch
		public ??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@
; char `string'[]
??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@ db 'trieWord cannot contain value greater than threshold 0x%04X.',0Ah,0
					; DATA XREF: _storeMapping+1B6o
					; _storeRange+143o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18E5Ch
		public ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@
; char `string'[]
??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ db 'Could not set the value for code point.',0Ah,0
					; DATA XREF: _storeMapping+16Fo
					; _storeMapping+2A4o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18E88h
		public ??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@
; char `string'[]
??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@ db	'Type for codepoint \U%08X already set!.',0Ah,0
					; DATA XREF: _storeMapping+B6o
					; _storeMappingData+1C9o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18EB4h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_valueDeleter	proc near		; DATA XREF: _storeMapping+65o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		push	ecx
		call	_uprv_free_56
		add	esp, 4
		mov	eax, [ebp+var_8]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_valueDeleter	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18F08h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_hashEntry	proc near		; DATA XREF: _storeMapping+53o

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_hashEntry	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18F30h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_compareEntries	proc near		; DATA XREF: _storeMapping+4Eo

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		cmp	eax, [ebp+arg_4]
		setnz	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_compareEntries	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18F60h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _storeRange
_storeRange	proc near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= word ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		xor	eax, eax
		mov	[ebp+var_8], ax
		mov	eax, [ebp+arg_8]
		add	eax, 0FFF0h
		cmp	eax, 0FFFFh
		jle	short loc_18FCE
		mov	esi, esp
		push	offset ??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@	; "trieWord cannot contain value greater t"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Ch		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18FCE:				; CODE XREF: _storeRange+31j
		mov	eax, [ebp+arg_8]
		add	eax, 0FFF0h
		mov	[ebp+var_8], ax
		mov	eax, [ebp+arg_0]
		cmp	eax, [ebp+arg_4]
		jnz	loc_19186
		push	0
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, ds:_sprepTrie
		push	ecx
		call	_utrie_get32_56
		add	esp, 0Ch
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jbe	loc_19126
		cmp	[ebp+var_14], 0FFF0h
		jnb	loc_190DE
		cmp	[ebp+arg_8], 2
		jnz	loc_190DE
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax
		mov	ax, word ptr [ebp+var_14]
		mov	[ebp+var_8], ax
		movzx	eax, [ebp+var_8]
		cmp	eax, 0FFF0h
		jge	short loc_1909C
		movzx	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, ds:_sprepTrie
		push	edx
		call	_utrie_set32_56
		add	esp, 0Ch
		movsx	eax, al
		test	eax, eax
		jnz	short loc_19095
		mov	esi, esp
		push	offset ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ ; "Could not set the value for code point."...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19095:				; CODE XREF: _storeRange+F8j
		jmp	loc_191E8
; ---------------------------------------------------------------------------
		jmp	short loc_190DC
; ---------------------------------------------------------------------------

loc_1909C:				; CODE XREF: _storeRange+D9j
		mov	esi, esp
		push	0FFF0h
		push	offset ??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@	; "trieWord cannot contain value greater t"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Ch		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_190DC:				; CODE XREF: _storeRange+13Aj
		jmp	short loc_19126
; ---------------------------------------------------------------------------

loc_190DE:				; CODE XREF: _storeRange+AFj
					; _storeRange+B9j
		movzx	eax, [ebp+var_8]
		cmp	[ebp+var_14], eax
		jz	short loc_19126
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset ??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@ ; "Value for codepoint \\U%08X already set"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19126:				; CODE XREF: _storeRange+A2j
					; _storeRange:loc_190DCj ...
		movzx	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, ds:_sprepTrie
		push	edx
		call	_utrie_set32_56
		add	esp, 0Ch
		movsx	eax, al
		test	eax, eax
		jnz	short loc_19184
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset ??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@ ; "Could not set the value for code point "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19184:				; CODE XREF: _storeRange+1E3j
		jmp	short loc_191E8
; ---------------------------------------------------------------------------

loc_19186:				; CODE XREF: _storeRange+80j
		push	0
		movzx	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		add	ecx, 1
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, ds:_sprepTrie
		push	eax
		call	_utrie_setRange32_56
		add	esp, 14h
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_191E8
		mov	esi, esp
		push	offset ??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@	; "Value for certain codepoint already set"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Ch		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_191E8:				; CODE XREF: _storeRange:loc_19095j
					; _storeRange:loc_19184j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_storeRange	endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 191FCh
		public ??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@
; char `string'[]
??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@ db 'Value for certain codepoint already set.',0Ah,0
					; DATA XREF: _storeRange+24Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19228h
		public ??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@
; char `string'[]
??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@ db 'Could not set the value for code point \U%08X.',0Ah,0
					; DATA XREF: _storeRange+1EBo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19258h
		public ??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@
; char `string'[]
??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@ db	'Value for codepoint \U%08X already set!.',0Ah,0
					; DATA XREF: _storeRange+18Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19284h
		public ??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@
; char `string'[]
??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@ db 'trieWord cannot contain value greater than 0xFFFF.',0Ah,0
					; DATA XREF: _storeRange+35o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 192B8h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl generateData(int,	char *Str)
		public _generateData
_generateData	proc near

var_108		= byte ptr -108h
var_44		= dword	ptr -44h
Dest		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
Code		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
Str		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_108]
		mov	ecx, 42h ; 'B'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+Code], 0
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		add	eax, 64h ; 'd'
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+Dest], eax
		call	_storeMappingData
		lea	eax, [ebp+Code]
		push	eax
		push	1
		push	offset _getFoldedValue
		push	offset dword_186A0
		push	offset ?sprepTrieBlock@?1??generateData@@9@9 ; `generateData'::`2'::sprepTrieBlock
		mov	ecx, ds:_sprepTrie
		push	ecx
		call	_utrie_serialize_56
		add	esp, 18h
		mov	[ebp+var_44], eax
		cmp	[ebp+Code], 0
		jle	short loc_19374
		mov	eax, [ebp+Code]
		push	eax
		call	_u_errorName_56
		add	esp, 4
		mov	esi, esp
		push	eax		; Format
		push	offset ??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@ ; "error: utrie_serialize(sprep trie)	fail"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19374:				; CODE XREF: _generateData+70j
		mov	eax, ds:_mappingDataCapacity
		mov	ecx, [ebp+var_44]
		lea	edx, [ecx+eax*2+40h]
		mov	[ebp+var_20], edx
		movsx	eax, byte ptr ds:_beVerbose
		test	eax, eax
		jz	loc_19427
		mov	esi, esp
		mov	eax, [ebp+var_44]
		push	eax
		push	offset ??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; "size of	sprep trie		%5u byt"...
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+var_20]
		push	eax
		mov	ecx, [ebp+Str]
		push	ecx
		push	offset ??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@ ; "size of icudt56l_%s.spp contents:	%ld b"...
		call	dword ptr ds:__imp__printf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, ds:_mappingDataCapacity
		shl	eax, 1
		mov	esi, esp
		push	eax
		push	offset ??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@ ; "size of	mapping	data array %5u bytes\n"
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, ds:_currentIndex
		mov	esi, esp
		push	eax
		push	offset ??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@	; "Number of code units	in mappingData (cu"...
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, ds:_maxLength
		push	eax
		push	offset ??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@ ; "Maximum length of the mapping string is"...
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19427:				; CODE XREF: _generateData+D4j
		mov	eax, [ebp+Dest]
		mov	byte ptr [eax],	0
		mov	eax, [ebp+Str]
		push	eax		; Source
		mov	ecx, [ebp+Dest]
		push	ecx		; Dest
		call	_strcat
		add	esp, 8
		lea	eax, [ebp+Code]
		push	eax
		movsx	ecx, byte ptr ds:_haveCopyright
		neg	ecx
		sbb	ecx, ecx
		and	ecx, offset ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; "	Copyright (C) 2015, International Busi"...
		push	ecx
		push	offset _dataInfo
		mov	edx, [ebp+Dest]
		push	edx
		push	offset ??_C@_03NMPPDODH@spp?$AA@ ; `string'
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_create
		add	esp, 18h
		mov	[ebp+var_8], eax
		cmp	[ebp+Code], 0
		jle	short loc_194B7
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax
		push	offset ??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@ ; "gensprep: unable to create	the output f"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_194B7:				; CODE XREF: _generateData+1BCj
		mov	eax, [ebp+var_44]
		mov	ds:_indexes, eax
		mov	eax, ds:_mappingDataCapacity
		shl	eax, 1
		mov	ds:dword_186AC,	eax
		push	40h ; '@'
		push	offset _indexes
		mov	eax, [ebp+var_8]
		push	eax
		call	_udata_writeBlock
		add	esp, 0Ch
		mov	eax, [ebp+var_44]
		push	eax
		push	offset ?sprepTrieBlock@?1??generateData@@9@9 ; `generateData'::`2'::sprepTrieBlock
		mov	ecx, [ebp+var_8]
		push	ecx
		call	_udata_writeBlock
		add	esp, 0Ch
		mov	eax, ds:dword_186AC
		push	eax
		mov	ecx, ds:_mappingData
		push	ecx
		mov	edx, [ebp+var_8]
		push	edx
		call	_udata_writeBlock
		add	esp, 0Ch
		lea	eax, [ebp+Code]
		push	eax
		mov	ecx, [ebp+var_8]
		push	ecx
		call	_udata_finish
		add	esp, 8
		mov	[ebp+var_2C], eax
		cmp	[ebp+Code], 0
		jle	short loc_19566
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax
		push	offset ??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@ ; "gensprep: error	%d writing the output f"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19566:				; CODE XREF: _generateData+26Bj
		mov	eax, [ebp+var_2C]
		cmp	eax, [ebp+var_20]
		jz	short loc_195B1
		mov	esi, esp
		mov	eax, [ebp+var_20]
		push	eax
		mov	ecx, [ebp+var_2C]
		push	ecx
		push	offset ??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@ ; "gensprep error:	data length %ld	!= calc"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	5		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_195B1:				; CODE XREF: _generateData+2B4j
		cmp	ds:_hashTable, 0
		jz	short loc_195C8
		mov	eax, ds:_hashTable
		push	eax
		call	_uhash_close_56
		add	esp, 4

loc_195C8:				; CODE XREF: _generateData+300j
		mov	eax, [ebp+Dest]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN11
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 108h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_generateData	endp

; ---------------------------------------------------------------------------
		align 4
$LN11		dd 1			; DATA XREF: _generateData+320o
		dd offset $LN10
$LN10		dd 0FFFFFFECh, 4	; DATA XREF: .text:00019600o
		dd offset $LN9		; "errorCode"
$LN9		db 'errorCode',0        ; DATA XREF: .text:0001960Co
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1961Ch
		public ??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@
; char `string'[]
??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@ db 'gensprep error: data length %ld != calculated size %ld',0Ah,0
					; DATA XREF: _generateData+2C0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19654h
		public ??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@
; char `string'[]
??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@ db 'gensprep: error %d writing the output file',0Ah,0
					; DATA XREF: _generateData+273o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19680h
		public ??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@
; char `string'[]
??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@ db 'gensprep: unable to create the output file, error %d',0Ah,0
					; DATA XREF: _generateData+1C4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 196B8h
		public ??_C@_03NMPPDODH@spp?$AA@
; `string'
??_C@_03NMPPDODH@spp?$AA@ dd 707073h	; DATA XREF: _generateData+1A4o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 196BCh
		public ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
; `string'
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@	db ' Copyright (C) 2015, International Business Machines Corporation '
					; DATA XREF: _generateData+194o
		db 'and others. All Rights Reserved. ',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19720h
		public ??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@
; char `string'[]
??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@ db 'Maximum length of the mapping string is : %i ',0Ah,0
					; DATA XREF: _generateData+15Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19750h
		public ??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@
; char `string'[]
??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@ db 'Number of code units in mappingData (currentIndex) are: %i ',0Ah,0
					; DATA XREF: _generateData+13Do
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19790h
		public ??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@
; char `string'[]
??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@ db 'size of mapping data array %5u bytes',0Ah,0
					; DATA XREF: _generateData+11Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 197B8h
		public ??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@
; char `string'[]
??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@ db 'size of icudt56l_%s.spp contents: %ld bytes',0Ah,0
					; DATA XREF: _generateData+FFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 197E8h
		public ??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
; char `string'[]
??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ db 'size of sprep trie              %5u bytes',0Ah,0
					; DATA XREF: _generateData+E0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19814h
		public ??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@
; char `string'[]
??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@ db 'error: utrie_serialize(sprep trie) failed, %s',0Ah,0
					; DATA XREF: _generateData+81o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 19844h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_storeMappingData proc near		; CODE XREF: _generateData+40p

var_144		= byte ptr -144h
var_80		= dword	ptr -80h
var_74		= dword	ptr -74h
var_68		= word ptr -68h
var_5C		= dword	ptr -5Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 144h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_144]
		mov	ecx, 51h ; 'Q'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0FFFFFFFFh
		mov	[ebp+var_14], 0
		mov	[ebp+var_20], 0
		mov	[ebp+var_2C], 0
		mov	[ebp+var_38], 0
		mov	[ebp+var_44], 0
		mov	[ebp+var_50], 1
		mov	[ebp+var_5C], 0
		xor	eax, eax
		mov	[ebp+var_68], ax
		mov	[ebp+var_74], 0
		cmp	ds:_hashTable, 0
		jnz	short loc_198B5
		jmp	loc_19C2E
; ---------------------------------------------------------------------------

loc_198B5:				; CODE XREF: _storeMappingData+6Aj
		mov	eax, ds:_hashTable
		push	eax
		call	_uhash_count_56
		add	esp, 4
		mov	[ebp+var_38], eax
		push	2
		mov	eax, ds:_mappingDataCapacity
		push	eax
		call	_uprv_calloc_56
		add	esp, 8
		mov	ds:_mappingData, eax

loc_198DB:				; CODE XREF: _storeMappingData+3C1j
		mov	eax, [ebp+var_44]
		cmp	eax, [ebp+var_38]
		jge	loc_19C0A

loc_198E7:				; CODE XREF: _storeMappingData:loc_19BF0j
		lea	eax, [ebp+var_8]
		push	eax
		mov	ecx, ds:_hashTable
		push	ecx
		call	_uhash_nextElement_56
		add	esp, 8
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_19BF5
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+8]
		mov	[ebp+var_2C], ecx
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+4]
		mov	[ebp+var_20], ecx
		mov	eax, [ebp+var_5C]
		cmp	eax, [ebp+var_50]
		jz	short loc_19954
		cmp	[ebp+var_5C], 3
		jg	short loc_19938
		movsx	eax, ds:_currentIndex
		mov	ecx, [ebp+var_50]
		mov	ds:dword_186B0[ecx*4], eax

loc_19938:				; CODE XREF: _storeMappingData+E1j
		cmp	[ebp+var_5C], 3
		jg	short loc_1994E
		cmp	[ebp+var_50], 4
		jnz	short loc_1994E
		movsx	eax, ds:_currentIndex
		mov	[ebp+var_74], eax

loc_1994E:				; CODE XREF: _storeMappingData+F8j
					; _storeMappingData+FEj
		mov	eax, [ebp+var_50]
		mov	[ebp+var_5C], eax

loc_19954:				; CODE XREF: _storeMappingData+DBj
		mov	eax, [ebp+var_20]
		movsx	ecx, word ptr [eax+4]
		cmp	ecx, [ebp+var_50]
		jnz	loc_19BF0
		mov	[ebp+var_80], 0
		movsx	eax, ds:_currentIndex
		shl	eax, 2
		mov	[ebp+var_68], ax
		movzx	eax, [ebp+var_68]
		add	eax, 2
		mov	[ebp+var_68], ax
		movzx	eax, [ebp+var_68]
		cmp	eax, 0FFF0h
		jle	short loc_199CF
		mov	esi, esp
		push	0FFF0h
		push	offset ??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@	; "trieWord cannot contain value greater t"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Ch		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_199CF:				; CODE XREF: _storeMappingData+149j
		push	0
		mov	eax, [ebp+var_2C]
		push	eax
		mov	ecx, ds:_sprepTrie
		push	ecx
		call	_utrie_get32_56
		add	esp, 0Ch
		mov	[ebp+var_80], eax
		cmp	[ebp+var_80], 0
		jz	short loc_19A46
		mov	eax, [ebp+var_80]
		sub	eax, 0FFF0h
		cmp	eax, 2
		jnz	short loc_19A07
		movzx	eax, [ebp+var_68]
		add	eax, 1
		mov	[ebp+var_68], ax
		jmp	short loc_19A46
; ---------------------------------------------------------------------------

loc_19A07:				; CODE XREF: _storeMappingData+1B4j
		mov	esi, esp
		mov	eax, [ebp+var_2C]
		push	eax
		push	offset ??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@ ; "Type for	codepoint \\U%08X already set!"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19A46:				; CODE XREF: _storeMappingData+1A7j
					; _storeMappingData+1C1j
		movzx	eax, [ebp+var_68]
		push	eax
		mov	ecx, [ebp+var_2C]
		push	ecx
		mov	edx, ds:_sprepTrie
		push	edx
		call	_utrie_set32_56
		add	esp, 0Ch
		movsx	eax, al
		test	eax, eax
		jnz	short loc_19AA0
		mov	esi, esp
		push	offset ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ ; "Could not set the value for code point."...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19AA0:				; CODE XREF: _storeMappingData+21Fj
		mov	eax, [ebp+var_44]
		add	eax, 1
		mov	[ebp+var_44], eax
		movsx	eax, ds:_currentIndex
		mov	ecx, [ebp+var_20]
		movsx	edx, word ptr [ecx+4]
		lea	eax, [eax+edx+1]
		cmp	eax, 3FBFh
		jle	short loc_19B13
		mov	esi, esp
		push	3FBFh
		movsx	eax, ds:_currentIndex
		mov	ecx, [ebp+var_20]
		movsx	edx, word ptr [ecx+4]
		add	eax, edx
		push	eax
		push	offset ??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@ ; "Too many entries in the mapping table %"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	8		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19B13:				; CODE XREF: _storeMappingData+27Cj
		cmp	[ebp+var_50], 3
		jle	short loc_19B3E
		movsx	eax, ds:_currentIndex
		mov	ecx, ds:_mappingData
		mov	dx, word ptr [ebp+var_50]
		mov	[ecx+eax*2], dx
		mov	ax, ds:_currentIndex
		add	ax, 1
		mov	ds:_currentIndex, ax

loc_19B3E:				; CODE XREF: _storeMappingData+2D3j
		push	1
		mov	eax, [ebp+var_20]
		mov	ecx, [eax]
		push	ecx
		call	_uprv_checkValidMemory
		add	esp, 8
		mov	edx, [ebp+var_20]
		movsx	eax, word ptr [edx+4]
		shl	eax, 1
		mov	esi, esp
		push	eax		; Size
		mov	ecx, [ebp+var_20]
		mov	edx, [ecx]
		push	edx		; Src
		movsx	eax, ds:_currentIndex
		mov	ecx, ds:_mappingData
		lea	edx, [ecx+eax*2]
		push	edx		; Dst
		call	dword ptr ds:__imp__memmove
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_20]
		movsx	ecx, word ptr [eax+4]
		movsx	edx, ds:_currentIndex
		add	edx, ecx
		mov	ds:_currentIndex, dx
		movsx	eax, ds:_currentIndex
		cmp	eax, ds:_mappingDataCapacity
		jle	short loc_19BF0
		mov	eax, ds:?__LINE__Var@?1??storeMappingData@@9@9@39dcc198
		add	eax, 60h ; '`'
		mov	esi, esp
		push	eax
		push	offset ??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@ ; "d:\\mozilla\\intl\\icu\\source\\tools\\"...
		push	offset ??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@ ; "gensprep, fatal error at %s, %d.  Abort"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	5		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_19BF0:				; CODE XREF: _storeMappingData+11Aj
					; _storeMappingData+361j
		jmp	loc_198E7
; ---------------------------------------------------------------------------

loc_19BF5:				; CODE XREF: _storeMappingData+BDj
		mov	eax, [ebp+var_50]
		add	eax, 1
		mov	[ebp+var_50], eax
		mov	[ebp+var_8], 0FFFFFFFFh
		jmp	loc_198DB
; ---------------------------------------------------------------------------

loc_19C0A:				; CODE XREF: _storeMappingData+9Dj
		cmp	[ebp+var_50], 3
		jg	short loc_19C26
		movsx	eax, ds:_currentIndex
		add	eax, 1
		mov	ecx, [ebp+var_50]
		mov	ds:dword_186B0[ecx*4], eax
		jmp	short loc_19C2E
; ---------------------------------------------------------------------------

loc_19C26:				; CODE XREF: _storeMappingData+3CAj
		mov	eax, [ebp+var_74]
		mov	ds:dword_186C0,	eax

loc_19C2E:				; CODE XREF: _storeMappingData+6Cj
					; _storeMappingData+3E0j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN24
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 144h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_storeMappingData endp

; ---------------------------------------------------------------------------
		align 4
$LN24		dd 1			; DATA XREF: _storeMappingData+3EEo
		dd offset $LN23
$LN23		dd 0FFFFFFF8h, 4	; DATA XREF: .text:00019C58o
		dd offset $LN22
$LN22		dd 736F70h		; DATA XREF: .text:00019C64o
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19C6Ch
		public ??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@
; char `string'[]
??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@ db 'gensprep, fatal error at %s, %d.  Aborting.',0Ah,0
					; DATA XREF: _storeMappingData+373o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19C9Ch
		public ??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@
; `string'
??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@ db 'd:\mozilla\intl\icu\source\tools\gensprep\store.c',0
					; DATA XREF: _storeMappingData+36Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 19CD0h
		public ?__LINE__Var@?1??storeMappingData@@9@9@39dcc198
?__LINE__Var@?1??storeMappingData@@9@9@39dcc198	dd offset byte_ED
					; DATA XREF: _storeMappingData+363r
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 19CD4h
		public ??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@
; char `string'[]
??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@ db 'Too many entries in the mapping table %i. Maximum allowed is %i',0Ah
					; DATA XREF: _storeMappingData+296o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19D18h
		public ??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@
; char `string'[]
??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@ db 'trieWord cannot contain value greater than 0x%04X.',0Ah,0
					; DATA XREF: _storeMappingData+152o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 19D4Ch
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_getFoldedValue	proc near		; DATA XREF: _generateData+4Bo

var_E4		= byte ptr -0E4h
var_1D		= byte ptr -1Dh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		add	eax, 400h
		mov	[ebp+var_14], eax

loc_19D7C:				; CODE XREF: _getFoldedValue:loc_19DC4j
		mov	eax, [ebp+arg_4]
		cmp	eax, [ebp+var_14]
		jge	short loc_19DC6
		lea	eax, [ebp+var_1D]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_utrie_get32_56
		add	esp, 0Ch
		mov	[ebp+var_8], eax
		movsx	eax, [ebp+var_1D]
		test	eax, eax
		jz	short loc_19DAE
		mov	eax, [ebp+arg_4]
		add	eax, 20h ; ' '
		mov	[ebp+arg_4], eax
		jmp	short loc_19DC4
; ---------------------------------------------------------------------------

loc_19DAE:				; CODE XREF: _getFoldedValue+55j
		cmp	[ebp+var_8], 0
		jz	short loc_19DBB
		mov	eax, [ebp+arg_8]
		jmp	short loc_19DC8
; ---------------------------------------------------------------------------
		jmp	short loc_19DC4
; ---------------------------------------------------------------------------

loc_19DBB:				; CODE XREF: _getFoldedValue+66j
		mov	eax, [ebp+arg_4]
		add	eax, 1
		mov	[ebp+arg_4], eax

loc_19DC4:				; CODE XREF: _getFoldedValue+60j
					; _getFoldedValue+6Dj
		jmp	short loc_19D7C
; ---------------------------------------------------------------------------

loc_19DC6:				; CODE XREF: _getFoldedValue+36j
		xor	eax, eax

loc_19DC8:				; CODE XREF: _getFoldedValue+6Bj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN11_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getFoldedValue	endp

; ---------------------------------------------------------------------------
		align 10h
$LN11_0		dd 1			; DATA XREF: _getFoldedValue+80o
		dd offset $LN10_0
$LN10_0		dd 0FFFFFFE3h, 1	; DATA XREF: .text:00019DF4o
		dd offset $LN9_0	; "inBlockZero"
$LN9_0		db 'inBlockZero',0      ; DATA XREF: .text:00019E00o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 19E10h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _cleanUpData
_cleanUpData	proc near

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, ds:_mappingData
		push	eax
		call	_uprv_free_56
		add	esp, 4
		mov	eax, ds:_sprepTrie
		push	eax
		call	_utrie_close_56
		add	esp, 4
		mov	eax, ds:_sprepTrie
		push	eax
		call	_uprv_free_56
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_cleanUpData	endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _setUnicodeVersion+47p
		extrn _uprv_checkValidMemory:near ; CODE XREF: _setUnicodeVersion+34p
					; _storeMappingData+302p
		extrn _u_versionFromString_56:near ; CODE XREF:	_setUnicodeVersion+26p
		extrn __RTC_CheckEsp:near ; CODE XREF: _setUnicodeVersion+6Bp
					; _init+62p ...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _setUnicodeVersion+59p
					; _generateData+326p ...
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _init+7Fp
					; _storeMapping+E2p ...
; int _fprintf(FILE *File, const char *Format, ...)
		extrn __imp__fprintf:near ; CODE XREF: _init+6Bp
					; _storeMapping+CEp ...
; FILE *__cdecl	___iob_func()
		extrn __imp____iob_func:near ; CODE XREF: _init+5Ap
					; _storeMapping+BDp ...
		extrn _utrie_open_56:near ; CODE XREF: _init+45p
		extrn _uprv_calloc_56:near ; CODE XREF:	_init+25p
					; _storeMapping+2ECp ...
		extrn _u_errorName_56:near ; CODE XREF:	_storeMapping+443p
					; _generateData+76p
		extrn _uhash_iput_56:near ; CODE XREF: _storeMapping+41Ep
		extrn _uprv_malloc_56:near ; CODE XREF:	_storeMapping+3B0p
					; _generateData+35p
		extrn _utrie_set32_56:near ; CODE XREF:	_storeMapping+15Ep
					; _storeMapping+293p ...
		extrn _utrie_get32_56:near ; CODE XREF:	_storeMapping+85p
					; _storeRange+93p ...
		extrn _uhash_setValueDeleter_56:near ; CODE XREF: _storeMapping+70p
		extrn _uhash_open_56:near ; CODE XREF: _storeMapping+58p
		extrn _uprv_free_56:near ; CODE	XREF: _valueDeleter+2Ap
					; _valueDeleter+36p ...
		extrn _utrie_setRange32_56:near	; CODE XREF: _storeRange+23Ep
		extrn _uhash_close_56:near ; CODE XREF:	_generateData+308p
		extrn _udata_finish:near ; CODE	XREF: _generateData+25Cp
		extrn _udata_writeBlock:near ; CODE XREF: _generateData+21Ep
					; _generateData+233p ...
		extrn _udata_create:near ; CODE	XREF: _generateData+1ADp
		extrn _haveCopyright:near ; DATA XREF: _generateData+189r
; char *__cdecl	strcat(char *Dest, const char *Source)
		extrn _strcat:near	; CODE XREF: _generateData+17Dp
; int _printf(const char *Format, ...)
		extrn __imp__printf:near ; CODE	XREF: _generateData+E5p
					; _generateData+104p ...
		extrn _beVerbose:near	; DATA XREF: _generateData+CBr
		extrn _utrie_serialize_56:near ; CODE XREF: _generateData+61p
; size_t __cdecl strlen(const char *Str)
		extrn _strlen:near	; CODE XREF: _generateData+29p
; void *__cdecl	_memmove(void *Dst, const void *Src, size_t Size)
		extrn __imp__memmove:near ; CODE XREF: _storeMappingData+32Dp
					; DATA XREF: _storeMappingData+32Dr
		extrn _uhash_nextElement_56:near ; CODE	XREF: _storeMappingData+AEp
		extrn _uhash_count_56:near ; CODE XREF:	_storeMappingData+77p
		extrn _utrie_close_56:near ; CODE XREF:	_cleanUpData+32p


		end

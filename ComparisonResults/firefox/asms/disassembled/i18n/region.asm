;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	97F225F19E2341B02687AF7AEDBDF0ED
; Input	CRC32 :	CB61764C

; File Name   :	D:\compspace\objfiles\firefox\i18n\region.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::binaryo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4 ; DATA XREF: .xdata$x:0000591Co
					; .xdata$x:0000592Co ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5 ; DATA XREF: .xdata$x:0000593Co
					; .xdata$x:00005944o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5 ; DATA XREF: .xdata$x:00005954o
					; .rdata:`string'o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6 ; DATA XREF: .xdata$x:00005974o
					; .xdata$x:0000597Co ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6 ; DATA XREF: .text:$LN253o
					; .xdata$x:00005994o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7 ; DATA XREF: .xdata$x:000059BCo
					; .xdata$x:000059C4o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B db 20h, 0
word_7E		dw 0			; DATA XREF: .rdata:_RANGE_MARKERo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset dword_100
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	??0Region@icu_56@@QAE@ABV01@@Z ; icu_56::Region::Region(icu_56::Region const &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	a56@@ ;	"56@@"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_7FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset loc_1FFE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_2FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_3FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_7FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	locret_1C0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong(UErrorCode *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_2FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
; icu_56::UVector *availableRegions
_availableRegions dd ?			; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2847r
					; icu_56::Region::loadRegionData(UErrorCode &)+2901w ...
		align 10h
dword_100	dd 5 dup(?)		; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
; icu_56::UInitOnce gRegionDataInitOnce
_gRegionDataInitOnce dd	2 dup(?)	; DATA XREF: icu_56::Region::cleanupRegionData(void)+175o
					; icu_56::Region::getInstance(char const *,UErrorCode &)+49o ...
_regionAliases	dd ?			; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2B9Cw
					; icu_56::Region::cleanupRegionData(void):loc_6165r ...
_regionIDMap	dd ?			; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2B8Fw
					; icu_56::Region::cleanupRegionData(void):loc_6193r ...
_numericCodeMap	dd ?			; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2B82w
					; icu_56::Region::cleanupRegionData(void):loc_617Cr ...
; icu_56::UVector *allRegions
_allRegions	dd ?			; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2DCw
					; icu_56::Region::loadRegionData(UErrorCode &)+822r ...
; char `public:	static void * __cdecl icu_56::RegionNameEnumeration::getStaticClassID(void)'::`2'::classID
?classID@?1??getStaticClassID@RegionNameEnumeration@icu_56@@SAPAXXZ@4DA	dd ?
					; DATA XREF: icu_56::RegionNameEnumeration::getStaticClassID(void)+1Eo
; icu_56::UnicodeString	RANGE_MARKER_STRING
_RANGE_MARKER_STRING dd	10h dup(?)	; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+6DFo
					; icu_56::Region::loadRegionData(UErrorCode &)+997o ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 170h
; wchar_t UNKNOWN_REGION_ID
_UNKNOWN_REGION_ID:			; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+1F95o
		unicode	0, <ZZ>,0
		align 4
; wchar_t OUTLYING_OCEANIA_REGION_ID
_OUTLYING_OCEANIA_REGION_ID:		; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+20FFo
		unicode	0, <QO>,0
		align 10h
; wchar_t WORLD_ID
_WORLD_ID:				; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+1F43o
		unicode	0, <001>,0
; wchar_t RANGE_MARKER
_RANGE_MARKER	dd offset word_7E	; DATA XREF: icu_56::`dynamic initializer for 'RANGE_MARKER_STRING''(void)+20o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp

locret_1C0:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 1C4h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 1C8h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 200h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::Region::Region(icu_56::Region *this, const struct icu_56::Region *)
		public ??0Region@icu_56@@QAE@ABV01@@Z
??0Region@icu_56@@QAE@ABV01@@Z proc near
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0Region@icu_56@@QAE@ABV01@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UObject *
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z ; icu_56::UObject::UObject(icu_56::UObject const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7Region@icu_56@@6B@ ; const icu_56::Region::`vftable'
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+48h]
		mov	[eax+48h], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4Ch]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+50h]
		mov	[eax+50h], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+54h]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+58h]
		mov	[eax+58h], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0Region@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 2F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0Region@icu_56@@QAE@ABV01@@Z$0 proc near ; DATA XREF:	.xdata$x:00000338o
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0Region@icu_56@@QAE@ABV01@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0Region@icu_56@@QAE@ABV01@@Z proc	near
					; DATA XREF: icu_56::Region::Region(icu_56::Region const &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0Region@icu_56@@QAE@ABV01@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0Region@icu_56@@QAE@ABV01@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 328h
		dd offset ??_R4Region@icu_56@@6B@ ; const icu_56::Region::`RTTI	Complete Object	Locator'
;
; Exported entry
;
		public ??_7Region@icu_56@@6B@
; const	icu_56::Region::`vftable'
??_7Region@icu_56@@6B@ dd offset ??_ERegion@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::Region::Region(icu_56::Region const &)+62o
					; icu_56::Region::Region(void)+5Eo ...
					; icu_56::Region::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 334h
__unwindtable$??0Region@icu_56@@QAE@ABV01@@Z dd	0FFFFFFFFh ; DATA XREF:	.xdata$x:00000344o
		dd offset __unwindfunclet$??0Region@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0Region@icu_56@@QAE@ABV01@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0Region@icu_56@@QAE@ABV01@@Z+14o
		dd offset __unwindtable$??0Region@icu_56@@QAE@ABV01@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 360h
		public ??_R4Region@icu_56@@6B@
; const	icu_56::Region::`RTTI Complete Object Locator'
??_R4Region@icu_56@@6B@	dd 3 dup(0)	; DATA XREF: .rdata:00000328o
		dd offset ??_R0?AVRegion@icu_56@@@8 ; icu_56::Region `RTTI Type	Descriptor'
		dd offset ??_R3Region@icu_56@@8	; icu_56::Region::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 374h
		public ??_R0?AVRegion@icu_56@@@8
; class	icu_56::Region `RTTI Type Descriptor'
??_R0?AVRegion@icu_56@@@8 dd offset ??_7type_info@@6B@ ; DATA XREF: .rdata$r:0000036Co
					; .rdata$r:icu_56::Region::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avregion@icu	db '.?AVRegion@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 390h
		public ??_R3Region@icu_56@@8
; icu_56::Region::`RTTI	Class Hierarchy	Descriptor'
??_R3Region@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000370o
					; .rdata$r:000003C8o
		dd 3
		dd offset ??_R2Region@icu_56@@8	; icu_56::Region::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3A0h
		public ??_R2Region@icu_56@@8
; icu_56::Region::`RTTI	Base Class Array'
??_R2Region@icu_56@@8 dd offset	??_R1A@?0A@EA@Region@icu_56@@8
					; DATA XREF: .rdata$r:0000039Co
					; icu_56::Region::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3B0h
		public ??_R1A@?0A@EA@Region@icu_56@@8
; icu_56::Region::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@Region@icu_56@@8 dd offset ??_R0?AVRegion@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::Region::`RTTI Base Class Array'o
					; icu_56::Region `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3Region@icu_56@@8	; icu_56::Region::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3CCh
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:000003A4o
					; .rdata$r:icu_56::UObject::`RTTI Base Class Array'o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 3E8h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
		dd 56413F2Eh, 6A624F55h, 40746365h, 5F756369h
a56@@		db '56@@',0             ; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 408h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:000003E4o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 418h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00000414o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 424h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:000003A8o
					; .rdata$r:0000041Co ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 440h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 460h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:0000043Co
					; .rdata$r:00000490o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 470h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:0000046Co
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 478h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 494h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Region & __thiscall icu_56::Region::operator=(class icu_56::Region const &)
		public ??4Region@icu_56@@QAEAAV01@ABV01@@Z
??4Region@icu_56@@QAEAAV01@ABV01@@Z proc near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	dword ptr ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UObject::operator=(icu_56::UObject const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_14], 0
		jmp	short loc_4DF
; ---------------------------------------------------------------------------

loc_4D6:				; CODE XREF: icu_56::Region::operator=(icu_56::Region const &)+63j
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_4DF:				; CODE XREF: icu_56::Region::operator=(icu_56::Region const &)+40j
		cmp	[ebp+var_14], 4
		jnb	short loc_4F9
		mov	eax, [ebp+var_8]
		add	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		add	ecx, [ebp+var_14]
		mov	dl, [ecx+4]
		mov	[eax+4], dl
		jmp	short loc_4D6
; ---------------------------------------------------------------------------

loc_4F9:				; CODE XREF: icu_56::Region::operator=(icu_56::Region const &)+4Fj
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 8
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+48h]
		mov	[eax+48h], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4Ch]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+50h]
		mov	[eax+50h], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+54h]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+58h]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??4Region@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 56Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::Region::`scalar deleting destructor'(unsigned int)
		public ??_GRegion@icu_56@@UAEPAXI@Z
??_GRegion@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1Region@icu_56@@UAE@XZ ; icu_56::Region::~Region(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_5B5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_5B5:				; CODE XREF: icu_56::Region::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GRegion@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::Region::`vector deleting destructor'(unsigned int)
		public ??_ERegion@icu_56@@UAEPAXI@Z
??_ERegion@icu_56@@UAEPAXI@Z proc near	; DATA XREF: .rdata:const icu_56::Region::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_63B
		push	offset ??1Region@icu_56@@UAE@XZ	; icu_56::Region::~Region(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	5Ch ; '\'
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_633
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_633:				; CODE XREF: icu_56::Region::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_664
; ---------------------------------------------------------------------------

loc_63B:				; CODE XREF: icu_56::Region::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1Region@icu_56@@UAE@XZ ; icu_56::Region::~Region(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_661
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_661:				; CODE XREF: icu_56::Region::`vector deleting destructor'(uint)+79j
		mov	eax, [ebp+var_8]

loc_664:				; CODE XREF: icu_56::Region::`vector deleting destructor'(uint)+69j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_ERegion@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 67Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::DecimalFormatSymbols::operator!=(class	icu_56::DecimalFormatSymbols const &)const
		public ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==(icu_56::DecimalFormatSymbols const &)
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::DecimalFormatSymbols::isCustomCurrencySymbol(icu_56::DecimalFormatSymbols *__hidden this)
		public ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	al, [eax+0AD0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 700h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol(icu_56::DecimalFormatSymbols *__hidden this)
		public ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	al, [eax+0AD1h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 734h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString __thiscall icu_56::DecimalFormatSymbols::getSymbol(enum  icu_56::DecimalFormatSymbols::ENumberFormatSymbol)const
		public ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z proc near

var_E4		= byte ptr -0E4h
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_E0], 0
		cmp	[ebp+arg_4], 1Ch
		jge	short loc_779
		mov	eax, [ebp+arg_4]
		shl	eax, 6
		mov	ecx, [ebp+var_8]
		lea	edx, [ecx+eax+4]
		mov	[ebp+var_14], edx
		jmp	short loc_784
; ---------------------------------------------------------------------------

loc_779:				; CODE XREF: icu_56::DecimalFormatSymbols::getSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol)+31j
		mov	eax, [ebp+var_8]
		add	eax, 704h
		mov	[ebp+var_14], eax

loc_784:				; CODE XREF: icu_56::DecimalFormatSymbols::getSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol)+43j
		mov	esi, esp
		mov	eax, [ebp+var_14]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_E0]
		or	ecx, 1
		mov	[ebp+var_E0], ecx
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString const & __thiscall icu_56::DecimalFormatSymbols::getConstSymbol(enum  icu_56::DecimalFormatSymbols::ENumberFormatSymbol)const
		public ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z proc near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_0], 1Ch
		jge	short loc_7FF
		mov	eax, [ebp+arg_0]
		shl	eax, 6
		mov	ecx, [ebp+var_8]
		lea	edx, [ecx+eax+4]
		mov	[ebp+var_14], edx
		jmp	short loc_80A
; ---------------------------------------------------------------------------

loc_7FF:				; CODE XREF: icu_56::DecimalFormatSymbols::getConstSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol)+27j
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		mov	eax, [ebp+var_8]
		add	eax, 704h
		mov	[ebp+var_14], eax

loc_80A:				; CODE XREF: icu_56::DecimalFormatSymbols::getConstSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol)+39j
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 818h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::DecimalFormatSymbols::setSymbol(enum	icu_56::DecimalFormatSymbols::ENumberFormatSymbol, class icu_56::UnicodeString const &,	signed char)
		public ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z proc near

var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_138		= byte ptr -138h
var_2D		= byte ptr -2Dh
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 138h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_144]
		mov	ecx, 4Eh ; 'N'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		cmp	[ebp+arg_0], 8
		jnz	short loc_86F
		mov	eax, [ebp+var_18]
		mov	byte ptr [eax+0AD0h], 1
		jmp	short loc_87F
; ---------------------------------------------------------------------------

loc_86F:				; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+49j
		cmp	[ebp+arg_0], 9
		jnz	short loc_87F
		mov	eax, [ebp+var_18]
		mov	byte ptr [eax+0AD1h], 1

loc_87F:				; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+55j
					; icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const	&,signed char)+5Bj
		cmp	[ebp+arg_0], 1Ch
		jge	short loc_8A5
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		shl	ecx, 6
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+ecx+4]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_8A5:				; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+6Bj
		movsx	eax, [ebp+arg_8]
		test	eax, eax
		jz	loc_9A6
		cmp	[ebp+arg_0], 4
		jnz	loc_9A6
		mov	esi, esp
		push	7FFFFFFFh	; int
		push	0		; int
		mov	ecx, [ebp+arg_4] ; this
		call	dword ptr ds:__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z ; icu_56::UnicodeString::countChar32(int,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	eax, 1
		jnz	loc_9A6
		mov	esi, esp
		push	0		; int
		mov	ecx, [ebp+arg_4] ; this
		call	dword ptr ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z ; icu_56::UnicodeString::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		push	eax
		call	_u_charDigitValue_56
		add	esp, 4
		test	eax, eax
		jnz	loc_9A6
		mov	[ebp+var_2D], 1
		jmp	short loc_916
; ---------------------------------------------------------------------------

loc_90E:				; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+189j
		mov	al, [ebp+var_2D]
		add	al, 1
		mov	[ebp+var_2D], al

loc_916:				; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+F4j
		movsx	eax, [ebp+var_2D]
		cmp	eax, 9
		jg	loc_9A6
		mov	eax, [ebp+var_24]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	esi, esp
		mov	eax, [ebp+var_24]
		push	eax		; int
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@H@Z ; icu_56::UnicodeString::UnicodeString(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_140], eax
		mov	ecx, [ebp+var_140]
		mov	[ebp+var_144], ecx
		mov	[ebp+var_4], 0
		mov	esi, esp
		mov	edx, [ebp+var_144]
		push	edx
		movsx	eax, [ebp+var_2D]
		add	eax, 11h
		shl	eax, 6
		mov	ecx, [ebp+var_18]
		lea	ecx, [ecx+eax+4]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z	; icu_56::UnicodeString::operator=(icu_56::UnicodeString &&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_90E
; ---------------------------------------------------------------------------

loc_9A6:				; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+93j
					; icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const	&,signed char)+9Dj ...
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 144h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 9D4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0 proc near
					; DATA XREF: .xdata$x:00000A18o
		mov	esi, esp
		lea	ecx, [ebp-138h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z	proc near
					; DATA XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-148h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
		jmp	___CxxFrameHandler3
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0A14h
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000A24o
		dd offset __unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z+1Eo
		dd offset __unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0A40h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Locale __thiscall icu_56::DecimalFormatSymbols::getLocale(void)const
		public ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ proc near

var_D8		= byte ptr -0D8h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_D4], 0
		mov	eax, [ebp+var_8]
		add	eax, 744h
		mov	esi, esp
		push	eax		; struct icu_56::Locale	*
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0Locale@icu_56@@QAE@ABV01@@Z ; icu_56::Locale::Locale(icu_56::Locale const	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_D4]
		or	ecx, 1
		mov	[ebp+var_D4], ecx
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0AB0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	wchar_t	*__thiscall icu_56::DecimalFormatSymbols::getCurrencyPattern(icu_56::DecimalFormatSymbols *__hidden this)
		public ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+94Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0AE4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Formattable::operator!=(class icu_56::Formattable const &)const
		public ??9Formattable@icu_56@@QBECABV01@@Z
??9Formattable@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8Formattable@icu_56@@QBECABV01@@Z ; icu_56::Formattable::operator==(icu_56::Formattable const	&)
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9Formattable@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B34h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Formattable::getDouble(icu_56::Formattable *__hidden this)
		public ?getDouble@Formattable@icu_56@@QBENXZ
?getDouble@Formattable@icu_56@@QBENXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getDouble@Formattable@icu_56@@QBENXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Formattable::getLong(icu_56::Formattable *__hidden this)
		public ?getLong@Formattable@icu_56@@QBEHXZ
?getLong@Formattable@icu_56@@QBEHXZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1211p
					; icu_56::Region::loadRegionData(UErrorCode &)+177Ap ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getLong@Formattable@icu_56@@QBEHXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B94h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __int64 __thiscall icu_56::Formattable::getInt64(icu_56::Formattable *__hidden this)
		public ?getInt64@Formattable@icu_56@@QBE_JXZ
?getInt64@Formattable@icu_56@@QBE_JXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+8]
		mov	edx, [ecx+0Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getInt64@Formattable@icu_56@@QBE_JXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0BC8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Formattable::getDate(icu_56::Formattable *__hidden this)
		public ?getDate@Formattable@icu_56@@QBENXZ
?getDate@Formattable@icu_56@@QBENXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getDate@Formattable@icu_56@@QBENXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0BF8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::Formattable::getString(icu_56::Formattable *this, struct icu_56::UnicodeString *)
		public ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		push	ecx
		mov	ecx, [ebp+arg_0]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C50h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::Formattable *__thiscall icu_56::Formattable::getArray(icu_56::Formattable *this,	int *)
		public ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+0Ch]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Formattable & __thiscall icu_56::Formattable::operator[](int)
		public ??AFormattable@icu_56@@QAEAAV01@H@Z
??AFormattable@icu_56@@QAEAAV01@H@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		imul	eax, 0E0h
		mov	ecx, [ebp+var_8]
		add	eax, [ecx+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??AFormattable@icu_56@@QAEAAV01@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CCCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::DigitList *__thiscall icu_56::Formattable::getDigitList(icu_56::Formattable *__hidden this)
		public ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+14h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Formattable::getDate(icu_56::Formattable *this, enum UErrorCode *)
		public ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+98h], 0
		jz	short loc_D4D
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_D49
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 3

loc_D49:				; CODE XREF: icu_56::Formattable::getDate(UErrorCode &)+42j
		fldz
		jmp	short loc_D53
; ---------------------------------------------------------------------------

loc_D4D:				; CODE XREF: icu_56::Formattable::getDate(UErrorCode &)+2Dj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+8]

loc_D53:				; CODE XREF: icu_56::Formattable::getDate(UErrorCode &)+4Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0D6Ch
		public __real@0000000000000000
__real@0000000000000000	dd 2 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D74h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::Formattable::getDate(UErrorCode &)+35p
					; icu_56::Region::loadRegionData(UErrorCode &)+11FCp ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::UnicodeString *__thiscall icu_56::Formattable::getString(icu_56::Formattable *__hidden this)
		public ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DD0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::Formattable::getString(icu_56::Formattable *__hidden	this)
		public ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E00h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Formattable::getLong(icu_56::Formattable *this, enum UErrorCode *)
		public ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z proc near
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_8] ; this
		call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong(UErrorCode &)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E48h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void **__thiscall icu_56::Formattable::toUFormattable(icu_56::Formattable *__hidden this)
		public ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E78h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *const *__thiscall icu_56::Formattable::toUFormattable(icu_56::Formattable *__hidden this)
		public ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0EA8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::Formattable *__cdecl icu_56::Formattable::fromUFormattable(void **)
		public ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0ED0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::Formattable *__cdecl icu_56::Formattable::fromUFormattable(void *const *)
		public ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0EF8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::FieldPosition::FieldPosition(icu_56::FieldPosition *__hidden this)
		public ??0FieldPosition@icu_56@@QAE@XZ
??0FieldPosition@icu_56@@QAE@XZ	proc near
					; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+1ADp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7FieldPosition@icu_56@@6B@ ;	const icu_56::FieldPosition::`vftable'
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+0Ch], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0FieldPosition@icu_56@@QAE@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F6Ch
		dd offset ??_R4FieldPosition@icu_56@@6B@ ; const icu_56::FieldPosition::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7FieldPosition@icu_56@@6B@
; const	icu_56::FieldPosition::`vftable'
??_7FieldPosition@icu_56@@6B@ dd offset	??_EFieldPosition@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::FieldPosition::FieldPosition(void)+38o
					; icu_56::FieldPosition::FieldPosition(int)+38o ...
					; icu_56::FieldPosition::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ ; icu_56::FieldPosition::getDynamicClassID(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0F78h
		public ??_R4FieldPosition@icu_56@@6B@
; const	icu_56::FieldPosition::`RTTI Complete Object Locator'
??_R4FieldPosition@icu_56@@6B@ dd 3 dup(0) ; DATA XREF:	.rdata:00000F6Co
		dd offset ??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition `RTTI Type Descriptor'
		dd offset ??_R3FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0F8Ch
		public ??_R0?AVFieldPosition@icu_56@@@8
; class	icu_56::FieldPosition `RTTI Type Descriptor'
??_R0?AVFieldPosition@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00000F84o
					; .rdata$r:icu_56::FieldPosition::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avfieldposit	db '.?AVFieldPosition@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0FB0h
		public ??_R3FieldPosition@icu_56@@8
; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
??_R3FieldPosition@icu_56@@8 dd	2 dup(0) ; DATA	XREF: .rdata$r:00000F88o
					; .rdata$r:00000FE8o
		dd 3
		dd offset ??_R2FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0FC0h
		public ??_R2FieldPosition@icu_56@@8
; icu_56::FieldPosition::`RTTI Base Class Array'
??_R2FieldPosition@icu_56@@8 dd	offset ??_R1A@?0A@EA@FieldPosition@icu_56@@8
					; DATA XREF: .rdata$r:00000FBCo
					; icu_56::FieldPosition::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0FD0h
		public ??_R1A@?0A@EA@FieldPosition@icu_56@@8
; icu_56::FieldPosition::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@FieldPosition@icu_56@@8 dd offset	??_R0?AVFieldPosition@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::FieldPosition::`RTTI Base	Class Array'o
					; icu_56::FieldPosition	`RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::FieldPosition::FieldPosition(icu_56::FieldPosition *this, int)
		public ??0FieldPosition@icu_56@@QAE@H@Z
??0FieldPosition@icu_56@@QAE@H@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]

loc_FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7FieldPosition@icu_56@@6B@ ;	const icu_56::FieldPosition::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+4], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+0Ch], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0FieldPosition@icu_56@@QAE@H@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1060h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::FieldPosition::FieldPosition(icu_56::FieldPosition *this, const struct icu_56::FieldPosition *)
		public ??0FieldPosition@icu_56@@QAE@ABV01@@Z
??0FieldPosition@icu_56@@QAE@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UObject *
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z ; icu_56::UObject::UObject(icu_56::UObject const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7FieldPosition@icu_56@@6B@ ;	const icu_56::FieldPosition::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8]
		mov	[eax+8], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+0Ch]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 10E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::FieldPosition::getField(icu_56::FieldPosition *__hidden this)
		public ?getField@FieldPosition@icu_56@@QBEHXZ
?getField@FieldPosition@icu_56@@QBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getField@FieldPosition@icu_56@@QBEHXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1110h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::FieldPosition::getBeginIndex(icu_56::FieldPosition *__hidden this)
		public ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1140h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::FieldPosition::getEndIndex(icu_56::FieldPosition *__hidden this)
		public ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
?getEndIndex@FieldPosition@icu_56@@QBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+0Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getEndIndex@FieldPosition@icu_56@@QBEHXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1170h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::FieldPosition::setField(icu_56::FieldPosition	*this, int)
		public ?setField@FieldPosition@icu_56@@QAEXH@Z
?setField@FieldPosition@icu_56@@QAEXH@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+4], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?setField@FieldPosition@icu_56@@QAEXH@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 11A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::FieldPosition::setBeginIndex(icu_56::FieldPosition *this, int)
		public ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 11E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::FieldPosition::setEndIndex(icu_56::FieldPosition *this, int)
		public ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+0Ch], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1218h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::FieldPosition::`scalar deleting destructor'(unsigned int)
		public ??_GFieldPosition@icu_56@@UAEPAXI@Z
??_GFieldPosition@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1261
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1261:				; CODE XREF: icu_56::FieldPosition::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GFieldPosition@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 127Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::FieldPosition::`vector deleting destructor'(unsigned int)
		public ??_EFieldPosition@icu_56@@UAEPAXI@Z
??_EFieldPosition@icu_56@@UAEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::FieldPosition::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_12E7
		push	offset ??1FieldPosition@icu_56@@UAE@XZ ; icu_56::FieldPosition::~FieldPosition(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	10h
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_12DF
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_12DF:				; CODE XREF: icu_56::FieldPosition::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_1310
; ---------------------------------------------------------------------------

loc_12E7:				; CODE XREF: icu_56::FieldPosition::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_130D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_130D:				; CODE XREF: icu_56::FieldPosition::`vector deleting destructor'(uint)+79j
		mov	eax, [ebp+var_8]

loc_1310:				; CODE XREF: icu_56::FieldPosition::`vector deleting destructor'(uint)+69j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_EFieldPosition@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1328h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::FieldPosition &	__thiscall icu_56::FieldPosition::operator=(class icu_56::FieldPosition	const &)
		public ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+0Ch]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8]
		mov	[eax+8], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 137Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::FieldPosition::operator==(class icu_56::FieldPosition const &)const
		public ??8FieldPosition@icu_56@@QBECABV01@@Z
??8FieldPosition@icu_56@@QBECABV01@@Z proc near
					; CODE XREF: icu_56::FieldPosition::operator!=(icu_56::FieldPosition const &)+2Ap

var_D0		= byte ptr -0D0h
var_CD		= byte ptr -0CDh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+4]
		cmp	edx, [ecx+4]
		jnz	short loc_13D2
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+0Ch]
		cmp	edx, [ecx+0Ch]
		jnz	short loc_13D2
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+8]
		cmp	edx, [ecx+8]
		jnz	short loc_13D2
		mov	[ebp+var_CD], 1
		jmp	short loc_13D9
; ---------------------------------------------------------------------------

loc_13D2:				; CODE XREF: icu_56::FieldPosition::operator==(icu_56::FieldPosition const &)+2Fj
					; icu_56::FieldPosition::operator==(icu_56::FieldPosition const	&)+3Dj	...
		mov	[ebp+var_CD], 0

loc_13D9:				; CODE XREF: icu_56::FieldPosition::operator==(icu_56::FieldPosition const &)+54j
		mov	al, [ebp+var_CD]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??8FieldPosition@icu_56@@QBECABV01@@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::FieldPosition::operator!=(class icu_56::FieldPosition const &)const
		public ??9FieldPosition@icu_56@@QBECABV01@@Z
??9FieldPosition@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8FieldPosition@icu_56@@QBECABV01@@Z ;	icu_56::FieldPosition::operator==(icu_56::FieldPosition	const &)
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9FieldPosition@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1438h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::FieldPositionIterator::operator!=(class icu_56::FieldPositionIterator const &)const
		public ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
??9FieldPositionIterator@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ;	icu_56::FieldPositionIterator::operator==(icu_56::FieldPositionIterator	const &)
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1488h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::FieldPositionIterator &	__thiscall icu_56::FieldPositionIterator::operator=(class icu_56::FieldPositionIterator	const &)
		public ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	dword ptr ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UObject::operator=(icu_56::UObject const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8]
		mov	[eax+8], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 14F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Format::operator!=(class icu_56::Format const &)const
		public ??9Format@icu_56@@QBECABV01@@Z
??9Format@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9Format@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1550h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::Formattable *__thiscall icu_56::Measure::getNumber(icu_56::Measure *__hidden this)
		public ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		add	eax, 8
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1580h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::MeasureUnit *__thiscall icu_56::Measure::getUnit(icu_56::Measure	*__hidden this)
		public ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	proc near
					; CODE XREF: icu_56::CurrencyAmount::getCurrency(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+0E8h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 15B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::MeasureUnit::MeasureUnit(icu_56::MeasureUnit *__hidden this)
		public ??0MeasureUnit@icu_56@@QAE@XZ
??0MeasureUnit@icu_56@@QAE@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7MeasureUnit@icu_56@@6B@ ; const icu_56::MeasureUnit::`vftable'
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Ch], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0MeasureUnit@icu_56@@QAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1624h
		dd offset ??_R4MeasureUnit@icu_56@@6B@ ; const icu_56::MeasureUnit::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7MeasureUnit@icu_56@@6B@
; const	icu_56::MeasureUnit::`vftable'
??_7MeasureUnit@icu_56@@6B@ dd offset ??_EMeasureUnit@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::MeasureUnit::MeasureUnit(void)+38o
					; icu_56::MeasureUnit::MeasureUnit(int,int)+38o
					; icu_56::MeasureUnit::`vector deleting	destructor'(uint)
		dd offset ?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ ; icu_56::MeasureUnit::getDynamicClassID(void)
		dd offset ?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ	; icu_56::MeasureUnit::clone(void)
		dd offset ??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z ; icu_56::MeasureUnit::operator==(icu_56::UObject const &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1638h
		public ??_R4MeasureUnit@icu_56@@6B@
; const	icu_56::MeasureUnit::`RTTI Complete Object Locator'
??_R4MeasureUnit@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00001624o
		dd offset ??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit `RTTI Type Descriptor'
		dd offset ??_R3MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 164Ch
		public ??_R0?AVMeasureUnit@icu_56@@@8
; class	icu_56::MeasureUnit `RTTI Type Descriptor'
??_R0?AVMeasureUnit@icu_56@@@8 dd offset ??_7type_info@@6B@ ; DATA XREF: .rdata$r:00001644o
					; .rdata$r:icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avmeasureuni	db '.?AVMeasureUnit@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1670h
		public ??_R3MeasureUnit@icu_56@@8
; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
??_R3MeasureUnit@icu_56@@8 dd 2	dup(0)	; DATA XREF: .rdata$r:00001648o
					; .rdata$r:000016A8o
		dd 3
		dd offset ??_R2MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1680h
		public ??_R2MeasureUnit@icu_56@@8
; icu_56::MeasureUnit::`RTTI Base Class	Array'
??_R2MeasureUnit@icu_56@@8 dd offset ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
					; DATA XREF: .rdata$r:0000167Co
					; icu_56::MeasureUnit::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1690h
		public ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; icu_56::MeasureUnit::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 dd offset ??_R0?AVMeasureUnit@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::MeasureUnit::`RTTI Base Class Array'o
					; icu_56::MeasureUnit `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 16ACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::MeasureUnit::operator!=(class icu_56::UObject const &)const
		public ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1708h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::MeasureUnit::MeasureUnit(icu_56::MeasureUnit *this,	int, int)
		public ??0MeasureUnit@icu_56@@AAE@HH@Z
??0MeasureUnit@icu_56@@AAE@HH@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7MeasureUnit@icu_56@@6B@ ; const icu_56::MeasureUnit::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+4], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	[eax+8], ecx
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Ch], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0MeasureUnit@icu_56@@AAE@HH@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1778h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::MeasureUnit::`scalar deleting destructor'(unsigned int)
		public ??_GMeasureUnit@icu_56@@UAEPAXI@Z
??_GMeasureUnit@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1MeasureUnit@icu_56@@UAE@XZ ;	icu_56::MeasureUnit::~MeasureUnit(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_17C1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_17C1:				; CODE XREF: icu_56::MeasureUnit::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 17DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::MeasureUnit::`vector deleting destructor'(unsigned int)
		public ??_EMeasureUnit@icu_56@@UAEPAXI@Z
??_EMeasureUnit@icu_56@@UAEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::MeasureUnit::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_1847
		push	offset ??1MeasureUnit@icu_56@@UAE@XZ ; icu_56::MeasureUnit::~MeasureUnit(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	10h
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_183F
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_183F:				; CODE XREF: icu_56::MeasureUnit::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_1870
; ---------------------------------------------------------------------------

loc_1847:				; CODE XREF: icu_56::MeasureUnit::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1MeasureUnit@icu_56@@UAE@XZ ;	icu_56::MeasureUnit::~MeasureUnit(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_186D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_186D:				; CODE XREF: icu_56::MeasureUnit::`vector deleting destructor'(uint)+79j
		mov	eax, [ebp+var_8]

loc_1870:				; CODE XREF: icu_56::MeasureUnit::`vector deleting destructor'(uint)+69j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1888h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	wchar_t	*__thiscall icu_56::CurrencyUnit::getISOCurrency(icu_56::CurrencyUnit *__hidden	this)
		public ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ proc near
					; CODE XREF: icu_56::CurrencyAmount::getISOCurrency(void)+2Dp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		add	eax, 10h
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::CurrencyUnit *__thiscall	icu_56::CurrencyAmount::getCurrency(icu_56::CurrencyAmount *__hidden this)
		public ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ proc near
					; CODE XREF: icu_56::CurrencyAmount::getISOCurrency(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	wchar_t	*__thiscall icu_56::CurrencyAmount::getISOCurrency(icu_56::CurrencyAmount *__hidden this)
		public ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency(void)
		mov	ecx, eax	; this
		call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1940h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::NumberFormatFactory::NumberFormatFactory(icu_56::NumberFormatFactory *__hidden this)
		public ??0NumberFormatFactory@icu_56@@QAE@XZ
??0NumberFormatFactory@icu_56@@QAE@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7NumberFormatFactory@icu_56@@6B@ ; const icu_56::NumberFormatFactory::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0NumberFormatFactory@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1998h
		dd offset ??_R4NumberFormatFactory@icu_56@@6B@ ; const icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7NumberFormatFactory@icu_56@@6B@
; const	icu_56::NumberFormatFactory::`vftable'
??_7NumberFormatFactory@icu_56@@6B@ dd offset ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::NumberFormatFactory::NumberFormatFactory(void)+38o
					; icu_56::NumberFormatFactory::NumberFormatFactory(icu_56::NumberFormatFactory const &)+3Co
					; icu_56::NumberFormatFactory::`vector deleting	destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19B0h
		public ??_R4NumberFormatFactory@icu_56@@6B@
; const	icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
??_R4NumberFormatFactory@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00001998o
		dd offset ??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
		dd offset ??_R3NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 19C4h
		public ??_R0?AVNumberFormatFactory@icu_56@@@8
; class	icu_56::NumberFormatFactory `RTTI Type Descriptor'
??_R0?AVNumberFormatFactory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000019BCo
					; .rdata$r:icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avnumberform	db '.?AVNumberFormatFactory@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19F0h
		public ??_R3NumberFormatFactory@icu_56@@8
; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
??_R3NumberFormatFactory@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000019C0o
					; .rdata$r:00001A28o
		dd 3
		dd offset ??_R2NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A00h
		public ??_R2NumberFormatFactory@icu_56@@8
; icu_56::NumberFormatFactory::`RTTI Base Class	Array'
??_R2NumberFormatFactory@icu_56@@8 dd offset ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
					; DATA XREF: .rdata$r:000019FCo
					; icu_56::NumberFormatFactory::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A10h
		public ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
; icu_56::NumberFormatFactory::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 dd offset ??_R0?AVNumberFormatFactory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::NumberFormatFactory::`RTTI Base Class Array'o
					; .rdata$r:00001D64o
					; icu_56::NumberFormatFactory `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1A2Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::NumberFormatFactory::NumberFormatFactory(icu_56::NumberFormatFactory *this,	const struct icu_56::NumberFormatFactory *)
		public ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
					; CODE XREF: icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory(icu_56::SimpleNumberFormatFactory const &)+49p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UObject *
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@ABV01@@Z ; icu_56::UObject::UObject(icu_56::UObject const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7NumberFormatFactory@icu_56@@6B@ ; const icu_56::NumberFormatFactory::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1A88h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::NumberFormatFactory & __thiscall icu_56::NumberFormatFactory::operator=(class icu_56::NumberFormatFactory const	&)
		public ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	dword ptr ds:__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UObject::operator=(icu_56::UObject const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1ADCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::NumberFormatFactory::`scalar deleting destructor'(unsigned int)
		public ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1NumberFormatFactory@icu_56@@UAE@XZ ;	icu_56::NumberFormatFactory::~NumberFormatFactory(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1B25
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1B25:				; CODE XREF: icu_56::NumberFormatFactory::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B40h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::NumberFormatFactory::`vector deleting destructor'(unsigned int)
		public ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::NumberFormatFactory::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_1BAB
		push	offset ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	4
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1BA3
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1BA3:				; CODE XREF: icu_56::NumberFormatFactory::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_1BD4
; ---------------------------------------------------------------------------

loc_1BAB:				; CODE XREF: icu_56::NumberFormatFactory::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1NumberFormatFactory@icu_56@@UAE@XZ ;	icu_56::NumberFormatFactory::~NumberFormatFactory(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1BD1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1BD1:				; CODE XREF: icu_56::NumberFormatFactory::`vector deleting destructor'(uint)+79j
		mov	eax, [ebp+var_8]

loc_1BD4:				; CODE XREF: icu_56::NumberFormatFactory::`vector deleting destructor'(uint)+69j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1BECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory(icu_56::SimpleNumberFormatFactory *this, const	struct icu_56::SimpleNumberFormatFactory *)
		public ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::NumberFormatFactory *
		mov	ecx, [ebp+var_14] ; this
		call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::NumberFormatFactory::NumberFormatFactory(icu_56::NumberFormatFactory const &)
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7SimpleNumberFormatFactory@icu_56@@6B@ ; const icu_56::SimpleNumberFormatFactory::`vftable'
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	dl, [ecx+4]
		mov	[eax+4], dl
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1CA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0 proc near
					; DATA XREF: .xdata$x:00001CE4o
		mov	ecx, [ebp-14h]	; this
		jmp	??1NumberFormatFactory@icu_56@@UAE@XZ ;	icu_56::NumberFormatFactory::~NumberFormatFactory(void)
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z proc near
					; DATA XREF: icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory(icu_56::SimpleNumberFormatFactory const &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1CC8h
		dd offset ??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; const icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7SimpleNumberFormatFactory@icu_56@@6B@
; const	icu_56::SimpleNumberFormatFactory::`vftable'
??_7SimpleNumberFormatFactory@icu_56@@6B@ dd offset ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory(icu_56::SimpleNumberFormatFactory const &)+58o
					; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ ; icu_56::SimpleNumberFormatFactory::visible(void)
		dd offset ?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z ; icu_56::SimpleNumberFormatFactory::getSupportedIDs(int &,UErrorCode &)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1CE0h
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001CF0o
		dd offset __unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z+14o
		dd offset __unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D0Ch
		public ??_R4SimpleNumberFormatFactory@icu_56@@6B@
; const	icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
??_R4SimpleNumberFormatFactory@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00001CC8o
		dd offset ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
		dd offset ??_R3SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1D20h
		public ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
; class	icu_56::SimpleNumberFormatFactory `RTTI	Type Descriptor'
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001D18o
					; .rdata$r:icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avsimplenumb	db '.?AVSimpleNumberFormatFactory@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D50h
		public ??_R3SimpleNumberFormatFactory@icu_56@@8
; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
??_R3SimpleNumberFormatFactory@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001D1Co
					; .rdata$r:00001D8Co
		dd 4
		dd offset ??_R2SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D60h
		public ??_R2SimpleNumberFormatFactory@icu_56@@8
; icu_56::SimpleNumberFormatFactory::`RTTI Base	Class Array'
??_R2SimpleNumberFormatFactory@icu_56@@8 dd offset ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
					; DATA XREF: .rdata$r:00001D5Co
					; icu_56::SimpleNumberFormatFactory::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ;	icu_56::NumberFormatFactory::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D74h
		public ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
; icu_56::SimpleNumberFormatFactory::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 dd offset ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'o
					; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::SimpleNumberFormatFactory::`scalar deleting	destructor'(unsigned int)
		public ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1DD9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1DD9:				; CODE XREF: icu_56::SimpleNumberFormatFactory::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1DF4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::SimpleNumberFormatFactory::`vector deleting	destructor'(unsigned int)
		public ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	proc near
					; DATA XREF: .rdata:const icu_56::SimpleNumberFormatFactory::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_1E5F
		push	offset ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	48h ; 'H'
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1E57
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1E57:				; CODE XREF: icu_56::SimpleNumberFormatFactory::`vector	deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_1E88
; ---------------------------------------------------------------------------

loc_1E5F:				; CODE XREF: icu_56::SimpleNumberFormatFactory::`vector	deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1E85
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1E85:				; CODE XREF: icu_56::SimpleNumberFormatFactory::`vector	deleting destructor'(uint)+79j
		mov	eax, [ebp+var_8]

loc_1E88:				; CODE XREF: icu_56::SimpleNumberFormatFactory::`vector	deleting destructor'(uint)+69j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1EA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::NumberFormat::isParseIntegerOnly(icu_56::NumberFormat *__hidden this)
		public ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	al, [eax+154h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1ED4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::NumberFormat::isLenient(icu_56::NumberFormat	*__hidden this)
		public ?isLenient@NumberFormat@icu_56@@UBECXZ
?isLenient@NumberFormat@icu_56@@UBECXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	al, [eax+155h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?isLenient@NumberFormat@icu_56@@UBECXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1F08h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	icu_56::RegionNameEnumeration::getStaticClassID()
		public ?getStaticClassID@RegionNameEnumeration@icu_56@@SAPAXXZ
?getStaticClassID@RegionNameEnumeration@icu_56@@SAPAXXZ	proc near
					; CODE XREF: icu_56::RegionNameEnumeration::getDynamicClassID(void)+23p

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, offset ?classID@?1??getStaticClassID@RegionNameEnumeration@icu_56@@SAPAXXZ@4DA ; char `icu_56::RegionNameEnumeration::getStaticClassID(void)'::`2'::classID
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getStaticClassID@RegionNameEnumeration@icu_56@@SAPAXXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1F34h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__thiscall icu_56::RegionNameEnumeration::getDynamicClassID(icu_56::RegionNameEnumeration *__hidden this)
		public ?getDynamicClassID@RegionNameEnumeration@icu_56@@UBEPAXXZ
?getDynamicClassID@RegionNameEnumeration@icu_56@@UBEPAXXZ proc near
					; DATA XREF: .rdata:00007D68o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	?getStaticClassID@RegionNameEnumeration@icu_56@@SAPAXXZ	; icu_56::RegionNameEnumeration::getStaticClassID(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getDynamicClassID@RegionNameEnumeration@icu_56@@UBEPAXXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1F70h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UInitOnce icu_56::Region::loadRegionData
		public ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z
?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+44o
					; icu_56::Region::getInstance(int,UErrorCode &)+44o ...

var_C68		= dword	ptr -0C68h
var_C64		= dword	ptr -0C64h
var_C60		= dword	ptr -0C60h
var_C58		= dword	ptr -0C58h
var_C4C		= dword	ptr -0C4Ch
var_C40		= dword	ptr -0C40h
var_C34		= dword	ptr -0C34h
var_C28		= dword	ptr -0C28h
var_C1C		= dword	ptr -0C1Ch
var_C10		= dword	ptr -0C10h
var_C04		= dword	ptr -0C04h
var_BF8		= dword	ptr -0BF8h
var_BEC		= dword	ptr -0BECh
var_BE0		= dword	ptr -0BE0h
var_BD4		= dword	ptr -0BD4h
var_BC8		= dword	ptr -0BC8h
var_BBC		= dword	ptr -0BBCh
var_BB0		= dword	ptr -0BB0h
var_BA4		= dword	ptr -0BA4h
var_B98		= dword	ptr -0B98h
var_B8C		= dword	ptr -0B8Ch
var_B80		= dword	ptr -0B80h
var_B74		= dword	ptr -0B74h
var_B68		= dword	ptr -0B68h
var_B5C		= dword	ptr -0B5Ch
var_B50		= dword	ptr -0B50h
var_B44		= dword	ptr -0B44h
var_B38		= dword	ptr -0B38h
var_B2C		= dword	ptr -0B2Ch
var_B20		= dword	ptr -0B20h
var_B14		= dword	ptr -0B14h
var_B08		= dword	ptr -0B08h
var_AFC		= dword	ptr -0AFCh
var_AF0		= dword	ptr -0AF0h
var_AE4		= dword	ptr -0AE4h
var_AD8		= dword	ptr -0AD8h
var_ACC		= dword	ptr -0ACCh
var_AC0		= dword	ptr -0AC0h
var_AB4		= dword	ptr -0AB4h
var_AA8		= dword	ptr -0AA8h
var_A9C		= dword	ptr -0A9Ch
var_A90		= dword	ptr -0A90h
var_A84		= dword	ptr -0A84h
var_A78		= dword	ptr -0A78h
var_A6C		= dword	ptr -0A6Ch
var_A60		= dword	ptr -0A60h
var_A54		= byte ptr -0A54h
var_94C		= byte ptr -94Ch
var_940		= byte ptr -940h
var_934		= dword	ptr -934h
var_928		= dword	ptr -928h
var_91C		= dword	ptr -91Ch
var_910		= byte ptr -910h
var_904		= dword	ptr -904h
var_8F8		= byte ptr -8F8h
var_8B0		= dword	ptr -8B0h
var_8A4		= dword	ptr -8A4h
var_898		= byte ptr -898h
Str1		= dword	ptr -850h
var_844		= byte ptr -844h
var_838		= byte ptr -838h
var_7F0		= dword	ptr -7F0h
var_7E4		= dword	ptr -7E4h
var_7D8		= byte ptr -7D8h
var_790		= byte ptr -790h
var_748		= dword	ptr -748h
var_73C		= byte ptr -73Ch
var_730		= dword	ptr -730h
var_724		= byte ptr -724h
var_63C		= dword	ptr -63Ch
var_630		= byte ptr -630h
var_5E8		= byte ptr -5E8h
var_5A0		= byte ptr -5A0h
var_558		= dword	ptr -558h
var_54C		= byte ptr -54Ch
var_540		= dword	ptr -540h
var_534		= dword	ptr -534h
var_528		= byte ptr -528h
var_4E0		= byte ptr -4E0h
var_4D4		= dword	ptr -4D4h
var_4C8		= byte ptr -4C8h
var_3E0		= byte ptr -3E0h
var_3D4		= dword	ptr -3D4h
var_3C8		= dword	ptr -3C8h
var_3BC		= byte ptr -3BCh
var_374		= byte ptr -374h
var_368		= dword	ptr -368h
var_35C		= byte ptr -35Ch
var_350		= dword	ptr -350h
var_344		= dword	ptr -344h
var_338		= byte ptr -338h
var_250		= dword	ptr -250h
var_244		= byte ptr -244h
var_238		= dword	ptr -238h
var_22C		= dword	ptr -22Ch
var_220		= dword	ptr -220h
var_214		= byte ptr -214h
var_208		= byte ptr -208h
var_1FC		= byte ptr -1FCh
var_1F0		= word ptr -1F0h
var_1E6		= word ptr -1E6h
var_1E4		= word ptr -1E4h
var_1D0		= dword	ptr -1D0h
var_1C4		= byte ptr -1C4h
var_17C		= byte ptr -17Ch
var_170		= byte ptr -170h
var_164		= word ptr -164h
var_15A		= word ptr -15Ah
var_158		= word ptr -158h
var_144		= dword	ptr -144h
var_138		= byte ptr -138h
var_F0		= byte ptr -0F0h
var_E4		= byte ptr -0E4h
var_D8		= byte ptr -0D8h
var_CC		= byte ptr -0CCh
var_C0		= byte ptr -0C0h
var_B4		= byte ptr -0B4h
var_A8		= byte ptr -0A8h
var_9C		= byte ptr -9Ch
var_90		= byte ptr -90h
var_84		= byte ptr -84h
var_78		= byte ptr -78h
var_6C		= byte ptr -6Ch
var_60		= byte ptr -60h
var_54		= byte ptr -54h
var_48		= byte ptr -48h
var_3C		= byte ptr -3Ch
var_30		= byte ptr -30h
var_24		= byte ptr -24h
var_18		= byte ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0C5Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C68]
		mov	ecx, 317h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_A60], 0
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset _uhash_compareUnicodeString_56
		push	offset _uhash_hashUnicodeString_56
		call	_uhash_open_56
		add	esp, 10h
		push	eax		; struct UHashtable *
		lea	ecx, [ebp+var_18] ; this
		call	??0LocalUHashtablePointer@icu_56@@QAE@PAUUHashtable@@@Z	; icu_56::LocalUHashtablePointer::LocalUHashtablePointer(UHashtable *)
		mov	[ebp+var_4], 0
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset _uhash_compareLong_56
		push	offset _uhash_hashLong_56
		call	_uhash_open_56
		add	esp, 10h
		push	eax		; struct UHashtable *
		lea	ecx, [ebp+var_24] ; this

loc_1FFE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::fixedo
		call	??0LocalUHashtablePointer@icu_56@@QAE@PAUUHashtable@@@Z	; icu_56::LocalUHashtablePointer::LocalUHashtablePointer(UHashtable *)
		mov	byte ptr [ebp+var_4], 1
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset _uhash_compareUnicodeString_56
		push	offset _uhash_hashUnicodeString_56
		call	_uhash_open_56
		add	esp, 10h
		push	eax		; struct UHashtable *
		lea	ecx, [ebp+var_30] ; this
		call	??0LocalUHashtablePointer@icu_56@@QAE@PAUUHashtable@@@Z	; icu_56::LocalUHashtablePointer::LocalUHashtablePointer(UHashtable *)
		mov	byte ptr [ebp+var_4], 2
		mov	esi, esp
		push	184h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C4C], eax
		mov	byte ptr [ebp+var_4], 3
		cmp	[ebp+var_C4C], 0
		jz	short loc_206D
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_C4C] ; this
		call	??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z	; icu_56::DecimalFormat::DecimalFormat(UErrorCode &)
		mov	[ebp+var_C60], eax
		jmp	short loc_2077
; ---------------------------------------------------------------------------

loc_206D:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+E4j
		mov	[ebp+var_C60], 0

loc_2077:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+FBj
		mov	ecx, [ebp+var_C60]
		mov	[ebp+var_C58], ecx
		mov	byte ptr [ebp+var_4], 2
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_C58]
		push	eax
		lea	ecx, [ebp+var_3C]
		call	??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>(icu_56::DecimalFormat *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 4
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C34], eax
		mov	byte ptr [ebp+var_4], 5
		cmp	[ebp+var_C34], 0
		jz	short loc_2102
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_C34] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C34]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_C34]
		mov	[ebp+var_C60], edx
		jmp	short loc_210C
; ---------------------------------------------------------------------------

loc_2102:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+153j
		mov	[ebp+var_C60], 0

loc_210C:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+190j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_C40], eax
		mov	byte ptr [ebp+var_4], 4
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_C40]
		push	edx
		lea	ecx, [ebp+var_48]
		call	??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z	; icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 6
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C1C], eax
		mov	byte ptr [ebp+var_4], 7
		cmp	[ebp+var_C1C], 0
		jz	short loc_2197
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_C1C] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C1C]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_C1C]
		mov	[ebp+var_C60], edx
		jmp	short loc_21A1
; ---------------------------------------------------------------------------

loc_2197:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1E8j
		mov	[ebp+var_C60], 0

loc_21A1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+225j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_C28], eax
		mov	byte ptr [ebp+var_4], 6
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_C28]
		push	edx
		lea	ecx, [ebp+var_54]
		call	??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z	; icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 8
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C04], eax
		mov	byte ptr [ebp+var_4], 9
		cmp	[ebp+var_C04], 0
		jz	short loc_222C
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_C04] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C04]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_C04]
		mov	[ebp+var_C60], edx
		jmp	short loc_2236
; ---------------------------------------------------------------------------

loc_222C:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+27Dj
		mov	[ebp+var_C60], 0

loc_2236:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2BAj
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_C10], eax
		mov	byte ptr [ebp+var_4], 8
		mov	ecx, [ebp+var_C10]
		mov	ds:_allRegions,	ecx
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset ??_C@_08DHGINADL@metadata?$AA@ ;	"metadata"
		push	0
		call	_ures_openDirect_56
		add	esp, 0Ch
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_60] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 0Ah
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_05NKHOCLEE@alias?$AA@ ; "alias"
		lea	ecx, [ebp+var_60]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_6C] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 0Bh
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_09IJMFKACG@territory?$AA@ ; "territory"
		lea	ecx, [ebp+var_6C]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_78] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 0Ch
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset ??_C@_0BB@CPLPEJEM@supplementalData?$AA@	; "supplementalData"
		push	0
		call	_ures_openDirect_56
		add	esp, 0Ch
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_84] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 0Dh
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_0N@BMDACNBJ@codeMappings?$AA@ ; "codeMappings"
		lea	ecx, [ebp+var_84]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_90] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 0Eh
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_0L@JOJAMJEJ@idValidity?$AA@ ; "idValidity"
		lea	ecx, [ebp+var_84]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_9C] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 0Fh
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_06JEJEKGIK@region?$AA@ ; "region"
		lea	ecx, [ebp+var_9C]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_A8] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 10h
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_07KMAJHHLM@regular?$AA@ ; "regular"
		lea	ecx, [ebp+var_A8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_B4] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 11h
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_0M@LIMEHNLC@macroregion?$AA@ ; "macroregion"
		lea	ecx, [ebp+var_A8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_C0] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 12h
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_07CIFAGBMG@unknown?$AA@ ; "unknown"
		lea	ecx, [ebp+var_A8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_CC] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 13h
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_0BF@MLDEBPHL@territoryContainment?$AA@ ; "territoryContainment"
		lea	ecx, [ebp+var_84]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_D8] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 14h
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_03MMKGDKGA@001?$AA@ ; `string'
		lea	ecx, [ebp+var_D8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_E4] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 15h
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset ??_C@_08DOJJHCKD@grouping?$AA@ ;	"grouping"
		lea	ecx, [ebp+var_D8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getByKey_56
		add	esp, 10h
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_F0] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 16h
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_25B1
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_25B1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+531j
		lea	ecx, [ebp+var_3C]
		call	??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator->(void)
		mov	[ebp+var_C60], eax
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_C60]
		mov	edx, [eax]
		mov	ecx, [ebp+var_C60]
		mov	eax, [edx+58h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset _deleteRegion
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_setValueDeleter_56
		add	esp, 8
		push	offset _uprv_deleteUObject_56
		lea	ecx, [ebp+var_30]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_setKeyDeleter_56
		add	esp, 8

loc_2609:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+94Cj
		lea	ecx, [ebp+var_B4]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_28C1
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_B4]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		lea	ecx, [ebp+var_138]
		push	ecx
		call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString(UResourceBundle	*,char const * *,UErrorCode *)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 17h
		mov	esi, esp
		push	offset _RANGE_MARKER_STRING ; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ; icu_56::UnicodeString::indexOf(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_144], eax
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	6		; int
		lea	ecx, [ebp+var_158]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ;	icu_56::UnicodeString::extract(wchar_t *,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_144], 0
		jle	loc_27DE
		mov	eax, [ebp+var_144]
		add	eax, 1
		mov	esi, esp
		push	eax		; int
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_164], ax
		xor	eax, eax
		mov	ecx, [ebp+var_144]
		mov	[ebp+ecx*2+var_158], ax

loc_26D2:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+864j
		mov	eax, [ebp+var_144]
		movzx	ecx, [ebp+eax*2+var_15A]
		movzx	edx, [ebp+var_164]
		cmp	ecx, edx
		jg	loc_27D9
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_BEC], eax
		mov	byte ptr [ebp+var_4], 18h
		cmp	[ebp+var_BEC], 0
		jz	short loc_274C
		mov	esi, esp
		lea	eax, [ebp+var_158]
		push	eax		; wchar_t *
		mov	ecx, [ebp+var_BEC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z ; icu_56::UnicodeString::UnicodeString(wchar_t const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_BEC]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_BEC]
		mov	[ebp+var_C60], edx
		jmp	short loc_2756
; ---------------------------------------------------------------------------

loc_274C:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+7A4j
		mov	[ebp+var_C60], 0

loc_2756:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+7DAj
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_BF8], eax
		mov	byte ptr [ebp+var_4], 17h
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_BF8]
		push	edx
		lea	ecx, [ebp+var_170]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 19h
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_170]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_144]
		mov	cx, [ebp+eax*2+var_15A]
		add	cx, 1
		mov	edx, [ebp+var_144]
		mov	[ebp+edx*2+var_15A], cx
		mov	byte ptr [ebp+var_4], 17h
		lea	ecx, [ebp+var_170]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		jmp	loc_26D2
; ---------------------------------------------------------------------------

loc_27D9:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+779j
		jmp	loc_28A3
; ---------------------------------------------------------------------------

loc_27DE:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+726j
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_BD4], eax
		mov	byte ptr [ebp+var_4], 1Ah
		cmp	[ebp+var_BD4], 0
		jz	short loc_283B
		mov	esi, esp
		lea	eax, [ebp+var_138]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_BD4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_BD4]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_BD4]
		mov	[ebp+var_C60], edx
		jmp	short loc_2845
; ---------------------------------------------------------------------------

loc_283B:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+893j
		mov	[ebp+var_C60], 0

loc_2845:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+8C9j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_BE0], eax
		mov	byte ptr [ebp+var_4], 17h
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_BE0]
		push	edx
		lea	ecx, [ebp+var_17C]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 1Bh
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_17C]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 17h
		lea	ecx, [ebp+var_17C]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)

loc_28A3:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &):loc_27D9j
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_2609
; ---------------------------------------------------------------------------

loc_28C1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+6B2j
					; icu_56::Region::loadRegionData(UErrorCode &)+C04j
		lea	ecx, [ebp+var_C0]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_2B79
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_C0]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		lea	ecx, [ebp+var_1C4]
		push	ecx
		call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString(UResourceBundle	*,char const * *,UErrorCode *)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 1Ch
		mov	esi, esp
		push	offset _RANGE_MARKER_STRING ; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_1C4] ; this
		call	dword ptr ds:__imp_?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z ; icu_56::UnicodeString::indexOf(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1D0], eax
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	6		; int
		lea	ecx, [ebp+var_1E4]
		push	ecx		; wchar_t *
		lea	ecx, [ebp+var_1C4] ; this
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z ;	icu_56::UnicodeString::extract(wchar_t *,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_1D0], 0
		jle	loc_2A96
		mov	eax, [ebp+var_1D0]
		add	eax, 1
		mov	esi, esp
		push	eax		; int
		lea	ecx, [ebp+var_1C4] ; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1F0], ax
		xor	eax, eax
		mov	ecx, [ebp+var_1D0]
		mov	[ebp+ecx*2+var_1E4], ax

loc_298A:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+B1Cj
		mov	eax, [ebp+var_1D0]
		movzx	ecx, [ebp+eax*2+var_1E6]
		movzx	edx, [ebp+var_1F0]
		cmp	ecx, edx
		jg	loc_2A91
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_BBC], eax
		mov	byte ptr [ebp+var_4], 1Dh
		cmp	[ebp+var_BBC], 0
		jz	short loc_2A04
		mov	esi, esp
		lea	eax, [ebp+var_1E4]
		push	eax		; wchar_t *
		mov	ecx, [ebp+var_BBC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z ; icu_56::UnicodeString::UnicodeString(wchar_t const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_BBC]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_BBC]
		mov	[ebp+var_C60], edx
		jmp	short loc_2A0E
; ---------------------------------------------------------------------------

loc_2A04:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+A5Cj
		mov	[ebp+var_C60], 0

loc_2A0E:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+A92j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_BC8], eax
		mov	byte ptr [ebp+var_4], 1Ch
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_BC8]
		push	edx
		lea	ecx, [ebp+var_1FC]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 1Eh
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_1FC]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_1D0]
		mov	cx, [ebp+eax*2+var_1E6]
		add	cx, 1
		mov	edx, [ebp+var_1D0]
		mov	[ebp+edx*2+var_1E6], cx
		mov	byte ptr [ebp+var_4], 1Ch
		lea	ecx, [ebp+var_1FC]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		jmp	loc_298A
; ---------------------------------------------------------------------------

loc_2A91:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+A31j
		jmp	loc_2B5B
; ---------------------------------------------------------------------------

loc_2A96:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+9DEj
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_BA4], eax
		mov	byte ptr [ebp+var_4], 1Fh
		cmp	[ebp+var_BA4], 0
		jz	short loc_2AF3
		mov	esi, esp
		lea	eax, [ebp+var_1C4]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_BA4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_BA4]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_BA4]
		mov	[ebp+var_C60], edx
		jmp	short loc_2AFD
; ---------------------------------------------------------------------------

loc_2AF3:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+B4Bj
		mov	[ebp+var_C60], 0

loc_2AFD:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+B81j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_BB0], eax
		mov	byte ptr [ebp+var_4], 1Ch
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_BB0]
		push	edx
		lea	ecx, [ebp+var_208]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 20h ; ' '
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_208]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1Ch
		lea	ecx, [ebp+var_208]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)

loc_2B5B:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &):loc_2A91j
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_1C4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_28C1
; ---------------------------------------------------------------------------

loc_2B79:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+96Aj
					; icu_56::Region::loadRegionData(UErrorCode &)+D66j
		lea	ecx, [ebp+var_CC]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_2CDB
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B8C], eax
		mov	byte ptr [ebp+var_4], 21h ; '!'
		cmp	[ebp+var_B8C], 0
		jz	loc_2C45
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx
		push	0
		lea	ecx, [ebp+var_CC]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		lea	eax, [ebp+var_A54]
		push	eax
		call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString(UResourceBundle	*,char const * *,UErrorCode *)
		add	esp, 10h
		mov	[ebp+var_C60], eax
		mov	ecx, [ebp+var_C60]
		mov	[ebp+var_C64], ecx
		mov	byte ptr [ebp+var_4], 22h ; '"'
		mov	edx, [ebp+var_A60]
		or	edx, 1
		mov	[ebp+var_A60], edx
		mov	eax, [ebp+var_C64]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_B8C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_B8C]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_B8C]
		mov	[ebp+var_C68], edx
		jmp	short loc_2C4F
; ---------------------------------------------------------------------------

loc_2C45:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+C4Dj
		mov	[ebp+var_C68], 0

loc_2C4F:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+CD3j
		mov	eax, [ebp+var_C68]
		mov	[ebp+var_B98], eax
		mov	[ebp+var_4], 23h ; '#'
		mov	ecx, [ebp+var_B98]
		push	ecx
		lea	ecx, [ebp+var_214]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *)
		mov	[ebp+var_4], 25h ; '%'
		mov	edx, [ebp+var_A60]
		and	edx, 1
		jz	short loc_2CA2
		and	[ebp+var_A60], 0FFFFFFFEh
		mov	esi, esp
		lea	ecx, [ebp+var_A54] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2CA2:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+D14j
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_214]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 16h
		lea	ecx, [ebp+var_214]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		jmp	loc_2B79
; ---------------------------------------------------------------------------

loc_2CDB:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+C22j
					; icu_56::Region::loadRegionData(UErrorCode &)+E36j
		lea	ecx, [ebp+var_E4]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_2DAB
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B74], eax
		mov	byte ptr [ebp+var_4], 26h ; '&'
		cmp	[ebp+var_B74], 0
		jz	short loc_2D5C
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_E4]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		mov	ecx, [ebp+var_B74]
		push	ecx
		call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString(UResourceBundle	*,char const * *,UErrorCode *)
		add	esp, 10h
		mov	edx, [ebp+var_B74]
		mov	dword ptr [edx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	eax, [ebp+var_B74]
		mov	[ebp+var_C60], eax
		jmp	short loc_2D66
; ---------------------------------------------------------------------------

loc_2D5C:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+DAFj
		mov	[ebp+var_C60], 0

loc_2D66:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+DEAj
		mov	ecx, [ebp+var_C60]
		mov	[ebp+var_B80], ecx
		mov	byte ptr [ebp+var_4], 16h
		mov	edx, [ebp+var_B80]
		mov	[ebp+var_220], edx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_220]
		push	ecx		; void *
		lea	ecx, [ebp+var_48]
		call	??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::operator->(void)
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_2CDB
; ---------------------------------------------------------------------------

loc_2DAB:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+D84j
					; icu_56::Region::loadRegionData(UErrorCode &)+F06j
		lea	ecx, [ebp+var_F0]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_2E7B
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B5C], eax
		mov	byte ptr [ebp+var_4], 27h ; '''
		cmp	[ebp+var_B5C], 0
		jz	short loc_2E2C
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_F0]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		mov	ecx, [ebp+var_B5C]
		push	ecx
		call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString(UResourceBundle	*,char const * *,UErrorCode *)
		add	esp, 10h
		mov	edx, [ebp+var_B5C]
		mov	dword ptr [edx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	eax, [ebp+var_B5C]
		mov	[ebp+var_C60], eax
		jmp	short loc_2E36
; ---------------------------------------------------------------------------

loc_2E2C:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+E7Fj
		mov	[ebp+var_C60], 0

loc_2E36:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+EBAj
		mov	ecx, [ebp+var_C60]
		mov	[ebp+var_B68], ecx
		mov	byte ptr [ebp+var_4], 16h
		mov	edx, [ebp+var_B68]
		mov	[ebp+var_22C], edx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_22C]
		push	ecx		; void *
		lea	ecx, [ebp+var_54]
		call	??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::operator->(void)
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_2DAB
; ---------------------------------------------------------------------------

loc_2E7B:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+E54j
		mov	[ebp+var_238], 0
		jmp	short loc_2E96
; ---------------------------------------------------------------------------

loc_2E87:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+12D6j
		mov	eax, [ebp+var_238]
		add	eax, 1
		mov	[ebp+var_238], eax

loc_2E96:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F15j
		mov	esi, esp
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_238], eax
		jge	loc_324B
		mov	esi, esp
		push	5Ch ; '\'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B44], eax
		mov	byte ptr [ebp+var_4], 28h ; '('
		cmp	[ebp+var_B44], 0
		jz	short loc_2EF1
		mov	ecx, [ebp+var_B44] ; this
		call	??0Region@icu_56@@AAE@XZ ; icu_56::Region::Region(void)
		mov	[ebp+var_C60], eax
		jmp	short loc_2EFB
; ---------------------------------------------------------------------------

loc_2EF1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F6Cj
		mov	[ebp+var_C60], 0

loc_2EFB:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F7Fj
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_B50], eax
		mov	byte ptr [ebp+var_4], 16h
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_B50]
		push	edx
		lea	ecx, [ebp+var_244]
		call	??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z ;	icu_56::LocalPointer<icu_56::Region>::LocalPointer<icu_56::Region>(icu_56::Region *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 29h ; ')'
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_3057
		mov	byte ptr [ebp+var_4], 16h
		lea	ecx, [ebp+var_244]
		call	??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8

loc_2FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexfloato
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::floatfieldo
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_3057:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+FC8j
		mov	esi, esp
		mov	eax, [ebp+var_238]
		push	eax		; int
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_250], eax
		mov	esi, esp
		mov	eax, [ebp+var_250]
		push	eax
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		add	eax, 8
		mov	ecx, eax
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0
		push	4
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		add	eax, 4
		push	eax
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		add	eax, 8
		mov	edi, esp
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax
		push	0
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		add	eax, 8
		mov	ecx, eax
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z ; icu_56::UnicodeString::extract(int,int,char *,int,icu_56::UnicodeString::EInvariant)
		cmp	esi, esp
		call	__RTC_CheckEsp
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		mov	dword ptr [eax+4Ch], 1
		lea	ecx, [ebp+var_338] ; this
		call	??0Formattable@icu_56@@QAE@XZ ;	icu_56::Formattable::Formattable(void)
		mov	byte ptr [ebp+var_4], 2Ah ; '*'
		mov	[ebp+var_344], 0
		lea	ecx, [ebp+var_3C]
		call	??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator->(void)
		mov	[ebp+var_C60], eax
		mov	esi, esp
		lea	eax, [ebp+var_344]
		push	eax
		lea	ecx, [ebp+var_338]
		push	ecx
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		add	eax, 8
		push	eax
		mov	edx, [ebp+var_C60]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C60]
		mov	edx, [eax+4Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_344]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_31DA
		lea	ecx, [ebp+var_338] ; this
		call	?getLong@Formattable@icu_56@@QBEHXZ ; icu_56::Formattable::getLong(void)
		mov	esi, eax
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		mov	[eax+48h], esi
		mov	eax, [ebp+arg_0]
		push	eax
		lea	ecx, [ebp+var_244]
		call	?getAlias@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@2@XZ	; icu_56::LocalPointerBase<icu_56::Region>::getAlias(void)
		push	eax
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		mov	ecx, [eax+48h]
		push	ecx
		lea	ecx, [ebp+var_24]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_iput_56
		add	esp, 10h
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		mov	dword ptr [eax+4Ch], 4
		jmp	short loc_31EC
; ---------------------------------------------------------------------------

loc_31DA:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1209j
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		mov	dword ptr [eax+48h], 0FFFFFFFFh

loc_31EC:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1268j
		lea	ecx, [ebp+var_244]
		call	??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ ; icu_56::LocalPointerBase<icu_56::Region>::operator->(void)
		add	eax, 8
		mov	[ebp+var_350], eax
		mov	eax, [ebp+arg_0]
		push	eax
		lea	ecx, [ebp+var_244]
		call	?orphan@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAEPAVRegion@2@XZ ;	icu_56::LocalPointerBase<icu_56::Region>::orphan(void)
		push	eax
		mov	ecx, [ebp+var_350]
		push	ecx
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_put_56
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 29h ; ')'
		lea	ecx, [ebp+var_338] ; this
		call	??1Formattable@icu_56@@UAE@XZ ;	icu_56::Formattable::~Formattable(void)
		mov	byte ptr [ebp+var_4], 16h
		lea	ecx, [ebp+var_244]
		call	??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)
		jmp	loc_2E87
; ---------------------------------------------------------------------------

loc_324B:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F41j
					; icu_56::Region::loadRegionData(UErrorCode &)+1C64j
		lea	ecx, [ebp+var_78]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_3BD9
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_78]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getNextResource_56
		add	esp, 0Ch
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_35C] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 2Bh ; '+'
		lea	ecx, [ebp+var_35C]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getKey_56
		add	esp, 4
		mov	[ebp+var_368], eax
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B2C], eax
		mov	byte ptr [ebp+var_4], 2Ch ; ','
		cmp	[ebp+var_B2C], 0
		jz	short loc_3309
		mov	esi, esp
		push	0
		push	0FFFFFFFFh
		mov	eax, [ebp+var_368]
		push	eax
		mov	ecx, [ebp+var_B2C]
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z ; icu_56::UnicodeString::UnicodeString(char const *,int,icu_56::UnicodeString::EInvariant)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_B2C]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_B2C]
		mov	[ebp+var_C60], edx
		jmp	short loc_3313
; ---------------------------------------------------------------------------

loc_3309:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+135Dj
		mov	[ebp+var_C60], 0

loc_3313:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1397j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_B38], eax
		mov	byte ptr [ebp+var_4], 2Bh ; '+'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_B38]
		push	edx
		lea	ecx, [ebp+var_374]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 2Dh ; '-'
		mov	eax, [ebp+arg_0]
		push	eax
		push	offset ??_C@_0M@LLKAGNAI@replacement?$AA@ ; "replacement"
		lea	ecx, [ebp+var_35C]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		lea	ecx, [ebp+var_3BC]
		push	ecx
		call	?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByKey(UResourceBundle	const *,char const *,UErrorCode	*)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		push	0		; struct UResourceBundle *
		lea	ecx, [ebp+var_35C] ; this
		call	?adoptInstead@LocalUResourceBundlePointer@icu_56@@QAEXPAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::adoptInstead(UResourceBundle *)
		lea	eax, [ebp+var_3BC]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_3C8], eax
		lea	ecx, [ebp+var_374]
		call	?getAlias@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@2@XZ ;	icu_56::LocalPointerBase<icu_56::UnicodeString>::getAlias(void)
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_3D4], eax
		cmp	[ebp+var_3C8], 0
		jz	short loc_33F2
		cmp	[ebp+var_3D4], 0
		jnz	short loc_33F2
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_3C8]
		push	ecx
		lea	ecx, [ebp+var_374]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax
		lea	ecx, [ebp+var_30]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_put_56
		add	esp, 10h
		jmp	loc_3B9D
; ---------------------------------------------------------------------------

loc_33F2:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+144Aj
					; icu_56::Region::loadRegionData(UErrorCode &)+1453j
		cmp	[ebp+var_3D4], 0
		jnz	loc_375A
		mov	esi, esp
		push	5Ch ; '\'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B14], eax
		mov	byte ptr [ebp+var_4], 2Fh ; '/'
		cmp	[ebp+var_B14], 0
		jz	short loc_3439
		mov	ecx, [ebp+var_B14] ; this
		call	??0Region@icu_56@@AAE@XZ ; icu_56::Region::Region(void)
		mov	[ebp+var_C60], eax
		jmp	short loc_3443
; ---------------------------------------------------------------------------

loc_3439:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+14B4j
		mov	[ebp+var_C60], 0

loc_3443:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+14C7j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_B20], eax
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_B20]
		push	edx
		lea	ecx, [ebp+var_3E0]
		call	??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z ;	icu_56::LocalPointer<icu_56::Region>::LocalPointer<icu_56::Region>(icu_56::Region *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 30h ; '0'
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3498
		lea	ecx, [ebp+var_3E0]
		call	?orphan@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAEPAVRegion@2@XZ ;	icu_56::LocalPointerBase<icu_56::Region>::orphan(void)
		mov	[ebp+var_3D4], eax
		jmp	loc_35E8
; ---------------------------------------------------------------------------

loc_3498:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1510j
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		lea	ecx, [ebp+var_3E0]
		call	??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)
		mov	byte ptr [ebp+var_4], 2Dh ; '-'
		mov	esi, esp
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 2Bh ; '+'
		lea	ecx, [ebp+var_374]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		mov	byte ptr [ebp+var_4], 16h
		lea	ecx, [ebp+var_35C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_35E8:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1523j
		lea	ecx, [ebp+var_374]
		call	??D?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEAAVUnicodeString@1@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::operator*(void)
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_3D4]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::UnicodeString::setTo(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0
		push	4
		mov	eax, [ebp+var_3D4]
		add	eax, 4
		push	eax
		mov	ecx, [ebp+var_3D4]
		add	ecx, 8		; this
		mov	edi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax
		push	0
		mov	ecx, [ebp+var_3D4]
		add	ecx, 8
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z ; icu_56::UnicodeString::extract(int,int,char *,int,icu_56::UnicodeString::EInvariant)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_3D4]
		push	ecx
		mov	edx, [ebp+var_3D4]
		add	edx, 8
		push	edx
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_put_56
		add	esp, 10h
		lea	ecx, [ebp+var_4C8] ; this
		call	??0Formattable@icu_56@@QAE@XZ ;	icu_56::Formattable::Formattable(void)
		mov	byte ptr [ebp+var_4], 31h ; '1'
		mov	[ebp+var_4D4], 0
		lea	ecx, [ebp+var_3C]
		call	??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator->(void)
		mov	[ebp+var_C60], eax
		mov	esi, esp
		lea	eax, [ebp+var_4D4]
		push	eax
		lea	ecx, [ebp+var_4C8]
		push	ecx
		mov	edx, [ebp+var_3D4]
		add	edx, 8
		push	edx
		mov	eax, [ebp+var_C60]
		mov	edx, [eax]
		mov	ecx, [ebp+var_C60]
		mov	eax, [edx+4Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_4D4]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_3720
		lea	ecx, [ebp+var_4C8] ; this
		call	?getLong@Formattable@icu_56@@QBEHXZ ; icu_56::Formattable::getLong(void)
		mov	ecx, [ebp+var_3D4]
		mov	[ecx+48h], eax
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_3D4]
		push	ecx
		mov	edx, [ebp+var_3D4]
		mov	eax, [edx+48h]
		push	eax
		lea	ecx, [ebp+var_24]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_iput_56
		add	esp, 10h
		jmp	short loc_372D
; ---------------------------------------------------------------------------

loc_3720:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1772j
		mov	eax, [ebp+var_3D4]
		mov	dword ptr [eax+48h], 0FFFFFFFFh

loc_372D:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+17AEj
		mov	eax, [ebp+var_3D4]
		mov	dword ptr [eax+4Ch], 6
		mov	byte ptr [ebp+var_4], 30h ; '0'
		lea	ecx, [ebp+var_4C8] ; this
		call	??1Formattable@icu_56@@UAE@XZ ;	icu_56::Formattable::~Formattable(void)
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		lea	ecx, [ebp+var_3E0]
		call	??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)
		jmp	short loc_3767
; ---------------------------------------------------------------------------

loc_375A:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1489j
		mov	eax, [ebp+var_3D4]
		mov	dword ptr [eax+4Ch], 6

loc_3767:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+17E8j
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_AFC], eax
		mov	byte ptr [ebp+var_4], 32h ; '2'
		cmp	[ebp+var_AFC], 0
		jz	short loc_37CB
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_AFC] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_AFC]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_AFC]
		mov	[ebp+var_C60], edx
		jmp	short loc_37D5
; ---------------------------------------------------------------------------

loc_37CB:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+181Cj
		mov	[ebp+var_C60], 0

loc_37D5:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1859j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_B08], eax
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_B08]
		push	edx
		lea	ecx, [ebp+var_4E0]
		call	??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z	; icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 33h ; '3'
		lea	ecx, [ebp+var_4E0]
		call	?orphan@?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAEPAVUVector@2@XZ	; icu_56::LocalPointerBase<icu_56::UVector>::orphan(void)
		mov	ecx, [ebp+var_3D4]
		mov	[ecx+58h], eax
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		lea	ecx, [ebp+var_4E0]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_397C
		mov	byte ptr [ebp+var_4], 2Dh ; '-'
		mov	esi, esp
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 2Bh ; '+'
		lea	ecx, [ebp+var_374]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		mov	byte ptr [ebp+var_4], 16h
		lea	ecx, [ebp+var_35C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_397C:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+18C5j
		mov	esi, esp
		lea	ecx, [ebp+var_528] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 34h ; '4'
		mov	[ebp+var_534], 0
		jmp	short loc_39B0
; ---------------------------------------------------------------------------

loc_39A1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &):loc_3B7Fj
		mov	eax, [ebp+var_534]
		add	eax, 1
		mov	[ebp+var_534], eax

loc_39B0:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1A2Fj
		mov	esi, esp
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_534], eax
		jge	loc_3B84
		mov	esi, esp
		mov	eax, [ebp+var_534]
		push	eax		; int
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	ecx, ax
		cmp	ecx, 20h ; ' '
		jz	short loc_3A2A
		mov	esi, esp
		mov	eax, [ebp+var_534]
		push	eax		; int
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		movzx	ecx, ax
		push	ecx		; wchar_t
		lea	ecx, [ebp+var_528] ; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append(wchar_t)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3A2A:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1A83j
		mov	esi, esp
		mov	eax, [ebp+var_534]
		push	eax		; int
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	ecx, ax
		cmp	ecx, 20h ; ' '
		jz	short loc_3A74
		mov	esi, [ebp+var_534]
		add	esi, 1
		mov	edi, esp
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		cmp	esi, eax
		jnz	loc_3B7F

loc_3A74:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1ADCj
		lea	eax, [ebp+var_528]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_540], eax
		cmp	[ebp+var_540], 0
		jz	loc_3B6A
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_AE4], eax
		mov	byte ptr [ebp+var_4], 35h ; '5'
		cmp	[ebp+var_AE4], 0
		jz	short loc_3AFF
		mov	eax, [ebp+var_540]
		add	eax, 8
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_AE4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_AE4]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_AE4]
		mov	[ebp+var_C60], edx
		jmp	short loc_3B09
; ---------------------------------------------------------------------------

loc_3AFF:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1B54j
		mov	[ebp+var_C60], 0

loc_3B09:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1B8Dj
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_AF0], eax
		mov	byte ptr [ebp+var_4], 34h ; '4'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_AF0]
		push	edx
		lea	ecx, [ebp+var_54C]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 36h ; '6'
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_54C]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, [ebp+var_3D4]
		mov	ecx, [ecx+58h]	; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 34h ; '4'
		lea	ecx, [ebp+var_54C]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)

loc_3B6A:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1B29j
		mov	esi, esp
		lea	ecx, [ebp+var_528] ; this
		call	dword ptr ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3B7F:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1AFEj
		jmp	loc_39A1
; ---------------------------------------------------------------------------

loc_3B84:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1A5Bj
		mov	byte ptr [ebp+var_4], 2Eh ; '.'
		mov	esi, esp
		lea	ecx, [ebp+var_528] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3B9D:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+147Dj
		mov	byte ptr [ebp+var_4], 2Dh ; '-'
		mov	esi, esp
		lea	ecx, [ebp+var_3BC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 2Bh ; '+'
		lea	ecx, [ebp+var_374]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		mov	byte ptr [ebp+var_4], 16h
		lea	ecx, [ebp+var_35C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		jmp	loc_324B
; ---------------------------------------------------------------------------

loc_3BD9:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+12F1j
					; icu_56::Region::loadRegionData(UErrorCode &)+1F3Cj
		lea	ecx, [ebp+var_90]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_3EB1
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_90]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getNextResource_56
		add	esp, 0Ch
		mov	[ebp+var_558], eax
		mov	eax, [ebp+var_558]
		push	eax
		call	_ures_getType_56
		add	esp, 4
		cmp	eax, 8
		jnz	loc_3E9D
		mov	eax, [ebp+var_558]
		push	eax
		call	_ures_getSize_56
		add	esp, 4
		cmp	eax, 3
		jnz	loc_3E9D
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		mov	ecx, [ebp+var_558]
		push	ecx
		lea	edx, [ebp+var_5A0]
		push	edx
		call	?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByIndex(UResourceBundle const	*,int,UErrorCode *)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 37h ; '7'
		mov	eax, [ebp+arg_0]
		push	eax
		push	1
		mov	ecx, [ebp+var_558]
		push	ecx
		lea	edx, [ebp+var_5E8]
		push	edx
		call	?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByIndex(UResourceBundle const	*,int,UErrorCode *)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 38h ; '8'
		mov	eax, [ebp+arg_0]
		push	eax
		push	2
		mov	ecx, [ebp+var_558]
		push	ecx
		lea	edx, [ebp+var_630]
		push	edx
		call	?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByIndex(UResourceBundle const	*,int,UErrorCode *)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 39h ; '9'
		lea	eax, [ebp+var_5A0]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_63C], eax
		cmp	[ebp+var_63C], 0
		jz	loc_3E52
		lea	ecx, [ebp+var_724] ; this
		call	??0Formattable@icu_56@@QAE@XZ ;	icu_56::Formattable::Formattable(void)
		mov	byte ptr [ebp+var_4], 3Ah ; ':'
		mov	[ebp+var_730], 0
		lea	ecx, [ebp+var_3C]
		call	??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator->(void)
		mov	[ebp+var_C60], eax
		mov	esi, esp
		lea	eax, [ebp+var_730]
		push	eax
		lea	ecx, [ebp+var_724]
		push	ecx
		lea	edx, [ebp+var_5E8]
		push	edx
		mov	eax, [ebp+var_C60]
		mov	edx, [eax]
		mov	ecx, [ebp+var_C60]
		mov	eax, [edx+4Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_730]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_3D7B
		lea	ecx, [ebp+var_724] ; this
		call	?getLong@Formattable@icu_56@@QBEHXZ ; icu_56::Formattable::getLong(void)
		mov	ecx, [ebp+var_63C]
		mov	[ecx+48h], eax
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_63C]
		push	ecx
		mov	edx, [ebp+var_63C]
		mov	eax, [edx+48h]
		push	eax
		lea	ecx, [ebp+var_24]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_iput_56
		add	esp, 10h

loc_3D7B:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1DCFj
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_ACC], eax
		mov	byte ptr [ebp+var_4], 3Bh ; ';'
		cmp	[ebp+var_ACC], 0
		jz	short loc_3DD8
		mov	esi, esp
		lea	eax, [ebp+var_630]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_ACC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_ACC]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_ACC]
		mov	[ebp+var_C60], edx
		jmp	short loc_3DE2
; ---------------------------------------------------------------------------

loc_3DD8:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1E30j
		mov	[ebp+var_C60], 0

loc_3DE2:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1E66j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_AD8], eax
		mov	byte ptr [ebp+var_4], 3Ah ; ':'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_AD8]
		push	edx
		lea	ecx, [ebp+var_73C]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 3Ch ; '<'
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_63C]
		push	ecx
		lea	ecx, [ebp+var_73C]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax
		lea	ecx, [ebp+var_30]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_put_56
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 3Ah ; ':'
		lea	ecx, [ebp+var_73C]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		mov	byte ptr [ebp+var_4], 39h ; '9'
		lea	ecx, [ebp+var_724] ; this
		call	??1Formattable@icu_56@@UAE@XZ ;	icu_56::Formattable::~Formattable(void)

loc_3E52:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1D5Dj
		mov	byte ptr [ebp+var_4], 38h ; '8'
		mov	esi, esp
		lea	ecx, [ebp+var_630] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 37h ; '7'
		mov	esi, esp
		lea	ecx, [ebp+var_5E8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_5A0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3E9D:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1CBAj
					; icu_56::Region::loadRegionData(UErrorCode &)+1CD2j
		mov	eax, [ebp+var_558]
		push	eax
		call	_ures_close_56
		add	esp, 4
		jmp	loc_3BD9
; ---------------------------------------------------------------------------

loc_3EB1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1C82j
		mov	esi, esp
		push	offset _WORLD_ID ; "001"
		lea	ecx, [ebp+var_790] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z ; icu_56::UnicodeString::UnicodeString(wchar_t const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Dh ; '='
		lea	eax, [ebp+var_790]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_748], eax
		cmp	[ebp+var_748], 0
		jz	short loc_3F03
		mov	eax, [ebp+var_748]
		mov	dword ptr [eax+4Ch], 2

loc_3F03:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1F84j
		mov	esi, esp
		push	offset _UNKNOWN_REGION_ID ; "ZZ"
		lea	ecx, [ebp+var_7D8] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z ; icu_56::UnicodeString::UnicodeString(wchar_t const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Eh ; '>'
		lea	eax, [ebp+var_7D8]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_748], eax
		cmp	[ebp+var_748], 0
		jz	short loc_3F55
		mov	eax, [ebp+var_748]
		mov	dword ptr [eax+4Ch], 0

loc_3F55:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1FD6j
		mov	[ebp+var_7E4], 0
		jmp	short loc_3F70
; ---------------------------------------------------------------------------

loc_3F61:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &):loc_3FDFj
		mov	eax, [ebp+var_7E4]
		add	eax, 1
		mov	[ebp+var_7E4], eax

loc_3F70:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1FEFj
		lea	ecx, [ebp+var_48]
		call	??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::operator->(void)
		mov	esi, esp
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_7E4], eax
		jge	short loc_3FE1
		mov	esi, esp
		mov	eax, [ebp+var_7E4]
		push	eax		; int
		lea	ecx, [ebp+var_48]
		call	??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::operator->(void)
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_748], eax
		cmp	[ebp+var_748], 0
		jz	short loc_3FDF
		mov	eax, [ebp+var_748]
		mov	dword ptr [eax+4Ch], 3

loc_3FDF:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2060j
		jmp	short loc_3F61
; ---------------------------------------------------------------------------

loc_3FE1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+201Fj
		mov	[ebp+var_7F0], 0
		jmp	short loc_3FFC
; ---------------------------------------------------------------------------

loc_3FED:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &):loc_406Bj
		mov	eax, [ebp+var_7F0]
		add	eax, 1
		mov	[ebp+var_7F0], eax

loc_3FFC:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+207Bj
		lea	ecx, [ebp+var_54]

loc_3FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::boolalphao
		call	??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::operator->(void)
		mov	esi, esp
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_7F0], eax
		jge	short loc_406D
		mov	esi, esp
		mov	eax, [ebp+var_7F0]
		push	eax		; int
		lea	ecx, [ebp+var_54]
		call	??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::operator->(void)
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_748], eax
		cmp	[ebp+var_748], 0
		jz	short loc_406B
		mov	eax, [ebp+var_748]
		mov	dword ptr [eax+4Ch], 5

loc_406B:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+20ECj
		jmp	short loc_3FED
; ---------------------------------------------------------------------------

loc_406D:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+20ABj
		mov	esi, esp
		push	offset _OUTLYING_OCEANIA_REGION_ID ; "QO"
		lea	ecx, [ebp+var_838] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z ; icu_56::UnicodeString::UnicodeString(wchar_t const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	eax, [ebp+var_838]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_748], eax
		cmp	[ebp+var_748], 0
		jz	short loc_40BF
		mov	eax, [ebp+var_748]
		mov	dword ptr [eax+4Ch], 4

loc_40BF:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2140j
					; icu_56::Region::loadRegionData(UErrorCode &)+236Ej ...
		lea	ecx, [ebp+var_D8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_hasNext_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	loc_476A
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		lea	ecx, [ebp+var_D8]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getNextResource_56
		add	esp, 0Ch
		push	eax		; struct UResourceBundle *
		lea	ecx, [ebp+var_844] ; this
		call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)
		mov	byte ptr [ebp+var_4], 40h ; '@'
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_4285
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_844] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 3Eh ; '>'
		mov	esi, esp
		lea	ecx, [ebp+var_838] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Dh ; '='
		mov	esi, esp
		lea	ecx, [ebp+var_7D8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_790] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_4285:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+21ABj
		lea	ecx, [ebp+var_844]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getKey_56
		add	esp, 4
		mov	[ebp+Str1], eax
		push	offset ??_C@_0BD@KAHDAFFJ@containedGroupings?$AA@ ; "containedGroupings"
		mov	eax, [ebp+Str1]
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jz	short loc_42CF
		push	offset ??_C@_0L@FABOBEN@deprecated?$AA@	; "deprecated"
		mov	eax, [ebp+Str1]
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_42E3

loc_42CF:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2345j
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_844] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		jmp	loc_40BF
; ---------------------------------------------------------------------------

loc_42E3:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+235Dj
		mov	esi, esp
		push	0
		push	0FFFFFFFFh
		mov	eax, [ebp+Str1]
		push	eax
		lea	ecx, [ebp+var_898]
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z ; icu_56::UnicodeString::UnicodeString(char const *,int,icu_56::UnicodeString::EInvariant)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 41h ; 'A'
		lea	eax, [ebp+var_898]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_8A4], eax
		mov	[ebp+var_8B0], 0
		jmp	short loc_4340
; ---------------------------------------------------------------------------

loc_4331:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+27C8j
		mov	eax, [ebp+var_8B0]
		add	eax, 1
		mov	[ebp+var_8B0], eax

loc_4340:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+23BFj
		lea	ecx, [ebp+var_844]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		call	_ures_getSize_56
		add	esp, 4
		cmp	[ebp+var_8B0], eax
		jge	loc_473D
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8B0]
		push	ecx
		lea	ecx, [ebp+var_844]
		call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias(void)
		push	eax
		lea	edx, [ebp+var_8F8]
		push	edx
		call	?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByIndex(UResourceBundle const	*,int,UErrorCode *)
		add	esp, 10h
		mov	byte ptr [ebp+var_4], 42h ; 'B'
		lea	eax, [ebp+var_8F8]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_904], eax
		cmp	[ebp+var_8A4], 0
		jz	loc_471F
		cmp	[ebp+var_904], 0
		jz	loc_471F
		mov	eax, [ebp+var_8A4]
		cmp	dword ptr [eax+54h], 0
		jnz	loc_445F
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_AB4], eax
		mov	byte ptr [ebp+var_4], 43h ; 'C'
		cmp	[ebp+var_AB4], 0
		jz	short loc_4436
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_AB4] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_AB4]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_AB4]
		mov	[ebp+var_C60], edx
		jmp	short loc_4440
; ---------------------------------------------------------------------------

loc_4436:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2487j
		mov	[ebp+var_C60], 0

loc_4440:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+24C4j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_AC0], eax
		mov	byte ptr [ebp+var_4], 42h ; 'B'
		mov	ecx, [ebp+var_8A4]
		mov	edx, [ebp+var_AC0]
		mov	[ecx+54h], edx

loc_445F:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+245Cj
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_A9C], eax
		mov	byte ptr [ebp+var_4], 44h ; 'D'
		cmp	[ebp+var_A9C], 0
		jz	short loc_44B5
		mov	esi, esp
		mov	ecx, [ebp+var_A9C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_A9C]
		mov	dword ptr [eax], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	ecx, [ebp+var_A9C]
		mov	[ebp+var_C60], ecx
		jmp	short loc_44BF
; ---------------------------------------------------------------------------

loc_44B5:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2514j
		mov	[ebp+var_C60], 0

loc_44BF:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2543j
		mov	edx, [ebp+var_C60]
		mov	[ebp+var_AA8], edx
		mov	byte ptr [ebp+var_4], 42h ; 'B'
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_AA8]
		push	ecx
		lea	ecx, [ebp+var_910]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 45h ; 'E'
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_46A7
		mov	byte ptr [ebp+var_4], 42h ; 'B'
		lea	ecx, [ebp+var_910]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		mov	byte ptr [ebp+var_4], 41h ; 'A'
		mov	esi, esp
		lea	ecx, [ebp+var_8F8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 40h ; '@'
		mov	esi, esp
		lea	ecx, [ebp+var_898] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_844] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 3Eh ; '>'
		mov	esi, esp
		lea	ecx, [ebp+var_838] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Dh ; '='
		mov	esi, esp
		lea	ecx, [ebp+var_7D8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_790] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_46A7:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+258Cj
		mov	eax, [ebp+var_904]
		add	eax, 8
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_910]
		call	??C?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@1@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::operator->(void)
		mov	ecx, eax	; this
		call	dword ptr ds:__imp_?fastCopyFrom@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::UnicodeString::fastCopyFrom(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_910]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, [ebp+var_8A4]
		mov	ecx, [ecx+54h]	; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8A4]
		cmp	dword ptr [eax+4Ch], 5
		jz	short loc_4710
		mov	eax, [ebp+var_904]
		mov	ecx, [ebp+var_8A4]
		mov	[eax+50h], ecx

loc_4710:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+278Fj
		mov	byte ptr [ebp+var_4], 42h ; 'B'
		lea	ecx, [ebp+var_910]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)

loc_471F:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+243Fj
					; icu_56::Region::loadRegionData(UErrorCode &)+244Cj
		mov	byte ptr [ebp+var_4], 41h ; 'A'
		mov	esi, esp
		lea	ecx, [ebp+var_8F8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_4331
; ---------------------------------------------------------------------------

loc_473D:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+23EAj
		mov	byte ptr [ebp+var_4], 40h ; '@'
		mov	esi, esp
		lea	ecx, [ebp+var_898] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_844] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		jmp	loc_40BF
; ---------------------------------------------------------------------------

loc_476A:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2168j
		mov	[ebp+var_91C], 0FFFFFFFFh

loc_4774:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2B66j
		lea	eax, [ebp+var_91C]
		push	eax
		lea	ecx, [ebp+var_18]
		call	?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	; icu_56::LocalPointerBase<UHashtable>::getAlias(void)
		push	eax
		call	_uhash_nextElement_56
		add	esp, 8
		mov	[ebp+var_928], eax
		cmp	[ebp+var_928], 0
		jz	loc_4ADB
		mov	eax, [ebp+var_928]
		mov	ecx, [eax+4]
		mov	[ebp+var_934], ecx
		mov	eax, [ebp+var_934]
		mov	ecx, [eax+4Ch]
		cmp	ds:_availableRegions[ecx*4], 0
		jnz	loc_4887
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_A84], eax
		mov	byte ptr [ebp+var_4], 46h ; 'F'
		cmp	[ebp+var_A84], 0
		jz	short loc_4829
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_A84] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_A84]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_A84]
		mov	[ebp+var_C60], edx
		jmp	short loc_4833
; ---------------------------------------------------------------------------

loc_4829:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+287Aj
		mov	[ebp+var_C60], 0

loc_4833:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+28B7j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_A90], eax
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_A90]
		push	edx
		lea	ecx, [ebp+var_940]
		call	??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z	; icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 47h ; 'G'
		lea	ecx, [ebp+var_940]
		call	?orphan@?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAEPAVUVector@2@XZ	; icu_56::LocalPointerBase<icu_56::UVector>::orphan(void)
		mov	ecx, [ebp+var_934]
		mov	edx, [ecx+4Ch]
		mov	ds:_availableRegions[edx*4], eax
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_940]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)

loc_4887:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+284Fj
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_A6C], eax
		mov	byte ptr [ebp+var_4], 48h ; 'H'
		cmp	[ebp+var_A6C], 0
		jz	short loc_48E7
		mov	eax, [ebp+var_934]
		add	eax, 8
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_A6C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_A6C]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_A6C]
		mov	[ebp+var_C60], edx
		jmp	short loc_48F1
; ---------------------------------------------------------------------------

loc_48E7:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+293Cj
		mov	[ebp+var_C60], 0

loc_48F1:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2975j
		mov	eax, [ebp+var_C60]
		mov	[ebp+var_A78], eax
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_A78]
		push	edx
		lea	ecx, [ebp+var_94C]
		call	??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 49h ; 'I'
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_4A98
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_94C]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		mov	byte ptr [ebp+var_4], 3Eh ; '>'
		mov	esi, esp
		lea	ecx, [ebp+var_838] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Dh ; '='
		mov	esi, esp
		lea	ecx, [ebp+var_7D8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_790] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		jmp	loc_4C61
; ---------------------------------------------------------------------------

loc_4A98:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+29BEj
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_94C]
		call	?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::orphan(void)
		push	eax		; void *
		mov	ecx, [ebp+var_934]
		mov	edx, [ecx+4Ch]
		mov	ecx, ds:_availableRegions[edx*4] ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Fh ; '?'
		lea	ecx, [ebp+var_94C]
		call	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
		jmp	loc_4774
; ---------------------------------------------------------------------------

loc_4ADB:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2829j
		push	offset _region_cleanup
		push	1Bh
		call	_ucln_i18n_registerCleanup_56
		add	esp, 8
		lea	ecx, [ebp+var_24]
		call	?orphan@?$LocalPointerBase@UUHashtable@@@icu_56@@QAEPAUUHashtable@@XZ ;	icu_56::LocalPointerBase<UHashtable>::orphan(void)
		mov	ds:_numericCodeMap, eax
		lea	ecx, [ebp+var_18]
		call	?orphan@?$LocalPointerBase@UUHashtable@@@icu_56@@QAEPAUUHashtable@@XZ ;	icu_56::LocalPointerBase<UHashtable>::orphan(void)
		mov	ds:_regionIDMap, eax
		lea	ecx, [ebp+var_30]
		call	?orphan@?$LocalPointerBase@UUHashtable@@@icu_56@@QAEPAUUHashtable@@XZ ;	icu_56::LocalPointerBase<UHashtable>::orphan(void)
		mov	ds:_regionAliases, eax
		mov	byte ptr [ebp+var_4], 3Eh ; '>'
		mov	esi, esp
		lea	ecx, [ebp+var_838] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3Dh ; '='
		mov	esi, esp
		lea	ecx, [ebp+var_7D8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 16h
		mov	esi, esp
		lea	ecx, [ebp+var_790] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 15h
		lea	ecx, [ebp+var_F0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 14h
		lea	ecx, [ebp+var_E4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 13h
		lea	ecx, [ebp+var_D8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 12h
		lea	ecx, [ebp+var_CC] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 11h
		lea	ecx, [ebp+var_C0] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 10h
		lea	ecx, [ebp+var_B4] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Fh
		lea	ecx, [ebp+var_A8] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Eh
		lea	ecx, [ebp+var_9C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Dh
		lea	ecx, [ebp+var_90] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ch
		lea	ecx, [ebp+var_84] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Bh
		lea	ecx, [ebp+var_78] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 0Ah
		lea	ecx, [ebp+var_6C] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 8
		lea	ecx, [ebp+var_60] ; this
		call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
		mov	byte ptr [ebp+var_4], 6
		lea	ecx, [ebp+var_54]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_48]
		call	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
		mov	byte ptr [ebp+var_4], 2
		lea	ecx, [ebp+var_3C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	byte ptr [ebp+var_4], 1
		lea	ecx, [ebp+var_30] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_24] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_18] ; this
		call	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)

loc_4C61:				; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+63Cj
					; icu_56::Region::loadRegionData(UErrorCode &)+10E2j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN253
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 0C68h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN253		dd offset ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2CF5o
					; int const std::_Arithmetic_traits<unsigned __int64>::_Rank
		dd offset $LN252
$LN252		dd 0FFFFFFE8h, 4	; DATA XREF: .text:00004CA0o
		dd offset $LN195	; "newRegionIDMap"
		dd 0FFFFFFDCh, 4
		dd offset $LN196	; "newNumericCodeMap"
		dd 0FFFFFFD0h, 4
		dd offset $LN197	; "newRegionAliases"
		dd 0FFFFFFC4h, 4
		dd offset $LN198	; "df"
		dd 0FFFFFFB8h, 4
		dd offset $LN199	; "continents"
		dd 0FFFFFFACh, 4
		dd offset $LN200	; "groupings"
		dd 0FFFFFFA0h, 4
		dd offset $LN201	; "metadata"
		dd 0FFFFFF94h, 4
		dd offset $LN202	; "metadataAlias"
		db 88h,	0FFh
		dw 0FFFFh
		dd 4
		dd offset $LN203	; "territoryAlias"
		dd 0FFFFFF7Ch, 4
		dd offset $LN204	; "supplementalData"
		dd 0FFFFFF70h, 4
		dd offset $LN205	; "codeMappings"
		dd 0FFFFFF64h, 4
		dd offset $LN206	; "idValidity"
		dd 0FFFFFF58h, 4
		dd offset $LN207	; "regionList"
		dd 0FFFFFF4Ch, 4
		dd offset $LN208	; "regionRegular"
		dd 0FFFFFF40h, 4
		dd offset $LN209	; "regionMacro"
		dd 0FFFFFF34h, 4
		dd offset $LN210	; "regionUnknown"
		dd 0FFFFFF28h, 4
		dd offset $LN211	; "territoryContainment"
		dd 0FFFFFF1Ch, 4
		dd offset $LN212	; "worldContainment"
		dd 0FFFFFF10h, 4
		dd offset $LN213	; "groupingContainment"
		dd 0FFFFFEC8h, 40h
		dd offset $LN214	; "regionName"
		dd 0FFFFFEA8h, 0Ch
		dd offset $LN215	; "buf"
		db 90h
		db 0FEh, 2 dup(0FFh)
		dd 4
		dd offset $LN216	; "newRegion"
		dd 0FFFFFE84h, 4
		dd offset $LN217	; "newRegion"
		dd 0FFFFFE3Ch, 40h
		dd offset $LN218	; "regionName"
		dd 0FFFFFE1Ch, 0Ch
		dd offset $LN219	; "buf"
		dd 0FFFFFE04h, 4
		dd offset $LN220	; "newRegion"
		dd 0FFFFFDF8h, 4
		dd offset $LN221	; "newRegion"
		dd 0FFFFFDECh, 4
		dd offset $LN222	; "regionName"
		dd 0FFFFFDBCh, 4
		dd offset $LN223	; "r"
		dd 0FFFFFCC8h, 0E0h
		dd offset $LN224	; "result"
		dd 0FFFFFCBCh, 4
		dd offset $LN225	; "ps"
		dd 0FFFFFCA4h, 4
		dd offset $LN226	; "res"
		dd 0FFFFFC8Ch, 4
		dd offset $LN227	; "aliasFromStr"
		dd 0FFFFFC44h, 40h
		dd offset $LN228	; "aliasTo"
		dd 0FFFFFC20h, 4
		dd offset $LN229	; "newRgn"
		dd 0FFFFFB38h, 0E0h
		dd offset $LN230	; "result"
		dd 0FFFFFB2Ch, 4
		dd offset $LN231	; "ps"
		dd 0FFFFFB20h, 4
		dd offset $LN232	; "newPreferredValues"
		dd 0FFFFFAD8h, 40h
		dd offset $LN233	; "currentRegion"
		dd 0FFFFFAB4h, 4
		dd offset $LN234	; "preferredValue"
		dd 0FFFFFA60h, 40h
		dd offset $LN235	; "codeMappingID"
		dd 0FFFFFA18h, 40h
		dd offset $LN236	; "codeMappingNumber"
		dd 0FFFFF9D0h, 40h
		dd offset $LN237	; "codeMapping3Letter"
		dd 0FFFFF8DCh, 0E0h
		dd offset $LN238	; "result"
		dd 0FFFFF8D0h, 4
		dd offset $LN239	; "ps"
		dd 0FFFFF8C4h, 4
		dd offset $LN240	; "code3"
		dd 0FFFFF870h, 40h
		dd offset $LN241	; "WORLD_ID_STRING"
		dd 0FFFFF828h, 40h
		dd offset $LN242	; "UNKNOWN_REGION_ID_STRING"
		dd 0FFFFF7C8h, 40h
		dd offset $LN243	; "OUTLYING_OCEANIA_REGION_ID_STRING"
		dd 0FFFFF7BCh, 4
		dd offset $LN244	; "mapping"
		dd 0FFFFF768h, 40h
		dd offset $LN245	; "parentStr"
		dd 0FFFFF708h, 40h
		dd offset $LN246	; "child"
		dd 0FFFFF6F0h, 4
		dd offset $LN247	; "childStr"
		dd 0FFFFF6E4h, 4
		dd offset $LN248	; "pos"
		dd 0FFFFF6C0h, 4
		dd offset $LN249	; "newAr"
		dd 0FFFFF6B4h, 4
		dd offset $LN250	; "arString"
$LN250		db 'arString',0         ; DATA XREF: .text:00004F40o
$LN249		db 'newAr',0            ; DATA XREF: .text:00004F34o
$LN248		db 'pos',0              ; DATA XREF: .text:00004F28o
$LN247		db 'childStr',0         ; DATA XREF: .text:00004F1Co
$LN246		db 'child',0            ; DATA XREF: .text:00004F10o
$LN245		db 'parentStr',0        ; DATA XREF: .text:00004F04o
$LN244		db 'mapping',0          ; DATA XREF: .text:00004EF8o
$LN243		db 'OUTLYING_OCEANIA_REGION_ID_STRING',0 ; DATA XREF: .text:00004EECo
$LN242		db 'UNKNOWN_REGION_ID_STRING',0 ; DATA XREF: .text:00004EE0o
$LN241		db 'WORLD_ID_STRING',0  ; DATA XREF: .text:00004ED4o
$LN240		db 'code3',0            ; DATA XREF: .text:00004EC8o
$LN239		db 'ps',0               ; DATA XREF: .text:00004EBCo
$LN238		db 'result',0           ; DATA XREF: .text:00004EB0o
$LN237		db 'codeMapping3Letter',0 ; DATA XREF: .text:00004EA4o
$LN236		db 'codeMappingNumber',0 ; DATA XREF: .text:00004E98o
$LN235		db 'codeMappingID',0    ; DATA XREF: .text:00004E8Co
$LN234		db 'preferredValue',0   ; DATA XREF: .text:00004E80o
$LN233		db 'currentRegion',0    ; DATA XREF: .text:00004E74o
$LN232		db 'newPreferredValues',0 ; DATA XREF: .text:00004E68o
$LN231		db 'ps',0               ; DATA XREF: .text:00004E5Co
$LN230		db 'result',0           ; DATA XREF: .text:00004E50o
$LN229		db 'newRgn',0           ; DATA XREF: .text:00004E44o
$LN228		db 'aliasTo',0          ; DATA XREF: .text:00004E38o
$LN227		db 'aliasFromStr',0     ; DATA XREF: .text:00004E2Co
$LN226		db 'res',0              ; DATA XREF: .text:00004E20o
$LN225		db 'ps',0               ; DATA XREF: .text:00004E14o
$LN224		db 'result',0           ; DATA XREF: .text:00004E08o
$LN223		db 'r',0                ; DATA XREF: .text:00004DFCo
$LN222		db 'regionName',0       ; DATA XREF: .text:00004DF0o
$LN221		db 'newRegion',0        ; DATA XREF: .text:00004DE4o
$LN220		db 'newRegion',0        ; DATA XREF: .text:00004DD8o
$LN219		db 'buf',0              ; DATA XREF: .text:00004DCCo
$LN218		db 'regionName',0       ; DATA XREF: .text:00004DC0o
$LN217		db 'newRegion',0        ; DATA XREF: .text:00004DB4o
$LN216		db 'newRegion',0        ; DATA XREF: .text:00004DA8o
$LN215		db 'buf',0              ; DATA XREF: .text:00004D9Co
$LN214		db 'regionName',0       ; DATA XREF: .text:00004D90o
$LN213		db 'groupingContainment',0 ; DATA XREF: .text:00004D84o
$LN212		db 'worldContainment',0 ; DATA XREF: .text:00004D78o
$LN211		db 'territoryContainment',0 ; DATA XREF: .text:00004D6Co
$LN210		db 'regionUnknown',0    ; DATA XREF: .text:00004D60o
$LN209		db 'regionMacro',0      ; DATA XREF: .text:00004D54o
$LN208		db 'regionRegular',0    ; DATA XREF: .text:00004D48o
$LN207		db 'regionList',0       ; DATA XREF: .text:00004D3Co
$LN206		db 'idValidity',0       ; DATA XREF: .text:00004D30o
$LN205		db 'codeMappings',0     ; DATA XREF: .text:00004D24o
$LN204		db 'supplementalData',0 ; DATA XREF: .text:00004D18o
$LN203		db 'territoryAlias',0   ; DATA XREF: .text:00004D0Co
$LN202		db 'metadataAlias',0    ; DATA XREF: .text:00004D00o
$LN201		db 'metadata',0         ; DATA XREF: .text:00004CF4o
$LN200		db 'groupings',0        ; DATA XREF: .text:00004CE8o
$LN199		db 'continents',0       ; DATA XREF: .text:00004CDCo
$LN198		db 'df',0               ; DATA XREF: .text:00004CD0o
$LN197		db 'newRegionAliases',0 ; DATA XREF: .text:00004CC4o
$LN196		db 'newNumericCodeMap',0 ; DATA XREF: .text:00004CB8o
$LN195		db 'newRegionIDMap',0   ; DATA XREF: .text:00004CACo
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 51C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:000057D0o
		lea	ecx, [ebp-18h]	; this
		jmp	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:000057D8o
		lea	ecx, [ebp-24h]	; this
		jmp	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$2 proc near
					; DATA XREF: .xdata$x:000057E0o
		lea	ecx, [ebp-30h]	; this
		jmp	??1LocalUHashtablePointer@icu_56@@QAE@XZ ; icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$2 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$3 proc near
					; DATA XREF: .xdata$x:000057E8o
		mov	esi, esp
		mov	eax, [ebp-0C4Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$3 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$4 proc near
					; DATA XREF: .xdata$x:000057F0o
		lea	ecx, [ebp-3Ch]
		jmp	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$4 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$5 proc near
					; DATA XREF: .xdata$x:000057F8o
		mov	esi, esp
		mov	eax, [ebp-0C34h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$5 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$6 proc near
					; DATA XREF: .xdata$x:00005800o
		lea	ecx, [ebp-48h]
		jmp	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$6 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$7 proc near
					; DATA XREF: .xdata$x:00005808o
		mov	esi, esp
		mov	eax, [ebp-0C1Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$7 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$8 proc near
					; DATA XREF: .xdata$x:00005810o
		lea	ecx, [ebp-54h]
		jmp	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$8 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$9 proc near
					; DATA XREF: .xdata$x:00005818o
		mov	esi, esp
		mov	eax, [ebp-0C04h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$9 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$10	proc near
					; DATA XREF: .xdata$x:00005820o
		lea	ecx, [ebp-60h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$10	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$11	proc near
					; DATA XREF: .xdata$x:00005828o
		lea	ecx, [ebp-6Ch]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$11	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$12	proc near
					; DATA XREF: .xdata$x:00005830o
		lea	ecx, [ebp-78h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$12	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$13	proc near
					; DATA XREF: .xdata$x:00005838o
		lea	ecx, [ebp-84h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$13	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$14	proc near
					; DATA XREF: .xdata$x:00005840o
		lea	ecx, [ebp-90h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$14	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$15	proc near
					; DATA XREF: .xdata$x:00005848o
		lea	ecx, [ebp-9Ch]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$15	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$16	proc near
					; DATA XREF: .xdata$x:00005850o
		lea	ecx, [ebp-0A8h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$16	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$17	proc near
					; DATA XREF: .xdata$x:00005858o
		lea	ecx, [ebp-0B4h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$17	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$18	proc near
					; DATA XREF: .xdata$x:00005860o
		lea	ecx, [ebp-0C0h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$18	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$19	proc near
					; DATA XREF: .xdata$x:00005868o
		lea	ecx, [ebp-0CCh]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$19	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$20	proc near
					; DATA XREF: .xdata$x:00005870o
		lea	ecx, [ebp-0D8h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$20	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$21	proc near
					; DATA XREF: .xdata$x:00005878o
		lea	ecx, [ebp-0E4h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$21	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$22	proc near
					; DATA XREF: .xdata$x:00005880o
		lea	ecx, [ebp-0F0h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$22	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$23	proc near
					; DATA XREF: .xdata$x:00005888o
		mov	esi, esp
		lea	ecx, [ebp-138h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$23	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$24	proc near
					; DATA XREF: .xdata$x:00005890o
		mov	esi, esp
		mov	eax, [ebp-0BECh]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$24	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$25	proc near
					; DATA XREF: .xdata$x:00005898o
		lea	ecx, [ebp-170h]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$25	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$26	proc near
					; DATA XREF: .xdata$x:000058A0o
		mov	esi, esp
		mov	eax, [ebp-0BD4h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$26	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$27	proc near
					; DATA XREF: .xdata$x:000058A8o
		lea	ecx, [ebp-17Ch]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$27	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$28	proc near
					; DATA XREF: .xdata$x:000058B0o
		mov	esi, esp
		lea	ecx, [ebp-1C4h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$28	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$29	proc near
					; DATA XREF: .xdata$x:000058B8o
		mov	esi, esp
		mov	eax, [ebp-0BBCh]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$29	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$30	proc near
					; DATA XREF: .xdata$x:000058C0o
		lea	ecx, [ebp-1FCh]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$30	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$31	proc near
					; DATA XREF: .xdata$x:000058C8o
		mov	esi, esp
		mov	eax, [ebp-0BA4h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$31	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$32	proc near
					; DATA XREF: .xdata$x:000058D0o
		lea	ecx, [ebp-208h]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$32	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$33	proc near
					; DATA XREF: .xdata$x:000058D8o
		mov	esi, esp
		mov	eax, [ebp-0B8Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$33	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$34	proc near
					; DATA XREF: .xdata$x:000058E0o
					; .xdata$x:000058E8o
		mov	eax, [ebp-0A60h]
		and	eax, 1
		jz	$LN155
		and	dword ptr [ebp-0A60h], 0FFFFFFFEh
		mov	esi, esp
		lea	ecx, [ebp-0A54h] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN155:					; CODE XREF: __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$34+9j
		retn
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$34	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$35	proc near
					; DATA XREF: .xdata$x:000058F0o
					; .xdata$x:000058F8o
		lea	ecx, [ebp-214h]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$35	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$36	proc near
					; DATA XREF: .xdata$x:00005900o
		mov	esi, esp
		mov	eax, [ebp-0B74h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$36	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$37	proc near
					; DATA XREF: .xdata$x:00005908o
		mov	esi, esp
		mov	eax, [ebp-0B5Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$37	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$38	proc near
					; DATA XREF: .xdata$x:00005910o
		mov	esi, esp
		mov	eax, [ebp-0B44h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$38	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$39	proc near
					; DATA XREF: .xdata$x:00005918o
		lea	ecx, [ebp-244h]
		jmp	??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$39	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$40	proc near
					; DATA XREF: .xdata$x:00005920o
		lea	ecx, [ebp-338h]	; this
		jmp	??1Formattable@icu_56@@UAE@XZ ;	icu_56::Formattable::~Formattable(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$40	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$41	proc near
					; DATA XREF: .xdata$x:00005928o
		lea	ecx, [ebp-35Ch]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$41	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$42	proc near
					; DATA XREF: .xdata$x:00005930o
		mov	esi, esp
		mov	eax, [ebp-0B2Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$42	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$43	proc near
					; DATA XREF: .xdata$x:00005938o
		lea	ecx, [ebp-374h]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$43	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$44	proc near
					; DATA XREF: .xdata$x:00005940o
		mov	esi, esp
		lea	ecx, [ebp-3BCh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$44	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$45	proc near
					; DATA XREF: .xdata$x:00005948o
		mov	esi, esp
		mov	eax, [ebp-0B14h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$45	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$46	proc near
					; DATA XREF: .xdata$x:00005950o
		lea	ecx, [ebp-3E0h]
		jmp	??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$46	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$47	proc near
					; DATA XREF: .xdata$x:00005958o
		lea	ecx, [ebp-4C8h]	; this
		jmp	??1Formattable@icu_56@@UAE@XZ ;	icu_56::Formattable::~Formattable(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$47	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$48	proc near
					; DATA XREF: .xdata$x:00005960o
		mov	esi, esp
		mov	eax, [ebp-0AFCh]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$48	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$49	proc near
					; DATA XREF: .xdata$x:00005968o
		lea	ecx, [ebp-4E0h]
		jmp	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$49	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$50	proc near
					; DATA XREF: .xdata$x:00005970o
		mov	esi, esp
		lea	ecx, [ebp-528h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$50	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$51	proc near
					; DATA XREF: .xdata$x:00005978o
		mov	esi, esp
		mov	eax, [ebp-0AE4h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$51	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$52	proc near
					; DATA XREF: .xdata$x:00005980o
		lea	ecx, [ebp-54Ch]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$52	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$53	proc near
					; DATA XREF: .xdata$x:00005988o
		mov	esi, esp
		lea	ecx, [ebp-5A0h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$53	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$54	proc near
					; DATA XREF: .xdata$x:00005990o
		mov	esi, esp
		lea	ecx, [ebp-5E8h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$54	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$55	proc near
					; DATA XREF: .xdata$x:00005998o
		mov	esi, esp
		lea	ecx, [ebp-630h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$55	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$56	proc near
					; DATA XREF: .xdata$x:000059A0o
		lea	ecx, [ebp-724h]	; this
		jmp	??1Formattable@icu_56@@UAE@XZ ;	icu_56::Formattable::~Formattable(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$56	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$57	proc near
					; DATA XREF: .xdata$x:000059A8o
		mov	esi, esp
		mov	eax, [ebp-0ACCh]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$57	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$58	proc near
					; DATA XREF: .xdata$x:000059B0o
		lea	ecx, [ebp-73Ch]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$58	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$59	proc near
					; DATA XREF: .xdata$x:000059B8o
		mov	esi, esp
		lea	ecx, [ebp-790h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$59	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$60	proc near
					; DATA XREF: .xdata$x:000059C0o
		mov	esi, esp
		lea	ecx, [ebp-7D8h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$60	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$61	proc near
					; DATA XREF: .xdata$x:000059C8o
		mov	esi, esp
		lea	ecx, [ebp-838h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$61	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$62	proc near
					; DATA XREF: .xdata$x:000059D0o
		lea	ecx, [ebp-844h]	; this
		jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ;	icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$62	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$63	proc near
					; DATA XREF: .xdata$x:000059D8o
		mov	esi, esp
		lea	ecx, [ebp-898h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$63	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$64	proc near
					; DATA XREF: .xdata$x:000059E0o
		mov	esi, esp
		lea	ecx, [ebp-8F8h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$64	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$65	proc near
					; DATA XREF: .xdata$x:000059E8o
		mov	esi, esp
		mov	eax, [ebp-0AB4h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$65	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$66	proc near
					; DATA XREF: .xdata$x:000059F0o
		mov	esi, esp
		mov	eax, [ebp-0A9Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$66	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$67	proc near
					; DATA XREF: .xdata$x:000059F8o
		lea	ecx, [ebp-910h]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$67	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$68	proc near
					; DATA XREF: .xdata$x:00005A00o
		mov	esi, esp
		mov	eax, [ebp-0A84h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$68	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$69	proc near
					; DATA XREF: .xdata$x:00005A08o
		lea	ecx, [ebp-940h]
		jmp	??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$69	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$70	proc near
					; DATA XREF: .xdata$x:00005A10o
		mov	esi, esp
		mov	eax, [ebp-0A6Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$70	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$71	proc near
					; DATA XREF: .xdata$x:00005A18o
		lea	ecx, [ebp-94Ch]
		jmp	??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)
__unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$71	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0C6Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 56A8h
		public ??_C@_0L@FABOBEN@deprecated?$AA@
; char `string'[]
??_C@_0L@FABOBEN@deprecated?$AA@ db 'deprecated',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2347o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 56B4h
		public ??_C@_0BD@KAHDAFFJ@containedGroupings?$AA@
; char `string'[]
??_C@_0BD@KAHDAFFJ@containedGroupings?$AA@ db 'containedGroupings',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+232Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 56C8h
		public ??_C@_0M@LLKAGNAI@replacement?$AA@
; `string'
??_C@_0M@LLKAGNAI@replacement?$AA@ db 'replacement',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+13D1o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 56D4h
		dd offset ??_R4UnicodeString@icu_56@@6B@ ; const icu_56::UnicodeString::`RTTI Complete Object Locator'
		public ??_SUnicodeString@icu_56@@6B@
; const	icu_56::UnicodeString::`local vftable'
??_SUnicodeString@icu_56@@6B@ dd offset	??_EUnicodeString@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+7C8o
					; icu_56::Region::loadRegionData(UErrorCode &)+8B7o ...
					; icu_56::UnicodeString::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ ; icu_56::UnicodeString::getDynamicClassID(void)
		dd offset ?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z ; icu_56::UnicodeString::extractBetween(int,int,icu_56::UnicodeString &)
		dd offset ?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z ; icu_56::UnicodeString::handleReplaceBetween(int,int,icu_56::UnicodeString const &)
		dd offset ?copy@UnicodeString@icu_56@@UAEXHHH@Z	; icu_56::UnicodeString::copy(int,int,int)
		dd offset ?hasMetaData@UnicodeString@icu_56@@UBECXZ ; icu_56::UnicodeString::hasMetaData(void)
		dd offset ?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ ;	icu_56::UnicodeString::clone(void)
		dd offset ?getLength@UnicodeString@icu_56@@MBEHXZ ; icu_56::UnicodeString::getLength(void)
		dd offset ?getCharAt@UnicodeString@icu_56@@MBE_WH@Z ; icu_56::UnicodeString::getCharAt(int)
		dd offset ?getChar32At@UnicodeString@icu_56@@MBEHH@Z ; icu_56::UnicodeString::getChar32At(int)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5700h
		public ??_C@_08DOJJHCKD@grouping?$AA@
; `string'
??_C@_08DOJJHCKD@grouping?$AA@ db 'grouping',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+4F5o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 570Ch
		public ??_C@_03MMKGDKGA@001?$AA@
; `string'
??_C@_03MMKGDKGA@001?$AA@ dd 313030h	; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+4C6o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5710h
		public ??_C@_0BF@MLDEBPHL@territoryContainment?$AA@
; `string'
??_C@_0BF@MLDEBPHL@territoryContainment?$AA@ db	'territoryContainment',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+497o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5728h
		public ??_C@_07CIFAGBMG@unknown?$AA@
; `string'
??_C@_07CIFAGBMG@unknown?$AA@ db 'unknown',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+468o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5730h
		public ??_C@_0M@LIMEHNLC@macroregion?$AA@
; `string'
??_C@_0M@LIMEHNLC@macroregion?$AA@ db 'macroregion',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+439o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 573Ch
		public ??_C@_07KMAJHHLM@regular?$AA@
; `string'
??_C@_07KMAJHHLM@regular?$AA@ db 'regular',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+40Ao
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5744h
		public ??_C@_06JEJEKGIK@region?$AA@
; `string'
??_C@_06JEJEKGIK@region?$AA@ db	'region',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+3DBo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 574Ch
		public ??_C@_0L@JOJAMJEJ@idValidity?$AA@
; `string'
??_C@_0L@JOJAMJEJ@idValidity?$AA@ db 'idValidity',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+3ACo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5758h
		public ??_C@_0N@BMDACNBJ@codeMappings?$AA@
; `string'
??_C@_0N@BMDACNBJ@codeMappings?$AA@ db 'codeMappings',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+37Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5768h
		public ??_C@_0BB@CPLPEJEM@supplementalData?$AA@
; `string'
??_C@_0BB@CPLPEJEM@supplementalData?$AA@ db 'supplementalData',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+358o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 577Ch
		public ??_C@_09IJMFKACG@territory?$AA@
; `string'
??_C@_09IJMFKACG@territory?$AA@	db 'territory',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+331o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5788h
		public ??_C@_05NKHOCLEE@alias?$AA@
; `string'
??_C@_05NKHOCLEE@alias?$AA@ db 'alias',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+308o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5790h
		public ??_C@_08DHGINADL@metadata?$AA@
; `string'
??_C@_08DHGINADL@metadata?$AA@ db 'metadata',0
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2E6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 579Ch
		dd offset ??_R4UVector@icu_56@@6B@ ; const icu_56::UVector::`RTTI Complete Object Locator'
		public ??_SUVector@icu_56@@6B@
; const	icu_56::UVector::`local	vftable'
??_SUVector@icu_56@@6B@	dd offset ??_EUVector@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+17Eo
					; icu_56::Region::loadRegionData(UErrorCode &)+213o ...
					; icu_56::UVector::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UVector@icu_56@@UBEPAXXZ ;	icu_56::UVector::getDynamicClassID(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 57A8h
__ehfuncinfo$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z dd 19930522h,	4Ah
					; DATA XREF: __ehhandler$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
__unwindtable$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000057B0o
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$0
		align 8
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$1
		dd 1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$2
		dd 2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$3
		dd 2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$4
		dd 4
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$5
		dd 4
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$6
		dd 6
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$7
		dd 6
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$8
		dd 8
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$9
		dd 8
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$10
		dd 0Ah
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$11
		dd 0Bh
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$12
		dd 0Ch
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$13
		dd 0Dh
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$14
		dd 0Eh
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$15
		dd 0Fh
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$16
		dd 10h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$17
		dd 11h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$18
		dd 12h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$19
		dd 13h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$20
		dd 14h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$21
		dd 15h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$22
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$23
		dd 17h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$24
		dd 17h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$25
		dd 17h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$26
		dd 17h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$27
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$28
		dd 1Ch
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$29
		dd 1Ch
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$30
		dd 1Ch
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$31
		dd 1Ch
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$32
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$33
		dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB+1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$34
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$34
		dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$35
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$35
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$36
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$37
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$38
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$39
		dd offset ?_Rank@?$_Arithmetic_traits@I@std@@2HB+1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$40
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$41
		dd offset ?_Rank@?$_Arithmetic_traits@I@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$42
		dd offset ?_Rank@?$_Arithmetic_traits@I@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$43
		dd offset ?_Rank@?$_Arithmetic_traits@J@std@@2HB+1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$44
		dd offset ?_Rank@?$_Arithmetic_traits@J@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$45
		dd offset ?_Rank@?$_Arithmetic_traits@J@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$46
		dd offset ?_Rank@?$_Arithmetic_traits@K@std@@2HB ; int const std::_Arithmetic_traits<ulong>::_Rank
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$47
		dd offset ?_Rank@?$_Arithmetic_traits@J@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$48
		dd offset ?_Rank@?$_Arithmetic_traits@J@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$49
		dd offset ?_Rank@?$_Arithmetic_traits@J@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$50
		dd offset ?_Rank@?$_Arithmetic_traits@_J@std@@2HB ; int	const std::_Arithmetic_traits<__int64>::_Rank
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$51
		dd offset ?_Rank@?$_Arithmetic_traits@_J@std@@2HB ; int	const std::_Arithmetic_traits<__int64>::_Rank
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$52
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$53
		dd offset ?_Rank@?$_Arithmetic_traits@_J@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$54
		dd offset ?_Rank@?$_Arithmetic_traits@_K@std@@2HB ; int	const std::_Arithmetic_traits<unsigned __int64>::_Rank
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$55
		dd offset ?_Rank@?$_Arithmetic_traits@_K@std@@2HB+1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$56
		dd offset ?_Rank@?$_Arithmetic_traits@_K@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$57
		dd offset ?_Rank@?$_Arithmetic_traits@_K@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$58
		dd 16h
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$59
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$60
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$61
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$62
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$63
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB+1
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$64
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$65
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$66
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB+2
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$67
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$68
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$69
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$70
		dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
		dd offset __unwindfunclet$?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z$71
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5A1Ch
		public ??_R4UVector@icu_56@@6B@
; const	icu_56::UVector::`RTTI Complete	Object Locator'
??_R4UVector@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:0000579Co
		dd offset ??_R0?AVUVector@icu_56@@@8 ; icu_56::UVector `RTTI Type Descriptor'
		dd offset ??_R3UVector@icu_56@@8 ; icu_56::UVector::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 5A30h
		public ??_R0?AVUVector@icu_56@@@8
; class	icu_56::UVector	`RTTI Type Descriptor'
??_R0?AVUVector@icu_56@@@8 dd offset ??_7type_info@@6B@	; DATA XREF: .rdata$r:00005A28o
					; .rdata$r:icu_56::UVector::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avuvector@ic	db '.?AVUVector@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5A50h
		public ??_R3UVector@icu_56@@8
; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
??_R3UVector@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00005A2Co
					; .rdata$r:00005A88o
		dd 3
		dd offset ??_R2UVector@icu_56@@8 ; icu_56::UVector::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5A60h
		public ??_R2UVector@icu_56@@8
; icu_56::UVector::`RTTI Base Class Array'
??_R2UVector@icu_56@@8 dd offset ??_R1A@?0A@EA@UVector@icu_56@@8
					; DATA XREF: .rdata$r:00005A5Co
					; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5A70h
		public ??_R1A@?0A@EA@UVector@icu_56@@8
; icu_56::UVector::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UVector@icu_56@@8	dd offset ??_R0?AVUVector@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UVector::`RTTI Base Class	Array'o
					; icu_56::UVector `RTTI	Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UVector@icu_56@@8 ; icu_56::UVector::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5A8Ch
		public ??_R4UnicodeString@icu_56@@6B@
; const	icu_56::UnicodeString::`RTTI Complete Object Locator'
??_R4UnicodeString@icu_56@@6B@ dd 3 dup(0) ; DATA XREF:	.rdata:000056D4o
		dd offset ??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString `RTTI Type Descriptor'
		dd offset ??_R3UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 5AA0h
		public ??_R0?AVUnicodeString@icu_56@@@8
; class	icu_56::UnicodeString `RTTI Type Descriptor'
??_R0?AVUnicodeString@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00005A98o
					; .rdata$r:icu_56::UnicodeString::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avunicodestr	db '.?AVUnicodeString@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5AC4h
		public ??_R3UnicodeString@icu_56@@8
; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeString@icu_56@@8 dd	2 dup(0) ; DATA	XREF: .rdata$r:00005A9Co
					; .rdata$r:00005B00o
		dd 4
		dd offset ??_R2UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5AD4h
		public ??_R2UnicodeString@icu_56@@8
; icu_56::UnicodeString::`RTTI Base Class Array'
??_R2UnicodeString@icu_56@@8 dd	offset ??_R1A@?0A@EA@UnicodeString@icu_56@@8
					; DATA XREF: .rdata$r:00005AD0o
					; icu_56::UnicodeString::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Replaceable@icu_56@@8 ;	icu_56::Replaceable::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5AE8h
		public ??_R1A@?0A@EA@UnicodeString@icu_56@@8
; icu_56::UnicodeString::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@UnicodeString@icu_56@@8 dd offset	??_R0?AVUnicodeString@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeString::`RTTI Base	Class Array'o
					; icu_56::UnicodeString	`RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5B04h
		public ??_R1A@?0A@EA@Replaceable@icu_56@@8
; icu_56::Replaceable::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@Replaceable@icu_56@@8 dd offset ??_R0?AVReplaceable@icu_56@@@8
					; DATA XREF: .rdata$r:00005AD8o
					; .rdata$r:icu_56::Replaceable::`RTTI Base Class Array'o
					; icu_56::Replaceable `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 5B20h
		public ??_R0?AVReplaceable@icu_56@@@8
; class	icu_56::Replaceable `RTTI Type Descriptor'
??_R0?AVReplaceable@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avreplaceabl	db '.?AVReplaceable@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5B44h
		public ??_R3Replaceable@icu_56@@8
; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
??_R3Replaceable@icu_56@@8 dd 2	dup(0)	; DATA XREF: .rdata$r:00005B1Co
		dd 3
		dd offset ??_R2Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 5B54h
		public ??_R2Replaceable@icu_56@@8
; icu_56::Replaceable::`RTTI Base Class	Array'
??_R2Replaceable@icu_56@@8 dd offset ??_R1A@?0A@EA@Replaceable@icu_56@@8
					; DATA XREF: .rdata$r:00005B50o
					; icu_56::Replaceable::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5B64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+524p
					; icu_56::Region::loadRegionData(UErrorCode &)+FBBp ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5B90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UnicodeString::`scalar deleting destructor'(unsigned int)
		public ??_GUnicodeString@icu_56@@UAEPAXI@Z
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_5BE3
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_5BE3:				; CODE XREF: icu_56::UnicodeString::`scalar deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUnicodeString@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5BFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(icu_56::LocalUResourceBundlePointer *this,	struct UResourceBundle *)
		public ??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z
??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2F9p
					; icu_56::Region::loadRegionData(UErrorCode &)+322p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>(UResourceBundle *)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5C44h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(icu_56::LocalUResourceBundlePointer *__hidden this)
		public ??1LocalUResourceBundlePointer@icu_56@@QAE@XZ
??1LocalUResourceBundlePointer@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+541p
					; icu_56::Region::loadRegionData(UErrorCode &)+550p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		push	ecx
		call	_ures_close_56
		add	esp, 4
		mov	ecx, [ebp+var_8]
		call	??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ	; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1LocalUResourceBundlePointer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5C94h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::LocalUResourceBundlePointer::adoptInstead(icu_56::LocalUResourceBundlePointer	*this, struct UResourceBundle *)
		public ?adoptInstead@LocalUResourceBundlePointer@icu_56@@QAEXPAUUResourceBundle@@@Z
?adoptInstead@LocalUResourceBundlePointer@icu_56@@QAEXPAUUResourceBundle@@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+13FDp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		push	ecx
		call	_ures_close_56
		add	esp, 4
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?adoptInstead@LocalUResourceBundlePointer@icu_56@@QAEXPAUUResourceBundle@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5CE4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; class	icu_56::UnicodeString __cdecl icu_56::ures_getNextUnicodeString(struct UResourceBundle *, char const * *, enum	UErrorCode *)
		public ?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z
?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+6D1p
					; icu_56::Region::loadRegionData(UErrorCode &)+989p ...

var_E4		= byte ptr -0E4h
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_E0], 0
		mov	[ebp+var_8], 0
		mov	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		lea	edx, [ebp+var_8]
		push	edx
		mov	eax, [ebp+arg_4]
		push	eax
		call	_ures_getNextString_56
		add	esp, 10h
		mov	[ebp+var_14], eax
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; int
		mov	ecx, [ebp+var_14]
		push	ecx		; wchar_t *
		push	1		; signed __int8
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	edx, [ebp+var_E0]
		or	edx, 1
		mov	[ebp+var_E0], edx
		mov	eax, [ebp+arg_0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN7		dd 1			; DATA XREF: icu_56::ures_getNextUnicodeString(UResourceBundle *,char const * *,UErrorCode *)+7Co
		dd offset $LN6
$LN6		dd 0FFFFFFF8h, 4	; DATA XREF: .text:00005D88o
		dd offset $LN5
$LN5		dd 6E656Ch		; DATA XREF: .text:00005D94o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5D9Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; class	icu_56::UnicodeString __cdecl icu_56::ures_getUnicodeStringByIndex(struct UResourceBundle const	*, int,	enum  UErrorCode *)
		public ?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z
?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z proc	near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1CECp
					; icu_56::Region::loadRegionData(UErrorCode &)+1D0Cp ...

var_E4		= byte ptr -0E4h
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_E0], 0
		mov	[ebp+var_8], 0
		mov	eax, [ebp+arg_C]
		push	eax
		lea	ecx, [ebp+var_8]
		push	ecx
		mov	edx, [ebp+arg_8]
		push	edx
		mov	eax, [ebp+arg_4]
		push	eax
		call	_ures_getStringByIndex_56
		add	esp, 10h
		mov	[ebp+var_14], eax
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; int
		mov	ecx, [ebp+var_14]
		push	ecx		; wchar_t *
		push	1		; signed __int8
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	edx, [ebp+var_E0]
		or	edx, 1
		mov	[ebp+var_E0], edx
		mov	eax, [ebp+arg_0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?ures_getUnicodeStringByIndex@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@HPAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN7_0		dd 1			; DATA XREF: icu_56::ures_getUnicodeStringByIndex(UResourceBundle const	*,int,UErrorCode *)+7Co
		dd offset $LN6_0
$LN6_0		dd 0FFFFFFF8h, 4	; DATA XREF: .text:00005E40o
		dd offset $LN5_0
$LN5_0		dd 6E656Ch		; DATA XREF: .text:00005E4Co
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5E54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; class	icu_56::UnicodeString __cdecl icu_56::ures_getUnicodeStringByKey(struct	UResourceBundle	const *, char const *, enum  UErrorCode	*)
		public ?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z
?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z proc	near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+13E9p

var_E4		= byte ptr -0E4h
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_E0], 0
		mov	[ebp+var_8], 0
		mov	eax, [ebp+arg_C]
		push	eax
		lea	ecx, [ebp+var_8]
		push	ecx
		mov	edx, [ebp+arg_8]
		push	edx
		mov	eax, [ebp+arg_4]
		push	eax
		call	_ures_getStringByKey_56
		add	esp, 10h
		mov	[ebp+var_14], eax
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; int
		mov	ecx, [ebp+var_14]
		push	ecx		; wchar_t *
		push	1		; signed __int8
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	edx, [ebp+var_E0]
		or	edx, 1
		mov	[ebp+var_E0], edx
		mov	eax, [ebp+arg_0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7_1
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN7_1		dd 1			; DATA XREF: icu_56::ures_getUnicodeStringByKey(UResourceBundle	const *,char const *,UErrorCode	*)+7Co
		dd offset $LN6_1
$LN6_1		dd 0FFFFFFF8h, 4	; DATA XREF: .text:00005EF8o
		dd offset $LN5_1
$LN5_1		dd 6E656Ch		; DATA XREF: .text:00005F04o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5F0Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::LocalUHashtablePointer::LocalUHashtablePointer(icu_56::LocalUHashtablePointer *this, struct	UHashtable *)
		public ??0LocalUHashtablePointer@icu_56@@QAE@PAUUHashtable@@@Z
??0LocalUHashtablePointer@icu_56@@QAE@PAUUHashtable@@@Z	proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+66p
					; icu_56::Region::loadRegionData(UErrorCode &):loc_1FFEp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??0?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@PAUUHashtable@@@Z ; icu_56::LocalPointerBase<UHashtable>::LocalPointerBase<UHashtable>(UHashtable *)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0LocalUHashtablePointer@icu_56@@QAE@PAUUHashtable@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5F54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(icu_56::LocalUHashtablePointer *__hidden this)
		public ??1LocalUHashtablePointer@icu_56@@QAE@XZ
??1LocalUHashtablePointer@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+61Cp
					; icu_56::Region::loadRegionData(UErrorCode &)+628p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		push	ecx
		call	_uhash_close_56
		add	esp, 4
		mov	ecx, [ebp+var_8]
		call	??1?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UHashtable>::~LocalPointerBase<UHashtable>(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1LocalUHashtablePointer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5FA4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_deleteRegion	proc near		; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+66Do

var_DC		= dword	ptr -0DCh
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C8], eax
		mov	ecx, [ebp+var_C8]
		mov	[ebp+var_D4], ecx
		cmp	[ebp+var_D4], 0
		jz	short loc_6005
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_D4]
		mov	eax, [edx]
		mov	ecx, [ebp+var_D4]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_DC], eax
		jmp	short loc_600F
; ---------------------------------------------------------------------------

loc_6005:				; CODE XREF: _deleteRegion+3Aj
		mov	[ebp+var_DC], 0

loc_600F:				; CODE XREF: _deleteRegion+5Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_deleteRegion	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6024h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_region_cleanup	proc near		; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &):loc_4ADBo

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		call	?cleanupRegionData@Region@icu_56@@SAXXZ	; icu_56::Region::cleanupRegionData(void)
		mov	al, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_region_cleanup	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6060h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UVector::`scalar deleting destructor'(unsigned int)
		public ??_GUVector@icu_56@@UAEPAXI@Z
??_GUVector@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1UVector@icu_56@@UAE@XZ ; icu_56::UVector::~UVector(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_60B3
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_60B3:				; CODE XREF: icu_56::UVector::`scalar deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUVector@icu_56@@UAEPAXI@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 60CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::Region::cleanupRegionData()
		public ?cleanupRegionData@Region@icu_56@@SAXXZ
?cleanupRegionData@Region@icu_56@@SAXXZ	proc near ; CODE XREF: _region_cleanup+1Ep

var_100		= dword	ptr -100h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 100h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_100]
		mov	ecx, 40h ; '@'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		jmp	short loc_60FC
; ---------------------------------------------------------------------------

loc_60F3:				; CODE XREF: icu_56::Region::cleanupRegionData(void):loc_6163j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_60FC:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+25j
		cmp	[ebp+var_8], 7
		jge	short loc_6165
		mov	eax, [ebp+var_8]
		cmp	ds:_availableRegions[eax*4], 0
		jz	short loc_6163
		mov	eax, [ebp+var_8]
		mov	ecx, ds:_availableRegions[eax*4]
		mov	[ebp+var_EC], ecx
		mov	edx, [ebp+var_EC]
		mov	[ebp+var_F8], edx
		cmp	[ebp+var_F8], 0
		jz	short loc_6159
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_F8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_F8]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_100], eax
		jmp	short loc_6163
; ---------------------------------------------------------------------------

loc_6159:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+66j
		mov	[ebp+var_100], 0

loc_6163:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+41j
					; icu_56::Region::cleanupRegionData(void)+8Bj
		jmp	short loc_60F3
; ---------------------------------------------------------------------------

loc_6165:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+34j
		cmp	ds:_regionAliases, 0
		jz	short loc_617C
		mov	eax, ds:_regionAliases
		push	eax
		call	_uhash_close_56
		add	esp, 4

loc_617C:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+A0j
		cmp	ds:_numericCodeMap, 0
		jz	short loc_6193
		mov	eax, ds:_numericCodeMap
		push	eax
		call	_uhash_close_56
		add	esp, 4

loc_6193:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+B7j
		cmp	ds:_regionIDMap, 0
		jz	short loc_61AA
		mov	eax, ds:_regionIDMap
		push	eax
		call	_uhash_close_56
		add	esp, 4

loc_61AA:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+CEj
		cmp	ds:_allRegions,	0
		jz	short loc_6221
		mov	esi, esp
		mov	ecx, ds:_allRegions ; this
		call	dword ptr ds:__imp_?removeAllElements@UVector@icu_56@@QAEXXZ ; icu_56::UVector::removeAllElements(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, ds:_allRegions
		mov	[ebp+var_D4], eax
		mov	ecx, [ebp+var_D4]
		mov	[ebp+var_E0], ecx
		cmp	[ebp+var_E0], 0
		jz	short loc_620D
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_E0]
		mov	eax, [edx]
		mov	ecx, [ebp+var_E0]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_100], eax
		jmp	short loc_6217
; ---------------------------------------------------------------------------

loc_620D:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+11Aj
		mov	[ebp+var_100], 0

loc_6217:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+13Fj
		mov	ds:_allRegions,	0

loc_6221:				; CODE XREF: icu_56::Region::cleanupRegionData(void)+E5j
		mov	ds:_regionIDMap, 0
		mov	eax, ds:_regionIDMap
		mov	ds:_numericCodeMap, eax
		mov	ecx, ds:_numericCodeMap
		mov	ds:_regionAliases, ecx
		mov	ecx, offset _gRegionDataInitOnce ; this
		call	?reset@UInitOnce@icu_56@@QAEXXZ	; icu_56::UInitOnce::reset(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 100h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?cleanupRegionData@Region@icu_56@@SAXXZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6260h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::UInitOnce::reset(icu_56::UInitOnce *__hidden this)
		public ?reset@UInitOnce@icu_56@@QAEXXZ
?reset@UInitOnce@icu_56@@QAEXXZ	proc near
					; CODE XREF: icu_56::Region::cleanupRegionData(void)+17Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?reset@UInitOnce@icu_56@@QAEXXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6294h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::Region::Region(icu_56::Region *__hidden this)
		public ??0Region@icu_56@@AAE@XZ
??0Region@icu_56@@AAE@XZ proc near	; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F74p
					; icu_56::Region::loadRegionData(UErrorCode &)+14BCp

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0Region@icu_56@@AAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7Region@icu_56@@6B@ ; const icu_56::Region::`vftable'
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+48h], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4Ch], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+54h], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+58h], 0
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax+4], 0
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0Region@icu_56@@AAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 6370h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0Region@icu_56@@AAE@XZ$0 proc	near ; DATA XREF: .xdata$x:000063A4o
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0Region@icu_56@@AAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0Region@icu_56@@AAE@XZ proc near ; DATA XREF: icu_56::Region::Region(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0Region@icu_56@@AAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??0Region@icu_56@@AAE@XZ endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 63A0h
__unwindtable$??0Region@icu_56@@AAE@XZ dd 0FFFFFFFFh ; DATA XREF: .xdata$x:000063B0o
		dd offset __unwindfunclet$??0Region@icu_56@@AAE@XZ$0
__ehfuncinfo$??0Region@icu_56@@AAE@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$??0Region@icu_56@@AAE@XZ+14o
		dd offset __unwindtable$??0Region@icu_56@@AAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 63CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::Region::~Region(icu_56::Region *__hidden this)
		public ??1Region@icu_56@@UAE@XZ
??1Region@icu_56@@UAE@XZ proc near	; CODE XREF: icu_56::Region::`scalar deleting destructor'(uint)+26p
					; icu_56::Region::`vector deleting destructor'(uint)+6Ep
					; DATA XREF: ...

var_10C		= dword	ptr -10Ch
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1Region@icu_56@@UAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 100h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_10C]
		mov	ecx, 40h ; '@'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7Region@icu_56@@6B@ ; const icu_56::Region::`vftable'
		mov	[ebp+var_4], 1
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+54h], 0
		jz	short loc_6477
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+54h]
		mov	[ebp+var_F8], ecx
		mov	edx, [ebp+var_F8]
		mov	[ebp+var_104], edx
		cmp	[ebp+var_104], 0
		jz	short loc_646D
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_104]
		mov	edx, [eax]
		mov	ecx, [ebp+var_104]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_10C], eax
		jmp	short loc_6477
; ---------------------------------------------------------------------------

loc_646D:				; CODE XREF: icu_56::Region::~Region(void)+7Aj
		mov	[ebp+var_10C], 0

loc_6477:				; CODE XREF: icu_56::Region::~Region(void)+59j
					; icu_56::Region::~Region(void)+9Fj
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+58h], 0
		jz	short loc_64D0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+58h]
		mov	[ebp+var_E0], ecx
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_EC], edx
		cmp	[ebp+var_EC], 0
		jz	short loc_64C6
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_EC]
		mov	edx, [eax]
		mov	ecx, [ebp+var_EC]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_10C], eax
		jmp	short loc_64D0
; ---------------------------------------------------------------------------

loc_64C6:				; CODE XREF: icu_56::Region::~Region(void)+D3j
		mov	[ebp+var_10C], 0

loc_64D0:				; CODE XREF: icu_56::Region::~Region(void)+B2j
					; icu_56::Region::~Region(void)+F8j
		mov	byte ptr [ebp+var_4], 0
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 10Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1Region@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 6524h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1Region@icu_56@@UAE@XZ$0 proc	near ; DATA XREF: .xdata$x:00006570o
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??1Region@icu_56@@UAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1Region@icu_56@@UAE@XZ$1 proc	near ; DATA XREF: .xdata$x:00006578o
		mov	ecx, [ebp-14h]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??1Region@icu_56@@UAE@XZ$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1Region@icu_56@@UAE@XZ proc near ; DATA XREF: icu_56::Region::~Region(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-110h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1Region@icu_56@@UAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1Region@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 656Ch
__unwindtable$??1Region@icu_56@@UAE@XZ dd 0FFFFFFFFh ; DATA XREF: .xdata$x:00006584o
		dd offset __unwindfunclet$??1Region@icu_56@@UAE@XZ$0
		align 8
		dd offset __unwindfunclet$??1Region@icu_56@@UAE@XZ$1
__ehfuncinfo$??1Region@icu_56@@UAE@XZ dd 19930522h, 2
					; DATA XREF: __ehhandler$??1Region@icu_56@@UAE@XZ+14o
		dd offset __unwindtable$??1Region@icu_56@@UAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 65A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Region::operator==(class icu_56::Region const &)const
		public ??8Region@icu_56@@QBECABV01@@Z
??8Region@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 8
		call	dword ptr ds:__imp_??8UnicodeString@icu_56@@QBECABV01@@Z ; icu_56::UnicodeString::operator==(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8Region@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 65F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Region::operator!=(class icu_56::Region const &)const
		public ??9Region@icu_56@@QBECABV01@@Z
??9Region@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 8
		call	dword ptr ds:__imp_??9UnicodeString@icu_56@@QBECABV01@@Z ; icu_56::UnicodeString::operator!=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9Region@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6650h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::Region *__cdecl icu_56::Region::getInstance(const char *, enum UErrorCode *)
		public ?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z
?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+169p
					; icu_56::Region::getContainedRegions(URegionType,UErrorCode &)+20Ep

var_170		= dword	ptr -170h
var_168		= dword	ptr -168h
var_15C		= dword	ptr -15Ch
var_150		= dword	ptr -150h
var_144		= dword	ptr -144h
var_78		= dword	ptr -78h
var_6C		= dword	ptr -6Ch
var_60		= dword	ptr -60h
var_54		= byte ptr -54h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 164h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_170]
		mov	ecx, 59h ; 'Y'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	eax, [ebp+arg_4]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_66C2
		xor	eax, eax
		jmp	loc_6864
; ---------------------------------------------------------------------------

loc_66C2:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+69j
		cmp	[ebp+arg_0], 0
		jnz	short loc_66D8
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 1
		xor	eax, eax
		jmp	loc_6864
; ---------------------------------------------------------------------------

loc_66D8:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+76j
		mov	esi, esp
		push	0
		push	0FFFFFFFFh
		mov	eax, [ebp+arg_0]
		push	eax
		lea	ecx, [ebp+var_54]
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z ; icu_56::UnicodeString::UnicodeString(char const *,int,icu_56::UnicodeString::EInvariant)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		lea	eax, [ebp+var_54]
		push	eax
		mov	ecx, ds:_regionIDMap
		push	ecx
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_60], eax
		cmp	[ebp+var_60], 0
		jnz	short loc_672B
		lea	eax, [ebp+var_54]
		push	eax
		mov	ecx, ds:_regionAliases
		push	ecx
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_60], eax

loc_672B:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+C3j
		cmp	[ebp+var_60], 0
		jnz	short loc_6768
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 1
		mov	[ebp+var_168], 0
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_54] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_168]
		jmp	loc_6864
; ---------------------------------------------------------------------------

loc_6768:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+DFj
		mov	eax, [ebp+var_60]
		cmp	dword ptr [eax+4Ch], 6
		jnz	loc_683C
		mov	esi, esp
		mov	eax, [ebp+var_60]
		mov	ecx, [eax+58h]	; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	eax, 1
		jnz	loc_683C
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_60] ; this
		call	?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z	; icu_56::Region::getPreferredValues(UErrorCode	&)
		mov	[ebp+var_6C], eax
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_6C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_6C]
		mov	eax, [edx+1Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_6C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_6C]
		mov	eax, [edx+18h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_78], eax
		mov	eax, [ebp+var_78]
		push	eax
		mov	ecx, ds:_regionIDMap
		push	ecx
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_60], eax
		mov	eax, [ebp+var_6C]
		mov	[ebp+var_150], eax
		mov	ecx, [ebp+var_150]
		mov	[ebp+var_15C], ecx
		cmp	[ebp+var_15C], 0
		jz	short loc_6832
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_15C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_15C]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_170], eax
		jmp	short loc_683C
; ---------------------------------------------------------------------------

loc_6832:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+1BBj
		mov	[ebp+var_170], 0

loc_683C:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+11Fj
					; icu_56::Region::getInstance(char const *,UErrorCode &)+13Dj ...
		mov	eax, [ebp+var_60]
		mov	[ebp+var_144], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_54] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_144]

loc_6864:				; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+6Dj
					; icu_56::Region::getInstance(char const *,UErrorCode &)+83j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN14
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 170h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
$LN14		dd 1			; DATA XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+218o
		dd offset $LN13
$LN13		dd 0FFFFFFACh, 40h	; DATA XREF: .text:000068A4o
		dd offset $LN11		; "regionCodeString"
$LN11		db 'regionCodeString',0 ; DATA XREF: .text:000068B0o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 68C8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00006908o
		mov	esi, esp
		lea	ecx, [ebp-54h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-174h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 6904h
__unwindtable$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00006914o
		dd offset __unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z$0
__ehfuncinfo$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6930h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::umtx_initOnce(icu_56 *__hidden this, struct icu_56::UInitOnce *,	void (__cdecl *)(enum UErrorCode *), enum UErrorCode *)
		public ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
					; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+4Ep
					; icu_56::Region::getInstance(int,UErrorCode &)+4Ep ...

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; struct icu_56::UInitOnce *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6968
		jmp	loc_69ED
; ---------------------------------------------------------------------------

loc_6968:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+31j
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	?umtx_loadAcquire@icu_56@@YAHACJ@Z ; icu_56::umtx_loadAcquire(long volatile &)
		add	esp, 4
		cmp	eax, 2
		jz	short loc_69CC
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ;	icu_56::umtx_initImplPreInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_69CC
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		call	[ebp+arg_4]
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+Destination]
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	[eax+4], edx
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_69ED
; ---------------------------------------------------------------------------

loc_69CC:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+47j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+64j
		mov	eax, [ebp+Destination]
		mov	ecx, [eax+4]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_69ED
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+Destination]
		mov	edx, [ecx+4]
		mov	[eax], edx

loc_69ED:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+33j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+9Aj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6A04h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::umtx_loadAcquire(volatile	LONG *Destination, volatile __int32 *)
		public ?umtx_loadAcquire@icu_56@@YAHACJ@Z
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+3Cp

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	0		; Comperand
		push	0		; Exchange
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	dword ptr ds:__imp__InterlockedCompareExchange@12 ; InterlockedCompareExchange(x,x,x)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_loadAcquire@icu_56@@YAHACJ@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6A50h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::Region *__cdecl icu_56::Region::getInstance(int,	enum UErrorCode	*)
		public ?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z
?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z	proc near

var_1E8		= dword	ptr -1E8h
var_1E0		= dword	ptr -1E0h
var_1D4		= dword	ptr -1D4h
var_1C8		= dword	ptr -1C8h
var_1BC		= dword	ptr -1BCh
var_1B0		= dword	ptr -1B0h
var_E4		= dword	ptr -0E4h
var_D8		= dword	ptr -0D8h
var_CC		= byte ptr -0CCh
var_B4		= byte ptr -0B4h
var_6C		= byte ptr -6Ch
var_60		= byte ptr -60h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 1DCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_1E8]
		mov	ecx, 77h ; 'w'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	eax, [ebp+arg_4]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6AC2
		xor	eax, eax
		jmp	loc_6DCD
; ---------------------------------------------------------------------------

loc_6AC2:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+69j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, ds:_numericCodeMap
		push	ecx
		call	_uhash_iget_56
		add	esp, 8
		mov	[ebp+var_18], eax
		cmp	[ebp+var_18], 0
		jnz	loc_6CAC
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_13COJANIEC@?$AA0?$AA?$AA@ ; wchar_t *
		push	1		; signed __int8
		lea	ecx, [ebp+var_60] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	esi, esp
		push	184h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1D4], eax
		mov	byte ptr [ebp+var_4], 1
		cmp	[ebp+var_1D4], 0
		jz	short loc_6B49
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_60]
		push	ecx		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_1D4] ; this
		call	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat(icu_56::UnicodeString	const &,UErrorCode &)
		mov	[ebp+var_1E8], eax
		jmp	short loc_6B53
; ---------------------------------------------------------------------------

loc_6B49:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+DCj
		mov	[ebp+var_1E8], 0

loc_6B53:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+F7j
		mov	edx, [ebp+var_1E8]
		mov	[ebp+var_1E0], edx
		mov	byte ptr [ebp+var_4], 0
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_1E0]
		push	ecx
		lea	ecx, [ebp+var_6C]
		call	??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>(icu_56::DecimalFormat *,UErrorCode &)
		mov	byte ptr [ebp+var_4], 2
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6BC9
		mov	[ebp+var_1C8], 0
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_6C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_60] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_1C8]
		jmp	loc_6DCD
; ---------------------------------------------------------------------------

loc_6BC9:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+13Dj
		mov	esi, esp
		lea	ecx, [ebp+var_B4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3
		mov	esi, esp
		lea	ecx, [ebp+var_B4] ; this
		call	dword ptr ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		lea	ecx, [ebp+var_CC] ; this
		call	??0FieldPosition@icu_56@@QAE@XZ	; icu_56::FieldPosition::FieldPosition(void)
		mov	byte ptr [ebp+var_4], 4
		lea	ecx, [ebp+var_6C]
		call	??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::operator->(void)
		mov	[ebp+var_1E8], eax
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		lea	ecx, [ebp+var_CC]
		push	ecx
		lea	edx, [ebp+var_B4]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_1E8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_1E8]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		lea	eax, [ebp+var_B4]
		push	eax
		mov	ecx, ds:_regionAliases
		push	ecx
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_18], eax
		mov	byte ptr [ebp+var_4], 3
		lea	ecx, [ebp+var_CC] ; this
		call	??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition(void)
		mov	byte ptr [ebp+var_4], 2
		mov	esi, esp
		lea	ecx, [ebp+var_B4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_6C]
		call	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_60] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_6CAC:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+8Cj
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6CC8
		xor	eax, eax
		jmp	loc_6DCD
; ---------------------------------------------------------------------------

loc_6CC8:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+26Fj
		cmp	[ebp+var_18], 0
		jnz	short loc_6CDE
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 1
		xor	eax, eax
		jmp	loc_6DCD
; ---------------------------------------------------------------------------

loc_6CDE:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+27Cj
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+4Ch], 6
		jnz	loc_6DCA
		mov	esi, esp
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+58h]	; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	eax, 1
		jnz	loc_6DCA
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_18] ; this
		call	?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z	; icu_56::Region::getPreferredValues(UErrorCode	&)
		mov	[ebp+var_D8], eax
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_D8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_D8]
		mov	eax, [edx+1Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_D8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_D8]
		mov	eax, [edx+18h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E4], eax
		mov	eax, [ebp+var_E4]
		push	eax
		mov	ecx, ds:_regionIDMap
		push	ecx
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_D8]
		mov	[ebp+var_1B0], eax
		mov	ecx, [ebp+var_1B0]
		mov	[ebp+var_1BC], ecx
		cmp	[ebp+var_1BC], 0
		jz	short loc_6DC0
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_1BC]
		mov	eax, [edx]
		mov	ecx, [ebp+var_1BC]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1E8], eax
		jmp	short loc_6DCA
; ---------------------------------------------------------------------------

loc_6DC0:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+349j
		mov	[ebp+var_1E8], 0

loc_6DCA:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+295j
					; icu_56::Region::getInstance(int,UErrorCode &)+2B3j ...
		mov	eax, [ebp+var_18]

loc_6DCD:				; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+6Dj
					; icu_56::Region::getInstance(int,UErrorCode &)+174j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN24
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 1E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
$LN24		dd 4			; DATA XREF: icu_56::Region::getInstance(int,UErrorCode	&)+381o
		dd offset $LN23
$LN23		dd 0FFFFFFA0h, 40h	; DATA XREF: .text:00006E0Co
		dd offset $LN18		; "pat"
		dd 0FFFFFF94h, 4
		dd offset $LN19		; "df"
		dd 0FFFFFF4Ch, 40h
		dd offset $LN20		; "id"
		dd 0FFFFFF34h, 10h
		dd offset $LN21		; "posIter"
$LN21		db 'posIter',0          ; DATA XREF: .text:00006E3Co
$LN20		db 'id',0               ; DATA XREF: .text:00006E30o
$LN19		db 'df',0               ; DATA XREF: .text:00006E24o
$LN18		db 'pat',0              ; DATA XREF: .text:00006E18o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 6E54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00006EFCo
		mov	esi, esp
		lea	ecx, [ebp-60h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00006F04o
		mov	esi, esp
		mov	eax, [ebp-1D4h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$2 proc near
					; DATA XREF: .xdata$x:00006F0Co
		lea	ecx, [ebp-6Ch]
		jmp	??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)
__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$2 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$3 proc near
					; DATA XREF: .xdata$x:00006F14o
		mov	esi, esp
		lea	ecx, [ebp-0B4h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$3 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$4 proc near
					; DATA XREF: .xdata$x:00006F1Co
		lea	ecx, [ebp-0CCh]	; this
		jmp	??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition(void)
__unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$4 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getInstance(int,UErrorCode	&)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-1ECh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6ED0h
		public ??_C@_13COJANIEC@?$AA0?$AA?$AA@
; wchar_t `string'
??_C@_13COJANIEC@?$AA0?$AA?$AA@	dd offset ?_Rank@?$_Arithmetic_traits@K@std@@2HB
					; DATA XREF: icu_56::Region::getInstance(int,UErrorCode	&)+96o
_rdata		ends			; int const std::_Arithmetic_traits<ulong>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 6ED4h
__ehfuncinfo$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z dd	19930522h, 5
					; DATA XREF: __ehhandler$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
__unwindtable$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00006EDCo
		dd offset __unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$0
		dd 0
		dd offset __unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$1
		dd 0
		dd offset __unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$2
		dd 2
		dd offset __unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$3
		dd 3
		dd offset __unwindfunclet$?getInstance@Region@icu_56@@SAPBV12@HAAW4UErrorCode@@@Z$4
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6F20h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: static class icu_56::StringEnumeration * __cdecl icu_56::Region::getAvailable(enum  URegionType, enum	 UErrorCode &)
		public ?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z	proc near

var_E8		= dword	ptr -0E8h
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E8]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	eax, [ebp+arg_4]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6F8C
		xor	eax, eax
		jmp	short loc_6FFB
; ---------------------------------------------------------------------------

loc_6F8C:				; CODE XREF: icu_56::Region::getAvailable(URegionType,UErrorCode &)+66j
		mov	esi, esp
		push	74h ; 't'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_D4], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_D4], 0
		jz	short loc_6FD8
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_0]
		mov	edx, ds:_availableRegions[ecx*4]
		push	edx		; struct icu_56::UVector *
		mov	ecx, [ebp+var_D4] ; this
		call	??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z ; icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)
		mov	[ebp+var_E8], eax
		jmp	short loc_6FE2
; ---------------------------------------------------------------------------

loc_6FD8:				; CODE XREF: icu_56::Region::getAvailable(URegionType,UErrorCode &)+94j
		mov	[ebp+var_E8], 0

loc_6FE2:				; CODE XREF: icu_56::Region::getAvailable(URegionType,UErrorCode &)+B6j
		mov	eax, [ebp+var_E8]
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_E0]

loc_6FFB:				; CODE XREF: icu_56::Region::getAvailable(URegionType,UErrorCode &)+6Aj
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 701Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00007058o
		mov	esi, esp
		mov	eax, [ebp-0D4h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getAvailable(URegionType,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0ECh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 7054h
__unwindtable$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00007064o
		dd offset __unwindfunclet$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z dd	19930522h, 1
					; DATA XREF: __ehhandler$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?getAvailable@Region@icu_56@@SAPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7080h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::Region *__thiscall icu_56::Region::getContainingRegion(icu_56::Region *__hidden this)
		public ?getContainingRegion@Region@icu_56@@QBEPBV12@XZ
?getContainingRegion@Region@icu_56@@QBEPBV12@XZ	proc near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi		; enum UErrorCode *
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_14], 0
		lea	eax, [ebp+var_14]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+var_8]
		mov	eax, [eax+50h]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5_2
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getContainingRegion@Region@icu_56@@QBEPBV12@XZ	endp

; ---------------------------------------------------------------------------
		align 4
$LN5_2		dd 1			; DATA XREF: icu_56::Region::getContainingRegion(void)+4Ao
		dd offset $LN4
$LN4		dd 0FFFFFFECh, 4	; DATA XREF: .text:000070F0o
		dd offset $LN3		; "status"
$LN3		db 'status',0           ; DATA XREF: .text:000070FCo
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7108h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Region const * __thiscall icu_56::Region::getContainingRegion(enum  URegionType)const
		public ?getContainingRegion@Region@icu_56@@QBEPBV12@W4URegionType@@@Z
?getContainingRegion@Region@icu_56@@QBEPBV12@W4URegionType@@@Z proc near
					; CODE XREF: icu_56::Region::getContainingRegion(URegionType)+73p

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi		; enum UErrorCode *
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_14], 0
		lea	eax, [ebp+var_14]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+50h], 0
		jnz	short loc_7155
		xor	eax, eax
		jmp	short loc_718C
; ---------------------------------------------------------------------------

loc_7155:				; CODE XREF: icu_56::Region::getContainingRegion(URegionType)+47j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+50h]
		mov	edx, [ecx+4Ch]
		cmp	edx, [ebp+arg_0]
		jnz	short loc_7171
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+50h]
		mov	[ebp+var_DC], ecx
		jmp	short loc_7186
; ---------------------------------------------------------------------------

loc_7171:				; CODE XREF: icu_56::Region::getContainingRegion(URegionType)+59j
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+50h]
		call	?getContainingRegion@Region@icu_56@@QBEPBV12@W4URegionType@@@Z ; icu_56::Region::getContainingRegion(URegionType)
		mov	[ebp+var_DC], eax

loc_7186:				; CODE XREF: icu_56::Region::getContainingRegion(URegionType)+67j
		mov	eax, [ebp+var_DC]

loc_718C:				; CODE XREF: icu_56::Region::getContainingRegion(URegionType)+4Bj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN8
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getContainingRegion@Region@icu_56@@QBEPBV12@W4URegionType@@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN8		dd 1			; DATA XREF: icu_56::Region::getContainingRegion(URegionType)+88o
		dd offset $LN7_2
$LN7_2		dd 0FFFFFFECh, 4	; DATA XREF: .text:000071B8o
		dd offset $LN6_2	; "status"
$LN6_2		db 'status',0           ; DATA XREF: .text:000071C4o
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 71D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::StringEnumeration *__thiscall icu_56::Region::getContainedRegions(icu_56::Region *this, enum UErrorCode *)
		public ?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+105p

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_7241
		xor	eax, eax
		jmp	short loc_72AC
; ---------------------------------------------------------------------------

loc_7241:				; CODE XREF: icu_56::Region::getContainedRegions(UErrorCode &)+6Bj
		mov	esi, esp
		push	74h ; 't'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_E0], 0
		jz	short loc_7289
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx+54h]
		push	edx		; struct icu_56::UVector *
		mov	ecx, [ebp+var_E0] ; this
		call	??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z ; icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)
		mov	[ebp+var_F4], eax
		jmp	short loc_7293
; ---------------------------------------------------------------------------

loc_7289:				; CODE XREF: icu_56::Region::getContainedRegions(UErrorCode &)+99j
		mov	[ebp+var_F4], 0

loc_7293:				; CODE XREF: icu_56::Region::getContainedRegions(UErrorCode &)+B7j
		mov	eax, [ebp+var_F4]
		mov	[ebp+var_EC], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_EC]

loc_72AC:				; CODE XREF: icu_56::Region::getContainedRegions(UErrorCode &)+6Fj
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 72D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0 proc	near
					; DATA XREF: .xdata$x:0000730Co
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getContainedRegions(UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 7308h
__unwindtable$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00007318o
		dd offset __unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7334h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::StringEnumeration * __thiscall icu_56::Region::getContainedRegions(enum	 URegionType, enum  UErrorCode &)const
		public ?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+1AEp

var_1CC		= dword	ptr -1CCh
var_1C4		= dword	ptr -1C4h
var_1B8		= dword	ptr -1B8h
var_1AC		= dword	ptr -1ACh
var_1A0		= dword	ptr -1A0h
var_194		= dword	ptr -194h
var_188		= dword	ptr -188h
var_17C		= dword	ptr -17Ch
var_170		= dword	ptr -170h
var_164		= dword	ptr -164h
var_158		= dword	ptr -158h
var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_74		= dword	ptr -74h
var_68		= dword	ptr -68h
var_5C		= dword	ptr -5Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 1C0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_1CC]
		mov	ecx, 70h ; 'p'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_73A8
		xor	eax, eax
		jmp	loc_76CC
; ---------------------------------------------------------------------------

loc_73A8:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+6Bj
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1B8], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_1B8], 0
		jz	short loc_740C
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareChars_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	0		; void (__cdecl	*)(void	*)
		mov	ecx, [ebp+var_1B8] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z	; icu_56::UVector::UVector(void	(*)(void *),signed char	(*)(UElement,UElement),UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_1B8]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_1B8]
		mov	[ebp+var_1CC], edx
		jmp	short loc_7416
; ---------------------------------------------------------------------------

loc_740C:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+9Cj
		mov	[ebp+var_1CC], 0

loc_7416:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+D6j
		mov	eax, [ebp+var_1CC]
		mov	[ebp+var_1C4], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_1C4]
		mov	[ebp+var_20], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_14] ; this
		call	?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::Region::getContainedRegions(UErrorCode &)
		mov	[ebp+var_2C], eax
		mov	[ebp+var_38], 0
		jmp	short loc_7453
; ---------------------------------------------------------------------------

loc_744A:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&):loc_75B9j
		mov	eax, [ebp+var_38]
		add	eax, 1
		mov	[ebp+var_38], eax

loc_7453:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+114j
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_2C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_2C]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_38], eax
		jge	loc_75BE
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		push	0
		mov	ecx, [ebp+var_2C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_2C]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_44]
		push	ecx		; char *
		call	?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z ; icu_56::Region::getInstance(char const *,UErrorCode	&)
		add	esp, 8
		mov	[ebp+var_50], eax
		mov	ecx, [ebp+var_50]
		call	?getType@Region@icu_56@@QBE?AW4URegionType@@XZ ; icu_56::Region::getType(void)
		cmp	eax, [ebp+arg_0]
		jnz	short loc_74D7
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_50]
		add	ecx, 8
		push	ecx		; void *
		mov	ecx, [ebp+var_20] ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_75B9
; ---------------------------------------------------------------------------

loc_74D7:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+17Fj
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	ecx, [ebp+var_50]
		call	?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z	; icu_56::Region::getContainedRegions(URegionType,UErrorCode &)
		mov	[ebp+var_5C], eax
		mov	[ebp+var_68], 0
		jmp	short loc_74FC
; ---------------------------------------------------------------------------

loc_74F3:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+236j
		mov	eax, [ebp+var_68]
		add	eax, 1
		mov	[ebp+var_68], eax

loc_74FC:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+1BDj
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_5C]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_68], eax
		jge	short loc_756C
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		push	0
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_5C]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_74], eax
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_74]
		push	ecx		; char *
		call	?getInstance@Region@icu_56@@SAPBV12@PBDAAW4UErrorCode@@@Z ; icu_56::Region::getInstance(char const *,UErrorCode	&)
		add	esp, 8
		mov	[ebp+var_80], eax
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_80]
		add	ecx, 8
		push	ecx		; void *
		mov	ecx, [ebp+var_20] ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_74F3
; ---------------------------------------------------------------------------

loc_756C:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+1E5j
		mov	eax, [ebp+var_5C]
		mov	[ebp+var_1A0], eax
		mov	ecx, [ebp+var_1A0]
		mov	[ebp+var_1AC], ecx
		cmp	[ebp+var_1AC], 0
		jz	short loc_75AF
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_1AC]
		mov	eax, [edx]
		mov	ecx, [ebp+var_1AC]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1CC], eax
		jmp	short loc_75B9
; ---------------------------------------------------------------------------

loc_75AF:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+254j
		mov	[ebp+var_1CC], 0

loc_75B9:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+19Ej
					; icu_56::Region::getContainedRegions(URegionType,UErrorCode &)+279j
		jmp	loc_744A
; ---------------------------------------------------------------------------

loc_75BE:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+13Cj
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_188], eax
		mov	ecx, [ebp+var_188]
		mov	[ebp+var_194], ecx
		cmp	[ebp+var_194], 0
		jz	short loc_7601
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_194]
		mov	eax, [edx]
		mov	ecx, [ebp+var_194]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1CC], eax
		jmp	short loc_760B
; ---------------------------------------------------------------------------

loc_7601:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+2A6j
		mov	[ebp+var_1CC], 0

loc_760B:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+2CBj
		mov	esi, esp
		push	74h ; 't'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_170], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_170], 0
		jz	short loc_7650
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_20]
		push	ecx		; struct icu_56::UVector *
		mov	ecx, [ebp+var_170] ; this
		call	??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z ; icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)
		mov	[ebp+var_1CC], eax
		jmp	short loc_765A
; ---------------------------------------------------------------------------

loc_7650:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+2FFj
		mov	[ebp+var_1CC], 0

loc_765A:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+31Aj
		mov	edx, [ebp+var_1CC]
		mov	[ebp+var_17C], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_8C], eax
		mov	eax, [ebp+var_20]
		mov	[ebp+var_158], eax
		mov	ecx, [ebp+var_158]
		mov	[ebp+var_164], ecx
		cmp	[ebp+var_164], 0
		jz	short loc_76BC
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_164]
		mov	eax, [edx]
		mov	ecx, [ebp+var_164]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1CC], eax
		jmp	short loc_76C6
; ---------------------------------------------------------------------------

loc_76BC:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+361j
		mov	[ebp+var_1CC], 0

loc_76C6:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+386j
		mov	eax, [ebp+var_8C]

loc_76CC:				; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+6Fj
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 1CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 76F0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00007744o
		mov	esi, esp
		mov	eax, [ebp-1B8h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:0000774Co
		mov	esi, esp
		mov	eax, [ebp-170h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-1D0h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 7740h
__unwindtable$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00007758o
		dd offset __unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z dd	19930522h, 2
					; DATA XREF: __ehhandler$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?getContainedRegions@Region@icu_56@@QBEPAVStringEnumeration@2@W4URegionType@@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7774h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::Region::contains(icu_56::Region *this, const	struct icu_56::Region *)
		public ?contains@Region@icu_56@@QBECABV12@@Z
?contains@Region@icu_56@@QBECABV12@@Z proc near
					; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+E7p

var_FC		= byte ptr -0FCh
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0FCh
		push	ebx
		push	esi
		push	edi		; enum UErrorCode *
		push	ecx
		lea	edi, [ebp+var_FC]
		mov	ecx, 3Fh ; '?'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_14], 0
		lea	eax, [ebp+var_14]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+54h], 0
		jnz	short loc_77C4
		xor	al, al
		jmp	loc_786F
; ---------------------------------------------------------------------------

loc_77C4:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+47j
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	esi, esp
		push	eax		; void *
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+54h]	; this
		call	dword ptr ds:__imp_?contains@UVector@icu_56@@QBECPAX@Z ; icu_56::UVector::contains(void	*)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	edx, al
		test	edx, edx
		jz	short loc_77F0
		mov	al, 1
		jmp	loc_786F
; ---------------------------------------------------------------------------
		jmp	short loc_786D
; ---------------------------------------------------------------------------

loc_77F0:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+71j
		mov	[ebp+var_20], 0
		jmp	short loc_7802
; ---------------------------------------------------------------------------

loc_77F9:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &):loc_786Bj
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_7802:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+83j
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+54h]	; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_20], eax
		jge	short loc_786D
		mov	esi, esp
		mov	eax, [ebp+var_20]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+54h]	; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_2C]
		push	eax
		mov	ecx, ds:_regionIDMap
		push	ecx
		call	_uhash_get_56
		add	esp, 8
		mov	[ebp+var_38], eax
		cmp	[ebp+var_38], 0
		jz	short loc_786B
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::Region	*
		mov	ecx, [ebp+var_38] ; this
		call	?contains@Region@icu_56@@QBECABV12@@Z ;	icu_56::Region::contains(icu_56::Region	const &)
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_786B
		mov	al, 1
		jmp	short loc_786F
; ---------------------------------------------------------------------------

loc_786B:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+DEj
					; icu_56::Region::contains(icu_56::Region const	&)+F1j
		jmp	short loc_77F9
; ---------------------------------------------------------------------------

loc_786D:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+7Aj
					; icu_56::Region::contains(icu_56::Region const	&)+A6j
		xor	al, al

loc_786F:				; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+4Bj
					; icu_56::Region::contains(icu_56::Region const	&)+75j	...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN12
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0FCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?contains@Region@icu_56@@QBECABV12@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN12		dd 1			; DATA XREF: icu_56::Region::contains(icu_56::Region const &)+FFo
		dd offset $LN11_0
$LN11_0		dd 0FFFFFFECh, 4	; DATA XREF: .text:0000789Co
		dd offset $LN10		; "status"
$LN10		db 'status',0           ; DATA XREF: .text:000078A8o
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 78B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::StringEnumeration *__thiscall icu_56::Region::getPreferredValues(icu_56::Region *this,	enum UErrorCode	*)
		public ?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::Region::getInstance(char const *,UErrorCode &)+14Ap
					; icu_56::Region::getInstance(int,UErrorCode &)+2C0p

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset ?loadRegionData@Region@icu_56@@CAXAAW4UErrorCode@@@Z ; struct icu_56::UInitOnce *
		push	offset _gRegionDataInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jnz	short loc_792A
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+4Ch], 6
		jz	short loc_792E

loc_792A:				; CODE XREF: icu_56::Region::getPreferredValues(UErrorCode &)+6Bj
		xor	eax, eax
		jmp	short loc_7999
; ---------------------------------------------------------------------------

loc_792E:				; CODE XREF: icu_56::Region::getPreferredValues(UErrorCode &)+74j
		mov	esi, esp
		push	74h ; 't'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_E0], 0
		jz	short loc_7976
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx+58h]
		push	edx		; struct icu_56::UVector *
		mov	ecx, [ebp+var_E0] ; this
		call	??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z ; icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)
		mov	[ebp+var_F4], eax
		jmp	short loc_7980
; ---------------------------------------------------------------------------

loc_7976:				; CODE XREF: icu_56::Region::getPreferredValues(UErrorCode &)+A2j
		mov	[ebp+var_F4], 0

loc_7980:				; CODE XREF: icu_56::Region::getPreferredValues(UErrorCode &)+C0j
		mov	eax, [ebp+var_F4]
		mov	[ebp+var_EC], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_EC]

loc_7999:				; CODE XREF: icu_56::Region::getPreferredValues(UErrorCode &)+78j
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 79BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:000079F8o
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::Region::getPreferredValues(UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 79F4h
__unwindtable$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00007A04o
		dd offset __unwindfunclet$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z dd	19930522h, 1
					; DATA XREF: __ehhandler$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?getPreferredValues@Region@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7A20h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	char *__thiscall icu_56::Region::getRegionCode(icu_56::Region *__hidden	this)
		public ?getRegionCode@Region@icu_56@@QBEPBDXZ
?getRegionCode@Region@icu_56@@QBEPBDXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		add	eax, 4
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getRegionCode@Region@icu_56@@QBEPBDXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7A50h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Region::getNumericCode(icu_56::Region *__hidden this)
		public ?getNumericCode@Region@icu_56@@QBEHXZ
?getNumericCode@Region@icu_56@@QBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+48h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getNumericCode@Region@icu_56@@QBEHXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7A80h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: enum	URegionType __thiscall icu_56::Region::getType(void)const
		public ?getType@Region@icu_56@@QBE?AW4URegionType@@XZ
?getType@Region@icu_56@@QBE?AW4URegionType@@XZ proc near
					; CODE XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+177p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getType@Region@icu_56@@QBE?AW4URegionType@@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7AB0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::RegionNameEnumeration *this, struct icu_56::UVector *,	enum UErrorCode	*)
		public ??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::getAvailable(URegionType,UErrorCode &)+ABp
					; icu_56::Region::getContainedRegions(UErrorCode &)+ACp ...

var_130		= dword	ptr -130h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 124h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_130]
		mov	ecx, 49h ; 'I'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??0StringEnumeration@icu_56@@IAE@XZ ; icu_56::StringEnumeration::StringEnumeration(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7RegionNameEnumeration@icu_56@@6B@ ;	const icu_56::RegionNameEnumeration::`vftable'
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+6Ch], 0
		cmp	[ebp+arg_0], 0
		jz	loc_7CC5
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	loc_7CC5
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_11C], eax
		mov	byte ptr [ebp+var_4], 1
		cmp	[ebp+var_11C], 0
		jz	short loc_7BB8
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; int
		push	offset _uhash_compareUnicodeString_56 ;	signed __int8 (__cdecl __high *)(union UElement, union UElement)
		push	offset _uprv_deleteUObject_56 ;	void (__cdecl *)(void *)
		mov	ecx, [ebp+var_11C] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z ; icu_56::UVector::UVector(void (*)(void *),signed char (*)(UElement,UElement),int,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_11C]
		mov	dword ptr [ecx], offset	??_SUVector@icu_56@@6B@	; const	icu_56::UVector::`local	vftable'
		mov	edx, [ebp+var_11C]
		mov	[ebp+var_130], edx
		jmp	short loc_7BC2
; ---------------------------------------------------------------------------

loc_7BB8:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+B6j
		mov	[ebp+var_130], 0

loc_7BC2:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+106j
		mov	eax, [ebp+var_130]
		mov	[ebp+var_128], eax
		mov	byte ptr [ebp+var_4], 0
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_128]
		mov	[ecx+70h], edx
		mov	[ebp+var_20], 0
		jmp	short loc_7BF0
; ---------------------------------------------------------------------------

loc_7BE7:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+20Ej
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_7BF0:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+135j
		mov	esi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_20], eax
		jge	loc_7CC3
		mov	esi, esp
		mov	eax, [ebp+var_20]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2C], eax
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_104], eax
		mov	byte ptr [ebp+var_4], 2
		cmp	[ebp+var_104], 0
		jz	short loc_7C7E
		mov	esi, esp
		mov	eax, [ebp+var_2C]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_104] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_104]
		mov	dword ptr [ecx], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	edx, [ebp+var_104]
		mov	[ebp+var_130], edx
		jmp	short loc_7C88
; ---------------------------------------------------------------------------

loc_7C7E:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+199j
		mov	[ebp+var_130], 0

loc_7C88:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+1CCj
		mov	eax, [ebp+var_130]
		mov	[ebp+var_110], eax
		mov	byte ptr [ebp+var_4], 0
		mov	ecx, [ebp+var_110]
		mov	[ebp+var_38], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_38]
		push	ecx		; void *
		mov	edx, [ebp+var_14]
		mov	ecx, [edx+70h]	; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_7BE7
; ---------------------------------------------------------------------------

loc_7CC3:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+155j
		jmp	short loc_7CCF
; ---------------------------------------------------------------------------

loc_7CC5:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+72j
					; icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+8Bj
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+70h], 0

loc_7CCF:				; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &):loc_7CC3j
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 130h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 7CFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00007D90o
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00007D98o
		mov	esi, esp
		mov	eax, [ebp-11Ch]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$2 proc near
					; DATA XREF: .xdata$x:00007DA0o
		mov	esi, esp
		mov	eax, [ebp-104h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$2 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-134h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7D60h
		dd offset ??_R4RegionNameEnumeration@icu_56@@6B@ ; const icu_56::RegionNameEnumeration::`RTTI Complete Object Locator'
		public ??_7RegionNameEnumeration@icu_56@@6B@
; const	icu_56::RegionNameEnumeration::`vftable'
??_7RegionNameEnumeration@icu_56@@6B@ dd offset	??_ERegionNameEnumeration@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+5Eo
					; icu_56::RegionNameEnumeration::~RegionNameEnumeration(void)+45o
					; icu_56::RegionNameEnumeration::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@RegionNameEnumeration@icu_56@@UBEPAXXZ ; icu_56::RegionNameEnumeration::getDynamicClassID(void)
		dd offset ?clone@StringEnumeration@icu_56@@UBEPAV12@XZ ; icu_56::StringEnumeration::clone(void)
		dd offset ?count@RegionNameEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z ;	icu_56::RegionNameEnumeration::count(UErrorCode	&)
		dd offset ?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z ;	icu_56::StringEnumeration::next(int *,UErrorCode &)
		dd offset ?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z	; icu_56::StringEnumeration::unext(int *,UErrorCode &)
		dd offset ?snext@RegionNameEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z	; icu_56::RegionNameEnumeration::snext(UErrorCode &)
		dd offset ?reset@RegionNameEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z ;	icu_56::RegionNameEnumeration::reset(UErrorCode	&)
		dd offset ??8StringEnumeration@icu_56@@UBECABV01@@Z ; icu_56::StringEnumeration::operator==(icu_56::StringEnumeration const &)
		dd offset ??9StringEnumeration@icu_56@@UBECABV01@@Z ; icu_56::StringEnumeration::operator!=(icu_56::StringEnumeration const &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 7D8Ch
__unwindtable$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00007DACo
		dd offset __unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0
		align 8
		dd offset __unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$1
		align 10h
		dd offset __unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z dd 19930522h,	3
					; DATA XREF: __ehhandler$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7DC8h
		public ??_R4RegionNameEnumeration@icu_56@@6B@
; const	icu_56::RegionNameEnumeration::`RTTI Complete Object Locator'
??_R4RegionNameEnumeration@icu_56@@6B@ dd 3 dup(0) ; DATA XREF:	.rdata:00007D60o
		dd offset ??_R0?AVRegionNameEnumeration@icu_56@@@8 ; icu_56::RegionNameEnumeration `RTTI Type Descriptor'
		dd offset ??_R3RegionNameEnumeration@icu_56@@8 ; icu_56::RegionNameEnumeration::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 7DDCh
		public ??_R0?AVRegionNameEnumeration@icu_56@@@8
; class	icu_56::RegionNameEnumeration `RTTI Type Descriptor'
??_R0?AVRegionNameEnumeration@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00007DD4o
					; .rdata$r:icu_56::RegionNameEnumeration::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avregionname	db '.?AVRegionNameEnumeration@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7E08h
		public ??_R3RegionNameEnumeration@icu_56@@8
; icu_56::RegionNameEnumeration::`RTTI Class Hierarchy Descriptor'
??_R3RegionNameEnumeration@icu_56@@8 dd	2 dup(0) ; DATA	XREF: .rdata$r:00007DD8o
					; .rdata$r:00007E44o
		dd 4
		dd offset ??_R2RegionNameEnumeration@icu_56@@8 ; icu_56::RegionNameEnumeration::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7E18h
		public ??_R2RegionNameEnumeration@icu_56@@8
; icu_56::RegionNameEnumeration::`RTTI Base Class Array'
??_R2RegionNameEnumeration@icu_56@@8 dd	offset ??_R1A@?0A@EA@RegionNameEnumeration@icu_56@@8
					; DATA XREF: .rdata$r:00007E14o
					; icu_56::RegionNameEnumeration::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7E2Ch
		public ??_R1A@?0A@EA@RegionNameEnumeration@icu_56@@8
; icu_56::RegionNameEnumeration::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@RegionNameEnumeration@icu_56@@8 dd offset	??_R0?AVRegionNameEnumeration@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::RegionNameEnumeration::`RTTI Base	Class Array'o
					; icu_56::RegionNameEnumeration	`RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3RegionNameEnumeration@icu_56@@8 ; icu_56::RegionNameEnumeration::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7E48h
		public ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
; icu_56::StringEnumeration::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 dd offset ??_R0?AVStringEnumeration@icu_56@@@8
					; DATA XREF: .rdata$r:00007E1Co
					; .rdata$r:icu_56::StringEnumeration::`RTTI Base Class Array'o
					; icu_56::StringEnumeration `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 7E64h
		public ??_R0?AVStringEnumeration@icu_56@@@8
; class	icu_56::StringEnumeration `RTTI	Type Descriptor'
??_R0?AVStringEnumeration@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::StringEnumeration::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avstringenum	db '.?AVStringEnumeration@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7E8Ch
		public ??_R3StringEnumeration@icu_56@@8
; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
??_R3StringEnumeration@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00007E60o
		dd 3
		dd offset ??_R2StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7E9Ch
		public ??_R2StringEnumeration@icu_56@@8
; icu_56::StringEnumeration::`RTTI Base	Class Array'
??_R2StringEnumeration@icu_56@@8 dd offset ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
					; DATA XREF: .rdata$r:00007E98o
					; icu_56::StringEnumeration::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7EACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::RegionNameEnumeration::`scalar deleting destructor'(unsigned int)
		public ??_GRegionNameEnumeration@icu_56@@UAEPAXI@Z
??_GRegionNameEnumeration@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1RegionNameEnumeration@icu_56@@UAE@XZ	; icu_56::RegionNameEnumeration::~RegionNameEnumeration(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_7EF5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_7EF5:				; CODE XREF: icu_56::RegionNameEnumeration::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GRegionNameEnumeration@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7F10h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::UnicodeString *__thiscall icu_56::RegionNameEnumeration::snext(icu_56::RegionNameEnumeration *this, enum	UErrorCode *)
		public ?snext@RegionNameEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
?snext@RegionNameEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z proc near
					; DATA XREF: .rdata:00007D7Co

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jnz	short loc_7F51
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+70h], 0
		jnz	short loc_7F55

loc_7F51:				; CODE XREF: icu_56::RegionNameEnumeration::snext(UErrorCode &)+36j
		xor	eax, eax
		jmp	short loc_7F8C
; ---------------------------------------------------------------------------

loc_7F55:				; CODE XREF: icu_56::RegionNameEnumeration::snext(UErrorCode &)+3Fj
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+6Ch]
		push	ecx		; int
		mov	edx, [ebp+var_8]
		mov	ecx, [edx+70h]	; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_7F89
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+6Ch]
		add	ecx, 1
		mov	edx, [ebp+var_8]
		mov	[edx+6Ch], ecx

loc_7F89:				; CODE XREF: icu_56::RegionNameEnumeration::snext(UErrorCode &)+68j
		mov	eax, [ebp+var_14]

loc_7F8C:				; CODE XREF: icu_56::RegionNameEnumeration::snext(UErrorCode &)+43j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?snext@RegionNameEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7FA4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::RegionNameEnumeration::reset(icu_56::RegionNameEnumeration *this, enum UErrorCode *)
		public ?reset@RegionNameEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
?reset@RegionNameEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z proc near
					; DATA XREF: .rdata:00007D80o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+6Ch], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?reset@RegionNameEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7FDCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::RegionNameEnumeration::count(icu_56::RegionNameEnumeration *this, enum	UErrorCode *)
		public ?count@RegionNameEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
?count@RegionNameEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z proc near
					; DATA XREF: .rdata:00007D70o

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx

loc_7FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::_Stdioo
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+70h], 0
		jnz	short loc_8014
		mov	[ebp+var_D0], 0
		jmp	short loc_802F
; ---------------------------------------------------------------------------

loc_8014:				; CODE XREF: icu_56::RegionNameEnumeration::count(UErrorCode &)+2Aj
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+70h]	; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_D0], eax

loc_802F:				; CODE XREF: icu_56::RegionNameEnumeration::count(UErrorCode &)+36j
		mov	eax, [ebp+var_D0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?count@RegionNameEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 804Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::RegionNameEnumeration::~RegionNameEnumeration(icu_56::RegionNameEnumeration	*__hidden this)
		public ??1RegionNameEnumeration@icu_56@@UAE@XZ
??1RegionNameEnumeration@icu_56@@UAE@XZ	proc near
					; CODE XREF: icu_56::RegionNameEnumeration::`scalar deleting destructor'(uint)+26p

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1RegionNameEnumeration@icu_56@@UAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7RegionNameEnumeration@icu_56@@6B@ ;	const icu_56::RegionNameEnumeration::`vftable'
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+70h]
		mov	[ebp+var_E0], ecx
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_EC], edx
		cmp	[ebp+var_EC], 0
		jz	short loc_80E4
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_EC]
		mov	edx, [eax]
		mov	ecx, [ebp+var_EC]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F4], eax
		jmp	short loc_80EE
; ---------------------------------------------------------------------------

loc_80E4:				; CODE XREF: icu_56::RegionNameEnumeration::~RegionNameEnumeration(void)+71j
		mov	[ebp+var_F4], 0

loc_80EE:				; CODE XREF: icu_56::RegionNameEnumeration::~RegionNameEnumeration(void)+96j
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1RegionNameEnumeration@icu_56@@UAE@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8128h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1RegionNameEnumeration@icu_56@@UAE@XZ$0 proc near
					; DATA XREF: .xdata$x:0000815Co
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1StringEnumeration@icu_56@@UAE@XZ ; icu_56::StringEnumeration::~StringEnumeration(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??1RegionNameEnumeration@icu_56@@UAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1RegionNameEnumeration@icu_56@@UAE@XZ proc near
					; DATA XREF: icu_56::RegionNameEnumeration::~RegionNameEnumeration(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1RegionNameEnumeration@icu_56@@UAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1RegionNameEnumeration@icu_56@@UAE@XZ endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 8158h
__unwindtable$??1RegionNameEnumeration@icu_56@@UAE@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00008168o
		dd offset __unwindfunclet$??1RegionNameEnumeration@icu_56@@UAE@XZ$0
__ehfuncinfo$??1RegionNameEnumeration@icu_56@@UAE@XZ dd	19930522h, 1
					; DATA XREF: __ehhandler$??1RegionNameEnumeration@icu_56@@UAE@XZ+14o
		dd offset __unwindtable$??1RegionNameEnumeration@icu_56@@UAE@XZ
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8184h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<struct UResourceBundle>::LocalPointerBase<struct UResourceBundle>(struct UResourceBundle *)
		public ??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z
??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z proc near
					; CODE XREF: icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer(UResourceBundle *)+2Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 81BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<struct UResourceBundle>::~LocalPointerBase<struct	UResourceBundle>(void)
		public ??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ
??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ	proc near
					; CODE XREF: icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)+34p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 81E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: struct UResourceBundle * __thiscall icu_56::LocalPointerBase<struct UResourceBundle>::getAlias(void)const
		public ?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ
?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+310p
					; icu_56::Region::loadRegionData(UErrorCode &)+339p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8218h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>(void)
		public ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8250h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>(class	icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099> const	&)
		public ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 828Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::~EnumSet<enum  UNumberFormatAttribute, 4096, 4099>(void)
		public ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 82B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::EnumSet<enum	UNumberFormatAttribute,	4096, 4099>::clear(void)
		public ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 82ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::EnumSet<enum	UNumberFormatAttribute,	4096, 4099>::add(enum  UNumberFormatAttribute)
		public ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	1
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::set(UNumberFormatAttribute,int)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8334h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::EnumSet<enum	UNumberFormatAttribute,	4096, 4099>::remove(enum  UNumberFormatAttribute)
		public ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	0
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::set(UNumberFormatAttribute,int)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 837Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: int __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::contains(enum  UNumberFormatAttribute)const
		public ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::get(UNumberFormatAttribute)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 83C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::EnumSet<enum	UNumberFormatAttribute,	4096, 4099>::set(enum  UNumberFormatAttribute, int)
		public ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z proc near
					; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::add(UNumberFormatAttribute)+2Cp
					; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::remove(UNumberFormatAttribute)+2Cp

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_4], 0
		jz	short loc_8401
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::flag(UNumberFormatAttribute)
		mov	[ebp+var_D0], eax
		jmp	short loc_840B
; ---------------------------------------------------------------------------

loc_8401:				; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::set(UNumberFormatAttribute,int)+27j
		mov	[ebp+var_D0], 0

loc_840B:				; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::set(UNumberFormatAttribute,int)+3Bj
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	ecx, [ebp+var_8]
		call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::flag(UNumberFormatAttribute)
		not	eax
		mov	edx, [ebp+var_8]
		and	eax, [edx]
		or	eax, [ebp+var_D0]
		mov	ecx, [ebp+var_8]
		mov	[ecx], eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8440h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: int __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::get(enum  UNumberFormatAttribute)const
		public ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z proc near
					; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::contains(UNumberFormatAttribute)+2Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::flag(UNumberFormatAttribute)
		mov	ecx, [ebp+var_8]
		and	eax, [ecx]
		neg	eax
		sbb	eax, eax
		neg	eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8490h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::isValidEnum(enum  UNumberFormatAttribute)const
		public ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z proc near

var_D0		= byte ptr -0D0h
var_CD		= byte ptr -0CDh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_0], 1000h
		jb	short loc_84CE
		cmp	[ebp+arg_0], 1003h
		jnb	short loc_84CE
		mov	[ebp+var_CD], 1
		jmp	short loc_84D5
; ---------------------------------------------------------------------------

loc_84CE:				; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::isValidEnum(UNumberFormatAttribute)+2Aj
					; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::isValidEnum(UNumberFormatAttribute)+33j
		mov	[ebp+var_CD], 0

loc_84D5:				; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::isValidEnum(UNumberFormatAttribute)+3Cj
		mov	al, [ebp+var_CD]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 84E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::isValidValue(int)const
		public ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z proc near

var_D0		= byte ptr -0D0h
var_CD		= byte ptr -0CDh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_0], 0
		jz	short loc_851C
		cmp	[ebp+arg_0], 1
		jz	short loc_851C
		mov	[ebp+var_CD], 0
		jmp	short loc_8523
; ---------------------------------------------------------------------------

loc_851C:				; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::isValidValue(int)+27j
					; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::isValidValue(int)+2Dj
		mov	[ebp+var_CD], 1

loc_8523:				; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::isValidValue(int)+36j
		mov	al, [ebp+var_CD]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8534h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099> const	& __thiscall icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099>::operator=(class	icu_56::EnumSet<enum  UNumberFormatAttribute, 4096, 4099> const	&)
		public ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8570h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: unsigned int __thiscall icu_56::EnumSet<enum	UNumberFormatAttribute,	4096, 4099>::getAll(void)const
		public ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 85A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; private: unsigned int	__thiscall icu_56::EnumSet<enum	 UNumberFormatAttribute, 4096, 4099>::flag(enum	 UNumberFormatAttribute)const
		public ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z proc near
					; CODE XREF: icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::set(UNumberFormatAttribute,int)+30p
					; icu_56::EnumSet<UNumberFormatAttribute,4096,4099>::set(UNumberFormatAttribute,int)+4Ep ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+arg_0]
		sub	ecx, 1000h
		mov	eax, 1
		shl	eax, cl
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 85DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<struct UHashtable>::LocalPointerBase<struct UHashtable>(struct UHashtable	*)
		public ??0?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@PAUUHashtable@@@Z
??0?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@PAUUHashtable@@@Z proc near
					; CODE XREF: icu_56::LocalUHashtablePointer::LocalUHashtablePointer(UHashtable *)+2Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@PAUUHashtable@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8614h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<struct UHashtable>::~LocalPointerBase<struct UHashtable>(void)
		public ??1?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@XZ
??1?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)+34p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointerBase@UUHashtable@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8640h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: struct UHashtable * __thiscall icu_56::LocalPointerBase<struct UHashtable>::getAlias(void)const
		public ?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ
?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+675p
					; icu_56::Region::loadRegionData(UErrorCode &)+68Bp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getAlias@?$LocalPointerBase@UUHashtable@@@icu_56@@QBEPAUUHashtable@@XZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8670h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: struct UHashtable * __thiscall icu_56::LocalPointerBase<struct UHashtable>::orphan(void)
		public ?orphan@?$LocalPointerBase@UUHashtable@@@icu_56@@QAEPAUUHashtable@@XZ
?orphan@?$LocalPointerBase@UUHashtable@@@icu_56@@QAEPAUUHashtable@@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2B7Dp
					; icu_56::Region::loadRegionData(UErrorCode &)+2B8Ap ...

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?orphan@?$LocalPointerBase@UUHashtable@@@icu_56@@QAEPAUUHashtable@@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 86B0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::DecimalFormat>::LocalPointer<class icu_56::DecimalFormat>(class	icu_56::DecimalFormat *, enum  UErrorCode &)
		public ??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z
??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+125p
					; icu_56::Region::getInstance(int,UErrorCode &)+121p

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		call	??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z	; icu_56::LocalPointerBase<icu_56::DecimalFormat>::LocalPointerBase<icu_56::DecimalFormat>(icu_56::DecimalFormat *)
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jnz	short loc_8729
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_8729
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7

loc_8729:				; CODE XREF: icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>(icu_56::DecimalFormat *,UErrorCode &)+59j
					; icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>(icu_56::DecimalFormat *,UErrorCode &)+6Ej
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8754h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00008780o
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>(void)
__unwindfunclet$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z	proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>(icu_56::DecimalFormat *,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 877Ch
__unwindtable$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:0000878Co
		dd offset __unwindfunclet$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 87A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::DecimalFormat>::~LocalPointer<class icu_56::DecimalFormat>(void)
		public ??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+610p
					; icu_56::Region::loadRegionData(UErrorCode &)+10B6p ...

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]
		mov	[ebp+var_E0], ecx
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_EC], edx
		cmp	[ebp+var_EC], 0
		jz	short loc_8836
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_EC]
		mov	edx, [eax]
		mov	ecx, [ebp+var_EC]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F4], eax
		jmp	short loc_8840
; ---------------------------------------------------------------------------

loc_8836:				; CODE XREF: icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)+67j
		mov	[ebp+var_F4], 0

loc_8840:				; CODE XREF: icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)+8Cj
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		call	??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>(void)
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8870h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ$0 proc	near
					; DATA XREF: .xdata$x:0000889Co
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormat>::~LocalPointerBase<icu_56::DecimalFormat>(void)
__unwindfunclet$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 8898h
__unwindtable$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000088A8o
		dd offset __unwindfunclet$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ+14o
		dd offset __unwindtable$??1?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 88C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::DecimalFormat *	__thiscall icu_56::LocalPointerBase<class icu_56::DecimalFormat>::operator->(void)const
		public ??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ
??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+644p
					; icu_56::Region::loadRegionData(UErrorCode &)+11B1p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??C?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QBEPAVDecimalFormat@1@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 88F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::UVector>::LocalPointer<class icu_56::UVector>(class icu_56::UVector *, enum  UErrorCode	&)
		public ??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1BAp
					; icu_56::Region::loadRegionData(UErrorCode &)+24Fp ...

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		call	??0?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@@Z ; icu_56::LocalPointerBase<icu_56::UVector>::LocalPointerBase<icu_56::UVector>(icu_56::UVector *)
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jnz	short loc_896D
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_896D
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7

loc_896D:				; CODE XREF: icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)+59j
					; icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)+6Ej
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8998h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:000089C4o
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::~LocalPointerBase<icu_56::UVector>(void)
__unwindfunclet$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 89C0h
__unwindtable$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000089D0o
		dd offset __unwindfunclet$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z dd	19930522h, 1
					; DATA XREF: __ehhandler$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 89ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::UVector>::~LocalPointer<class icu_56::UVector>(void)
		public ??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+5F8p
					; icu_56::Region::loadRegionData(UErrorCode &)+604p ...

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]
		mov	[ebp+var_E0], ecx
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_EC], edx
		cmp	[ebp+var_EC], 0
		jz	short loc_8A7A
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_EC]
		mov	edx, [eax]
		mov	ecx, [ebp+var_EC]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F4], eax
		jmp	short loc_8A84
; ---------------------------------------------------------------------------

loc_8A7A:				; CODE XREF: icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)+67j
		mov	[ebp+var_F4], 0

loc_8A84:				; CODE XREF: icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)+8Cj
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		call	??1?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::~LocalPointerBase<icu_56::UVector>(void)
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8AB4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ$0 proc near
					; DATA XREF: .xdata$x:00008AE0o
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UVector>::~LocalPointerBase<icu_56::UVector>(void)
__unwindfunclet$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 8ADCh
__unwindtable$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00008AECo
		dd offset __unwindfunclet$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ	dd 19930522h, 1
					; DATA XREF: __ehhandler$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ+14o
		dd offset __unwindtable$??1?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8B08h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UVector	* __thiscall icu_56::LocalPointerBase<class icu_56::UVector>::operator->(void)const
		public ??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ
??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ proc	near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+E22p
					; icu_56::Region::loadRegionData(UErrorCode &)+EF2p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??C?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QBEPAVUVector@1@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8B38h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UVector	* __thiscall icu_56::LocalPointerBase<class icu_56::UVector>::orphan(void)
		public ?orphan@?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAEPAVUVector@2@XZ
?orphan@?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAEPAVUVector@2@XZ	proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1895p
					; icu_56::Region::loadRegionData(UErrorCode &)+28F3p

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?orphan@?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAEPAVUVector@2@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8B78h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::UnicodeString>::LocalPointer<class icu_56::UnicodeString>(class	icu_56::UnicodeString *)
		public ??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z
??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+CFFp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??0?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z	; icu_56::LocalPointerBase<icu_56::UnicodeString>::LocalPointerBase<icu_56::UnicodeString>(icu_56::UnicodeString *)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8BC0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::UnicodeString>::LocalPointer<class icu_56::UnicodeString>(class	icu_56::UnicodeString *, enum  UErrorCode &)
		public ??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z
??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+807p
					; icu_56::Region::loadRegionData(UErrorCode &)+8F6p ...

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		call	??0?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z	; icu_56::LocalPointerBase<icu_56::UnicodeString>::LocalPointerBase<icu_56::UnicodeString>(icu_56::UnicodeString *)
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jnz	short loc_8C39
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_8C39
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7

loc_8C39:				; CODE XREF: icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)+59j
					; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)+6Ej
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8C64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00008C90o
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::~LocalPointerBase<icu_56::UnicodeString>(void)
__unwindfunclet$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z	proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 8C8Ch
__unwindtable$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00008C9Co
		dd offset __unwindfunclet$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8CB8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::UnicodeString>::~LocalPointer<class icu_56::UnicodeString>(void)
		public ??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+85Fp
					; icu_56::Region::loadRegionData(UErrorCode &)+92Ep ...

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]
		mov	[ebp+var_E0], ecx
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_EC], edx
		cmp	[ebp+var_EC], 0
		jz	short loc_8D46
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_EC]
		mov	edx, [eax]
		mov	ecx, [ebp+var_EC]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F4], eax
		jmp	short loc_8D50
; ---------------------------------------------------------------------------

loc_8D46:				; CODE XREF: icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)+67j
		mov	[ebp+var_F4], 0

loc_8D50:				; CODE XREF: icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)+8Cj
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		call	??1?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::~LocalPointerBase<icu_56::UnicodeString>(void)
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8D80h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ$0 proc	near
					; DATA XREF: .xdata$x:00008DACo
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::UnicodeString>::~LocalPointerBase<icu_56::UnicodeString>(void)
__unwindfunclet$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 8DA8h
__unwindtable$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00008DB8o
		dd offset __unwindfunclet$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ+14o
		dd offset __unwindtable$??1?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8DD4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString *	__thiscall icu_56::LocalPointerBase<class icu_56::UnicodeString>::getAlias(void)const
		public ?getAlias@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@2@XZ
?getAlias@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@2@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1426p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getAlias@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8E04h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString &	__thiscall icu_56::LocalPointerBase<class icu_56::UnicodeString>::operator*(void)const
		public ??D?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEAAVUnicodeString@1@XZ
??D?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEAAVUnicodeString@1@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+167Ep

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??D?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEAAVUnicodeString@1@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8E34h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString *	__thiscall icu_56::LocalPointerBase<class icu_56::UnicodeString>::operator->(void)const
		public ??C?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@1@XZ
??C?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@1@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2749p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??C?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QBEPAVUnicodeString@1@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8E64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString *	__thiscall icu_56::LocalPointerBase<class icu_56::UnicodeString>::orphan(void)
		public ?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ
?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+81Cp
					; icu_56::Region::loadRegionData(UErrorCode &)+90Bp ...

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?orphan@?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAEPAVUnicodeString@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8EA4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::Region>::LocalPointer<class icu_56::Region>(class icu_56::Region *, enum  UErrorCode &)
		public ??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z
??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+FACp
					; icu_56::Region::loadRegionData(UErrorCode &)+14F4p

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		call	??0?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@@Z ; icu_56::LocalPointerBase<icu_56::Region>::LocalPointerBase<icu_56::Region>(icu_56::Region *)
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jnz	short loc_8F1D
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_8F1D
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7

loc_8F1D:				; CODE XREF: icu_56::LocalPointer<icu_56::Region>::LocalPointer<icu_56::Region>(icu_56::Region *,UErrorCode &)+59j
					; icu_56::LocalPointer<icu_56::Region>::LocalPointer<icu_56::Region>(icu_56::Region *,UErrorCode &)+6Ej
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 8F48h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z$0	proc near
					; DATA XREF: .xdata$x:00008F74o
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@XZ ;	icu_56::LocalPointerBase<icu_56::Region>::~LocalPointerBase<icu_56::Region>(void)
__unwindfunclet$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z$0	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::Region>::LocalPointer<icu_56::Region>(icu_56::Region *,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 8F70h
__unwindtable$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00008F80o
		dd offset __unwindfunclet$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8F9Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointer<class	icu_56::Region>::~LocalPointer<class icu_56::Region>(void)
		public ??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+FD8p
					; icu_56::Region::loadRegionData(UErrorCode &)+12D1p ...

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]
		mov	[ebp+var_E0], ecx
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_EC], edx
		cmp	[ebp+var_EC], 0
		jz	short loc_902A
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_EC]
		mov	edx, [eax]
		mov	ecx, [ebp+var_EC]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F4], eax
		jmp	short loc_9034
; ---------------------------------------------------------------------------

loc_902A:				; CODE XREF: icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)+67j
		mov	[ebp+var_F4], 0

loc_9034:				; CODE XREF: icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)+8Cj
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		call	??1?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@XZ ;	icu_56::LocalPointerBase<icu_56::Region>::~LocalPointerBase<icu_56::Region>(void)
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 9064h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ$0 proc near
					; DATA XREF: .xdata$x:00009090o
		mov	ecx, [ebp-14h]
		jmp	??1?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@XZ ;	icu_56::LocalPointerBase<icu_56::Region>::~LocalPointerBase<icu_56::Region>(void)
__unwindfunclet$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ proc near
					; DATA XREF: icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 908Ch
__unwindtable$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:0000909Co
		dd offset __unwindfunclet$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ+14o
		dd offset __unwindtable$??1?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 90B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Region * __thiscall icu_56::LocalPointerBase<class icu_56::Region>::getAlias(void)const
		public ?getAlias@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@2@XZ
?getAlias@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@2@XZ	proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1230p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getAlias@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@2@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 90E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Region * __thiscall icu_56::LocalPointerBase<class icu_56::Region>::operator->(void)const
		public ??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ
??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1118p
					; icu_56::Region::loadRegionData(UErrorCode &)+113Bp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??C?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QBEPAVRegion@1@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9118h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::Region * __thiscall icu_56::LocalPointerBase<class icu_56::Region>::orphan(void)
		public ?orphan@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAEPAVRegion@2@XZ
?orphan@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAEPAVRegion@2@XZ proc near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+129Ap
					; icu_56::Region::loadRegionData(UErrorCode &)+1518p

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?orphan@?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAEPAVRegion@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9158h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::DecimalFormat>::LocalPointerBase<class icu_56::DecimalFormat>(class	icu_56::DecimalFormat *)
		public ??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z
??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z	proc near
					; CODE XREF: icu_56::LocalPointer<icu_56::DecimalFormat>::LocalPointer<icu_56::DecimalFormat>(icu_56::DecimalFormat *,UErrorCode &)+49p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9190h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::DecimalFormat>::~LocalPointerBase<class icu_56::DecimalFormat>(void)
		public ??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: __unwindfunclet$??0?$LocalPointer@VDecimalFormat@icu_56@@@icu_56@@QAE@PAVDecimalFormat@1@AAW4UErrorCode@@@Z$0+3j
					; icu_56::LocalPointer<icu_56::DecimalFormat>::~LocalPointer<icu_56::DecimalFormat>(void)+A2p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointerBase@VDecimalFormat@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 91BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::UVector>::LocalPointerBase<class icu_56::UVector>(class icu_56::UVector *)
		public ??0?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@@Z
??0?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@@Z proc near
					; CODE XREF: icu_56::LocalPointer<icu_56::UVector>::LocalPointer<icu_56::UVector>(icu_56::UVector *,UErrorCode &)+49p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 91F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::UVector>::~LocalPointerBase<class icu_56::UVector>(void)
		public ??1?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: __unwindfunclet$??0?$LocalPointer@VUVector@icu_56@@@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0+3j
					; icu_56::LocalPointer<icu_56::UVector>::~LocalPointer<icu_56::UVector>(void)+A2p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointerBase@VUVector@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9220h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::UnicodeString>::LocalPointerBase<class icu_56::UnicodeString>(class	icu_56::UnicodeString *)
		public ??0?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z
??0?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z	proc near
					; CODE XREF: icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *)+2Ap
					; icu_56::LocalPointer<icu_56::UnicodeString>::LocalPointer<icu_56::UnicodeString>(icu_56::UnicodeString *,UErrorCode &)+49p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9258h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::UnicodeString>::~LocalPointerBase<class icu_56::UnicodeString>(void)
		public ??1?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: __unwindfunclet$??0?$LocalPointer@VUnicodeString@icu_56@@@icu_56@@QAE@PAVUnicodeString@1@AAW4UErrorCode@@@Z$0+3j
					; icu_56::LocalPointer<icu_56::UnicodeString>::~LocalPointer<icu_56::UnicodeString>(void)+A2p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointerBase@VUnicodeString@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9284h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::Region>::LocalPointerBase<class icu_56::Region>(class icu_56::Region *)
		public ??0?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@@Z
??0?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@@Z proc near
					; CODE XREF: icu_56::LocalPointer<icu_56::Region>::LocalPointer<icu_56::Region>(icu_56::Region *,UErrorCode &)+49p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 92BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::LocalPointerBase<class icu_56::Region>::~LocalPointerBase<class icu_56::Region>(void)
		public ??1?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@XZ
??1?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@XZ proc near
					; CODE XREF: __unwindfunclet$??0?$LocalPointer@VRegion@icu_56@@@icu_56@@QAE@PAVRegion@1@AAW4UErrorCode@@@Z$0+3j
					; icu_56::LocalPointer<icu_56::Region>::~LocalPointer<icu_56::Region>(void)+A2p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1?$LocalPointerBase@VRegion@icu_56@@@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$yc	segment	para public 'CODE' use32
		assume cs:_text$yc
		;org 92E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::`dynamic	initializer for	'RANGE_MARKER_STRING''(void)
??__ERANGE_MARKER_STRING@icu_56@@YAXXZ proc near
					; DATA XREF: .CRT$XCU:_RANGE_MARKER_STRING$initializer$o

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	offset _RANGE_MARKER ; wchar_t *
		mov	ecx, offset _RANGE_MARKER_STRING ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z ; icu_56::UnicodeString::UnicodeString(wchar_t const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset ??__FRANGE_MARKER_STRING@icu_56@@YAXXZ ;	void (__cdecl *)()
		call	_atexit
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??__ERANGE_MARKER_STRING@icu_56@@YAXXZ endp

_text$yc	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$yd	segment	para public 'CODE' use32
		assume cs:_text$yd
		;org 9340h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::`dynamic	atexit destructor for 'RANGE_MARKER_STRING''()
??__FRANGE_MARKER_STRING@icu_56@@YAXXZ proc near
					; DATA XREF: icu_56::`dynamic initializer for 'RANGE_MARKER_STRING''(void)+37o

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		mov	ecx, offset _RANGE_MARKER_STRING ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??__FRANGE_MARKER_STRING@icu_56@@YAXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text$yd	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_CRT$XCU	segment	dword public 'DATA' use32
		assume cs:_CRT$XCU
		;org 9388h
_RANGE_MARKER_STRING$initializer$ dd offset ??__ERANGE_MARKER_STRING@icu_56@@YAXXZ ; icu_56::`dynamic initializer for 'RANGE_MARKER_STRING''(void)
_CRT$XCU	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; _DWORD __thiscall icu_56::UObject::~UObject(icu_56::UObject *__hidden	this)
		extrn __imp_??1UObject@icu_56@@UAE@XZ:near
					; CODE XREF: __unwindfunclet$??0Region@icu_56@@QAE@ABV01@@Z$0+5p
					; __unwindfunclet$??0Region@icu_56@@AAE@XZ$0+5p ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const struct icu_56::UnicodeString *)
		extrn __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::Region::Region(icu_56::Region const &)+83p
					; icu_56::DecimalFormatSymbols::getSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol)+59p ...
; _DWORD __thiscall icu_56::UObject::UObject(icu_56::UObject *__hidden this, const struct icu_56::UObject *)
		extrn __imp_??0UObject@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::Region::Region(icu_56::Region const &)+4Bp
					; icu_56::FieldPosition::FieldPosition(icu_56::FieldPosition const &)+2Cp ...
		extrn ___security_cookie:near
					; DATA XREF: icu_56::Region::Region(icu_56::Region const &)+2Er
					; icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const	&,signed char)+2Er ...
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??0Region@icu_56@@QAE@ABV01@@Z+19j
					; __ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z+23j ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$??0Region@icu_56@@QAE@ABV01@@Z+Fp
					; icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const	&,signed char)+1A1p ...
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::Region::Region(icu_56::Region const &)+53p
					; icu_56::Region::Region(icu_56::Region	const &)+8Bp ...
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::Region `RTTI	Type Descriptor'o
					; .data:icu_56::UObject	`RTTI Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::UObject::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:00000330o
					; .rdata:000019A0o ...
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString const &)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::Region::operator=(icu_56::Region const &)+74p
					; icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const	&,signed char)+80p ...
; __declspec(dllimport)	public:	class icu_56::UObject &	__thiscall icu_56::UObject::operator=(class icu_56::UObject const &)
		extrn __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::Region::operator=(icu_56::Region const &)+2Cp
					; icu_56::FieldPositionIterator::operator=(icu_56::FieldPositionIterator const &)+2Cp ...
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::Region::`scalar deleting destructor'(uint)+39p
					; icu_56::Region::`vector deleting destructor'(uint)+81p ...
; void __cdecl icu_56::UMemory::operator delete[](void *)
		extrn __imp_??_VUMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::Region::`vector deleting destructor'(uint)+53p
					; icu_56::FieldPosition::`vector deleting destructor'(uint)+53p ...
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near
					; CODE XREF: icu_56::Region::`vector deleting destructor'(uint)+3Dp
					; icu_56::FieldPosition::`vector deleting destructor'(uint)+3Dp ...
; public: signed char __thiscall icu_56::DecimalFormatSymbols::operator==(class	icu_56::DecimalFormatSymbols const &)const
		extrn ??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::DecimalFormatSymbols::operator!=(icu_56::DecimalFormatSymbols const &)+2Ap
; _DWORD __thiscall icu_56::UnicodeString::~UnicodeString(icu_56::UnicodeString	*__hidden this)
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+17Cp
					; __unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0+8p ...
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString &&)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:near
					; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+160p
					; DATA XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+160r
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@H@Z:near
					; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+120p
					; DATA XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+120r
		extrn _u_charDigitValue_56:near
					; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+E0p
; int __thiscall icu_56::UnicodeString::char32At(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near
					; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+CCp
					; DATA XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+CCr
; int __thiscall icu_56::UnicodeString::countChar32(icu_56::UnicodeString *__hidden this, int, int)
		extrn __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:near
					; CODE XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+AFp
					; DATA XREF: icu_56::DecimalFormatSymbols::setSymbol(icu_56::DecimalFormatSymbols::ENumberFormatSymbol,icu_56::UnicodeString const &,signed char)+AFr
; _DWORD __thiscall icu_56::Locale::Locale(icu_56::Locale *__hidden this, const	struct icu_56::Locale *)
		extrn __imp_??0Locale@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::DecimalFormatSymbols::getLocale(void)+3Bp
					; DATA XREF: icu_56::DecimalFormatSymbols::getLocale(void)+3Br
; public: signed char __thiscall icu_56::Formattable::operator==(class icu_56::Formattable const &)const
		extrn ??8Formattable@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::Formattable::operator!=(icu_56::Formattable const &)+2Ap
		extrn __fltused:near
; int __thiscall icu_56::Formattable::getLong(icu_56::Formattable *__hidden this, enum UErrorCode *)
		extrn ?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Formattable::getLong(UErrorCode *)+2Ap
; _DWORD __thiscall icu_56::UObject::UObject(icu_56::UObject *__hidden this)
		extrn __imp_??0UObject@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::FieldPosition::FieldPosition(void)+28p
					; icu_56::FieldPosition::FieldPosition(int)+28p ...
; public: virtual void * __thiscall icu_56::FieldPosition::getDynamicClassID(void)const
		extrn ?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:00000F74o
; _DWORD __thiscall icu_56::FieldPosition::~FieldPosition(icu_56::FieldPosition	*__hidden this)
		extrn ??1FieldPosition@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::FieldPosition::`scalar deleting destructor'(uint)+26p
					; icu_56::FieldPosition::`vector deleting destructor'(uint)+6Ep ...
; public: signed char __thiscall icu_56::FieldPositionIterator::operator==(class icu_56::FieldPositionIterator const &)const
		extrn ??8FieldPositionIterator@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::FieldPositionIterator::operator!=(icu_56::FieldPositionIterator const &)+2Ap
; public: virtual void * __thiscall icu_56::MeasureUnit::getDynamicClassID(void)const
		extrn ?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:0000162Co
; public: virtual class	icu_56::UObject	* __thiscall icu_56::MeasureUnit::clone(void)const
		extrn ?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:near
					; DATA XREF: .rdata:00001630o
; public: virtual signed char __thiscall icu_56::MeasureUnit::operator==(class icu_56::UObject const &)const
		extrn ??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:near
					; DATA XREF: .rdata:00001634o
; _DWORD __thiscall icu_56::MeasureUnit::~MeasureUnit(icu_56::MeasureUnit *__hidden this)
		extrn ??1MeasureUnit@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::MeasureUnit::`scalar deleting destructor'(uint)+26p
					; icu_56::MeasureUnit::`vector deleting	destructor'(uint)+6Ep
					; DATA XREF: ...
		extrn __purecall:near	; DATA XREF: .rdata:000019A4o
					; .rdata:000019A8o ...
; _DWORD __thiscall icu_56::NumberFormatFactory::~NumberFormatFactory(icu_56::NumberFormatFactory *__hidden this)
		extrn ??1NumberFormatFactory@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::NumberFormatFactory::`scalar deleting destructor'(uint)+26p
					; icu_56::NumberFormatFactory::`vector deleting	destructor'(uint)+6Ep ...
; public: virtual signed char __thiscall icu_56::SimpleNumberFormatFactory::visible(void)const
		extrn ?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:near
					; DATA XREF: .rdata:00001CD4o
; public: virtual class	icu_56::UnicodeString const * __thiscall icu_56::SimpleNumberFormatFactory::getSupportedIDs(int	&, enum	 UErrorCode &)const
		extrn ?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00001CD8o
; _DWORD __thiscall icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory(icu_56::SimpleNumberFormatFactory *__hidden this)
		extrn ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::SimpleNumberFormatFactory::`scalar	deleting destructor'(uint)+26p
					; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'(uint)+6Ep
					; DATA XREF: ...
		extrn _ucln_i18n_registerCleanup_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2B72p
		extrn _uhash_nextElement_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2814p
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::fastCopyFrom(icu_56::UnicodeString *__hidden this, const struct icu_56::UnicodeString	*)
		extrn __imp_?fastCopyFrom@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2750p
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+2750r
; int __cdecl strcmp(const char	*Str1, const char *Str2)
		extrn _strcmp:near	; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+233Bp
					; icu_56::Region::loadRegionData(UErrorCode &)+2353p
		extrn _ures_close_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1F34p
					; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer(void)+29p ...
		extrn _ures_getSize_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1CC7p
					; icu_56::Region::loadRegionData(UErrorCode &)+23DCp
		extrn _ures_getType_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1CAFp
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::remove(icu_56::UnicodeString *__hidden this)
		extrn __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1C02p
					; icu_56::Region::getInstance(int,UErrorCode &)+19Ap
					; DATA XREF: ...
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::append(icu_56::UnicodeString *__hidden this, wchar_t)
		extrn __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1AADp
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+1AADr
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1A14p
					; icu_56::Region::loadRegionData(UErrorCode &)+251Ep ...
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::setTo(icu_56::UnicodeString *__hidden	this, const struct icu_56::UnicodeString *)
		extrn __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+168Fp
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+168Fr
		extrn _uhash_get_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1412p
					; icu_56::Region::loadRegionData(UErrorCode &)+1435p ...
; _DWORD __thiscall __high icu_56::UnicodeString::UnicodeString(const char *, int, enum	icu_56::UnicodeString::EInvariant)
		extrn __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1372p
					; icu_56::Region::loadRegionData(UErrorCode &)+2386p ...
		extrn _ures_getKey_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+132Ap
					; icu_56::Region::loadRegionData(UErrorCode &)+2321p
		extrn _ures_getNextResource_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1306p
					; icu_56::Region::loadRegionData(UErrorCode &)+1C9Ap ...
; _DWORD __thiscall icu_56::Formattable::~Formattable(icu_56::Formattable *__hidden this)
		extrn ??1Formattable@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+12C2p
					; icu_56::Region::loadRegionData(UErrorCode &)+17D4p ...
		extrn _uhash_put_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+12B0p
					; icu_56::Region::loadRegionData(UErrorCode &)+1475p ...
		extrn _uhash_iput_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+124Ep
					; icu_56::Region::loadRegionData(UErrorCode &)+17A6p ...
; _DWORD __thiscall icu_56::Formattable::Formattable(icu_56::Formattable *__hidden this)
		extrn ??0Formattable@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+119Bp
					; icu_56::Region::loadRegionData(UErrorCode &)+1709p ...
; int __thiscall __high	icu_56::UnicodeString::extract(int, int, char *, int, enum icu_56::UnicodeString::EInvariant)
		extrn __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1176p
					; icu_56::Region::loadRegionData(UErrorCode &)+16D0p
					; DATA XREF: ...
; int __thiscall icu_56::UnicodeString::length(icu_56::UnicodeString *__hidden this)
		extrn __imp_?length@UnicodeString@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+1156p
					; icu_56::Region::loadRegionData(UErrorCode &)+16B7p ...
; void *__thiscall icu_56::UVector::elementAt(icu_56::UVector *__hidden	this, int)
		extrn __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+10F6p
					; icu_56::Region::loadRegionData(UErrorCode &)+2034p ...
; int __thiscall icu_56::UVector::size(icu_56::UVector *__hidden this)
		extrn __imp_?size@UVector@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F2Ep
					; icu_56::Region::loadRegionData(UErrorCode &)+200Cp ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const struct icu_56::UnicodeString *, int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+CAEp
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+CAEr
; void __thiscall icu_56::UVector::addElement(icu_56::UVector *__hidden	this, void *, enum UErrorCode *)
		extrn __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+828p
					; icu_56::Region::loadRegionData(UErrorCode &)+917p ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const wchar_t *)
		extrn __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+7B5p
					; icu_56::Region::loadRegionData(UErrorCode &)+A6Dp ...
; wchar_t __thiscall icu_56::UnicodeString::charAt(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+73Ep
					; icu_56::Region::loadRegionData(UErrorCode &)+9F6p ...
; int __thiscall icu_56::UnicodeString::extract(icu_56::UnicodeString *__hidden	this, wchar_t *, int, enum UErrorCode *)
		extrn __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+712p
					; icu_56::Region::loadRegionData(UErrorCode &)+9CAp
					; DATA XREF: ...
; int __thiscall icu_56::UnicodeString::indexOf(icu_56::UnicodeString *__hidden	this, const struct icu_56::UnicodeString *)
		extrn __imp_?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+6EAp
					; icu_56::Region::loadRegionData(UErrorCode &)+9A2p
					; DATA XREF: ...
		extrn _ures_hasNext_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+6A5p
					; icu_56::Region::loadRegionData(UErrorCode &)+95Dp ...
		extrn _uhash_setKeyDeleter_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+691p
		extrn _uhash_setValueDeleter_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+67Bp
		extrn _ures_getByKey_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+316p
					; icu_56::Region::loadRegionData(UErrorCode &)+33Fp ...
		extrn _ures_openDirect_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2EDp
					; icu_56::Region::loadRegionData(UErrorCode &)+35Fp
; _DWORD __thiscall icu_56::UVector::UVector(icu_56::UVector *__hidden this, void (__cdecl *)(void *), signed __int8 (__cdecl __high *)(union UElement,	union UElement), enum UErrorCode *)
		extrn __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+16Bp
					; icu_56::Region::loadRegionData(UErrorCode &)+200p ...
; void __cdecl uprv_deleteUObject_56(void *)
		extrn _uprv_deleteUObject_56:near
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+160o
					; icu_56::Region::loadRegionData(UErrorCode &)+1F5o ...
; _DWORD __thiscall icu_56::DecimalFormat::DecimalFormat(icu_56::DecimalFormat *__hidden this, enum UErrorCode *)
		extrn ??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+F0p
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+C3p
					; icu_56::Region::loadRegionData(UErrorCode &)+132p ...
		extrn _uhash_hashLong_56:near
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+7Do
		extrn _uhash_compareLong_56:near
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+78o
		extrn _uhash_open_56:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+5Ap
					; icu_56::Region::loadRegionData(UErrorCode &)+82p ...
		extrn _uhash_hashUnicodeString_56:near
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+55o
					; icu_56::Region::loadRegionData(UErrorCode &)+A2o
; signed __int8	__cdecl	__high uhash_compareUnicodeString_56(union UElement, union UElement)
		extrn _uhash_compareUnicodeString_56:near
					; DATA XREF: icu_56::Region::loadRegionData(UErrorCode &)+50o
					; icu_56::Region::loadRegionData(UErrorCode &)+9Do ...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::Region::loadRegionData(UErrorCode &)+2CFBp
					; icu_56::ures_getNextUnicodeString(UResourceBundle *,char const * *,UErrorCode	*)+82p	...
; public: virtual void * __thiscall icu_56::UVector::`scalar deleting destructor'(unsigned int)
		extrn ??_GUVector@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::UVector::`vector deleting destructor'(unsigned int)
		extrn ??_EUVector@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::UVector::`local vftable'o
; public: virtual void * __thiscall icu_56::UVector::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:000057A4o
; public: virtual void * __thiscall icu_56::UnicodeString::`scalar deleting destructor'(unsigned int)
		extrn ??_GUnicodeString@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::UnicodeString::`vector deleting destructor'(unsigned int)
		extrn ??_EUnicodeString@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::UnicodeString::`local	vftable'o
; public: virtual void * __thiscall icu_56::UnicodeString::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:000056DCo
; public: virtual void __thiscall icu_56::UnicodeString::extractBetween(int, int, class	icu_56::UnicodeString &)const
		extrn ?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near
					; DATA XREF: .rdata:000056E0o
; public: virtual void __thiscall icu_56::UnicodeString::handleReplaceBetween(int, int,	class icu_56::UnicodeString const &)
		extrn ?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near
					; DATA XREF: .rdata:000056E4o
; public: virtual void __thiscall icu_56::UnicodeString::copy(int, int,	int)
		extrn ?copy@UnicodeString@icu_56@@UAEXHHH@Z:near
					; DATA XREF: .rdata:000056E8o
; public: virtual signed char __thiscall icu_56::UnicodeString::hasMetaData(void)const
		extrn ?hasMetaData@UnicodeString@icu_56@@UBECXZ:near
					; DATA XREF: .rdata:000056ECo
; public: virtual class	icu_56::Replaceable * __thiscall icu_56::UnicodeString::clone(void)const
		extrn ?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near
					; DATA XREF: .rdata:000056F0o
; protected: virtual int __thiscall icu_56::UnicodeString::getLength(void)const
		extrn ?getLength@UnicodeString@icu_56@@MBEHXZ:near
					; DATA XREF: .rdata:000056F4o
; protected: virtual wchar_t __thiscall	icu_56::UnicodeString::getCharAt(int)const
		extrn ?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near
					; DATA XREF: .rdata:000056F8o
; protected: virtual int __thiscall icu_56::UnicodeString::getChar32At(int)const
		extrn ?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near
					; DATA XREF: .rdata:000056FCo
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, signed __int8, const wchar_t *, int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near
					; CODE XREF: icu_56::ures_getNextUnicodeString(UResourceBundle *,char const * *,UErrorCode *)+59p
					; icu_56::ures_getUnicodeStringByIndex(UResourceBundle const *,int,UErrorCode *)+59p ...
		extrn _ures_getNextString_56:near
					; CODE XREF: icu_56::ures_getNextUnicodeString(UResourceBundle *,char const * *,UErrorCode *)+3Fp
		extrn _ures_getStringByIndex_56:near
					; CODE XREF: icu_56::ures_getUnicodeStringByIndex(UResourceBundle const	*,int,UErrorCode *)+3Fp
		extrn _ures_getStringByKey_56:near
					; CODE XREF: icu_56::ures_getUnicodeStringByKey(UResourceBundle	const *,char const *,UErrorCode	*)+3Fp
		extrn _uhash_close_56:near
					; CODE XREF: icu_56::LocalUHashtablePointer::~LocalUHashtablePointer(void)+29p
					; icu_56::Region::cleanupRegionData(void)+A8p ...
; _DWORD __thiscall icu_56::UVector::~UVector(icu_56::UVector *__hidden	this)
		extrn __imp_??1UVector@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::UVector::`scalar deleting destructor'(uint)+28p
					; DATA XREF: icu_56::UVector::`scalar deleting destructor'(uint)+28r
; void __thiscall icu_56::UVector::removeAllElements(icu_56::UVector *__hidden this)
		extrn __imp_?removeAllElements@UVector@icu_56@@QAEXXZ:near
					; CODE XREF: icu_56::Region::cleanupRegionData(void)+EFp
					; DATA XREF: icu_56::Region::cleanupRegionData(void)+EFr
; __declspec(dllimport)	public:	signed char __thiscall icu_56::UnicodeString::operator==(class icu_56::UnicodeString const &)const
		extrn __imp_??8UnicodeString@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::Region::operator==(icu_56::Region const &)+32p
					; DATA XREF: icu_56::Region::operator==(icu_56::Region const &)+32r
; __declspec(dllimport)	public:	signed char __thiscall icu_56::UnicodeString::operator!=(class icu_56::UnicodeString const &)const
		extrn __imp_??9UnicodeString@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::Region::operator!=(icu_56::Region const &)+32p
					; DATA XREF: icu_56::Region::operator!=(icu_56::Region const &)+32r
; void __cdecl icu_56::umtx_initImplPostInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ap
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ar
; signed __int8	__cdecl	icu_56::umtx_initImplPreInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fp
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fr
; LONG __stdcall InterlockedCompareExchange(volatile LONG *Destination,	LONG Exchange, LONG Comperand)
		extrn __imp__InterlockedCompareExchange@12:near
					; CODE XREF: icu_56::umtx_loadAcquire(long volatile &)+28p
					; DATA XREF: icu_56::umtx_loadAcquire(long volatile &)+28r
; _DWORD __thiscall icu_56::DecimalFormat::DecimalFormat(icu_56::DecimalFormat *__hidden this, const struct icu_56::UnicodeString *, enum UErrorCode *)
		extrn ??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+ECp
		extrn _uhash_iget_56:near
					; CODE XREF: icu_56::Region::getInstance(int,UErrorCode	&)+7Dp
; signed __int8	__cdecl	__high uhash_compareChars_56(union UElement, union UElement)
		extrn _uhash_compareChars_56:near
					; DATA XREF: icu_56::Region::getContainedRegions(URegionType,UErrorCode	&)+A4o
; signed __int8	__thiscall icu_56::UVector::contains(icu_56::UVector *__hidden this, void *)
		extrn __imp_?contains@UVector@icu_56@@QBECPAX@Z:near
					; CODE XREF: icu_56::Region::contains(icu_56::Region const &)+5Fp
					; DATA XREF: icu_56::Region::contains(icu_56::Region const &)+5Fr
; _DWORD __thiscall icu_56::StringEnumeration::~StringEnumeration(icu_56::StringEnumeration *__hidden this)
		extrn __imp_??1StringEnumeration@icu_56@@UAE@XZ:near
					; CODE XREF: __unwindfunclet$??0RegionNameEnumeration@icu_56@@QAE@PAVUVector@1@AAW4UErrorCode@@@Z$0+5p
					; icu_56::RegionNameEnumeration::~RegionNameEnumeration(void)+AEp ...
; _DWORD __thiscall icu_56::UVector::UVector(icu_56::UVector *__hidden this, void (__cdecl *)(void *), signed __int8 (__cdecl __high *)(union UElement,	union UElement), int, enum UErrorCode *)
		extrn __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+E1p
					; DATA XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+E1r
; _DWORD __thiscall icu_56::StringEnumeration::StringEnumeration(icu_56::StringEnumeration *__hidden this)
		extrn __imp_??0StringEnumeration@icu_56@@IAE@XZ:near
					; CODE XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+47p
					; DATA XREF: icu_56::RegionNameEnumeration::RegionNameEnumeration(icu_56::UVector *,UErrorCode &)+47r
; public: virtual void * __thiscall icu_56::RegionNameEnumeration::`scalar deleting destructor'(unsigned int)
		extrn ??_GRegionNameEnumeration@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::RegionNameEnumeration::`vector deleting destructor'(unsigned int)
		extrn ??_ERegionNameEnumeration@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::RegionNameEnumeration::`vftable'o
; public: virtual class	icu_56::StringEnumeration * __thiscall icu_56::StringEnumeration::clone(void)const
		extrn ?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:near
					; DATA XREF: .rdata:00007D6Co
; public: virtual char const * __thiscall icu_56::StringEnumeration::next(int *, enum  UErrorCode &)
		extrn ?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00007D74o
; public: virtual wchar_t const	* __thiscall icu_56::StringEnumeration::unext(int *, enum  UErrorCode &)
		extrn ?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00007D78o
; public: virtual signed char __thiscall icu_56::StringEnumeration::operator==(class icu_56::StringEnumeration const &)const
		extrn ??8StringEnumeration@icu_56@@UBECABV01@@Z:near
					; DATA XREF: .rdata:00007D84o
; public: virtual signed char __thiscall icu_56::StringEnumeration::operator!=(class icu_56::StringEnumeration const &)const
		extrn ??9StringEnumeration@icu_56@@UBECABV01@@Z:near
					; DATA XREF: .rdata:00007D88o
; int __cdecl atexit(void (__cdecl *)())
		extrn _atexit:near	; CODE XREF: icu_56::`dynamic initializer for 'RANGE_MARKER_STRING''(void)+3Cp


		end

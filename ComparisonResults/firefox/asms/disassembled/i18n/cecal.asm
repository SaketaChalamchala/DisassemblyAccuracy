;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	BDD11907C1EDDCA6A5F8FE077D09D250
; Input	CRC32 :	22BDBC22

; File Name   :	D:\compspace\objfiles\firefox\i18n\cecal.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset dword_100
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	dword_200
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FC+4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_7FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_FFE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd 2000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	dword_1C0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_DFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0F8h
_LIMITS		dd 0			; DATA XREF: icu_56::CECalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)+2Cr
		align 10h
dword_100	dd 4 dup(1), 2 dup(4C4B40h), 2 dup(0)
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
		dd 2 dup(0Ch), 2 dup(1), 34h, 35h, 4 dup(0FFFFFFFFh), 2	dup(1)
		dd 5, 1Eh, 2 dup(1), 16Dh, 16Eh, 6 dup(0FFFFFFFFh), 1
		dd 5, 0Eh dup(0FFFFFFFFh)
dword_1C0	dd 10h dup(0FFFFFFFFh)	; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
dword_200	dd 2 dup(0FFFFFFFFh), 2	dup(0FFB3B4C0h), 2 dup(4C4B40h)
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco
		dd 4 dup(0FFFFFFFFh), 2	dup(0FFB3B4C0h), 2 dup(4C4B40h)
		dd 0Ch dup(0FFFFFFFFh)
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 268h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 2A0h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 2A4h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::TimeZone::operator!=(class icu_56::TimeZone const &)const
		public ??9TimeZone@icu_56@@QBECABV01@@Z
??9TimeZone@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9TimeZone@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 338h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::TimeZone::getID(icu_56::TimeZone *this, struct icu_56::UnicodeString	*)
		public ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		add	eax, 4
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+arg_0]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 390h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::TimeZone::setID(icu_56::TimeZone *this, const	struct icu_56::UnicodeString *)
		public ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 4
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Calendar::getTime(icu_56::Calendar *this, enum UErrorCode *)
		public ?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'

loc_3FC:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_8] ; this
		call	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTimeInMillis(UErrorCode	&)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 42Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Calendar::setTime(icu_56::Calendar *this, double, enum UErrorCode *)
		public ?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z proc near

var_E4		= qword	ptr -0E4h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0E4h+var_E4] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis(double,UErrorCode	&)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 47Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Calendar::operator!=(class icu_56::Calendar const &)const
		public ??9Calendar@icu_56@@QBECABV01@@Z
??9Calendar@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9Calendar@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	icu_56::Calendar::EDateFields)const
		public ?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+eax*4+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 510h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	UCalendarDateFields, int)const
		public ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z proc near

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+eax*4+7Ch], 0
		jle	short loc_552
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+edx*4+8]
		mov	[ebp+var_D0], ecx
		jmp	short loc_55B
; ---------------------------------------------------------------------------

loc_552:				; CODE XREF: icu_56::Calendar::internalGet(UCalendarDateFields,int)+2Ej
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_D0], edx

loc_55B:				; CODE XREF: icu_56::Calendar::internalGet(UCalendarDateFields,int)+40j
		mov	eax, [ebp+var_D0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 56Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	UCalendarDateFields)const
		public ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z proc near
					; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+93p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+eax*4+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Calendar::internalGetTime(icu_56::Calendar *__hidden this)
		public ?internalGetTime@Calendar@icu_56@@IBENXZ
?internalGetTime@Calendar@icu_56@@IBENXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+0E0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?internalGetTime@Calendar@icu_56@@IBENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Calendar::internalSetTime(icu_56::Calendar *this, double)
		public ?internalSetTime@Calendar@icu_56@@IAEXN@Z
?internalSetTime@Calendar@icu_56@@IAEXN@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax+0E0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalSetTime@Calendar@icu_56@@IAEXN@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 610h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianYear(icu_56::Calendar *__hidden this)
		public ?getGregorianYear@Calendar@icu_56@@IBEHXZ
?getGregorianYear@Calendar@icu_56@@IBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+110h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianYear@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 644h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianMonth(icu_56::Calendar *__hidden	this)
		public ?getGregorianMonth@Calendar@icu_56@@IBEHXZ
?getGregorianMonth@Calendar@icu_56@@IBEHXZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+114h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianMonth@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 678h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianDayOfYear(icu_56::Calendar *__hidden this)
		public ?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+118h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6ACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianDayOfMonth(icu_56::Calendar *__hidden this)
		public ?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+11Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::Calendar *__cdecl icu_56::Calendar::createInstance(struct icu_56::TimeZone *, enum UErrorCode *)
		public ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	esi, esp
		call	dword ptr ds:__imp_?getDefault@Locale@icu_56@@SAABV12@XZ ; icu_56::Locale::getDefault(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::Locale	*
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::TimeZone *
		call	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z ;	icu_56::Calendar::createInstance(icu_56::TimeZone *,icu_56::Locale const &,UErrorCode &)
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 734h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::Calendar::roll(enum  UCalendarDateFields, signed char, enum  UErrorCode &)
		public ?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Calendar::roll(icu_56::Calendar::EDateFields,signed char,UErrorCode &)+33p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		movsx	ecx, [ebp+arg_4]
		neg	ecx
		sbb	ecx, ecx
		and	ecx, 2
		add	ecx, 0FFFFFFFFh
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+1Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 79Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::Calendar::roll(enum  icu_56::Calendar::EDateFields, signed char, enum	 UErrorCode &)
		public ?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		push	eax
		movzx	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	ecx, [ebp+var_8]
		call	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ;	icu_56::Calendar::roll(UCalendarDateFields,signed char,UErrorCode &)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: void __thiscall icu_56::Calendar::internalSet(enum	 UCalendarDateFields, int)
		public ?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]

loc_7FF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_4]
		mov	[ecx+eax*4+8], edx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	dword ptr [ecx+eax*4+7Ch], 1
		mov	eax, [ebp+var_8]
		add	eax, [ebp+arg_0]
		mov	byte ptr [eax+64h], 1
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 840h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::weekNumber(icu_56::Calendar *this, int, int)
		public ?weekNumber@Calendar@icu_56@@IAEHHH@Z
?weekNumber@Calendar@icu_56@@IAEHHH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		mov	ecx, [ebp+var_8] ; this
		call	?weekNumber@Calendar@icu_56@@IAEHHHH@Z ; icu_56::Calendar::weekNumber(int,int,int)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?weekNumber@Calendar@icu_56@@IAEHHH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 890h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: virtual void * __thiscall icu_56::CECalendar::`scalar deleting destructor'(unsigned int)
		public ??_GCECalendar@icu_56@@MAEPAXI@Z
??_GCECalendar@icu_56@@MAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CECalendar@icu_56@@MAE@XZ ; icu_56::CECalendar::~CECalendar(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_8D9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_8D9:				; CODE XREF: icu_56::CECalendar::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCECalendar@icu_56@@MAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: virtual void * __thiscall icu_56::CECalendar::`vector deleting destructor'(unsigned int)
		public ??_ECECalendar@icu_56@@MAEPAXI@Z
??_ECECalendar@icu_56@@MAEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::CECalendar::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_962
		push	offset ??1CECalendar@icu_56@@MAE@XZ ; icu_56::CECalendar::~CECalendar(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	260h
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_95A
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_95A:				; CODE XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+4Bj
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_98B
; ---------------------------------------------------------------------------

loc_962:				; CODE XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1CECalendar@icu_56@@MAE@XZ ; icu_56::CECalendar::~CECalendar(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_988
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_988:				; CODE XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+7Cj
		mov	eax, [ebp+var_8]

loc_98B:				; CODE XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+6Cj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_ECECalendar@icu_56@@MAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CECalendar::CECalendar(icu_56::CECalendar *this, const struct icu_56::Locale *, enum UErrorCode *)
		public ??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z
??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z proc near

var_100		= qword	ptr -100h
var_F4		= qword	ptr -0F4h
var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::Locale	*
		call	?createDefault@TimeZone@icu_56@@SAPAV12@XZ ; icu_56::TimeZone::createDefault(void)
		push	eax		; struct icu_56::TimeZone *
		mov	ecx, [ebp+var_14] ; this
		call	??0Calendar@icu_56@@IAE@PAVTimeZone@1@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::Calendar::Calendar(icu_56::TimeZone *,icu_56::Locale const &,UErrorCode &)
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7CECalendar@icu_56@@6B@ ; const icu_56::CECalendar::`vftable'
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		call	?getNow@Calendar@icu_56@@SANXZ ; icu_56::Calendar::getNow(void)
		sub	esp, 8
		fstp	[esp+0F4h+var_F4] ; double
		mov	ecx, [ebp+var_14] ; this
		call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis(double,UErrorCode	&)
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0A50h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z$0 proc	near
					; DATA XREF: .xdata$x:00000B48o
		mov	ecx, [ebp-14h]	; this
		jmp	??1Calendar@icu_56@@UAE@XZ ; icu_56::Calendar::~Calendar(void)
__unwindfunclet$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0A78h
		dd offset ??_R4CECalendar@icu_56@@6B@ ;	const icu_56::CECalendar::`RTTI	Complete Object	Locator'
;
; Exported entry
;
		public ??_7CECalendar@icu_56@@6B@
; const	icu_56::CECalendar::`vftable'
??_7CECalendar@icu_56@@6B@ dd offset ??_ECECalendar@icu_56@@MAEPAXI@Z
					; DATA XREF: icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)+62o
					; icu_56::CECalendar::CECalendar(icu_56::CECalendar const &)+32o ...
					; icu_56::CECalendar::`vector deleting destructor'(uint)
		dd offset __purecall
		dd offset __purecall
		dd offset ??8Calendar@icu_56@@UBECABV01@@Z ; icu_56::Calendar::operator==(icu_56::Calendar const &)
		dd offset ?isEquivalentTo@Calendar@icu_56@@UBECABV12@@Z	; icu_56::Calendar::isEquivalentTo(icu_56::Calendar const &)
		dd offset ?add@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z ; icu_56::Calendar::add(UCalendarDateFields,int,UErrorCode &)
		dd offset ?add@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z ; icu_56::Calendar::add(icu_56::Calendar::EDateFields,int,UErrorCode &)
		dd offset ?roll@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z	; icu_56::Calendar::roll(UCalendarDateFields,int,UErrorCode &)
		dd offset ?roll@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z ; icu_56::Calendar::roll(icu_56::Calendar::EDateFields,int,UErrorCode	&)
		dd offset ?fieldDifference@Calendar@icu_56@@UAEHNW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::fieldDifference(double,UCalendarDateFields,UErrorCode &)
		dd offset ?fieldDifference@Calendar@icu_56@@UAEHNW4EDateFields@12@AAW4UErrorCode@@@Z ; icu_56::Calendar::fieldDifference(double,icu_56::Calendar::EDateFields,UErrorCode &)
		dd offset ?inDaylightTime@CECalendar@icu_56@@MBECAAW4UErrorCode@@@Z ; icu_56::CECalendar::inDaylightTime(UErrorCode &)
		dd offset ?getMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getMinimum(UCalendarDateFields)
		dd offset ?getMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getMinimum(icu_56::Calendar::EDateFields)
		dd offset ?getMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getMaximum(UCalendarDateFields)
		dd offset ?getMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getMaximum(icu_56::Calendar::EDateFields)
		dd offset ?getGreatestMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getGreatestMinimum(UCalendarDateFields)
		dd offset ?getGreatestMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getGreatestMinimum(icu_56::Calendar::EDateFields)
		dd offset ?getLeastMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getLeastMaximum(UCalendarDateFields)
		dd offset ?getLeastMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getLeastMaximum(icu_56::Calendar::EDateFields)
		dd offset ?getActualMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getActualMinimum(UCalendarDateFields,UErrorCode &)
		dd offset ?getActualMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getActualMaximum(UCalendarDateFields,UErrorCode &)
		dd offset __purecall
		dd offset ?getDayOfWeekType@Calendar@icu_56@@UBE?AW4UCalendarWeekdayType@@W4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getDayOfWeekType(UCalendarDaysOfWeek,UErrorCode	&)
		dd offset ?getWeekendTransition@Calendar@icu_56@@UBEHW4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getWeekendTransition(UCalendarDaysOfWeek,UErrorCode &)
		dd offset ?isWeekend@Calendar@icu_56@@UBECXZ ; icu_56::Calendar::isWeekend(void)
		dd offset ?isWeekend@Calendar@icu_56@@UBECNAAW4UErrorCode@@@Z ;	icu_56::Calendar::isWeekend(double,UErrorCode &)
		dd offset ?computeTime@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z ; icu_56::Calendar::computeTime(UErrorCode &)
		dd offset ?computeFields@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z ; icu_56::Calendar::computeFields(UErrorCode &)
		dd offset ?prepareGetActual@Calendar@icu_56@@MAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::prepareGetActual(UCalendarDateFields,signed char,UErrorCode &)
		dd offset ?handleGetLimit@CECalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z ; icu_56::CECalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)
		dd offset ?getLimit@Calendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@12@@Z ; icu_56::Calendar::getLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)
		dd offset ?handleComputeMonthStart@CECalendar@icu_56@@MBEHHHC@Z	; icu_56::CECalendar::handleComputeMonthStart(int,int,signed char)
		dd offset ?handleGetMonthLength@Calendar@icu_56@@MBEHHH@Z ; icu_56::Calendar::handleGetMonthLength(int,int)
		dd offset ?handleGetYearLength@Calendar@icu_56@@MBEHH@Z	; icu_56::Calendar::handleGetYearLength(int)
		dd offset __purecall
		dd offset ?handleComputeJulianDay@Calendar@icu_56@@MAEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::handleComputeJulianDay(UCalendarDateFields)
		dd offset ?handleGetExtendedYearFromWeekFields@Calendar@icu_56@@MAEHHH@Z ; icu_56::Calendar::handleGetExtendedYearFromWeekFields(int,int)
		dd offset ?validateField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z	; icu_56::Calendar::validateField(UCalendarDateFields,UErrorCode &)
		dd offset ?getFieldResolutionTable@Calendar@icu_56@@MBEPAY1M@7$$CBHXZ ;	icu_56::Calendar::getFieldResolutionTable(void)
		dd offset ?handleComputeFields@Calendar@icu_56@@MAEXHAAW4UErrorCode@@@Z	; icu_56::Calendar::handleComputeFields(int,UErrorCode &)
		dd offset ?getDefaultMonthInYear@Calendar@icu_56@@MAEHH@Z ; icu_56::Calendar::getDefaultMonthInYear(int)
		dd offset ?getDefaultDayInMonth@Calendar@icu_56@@MAEHHH@Z ; icu_56::Calendar::getDefaultDayInMonth(int,int)
		dd offset ?pinField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::pinField(UCalendarDateFields,UErrorCode &)
		dd offset ?haveDefaultCentury@CECalendar@icu_56@@MBECXZ	; icu_56::CECalendar::haveDefaultCentury(void)
		dd offset __purecall
		dd offset __purecall
		dd offset ?getRelatedYear@Calendar@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::Calendar::getRelatedYear(UErrorCode	&)
		dd offset ?setRelatedYear@Calendar@icu_56@@UAEXH@Z ; icu_56::Calendar::setRelatedYear(int)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0B44h
__unwindtable$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000B54o
		dd offset __unwindfunclet$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0B70h
		public ??_R4CECalendar@icu_56@@6B@
; const	icu_56::CECalendar::`RTTI Complete Object Locator'
??_R4CECalendar@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:00000A78o
		dd offset ??_R0?AVCECalendar@icu_56@@@8	; icu_56::CECalendar `RTTI Type	Descriptor'
		dd offset ??_R3CECalendar@icu_56@@8 ; icu_56::CECalendar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0B84h
		public ??_R0?AVCECalendar@icu_56@@@8
; class	icu_56::CECalendar `RTTI Type Descriptor'
??_R0?AVCECalendar@icu_56@@@8 dd offset	??_7type_info@@6B@ ; DATA XREF:	.rdata$r:00000B7Co
					; .rdata$r:icu_56::CECalendar::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcecalendar	db '.?AVCECalendar@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BA4h
		public ??_R3CECalendar@icu_56@@8
; icu_56::CECalendar::`RTTI Class Hierarchy Descriptor'
??_R3CECalendar@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000B80o
					; .rdata$r:00000BE0o
		dd 4
		dd offset ??_R2CECalendar@icu_56@@8 ; icu_56::CECalendar::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BB4h
		public ??_R2CECalendar@icu_56@@8
; icu_56::CECalendar::`RTTI Base Class Array'
??_R2CECalendar@icu_56@@8 dd offset ??_R1A@?0A@EA@CECalendar@icu_56@@8
					; DATA XREF: .rdata$r:00000BB0o
					; icu_56::CECalendar::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BC8h
		public ??_R1A@?0A@EA@CECalendar@icu_56@@8
; icu_56::CECalendar::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@CECalendar@icu_56@@8 dd offset ??_R0?AVCECalendar@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CECalendar::`RTTI	Base Class Array'o
					; icu_56::CECalendar `RTTI Type	Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CECalendar@icu_56@@8 ; icu_56::CECalendar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BE4h
		public ??_R1A@?0A@EA@Calendar@icu_56@@8
; icu_56::Calendar::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@Calendar@icu_56@@8 dd offset ??_R0?AVCalendar@icu_56@@@8
					; DATA XREF: .rdata$r:00000BB8o
					; .rdata$r:icu_56::Calendar::`RTTI Base	Class Array'o
					; icu_56::Calendar `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0C00h
		public ??_R0?AVCalendar@icu_56@@@8
; class	icu_56::Calendar `RTTI Type Descriptor'
??_R0?AVCalendar@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::Calendar::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcalendar@i	db '.?AVCalendar@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C20h
		public ??_R3Calendar@icu_56@@8
; icu_56::Calendar::`RTTI Class	Hierarchy Descriptor'
??_R3Calendar@icu_56@@8	dd 2 dup(0)	; DATA XREF: .rdata$r:00000BFCo
		dd 3
		dd offset ??_R2Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C30h
		public ??_R2Calendar@icu_56@@8
; icu_56::Calendar::`RTTI Base Class Array'
??_R2Calendar@icu_56@@8	dd offset ??_R1A@?0A@EA@Calendar@icu_56@@8
					; DATA XREF: .rdata$r:00000C2Co
					; icu_56::Calendar::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C40h
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:00000BBCo
					; .rdata$r:00000C34o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0C5Ch
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C7Ch
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000C58o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C8Ch
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00000C88o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C98h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00000BC0o
					; .rdata$r:00000C38o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		align 10h
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0CB4h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0CD4h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000CB0o
					; .rdata$r:00000D04o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0CE4h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:00000CE0o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0CECh
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D08h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CECalendar::CECalendar(icu_56::CECalendar *this, const struct icu_56::CECalendar *)
		public ??0CECalendar@icu_56@@IAE@ABV01@@Z
??0CECalendar@icu_56@@IAE@ABV01@@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::Calendar *
		mov	ecx, [ebp+var_8] ; this
		call	??0Calendar@icu_56@@IAE@ABV01@@Z ; icu_56::Calendar::Calendar(icu_56::Calendar const &)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CECalendar@icu_56@@6B@ ; const icu_56::CECalendar::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0CECalendar@icu_56@@IAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D5Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CECalendar::~CECalendar(icu_56::CECalendar *__hidden this)
		public ??1CECalendar@icu_56@@MAE@XZ
??1CECalendar@icu_56@@MAE@XZ proc near	; CODE XREF: icu_56::CECalendar::`scalar deleting destructor'(uint)+26p
					; icu_56::CECalendar::`vector deleting destructor'(uint)+71p
					; DATA XREF: ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CECalendar@icu_56@@6B@ ; const icu_56::CECalendar::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1Calendar@icu_56@@UAE@XZ ; icu_56::Calendar::~Calendar(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1CECalendar@icu_56@@MAE@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DA4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: class icu_56::CECalendar &	__thiscall icu_56::CECalendar::operator=(class icu_56::CECalendar const	&)
		public ??4CECalendar@icu_56@@IAEAAV01@ABV01@@Z
??4CECalendar@icu_56@@IAEAAV01@ABV01@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??4Calendar@icu_56@@IAEAAV01@ABV01@@Z ;	icu_56::Calendar::operator=(icu_56::Calendar const &)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??4CECalendar@icu_56@@IAEAAV01@ABV01@@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::CECalendar::handleComputeMonthStart(icu_56::CECalendar	*this, int, int, signed	__int8)
		public ?handleComputeMonthStart@CECalendar@icu_56@@MBEHHHC@Z
?handleComputeMonthStart@CECalendar@icu_56@@MBEHHHC@Z proc near
					; DATA XREF: .rdata:00000AFCo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]

loc_DFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+0C4h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; int
		push	0		; int
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		call	?ceToJD@CECalendar@icu_56@@KAHHHHH@Z ; icu_56::CECalendar::ceToJD(int,int,int,int)
		add	esp, 10h
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?handleComputeMonthStart@CECalendar@icu_56@@MBEHHHC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: virtual int __thiscall icu_56::CECalendar::handleGetLimit(enum  UCalendarDateFields, enum	icu_56::Calendar::ELimitType)const
		public ?handleGetLimit@CECalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z
?handleGetLimit@CECalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z proc near
					; DATA XREF: .rdata:00000AF4o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		shl	eax, 4
		mov	ecx, [ebp+arg_4]
		mov	eax, ds:_LIMITS[eax+ecx*4]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?handleGetLimit@CECalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::CECalendar::inDaylightTime(icu_56::CECalendar *this,	enum UErrorCode	*)
		public ?inDaylightTime@CECalendar@icu_56@@MBECAAW4UErrorCode@@@Z
?inDaylightTime@CECalendar@icu_56@@MBECAAW4UErrorCode@@@Z proc near
					; DATA XREF: .rdata:00000AA8o

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jnz	short loc_EF9
		mov	ecx, [ebp+var_8] ; this
		call	?getTimeZone@Calendar@icu_56@@QBEABVTimeZone@2@XZ ; icu_56::Calendar::getTimeZone(void)
		mov	[ebp+var_D0], eax
		mov	eax, [ebp+var_D0]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_D0]
		mov	eax, [edx+20h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_EFD

loc_EF9:				; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+36j
		xor	al, al
		jmp	short loc_F46
; ---------------------------------------------------------------------------

loc_EFD:				; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+67j
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_8] ; this
		call	?complete@Calendar@icu_56@@IAEXAAW4UErrorCode@@@Z ; icu_56::Calendar::complete(UErrorCode &)
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_F36
		push	10h
		mov	ecx, [ebp+var_8]
		call	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::internalGet(UCalendarDateFields)
		neg	eax
		sbb	eax, eax
		neg	eax
		mov	[ebp+var_D0], eax
		jmp	short loc_F40
; ---------------------------------------------------------------------------

loc_F36:				; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+8Cj
		mov	[ebp+var_D0], 0

loc_F40:				; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+A4j
		mov	al, byte ptr [ebp+var_D0]

loc_F46:				; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+6Bj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?inDaylightTime@CECalendar@icu_56@@MBECAAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0F5Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+7Fp

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0F88h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+29p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FB4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::CECalendar::haveDefaultCentury(icu_56::CECalendar *__hidden this)
		public ?haveDefaultCentury@CECalendar@icu_56@@MBECXZ
?haveDefaultCentury@CECalendar@icu_56@@MBECXZ proc near	; DATA XREF: .rdata:00000B2Co

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	al, 1
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?haveDefaultCentury@CECalendar@icu_56@@MBECXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FE0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::CECalendar::ceToJD(int, int, int,	int)
		public ?ceToJD@CECalendar@icu_56@@KAHHHHH@Z
?ceToJD@CECalendar@icu_56@@KAHHHHH@Z proc near
					; CODE XREF: icu_56::CECalendar::handleComputeMonthStart(int,int,signed	char)+47p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd

loc_FFE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		cmp	[ebp+arg_4], 0
		jl	short loc_1025
		mov	eax, [ebp+arg_4]
		cdq
		mov	ecx, 0Dh
		idiv	ecx
		add	eax, [ebp+arg_0]
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+arg_4]
		cdq
		mov	ecx, 0Dh
		idiv	ecx
		mov	[ebp+arg_4], edx
		jmp	short loc_1054
; ---------------------------------------------------------------------------

loc_1025:				; CODE XREF: icu_56::CECalendar::ceToJD(int,int,int,int)+22j
		mov	eax, [ebp+arg_4]
		add	eax, 1
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_4]
		cdq
		mov	ecx, 0Dh
		idiv	ecx
		mov	edx, [ebp+arg_0]
		lea	eax, [edx+eax-1]
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+arg_4]
		cdq
		mov	ecx, 0Dh
		idiv	ecx
		add	edx, 0Ch
		mov	[ebp+arg_4], edx

loc_1054:				; CODE XREF: icu_56::CECalendar::ceToJD(int,int,int,int)+43j
		mov	esi, [ebp+arg_0]
		imul	esi, 16Dh
		add	esi, [ebp+arg_C]
		push	4		; int
		mov	eax, [ebp+arg_0]
		push	eax		; int
		call	?floorDivide@ClockMath@icu_56@@SAHHH@Z ; icu_56::ClockMath::floorDivide(int,int)
		add	esp, 8
		add	esi, eax
		mov	ecx, [ebp+arg_4]
		imul	ecx, 1Eh
		add	esi, [ebp+arg_8]
		lea	eax, [ecx+esi-1]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?ceToJD@CECalendar@icu_56@@KAHHHHH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1094h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::CECalendar::jdToCE(int, int, int	*, int *, int *)
		public ?jdToCE@CECalendar@icu_56@@KAXHHAAH00@Z
?jdToCE@CECalendar@icu_56@@KAXHHAAH00@Z	proc near

var_104		= qword	ptr -104h
var_E8		= dword	ptr -0E8h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E8]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		lea	eax, [ebp+var_14]
		push	eax		; int *
		push	5B5h		; int
		mov	ecx, [ebp+arg_0]
		sub	ecx, [ebp+arg_4]
		mov	[ebp+var_E8], ecx
		fild	[ebp+var_E8]
		sub	esp, 8
		fstp	[esp+104h+var_104] ; double
		call	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ; icu_56::ClockMath::floorDivide(double,int,int &)
		add	esp, 10h
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_14]
		cdq
		mov	ecx, 16Dh
		idiv	ecx
		mov	ecx, eax
		mov	eax, [ebp+var_14]
		cdq
		mov	esi, 5B4h
		idiv	esi
		sub	ecx, eax
		mov	edx, [ebp+var_8]
		lea	eax, [ecx+edx*4]
		mov	ecx, [ebp+arg_8]
		mov	[ecx], eax
		cmp	[ebp+var_14], 5B4h
		jnz	short loc_1118
		mov	[ebp+var_E8], 16Dh
		jmp	short loc_1129
; ---------------------------------------------------------------------------

loc_1118:				; CODE XREF: icu_56::CECalendar::jdToCE(int,int,int &,int &,int	&)+76j
		mov	eax, [ebp+var_14]
		cdq
		mov	ecx, 16Dh
		idiv	ecx
		mov	[ebp+var_E8], edx

loc_1129:				; CODE XREF: icu_56::CECalendar::jdToCE(int,int,int &,int &,int	&)+82j
		mov	edx, [ebp+var_E8]
		mov	[ebp+var_20], edx
		mov	eax, [ebp+var_20]
		cdq
		mov	ecx, 1Eh
		idiv	ecx
		mov	edx, [ebp+arg_C]
		mov	[edx], eax
		mov	eax, [ebp+var_20]
		cdq
		mov	ecx, 1Eh
		idiv	ecx
		add	edx, 1
		mov	eax, [ebp+arg_10]
		mov	[eax], edx
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?jdToCE@CECalendar@icu_56@@KAXHHAAH00@Z	endp

; ---------------------------------------------------------------------------
		align 4
$LN7		dd 1			; DATA XREF: icu_56::CECalendar::jdToCE(int,int,int &,int &,int	&)+C5o
		dd offset $LN6
$LN6		dd 0FFFFFFECh, 4	; DATA XREF: .text:00001180o
		dd offset $LN5
$LN5		db 72h,	34h, 0		; DATA XREF: .text:0000118Co
_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::TimeZone::operator!=(icu_56::TimeZone const &)+38p
					; icu_56::TimeZone::operator!=(icu_56::TimeZone	const &)+50p ...
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString const &)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::TimeZone::getID(icu_56::UnicodeString &)+2Fp
					; icu_56::TimeZone::setID(icu_56::UnicodeString	const &)+2Fp
					; DATA XREF: ...
; double __thiscall icu_56::Calendar::getTimeInMillis(icu_56::Calendar *__hidden this, enum UErrorCode *)
		extrn ?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::getTime(UErrorCode &)+2Ap
		extrn __fltused:near
; void __thiscall icu_56::Calendar::setTimeInMillis(icu_56::Calendar *__hidden this, double, enum UErrorCode *)
		extrn ?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::setTime(double,UErrorCode &)+33p
					; icu_56::CECalendar::CECalendar(icu_56::Locale	const &,UErrorCode &)+7Ap
; struct icu_56::Calendar *__cdecl static icu_56::Calendar::createInstance(struct icu_56::TimeZone *, const struct icu_56::Locale *, enum UErrorCode *)
		extrn ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+36p
; const	struct icu_56::Locale *__cdecl static icu_56::Locale::getDefault()
		extrn __imp_?getDefault@Locale@icu_56@@SAABV12@XZ:near
					; CODE XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+24p
					; DATA XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+24r
; int __thiscall icu_56::Calendar::weekNumber(icu_56::Calendar *__hidden this, int, int, int)
		extrn ?weekNumber@Calendar@icu_56@@IAEHHHH@Z:near
					; CODE XREF: icu_56::Calendar::weekNumber(int,int)+32p
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::CECalendar::`scalar deleting destructor'(uint)+39p
					; icu_56::CECalendar::`vector deleting destructor'(uint)+84p
					; DATA XREF: ...
; void __cdecl icu_56::UMemory::operator delete[](void *)
		extrn __imp_??_VUMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+56p
					; DATA XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+56r
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near
					; CODE XREF: icu_56::CECalendar::`vector deleting destructor'(uint)+40p
; _DWORD __thiscall icu_56::Calendar::~Calendar(icu_56::Calendar *__hidden this)
		extrn ??1Calendar@icu_56@@UAE@XZ:near
					; CODE XREF: __unwindfunclet$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z$0+3j
					; icu_56::CECalendar::~CECalendar(void)+2Fp
; double __cdecl static	icu_56::Calendar::getNow()
		extrn ?getNow@Calendar@icu_56@@SANXZ:near
					; CODE XREF: icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)+6Cp
; _DWORD __thiscall icu_56::Calendar::Calendar(icu_56::Calendar	*__hidden this,	struct icu_56::TimeZone	*, const struct	icu_56::Locale *, enum UErrorCode *)
		extrn ??0Calendar@icu_56@@IAE@PAVTimeZone@1@ABVLocale@1@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)+53p
; struct icu_56::TimeZone *__cdecl static icu_56::TimeZone::createDefault()
		extrn ?createDefault@TimeZone@icu_56@@SAPAV12@XZ:near
					; CODE XREF: icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)+4Ap
		extrn ___security_cookie:near
					; DATA XREF: icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)+2Er
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z+19j
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z+Fp
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::CECalendar `RTTI Type Descriptor'o
					; .data:icu_56::Calendar `RTTI Type Descriptor'o ...
		extrn __purecall:near	; DATA XREF: .rdata:00000A80o
					; .rdata:00000A84o ...
; public: virtual signed char __thiscall icu_56::Calendar::operator==(class icu_56::Calendar const &)const
		extrn ??8Calendar@icu_56@@UBECABV01@@Z:near ; DATA XREF: .rdata:00000A88o
; public: virtual signed char __thiscall icu_56::Calendar::isEquivalentTo(class	icu_56::Calendar const &)const
		extrn ?isEquivalentTo@Calendar@icu_56@@UBECABV12@@Z:near
					; DATA XREF: .rdata:00000A8Co
; public: virtual void __thiscall icu_56::Calendar::add(enum  UCalendarDateFields, int,	enum  UErrorCode &)
		extrn ?add@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000A90o
; public: virtual void __thiscall icu_56::Calendar::add(enum  icu_56::Calendar::EDateFields, int, enum	UErrorCode &)
		extrn ?add@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000A94o
; public: virtual void __thiscall icu_56::Calendar::roll(enum  UCalendarDateFields, int, enum  UErrorCode &)
		extrn ?roll@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000A98o
; public: virtual void __thiscall icu_56::Calendar::roll(enum  icu_56::Calendar::EDateFields, int, enum	 UErrorCode &)
		extrn ?roll@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000A9Co
; public: virtual int __thiscall icu_56::Calendar::fieldDifference(double, enum	 UCalendarDateFields, enum  UErrorCode &)
		extrn ?fieldDifference@Calendar@icu_56@@UAEHNW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AA0o
; public: virtual int __thiscall icu_56::Calendar::fieldDifference(double, enum	 icu_56::Calendar::EDateFields,	enum  UErrorCode &)
		extrn ?fieldDifference@Calendar@icu_56@@UAEHNW4EDateFields@12@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AA4o
; public: virtual int __thiscall icu_56::Calendar::getMinimum(enum  UCalendarDateFields)const
		extrn ?getMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000AACo
; public: virtual int __thiscall icu_56::Calendar::getMinimum(enum  icu_56::Calendar::EDateFields)const
		extrn ?getMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:00000AB0o
; public: virtual int __thiscall icu_56::Calendar::getMaximum(enum  UCalendarDateFields)const
		extrn ?getMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000AB4o
; public: virtual int __thiscall icu_56::Calendar::getMaximum(enum  icu_56::Calendar::EDateFields)const
		extrn ?getMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:00000AB8o
; public: virtual int __thiscall icu_56::Calendar::getGreatestMinimum(enum  UCalendarDateFields)const
		extrn ?getGreatestMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000ABCo
; public: virtual int __thiscall icu_56::Calendar::getGreatestMinimum(enum  icu_56::Calendar::EDateFields)const
		extrn ?getGreatestMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:00000AC0o
; public: virtual int __thiscall icu_56::Calendar::getLeastMaximum(enum	 UCalendarDateFields)const
		extrn ?getLeastMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000AC4o
; public: virtual int __thiscall icu_56::Calendar::getLeastMaximum(enum	 icu_56::Calendar::EDateFields)const
		extrn ?getLeastMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:00000AC8o
; public: virtual int __thiscall icu_56::Calendar::getActualMinimum(enum  UCalendarDateFields, enum  UErrorCode	&)const
		extrn ?getActualMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000ACCo
; public: virtual int __thiscall icu_56::Calendar::getActualMaximum(enum  UCalendarDateFields, enum  UErrorCode	&)const
		extrn ?getActualMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AD0o
; public: virtual enum	UCalendarWeekdayType __thiscall	icu_56::Calendar::getDayOfWeekType(enum	 UCalendarDaysOfWeek, enum  UErrorCode &)const
		extrn ?getDayOfWeekType@Calendar@icu_56@@UBE?AW4UCalendarWeekdayType@@W4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AD8o
; public: virtual int __thiscall icu_56::Calendar::getWeekendTransition(enum  UCalendarDaysOfWeek, enum	 UErrorCode &)const
		extrn ?getWeekendTransition@Calendar@icu_56@@UBEHW4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000ADCo
; public: virtual signed char __thiscall icu_56::Calendar::isWeekend(void)const
		extrn ?isWeekend@Calendar@icu_56@@UBECXZ:near ;	DATA XREF: .rdata:00000AE0o
; public: virtual signed char __thiscall icu_56::Calendar::isWeekend(double, enum  UErrorCode &)const
		extrn ?isWeekend@Calendar@icu_56@@UBECNAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AE4o
; protected: virtual void __thiscall icu_56::Calendar::computeTime(enum	 UErrorCode &)
		extrn ?computeTime@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AE8o
; protected: virtual void __thiscall icu_56::Calendar::computeFields(enum  UErrorCode &)
		extrn ?computeFields@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AECo
; protected: virtual void __thiscall icu_56::Calendar::prepareGetActual(enum  UCalendarDateFields, signed char,	enum  UErrorCode &)
		extrn ?prepareGetActual@Calendar@icu_56@@MAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000AF0o
; protected: virtual int __thiscall icu_56::Calendar::getLimit(enum  UCalendarDateFields, enum	icu_56::Calendar::ELimitType)const
		extrn ?getLimit@Calendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@12@@Z:near
					; DATA XREF: .rdata:00000AF8o
; protected: virtual int __thiscall icu_56::Calendar::handleGetMonthLength(int,	int)const
		extrn ?handleGetMonthLength@Calendar@icu_56@@MBEHHH@Z:near
					; DATA XREF: .rdata:00000B00o
; protected: virtual int __thiscall icu_56::Calendar::handleGetYearLength(int)const
		extrn ?handleGetYearLength@Calendar@icu_56@@MBEHH@Z:near
					; DATA XREF: .rdata:00000B04o
; protected: virtual int __thiscall icu_56::Calendar::handleComputeJulianDay(enum  UCalendarDateFields)
		extrn ?handleComputeJulianDay@Calendar@icu_56@@MAEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000B0Co
; protected: virtual int __thiscall icu_56::Calendar::handleGetExtendedYearFromWeekFields(int, int)
		extrn ?handleGetExtendedYearFromWeekFields@Calendar@icu_56@@MAEHHH@Z:near
					; DATA XREF: .rdata:00000B10o
; protected: virtual void __thiscall icu_56::Calendar::validateField(enum  UCalendarDateFields,	enum  UErrorCode &)
		extrn ?validateField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000B14o
; protected: virtual int const (* __thiscall icu_56::Calendar::getFieldResolutionTable(void)const)[12][8]
		extrn ?getFieldResolutionTable@Calendar@icu_56@@MBEPAY1M@7$$CBHXZ:near
					; DATA XREF: .rdata:00000B18o
; protected: virtual void __thiscall icu_56::Calendar::handleComputeFields(int,	enum  UErrorCode &)
		extrn ?handleComputeFields@Calendar@icu_56@@MAEXHAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000B1Co
; protected: virtual int __thiscall icu_56::Calendar::getDefaultMonthInYear(int)
		extrn ?getDefaultMonthInYear@Calendar@icu_56@@MAEHH@Z:near
					; DATA XREF: .rdata:00000B20o
; protected: virtual int __thiscall icu_56::Calendar::getDefaultDayInMonth(int,	int)
		extrn ?getDefaultDayInMonth@Calendar@icu_56@@MAEHHH@Z:near
					; DATA XREF: .rdata:00000B24o
; protected: virtual void __thiscall icu_56::Calendar::pinField(enum  UCalendarDateFields, enum	 UErrorCode &)
		extrn ?pinField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000B28o
; public: virtual int __thiscall icu_56::Calendar::getRelatedYear(enum	UErrorCode &)const
		extrn ?getRelatedYear@Calendar@icu_56@@UBEHAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000B38o
; public: virtual void __thiscall icu_56::Calendar::setRelatedYear(int)
		extrn ?setRelatedYear@Calendar@icu_56@@UAEXH@Z:near
					; DATA XREF: .rdata:00000B3Co
; _DWORD __thiscall icu_56::Calendar::Calendar(icu_56::Calendar	*__hidden this,	const struct icu_56::Calendar *)
		extrn ??0Calendar@icu_56@@IAE@ABV01@@Z:near
					; CODE XREF: icu_56::CECalendar::CECalendar(icu_56::CECalendar const &)+2Ap
; protected: class icu_56::Calendar & __thiscall icu_56::Calendar::operator=(class icu_56::Calendar const &)
		extrn ??4Calendar@icu_56@@IAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::CECalendar::operator=(icu_56::CECalendar const &)+2Ap
; void __thiscall icu_56::Calendar::complete(icu_56::Calendar *__hidden	this, enum UErrorCode *)
		extrn ?complete@Calendar@icu_56@@IAEXAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+74p
; const	struct icu_56::TimeZone	*__thiscall icu_56::Calendar::getTimeZone(icu_56::Calendar *__hidden this)
		extrn ?getTimeZone@Calendar@icu_56@@QBEABVTimeZone@2@XZ:near
					; CODE XREF: icu_56::CECalendar::inDaylightTime(UErrorCode &)+3Bp
; int __cdecl static icu_56::ClockMath::floorDivide(int, int)
		extrn ?floorDivide@ClockMath@icu_56@@SAHHH@Z:near
					; CODE XREF: icu_56::CECalendar::ceToJD(int,int,int,int)+86p
; int __cdecl static icu_56::ClockMath::floorDivide(double, int, int *)
		extrn ?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z:near
					; CODE XREF: icu_56::CECalendar::jdToCE(int,int,int &,int &,int	&)+3Fp
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::CECalendar::jdToCE(int,int,int &,int &,int	&)+CBp


		end

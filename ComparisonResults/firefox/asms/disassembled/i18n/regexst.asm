;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	30F8A88CE028D741FC24D82537B0098A
; Input	CRC32 :	782F922D

; File Name   :	D:\compspace\objfiles\firefox\i18n\regexst.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset _gRuleSet_rule_char_pattern+8 ; "\\?\\+\\[\\(\\)\\{\\}\\^\\$\\|\\\\\\.]"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	_gGC_ControlPattern+30h	; "]-[:Grapheme_Extend:]]"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_400
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_7FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_1000
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset loc_1FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	_gIsSpacePattern+14h ; "pace}]"
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_DFC+4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0F8h
; wchar_t gRuleSet_rule_char_pattern
_gRuleSet_rule_char_pattern:		; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+CEAo
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
		unicode	0, <[^\*\?\+\[\(\)\{\}\^\$\|\\\.]>,0
; wchar_t gUnescapeCharPattern
_gUnescapeCharPattern:			; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+95o
		unicode	0, <[acefnrtuUx]>,0
		align 10h
; wchar_t gIsWordPattern
_gIsWordPattern:			; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+171o
		unicode	0, <[\p{alphabetic}\p{M}\p{Nd}\p{Pc}\u200c\u200d]>,0
; wchar_t gIsSpacePattern
_gIsSpacePattern:			; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+27Do
		unicode	0, <[\p{WhiteSpace}]>,0
		align 10h
; wchar_t gGC_ControlPattern
_gGC_ControlPattern:			; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+495o
		unicode	0, <[[:Zl:][:Zp:][:Cc:][:Cf:]-[:Grapheme_Extend:]]>,0
		align 10h
; wchar_t gGC_ExtendPattern
_gGC_ExtendPattern:			; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+389o
		unicode	0, <[\p{Grapheme_Extend}]>,0
; wchar_t gGC_LPattern
_gGC_LPattern:				; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+5A1o
		unicode	0, <[\p{Hangul_Syllable_Type=L}]>,0
		align 4
; wchar_t gGC_VPattern
_gGC_VPattern:				; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+6ADo
		unicode	0, <[\p{Hangul_Syllable_Type=V}]>,0
		align 4
; wchar_t gGC_TPattern
_gGC_TPattern:				; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+7B9o
		unicode	0, <[\p{Hangul_Syllable_Type=T}]>,0
		align 10h
; wchar_t gGC_LVPattern
_gGC_LVPattern:				; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+8C5o
		unicode	0, <[\p{Hangul_Syllable_Type=LV}]>,0
; wchar_t gGC_LVTPattern
_gGC_LVTPattern:			; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+9DAo
		unicode	0, <[\p{Hangul_Syllable_Type=LVT}]>,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 38Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
		public ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A
; public: static class icu_56::RegexStaticSets * icu_56::RegexStaticSets::gStaticSets
?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A dd ?
					; DATA XREF: icu_56::RegexStaticSets::cleanup(void)+1Er
					; icu_56::RegexStaticSets::cleanup(void):loc_1F51w ...
		public ?gStaticSetsInitOnce@icu_56@@3UUInitOnce@1@A
; icu_56::UInitOnce icu_56::gStaticSetsInitOnce
?gStaticSetsInitOnce@icu_56@@3UUInitOnce@1@A dd	2 dup(?)
					; DATA XREF: icu_56::RegexStaticSets::cleanup(void)+67o
					; icu_56::RegexStaticSets::initGlobals(UErrorCode *)+27o
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 398h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 3D0h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 3D4h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]

loc_400:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 40Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::RegexPattern::operator!=(class	icu_56::RegexPattern const &)const
		public ??9RegexPattern@icu_56@@QBECABV01@@Z
??9RegexPattern@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8RegexPattern@icu_56@@QBECABV01@@Z ; icu_56::RegexPattern::operator==(icu_56::RegexPattern const &)
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9RegexPattern@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 45Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::RegexStaticSets::RegexStaticSets(icu_56::RegexStaticSets *this, enum UErrorCode *)
		public ??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z
??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z proc near ; CODE XREF: _initStaticSets+8Bp

var_560		= dword	ptr -560h
var_55C		= dword	ptr -55Ch
var_558		= dword	ptr -558h
var_554		= dword	ptr -554h
var_54C		= dword	ptr -54Ch
var_540		= dword	ptr -540h
var_534		= dword	ptr -534h
var_528		= dword	ptr -528h
var_51C		= dword	ptr -51Ch
var_510		= dword	ptr -510h
var_504		= dword	ptr -504h
var_4F8		= dword	ptr -4F8h
var_4EC		= dword	ptr -4ECh
var_4E0		= dword	ptr -4E0h
var_4D4		= dword	ptr -4D4h
var_4C8		= dword	ptr -4C8h
var_4BC		= dword	ptr -4BCh
var_4B0		= dword	ptr -4B0h
var_4A4		= dword	ptr -4A4h
var_498		= dword	ptr -498h
var_48C		= dword	ptr -48Ch
var_480		= dword	ptr -480h
var_474		= dword	ptr -474h
var_468		= dword	ptr -468h
var_45C		= byte ptr -45Ch
var_420		= dword	ptr -420h
var_414		= dword	ptr -414h
var_408		= dword	ptr -408h
var_3FC		= byte ptr -3FCh
var_3B4		= byte ptr -3B4h
var_36C		= byte ptr -36Ch
var_324		= byte ptr -324h
var_2DC		= byte ptr -2DCh
var_294		= byte ptr -294h
var_24C		= byte ptr -24Ch
var_204		= byte ptr -204h
var_1BC		= byte ptr -1BCh
var_174		= byte ptr -174h
var_12C		= byte ptr -12Ch
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 554h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_560]
		mov	ecx, 155h
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	[ebp+var_408], 0
		push	offset ??0Regex8BitSet@icu_56@@QAE@XZ ;	icu_56::Regex8BitSet::Regex8BitSet(void)
		push	0Dh
		push	20h ; ' '
		mov	eax, [ebp+var_18]
		add	eax, 34h ; '4'
		push	eax
		call	??_H@YGXPAXIHP6EPAX0@Z@Z ; `vector constructor iterator'(void *,uint,int,void * (*)(void *))
		mov	eax, dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ ; icu_56::UnicodeSet::~UnicodeSet(void)
		push	eax		; enum UErrorCode *
		mov	ecx, dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ ; icu_56::UnicodeSet::UnicodeSet(void)
		push	ecx
		push	0Ah
		push	34h ; '4'
		mov	edx, [ebp+var_18]
		add	edx, 1D4h
		push	edx
		call	??_L@YGXPAXIHP6EX0@Z1@Z	; `eh vector constructor iterator'(void *,uint,int,void (*)(void *),void (*)(void *))
		mov	[ebp+var_4], 0
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gUnescapeCharPattern ; "[acefnrtuUx]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_3FC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 1
		mov	edx, [ebp+var_558]
		push	edx		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_18]
		add	ecx, 3DCh	; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3
		mov	esi, esp
		lea	ecx, [ebp+var_3FC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_18]
		mov	dword ptr [eax+410h], 0
		mov	eax, [ebp+var_18]
		mov	dword ptr [eax+414h], 0
		mov	[ebp+var_24], 0
		jmp	short loc_583
; ---------------------------------------------------------------------------

loc_57A:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+13Aj
		mov	eax, [ebp+var_24]
		add	eax, 1
		mov	[ebp+var_24], eax

loc_583:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+11Cj
		cmp	[ebp+var_24], 0Dh
		jge	short loc_598
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		mov	dword ptr [ecx+eax*4], 0
		jmp	short loc_57A
; ---------------------------------------------------------------------------

loc_598:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+12Bj
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_540], eax
		mov	byte ptr [ebp+var_4], 4
		cmp	[ebp+var_540], 0
		jz	loc_64D
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gIsWordPattern ; "[\\p{alphabetic}\\p{M}\\p{Nd}\\p{Pc}\\u"...
		push	1		; signed __int8
		lea	ecx, [ebp+var_3B4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 5
		mov	edx, [ebp+var_408]
		or	edx, 1
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_540] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_540]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_540]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_540]
		mov	[ebp+var_55C], eax
		jmp	short loc_657
; ---------------------------------------------------------------------------

loc_64D:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+161j
		mov	[ebp+var_55C], 0

loc_657:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+1EFj
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_54C], ecx
		mov	[ebp+var_4], 6
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_54C]
		mov	[edx+4], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 1
		jz	short loc_6A4
		and	[ebp+var_408], 0FFFFFFFEh
		mov	esi, esp
		lea	ecx, [ebp+var_3B4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_6A4:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+22Aj
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_528], eax
		mov	byte ptr [ebp+var_4], 7
		cmp	[ebp+var_528], 0
		jz	loc_759
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gIsSpacePattern	; "[\\p{WhiteSpace}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_36C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 8
		mov	edx, [ebp+var_408]
		or	edx, 2
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_528] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_528]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_528]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_528]
		mov	[ebp+var_55C], eax
		jmp	short loc_763
; ---------------------------------------------------------------------------

loc_759:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+26Dj
		mov	[ebp+var_55C], 0

loc_763:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+2FBj
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_534], ecx
		mov	[ebp+var_4], 9
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_534]
		mov	[edx+10h], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 2
		jz	short loc_7B0
		and	[ebp+var_408], 0FFFFFFFDh
		mov	esi, esp
		lea	ecx, [ebp+var_36C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_7B0:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+336j
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_510], eax
		mov	byte ptr [ebp+var_4], 0Ah
		cmp	[ebp+var_510], 0
		jz	loc_865
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_ExtendPattern ; "[\\p{Grapheme_Extend}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_324] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp

loc_7FF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 0Bh
		mov	edx, [ebp+var_408]
		or	edx, 4
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_510] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_510]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_510]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_510]
		mov	[ebp+var_55C], eax
		jmp	short loc_86F
; ---------------------------------------------------------------------------

loc_865:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+379j
		mov	[ebp+var_55C], 0

loc_86F:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+407j
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_51C], ecx
		mov	[ebp+var_4], 0Ch
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_51C]
		mov	[edx+18h], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 4
		jz	short loc_8BC
		and	[ebp+var_408], 0FFFFFFFBh
		mov	esi, esp
		lea	ecx, [ebp+var_324] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_8BC:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+442j
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4F8], eax
		mov	byte ptr [ebp+var_4], 0Dh
		cmp	[ebp+var_4F8], 0
		jz	loc_971
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_ControlPattern ; "[[:Zl:][:Zp:][:Cc:][:Cf:]-[:Grapheme_Ex"...
		push	1		; signed __int8
		lea	ecx, [ebp+var_2DC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 0Eh
		mov	edx, [ebp+var_408]
		or	edx, 8
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_4F8] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_4F8]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_4F8]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_4F8]
		mov	[ebp+var_55C], eax
		jmp	short loc_97B
; ---------------------------------------------------------------------------

loc_971:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+485j
		mov	[ebp+var_55C], 0

loc_97B:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+513j
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_504], ecx
		mov	[ebp+var_4], 0Fh
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_504]
		mov	[edx+1Ch], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 8
		jz	short loc_9C8
		and	[ebp+var_408], 0FFFFFFF7h
		mov	esi, esp
		lea	ecx, [ebp+var_2DC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_9C8:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+54Ej
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4E0], eax
		mov	byte ptr [ebp+var_4], 10h
		cmp	[ebp+var_4E0], 0
		jz	loc_A7D
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_LPattern ; "[\\p{Hangul_Syllable_Type=L}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_294] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 11h
		mov	edx, [ebp+var_408]
		or	edx, 10h
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_4E0] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_4E0]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_4E0]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_4E0]
		mov	[ebp+var_55C], eax
		jmp	short loc_A87
; ---------------------------------------------------------------------------

loc_A7D:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+591j
		mov	[ebp+var_55C], 0

loc_A87:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+61Fj
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_4EC], ecx
		mov	[ebp+var_4], 12h
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4EC]
		mov	[edx+20h], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 10h
		jz	short loc_AD4
		and	[ebp+var_408], 0FFFFFFEFh
		mov	esi, esp
		lea	ecx, [ebp+var_294] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_AD4:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+65Aj
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4C8], eax
		mov	byte ptr [ebp+var_4], 13h
		cmp	[ebp+var_4C8], 0
		jz	loc_B89
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_VPattern ; "[\\p{Hangul_Syllable_Type=V}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_24C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 14h
		mov	edx, [ebp+var_408]
		or	edx, 20h
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_4C8] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_4C8]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_4C8]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_4C8]
		mov	[ebp+var_55C], eax
		jmp	short loc_B93
; ---------------------------------------------------------------------------

loc_B89:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+69Dj
		mov	[ebp+var_55C], 0

loc_B93:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+72Bj
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_4D4], ecx
		mov	[ebp+var_4], 15h
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4D4]
		mov	[edx+2Ch], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 20h
		jz	short loc_BE0
		and	[ebp+var_408], 0FFFFFFDFh
		mov	esi, esp
		lea	ecx, [ebp+var_24C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_BE0:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+766j
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4B0], eax
		mov	byte ptr [ebp+var_4], 16h
		cmp	[ebp+var_4B0], 0
		jz	loc_C95
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_TPattern ; "[\\p{Hangul_Syllable_Type=T}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_204] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 17h
		mov	edx, [ebp+var_408]
		or	edx, 40h
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_4B0] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_4B0]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_4B0]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_4B0]
		mov	[ebp+var_55C], eax
		jmp	short loc_C9F
; ---------------------------------------------------------------------------

loc_C95:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+7A9j
		mov	[ebp+var_55C], 0

loc_C9F:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+837j
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_4BC], ecx
		mov	[ebp+var_4], 18h
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4BC]
		mov	[edx+30h], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 40h
		jz	short loc_CEC
		and	[ebp+var_408], 0FFFFFFBFh
		mov	esi, esp
		lea	ecx, [ebp+var_204] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_CEC:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+872j
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_498], eax
		mov	byte ptr [ebp+var_4], 19h
		cmp	[ebp+var_498], 0
		jz	loc_DA4
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_LVPattern ;	"[\\p{Hangul_Syllable_Type=LV}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_1BC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 1Ah
		mov	edx, [ebp+var_408]
		or	edx, 80h
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_498] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_498]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_498]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_498]
		mov	[ebp+var_55C], eax
		jmp	short loc_DAE
; ---------------------------------------------------------------------------

loc_DA4:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+8B5j
		mov	[ebp+var_55C], 0

loc_DAE:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+946j
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_4A4], ecx
		mov	[ebp+var_4], 1Bh
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4A4]
		mov	[edx+24h], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 80h
		jz	short loc_E01
		and	[ebp+var_408], 0FFFFFF7Fh
		mov	esi, esp
		lea	ecx, [ebp+var_1BC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp

loc_DFC:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
		call	__RTC_CheckEsp

loc_E01:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+984j
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_480], eax
		mov	byte ptr [ebp+var_4], 1Ch
		cmp	[ebp+var_480], 0
		jz	loc_EB9
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gGC_LVTPattern ; "[\\p{Hangul_Syllable_Type=LVT}]"
		push	1		; signed __int8
		lea	ecx, [ebp+var_174] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 1Dh
		mov	edx, [ebp+var_408]
		or	edx, 100h
		mov	[ebp+var_408], edx
		mov	eax, [ebp+var_558]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_480] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_480]
		mov	dword ptr [ecx], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	edx, [ebp+var_480]
		mov	dword ptr [edx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_480]
		mov	[ebp+var_55C], eax
		jmp	short loc_EC3
; ---------------------------------------------------------------------------

loc_EB9:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+9CAj
		mov	[ebp+var_55C], 0

loc_EC3:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+A5Bj
		mov	ecx, [ebp+var_55C]
		mov	[ebp+var_48C], ecx
		mov	[ebp+var_4], 1Eh
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_48C]
		mov	[edx+28h], eax
		mov	[ebp+var_4], 3
		mov	ecx, [ebp+var_408]
		and	ecx, 100h
		jz	short loc_F16
		and	[ebp+var_408], 0FFFFFEFFh
		mov	esi, esp
		lea	ecx, [ebp+var_174] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_F16:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+A99j
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+4], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+10h], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+18h], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+1Ch], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+20h], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+2Ch], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+30h], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+24h], 0
		jz	short loc_F67
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+28h], 0
		jnz	short loc_F6C

loc_F67:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+AC1j
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+ACAj ...
		jmp	$ExitConstrDeleteAll$71313
; ---------------------------------------------------------------------------

loc_F6C:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B09j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_F86
		jmp	loc_138B
; ---------------------------------------------------------------------------

loc_F86:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B23j
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_468], eax
		mov	byte ptr [ebp+var_4], 1Fh
		cmp	[ebp+var_468], 0
		jz	short loc_FF0
		mov	esi, esp
		push	10FFFFh		; int
		push	0		; int
		mov	ecx, [ebp+var_468] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@HH@Z ; icu_56::UnicodeSet::UnicodeSet(int,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_468]
		mov	dword ptr [eax], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	ecx, [ebp+var_468]
		mov	dword ptr [ecx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	edx, [ebp+var_468]
		mov	[ebp+var_554], edx
		jmp	short loc_FFA
; ---------------------------------------------------------------------------

loc_FF0:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B4Fj
		mov	[ebp+var_554], 0

loc_FFA:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B92j
		mov	eax, [ebp+var_554]

loc_1000:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		mov	[ebp+var_474], eax
		mov	byte ptr [ebp+var_4], 3
		mov	ecx, [ebp+var_18]
		mov	edx, [ebp+var_474]
		mov	[ecx+14h], edx
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+14h], 0
		jnz	short loc_1024
		jmp	$ExitConstrDeleteAll$71313
; ---------------------------------------------------------------------------

loc_1024:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+BC1j
		mov	esi, esp
		push	0D7A4h
		push	0AC00h
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+14h]
		mov	edx, [ebp+var_18]
		mov	eax, [edx+14h]
		mov	edx, [ecx]
		mov	ecx, eax
		mov	eax, [edx+4Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+1Ch]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx+14h]
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+14h]
		mov	edx, [eax]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+20h]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx+14h]
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+14h]
		mov	edx, [eax]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+2Ch]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx+14h]
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+14h]
		mov	edx, [eax]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+30h]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx+14h]
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+14h]
		mov	edx, [eax]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_24], 0
		jmp	short loc_10EA
; ---------------------------------------------------------------------------

loc_10E1:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *):loc_113Aj
		mov	eax, [ebp+var_24]
		add	eax, 1
		mov	[ebp+var_24], eax

loc_10EA:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+C83j
		cmp	[ebp+var_24], 0Dh
		jge	short loc_113C
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		cmp	dword ptr [ecx+eax*4], 0
		jz	short loc_113A
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+eax*4]
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+eax*4]
		mov	edx, [edx]
		mov	esi, esp
		mov	eax, [edx+6Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+eax*4]
		push	edx		; struct icu_56::UnicodeSet *
		mov	eax, [ebp+var_24]
		shl	eax, 5
		mov	ecx, [ebp+var_18]
		lea	ecx, [ecx+eax+34h] ; this
		call	?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z ; icu_56::Regex8BitSet::init(icu_56::UnicodeSet const	*)

loc_113A:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+C9Ej
		jmp	short loc_10E1
; ---------------------------------------------------------------------------

loc_113C:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+C92j
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	edi, esp
		push	0FFFFFFFFh	; int
		push	offset _gRuleSet_rule_char_pattern ; "[^\\*\\?\\+\\[\\(\\)\\{\\}\\^\\$\\|\\\\"...
		push	1		; signed __int8
		lea	ecx, [ebp+var_12C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		mov	ecx, [ebp+var_554]
		mov	[ebp+var_558], ecx
		mov	byte ptr [ebp+var_4], 20h ; ' '
		mov	edx, [ebp+var_558]
		push	edx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_45C] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeString const	&,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_55C], eax
		mov	eax, [ebp+var_55C]
		mov	[ebp+var_560], eax
		mov	byte ptr [ebp+var_4], 21h ; '!'
		mov	esi, esp
		mov	ecx, [ebp+var_560]
		push	ecx
		mov	ecx, [ebp+var_18]
		add	ecx, 23Ch
		call	dword ptr ds:__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeSet::operator=(icu_56::UnicodeSet const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 20h ; ' '
		mov	esi, esp
		lea	ecx, [ebp+var_45C] ; this
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3
		mov	esi, esp
		lea	ecx, [ebp+var_12C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	39h ; '9'
		push	30h ; '0'
		mov	ecx, [ebp+var_18]
		add	ecx, 208h
		mov	eax, [ebp+var_18]
		mov	edx, [eax+208h]
		mov	eax, [edx+34h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	5Ah ; 'Z'
		push	41h ; 'A'
		mov	ecx, [ebp+var_18]
		add	ecx, 1D4h
		mov	eax, [ebp+var_18]
		mov	edx, [eax+1D4h]
		mov	eax, [edx+34h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	7Ah ; 'z'
		push	61h ; 'a'
		mov	ecx, [ebp+var_18]
		add	ecx, 1D4h
		mov	eax, [ebp+var_18]
		mov	edx, [eax+1D4h]
		mov	eax, [edx+34h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_18]
		add	eax, 208h
		mov	ecx, [ebp+var_18]
		mov	[ecx+410h], eax
		mov	[ebp+var_24], 0
		jmp	short loc_1286
; ---------------------------------------------------------------------------

loc_127D:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E5Ej
		mov	eax, [ebp+var_24]
		add	eax, 1
		mov	[ebp+var_24], eax

loc_1286:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E1Fj
		cmp	[ebp+var_24], 0Ah
		jge	short loc_12BC
		mov	eax, [ebp+var_24]
		imul	eax, 34h
		mov	ecx, [ebp+var_24]
		imul	ecx, 34h
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+ecx+1D4h]
		mov	edx, [ebp+var_18]
		mov	eax, [edx+eax+1D4h]
		mov	esi, esp
		mov	edx, [eax+6Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_127D
; ---------------------------------------------------------------------------

loc_12BC:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E2Ej
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	0
		push	0
		push	0
		call	_utext_openUChars_56
		add	esp, 14h
		mov	ecx, [ebp+var_18]
		mov	[ecx+414h], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short $ExitConstrDeleteAll$71313
		jmp	loc_138B
; ---------------------------------------------------------------------------

$ExitConstrDeleteAll$71313:		; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *):loc_F67j
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+BC3j ...
		mov	[ebp+var_24], 0
		jmp	short loc_1305
; ---------------------------------------------------------------------------

loc_12FC:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+F0Fj
		mov	eax, [ebp+var_24]
		add	eax, 1
		mov	[ebp+var_24], eax

loc_1305:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E9Ej
		cmp	[ebp+var_24], 0Dh
		jge	short loc_136D
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+eax*4]
		mov	[ebp+var_414], edx
		mov	eax, [ebp+var_414]
		mov	[ebp+var_420], eax
		cmp	[ebp+var_420], 0
		jz	short loc_1354
		mov	esi, esp
		push	1
		mov	ecx, [ebp+var_420]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_420]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		jmp	short loc_135E
; ---------------------------------------------------------------------------

loc_1354:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+ED1j
		mov	[ebp+var_554], 0

loc_135E:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+EF6j
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_18]
		mov	dword ptr [ecx+eax*4], 0
		jmp	short loc_12FC
; ---------------------------------------------------------------------------

loc_136D:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+EADj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_138B
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7

loc_138B:				; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B25j
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E92j ...
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_18]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 560h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 13C0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$2 proc near
					; DATA XREF: .xdata$x:000017A0o
		mov	eax, dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ ; icu_56::UnicodeSet::~UnicodeSet(void)
		push	eax
		push	0Ah
		push	34h ; '4'
		mov	ecx, [ebp-18h]
		add	ecx, 1D4h
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$2 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$3 proc near
					; DATA XREF: .xdata$x:000017A8o
		mov	esi, esp
		lea	ecx, [ebp-3FCh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$3 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$4 proc near
					; DATA XREF: .xdata$x:000017B0o
					; .xdata$x:000017B8o
		mov	ecx, [ebp-18h]
		add	ecx, 3DCh	; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$4 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$5 proc near
					; DATA XREF: .xdata$x:000017C0o
		mov	esi, esp
		mov	eax, [ebp-540h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$5 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$6 proc near
					; DATA XREF: .xdata$x:000017C8o
					; .xdata$x:000017D0o
		mov	eax, [ebp-408h]
		and	eax, 1
		jz	$LN51
		and	dword ptr [ebp-408h], 0FFFFFFFEh
		mov	esi, esp
		lea	ecx, [ebp-3B4h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN51:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$6+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$6 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$7 proc near
					; DATA XREF: .xdata$x:000017D8o
		mov	esi, esp
		mov	eax, [ebp-528h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$7 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$8 proc near
					; DATA XREF: .xdata$x:000017E0o
					; .xdata$x:000017E8o
		mov	eax, [ebp-408h]
		and	eax, 2
		jz	$LN55
		and	dword ptr [ebp-408h], 0FFFFFFFDh
		mov	esi, esp
		lea	ecx, [ebp-36Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN55:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$8+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$8 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$9 proc near
					; DATA XREF: .xdata$x:000017F0o
		mov	esi, esp
		mov	eax, [ebp-510h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$9 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$10 proc near
					; DATA XREF: .xdata$x:000017F8o
					; .xdata$x:00001800o
		mov	eax, [ebp-408h]
		and	eax, 4
		jz	$LN59
		and	dword ptr [ebp-408h], 0FFFFFFFBh
		mov	esi, esp
		lea	ecx, [ebp-324h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN59:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$10+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$10 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$11 proc near
					; DATA XREF: .xdata$x:00001808o
		mov	esi, esp
		mov	eax, [ebp-4F8h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$11 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$12 proc near
					; DATA XREF: .xdata$x:00001810o
					; .xdata$x:00001818o
		mov	eax, [ebp-408h]
		and	eax, 8
		jz	$LN63
		and	dword ptr [ebp-408h], 0FFFFFFF7h
		mov	esi, esp
		lea	ecx, [ebp-2DCh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN63:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$12+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$12 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$13 proc near
					; DATA XREF: .xdata$x:00001820o
		mov	esi, esp
		mov	eax, [ebp-4E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$13 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$14 proc near
					; DATA XREF: .xdata$x:00001828o
					; .xdata$x:00001830o
		mov	eax, [ebp-408h]
		and	eax, 10h
		jz	$LN67
		and	dword ptr [ebp-408h], 0FFFFFFEFh
		mov	esi, esp
		lea	ecx, [ebp-294h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN67:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$14+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$14 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$15 proc near
					; DATA XREF: .xdata$x:00001838o
		mov	esi, esp
		mov	eax, [ebp-4C8h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$15 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$16 proc near
					; DATA XREF: .xdata$x:00001840o
					; .xdata$x:00001848o
		mov	eax, [ebp-408h]
		and	eax, 20h
		jz	$LN71
		and	dword ptr [ebp-408h], 0FFFFFFDFh
		mov	esi, esp
		lea	ecx, [ebp-24Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN71:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$16+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$16 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$17 proc near
					; DATA XREF: .xdata$x:00001850o
		mov	esi, esp
		mov	eax, [ebp-4B0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$17 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$18 proc near
					; DATA XREF: .xdata$x:00001858o
					; .xdata$x:00001860o
		mov	eax, [ebp-408h]
		and	eax, 40h
		jz	$LN75
		and	dword ptr [ebp-408h], 0FFFFFFBFh
		mov	esi, esp
		lea	ecx, [ebp-204h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN75:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$18+9j
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$18 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$19 proc near
					; DATA XREF: .xdata$x:00001868o
		mov	esi, esp
		mov	eax, [ebp-498h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$19 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$20 proc near
					; DATA XREF: .xdata$x:00001870o
					; .xdata$x:00001878o
		mov	eax, [ebp-408h]
		and	eax, 80h
		jz	$LN79
		and	dword ptr [ebp-408h], 0FFFFFF7Fh
		mov	esi, esp
		lea	ecx, [ebp-1BCh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN79:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$20+Bj
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$20 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$21 proc near
					; DATA XREF: .xdata$x:00001880o
		mov	esi, esp
		mov	eax, [ebp-480h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$21 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$22 proc near
					; DATA XREF: .xdata$x:00001888o
					; .xdata$x:00001890o
		mov	eax, [ebp-408h]
		and	eax, 100h
		jz	$LN83
		and	dword ptr [ebp-408h], 0FFFFFEFFh
		mov	esi, esp
		lea	ecx, [ebp-174h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
; ---------------------------------------------------------------------------

$LN83:					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$22+Bj
		retn
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$22 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$23 proc near
					; DATA XREF: .xdata$x:00001898o
		mov	esi, esp
		mov	eax, [ebp-468h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$23 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$24 proc near
					; DATA XREF: .xdata$x:000018A0o
		mov	esi, esp
		lea	ecx, [ebp-12Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$24 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$25 proc near
					; DATA XREF: .xdata$x:000018A8o
		mov	esi, esp
		lea	ecx, [ebp-45Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$25 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-564h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16ECh
		dd offset ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; const icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeMatcher'}
		public ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; const	icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ dd offset ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+1DCo
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+2E8o ...
					; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'`adjustor{4}' (uint)
		dd offset ?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z ; icu_56::UnicodeSet::matches(icu_56::Replaceable const &,int &,int,signed	char)
		dd offset ?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z	; icu_56::UnicodeSet::toPattern(icu_56::UnicodeString &,signed char)
		dd offset ?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z	; icu_56::UnicodeSet::matchesIndexValue(uchar)
		dd offset ?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z ; icu_56::UnicodeSet::addMatchSetTo(icu_56::UnicodeSet	&)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1704h
		dd offset ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeFunctor'}
		public ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
; const	icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ dd offset ??_EUnicodeSet@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+1D0o
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+2DCo ...
					; icu_56::UnicodeSet::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ ; icu_56::UnicodeSet::getDynamicClassID(void)
		dd offset ?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ ;	icu_56::UnicodeSet::clone(void)
		dd offset ?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ ; icu_56::UnicodeFilter::toMatcher(void)
		dd offset ?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ	; icu_56::UnicodeFunctor::toReplacer(void)
		dd offset ?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z ; icu_56::UnicodeFilter::setData(icu_56::TransliterationRuleData const *)
		dd offset ?contains@UnicodeSet@icu_56@@UBECH@Z ; icu_56::UnicodeSet::contains(int)
		dd offset ??8UnicodeSet@icu_56@@UBECABV01@@Z ; icu_56::UnicodeSet::operator==(icu_56::UnicodeSet const &)
		dd offset ?hashCode@UnicodeSet@icu_56@@UBEHXZ ;	icu_56::UnicodeSet::hashCode(void)
		dd offset ?size@UnicodeSet@icu_56@@UBEHXZ ; icu_56::UnicodeSet::size(void)
		dd offset ?isEmpty@UnicodeSet@icu_56@@UBECXZ ; icu_56::UnicodeSet::isEmpty(void)
		dd offset ?contains@UnicodeSet@icu_56@@UBECHH@Z	; icu_56::UnicodeSet::contains(int,int)
		dd offset ?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z ; icu_56::UnicodeSet::containsAll(icu_56::UnicodeSet const &)
		dd offset ?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z	; icu_56::UnicodeSet::add(int,int)
		dd offset ?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::addAll(icu_56::UnicodeSet const &)
		dd offset ?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::retainAll(icu_56::UnicodeSet const &)
		dd offset ?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ;	icu_56::UnicodeSet::complementAll(icu_56::UnicodeSet const &)
		dd offset ?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::removeAll(icu_56::UnicodeSet const &)
		dd offset ?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::retain(int,int)
		dd offset ?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::remove(int,int)
		dd offset ?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::complement(int,int)
		dd offset ?complement@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::complement(void)
		dd offset ?clear@UnicodeSet@icu_56@@UAEAAV12@XZ	; icu_56::UnicodeSet::clear(void)
		dd offset ?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::removeAllStrings(void)
		dd offset ?getRangeCount@UnicodeSet@icu_56@@UBEHXZ ; icu_56::UnicodeSet::getRangeCount(void)
		dd offset ?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z ; icu_56::UnicodeSet::getRangeStart(int)
		dd offset ?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z ; icu_56::UnicodeSet::getRangeEnd(int)
		dd offset ?compact@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::compact(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1778h
__ehfuncinfo$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z dd 19930522h, 22h
					; DATA XREF: __ehhandler$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
__unwindtable$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001780o
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$2
		align 8
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$3
		dd 1
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$4
		align 8
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$4
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$5
		dd 4
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$6
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$6
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$7
		dd 7
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$8
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$8
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$9
		dd 0Ah
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$10
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$10
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$11
		dd 0Dh
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$12
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$12
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$13
		dd 10h
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$14
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$14
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$15
		dd 13h
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$16
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$16
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$17
		dd 16h
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$18
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$18
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$19
		dd 19h
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$20
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$20
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$21
		dd 1Ch
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$22
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$22
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$23
		dd 3
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$24
		dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
		dd offset __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$25
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 18ACh
		public ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
; const	icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeFunctor'}
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ dd	3 dup(0) ; DATA	XREF: .rdata:00001704o
		dd offset ??_R0?AVUnicodeSet@icu_56@@@8	; icu_56::UnicodeSet `RTTI Type	Descriptor'
		dd offset ??_R3UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 18C0h
		public ??_R0?AVUnicodeSet@icu_56@@@8
; class	icu_56::UnicodeSet `RTTI Type Descriptor'
??_R0?AVUnicodeSet@icu_56@@@8 dd offset	??_7type_info@@6B@ ; DATA XREF:	.rdata$r:000018B8o
					; .rdata$r:icu_56::UnicodeSet::`RTTI Base Class	Descriptor at (0,-1,0,64)'o ...
					; const	type_info::`vftable'
		align 8
a_?avunicodeset	db '.?AVUnicodeSet@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 18E0h
		public ??_R3UnicodeSet@icu_56@@8
; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeSet@icu_56@@8 dd 0		; DATA XREF: .rdata$r:000018BCo
					; .rdata$r:00001924o ...
		dd 1, 6
		dd offset ??_R2UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 18F0h
		public ??_R2UnicodeSet@icu_56@@8
; icu_56::UnicodeSet::`RTTI Base Class Array'
??_R2UnicodeSet@icu_56@@8 dd offset ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
					; DATA XREF: .rdata$r:000018ECo
					; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8	; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		dd offset ??_R13?0A@EA@UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 190Ch
		public ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 dd offset ??_R0?AVUnicodeSet@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeSet::`RTTI	Base Class Array'o
					; icu_56::UnicodeSet `RTTI Type	Descriptor'
		dd 5, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1928h
		public ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 dd offset	??_R0?AVUnicodeFilter@icu_56@@@8
					; DATA XREF: .rdata$r:000018F4o
					; .rdata$r:icu_56::UnicodeFilter::`RTTI	Base Class Array'o
					; icu_56::UnicodeFilter	`RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1944h
		public ??_R0?AVUnicodeFilter@icu_56@@@8
; class	icu_56::UnicodeFilter `RTTI Type Descriptor'
??_R0?AVUnicodeFilter@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeFilter::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avunicodefil	db '.?AVUnicodeFilter@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1968h
		public ??_R3UnicodeFilter@icu_56@@8
; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeFilter@icu_56@@8 dd	0	; DATA XREF: .rdata$r:00001940o
		dd 1, 5
		dd offset ??_R2UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1978h
		public ??_R2UnicodeFilter@icu_56@@8
; icu_56::UnicodeFilter::`RTTI Base Class Array'
??_R2UnicodeFilter@icu_56@@8 dd	offset ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
					; DATA XREF: .rdata$r:00001974o
					; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		dd offset ??_R13?0A@EA@UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1990h
		public ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 dd offset ??_R0?AVUnicodeFunctor@icu_56@@@8
					; DATA XREF: .rdata$r:000018F8o
					; .rdata$r:0000197Co ...
					; icu_56::UnicodeFunctor `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeFunctor@icu_56@@8	; icu_56::UnicodeFunctor::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 19ACh
		public ??_R0?AVUnicodeFunctor@icu_56@@@8
; class	icu_56::UnicodeFunctor `RTTI Type Descriptor'
??_R0?AVUnicodeFunctor@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avunicodefun	db '.?AVUnicodeFunctor@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19D0h
		public ??_R3UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Class Hierarchy	Descriptor'
??_R3UnicodeFunctor@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:000019A8o
		dd 3
		dd offset ??_R2UnicodeFunctor@icu_56@@8	; icu_56::UnicodeFunctor::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19E0h
		public ??_R2UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Base Class Array'
??_R2UnicodeFunctor@icu_56@@8 dd offset	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
					; DATA XREF: .rdata$r:000019DCo
					; icu_56::UnicodeFunctor::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19F0h
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:000018FCo
					; .rdata$r:00001980o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1A0Ch
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A2Ch
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001A08o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A3Ch
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00001A38o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A48h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00001900o
					; .rdata$r:00001984o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		align 10h
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1A64h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A84h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001A60o
					; .rdata$r:00001AB4o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A94h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:00001A90o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A9Ch
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1AB8h
		public ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 dd offset	??_R0?AVUnicodeMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:00001904o
					; .rdata$r:00001988o
					; icu_56::UnicodeMatcher `RTTI Type Descriptor'
		align 10h
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1AD4h
		public ??_R0?AVUnicodeMatcher@icu_56@@@8
; class	icu_56::UnicodeMatcher `RTTI Type Descriptor'
??_R0?AVUnicodeMatcher@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avunicodemat	db '.?AVUnicodeMatcher@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1AF8h
		public ??_R3UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
??_R3UnicodeMatcher@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001AD0o
					; .rdata$r:00001B28o
		dd 1
		dd offset ??_R2UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B08h
		public ??_R2UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Array'
??_R2UnicodeMatcher@icu_56@@8 dd offset	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
					; DATA XREF: .rdata$r:00001B04o
					; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B10h
		public ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 dd offset ??_R0?AVUnicodeMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Array'o
					; icu_56::UnicodeMatcher `RTTI Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B2Ch
		public ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; const	icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeMatcher'}
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ dd	0 ; DATA XREF: .rdata:000016ECo
		dd 4, 0
		dd offset ??_R0?AVUnicodeSet@icu_56@@@8	; icu_56::UnicodeSet `RTTI Type	Descriptor'
		dd offset ??_R3UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B40h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E83p
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+F17p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B6Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B16p
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+24p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B98h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::Regex8BitSet::Regex8BitSet(icu_56::Regex8BitSet *__hidden this)
		public ??0Regex8BitSet@icu_56@@QAE@XZ
??0Regex8BitSet@icu_56@@QAE@XZ proc near
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+4Fo

var_CC		= byte ptr -0CCh
Dst		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+Dst], ecx
		push	20h ; ' '       ; Size
		push	0		; Val
		mov	eax, [ebp+Dst]
		push	eax		; Dst
		call	_memset
		add	esp, 0Ch
		mov	eax, [ebp+Dst]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0Regex8BitSet@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1BE4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Regex8BitSet::init(icu_56::Regex8BitSet *this, const struct icu_56::UnicodeSet *)
		public ?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z
?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z proc near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+CD9p

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_0], 0
		jz	short loc_1C57
		mov	[ebp+var_14], 0
		jmp	short loc_1C1F
; ---------------------------------------------------------------------------

loc_1C16:				; CODE XREF: icu_56::Regex8BitSet::init(icu_56::UnicodeSet const *):loc_1C55j
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_1C1F:				; CODE XREF: icu_56::Regex8BitSet::init(icu_56::UnicodeSet const *)+30j
		cmp	[ebp+var_14], 0FFh
		jg	short loc_1C57
		mov	esi, esp
		mov	eax, [ebp+var_14]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+18h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_1C55
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+var_8] ; this
		call	?add@Regex8BitSet@icu_56@@QAEXH@Z ; icu_56::Regex8BitSet::add(int)

loc_1C55:				; CODE XREF: icu_56::Regex8BitSet::init(icu_56::UnicodeSet const *)+63j
		jmp	short loc_1C16
; ---------------------------------------------------------------------------

loc_1C57:				; CODE XREF: icu_56::Regex8BitSet::init(icu_56::UnicodeSet const *)+27j
					; icu_56::Regex8BitSet::init(icu_56::UnicodeSet	const *)+42j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1C70h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Regex8BitSet::add(icu_56::Regex8BitSet *this,	int)
		public ?add@Regex8BitSet@icu_56@@QAEXH@Z
?add@Regex8BitSet@icu_56@@QAEXH@Z proc near
					; CODE XREF: icu_56::Regex8BitSet::init(icu_56::UnicodeSet const *)+6Cp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		sar	eax, 3
		mov	ecx, [ebp+arg_0]
		and	ecx, 7
		mov	edx, 1
		shl	edx, cl
		mov	ecx, [ebp+var_8]
		movsx	eax, byte ptr [ecx+eax]
		or	eax, edx
		mov	ecx, [ebp+arg_0]
		sar	ecx, 3
		mov	edx, [ebp+var_8]
		mov	[edx+ecx], al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?add@Regex8BitSet@icu_56@@QAEXH@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1CC4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UnicodeSet::`scalar	deleting destructor'(unsigned int)
		public ??_GUnicodeSet@icu_56@@UAEPAXI@Z
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1D17
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1D17:				; CODE XREF: icu_56::UnicodeSet::`scalar deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D30h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::RegexStaticSets::~RegexStaticSets(icu_56::RegexStaticSets *__hidden	this)
		public ??1RegexStaticSets@icu_56@@QAE@XZ
??1RegexStaticSets@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::RegexStaticSets::`scalar deleting destructor'(uint)+26p

var_100		= dword	ptr -100h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1RegexStaticSets@icu_56@@QAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0F4h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_100]
		mov	ecx, 3Dh ; '='
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	[ebp+var_4], 1
		mov	[ebp+var_20], 0
		jmp	short loc_1D8B
; ---------------------------------------------------------------------------

loc_1D82:				; CODE XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+C1j
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_1D8B:				; CODE XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+50j
		cmp	[ebp+var_20], 0Dh
		jge	short loc_1DF3
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx+eax*4]
		mov	[ebp+var_EC], edx
		mov	eax, [ebp+var_EC]
		mov	[ebp+var_F8], eax
		cmp	[ebp+var_F8], 0
		jz	short loc_1DDA
		mov	esi, esp
		push	1
		mov	ecx, [ebp+var_F8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_F8]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_100], eax
		jmp	short loc_1DE4
; ---------------------------------------------------------------------------

loc_1DDA:				; CODE XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+83j
		mov	[ebp+var_100], 0

loc_1DE4:				; CODE XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+A8j
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_14]
		mov	dword ptr [ecx+eax*4], 0
		jmp	short loc_1D82
; ---------------------------------------------------------------------------

loc_1DF3:				; CODE XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+5Fj
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+410h], 0
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+414h]
		push	ecx
		call	_utext_close_56
		add	esp, 4
		mov	byte ptr [ebp+var_4], 0
		mov	ecx, [ebp+var_14]
		add	ecx, 3DCh	; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ ; icu_56::UnicodeSet::~UnicodeSet(void)
		push	eax
		push	0Ah
		push	34h ; '4'
		mov	ecx, [ebp+var_14]
		add	ecx, 1D4h
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 100h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1RegexStaticSets@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1E70h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1RegexStaticSets@icu_56@@QAE@XZ$0 proc near
					; DATA XREF: .xdata$x:00001EC4o
		mov	eax, dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ ; icu_56::UnicodeSet::~UnicodeSet(void)
		push	eax
		push	0Ah
		push	34h ; '4'
		mov	ecx, [ebp-14h]
		add	ecx, 1D4h
		push	ecx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		retn
__unwindfunclet$??1RegexStaticSets@icu_56@@QAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1RegexStaticSets@icu_56@@QAE@XZ$1 proc near
					; DATA XREF: .xdata$x:00001ECCo
		mov	ecx, [ebp-14h]
		add	ecx, 3DCh	; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??1RegexStaticSets@icu_56@@QAE@XZ$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1RegexStaticSets@icu_56@@QAE@XZ proc near
					; DATA XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-104h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1RegexStaticSets@icu_56@@QAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1RegexStaticSets@icu_56@@QAE@XZ endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1EC0h
__unwindtable$??1RegexStaticSets@icu_56@@QAE@XZ	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001ED8o
		dd offset __unwindfunclet$??1RegexStaticSets@icu_56@@QAE@XZ$0
		dd 0
		dd offset __unwindfunclet$??1RegexStaticSets@icu_56@@QAE@XZ$1
__ehfuncinfo$??1RegexStaticSets@icu_56@@QAE@XZ dd 19930522h, 2
					; DATA XREF: __ehhandler$??1RegexStaticSets@icu_56@@QAE@XZ+14o
		dd offset __unwindtable$??1RegexStaticSets@icu_56@@QAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1EF4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__cdecl	icu_56::RegexStaticSets::cleanup()
		public ?cleanup@RegexStaticSets@icu_56@@SACXZ
?cleanup@RegexStaticSets@icu_56@@SACXZ proc near ; CODE	XREF: _regex_cleanup+1Ep

var_DC		= dword	ptr -0DCh
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ;	icu_56::RegexStaticSets	* icu_56::RegexStaticSets::gStaticSets
		mov	[ebp+var_C8], eax
		mov	ecx, [ebp+var_C8]
		mov	[ebp+var_D4], ecx
		cmp	[ebp+var_D4], 0
		jz	short loc_1F47
		push	1
		mov	ecx, [ebp+var_D4]
		call	??_GRegexStaticSets@icu_56@@QAEPAXI@Z ;	icu_56::RegexStaticSets::`scalar deleting destructor'(uint)
		mov	[ebp+var_DC], eax
		jmp	short loc_1F51
; ---------------------------------------------------------------------------

loc_1F47:				; CODE XREF: icu_56::RegexStaticSets::cleanup(void)+3Cj
		mov	[ebp+var_DC], 0

loc_1F51:				; CODE XREF: icu_56::RegexStaticSets::cleanup(void)+51j
		mov	ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A, 0 ; icu_56::RegexStaticSets *	icu_56::RegexStaticSets::gStaticSets
		mov	ecx, offset ?gStaticSetsInitOnce@icu_56@@3UUInitOnce@1@A ; this
		call	?reset@UInitOnce@icu_56@@QAEXXZ	; icu_56::UInitOnce::reset(void)
		mov	al, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?cleanup@RegexStaticSets@icu_56@@SACXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1F7Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::UInitOnce::reset(icu_56::UInitOnce *__hidden this)
		public ?reset@UInitOnce@icu_56@@QAEXXZ
?reset@UInitOnce@icu_56@@QAEXXZ	proc near
					; CODE XREF: icu_56::RegexStaticSets::cleanup(void)+6Cp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?reset@UInitOnce@icu_56@@QAEXXZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1FB0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void * __thiscall icu_56::RegexStaticSets::`scalar deleting destructor'(unsigned int)
		public ??_GRegexStaticSets@icu_56@@QAEPAXI@Z
??_GRegexStaticSets@icu_56@@QAEPAXI@Z proc near
					; CODE XREF: icu_56::RegexStaticSets::cleanup(void)+46p
					; _initStaticSets+F7p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1RegexStaticSets@icu_56@@QAE@XZ ; icu_56::RegexStaticSets::~RegexStaticSets(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1FF9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1FF9:				; CODE XREF: icu_56::RegexStaticSets::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx

loc_1FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::fixedo
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GRegexStaticSets@icu_56@@QAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2014h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl static icu_56::RegexStaticSets::initGlobals(enum	UErrorCode *)
		public ?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z
?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z proc	near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; enum UErrorCode *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset _initStaticSets ; struct	icu_56::UInitOnce *
		push	offset ?gStaticSetsInitOnce@icu_56@@3UUInitOnce@1@A ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 205Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::umtx_initOnce(icu_56 *__hidden this, struct icu_56::UInitOnce *,	void (__cdecl *)(enum UErrorCode *), enum UErrorCode *)
		public ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
					; CODE XREF: icu_56::RegexStaticSets::initGlobals(UErrorCode *)+2Cp

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; struct icu_56::UInitOnce *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_2094
		jmp	loc_2119
; ---------------------------------------------------------------------------

loc_2094:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+31j
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	?umtx_loadAcquire@icu_56@@YAHACJ@Z ; icu_56::umtx_loadAcquire(long volatile &)
		add	esp, 4
		cmp	eax, 2
		jz	short loc_20F8
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ;	icu_56::umtx_initImplPreInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_20F8
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		call	[ebp+arg_4]
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+Destination]
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	[eax+4], edx
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_2119
; ---------------------------------------------------------------------------

loc_20F8:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+47j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+64j
		mov	eax, [ebp+Destination]
		mov	ecx, [eax+4]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_2119
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+Destination]
		mov	edx, [ecx+4]
		mov	[eax], edx

loc_2119:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+33j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+9Aj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2130h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::umtx_loadAcquire(volatile	LONG *Destination, volatile __int32 *)
		public ?umtx_loadAcquire@icu_56@@YAHACJ@Z
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+3Cp

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	0		; Comperand
		push	0		; Exchange
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	dword ptr ds:__imp__InterlockedCompareExchange@12 ; InterlockedCompareExchange(x,x,x)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_loadAcquire@icu_56@@YAHACJ@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 217Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UInitOnce initStaticSets
_initStaticSets	proc near		; DATA XREF: icu_56::RegexStaticSets::initGlobals(UErrorCode *)+22o

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Dh ; '='
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A, 0 ; icu_56::RegexStaticSets *	icu_56::RegexStaticSets::gStaticSets
		jz	short loc_21C8
		mov	eax, ds:?__LINE__Var@?1??initStaticSets@@9@4JA@0908e1e8
		add	eax, 1
		mov	esi, esp
		push	eax		; Line
		push	offset ??_C@_1FI@DKHOPFGI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; "d:\\mozilla\\intl\\icu\\source\\i18n\\r"...
		push	offset ??_C@_1EE@EPMGHOMG@?$AAR?$AAe?$AAg?$AAe?$AAx?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?3?$AA?3?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5@ ;	"RegexStaticSets::gStaticSets == 0"
		call	dword ptr ds:__imp___wassert
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_21C8:				; CODE XREF: _initStaticSets+25j
		push	offset _regex_cleanup
		push	3
		call	_ucln_i18n_registerCleanup_56
		add	esp, 8
		mov	esi, esp
		push	418h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		cmp	[ebp+var_E0], 0
		jz	short loc_2214
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_E0] ; this
		call	??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z ; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode	*)
		mov	[ebp+var_F4], eax
		jmp	short loc_221E
; ---------------------------------------------------------------------------

loc_2214:				; CODE XREF: _initStaticSets+7Fj
		mov	[ebp+var_F4], 0

loc_221E:				; CODE XREF: _initStaticSets+96j
		mov	ecx, [ebp+var_F4]
		mov	[ebp+var_EC], ecx
		mov	edx, [ebp+var_EC]
		mov	ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A, edx ;	icu_56::RegexStaticSets	* icu_56::RegexStaticSets::gStaticSets
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_2294
		mov	eax, ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ;	icu_56::RegexStaticSets	* icu_56::RegexStaticSets::gStaticSets
		mov	[ebp+var_C8], eax
		mov	ecx, [ebp+var_C8]
		mov	[ebp+var_D4], ecx
		cmp	[ebp+var_D4], 0
		jz	short loc_2280
		push	1
		mov	ecx, [ebp+var_D4]
		call	??_GRegexStaticSets@icu_56@@QAEPAXI@Z ;	icu_56::RegexStaticSets::`scalar deleting destructor'(uint)
		mov	[ebp+var_F4], eax
		jmp	short loc_228A
; ---------------------------------------------------------------------------

loc_2280:				; CODE XREF: _initStaticSets+EDj
		mov	[ebp+var_F4], 0

loc_228A:				; CODE XREF: _initStaticSets+102j
		mov	ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A, 0 ; icu_56::RegexStaticSets *	icu_56::RegexStaticSets::gStaticSets

loc_2294:				; CODE XREF: _initStaticSets+CDj
		cmp	ds:?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A, 0 ; icu_56::RegexStaticSets *	icu_56::RegexStaticSets::gStaticSets
		jnz	short loc_22BB
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_22BB
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7

loc_22BB:				; CODE XREF: _initStaticSets+11Fj
					; _initStaticSets+134j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_initStaticSets	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 22D0h
		public ??_C@_1EE@EPMGHOMG@?$AAR?$AAe?$AAg?$AAe?$AAx?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?3?$AA?3?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5@
; wchar_t `string'
??_C@_1EE@EPMGHOMG@?$AAR?$AAe?$AAg?$AAe?$AAx?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?3?$AA?3?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5@:
					; DATA XREF: _initStaticSets+37o
		unicode	0, <RegexStaticSets::gStaticSets == 0>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2314h
		public ??_C@_1FI@DKHOPFGI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
; wchar_t `string'
??_C@_1FI@DKHOPFGI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@:
					; DATA XREF: _initStaticSets+32o
		unicode	0, <d:\mozilla\intl\icu\source\i18n\regexst.cpp>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 236Ch
		public ?__LINE__Var@?1??initStaticSets@@9@4JA@0908e1e8
?__LINE__Var@?1??initStaticSets@@9@4JA@0908e1e8	dd 10Eh	; DATA XREF: _initStaticSets+27r
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2370h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_regex_cleanup	proc near		; DATA XREF: _initStaticSets:loc_21C8o

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		call	?cleanup@RegexStaticSets@icu_56@@SACXZ ; icu_56::RegexStaticSets::cleanup(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_regex_cleanup	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 23A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __stdcall `vector constructor iterator'(void *, unsigned int, int, void * (__thiscall *)(void *))
		public ??_H@YGXPAXIHP6EPAX0@Z@Z
??_H@YGXPAXIHP6EPAX0@Z@Z proc near	; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+5Fp

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd

loc_23C6:				; CODE XREF: `vector constructor iterator'(void *,uint,int,void * (*)(void *))+41j
		mov	eax, [ebp+arg_8]
		sub	eax, 1
		mov	[ebp+arg_8], eax
		js	short loc_23EB
		mov	esi, esp
		mov	ecx, [ebp+arg_0]
		call	[ebp+arg_C]
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		add	eax, [ebp+arg_4]
		mov	[ebp+arg_0], eax
		jmp	short loc_23C6
; ---------------------------------------------------------------------------

loc_23EB:				; CODE XREF: `vector constructor iterator'(void *,uint,int,void * (*)(void *))+27j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
??_H@YGXPAXIHP6EPAX0@Z@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2404h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; [thunk]:public: virtual void * __thiscall icu_56::UnicodeSet::`vector	deleting destructor'`adjustor{4}' (unsigned int)
		public ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}o
		sub	ecx, 4
		jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z ; icu_56::UnicodeSet::`vector deleting	destructor'(uint)
??_EUnicodeSet@icu_56@@W3AEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; public: signed char __thiscall icu_56::RegexPattern::operator==(class	icu_56::RegexPattern const &)const
		extrn ??8RegexPattern@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::RegexPattern::operator!=(icu_56::RegexPattern const &)+2Ap
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::RegexPattern::operator!=(icu_56::RegexPattern const &)+42p
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+AAp ...
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$5+9p
					; __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$7+9p ...
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near
					; CODE XREF: __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$2+14p
					; icu_56::RegexStaticSets::~RegexStaticSets(void)+119p	...
		extrn _utext_openUChars_56:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+E6Cp
; __declspec(dllimport)	public:	class icu_56::UnicodeSet & __thiscall icu_56::UnicodeSet::operator=(class icu_56::UnicodeSet const &)
		extrn __imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+D5Cp
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+D5Cr
; _DWORD __thiscall icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeSet *__hidden	this, int, int)
		extrn __imp_??0UnicodeSet@icu_56@@QAE@HH@Z:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B60p
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+B60r
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+140p
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+24Cp ...
; _DWORD __thiscall icu_56::UnicodeString::~UnicodeString(icu_56::UnicodeString	*__hidden this)
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+EEp
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+23Bp ...
; _DWORD __thiscall icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeSet *__hidden	this, const struct icu_56::UnicodeString *, enum UErrorCode *)
		extrn __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+D5p
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+1BDp ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, signed __int8, const wchar_t *, int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+A2p
					; icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+17Ep ...
; void __stdcall `eh vector constructor	iterator'(void *, unsigned int, int, void (__thiscall *)(void *), void (__thiscall *)(void *))
		extrn ??_L@YGXPAXIHP6EX0@Z1@Z:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+7Fp
; __declspec(dllimport)	public:	__thiscall icu_56::UnicodeSet::UnicodeSet(void)
		extrn __imp_??0UnicodeSet@icu_56@@QAE@XZ:near
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+6Ar
; enum UErrorCode *icu_56::UnicodeSet::~UnicodeSet
		extrn __imp_??1UnicodeSet@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+D75p
					; __unwindfunclet$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z$4+Bp ...
		extrn ___security_cookie:near
					; DATA XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+2Er
					; icu_56::RegexStaticSets::~RegexStaticSets(void)+2Er
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z+23j
					; __ehhandler$??1RegexStaticSets@icu_56@@QAE@XZ+19j
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: icu_56::RegexStaticSets::RegexStaticSets(UErrorCode *)+F4Cp
					; __ehhandler$??0RegexStaticSets@icu_56@@QAE@PAW4UErrorCode@@@Z+Fp ...
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::UnicodeSet `RTTI Type Descriptor'o
					; .data:icu_56::UnicodeFilter `RTTI Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::UnicodeSet::`scalar	deleting destructor'(unsigned int)
		extrn ??_GUnicodeSet@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::UnicodeSet::`vector	deleting destructor'(unsigned int)
		extrn ??_EUnicodeSet@icu_56@@UAEPAXI@Z:near ; weak
					; CODE XREF: [thunk]:icu_56::UnicodeSet::`vector deleting destructor'`adjustor{4}' (uint)+3j
					; DATA XREF: .rdata:const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}o
; public: virtual void * __thiscall icu_56::UnicodeSet::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:0000170Co
; public: virtual class	icu_56::UnicodeFunctor * __thiscall icu_56::UnicodeSet::clone(void)const
		extrn ?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near
					; DATA XREF: .rdata:00001710o
; public: virtual class	icu_56::UnicodeMatcher * __thiscall icu_56::UnicodeFilter::toMatcher(void)const
		extrn ?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near
					; DATA XREF: .rdata:00001714o
; public: virtual class	icu_56::UnicodeReplacer	* __thiscall icu_56::UnicodeFunctor::toReplacer(void)const
		extrn ?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near
					; DATA XREF: .rdata:00001718o
; public: virtual void __thiscall icu_56::UnicodeFilter::setData(class icu_56::TransliterationRuleData const *)
		extrn ?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near
					; DATA XREF: .rdata:0000171Co
; public: virtual signed char __thiscall icu_56::UnicodeSet::contains(int)const
		extrn ?contains@UnicodeSet@icu_56@@UBECH@Z:near
					; DATA XREF: .rdata:00001720o
; public: virtual signed char __thiscall icu_56::UnicodeSet::operator==(class icu_56::UnicodeSet const &)const
		extrn ??8UnicodeSet@icu_56@@UBECABV01@@Z:near ;	DATA XREF: .rdata:00001724o
; public: virtual int __thiscall icu_56::UnicodeSet::hashCode(void)const
		extrn ?hashCode@UnicodeSet@icu_56@@UBEHXZ:near ; DATA XREF: .rdata:00001728o
; public: virtual int __thiscall icu_56::UnicodeSet::size(void)const
		extrn ?size@UnicodeSet@icu_56@@UBEHXZ:near ; DATA XREF:	.rdata:0000172Co
; public: virtual signed char __thiscall icu_56::UnicodeSet::isEmpty(void)const
		extrn ?isEmpty@UnicodeSet@icu_56@@UBECXZ:near ;	DATA XREF: .rdata:00001730o
; public: virtual signed char __thiscall icu_56::UnicodeSet::contains(int, int)const
		extrn ?contains@UnicodeSet@icu_56@@UBECHH@Z:near
					; DATA XREF: .rdata:00001734o
; public: virtual signed char __thiscall icu_56::UnicodeSet::containsAll(class icu_56::UnicodeSet const	&)const
		extrn ?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:near
					; DATA XREF: .rdata:00001738o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::add(int, int)
		extrn ?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:0000173Co
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::addAll(class icu_56::UnicodeSet const &)
		extrn ?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:00001740o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::retainAll(class icu_56::UnicodeSet const &)
		extrn ?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:00001744o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::complementAll(class	icu_56::UnicodeSet const &)
		extrn ?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:00001748o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::removeAll(class icu_56::UnicodeSet const &)
		extrn ?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:0000174Co
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::retain(int,	int)
		extrn ?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:00001750o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::remove(int,	int)
		extrn ?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:00001754o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::complement(int, int)
		extrn ?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:00001758o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::complement(void)
		extrn ?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:0000175Co
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::clear(void)
		extrn ?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:00001760o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::removeAllStrings(void)
		extrn ?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:00001764o
; public: virtual int __thiscall icu_56::UnicodeSet::getRangeCount(void)const
		extrn ?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:near
					; DATA XREF: .rdata:00001768o
; public: virtual int __thiscall icu_56::UnicodeSet::getRangeStart(int)const
		extrn ?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:near
					; DATA XREF: .rdata:0000176Co
; public: virtual int __thiscall icu_56::UnicodeSet::getRangeEnd(int)const
		extrn ?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:near
					; DATA XREF: .rdata:00001770o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::compact(void)
		extrn ?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:00001774o
; public: virtual enum	icu_56::UMatchDegree __thiscall	icu_56::UnicodeSet::matches(class icu_56::Replaceable const &, int &, int, signed char)
		extrn ?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near
					; DATA XREF: .rdata:000016F4o
; public: virtual class	icu_56::UnicodeString &	__thiscall icu_56::UnicodeSet::toPattern(class icu_56::UnicodeString &,	signed char)const
		extrn ?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near
					; DATA XREF: .rdata:000016F8o
; private: virtual signed char __thiscall icu_56::UnicodeSet::matchesIndexValue(unsigned char)const
		extrn ?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:near
					; DATA XREF: .rdata:000016FCo
; public: virtual void __thiscall icu_56::UnicodeSet::addMatchSetTo(class icu_56::UnicodeSet &)const
		extrn ?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:near
					; DATA XREF: .rdata:00001700o
; void *__cdecl	memset(void *Dst, int Val, size_t Size)
		extrn _memset:near	; CODE XREF: icu_56::Regex8BitSet::Regex8BitSet(void)+2Bp
		extrn _utext_close_56:near
					; CODE XREF: icu_56::RegexStaticSets::~RegexStaticSets(void)+DAp
; void __cdecl icu_56::umtx_initImplPostInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ap
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ar
; signed __int8	__cdecl	icu_56::umtx_initImplPreInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fp
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fr
; LONG __stdcall InterlockedCompareExchange(volatile LONG *Destination,	LONG Exchange, LONG Comperand)
		extrn __imp__InterlockedCompareExchange@12:near
					; CODE XREF: icu_56::umtx_loadAcquire(long volatile &)+28p
					; DATA XREF: icu_56::umtx_loadAcquire(long volatile &)+28r
		extrn _ucln_i18n_registerCleanup_56:near ; CODE	XREF: _initStaticSets+53p
; void __cdecl __wassert(const wchar_t *Message, const wchar_t *File, unsigned int Line)
		extrn __imp___wassert:near ; CODE XREF:	_initStaticSets+3Cp
					; DATA XREF: _initStaticSets+3Cr


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	384904228437ED5EB020130308767F21
; Input	CRC32 :	1DE36FDC

; File Name   :	D:\compspace\objfiles\firefox\i18n\strmatch.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	dword_200
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FC+4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	off_800
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_FFE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd 2000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	dword_1C0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_DFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	byte public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
; char `public:	static void * __cdecl icu_56::StringMatcher::getStaticClassID(void)'::`2'::classID
?classID@?1??getStaticClassID@StringMatcher@icu_56@@SAPAXXZ@4DA	db ?
					; DATA XREF: icu_56::StringMatcher::getStaticClassID(void)+1Eo
		align 4
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp

loc_FF:					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 134h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 138h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near		; CODE XREF: icu_56::UnicodeReplacer::`scalar deleting destructor'(uint)+37p
					; icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+75p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 170h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::UnicodeReplacer::UnicodeReplacer(icu_56::UnicodeReplacer *__hidden this)
		public ??0UnicodeReplacer@icu_56@@QAE@XZ
??0UnicodeReplacer@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+7Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7UnicodeReplacer@icu_56@@6B@	; const	icu_56::UnicodeReplacer::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??0UnicodeReplacer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A8h
		dd offset ??_R4UnicodeReplacer@icu_56@@6B@ ; const icu_56::UnicodeReplacer::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7UnicodeReplacer@icu_56@@6B@
; const	icu_56::UnicodeReplacer::`vftable'
??_7UnicodeReplacer@icu_56@@6B@	dd offset ??_EUnicodeReplacer@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::UnicodeReplacer::UnicodeReplacer(void)+26o
					; icu_56::UnicodeReplacer::UnicodeReplacer(icu_56::UnicodeReplacer const &)+26o
					; icu_56::UnicodeReplacer::`vector deleting destructor'(uint)
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1BCh
		public ??_R4UnicodeReplacer@icu_56@@6B@
; const	icu_56::UnicodeReplacer::`RTTI Complete	Object Locator'
??_R4UnicodeReplacer@icu_56@@6B@ dd 0	; DATA XREF: .rdata:000001A8o
dword_1C0	dd 2 dup(0)		; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		dd offset ??_R0?AVUnicodeReplacer@icu_56@@@8 ; icu_56::UnicodeReplacer `RTTI Type Descriptor'
		dd offset ??_R3UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1D0h
		public ??_R0?AVUnicodeReplacer@icu_56@@@8
; class	icu_56::UnicodeReplacer	`RTTI Type Descriptor'
??_R0?AVUnicodeReplacer@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000001C8o
					; .rdata$r:icu_56::UnicodeReplacer::`RTTI Base Class Descriptor	at (0,-1,0,64)'o ...
					; const	type_info::`vftable'
		align 8
a_?avunicoderep	db '.?AVUnicodeReplacer@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F8h
		public ??_R3UnicodeReplacer@icu_56@@8
; icu_56::UnicodeReplacer::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeReplacer@icu_56@@8 dd 2 dup(0) ; DATA XREF:	.rdata$r:000001CCo
					; .rdata$r:00000228o ...
dword_200	dd 1			; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco
		dd offset ??_R2UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 208h
		public ??_R2UnicodeReplacer@icu_56@@8
; icu_56::UnicodeReplacer::`RTTI Base Class Array'
??_R2UnicodeReplacer@icu_56@@8 dd offset ??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8
					; DATA XREF: .rdata$r:00000204o
					; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 210h
		public ??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8
; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8	dd offset ??_R0?AVUnicodeReplacer@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeReplacer::`RTTI Base Class	Array'o
					; icu_56::UnicodeReplacer `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 22Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::UnicodeReplacer::UnicodeReplacer(icu_56::UnicodeReplacer *this, const struct icu_56::UnicodeReplacer *)
		public ??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z	proc near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+C8p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7UnicodeReplacer@icu_56@@6B@	; const	icu_56::UnicodeReplacer::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 264h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeReplacer	& __thiscall icu_56::UnicodeReplacer::operator=(class icu_56::UnicodeReplacer const &)
		public ??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 294h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UnicodeReplacer::`scalar deleting destructor'(unsigned int)
		public ??_GUnicodeReplacer@icu_56@@UAEPAXI@Z
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2D3
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		add	esp, 4

loc_2D3:				; CODE XREF: icu_56::UnicodeReplacer::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UnicodeReplacer::`vector deleting destructor'(unsigned int)
		public ??_EUnicodeReplacer@icu_56@@UAEPAXI@Z
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::UnicodeReplacer::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_34D
		push	offset ??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	4
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_345
		mov	eax, [ebp+var_8]
		sub	eax, 4
		push	eax		; void *
		call	??_V@YAXPAX@Z	; operator delete[](void *)
		add	esp, 4

loc_345:				; CODE XREF: icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_36C
; ---------------------------------------------------------------------------

loc_34D:				; CODE XREF: icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_369
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3@YAXPAX@Z	; operator delete(void *)
		add	esp, 4

loc_369:				; CODE XREF: icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+6Fj
		mov	eax, [ebp+var_8]

loc_36C:				; CODE XREF: icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+5Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 384h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete[](void *)
		public ??_V@YAXPAX@Z
??_V@YAXPAX@Z	proc near		; CODE XREF: icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+51p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??_V@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	icu_56::StringMatcher::getStaticClassID()
		public ?getStaticClassID@StringMatcher@icu_56@@SAPAXXZ
?getStaticClassID@StringMatcher@icu_56@@SAPAXXZ	proc near
					; CODE XREF: icu_56::StringMatcher::getDynamicClassID(void)+23p

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, offset ?classID@?1??getStaticClassID@StringMatcher@icu_56@@SAPAXXZ@4DA ; char `icu_56::StringMatcher::getStaticClassID(void)'::`2'::classID
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getStaticClassID@StringMatcher@icu_56@@SAPAXXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__thiscall icu_56::StringMatcher::getDynamicClassID(icu_56::StringMatcher *__hidden this)
		public ?getDynamicClassID@StringMatcher@icu_56@@UBEPAXXZ
?getDynamicClassID@StringMatcher@icu_56@@UBEPAXXZ proc near ; DATA XREF: .rdata:000005ECo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'

loc_3FC:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	?getStaticClassID@StringMatcher@icu_56@@SAPAXXZ	; icu_56::StringMatcher::getStaticClassID(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getDynamicClassID@StringMatcher@icu_56@@UBEPAXXZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 420h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher *this, const struct icu_56::UnicodeString *, int, int, int, const struct	icu_56::TransliterationRuleData	*)
		public ??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z
??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z proc	near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??0UnicodeFunctor@icu_56@@QAE@XZ ; icu_56::UnicodeFunctor::UnicodeFunctor(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	ecx, [ebp+var_14]
		add	ecx, 4		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeMatcher@icu_56@@QAE@XZ ; icu_56::UnicodeMatcher::UnicodeMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		call	??0UnicodeReplacer@icu_56@@QAE@XZ ; icu_56::UnicodeReplacer::UnicodeReplacer(void)
		mov	byte ptr [ebp+var_4], 2
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7StringMatcher@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeFunctor'}
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4], offset ??_7StringMatcher@icu_56@@6BUnicodeMatcher@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+8], offset ??_7StringMatcher@icu_56@@6BUnicodeReplacer@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeReplacer'}
		mov	ecx, [ebp+var_14]
		add	ecx, 0Ch	; this
		mov	esi, esp
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 3
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_10]
		mov	[eax+4Ch], ecx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_C]
		mov	[eax+50h], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+54h], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+58h], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		add	eax, 0Ch
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	14h
??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 550h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$0 proc near
					; DATA XREF: .xdata$x:00000604o
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1UnicodeFunctor@icu_56@@UAE@XZ ; icu_56::UnicodeFunctor::~UnicodeFunctor(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$1 proc near
					; DATA XREF: .xdata$x:0000060Co
		mov	ecx, [ebp-14h]
		add	ecx, 4		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeMatcher@icu_56@@UAE@XZ ; icu_56::UnicodeMatcher::~UnicodeMatcher(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$2 proc near
					; DATA XREF: .xdata$x:00000614o
		mov	ecx, [ebp-14h]
		add	ecx, 8		; this
		jmp	??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$2 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$3 proc near
					; DATA XREF: .xdata$x:0000061Co
		mov	ecx, [ebp-14h]
		add	ecx, 0Ch	; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$3 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z proc near
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5B8h
		dd offset ??_R4StringMatcher@icu_56@@6BUnicodeReplacer@1@@ ; const icu_56::StringMatcher::`RTTI	Complete Object	Locator'{for `icu_56::UnicodeReplacer'}
		public ??_7StringMatcher@icu_56@@6BUnicodeReplacer@1@@
; const	icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeReplacer'}
??_7StringMatcher@icu_56@@6BUnicodeReplacer@1@@	dd offset ??_EStringMatcher@icu_56@@W7AEPAXI@Z
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+99o
					; icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher const &)+E7o ...
					; [thunk]:icu_56::StringMatcher::`vector deleting destructor'`adjustor{8}' (uint)
		dd offset ?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z ;	icu_56::StringMatcher::replace(icu_56::Replaceable &,int,int,int &)
		dd offset ?toReplacerPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::StringMatcher::toReplacerPattern(icu_56::UnicodeString &,signed char)
		dd offset ?addReplacementSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z ; icu_56::StringMatcher::addReplacementSetTo(icu_56::UnicodeSet &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5CCh
		dd offset ??_R4StringMatcher@icu_56@@6BUnicodeMatcher@1@@ ; const icu_56::StringMatcher::`RTTI Complete	Object Locator'{for `icu_56::UnicodeMatcher'}
		public ??_7StringMatcher@icu_56@@6BUnicodeMatcher@1@@
; const	icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeMatcher'}
??_7StringMatcher@icu_56@@6BUnicodeMatcher@1@@ dd offset ??_EStringMatcher@icu_56@@W3AEPAXI@Z
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+8Fo
					; icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher const &)+DDo ...
					; [thunk]:icu_56::StringMatcher::`vector deleting destructor'`adjustor{4}' (uint)
		dd offset ?matches@StringMatcher@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z	; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)
		dd offset ?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)
		dd offset ?matchesIndexValue@StringMatcher@icu_56@@UBECE@Z ; icu_56::StringMatcher::matchesIndexValue(uchar)
		dd offset ?addMatchSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z ;	icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet	&)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5E4h
		dd offset ??_R4StringMatcher@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::StringMatcher::`RTTI Complete	Object Locator'{for `icu_56::UnicodeFunctor'}
		public ??_7StringMatcher@icu_56@@6BUnicodeFunctor@1@@
; const	icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeFunctor'}
??_7StringMatcher@icu_56@@6BUnicodeFunctor@1@@ dd offset ??_EStringMatcher@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+86o
					; icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher const &)+D4o ...
					; icu_56::StringMatcher::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@StringMatcher@icu_56@@UBEPAXXZ ; icu_56::StringMatcher::getDynamicClassID(void)
		dd offset ?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ ; icu_56::StringMatcher::clone(void)
		dd offset ?toMatcher@StringMatcher@icu_56@@UBEPAVUnicodeMatcher@2@XZ ; icu_56::StringMatcher::toMatcher(void)
		dd offset ?toReplacer@StringMatcher@icu_56@@UBEPAVUnicodeReplacer@2@XZ ; icu_56::StringMatcher::toReplacer(void)
		dd offset ?setData@StringMatcher@icu_56@@UAEXPBVTransliterationRuleData@2@@Z ; icu_56::StringMatcher::setData(icu_56::TransliterationRuleData const *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 600h
__unwindtable$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000628o
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$0
		dd 0
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$1
		dd 1
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$2
		dd 2
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$3
__ehfuncinfo$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z	dd 19930522h, 4
					; DATA XREF: __ehhandler$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z+14o
		dd offset __unwindtable$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 644h
		public ??_R4StringMatcher@icu_56@@6BUnicodeFunctor@1@@
; const	icu_56::StringMatcher::`RTTI Complete Object Locator'{for `icu_56::UnicodeFunctor'}
??_R4StringMatcher@icu_56@@6BUnicodeFunctor@1@@	dd 3 dup(0) ; DATA XREF: .rdata:000005E4o
		dd offset ??_R0?AVStringMatcher@icu_56@@@8 ; icu_56::StringMatcher `RTTI Type Descriptor'
		dd offset ??_R3StringMatcher@icu_56@@8 ; icu_56::StringMatcher::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 658h
		public ??_R0?AVStringMatcher@icu_56@@@8
; class	icu_56::StringMatcher `RTTI Type Descriptor'
??_R0?AVStringMatcher@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00000650o
					; .rdata$r:icu_56::StringMatcher::`RTTI	Base Class Descriptor at (0,-1,0,64)'o ...
					; const	type_info::`vftable'
		align 10h
a_?avstringmatc	db '.?AVStringMatcher@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 67Ch
		public ??_R3StringMatcher@icu_56@@8
; icu_56::StringMatcher::`RTTI Class Hierarchy Descriptor'
??_R3StringMatcher@icu_56@@8 dd	0	; DATA XREF: .rdata$r:00000654o
					; .rdata$r:000006C0o ...
		dd 1, 6
		dd offset ??_R2StringMatcher@icu_56@@8 ; icu_56::StringMatcher::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 68Ch
		public ??_R2StringMatcher@icu_56@@8
; icu_56::StringMatcher::`RTTI Base Class Array'
??_R2StringMatcher@icu_56@@8 dd	offset ??_R1A@?0A@EA@StringMatcher@icu_56@@8
					; DATA XREF: .rdata$r:00000688o
					; icu_56::StringMatcher::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		dd offset ??_R13?0A@EA@UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4,-1,0,64)'
		dd offset ??_R17?0A@EA@UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor	at (8,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 6A8h
		public ??_R1A@?0A@EA@StringMatcher@icu_56@@8
; icu_56::StringMatcher::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@StringMatcher@icu_56@@8 dd offset	??_R0?AVStringMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringMatcher::`RTTI Base	Class Array'o
					; icu_56::StringMatcher	`RTTI Type Descriptor'
		dd 5, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3StringMatcher@icu_56@@8 ; icu_56::StringMatcher::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 6C4h
		public ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 dd offset ??_R0?AVUnicodeFunctor@icu_56@@@8
					; DATA XREF: .rdata$r:00000690o
					; .rdata$r:icu_56::UnicodeFunctor::`RTTI Base Class Array'o
					; icu_56::UnicodeFunctor `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeFunctor@icu_56@@8	; icu_56::UnicodeFunctor::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 6E0h
		public ??_R0?AVUnicodeFunctor@icu_56@@@8
; class	icu_56::UnicodeFunctor `RTTI Type Descriptor'
??_R0?AVUnicodeFunctor@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avunicodefun	db '.?AVUnicodeFunctor@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 704h
		public ??_R3UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Class Hierarchy	Descriptor'
??_R3UnicodeFunctor@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:000006DCo
		dd 3
		dd offset ??_R2UnicodeFunctor@icu_56@@8	; icu_56::UnicodeFunctor::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 714h
		public ??_R2UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Base Class Array'
??_R2UnicodeFunctor@icu_56@@8 dd offset	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
					; DATA XREF: .rdata$r:00000710o
					; icu_56::UnicodeFunctor::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 724h
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:00000694o
					; .rdata$r:00000718o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 740h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 760h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:0000073Co
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 770h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:0000076Co
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 77Ch
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00000698o
					; .rdata$r:0000071Co ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 798h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7B8h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000794o
					; .rdata$r:000007E8o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7C8h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:000007C4o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7D0h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 7ECh
		public ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 dd offset	??_R0?AVUnicodeMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:0000069Co
					; icu_56::UnicodeMatcher `RTTI Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
off_800		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
					; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 808h
		public ??_R0?AVUnicodeMatcher@icu_56@@@8
; class	icu_56::UnicodeMatcher `RTTI Type Descriptor'
??_R0?AVUnicodeMatcher@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avunicodemat	db '.?AVUnicodeMatcher@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 82Ch
		public ??_R3UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
??_R3UnicodeMatcher@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00000804o
					; .rdata$r:0000085Co
		dd 1
		dd offset ??_R2UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 83Ch
		public ??_R2UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Array'
??_R2UnicodeMatcher@icu_56@@8 dd offset	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
					; DATA XREF: .rdata$r:00000838o
					; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 844h
		public ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 dd offset ??_R0?AVUnicodeMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Array'o
					; icu_56::UnicodeMatcher `RTTI Type Descriptor'
		align 10h
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 860h
		public ??_R17?0A@EA@UnicodeReplacer@icu_56@@8
; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (8, -1, 0, 64)'
??_R17?0A@EA@UnicodeReplacer@icu_56@@8 dd offset ??_R0?AVUnicodeReplacer@icu_56@@@8
					; DATA XREF: .rdata$r:000006A0o
					; icu_56::UnicodeReplacer `RTTI	Type Descriptor'
		align 8
		dd 8, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 87Ch
		public ??_R4StringMatcher@icu_56@@6BUnicodeMatcher@1@@
; const	icu_56::StringMatcher::`RTTI Complete Object Locator'{for `icu_56::UnicodeMatcher'}
??_R4StringMatcher@icu_56@@6BUnicodeMatcher@1@@	dd 0 ; DATA XREF: .rdata:000005CCo
		dd 4, 0
		dd offset ??_R0?AVStringMatcher@icu_56@@@8 ; icu_56::StringMatcher `RTTI Type Descriptor'
		dd offset ??_R3StringMatcher@icu_56@@8 ; icu_56::StringMatcher::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 890h
		public ??_R4StringMatcher@icu_56@@6BUnicodeReplacer@1@@
; const	icu_56::StringMatcher::`RTTI Complete Object Locator'{for `icu_56::UnicodeReplacer'}
??_R4StringMatcher@icu_56@@6BUnicodeReplacer@1@@ dd 0 ;	DATA XREF: .rdata:000005B8o
		dd 8, 0
		dd offset ??_R0?AVStringMatcher@icu_56@@@8 ; icu_56::StringMatcher `RTTI Type Descriptor'
		dd offset ??_R3StringMatcher@icu_56@@8 ; icu_56::StringMatcher::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringMatcher::`scalar deleting destructor'(unsigned int)
		public ??_GStringMatcher@icu_56@@UAEPAXI@Z
??_GStringMatcher@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1StringMatcher@icu_56@@UAE@XZ	; icu_56::StringMatcher::~StringMatcher(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_8ED
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_8ED:				; CODE XREF: icu_56::StringMatcher::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GStringMatcher@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 908h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher *this, const struct icu_56::StringMatcher *)
		public ??0StringMatcher@icu_56@@QAE@ABV01@@Z
??0StringMatcher@icu_56@@QAE@ABV01@@Z proc near
					; CODE XREF: icu_56::StringMatcher::clone(void)+76p

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0StringMatcher@icu_56@@QAE@ABV01@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UnicodeFunctor	*
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeFunctor::UnicodeFunctor(icu_56::UnicodeFunctor const	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		cmp	[ebp+arg_0], 0
		jz	short loc_97B
		mov	eax, [ebp+arg_0]
		add	eax, 4
		mov	[ebp+var_DC], eax
		jmp	short loc_985
; ---------------------------------------------------------------------------

loc_97B:				; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+63j
		mov	[ebp+var_DC], 0

loc_985:				; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+71j
		mov	esi, esp
		mov	ecx, [ebp+var_DC]
		push	ecx		; struct icu_56::UnicodeMatcher	*
		mov	ecx, [ebp+var_14]
		add	ecx, 4		; this
		call	dword ptr ds:__imp_??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeMatcher::UnicodeMatcher(icu_56::UnicodeMatcher const	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		cmp	[ebp+arg_0], 0
		jz	short loc_9B9
		mov	eax, [ebp+arg_0]
		add	eax, 8
		mov	[ebp+var_DC], eax
		jmp	short loc_9C3
; ---------------------------------------------------------------------------

loc_9B9:				; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+A1j
		mov	[ebp+var_DC], 0

loc_9C3:				; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+AFj
		mov	ecx, [ebp+var_DC]
		push	ecx		; struct icu_56::UnicodeReplacer *
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		call	??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z	; icu_56::UnicodeReplacer::UnicodeReplacer(icu_56::UnicodeReplacer const &)
		mov	byte ptr [ebp+var_4], 2
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7StringMatcher@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeFunctor'}
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4], offset ??_7StringMatcher@icu_56@@6BUnicodeMatcher@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+8], offset ??_7StringMatcher@icu_56@@6BUnicodeReplacer@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeReplacer'}
		mov	eax, [ebp+arg_0]
		add	eax, 0Ch
		mov	esi, esp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_14]
		add	ecx, 0Ch	; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z ; icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4Ch]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+50h]
		mov	[eax+50h], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+54h]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+58h]
		mov	[eax+58h], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0StringMatcher@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0A70h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$0	proc near
					; DATA XREF: .xdata$x:00000AC4o
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1UnicodeFunctor@icu_56@@UAE@XZ ; icu_56::UnicodeFunctor::~UnicodeFunctor(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$0	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$1	proc near
					; DATA XREF: .xdata$x:00000ACCo
		mov	ecx, [ebp-14h]
		add	ecx, 4		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeMatcher@icu_56@@UAE@XZ ; icu_56::UnicodeMatcher::~UnicodeMatcher(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$1	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$2	proc near
					; DATA XREF: .xdata$x:00000AD4o
		mov	ecx, [ebp-14h]
		add	ecx, 8		; this
		jmp	??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
__unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$2	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0StringMatcher@icu_56@@QAE@ABV01@@Z proc near
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0E0h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0StringMatcher@icu_56@@QAE@ABV01@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0StringMatcher@icu_56@@QAE@ABV01@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0AC0h
__unwindtable$??0StringMatcher@icu_56@@QAE@ABV01@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000AE0o
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$0
		dd 0
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$1
		dd 1
		dd offset __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0StringMatcher@icu_56@@QAE@ABV01@@Z dd 19930522h, 3
					; DATA XREF: __ehhandler$??0StringMatcher@icu_56@@QAE@ABV01@@Z+14o
		dd offset __unwindtable$??0StringMatcher@icu_56@@QAE@ABV01@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0AFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringMatcher::~StringMatcher(icu_56::StringMatcher	*__hidden this)
		public ??1StringMatcher@icu_56@@UAE@XZ
??1StringMatcher@icu_56@@UAE@XZ	proc near
					; CODE XREF: icu_56::StringMatcher::`scalar deleting destructor'(uint)+26p

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1StringMatcher@icu_56@@UAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7StringMatcher@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeFunctor'}
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4], offset ??_7StringMatcher@icu_56@@6BUnicodeMatcher@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeMatcher'}
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+8], offset ??_7StringMatcher@icu_56@@6BUnicodeReplacer@1@@ ; const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeReplacer'}
		mov	[ebp+var_4], 2
		mov	ecx, [ebp+var_14]
		add	ecx, 0Ch	; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		mov	ecx, [ebp+var_14]
		add	ecx, 8		; this
		call	??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
		mov	byte ptr [ebp+var_4], 0
		mov	ecx, [ebp+var_14]
		add	ecx, 4		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeMatcher@icu_56@@UAE@XZ ; icu_56::UnicodeMatcher::~UnicodeMatcher(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		mov	ecx, [ebp+var_14] ; this
		call	dword ptr ds:__imp_??1UnicodeFunctor@icu_56@@UAE@XZ ; icu_56::UnicodeFunctor::~UnicodeFunctor(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1StringMatcher@icu_56@@UAE@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0BD8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$0 proc near ; DATA XREF: .xdata$x:00000C2Co
		mov	esi, esp
		mov	ecx, [ebp-14h]	; this
		call	dword ptr ds:__imp_??1UnicodeFunctor@icu_56@@UAE@XZ ; icu_56::UnicodeFunctor::~UnicodeFunctor(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$1 proc near ; DATA XREF: .xdata$x:00000C34o
		mov	ecx, [ebp-14h]
		add	ecx, 4		; this
		mov	esi, esp
		call	dword ptr ds:__imp_??1UnicodeMatcher@icu_56@@UAE@XZ ; icu_56::UnicodeMatcher::~UnicodeMatcher(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$2 proc near ; DATA XREF: .xdata$x:00000C3Co
		mov	ecx, [ebp-14h]
		add	ecx, 8		; this
		jmp	??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer(void)
__unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$2 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1StringMatcher@icu_56@@UAE@XZ proc near
					; DATA XREF: icu_56::StringMatcher::~StringMatcher(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1StringMatcher@icu_56@@UAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1StringMatcher@icu_56@@UAE@XZ endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0C28h
__unwindtable$??1StringMatcher@icu_56@@UAE@XZ dd 0FFFFFFFFh ; DATA XREF: .xdata$x:00000C48o
		dd offset __unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$0
		dd 0
		dd offset __unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$1
		dd 1
		dd offset __unwindfunclet$??1StringMatcher@icu_56@@UAE@XZ$2
__ehfuncinfo$??1StringMatcher@icu_56@@UAE@XZ dd	19930522h, 3
					; DATA XREF: __ehhandler$??1StringMatcher@icu_56@@UAE@XZ+14o
		dd offset __unwindtable$??1StringMatcher@icu_56@@UAE@XZ
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeFunctor	*__thiscall icu_56::StringMatcher::clone(icu_56::StringMatcher *__hidden this)
		public ?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ
?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ proc near
					; DATA XREF: .rdata:000005F0o

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		push	5Ch ; '\'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_E0], 0
		jz	short loc_CE7
		mov	eax, [ebp+var_14]
		push	eax		; struct icu_56::StringMatcher *
		mov	ecx, [ebp+var_E0] ; this
		call	??0StringMatcher@icu_56@@QAE@ABV01@@Z ;	icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher const &)
		mov	[ebp+var_F4], eax
		jmp	short loc_CF1
; ---------------------------------------------------------------------------

loc_CE7:				; CODE XREF: icu_56::StringMatcher::clone(void)+6Aj
		mov	[ebp+var_F4], 0

loc_CF1:				; CODE XREF: icu_56::StringMatcher::clone(void)+81j
		mov	ecx, [ebp+var_F4]
		mov	[ebp+var_EC], ecx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_EC]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0D2Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0 proc near
					; DATA XREF: .xdata$x:00000D68o
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ proc	near
					; DATA XREF: icu_56::StringMatcher::clone(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ
		jmp	___CxxFrameHandler3
__ehhandler$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0D64h
__unwindtable$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ dd	0FFFFFFFFh
					; DATA XREF: .xdata$x:00000D74o
		dd offset __unwindfunclet$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0
__ehfuncinfo$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ+14o
		dd offset __unwindtable$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeMatcher	*__thiscall icu_56::StringMatcher::toMatcher(icu_56::StringMatcher *__hidden this)
		public ?toMatcher@StringMatcher@icu_56@@UBEPAVUnicodeMatcher@2@XZ
?toMatcher@StringMatcher@icu_56@@UBEPAVUnicodeMatcher@2@XZ proc	near
					; DATA XREF: .rdata:000005F4o

var_E8		= dword	ptr -0E8h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E8]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_DCD
		mov	eax, [ebp+var_14]
		add	eax, 4
		mov	[ebp+var_E8], eax
		jmp	short loc_DD7
; ---------------------------------------------------------------------------

loc_DCD:				; CODE XREF: icu_56::StringMatcher::toMatcher(void)+2Dj
		mov	[ebp+var_E8], 0

loc_DD7:				; CODE XREF: icu_56::StringMatcher::toMatcher(void)+3Bj
		mov	ecx, [ebp+var_E8]
		mov	[ebp+var_20], ecx
		mov	eax, [ebp+var_20]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?toMatcher@StringMatcher@icu_56@@UBEPAVUnicodeMatcher@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeReplacer *__thiscall icu_56::StringMatcher::toReplacer(icu_56::StringMatcher *__hidden this)
		public ?toReplacer@StringMatcher@icu_56@@UBEPAVUnicodeReplacer@2@XZ
?toReplacer@StringMatcher@icu_56@@UBEPAVUnicodeReplacer@2@XZ proc near
					; DATA XREF: .rdata:000005F8o

var_E8		= dword	ptr -0E8h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E8]

loc_DFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_E29
		mov	eax, [ebp+var_14]
		add	eax, 8
		mov	[ebp+var_E8], eax
		jmp	short loc_E33
; ---------------------------------------------------------------------------

loc_E29:				; CODE XREF: icu_56::StringMatcher::toReplacer(void)+2Dj
		mov	[ebp+var_E8], 0

loc_E33:				; CODE XREF: icu_56::StringMatcher::toReplacer(void)+3Bj
		mov	ecx, [ebp+var_E8]
		mov	[ebp+var_20], ecx
		mov	eax, [ebp+var_20]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?toReplacer@StringMatcher@icu_56@@UBEPAVUnicodeReplacer@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E48h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual enum	icu_56::UMatchDegree __thiscall	icu_56::StringMatcher::matches(class icu_56::Replaceable const &, int &, int, signed char)
		public ?matches@StringMatcher@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
?matches@StringMatcher@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z proc near
					; DATA XREF: .rdata:000005D4o

var_12C		= byte ptr -12Ch
var_68		= dword	ptr -68h
var_5C		= dword	ptr -5Ch
var_50		= word ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= word ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= byte ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 12Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_12C]
		mov	ecx, 4Bh ; 'K'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		mov	[ebp+var_20], ecx
		mov	eax, [ebp+arg_8]
		cmp	eax, [ebp+var_20]
		jge	loc_F87
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		sub	eax, 1
		mov	[ebp+var_14], eax
		jmp	short loc_EA5
; ---------------------------------------------------------------------------

loc_E9C:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char):loc_F5Aj
		mov	eax, [ebp+var_14]
		sub	eax, 1
		mov	[ebp+var_14], eax

loc_EA5:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+52j
		cmp	[ebp+var_14], 0
		jl	loc_F5F
		mov	esi, esp
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2C], ax
		movzx	eax, [ebp+var_2C]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+48h]	; this
		call	?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z ; icu_56::TransliterationRuleData::lookupMatcher(int)
		mov	[ebp+var_38], eax
		cmp	[ebp+var_38], 0
		jnz	short loc_F22
		mov	eax, [ebp+var_20]
		cmp	eax, [ebp+arg_8]
		jle	short loc_F19
		movzx	esi, [ebp+var_2C]
		mov	edi, esp
		mov	eax, [ebp+var_20]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?charAt@Replaceable@icu_56@@QBE_WH@Z	; icu_56::Replaceable::charAt(int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		movzx	ecx, ax
		cmp	esi, ecx
		jnz	short loc_F19
		mov	eax, [ebp+var_20]
		sub	eax, 1
		mov	[ebp+var_20], eax
		jmp	short loc_F20
; ---------------------------------------------------------------------------

loc_F19:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+A3j
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+C4j
		xor	eax, eax
		jmp	loc_109C
; ---------------------------------------------------------------------------

loc_F20:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+CFj
		jmp	short loc_F5A
; ---------------------------------------------------------------------------

loc_F22:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+9Bj
		mov	esi, esp
		movzx	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		lea	edx, [ebp+var_20]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_38]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_38]
		mov	eax, [edx+4]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_44], eax
		cmp	[ebp+var_44], 2
		jz	short loc_F5A
		mov	eax, [ebp+var_44]
		jmp	loc_109C
; ---------------------------------------------------------------------------

loc_F5A:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char):loc_F20j
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+108j
		jmp	loc_E9C
; ---------------------------------------------------------------------------

loc_F5F:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+61j
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+50h], 0
		jge	short loc_F82
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	ecx, [ebp+var_8]
		mov	[ecx+50h], eax
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		add	ecx, 1
		mov	edx, [ebp+var_8]
		mov	[edx+54h], ecx

loc_F82:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+11Ej
		jmp	loc_108F
; ---------------------------------------------------------------------------

loc_F87:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+31j
		mov	[ebp+var_14], 0
		jmp	short loc_F99
; ---------------------------------------------------------------------------

loc_F90:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char):loc_1076j
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_F99:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+146j
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_14], eax
		jge	loc_107B
		movsx	eax, [ebp+arg_C]
		test	eax, eax
		jz	short loc_FD1
		mov	eax, [ebp+var_20]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_FD1
		mov	eax, 1
		jmp	loc_109C
; ---------------------------------------------------------------------------

loc_FD1:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+175j
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+17Dj
		mov	esi, esp
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50], ax
		movzx	eax, [ebp+var_50]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+48h]	; this
		call	?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z ; icu_56::TransliterationRuleData::lookupMatcher(int)

loc_FFE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		mov	[ebp+var_5C], eax
		cmp	[ebp+var_5C], 0
		jnz	short loc_1041
		mov	eax, [ebp+var_20]
		cmp	eax, [ebp+arg_8]
		jge	short loc_103B
		movzx	esi, [ebp+var_50]
		mov	edi, esp
		mov	eax, [ebp+var_20]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?charAt@Replaceable@icu_56@@QBE_WH@Z	; icu_56::Replaceable::charAt(int)
		cmp	edi, esp
		call	__RTC_CheckEsp
		movzx	ecx, ax
		cmp	esi, ecx
		jnz	short loc_103B
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax
		jmp	short loc_103F
; ---------------------------------------------------------------------------

loc_103B:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+1C5j
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+1E6j
		xor	eax, eax
		jmp	short loc_109C
; ---------------------------------------------------------------------------

loc_103F:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+1F1j
		jmp	short loc_1076
; ---------------------------------------------------------------------------

loc_1041:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+1BDj
		mov	esi, esp
		movzx	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		lea	edx, [ebp+var_20]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_5C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_5C]
		mov	eax, [edx+4]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_68], eax
		cmp	[ebp+var_68], 2
		jz	short loc_1076
		mov	eax, [ebp+var_68]
		jmp	short loc_109C
; ---------------------------------------------------------------------------

loc_1076:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char):loc_103Fj
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+227j
		jmp	loc_F90
; ---------------------------------------------------------------------------

loc_107B:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+169j
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	edx, [ecx]
		mov	[eax+50h], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_20]
		mov	[eax+54h], ecx

loc_108F:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char):loc_F82j
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_20]
		mov	[eax], ecx
		mov	eax, 2

loc_109C:				; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+D3j
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+10Dj ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN25
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 12Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
?matches@StringMatcher@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN25		dd 1			; DATA XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+258o
		dd offset $LN24
$LN24		dd 0FFFFFFE0h, 4	; DATA XREF: .text:000010C8o
		dd offset $LN23		; "cursor"
$LN23		db 'cursor',0           ; DATA XREF: .text:000010D4o
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 10E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::StringMatcher::toPattern(icu_56::StringMatcher *this, struct	icu_56::UnicodeString *, signed	__int8)
		public ?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z proc near
					; DATA XREF: .rdata:000005D8o

var_19C		= byte ptr -19Ch
var_198		= dword	ptr -198h
var_CC		= dword	ptr -0CCh
var_C0		= word ptr -0C0h
var_B4		= dword	ptr -0B4h
var_A8		= byte ptr -0A8h
var_60		= byte ptr -60h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 190h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_19C]
		mov	ecx, 64h ; 'd'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	esi, esp
		push	0		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z ; icu_56::UnicodeString::truncate(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_60] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_A8] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+4Ch], 0
		jle	short loc_1188
		mov	esi, esp
		push	28h ; '('       ; wchar_t
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append(wchar_t)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1188:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+92j
		mov	[ebp+var_B4], 0
		jmp	short loc_11A3
; ---------------------------------------------------------------------------

loc_1194:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char):loc_1281j
		mov	eax, [ebp+var_B4]
		add	eax, 1
		mov	[ebp+var_B4], eax

loc_11A3:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+B2j
		mov	ecx, [ebp+var_18]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_B4], eax
		jge	loc_1286
		mov	esi, esp
		mov	eax, [ebp+var_B4]
		push	eax		; int
		mov	ecx, [ebp+var_18]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::charAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C0], ax
		movzx	eax, [ebp+var_C0]
		push	eax		; int
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+48h]	; this
		call	?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z ; icu_56::TransliterationRuleData::lookupMatcher(int)
		mov	[ebp+var_CC], eax
		cmp	[ebp+var_CC], 0
		jnz	short loc_1237
		mov	esi, esp
		lea	eax, [ebp+var_A8]
		push	eax		; struct icu_56::UnicodeString *
		movzx	ecx, [ebp+arg_4]
		push	ecx		; signed __int8
		push	0		; signed __int8
		movzx	edx, [ebp+var_C0]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z ; icu_56::ICU_Utility::appendToRule(icu_56::UnicodeString &,int,signed char,signed char,icu_56::UnicodeString	&)
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_1281
; ---------------------------------------------------------------------------

loc_1237:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+127j
		mov	esi, esp
		lea	eax, [ebp+var_A8]
		push	eax		; struct icu_56::UnicodeString *
		movzx	ecx, [ebp+arg_4]
		push	ecx		; signed __int8
		push	1		; signed __int8
		mov	edi, esp
		movzx	edx, [ebp+arg_4]
		push	edx
		lea	eax, [ebp+var_60]
		push	eax
		mov	ecx, [ebp+var_CC]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_CC]
		mov	eax, [edx+8]
		call	eax
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z ; icu_56::ICU_Utility::appendToRule(icu_56::UnicodeString &,icu_56::UnicodeString const &,signed	char,signed char,icu_56::UnicodeString &)
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1281:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+155j
		jmp	loc_1194
; ---------------------------------------------------------------------------

loc_1286:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+DEj
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+4Ch], 0
		jle	short loc_12A3
		mov	esi, esp
		push	29h ; ')'       ; wchar_t
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append(wchar_t)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_12A3:				; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+1ADj
		mov	esi, esp
		lea	eax, [ebp+var_A8]
		push	eax		; struct icu_56::UnicodeString *
		movzx	ecx, [ebp+arg_4]
		push	ecx		; signed __int8
		push	1		; signed __int8
		push	0FFFFFFFFh	; int
		mov	edx, [ebp+arg_0]
		push	edx		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z ; icu_56::ICU_Utility::appendToRule(icu_56::UnicodeString &,int,signed char,signed char,icu_56::UnicodeString	&)
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_198], eax
		mov	byte ptr [ebp+var_4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_A8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_60] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_198]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN16
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 19Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN16		dd 2			; DATA XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+22Eo
		dd offset $LN15
$LN15		dd 0FFFFFFA0h, 40h	; DATA XREF: .text:0000134Co
		dd offset $LN12		; "str"
		dd 0FFFFFF58h, 40h
		dd offset $LN13		; "quoteBuf"
$LN13		db 'quoteBuf',0         ; DATA XREF: .text:00001364o
$LN12		db 'str',0              ; DATA XREF: .text:00001358o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1378h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0 proc	near
					; DATA XREF: .xdata$x:000013CCo
		mov	esi, esp
		lea	ecx, [ebp-60h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1 proc	near
					; DATA XREF: .xdata$x:000013D4o
		mov	esi, esp
		lea	ecx, [ebp-0A8h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z proc near
					; DATA XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-1A0h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
		jmp	___CxxFrameHandler3
__ehhandler$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 13C8h
__unwindtable$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000013E0o
		dd offset __unwindfunclet$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0
		dd 0
		dd offset __unwindfunclet$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1
__ehfuncinfo$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z dd 19930522h, 2
					; DATA XREF: __ehhandler$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z+1Eo
		dd offset __unwindtable$?toPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::StringMatcher::matchesIndexValue(icu_56::StringMatcher *this, unsigned __int8)
		public ?matchesIndexValue@StringMatcher@icu_56@@UBECE@Z
?matchesIndexValue@StringMatcher@icu_56@@UBECE@Z proc near ; DATA XREF:	.rdata:000005DCo

var_E8		= dword	ptr -0E8h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E8]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jnz	short loc_143C
		mov	al, 1
		jmp	short loc_14B3
; ---------------------------------------------------------------------------

loc_143C:				; CODE XREF: icu_56::StringMatcher::matchesIndexValue(uchar)+3Aj
		mov	esi, esp
		push	0		; int
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z ; icu_56::UnicodeString::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+48h]	; this
		call	?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z ; icu_56::TransliterationRuleData::lookupMatcher(int)
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jnz	short loc_1489
		mov	eax, [ebp+var_14]
		and	eax, 0FFh
		movzx	ecx, [ebp+arg_0]
		xor	edx, edx
		cmp	eax, ecx
		setz	dl
		mov	[ebp+var_E8], edx
		jmp	short loc_14AD
; ---------------------------------------------------------------------------

loc_1489:				; CODE XREF: icu_56::StringMatcher::matchesIndexValue(uchar)+70j
		mov	esi, esp
		movzx	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_20]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_20]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		mov	[ebp+var_E8], ecx

loc_14AD:				; CODE XREF: icu_56::StringMatcher::matchesIndexValue(uchar)+8Bj
		mov	al, byte ptr [ebp+var_E8]

loc_14B3:				; CODE XREF: icu_56::StringMatcher::matchesIndexValue(uchar)+3Ej
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?matchesIndexValue@StringMatcher@icu_56@@UBECE@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 14CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringMatcher::addMatchSetTo(icu_56::StringMatcher *this, struct icu_56::UnicodeSet *)
		public ?addMatchSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z
?addMatchSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z proc near
					; DATA XREF: .rdata:000005E0o

var_F0		= byte ptr -0F0h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_20], 0
		jmp	short loc_150D
; ---------------------------------------------------------------------------

loc_14F8:				; CODE XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &):loc_158Dj
		mov	eax, 0FFFFh
		cmp	eax, [ebp+var_14]
		sbb	ecx, ecx
		neg	ecx
		add	ecx, 1
		add	ecx, [ebp+var_20]
		mov	[ebp+var_20], ecx

loc_150D:				; CODE XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+2Aj
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		mov	esi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_20], eax
		jge	short loc_1592
		mov	esi, esp
		mov	eax, [ebp+var_20]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		add	ecx, 8		; this
		call	dword ptr ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z ; icu_56::UnicodeString::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+48h]	; this
		call	?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z ; icu_56::TransliterationRuleData::lookupMatcher(int)
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jnz	short loc_1573
		mov	esi, esp
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_158D
; ---------------------------------------------------------------------------

loc_1573:				; CODE XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+8Dj
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_2C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_2C]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_158D:				; CODE XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+A5j
		jmp	loc_14F8
; ---------------------------------------------------------------------------

loc_1592:				; CODE XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+59j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?addMatchSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 15A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringMatcher::replace(icu_56::StringMatcher *this, struct icu_56::Replaceable	*, int,	int, int *)
		public ?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z proc near
					; DATA XREF: .rdata:000005C0o

var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_138		= byte ptr -138h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 138h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_144]
		mov	ecx, 4Eh ; 'N'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	[ebp+var_24], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+4Ch], 0
		jl	short loc_1648
		mov	eax, [ebp+var_18]
		mov	ecx, [ebp+var_18]
		mov	edx, [eax+4Ch]
		cmp	edx, [ecx+50h]
		jz	short loc_1648
		mov	esi, esp
		mov	eax, [ebp+var_30]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+50h]
		push	edx
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+4Ch]
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+10h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_18]
		mov	ecx, [ebp+var_18]
		mov	edx, [eax+50h]
		sub	edx, [ecx+4Ch]
		mov	[ebp+var_24], edx

loc_1648:				; CODE XREF: icu_56::StringMatcher::replace(icu_56::Replaceable	&,int,int,int &)+59j
					; icu_56::StringMatcher::replace(icu_56::Replaceable &,int,int,int &)+67j
		mov	esi, esp
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_140], eax
		mov	eax, [ebp+var_140]
		mov	[ebp+var_144], eax
		mov	[ebp+var_4], 0
		mov	esi, esp
		mov	ecx, [ebp+var_144]
		push	ecx
		mov	edx, [ebp+arg_8]
		push	edx
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_138] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_24]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 144h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 16E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$0 proc near
					; DATA XREF: .xdata$x:0000172Co
		mov	esi, esp
		lea	ecx, [ebp-138h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z	proc near
					; DATA XREF: icu_56::StringMatcher::replace(icu_56::Replaceable	&,int,int,int &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-148h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
		jmp	___CxxFrameHandler3
__ehhandler$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1728h
__unwindtable$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001738o
		dd offset __unwindfunclet$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$0
__ehfuncinfo$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z+1Eo
		dd offset __unwindtable$?replace@StringMatcher@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1754h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::StringMatcher::toReplacerPattern(icu_56::StringMatcher *this, struct	icu_56::UnicodeString *, signed	__int8)
		public ?toReplacerPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
?toReplacerPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z proc near
					; DATA XREF: .rdata:000005C4o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		push	0		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z ; icu_56::UnicodeString::truncate(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	24h ; '$'       ; wchar_t
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append(wchar_t)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; int
		push	0Ah		; int
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+48h]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; struct icu_56::UnicodeString *
		call	dword ptr ds:__imp_?appendNumber@ICU_Utility@icu_56@@SAAAVUnicodeString@2@AAV32@HHH@Z ;	icu_56::ICU_Utility::appendNumber(icu_56::UnicodeString	&,int,int,int)
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?toReplacerPattern@StringMatcher@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 17DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringMatcher::resetMatch(icu_56::StringMatcher *__hidden this)
		public ?resetMatch@StringMatcher@icu_56@@QAEXXZ
?resetMatch@StringMatcher@icu_56@@QAEXXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+58h], 0FFFFFFFFh
		mov	ecx, [ebp+var_8]
		mov	dword ptr [ecx+54h], 0FFFFFFFFh
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?resetMatch@StringMatcher@icu_56@@QAEXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 181Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringMatcher::addReplacementSetTo(icu_56::StringMatcher *this, struct icu_56::UnicodeSet *)
		public ?addReplacementSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z
?addReplacementSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z proc near
					; DATA XREF: .rdata:000005C8o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?addReplacementSetTo@StringMatcher@icu_56@@UBEXAAVUnicodeSet@2@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1848h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringMatcher::setData(icu_56::StringMatcher *this, const struct icu_56::TransliterationRuleData *)
		public ?setData@StringMatcher@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
?setData@StringMatcher@icu_56@@UAEXPBVTransliterationRuleData@2@@Z proc	near
					; DATA XREF: .rdata:000005FCo

var_F0		= byte ptr -0F0h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+4Ch], ecx
		mov	[ebp+var_14], 0

loc_187B:				; CODE XREF: icu_56::StringMatcher::setData(icu_56::TransliterationRuleData const *)+B3j
		mov	ecx, [ebp+var_8]
		add	ecx, 0Ch	; this
		mov	esi, esp
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_14], eax
		jge	short loc_1900
		mov	esi, esp
		mov	eax, [ebp+var_14]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		add	ecx, 0Ch	; this
		call	dword ptr ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z ; icu_56::UnicodeString::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		push	eax		; int
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+4Ch]	; this
		call	?lookup@TransliterationRuleData@icu_56@@QBEPAVUnicodeFunctor@2@H@Z ; icu_56::TransliterationRuleData::lookup(int)
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_18E6
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4Ch]
		push	ecx
		mov	edx, [ebp+var_2C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_2C]
		mov	edx, [eax+14h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_18E6:				; CODE XREF: icu_56::StringMatcher::setData(icu_56::TransliterationRuleData const *)+7Fj
		mov	eax, 0FFFFh
		cmp	eax, [ebp+var_20]
		sbb	ecx, ecx
		neg	ecx
		add	ecx, 1
		add	ecx, [ebp+var_14]
		mov	[ebp+var_14], ecx
		jmp	loc_187B
; ---------------------------------------------------------------------------

loc_1900:				; CODE XREF: icu_56::StringMatcher::setData(icu_56::TransliterationRuleData const *)+4Bj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setData@StringMatcher@icu_56@@UAEXPBVTransliterationRuleData@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1918h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; [thunk]:public: virtual void * __thiscall icu_56::StringMatcher::`vector deleting destructor'`adjustor{4}' (unsigned int)
		public ??_EStringMatcher@icu_56@@W3AEPAXI@Z
??_EStringMatcher@icu_56@@W3AEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeMatcher'}o
		sub	ecx, 4
		jmp	??_EStringMatcher@icu_56@@UAEPAXI@Z ; icu_56::StringMatcher::`vector deleting destructor'(uint)
??_EStringMatcher@icu_56@@W3AEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1920h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; [thunk]:public: virtual void * __thiscall icu_56::StringMatcher::`vector deleting destructor'`adjustor{8}' (unsigned int)
		public ??_EStringMatcher@icu_56@@W7AEPAXI@Z
??_EStringMatcher@icu_56@@W7AEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::StringMatcher::`vftable'{for `icu_56::UnicodeReplacer'}o
		sub	ecx, 8
		jmp	??_EStringMatcher@icu_56@@UAEPAXI@Z ; icu_56::StringMatcher::`vector deleting destructor'(uint)
??_EStringMatcher@icu_56@@W7AEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::UnicodeReplacer `RTTI Type Descriptor'o
					; .data:icu_56::StringMatcher `RTTI Type Descriptor'o ...
		extrn __purecall:near	; DATA XREF: .rdata:000001B0o
					; .rdata:000001B4o ...
; _DWORD __thiscall icu_56::UnicodeReplacer::~UnicodeReplacer(icu_56::UnicodeReplacer *__hidden	this)
		extrn ??1UnicodeReplacer@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::UnicodeReplacer::`scalar deleting destructor'(uint)+26p
					; icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+64p ...
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::UnicodeReplacer::`scalar deleting destructor'(uint)+4Dp
					; icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+8Bp ...
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near
					; CODE XREF: icu_56::UnicodeReplacer::`vector deleting destructor'(uint)+3Dp
; _DWORD __thiscall icu_56::UnicodeString::~UnicodeString(icu_56::UnicodeString	*__hidden this)
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near
					; CODE XREF: __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$3+8p
					; icu_56::StringMatcher::~StringMatcher(void)+6Ep ...
; _DWORD __thiscall icu_56::UnicodeMatcher::~UnicodeMatcher(icu_56::UnicodeMatcher *__hidden this)
		extrn __imp_??1UnicodeMatcher@icu_56@@UAE@XZ:near
					; CODE XREF: __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$1+8p
					; __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$1+8p ...
; _DWORD __thiscall icu_56::UnicodeFunctor::~UnicodeFunctor(icu_56::UnicodeFunctor *__hidden this)
		extrn __imp_??1UnicodeFunctor@icu_56@@UAE@XZ:near
					; CODE XREF: __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z$0+5p
					; __unwindfunclet$??0StringMatcher@icu_56@@QAE@ABV01@@Z$0+5p ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+A8p
					; icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+5Ep ...
; _DWORD __thiscall icu_56::UnicodeMatcher::UnicodeMatcher(icu_56::UnicodeMatcher *__hidden this)
		extrn __imp_??0UnicodeMatcher@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+63p
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+63r
; _DWORD __thiscall icu_56::UnicodeFunctor::UnicodeFunctor(icu_56::UnicodeFunctor *__hidden this)
		extrn __imp_??0UnicodeFunctor@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+47p
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+47r
		extrn ___security_cookie:near
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::UnicodeString	const &,int,int,int,icu_56::TransliterationRuleData const &)+2Er
					; icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher const &)+2Er ...
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z+19j
					; __ehhandler$??0StringMatcher@icu_56@@QAE@ABV01@@Z+19j ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$??0StringMatcher@icu_56@@QAE@ABVUnicodeString@1@HHHABVTransliterationRuleData@1@@Z+Fp
					; __ehhandler$??0StringMatcher@icu_56@@QAE@ABV01@@Z+Fp	...
; public: virtual void * __thiscall icu_56::StringMatcher::`scalar deleting destructor'(unsigned int)
		extrn ??_GStringMatcher@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringMatcher::`vector deleting destructor'(unsigned int)
		extrn ??_EStringMatcher@icu_56@@UAEPAXI@Z:near ; weak
					; CODE XREF: [thunk]:icu_56::StringMatcher::`vector deleting destructor'`adjustor{4}' (uint)+3j
					; [thunk]:icu_56::StringMatcher::`vector deleting destructor'`adjustor{8}' (uint)+3j
					; DATA XREF: ...
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::StringMatcher::`scalar deleting destructor'(uint)+39p
					; __unwindfunclet$?clone@StringMatcher@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0+9p
					; DATA XREF: ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, const struct icu_56::UnicodeString *)
		extrn __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+FDp
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+FDr
; _DWORD __thiscall icu_56::UnicodeMatcher::UnicodeMatcher(icu_56::UnicodeMatcher *__hidden this, const	struct icu_56::UnicodeMatcher *)
		extrn __imp_??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+8Cp
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+8Cr
; _DWORD __thiscall icu_56::UnicodeFunctor::UnicodeFunctor(icu_56::UnicodeFunctor *__hidden this, const	struct icu_56::UnicodeFunctor *)
		extrn __imp_??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+4Bp
					; DATA XREF: icu_56::StringMatcher::StringMatcher(icu_56::StringMatcher	const &)+4Br
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::StringMatcher::clone(void)+46p
					; DATA XREF: icu_56::StringMatcher::clone(void)+46r
; wchar_t __thiscall icu_56::Replaceable::charAt(icu_56::Replaceable *__hidden this, int)
		extrn __imp_?charAt@Replaceable@icu_56@@QBE_WH@Z:near
					; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+B2p
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+1D4p
					; DATA XREF: ...
; struct icu_56::UnicodeMatcher	*__thiscall icu_56::TransliterationRuleData::lookupMatcher(icu_56::TransliterationRuleData *__hidden this, int)
		extrn ?lookupMatcher@TransliterationRuleData@icu_56@@QBEPAVUnicodeMatcher@2@H@Z:near
					; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+8Fp
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+1B1p ...
; wchar_t __thiscall icu_56::UnicodeString::charAt(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:near
					; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+73p
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+195p ...
; int __thiscall icu_56::UnicodeString::length(icu_56::UnicodeString *__hidden this)
		extrn __imp_?length@UnicodeString@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+3Fp
					; icu_56::StringMatcher::matches(icu_56::Replaceable const &,int &,int,signed char)+159p ...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::StringMatcher::matches(icu_56::Replaceable	const &,int &,int,signed char)+25Ep
					; icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+234p
; void __cdecl static icu_56::ICU_Utility::appendToRule(struct icu_56::UnicodeString *,	const struct icu_56::UnicodeString *, signed __int8, signed __int8, struct icu_56::UnicodeString *)
		extrn __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z:near
					; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+191p
					; DATA XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+191r
; void __cdecl static icu_56::ICU_Utility::appendToRule(struct icu_56::UnicodeString *,	int, signed __int8, signed __int8, struct icu_56::UnicodeString	*)
		extrn __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z:near
					; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+145p
					; icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+1D9p
					; DATA XREF: ...
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::append(icu_56::UnicodeString *__hidden this, wchar_t)
		extrn __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near
					; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+9Bp
					; icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+1B6p ...
; signed __int8	__thiscall icu_56::UnicodeString::truncate(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?truncate@UnicodeString@icu_56@@QAECH@Z:near
					; CODE XREF: icu_56::StringMatcher::toPattern(icu_56::UnicodeString &,signed char)+4Cp
					; icu_56::StringMatcher::toReplacerPattern(icu_56::UnicodeString &,signed char)+2Ap
					; DATA XREF: ...
; int __thiscall icu_56::UnicodeString::char32At(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near
					; CODE XREF: icu_56::StringMatcher::matchesIndexValue(uchar)+4Ap
					; icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+67p ...
; struct icu_56::UnicodeSet *__thiscall	icu_56::UnicodeSet::add(icu_56::UnicodeSet *__hidden this, int)
		extrn __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near
					; CODE XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+98p
					; DATA XREF: icu_56::StringMatcher::addMatchSetTo(icu_56::UnicodeSet &)+98r
; struct icu_56::UnicodeString *__cdecl	static icu_56::ICU_Utility::appendNumber(struct	icu_56::UnicodeString *, int, int, int)
		extrn __imp_?appendNumber@ICU_Utility@icu_56@@SAAAVUnicodeString@2@AAV32@HHH@Z:near
					; CODE XREF: icu_56::StringMatcher::toReplacerPattern(icu_56::UnicodeString &,signed char)+5Cp
					; DATA XREF: icu_56::StringMatcher::toReplacerPattern(icu_56::UnicodeString &,signed char)+5Cr
; struct icu_56::UnicodeFunctor	*__thiscall icu_56::TransliterationRuleData::lookup(icu_56::TransliterationRuleData *__hidden this, int)
		extrn ?lookup@TransliterationRuleData@icu_56@@QBEPAVUnicodeFunctor@2@H@Z:near
					; CODE XREF: icu_56::StringMatcher::setData(icu_56::TransliterationRuleData const *)+73p


		end

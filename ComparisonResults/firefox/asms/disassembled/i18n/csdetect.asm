;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	3BEF5DA6A3DA327EC8A492FF6502413B
; Input	CRC32 :	2FAC8BB7

; File Name   :	D:\compspace\objfiles\firefox\i18n\csdetect.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset _fCSRecognizers
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1FE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FB+5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_800
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_FFC+4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset loc_2000
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ??_R2CharsetRecog_big5@icu_56@@8 ;	icu_56::CharsetRecog_big5::`RTTI Base Class Array'
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_3FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1BF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_DFA+6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset ??_R2CharsetRecog_big5@icu_56@@8	; icu_56::CharsetRecog_big5::`RTTI Base	Class Array'
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
; icu_56::UInitOnce gCSRecognizersInitOnce
_gCSRecognizersInitOnce	dd 2 dup(?)	; DATA XREF: icu_56::CharsetDetector::setRecognizers(UErrorCode	&):loc_1BFo
					; _csdet_cleanup:loc_1732o
_fCSRecognizers	dd ?			; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
					; _initRecognizers+123Fw ...
_fCSRecognizers_size dd	?		; DATA XREF: _initRecognizers+125Bw
					; _csdet_cleanup+40r ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 108h
_gCSDetEnumeration dd 2	dup(0)		; DATA XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+68o
					; icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+61o
		dd offset _enumClose
		dd offset _enumCount
		dd offset _uenum_unextDefault_56
		dd offset _enumNext
		dd offset _enumReset
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 124h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 15Ch
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 160h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 164h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 198h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl static icu_56::CharsetDetector::setRecognizers(enum UErrorCode *)
		public ?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z
?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+F5p
					; icu_56::CharsetDetector::getDetectableCount(void)+29p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; enum UErrorCode *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset _initRecognizers	; struct icu_56::UInitOnce *

loc_1BF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		push	offset _gCSRecognizersInitOnce ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::umtx_initOnce(icu_56 *__hidden this, struct icu_56::UInitOnce *,	void (__cdecl *)(enum UErrorCode *), enum UErrorCode *)
		public ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
					; CODE XREF: icu_56::CharsetDetector::setRecognizers(UErrorCode	&)+2Cp

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; struct icu_56::UInitOnce *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd

loc_1FE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_218
		jmp	loc_29D
; ---------------------------------------------------------------------------

loc_218:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+31j
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	?umtx_loadAcquire@icu_56@@YAHACJ@Z ; icu_56::umtx_loadAcquire(long volatile &)
		add	esp, 4
		cmp	eax, 2
		jz	short loc_27C
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ;	icu_56::umtx_initImplPreInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_27C
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		call	[ebp+arg_4]
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+Destination]
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	[eax+4], edx
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_29D
; ---------------------------------------------------------------------------

loc_27C:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+47j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+64j
		mov	eax, [ebp+Destination]
		mov	ecx, [eax+4]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_29D
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+Destination]
		mov	edx, [ecx+4]
		mov	[eax], edx

loc_29D:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+33j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+9Aj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+24p
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+A3p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::umtx_loadAcquire(volatile	LONG *Destination, volatile __int32 *)
		public ?umtx_loadAcquire@icu_56@@YAHACJ@Z
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+3Cp

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	0		; Comperand
		push	0		; Exchange
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	dword ptr ds:__imp__InterlockedCompareExchange@12 ; InterlockedCompareExchange(x,x,x)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_loadAcquire@icu_56@@YAHACJ@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 32Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UInitOnce initRecognizers
_initRecognizers proc near		; DATA XREF: icu_56::CharsetDetector::setRecognizers(UErrorCode	&)+22o

var_5FC		= dword	ptr -5FCh
var_5F8		= dword	ptr -5F8h
var_5F0		= dword	ptr -5F0h
var_5E4		= dword	ptr -5E4h
var_5D8		= dword	ptr -5D8h
var_5CC		= dword	ptr -5CCh
var_5C0		= dword	ptr -5C0h
var_5B4		= dword	ptr -5B4h
var_5A8		= dword	ptr -5A8h
var_59C		= dword	ptr -59Ch
var_590		= dword	ptr -590h
var_584		= dword	ptr -584h
var_578		= dword	ptr -578h
var_56C		= dword	ptr -56Ch
var_560		= dword	ptr -560h
var_554		= dword	ptr -554h
var_548		= dword	ptr -548h
var_53C		= dword	ptr -53Ch
var_530		= dword	ptr -530h
var_524		= dword	ptr -524h
var_518		= dword	ptr -518h
var_50C		= dword	ptr -50Ch
var_500		= dword	ptr -500h
var_4F4		= dword	ptr -4F4h
var_4E8		= dword	ptr -4E8h
var_4DC		= dword	ptr -4DCh
var_4D0		= dword	ptr -4D0h
var_4C4		= dword	ptr -4C4h
var_4B8		= dword	ptr -4B8h
var_4AC		= dword	ptr -4ACh
var_4A0		= dword	ptr -4A0h
var_494		= dword	ptr -494h
var_488		= dword	ptr -488h
var_47C		= dword	ptr -47Ch
var_470		= dword	ptr -470h
var_464		= dword	ptr -464h
var_458		= dword	ptr -458h
var_44C		= dword	ptr -44Ch
var_440		= dword	ptr -440h
var_434		= dword	ptr -434h
var_428		= dword	ptr -428h
var_41C		= dword	ptr -41Ch
var_410		= dword	ptr -410h
var_404		= dword	ptr -404h
var_3F8		= dword	ptr -3F8h
var_3EC		= dword	ptr -3ECh
var_3E0		= dword	ptr -3E0h
var_3D4		= dword	ptr -3D4h
var_3C8		= dword	ptr -3C8h
var_3BC		= dword	ptr -3BCh
var_3B0		= dword	ptr -3B0h
var_3A4		= dword	ptr -3A4h
var_398		= dword	ptr -398h
var_38C		= dword	ptr -38Ch
var_380		= dword	ptr -380h
var_374		= dword	ptr -374h
var_368		= dword	ptr -368h
var_35C		= dword	ptr -35Ch
var_350		= dword	ptr -350h
var_344		= dword	ptr -344h
var_338		= dword	ptr -338h
var_32C		= dword	ptr -32Ch
var_320		= dword	ptr -320h
var_314		= dword	ptr -314h
var_308		= dword	ptr -308h
var_2FC		= dword	ptr -2FCh
var_2F0		= dword	ptr -2F0h
var_2E4		= dword	ptr -2E4h
var_2D8		= dword	ptr -2D8h
var_2CC		= dword	ptr -2CCh
var_2C0		= dword	ptr -2C0h
var_2B4		= dword	ptr -2B4h
var_2A8		= dword	ptr -2A8h
var_29C		= dword	ptr -29Ch
var_290		= dword	ptr -290h
var_284		= dword	ptr -284h
var_278		= dword	ptr -278h
var_26C		= dword	ptr -26Ch
var_260		= dword	ptr -260h
var_254		= dword	ptr -254h
var_248		= dword	ptr -248h
var_23C		= dword	ptr -23Ch
var_230		= dword	ptr -230h
var_224		= dword	ptr -224h
var_218		= dword	ptr -218h
var_20C		= dword	ptr -20Ch
var_200		= dword	ptr -200h
var_1F4		= dword	ptr -1F4h
var_1E8		= dword	ptr -1E8h
var_1DC		= dword	ptr -1DCh
var_1D0		= dword	ptr -1D0h
var_1C4		= dword	ptr -1C4h
var_1B8		= dword	ptr -1B8h
var_1AC		= dword	ptr -1ACh
var_1A0		= dword	ptr -1A0h
var_194		= dword	ptr -194h
var_188		= dword	ptr -188h
var_17C		= dword	ptr -17Ch
var_170		= dword	ptr -170h
var_164		= dword	ptr -164h
var_158		= dword	ptr -158h
var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 5FCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_5FC]
		mov	ecx, 17Fh
		mov	eax, 0CCCCCCCCh
		rep stosd
		push	offset _csdet_cleanup
		push	17h
		call	_ucln_i18n_registerCleanup_56
		add	esp, 8
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_5E4], eax
		cmp	[ebp+var_5E4], 0
		jz	short loc_3D8
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_5D8], eax
		cmp	[ebp+var_5D8], 0
		jz	short loc_3B2
		mov	ecx, [ebp+var_5D8] ; this
		call	??0CharsetRecog_UTF8@icu_56@@QAE@XZ ; icu_56::CharsetRecog_UTF8::CharsetRecog_UTF8(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_3BC
; ---------------------------------------------------------------------------

loc_3B2:				; CODE XREF: _initRecognizers+71j
		mov	[ebp+var_5F8], 0

loc_3BC:				; CODE XREF: _initRecognizers+84j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_5E4] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_3E2
; ---------------------------------------------------------------------------

loc_3D8:				; CODE XREF: _initRecognizers+4Ej
		mov	[ebp+var_5FC], 0

loc_3E2:				; CODE XREF: _initRecognizers+AAj
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_5F0], ecx
		mov	edx, [ebp+var_5F0]
		mov	[ebp+var_74], edx
		mov	esi, esp
		push	8		; unsigned int

loc_3FB:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_5C0], eax
		cmp	[ebp+var_5C0], 0
		jz	short loc_476
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_5B4], eax
		cmp	[ebp+var_5B4], 0
		jz	short loc_450
		mov	ecx, [ebp+var_5B4] ; this
		call	??0CharsetRecog_UTF_16_BE@icu_56@@QAE@XZ ; icu_56::CharsetRecog_UTF_16_BE::CharsetRecog_UTF_16_BE(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_45A
; ---------------------------------------------------------------------------

loc_450:				; CODE XREF: _initRecognizers+10Fj
		mov	[ebp+var_5F8], 0

loc_45A:				; CODE XREF: _initRecognizers+122j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_5C0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_480
; ---------------------------------------------------------------------------

loc_476:				; CODE XREF: _initRecognizers+ECj
		mov	[ebp+var_5FC], 0

loc_480:				; CODE XREF: _initRecognizers+148j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_5CC], ecx
		mov	edx, [ebp+var_5CC]
		mov	[ebp+var_70], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_59C], eax
		cmp	[ebp+var_59C], 0
		jz	short loc_514
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_590], eax
		cmp	[ebp+var_590], 0
		jz	short loc_4EE
		mov	ecx, [ebp+var_590] ; this
		call	??0CharsetRecog_UTF_16_LE@icu_56@@QAE@XZ ; icu_56::CharsetRecog_UTF_16_LE::CharsetRecog_UTF_16_LE(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_4F8
; ---------------------------------------------------------------------------

loc_4EE:				; CODE XREF: _initRecognizers+1ADj
		mov	[ebp+var_5F8], 0

loc_4F8:				; CODE XREF: _initRecognizers+1C0j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_59C] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_51E
; ---------------------------------------------------------------------------

loc_514:				; CODE XREF: _initRecognizers+18Aj
		mov	[ebp+var_5FC], 0

loc_51E:				; CODE XREF: _initRecognizers+1E6j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_5A8], ecx
		mov	edx, [ebp+var_5A8]
		mov	[ebp+var_6C], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_578], eax
		cmp	[ebp+var_578], 0
		jz	short loc_5B2
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_56C], eax
		cmp	[ebp+var_56C], 0
		jz	short loc_58C
		mov	ecx, [ebp+var_56C] ; this
		call	??0CharsetRecog_UTF_32_BE@icu_56@@QAE@XZ ; icu_56::CharsetRecog_UTF_32_BE::CharsetRecog_UTF_32_BE(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_596
; ---------------------------------------------------------------------------

loc_58C:				; CODE XREF: _initRecognizers+24Bj
		mov	[ebp+var_5F8], 0

loc_596:				; CODE XREF: _initRecognizers+25Ej
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_578] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_5BC
; ---------------------------------------------------------------------------

loc_5B2:				; CODE XREF: _initRecognizers+228j
		mov	[ebp+var_5FC], 0

loc_5BC:				; CODE XREF: _initRecognizers+284j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_584], ecx
		mov	edx, [ebp+var_584]
		mov	[ebp+var_68], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_554], eax
		cmp	[ebp+var_554], 0
		jz	short loc_650
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_548], eax
		cmp	[ebp+var_548], 0
		jz	short loc_62A
		mov	ecx, [ebp+var_548] ; this
		call	??0CharsetRecog_UTF_32_LE@icu_56@@QAE@XZ ; icu_56::CharsetRecog_UTF_32_LE::CharsetRecog_UTF_32_LE(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_634
; ---------------------------------------------------------------------------

loc_62A:				; CODE XREF: _initRecognizers+2E9j
		mov	[ebp+var_5F8], 0

loc_634:				; CODE XREF: _initRecognizers+2FCj
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_554] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_65A
; ---------------------------------------------------------------------------

loc_650:				; CODE XREF: _initRecognizers+2C6j
		mov	[ebp+var_5FC], 0

loc_65A:				; CODE XREF: _initRecognizers+322j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_560], ecx
		mov	edx, [ebp+var_560]
		mov	[ebp+var_64], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_530], eax
		cmp	[ebp+var_530], 0
		jz	short loc_6FA
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_518], eax
		cmp	[ebp+var_518], 0
		jz	short loc_6C8
		mov	ecx, [ebp+var_518] ; this
		call	??0CharsetRecog_8859_1@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_1::CharsetRecog_8859_1(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_6D2
; ---------------------------------------------------------------------------

loc_6C8:				; CODE XREF: _initRecognizers+387j
		mov	[ebp+var_5F8], 0

loc_6D2:				; CODE XREF: _initRecognizers+39Aj
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_524], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_524]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_530] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_704
; ---------------------------------------------------------------------------

loc_6FA:				; CODE XREF: _initRecognizers+364j
		mov	[ebp+var_5FC], 0

loc_704:				; CODE XREF: _initRecognizers+3CCj
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_53C], edx
		mov	eax, [ebp+var_53C]
		mov	[ebp+var_60], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_500], eax
		cmp	[ebp+var_500], 0
		jz	short loc_7A4
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4E8], eax
		cmp	[ebp+var_4E8], 0
		jz	short loc_772
		mov	ecx, [ebp+var_4E8] ; this
		call	??0CharsetRecog_8859_2@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_2::CharsetRecog_8859_2(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_77C
; ---------------------------------------------------------------------------

loc_772:				; CODE XREF: _initRecognizers+431j
		mov	[ebp+var_5F8], 0

loc_77C:				; CODE XREF: _initRecognizers+444j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_4F4], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_4F4]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_500] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_7AE
; ---------------------------------------------------------------------------

loc_7A4:				; CODE XREF: _initRecognizers+40Ej
		mov	[ebp+var_5FC], 0

loc_7AE:				; CODE XREF: _initRecognizers+476j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_50C], edx
		mov	eax, [ebp+var_50C]
		mov	[ebp+var_5C], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4D0], eax
		cmp	[ebp+var_4D0], 0
		jz	short loc_84E
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4B8], eax

loc_800:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		cmp	[ebp+var_4B8], 0
		jz	short loc_81C
		mov	ecx, [ebp+var_4B8] ; this
		call	??0CharsetRecog_8859_5_ru@icu_56@@QAE@XZ ; icu_56::CharsetRecog_8859_5_ru::CharsetRecog_8859_5_ru(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_826
; ---------------------------------------------------------------------------

loc_81C:				; CODE XREF: _initRecognizers+4DBj
		mov	[ebp+var_5F8], 0

loc_826:				; CODE XREF: _initRecognizers+4EEj
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_4C4], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_4C4]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_4D0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_858
; ---------------------------------------------------------------------------

loc_84E:				; CODE XREF: _initRecognizers+4B8j
		mov	[ebp+var_5FC], 0

loc_858:				; CODE XREF: _initRecognizers+520j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_4DC], edx
		mov	eax, [ebp+var_4DC]
		mov	[ebp+var_58], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4A0], eax
		cmp	[ebp+var_4A0], 0
		jz	short loc_8F8
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_488], eax
		cmp	[ebp+var_488], 0
		jz	short loc_8C6
		mov	ecx, [ebp+var_488] ; this
		call	??0CharsetRecog_8859_6_ar@icu_56@@QAE@XZ ; icu_56::CharsetRecog_8859_6_ar::CharsetRecog_8859_6_ar(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_8D0
; ---------------------------------------------------------------------------

loc_8C6:				; CODE XREF: _initRecognizers+585j
		mov	[ebp+var_5F8], 0

loc_8D0:				; CODE XREF: _initRecognizers+598j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_494], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_494]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_4A0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_902
; ---------------------------------------------------------------------------

loc_8F8:				; CODE XREF: _initRecognizers+562j
		mov	[ebp+var_5FC], 0

loc_902:				; CODE XREF: _initRecognizers+5CAj
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_4AC], edx
		mov	eax, [ebp+var_4AC]
		mov	[ebp+var_54], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_470], eax
		cmp	[ebp+var_470], 0
		jz	short loc_9A2
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_458], eax
		cmp	[ebp+var_458], 0
		jz	short loc_970
		mov	ecx, [ebp+var_458] ; this
		call	??0CharsetRecog_8859_7_el@icu_56@@QAE@XZ ; icu_56::CharsetRecog_8859_7_el::CharsetRecog_8859_7_el(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_97A
; ---------------------------------------------------------------------------

loc_970:				; CODE XREF: _initRecognizers+62Fj
		mov	[ebp+var_5F8], 0

loc_97A:				; CODE XREF: _initRecognizers+642j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_464], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_464]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_470] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_9AC
; ---------------------------------------------------------------------------

loc_9A2:				; CODE XREF: _initRecognizers+60Cj
		mov	[ebp+var_5FC], 0

loc_9AC:				; CODE XREF: _initRecognizers+674j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_47C], edx
		mov	eax, [ebp+var_47C]
		mov	[ebp+var_50], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_440], eax
		cmp	[ebp+var_440], 0
		jz	short loc_A4C
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_428], eax
		cmp	[ebp+var_428], 0
		jz	short loc_A1A
		mov	ecx, [ebp+var_428] ; this
		call	??0CharsetRecog_8859_8_I_he@icu_56@@QAE@XZ ; icu_56::CharsetRecog_8859_8_I_he::CharsetRecog_8859_8_I_he(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_A24
; ---------------------------------------------------------------------------

loc_A1A:				; CODE XREF: _initRecognizers+6D9j
		mov	[ebp+var_5F8], 0

loc_A24:				; CODE XREF: _initRecognizers+6ECj
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_434], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_434]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_440] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_A56
; ---------------------------------------------------------------------------

loc_A4C:				; CODE XREF: _initRecognizers+6B6j
		mov	[ebp+var_5FC], 0

loc_A56:				; CODE XREF: _initRecognizers+71Ej
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_44C], edx
		mov	eax, [ebp+var_44C]
		mov	[ebp+var_4C], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_410], eax
		cmp	[ebp+var_410], 0
		jz	short loc_AF6
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_3F8], eax
		cmp	[ebp+var_3F8], 0
		jz	short loc_AC4
		mov	ecx, [ebp+var_3F8] ; this
		call	??0CharsetRecog_8859_8_he@icu_56@@QAE@XZ ; icu_56::CharsetRecog_8859_8_he::CharsetRecog_8859_8_he(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_ACE
; ---------------------------------------------------------------------------

loc_AC4:				; CODE XREF: _initRecognizers+783j
		mov	[ebp+var_5F8], 0

loc_ACE:				; CODE XREF: _initRecognizers+796j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_404], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_404]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_410] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_B00
; ---------------------------------------------------------------------------

loc_AF6:				; CODE XREF: _initRecognizers+760j
		mov	[ebp+var_5FC], 0

loc_B00:				; CODE XREF: _initRecognizers+7C8j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_41C], edx
		mov	eax, [ebp+var_41C]
		mov	[ebp+var_48], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_3E0], eax
		cmp	[ebp+var_3E0], 0
		jz	short loc_BA0
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_3C8], eax
		cmp	[ebp+var_3C8], 0
		jz	short loc_B6E
		mov	ecx, [ebp+var_3C8] ; this
		call	??0CharsetRecog_windows_1251@icu_56@@QAE@XZ ; icu_56::CharsetRecog_windows_1251::CharsetRecog_windows_1251(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_B78
; ---------------------------------------------------------------------------

loc_B6E:				; CODE XREF: _initRecognizers+82Dj
		mov	[ebp+var_5F8], 0

loc_B78:				; CODE XREF: _initRecognizers+840j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_3D4], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_3D4]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_3E0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_BAA
; ---------------------------------------------------------------------------

loc_BA0:				; CODE XREF: _initRecognizers+80Aj
		mov	[ebp+var_5FC], 0

loc_BAA:				; CODE XREF: _initRecognizers+872j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_3EC], edx
		mov	eax, [ebp+var_3EC]
		mov	[ebp+var_44], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_3B0], eax
		cmp	[ebp+var_3B0], 0
		jz	short loc_C4A
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_398], eax
		cmp	[ebp+var_398], 0
		jz	short loc_C18
		mov	ecx, [ebp+var_398] ; this
		call	??0CharsetRecog_windows_1256@icu_56@@QAE@XZ ; icu_56::CharsetRecog_windows_1256::CharsetRecog_windows_1256(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_C22
; ---------------------------------------------------------------------------

loc_C18:				; CODE XREF: _initRecognizers+8D7j
		mov	[ebp+var_5F8], 0

loc_C22:				; CODE XREF: _initRecognizers+8EAj
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_3A4], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_3A4]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_3B0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_C54
; ---------------------------------------------------------------------------

loc_C4A:				; CODE XREF: _initRecognizers+8B4j
		mov	[ebp+var_5FC], 0

loc_C54:				; CODE XREF: _initRecognizers+91Cj
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_3BC], edx
		mov	eax, [ebp+var_3BC]
		mov	[ebp+var_40], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_380], eax
		cmp	[ebp+var_380], 0
		jz	short loc_CF4
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_368], eax
		cmp	[ebp+var_368], 0
		jz	short loc_CC2
		mov	ecx, [ebp+var_368] ; this
		call	??0CharsetRecog_KOI8_R@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_KOI8_R::CharsetRecog_KOI8_R(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_CCC
; ---------------------------------------------------------------------------

loc_CC2:				; CODE XREF: _initRecognizers+981j
		mov	[ebp+var_5F8], 0

loc_CCC:				; CODE XREF: _initRecognizers+994j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_374], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_374]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_380] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_CFE
; ---------------------------------------------------------------------------

loc_CF4:				; CODE XREF: _initRecognizers+95Ej
		mov	[ebp+var_5FC], 0

loc_CFE:				; CODE XREF: _initRecognizers+9C6j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_38C], edx
		mov	eax, [ebp+var_38C]
		mov	[ebp+var_3C], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_350], eax
		cmp	[ebp+var_350], 0
		jz	short loc_D9E
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_338], eax
		cmp	[ebp+var_338], 0
		jz	short loc_D6C
		mov	ecx, [ebp+var_338] ; this
		call	??0CharsetRecog_8859_9_tr@icu_56@@QAE@XZ ; icu_56::CharsetRecog_8859_9_tr::CharsetRecog_8859_9_tr(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_D76
; ---------------------------------------------------------------------------

loc_D6C:				; CODE XREF: _initRecognizers+A2Bj
		mov	[ebp+var_5F8], 0

loc_D76:				; CODE XREF: _initRecognizers+A3Ej
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_344], eax
		push	1		; signed __int8
		mov	ecx, [ebp+var_344]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_350] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_DA8
; ---------------------------------------------------------------------------

loc_D9E:				; CODE XREF: _initRecognizers+A08j
		mov	[ebp+var_5FC], 0

loc_DA8:				; CODE XREF: _initRecognizers+A70j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_35C], edx
		mov	eax, [ebp+var_35C]
		mov	[ebp+var_38], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_320], eax
		cmp	[ebp+var_320], 0
		jz	short loc_E3C
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_314], eax

loc_DFA:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
		cmp	[ebp+var_314], 0
		jz	short loc_E16
		mov	ecx, [ebp+var_314] ; this
		call	??0CharsetRecog_sjis@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sjis::CharsetRecog_sjis(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_E20
; ---------------------------------------------------------------------------

loc_E16:				; CODE XREF: _initRecognizers+AD5j
		mov	[ebp+var_5F8], 0

loc_E20:				; CODE XREF: _initRecognizers+AE8j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_320] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_E46
; ---------------------------------------------------------------------------

loc_E3C:				; CODE XREF: _initRecognizers+AB2j
		mov	[ebp+var_5FC], 0

loc_E46:				; CODE XREF: _initRecognizers+B0Ej
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_32C], ecx
		mov	edx, [ebp+var_32C]
		mov	[ebp+var_34], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2FC], eax
		cmp	[ebp+var_2FC], 0
		jz	short loc_EDA
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2F0], eax
		cmp	[ebp+var_2F0], 0
		jz	short loc_EB4
		mov	ecx, [ebp+var_2F0] ; this
		call	??0CharsetRecog_gb_18030@icu_56@@QAE@XZ	; icu_56::CharsetRecog_gb_18030::CharsetRecog_gb_18030(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_EBE
; ---------------------------------------------------------------------------

loc_EB4:				; CODE XREF: _initRecognizers+B73j
		mov	[ebp+var_5F8], 0

loc_EBE:				; CODE XREF: _initRecognizers+B86j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_2FC] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_EE4
; ---------------------------------------------------------------------------

loc_EDA:				; CODE XREF: _initRecognizers+B50j
		mov	[ebp+var_5FC], 0

loc_EE4:				; CODE XREF: _initRecognizers+BACj
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_308], ecx
		mov	edx, [ebp+var_308]
		mov	[ebp+var_30], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2D8], eax
		cmp	[ebp+var_2D8], 0
		jz	short loc_F78
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2CC], eax
		cmp	[ebp+var_2CC], 0
		jz	short loc_F52
		mov	ecx, [ebp+var_2CC] ; this
		call	??0CharsetRecog_euc_jp@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_euc_jp::CharsetRecog_euc_jp(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_F5C
; ---------------------------------------------------------------------------

loc_F52:				; CODE XREF: _initRecognizers+C11j
		mov	[ebp+var_5F8], 0

loc_F5C:				; CODE XREF: _initRecognizers+C24j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_2D8] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_F82
; ---------------------------------------------------------------------------

loc_F78:				; CODE XREF: _initRecognizers+BEEj
		mov	[ebp+var_5FC], 0

loc_F82:				; CODE XREF: _initRecognizers+C4Aj
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_2E4], ecx
		mov	edx, [ebp+var_2E4]
		mov	[ebp+var_2C], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2B4], eax
		cmp	[ebp+var_2B4], 0
		jz	short loc_1016
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2A8], eax
		cmp	[ebp+var_2A8], 0
		jz	short loc_FF0
		mov	ecx, [ebp+var_2A8] ; this
		call	??0CharsetRecog_euc_kr@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_euc_kr::CharsetRecog_euc_kr(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_FFA
; ---------------------------------------------------------------------------

loc_FF0:				; CODE XREF: _initRecognizers+CAFj
		mov	[ebp+var_5F8], 0

loc_FFA:				; CODE XREF: _initRecognizers+CC2j
		push	1		; signed __int8

loc_FFC:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_2B4] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_1020
; ---------------------------------------------------------------------------

loc_1016:				; CODE XREF: _initRecognizers+C8Cj
		mov	[ebp+var_5FC], 0

loc_1020:				; CODE XREF: _initRecognizers+CE8j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_2C0], ecx
		mov	edx, [ebp+var_2C0]
		mov	[ebp+var_28], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_290], eax
		cmp	[ebp+var_290], 0
		jz	short loc_10B4
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_284], eax
		cmp	[ebp+var_284], 0
		jz	short loc_108E
		mov	ecx, [ebp+var_284] ; this
		call	??0CharsetRecog_big5@icu_56@@QAE@XZ ; icu_56::CharsetRecog_big5::CharsetRecog_big5(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_1098
; ---------------------------------------------------------------------------

loc_108E:				; CODE XREF: _initRecognizers+D4Dj
		mov	[ebp+var_5F8], 0

loc_1098:				; CODE XREF: _initRecognizers+D60j
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_290] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_10BE
; ---------------------------------------------------------------------------

loc_10B4:				; CODE XREF: _initRecognizers+D2Aj
		mov	[ebp+var_5FC], 0

loc_10BE:				; CODE XREF: _initRecognizers+D86j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_29C], ecx
		mov	edx, [ebp+var_29C]
		mov	[ebp+var_24], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_26C], eax
		cmp	[ebp+var_26C], 0
		jz	short loc_1152
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_260], eax
		cmp	[ebp+var_260], 0
		jz	short loc_112C
		mov	ecx, [ebp+var_260] ; this
		call	??0CharsetRecog_2022JP@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_2022JP::CharsetRecog_2022JP(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_1136
; ---------------------------------------------------------------------------

loc_112C:				; CODE XREF: _initRecognizers+DEBj
		mov	[ebp+var_5F8], 0

loc_1136:				; CODE XREF: _initRecognizers+DFEj
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_26C] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_115C
; ---------------------------------------------------------------------------

loc_1152:				; CODE XREF: _initRecognizers+DC8j
		mov	[ebp+var_5FC], 0

loc_115C:				; CODE XREF: _initRecognizers+E24j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_278], ecx
		mov	edx, [ebp+var_278]
		mov	[ebp+var_20], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_248], eax
		cmp	[ebp+var_248], 0
		jz	short loc_11F0
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_23C], eax
		cmp	[ebp+var_23C], 0
		jz	short loc_11CA
		mov	ecx, [ebp+var_23C] ; this
		call	??0CharsetRecog_2022KR@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_2022KR::CharsetRecog_2022KR(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_11D4
; ---------------------------------------------------------------------------

loc_11CA:				; CODE XREF: _initRecognizers+E89j
		mov	[ebp+var_5F8], 0

loc_11D4:				; CODE XREF: _initRecognizers+E9Cj
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_248] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_11FA
; ---------------------------------------------------------------------------

loc_11F0:				; CODE XREF: _initRecognizers+E66j
		mov	[ebp+var_5FC], 0

loc_11FA:				; CODE XREF: _initRecognizers+EC2j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_254], ecx
		mov	edx, [ebp+var_254]
		mov	[ebp+var_1C], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_224], eax
		cmp	[ebp+var_224], 0
		jz	short loc_128E
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_218], eax
		cmp	[ebp+var_218], 0
		jz	short loc_1268
		mov	ecx, [ebp+var_218] ; this
		call	??0CharsetRecog_2022CN@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_2022CN::CharsetRecog_2022CN(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_1272
; ---------------------------------------------------------------------------

loc_1268:				; CODE XREF: _initRecognizers+F27j
		mov	[ebp+var_5F8], 0

loc_1272:				; CODE XREF: _initRecognizers+F3Aj
		push	1		; signed __int8
		mov	eax, [ebp+var_5F8]
		push	eax		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_224] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_1298
; ---------------------------------------------------------------------------

loc_128E:				; CODE XREF: _initRecognizers+F04j
		mov	[ebp+var_5FC], 0

loc_1298:				; CODE XREF: _initRecognizers+F60j
		mov	ecx, [ebp+var_5FC]
		mov	[ebp+var_230], ecx
		mov	edx, [ebp+var_230]
		mov	[ebp+var_18], edx
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_200], eax
		cmp	[ebp+var_200], 0
		jz	short loc_1338
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1E8], eax
		cmp	[ebp+var_1E8], 0
		jz	short loc_1306
		mov	ecx, [ebp+var_1E8] ; this
		call	??0CharsetRecog_IBM424_he_rtl@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM424_he_rtl::CharsetRecog_IBM424_he_rtl(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_1310
; ---------------------------------------------------------------------------

loc_1306:				; CODE XREF: _initRecognizers+FC5j
		mov	[ebp+var_5F8], 0

loc_1310:				; CODE XREF: _initRecognizers+FD8j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_1F4], eax
		push	0		; signed __int8
		mov	ecx, [ebp+var_1F4]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_200] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_1342
; ---------------------------------------------------------------------------

loc_1338:				; CODE XREF: _initRecognizers+FA2j
		mov	[ebp+var_5FC], 0

loc_1342:				; CODE XREF: _initRecognizers+100Aj
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_20C], edx
		mov	eax, [ebp+var_20C]
		mov	[ebp+var_14], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1D0], eax
		cmp	[ebp+var_1D0], 0
		jz	short loc_13E2
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1B8], eax
		cmp	[ebp+var_1B8], 0
		jz	short loc_13B0
		mov	ecx, [ebp+var_1B8] ; this
		call	??0CharsetRecog_IBM424_he_ltr@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM424_he_ltr::CharsetRecog_IBM424_he_ltr(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_13BA
; ---------------------------------------------------------------------------

loc_13B0:				; CODE XREF: _initRecognizers+106Fj
		mov	[ebp+var_5F8], 0

loc_13BA:				; CODE XREF: _initRecognizers+1082j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_1C4], eax
		push	0		; signed __int8
		mov	ecx, [ebp+var_1C4]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_1D0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_13EC
; ---------------------------------------------------------------------------

loc_13E2:				; CODE XREF: _initRecognizers+104Cj
		mov	[ebp+var_5FC], 0

loc_13EC:				; CODE XREF: _initRecognizers+10B4j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_1DC], edx
		mov	eax, [ebp+var_1DC]
		mov	[ebp+var_10], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1A0], eax
		cmp	[ebp+var_1A0], 0
		jz	short loc_148C
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_188], eax
		cmp	[ebp+var_188], 0
		jz	short loc_145A
		mov	ecx, [ebp+var_188] ; this
		call	??0CharsetRecog_IBM420_ar_rtl@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM420_ar_rtl::CharsetRecog_IBM420_ar_rtl(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_1464
; ---------------------------------------------------------------------------

loc_145A:				; CODE XREF: _initRecognizers+1119j
		mov	[ebp+var_5F8], 0

loc_1464:				; CODE XREF: _initRecognizers+112Cj
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_194], eax
		push	0		; signed __int8
		mov	ecx, [ebp+var_194]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_1A0] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_1496
; ---------------------------------------------------------------------------

loc_148C:				; CODE XREF: _initRecognizers+10F6j
		mov	[ebp+var_5FC], 0

loc_1496:				; CODE XREF: _initRecognizers+115Ej
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_1AC], edx
		mov	eax, [ebp+var_1AC]
		mov	[ebp+var_C], eax
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_170], eax
		cmp	[ebp+var_170], 0
		jz	short loc_1536
		mov	esi, esp
		push	4		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_158], eax
		cmp	[ebp+var_158], 0
		jz	short loc_1504
		mov	ecx, [ebp+var_158] ; this
		call	??0CharsetRecog_IBM420_ar_ltr@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM420_ar_ltr::CharsetRecog_IBM420_ar_ltr(void)
		mov	[ebp+var_5F8], eax
		jmp	short loc_150E
; ---------------------------------------------------------------------------

loc_1504:				; CODE XREF: _initRecognizers+11C3j
		mov	[ebp+var_5F8], 0

loc_150E:				; CODE XREF: _initRecognizers+11D6j
		mov	eax, [ebp+var_5F8]
		mov	[ebp+var_164], eax
		push	0		; signed __int8
		mov	ecx, [ebp+var_164]
		push	ecx		; struct icu_56::CharsetRecognizer *
		mov	ecx, [ebp+var_170] ; this
		call	??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z ; icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CharsetRecognizer *,signed char)
		mov	[ebp+var_5FC], eax
		jmp	short loc_1540
; ---------------------------------------------------------------------------

loc_1536:				; CODE XREF: _initRecognizers+11A0j
		mov	[ebp+var_5FC], 0

loc_1540:				; CODE XREF: _initRecognizers+1208j
		mov	edx, [ebp+var_5FC]
		mov	[ebp+var_17C], edx
		mov	eax, [ebp+var_17C]
		mov	[ebp+var_8], eax
		mov	[ebp+var_80], 1Ch
		mov	eax, [ebp+var_80]
		shl	eax, 2
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	ds:_fCSRecognizers, eax
		cmp	ds:_fCSRecognizers, 0
		jnz	short loc_1584
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		jmp	short loc_15E8
; ---------------------------------------------------------------------------

loc_1584:				; CODE XREF: _initRecognizers+124Bj
		mov	eax, [ebp+var_80]
		mov	ds:_fCSRecognizers_size, eax
		mov	[ebp+var_8C], 0
		jmp	short loc_15A7
; ---------------------------------------------------------------------------

loc_1598:				; CODE XREF: _initRecognizers:loc_15E6j
		mov	eax, [ebp+var_8C]
		add	eax, 1
		mov	[ebp+var_8C], eax

loc_15A7:				; CODE XREF: _initRecognizers+126Aj
		mov	eax, [ebp+var_8C]
		cmp	eax, [ebp+var_80]
		jge	short loc_15E8
		mov	eax, [ebp+var_8C]
		mov	ecx, ds:_fCSRecognizers
		mov	edx, [ebp+var_8C]
		mov	edx, [ebp+edx*4+var_74]
		mov	[ecx+eax*4], edx
		mov	eax, [ebp+var_8C]
		mov	ecx, ds:_fCSRecognizers
		cmp	dword ptr [ecx+eax*4], 0
		jnz	short loc_15E6
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7

loc_15E6:				; CODE XREF: _initRecognizers+12AFj
		jmp	short loc_1598
; ---------------------------------------------------------------------------

loc_15E8:				; CODE XREF: _initRecognizers+1256j
					; _initRecognizers+1284j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN123
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 5FCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_initRecognizers endp

; ---------------------------------------------------------------------------
		align 10h
$LN123		dd 1			; DATA XREF: _initRecognizers+12C0o
		dd offset $LN122
$LN122		dd 0FFFFFF8Ch, 70h	; DATA XREF: .text:00001614o
		dd offset $LN121	; "tempArray"
$LN121		db 'tempArray',0        ; DATA XREF: .text:00001620o
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1630h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CSRecognizerInfo::CSRecognizerInfo(icu_56::CSRecognizerInfo	*this, struct icu_56::CharsetRecognizer	*, signed __int8)
		public ??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z
??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z proc	near
					; CODE XREF: _initRecognizers+9Fp
					; _initRecognizers+13Dp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax], ecx
		mov	eax, [ebp+var_8]
		mov	cl, [ebp+arg_4]
		mov	[eax+4], cl
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
??0CSRecognizerInfo@icu_56@@QAE@PAVCharsetRecognizer@1@C@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1670h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_csdet_cleanup	proc near		; DATA XREF: _initRecognizers+1Eo

var_E8		= dword	ptr -0E8h
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E8]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	ds:_fCSRecognizers, 0
		jz	loc_1732
		mov	[ebp+var_8], 0
		jmp	short loc_16AD
; ---------------------------------------------------------------------------

loc_16A4:				; CODE XREF: _csdet_cleanup+9Ej
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_16AD:				; CODE XREF: _csdet_cleanup+32j
		mov	eax, [ebp+var_8]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_1710
		mov	eax, [ebp+var_8]
		mov	ecx, ds:_fCSRecognizers
		mov	edx, [ecx+eax*4]
		mov	[ebp+var_D4], edx
		mov	eax, [ebp+var_D4]
		mov	[ebp+var_E0], eax
		cmp	[ebp+var_E0], 0
		jz	short loc_16F4
		push	1
		mov	ecx, [ebp+var_E0]
		call	??_GCSRecognizerInfo@icu_56@@QAEPAXI@Z ; icu_56::CSRecognizerInfo::`scalar deleting destructor'(uint)
		mov	[ebp+var_E8], eax
		jmp	short loc_16FE
; ---------------------------------------------------------------------------

loc_16F4:				; CODE XREF: _csdet_cleanup+6Dj
		mov	[ebp+var_E8], 0

loc_16FE:				; CODE XREF: _csdet_cleanup+82j
		mov	eax, [ebp+var_8]
		mov	ecx, ds:_fCSRecognizers
		mov	dword ptr [ecx+eax*4], 0
		jmp	short loc_16A4
; ---------------------------------------------------------------------------

loc_1710:				; CODE XREF: _csdet_cleanup+46j
		mov	eax, ds:_fCSRecognizers
		push	eax
		call	_uprv_free_56
		add	esp, 4
		mov	ds:_fCSRecognizers, 0
		mov	ds:_fCSRecognizers_size, 0

loc_1732:				; CODE XREF: _csdet_cleanup+25j
		mov	ecx, offset _gCSRecognizersInitOnce ; this
		call	?reset@UInitOnce@icu_56@@QAEXXZ	; icu_56::UInitOnce::reset(void)
		mov	al, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_csdet_cleanup	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1754h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::UInitOnce::reset(icu_56::UInitOnce *__hidden this)
		public ?reset@UInitOnce@icu_56@@QAEXXZ
?reset@UInitOnce@icu_56@@QAEXXZ	proc near ; CODE XREF: _csdet_cleanup+C7p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?reset@UInitOnce@icu_56@@QAEXXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1788h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void * __thiscall icu_56::CSRecognizerInfo::`scalar deleting destructor'(unsigned int)
		public ??_GCSRecognizerInfo@icu_56@@QAEPAXI@Z
??_GCSRecognizerInfo@icu_56@@QAEPAXI@Z proc near ; CODE	XREF: _csdet_cleanup+77p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CSRecognizerInfo@icu_56@@QAE@XZ ; icu_56::CSRecognizerInfo::~CSRecognizerInfo(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_17D1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_17D1:				; CODE XREF: icu_56::CSRecognizerInfo::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCSRecognizerInfo@icu_56@@QAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 17ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CSRecognizerInfo::~CSRecognizerInfo(icu_56::CSRecognizerInfo *__hidden this)
		public ??1CSRecognizerInfo@icu_56@@QAE@XZ
??1CSRecognizerInfo@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::CSRecognizerInfo::`scalar deleting	destructor'(uint)+26p

var_E8		= dword	ptr -0E8h
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E8]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_D4], ecx
		mov	edx, [ebp+var_D4]
		mov	[ebp+var_E0], edx
		cmp	[ebp+var_E0], 0
		jz	short loc_1855
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_E0]
		mov	edx, [eax]
		mov	ecx, [ebp+var_E0]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E8], eax
		jmp	short loc_185F
; ---------------------------------------------------------------------------

loc_1855:				; CODE XREF: icu_56::CSRecognizerInfo::~CSRecognizerInfo(void)+41j
		mov	[ebp+var_E8], 0

loc_185F:				; CODE XREF: icu_56::CSRecognizerInfo::~CSRecognizerInfo(void)+67j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1CSRecognizerInfo@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1874h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_UTF8::CharsetRecog_UTF8(icu_56::CharsetRecog_UTF8 *__hidden this)
		public ??0CharsetRecog_UTF8@icu_56@@QAE@XZ
??0CharsetRecog_UTF8@icu_56@@QAE@XZ proc near ;	CODE XREF: _initRecognizers+79p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecognizer@icu_56@@QAE@XZ ; icu_56::CharsetRecognizer::CharsetRecognizer(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_UTF8@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF8::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_UTF8@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18C0h
		dd offset ??_R4CharsetRecog_UTF8@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF8::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_UTF8@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF8::`vftable'
??_7CharsetRecog_UTF8@icu_56@@6B@ dd offset ?getName@CharsetRecog_UTF8@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_UTF8::CharsetRecog_UTF8(void)+2Eo
					; icu_56::CharsetRecog_UTF8::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_UTF8@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF8::match(icu_56::InputText	*,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_UTF8@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_UTF8::`vector deleting	destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 18D4h
		public ??_R4CharsetRecog_UTF8@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF8::`RTTI Complete Object Locator'
??_R4CharsetRecog_UTF8@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:000018C0o
		dd offset ??_R0?AVCharsetRecog_UTF8@icu_56@@@8 ; icu_56::CharsetRecog_UTF8 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_UTF8@icu_56@@8 ; icu_56::CharsetRecog_UTF8::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 18E8h
		public ??_R0?AVCharsetRecog_UTF8@icu_56@@@8
; class	icu_56::CharsetRecog_UTF8 `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_UTF8@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000018E0o
					; .rdata$r:icu_56::CharsetRecog_UTF8::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharsetrec	db '.?AVCharsetRecog_UTF8@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1910h
		public ??_R3CharsetRecog_UTF8@icu_56@@8
; icu_56::CharsetRecog_UTF8::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_UTF8@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:000018E4o
					; .rdata$r:00001948o
		dd 3
		dd offset ??_R2CharsetRecog_UTF8@icu_56@@8 ; icu_56::CharsetRecog_UTF8::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1920h
		public ??_R2CharsetRecog_UTF8@icu_56@@8
; icu_56::CharsetRecog_UTF8::`RTTI Base	Class Array'
??_R2CharsetRecog_UTF8@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_UTF8@icu_56@@8
					; DATA XREF: .rdata$r:0000191Co
					; icu_56::CharsetRecog_UTF8::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1930h
		public ??_R1A@?0A@EA@CharsetRecog_UTF8@icu_56@@8
; icu_56::CharsetRecog_UTF8::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_UTF8@icu_56@@8 dd offset ??_R0?AVCharsetRecog_UTF8@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_UTF8::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_UTF8 `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_UTF8@icu_56@@8 ; icu_56::CharsetRecog_UTF8::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 194Ch
		public ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
; icu_56::CharsetRecognizer::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 dd offset ??_R0?AVCharsetRecognizer@icu_56@@@8
					; DATA XREF: .rdata$r:00001924o
					; .rdata$r:icu_56::CharsetRecognizer::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecognizer `RTTI Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1968h
		public ??_R0?AVCharsetRecognizer@icu_56@@@8
; class	icu_56::CharsetRecognizer `RTTI	Type Descriptor'
??_R0?AVCharsetRecognizer@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; .rdata$r:00003878o
					; const	type_info::`vftable'
		align 10h
a_?avcharsetr_0	db '.?AVCharsetRecognizer@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1990h
		public ??_R3CharsetRecognizer@icu_56@@8
; icu_56::CharsetRecognizer::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecognizer@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001964o
					; .rdata$r:0000387Co
		dd 2
		dd offset ??_R2CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19A0h
		public ??_R2CharsetRecognizer@icu_56@@8
; icu_56::CharsetRecognizer::`RTTI Base	Class Array'
??_R2CharsetRecognizer@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
					; DATA XREF: .rdata$r:0000199Co
					; icu_56::CharsetRecognizer::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19ACh
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00001928o
					; .rdata$r:000019A4o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 19C8h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19E8h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:000019C4o
					; .rdata$r:00001A18o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 19F8h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:000019F4o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A00h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1A1Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_UTF_16_BE::CharsetRecog_UTF_16_BE(icu_56::CharsetRecog_UTF_16_BE *__hidden this)
		public ??0CharsetRecog_UTF_16_BE@icu_56@@QAE@XZ
??0CharsetRecog_UTF_16_BE@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+117p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_Unicode@icu_56@@QAE@XZ ; icu_56::CharsetRecog_Unicode::CharsetRecog_Unicode(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_UTF_16_BE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_16_BE::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_UTF_16_BE@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1A68h
		dd offset ??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_16_BE::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_UTF_16_BE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_16_BE::`vftable'
??_7CharsetRecog_UTF_16_BE@icu_56@@6B@ dd offset ?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_UTF_16_BE::CharsetRecog_UTF_16_BE(void)+2Eo
					; icu_56::CharsetRecog_UTF_16_BE::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_UTF_16_BE::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_UTF_16_BE::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A7Ch
		public ??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_16_BE::`RTTI Complete Object Locator'
??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:00001A68o
		dd offset ??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_16_BE `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_UTF_16_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1A90h
		public ??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8
; class	icu_56::CharsetRecog_UTF_16_BE `RTTI Type Descriptor'
??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001A88o
					; .rdata$r:icu_56::CharsetRecog_UTF_16_BE::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharsetr_1	db '.?AVCharsetRecog_UTF_16_BE@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1ABCh
		public ??_R3CharsetRecog_UTF_16_BE@icu_56@@8
; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_UTF_16_BE@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001A8Co
					; .rdata$r:00001AF8o
		dd 4
		dd offset ??_R2CharsetRecog_UTF_16_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1ACCh
		public ??_R2CharsetRecog_UTF_16_BE@icu_56@@8
; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Base Class Array'
??_R2CharsetRecog_UTF_16_BE@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8
					; DATA XREF: .rdata$r:00001AC8o
					; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1AE0h
		public ??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8
; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8 dd offset ??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_UTF_16_BE::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_UTF_16_BE `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_UTF_16_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_BE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1AFCh
		public ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
; icu_56::CharsetRecog_Unicode::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 dd	offset ??_R0?AVCharsetRecog_Unicode@icu_56@@@8
					; DATA XREF: .rdata$r:00001AD0o
					; .rdata$r:icu_56::CharsetRecog_Unicode::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_Unicode `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_Unicode@icu_56@@8 ;	icu_56::CharsetRecog_Unicode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1B18h
		public ??_R0?AVCharsetRecog_Unicode@icu_56@@@8
; class	icu_56::CharsetRecog_Unicode `RTTI Type	Descriptor'
??_R0?AVCharsetRecog_Unicode@icu_56@@@8	dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_Unicode::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; .rdata$r:00003950o
					; const	type_info::`vftable'
		align 10h
a_?avcharsetr_2	db '.?AVCharsetRecog_Unicode@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B44h
		public ??_R3CharsetRecog_Unicode@icu_56@@8
; icu_56::CharsetRecog_Unicode::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_Unicode@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001B14o
					; .rdata$r:00003954o
		dd 3
		dd offset ??_R2CharsetRecog_Unicode@icu_56@@8 ;	icu_56::CharsetRecog_Unicode::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B54h
		public ??_R2CharsetRecog_Unicode@icu_56@@8
; icu_56::CharsetRecog_Unicode::`RTTI Base Class Array'
??_R2CharsetRecog_Unicode@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
					; DATA XREF: .rdata$r:00001B50o
					; icu_56::CharsetRecog_Unicode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_UTF_16_LE::CharsetRecog_UTF_16_LE(icu_56::CharsetRecog_UTF_16_LE *__hidden this)
		public ??0CharsetRecog_UTF_16_LE@icu_56@@QAE@XZ
??0CharsetRecog_UTF_16_LE@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+1B5p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_Unicode@icu_56@@QAE@XZ ; icu_56::CharsetRecog_Unicode::CharsetRecog_Unicode(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_UTF_16_LE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_16_LE::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_UTF_16_LE@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1BB0h
		dd offset ??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_16_LE::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_UTF_16_LE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_16_LE::`vftable'
??_7CharsetRecog_UTF_16_LE@icu_56@@6B@ dd offset ?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_UTF_16_LE::CharsetRecog_UTF_16_LE(void)+2Eo
					; icu_56::CharsetRecog_UTF_16_LE::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_UTF_16_LE::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_UTF_16_LE::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1BC4h
		public ??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_16_LE::`RTTI Complete Object Locator'
??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:00001BB0o
		dd offset ??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_16_LE `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_UTF_16_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1BD8h
		public ??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8
; class	icu_56::CharsetRecog_UTF_16_LE `RTTI Type Descriptor'
??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001BD0o
					; .rdata$r:icu_56::CharsetRecog_UTF_16_LE::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharsetr_3	db '.?AVCharsetRecog_UTF_16_LE@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C04h
		public ??_R3CharsetRecog_UTF_16_LE@icu_56@@8
; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_UTF_16_LE@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001BD4o
					; .rdata$r:00001C40o
		dd 4
		dd offset ??_R2CharsetRecog_UTF_16_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C14h
		public ??_R2CharsetRecog_UTF_16_LE@icu_56@@8
; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Base Class Array'
??_R2CharsetRecog_UTF_16_LE@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8
					; DATA XREF: .rdata$r:00001C10o
					; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C28h
		public ??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8
; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8 dd offset ??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_UTF_16_LE::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_UTF_16_LE `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_UTF_16_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_LE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1C44h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_UTF_32_BE::CharsetRecog_UTF_32_BE(icu_56::CharsetRecog_UTF_32_BE *__hidden this)
		public ??0CharsetRecog_UTF_32_BE@icu_56@@QAE@XZ
??0CharsetRecog_UTF_32_BE@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+253p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_UTF_32@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_UTF_32::CharsetRecog_UTF_32(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_UTF_32_BE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_32_BE::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_UTF_32_BE@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1C90h
		dd offset ??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_32_BE::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_UTF_32_BE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_32_BE::`vftable'
??_7CharsetRecog_UTF_32_BE@icu_56@@6B@ dd offset ?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_UTF_32_BE::CharsetRecog_UTF_32_BE(void)+2Eo
					; icu_56::CharsetRecog_UTF_32_BE::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF_32::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_UTF_32_BE::`vector deleting destructor'(uint)
		dd offset ?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z ; icu_56::CharsetRecog_UTF_32_BE::getChar(uchar const *,int)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1CA8h
		public ??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_32_BE::`RTTI Complete Object Locator'
??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:00001C90o
		dd offset ??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_32_BE `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_UTF_32_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1CBCh
		public ??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8
; class	icu_56::CharsetRecog_UTF_32_BE `RTTI Type Descriptor'
??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001CB4o
					; .rdata$r:icu_56::CharsetRecog_UTF_32_BE::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharsetr_4	db '.?AVCharsetRecog_UTF_32_BE@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1CE8h
		public ??_R3CharsetRecog_UTF_32_BE@icu_56@@8
; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_UTF_32_BE@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001CB8o
					; .rdata$r:00001D28o
		dd 5
		dd offset ??_R2CharsetRecog_UTF_32_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1CF8h
		public ??_R2CharsetRecog_UTF_32_BE@icu_56@@8
; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Base Class Array'
??_R2CharsetRecog_UTF_32_BE@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8
					; DATA XREF: .rdata$r:00001CF4o
					; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8 ;	icu_56::CharsetRecog_UTF_32::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D10h
		public ??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8
; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8 dd offset ??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_UTF_32_BE::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_UTF_32_BE `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_UTF_32_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_BE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D2Ch
		public ??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8
; icu_56::CharsetRecog_UTF_32::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8 dd offset ??_R0?AVCharsetRecog_UTF_32@icu_56@@@8
					; DATA XREF: .rdata$r:00001CFCo
					; .rdata$r:icu_56::CharsetRecog_UTF_32::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_UTF_32 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_UTF_32@icu_56@@8 ; icu_56::CharsetRecog_UTF_32::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1D48h
		public ??_R0?AVCharsetRecog_UTF_32@icu_56@@@8
; class	icu_56::CharsetRecog_UTF_32 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_UTF_32@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_UTF_32::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00003A90o
					; const	type_info::`vftable'
		align 10h
a_?avcharsetr_5	db '.?AVCharsetRecog_UTF_32@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D74h
		public ??_R3CharsetRecog_UTF_32@icu_56@@8
; icu_56::CharsetRecog_UTF_32::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_UTF_32@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00001D44o
					; .rdata$r:00003A94o
		dd 4
		dd offset ??_R2CharsetRecog_UTF_32@icu_56@@8 ; icu_56::CharsetRecog_UTF_32::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D84h
		public ??_R2CharsetRecog_UTF_32@icu_56@@8
; icu_56::CharsetRecog_UTF_32::`RTTI Base Class	Array'
??_R2CharsetRecog_UTF_32@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8
					; DATA XREF: .rdata$r:00001D80o
					; icu_56::CharsetRecog_UTF_32::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D98h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_UTF_32_LE::CharsetRecog_UTF_32_LE(icu_56::CharsetRecog_UTF_32_LE *__hidden this)
		public ??0CharsetRecog_UTF_32_LE@icu_56@@QAE@XZ
??0CharsetRecog_UTF_32_LE@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+2F1p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_UTF_32@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_UTF_32::CharsetRecog_UTF_32(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_UTF_32_LE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_32_LE::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_UTF_32_LE@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1DE4h
		dd offset ??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_32_LE::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_UTF_32_LE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_32_LE::`vftable'
??_7CharsetRecog_UTF_32_LE@icu_56@@6B@ dd offset ?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_UTF_32_LE::CharsetRecog_UTF_32_LE(void)+2Eo
					; icu_56::CharsetRecog_UTF_32_LE::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF_32::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_UTF_32_LE::`vector deleting destructor'(uint)
		dd offset ?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z ; icu_56::CharsetRecog_UTF_32_LE::getChar(uchar const *,int)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1DFCh
		public ??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_32_LE::`RTTI Complete Object Locator'
??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:00001DE4o
		dd offset ??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_32_LE `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_UTF_32_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1E10h
		public ??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8
; class	icu_56::CharsetRecog_UTF_32_LE `RTTI Type Descriptor'
??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001E08o
					; .rdata$r:icu_56::CharsetRecog_UTF_32_LE::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharsetr_6	db '.?AVCharsetRecog_UTF_32_LE@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1E3Ch
		public ??_R3CharsetRecog_UTF_32_LE@icu_56@@8
; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_UTF_32_LE@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001E0Co
					; .rdata$r:00001E7Co
		dd 5
		dd offset ??_R2CharsetRecog_UTF_32_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1E4Ch
		public ??_R2CharsetRecog_UTF_32_LE@icu_56@@8
; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Base Class Array'
??_R2CharsetRecog_UTF_32_LE@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8
					; DATA XREF: .rdata$r:00001E48o
					; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8 ;	icu_56::CharsetRecog_UTF_32::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1E64h
		public ??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8
; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8 dd offset ??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_UTF_32_LE::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_UTF_32_LE `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_UTF_32_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_LE::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1E80h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_1::CharsetRecog_8859_1(icu_56::CharsetRecog_8859_1 *__hidden this)
		public ??0CharsetRecog_8859_1@icu_56@@QAE@XZ
??0CharsetRecog_8859_1@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+38Fp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_1@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_1::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_1@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1ECCh
		dd offset ??_R4CharsetRecog_8859_1@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_1::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_1@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_1::`vftable'
??_7CharsetRecog_8859_1@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_1@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_1::CharsetRecog_8859_1(void)+2Eo
					; icu_56::CharsetRecog_8859_1::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_1@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_8859_1::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_1@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_1::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1EE4h
		public ??_R4CharsetRecog_8859_1@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_1::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_1@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00001ECCo
		dd offset ??_R0?AVCharsetRecog_8859_1@icu_56@@@8 ; icu_56::CharsetRecog_8859_1 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_1@icu_56@@8 ; icu_56::CharsetRecog_8859_1::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1EF8h
		public ??_R0?AVCharsetRecog_8859_1@icu_56@@@8
; class	icu_56::CharsetRecog_8859_1 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_1@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001EF0o
					; .rdata$r:icu_56::CharsetRecog_8859_1::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharsetr_7	db '.?AVCharsetRecog_8859_1@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F24h
		public ??_R3CharsetRecog_8859_1@icu_56@@8
; icu_56::CharsetRecog_8859_1::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_1@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00001EF4o
					; .rdata$r:00001F60o
		dd 4
		dd offset ??_R2CharsetRecog_8859_1@icu_56@@8 ; icu_56::CharsetRecog_8859_1::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F34h
		public ??_R2CharsetRecog_8859_1@icu_56@@8
; icu_56::CharsetRecog_8859_1::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_1@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_1@icu_56@@8
					; DATA XREF: .rdata$r:00001F30o
					; icu_56::CharsetRecog_8859_1::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F48h
		public ??_R1A@?0A@EA@CharsetRecog_8859_1@icu_56@@8
; icu_56::CharsetRecog_8859_1::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_1@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_1@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_1::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_1 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_1@icu_56@@8 ; icu_56::CharsetRecog_8859_1::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F64h
		public ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8
; icu_56::CharsetRecog_sbcs::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 dd offset ??_R0?AVCharsetRecog_sbcs@icu_56@@@8
					; DATA XREF: .rdata$r:00001F38o
					; .rdata$r:icu_56::CharsetRecog_sbcs::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_sbcs `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1F80h
		public ??_R0?AVCharsetRecog_sbcs@icu_56@@@8
; class	icu_56::CharsetRecog_sbcs `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_sbcs@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharsetr_8	db '.?AVCharsetRecog_sbcs@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1FA8h
		public ??_R3CharsetRecog_sbcs@icu_56@@8
; icu_56::CharsetRecog_sbcs::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_sbcs@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001F7Co
		dd 3
		dd offset ??_R2CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1FB8h
		public ??_R2CharsetRecog_sbcs@icu_56@@8
; icu_56::CharsetRecog_sbcs::`RTTI Base	Class Array'
??_R2CharsetRecog_sbcs@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8
					; DATA XREF: .rdata$r:00001FB4o
					; icu_56::CharsetRecog_sbcs::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1FC8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_2::CharsetRecog_8859_2(icu_56::CharsetRecog_8859_2 *__hidden this)
		public ??0CharsetRecog_8859_2@icu_56@@QAE@XZ
??0CharsetRecog_8859_2@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+439p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_2@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_2::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi

loc_2000:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::fixedo
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_2@icu_56@@QAE@XZ endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2014h
		dd offset ??_R4CharsetRecog_8859_2@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_2::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_2@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_2::`vftable'
??_7CharsetRecog_8859_2@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_2@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_2::CharsetRecog_8859_2(void)+2Eo
					; icu_56::CharsetRecog_8859_2::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_2@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_8859_2::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_2@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_2::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 202Ch
		public ??_R4CharsetRecog_8859_2@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_2::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_2@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00002014o
		dd offset ??_R0?AVCharsetRecog_8859_2@icu_56@@@8 ; icu_56::CharsetRecog_8859_2 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_2@icu_56@@8 ; icu_56::CharsetRecog_8859_2::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2040h
		public ??_R0?AVCharsetRecog_8859_2@icu_56@@@8
; class	icu_56::CharsetRecog_8859_2 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_2@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002038o
					; .rdata$r:icu_56::CharsetRecog_8859_2::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharsetr_9	db '.?AVCharsetRecog_8859_2@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 206Ch
		public ??_R3CharsetRecog_8859_2@icu_56@@8
; icu_56::CharsetRecog_8859_2::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_2@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:0000203Co
					; .rdata$r:000020A8o
		dd 4
		dd offset ??_R2CharsetRecog_8859_2@icu_56@@8 ; icu_56::CharsetRecog_8859_2::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 207Ch
		public ??_R2CharsetRecog_8859_2@icu_56@@8
; icu_56::CharsetRecog_8859_2::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_2@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_2@icu_56@@8
					; DATA XREF: .rdata$r:00002078o
					; icu_56::CharsetRecog_8859_2::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2090h
		public ??_R1A@?0A@EA@CharsetRecog_8859_2@icu_56@@8
; icu_56::CharsetRecog_8859_2::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_2@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_2@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_2::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_2 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_2@icu_56@@8 ; icu_56::CharsetRecog_8859_2::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 20ACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_5_ru::CharsetRecog_8859_5_ru(icu_56::CharsetRecog_8859_5_ru *__hidden this)
		public ??0CharsetRecog_8859_5_ru@icu_56@@QAE@XZ
??0CharsetRecog_8859_5_ru@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+4E3p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_8859_5@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_5::CharsetRecog_8859_5(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_5_ru@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_5_ru::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_5_ru@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20F8h
		dd offset ??_R4CharsetRecog_8859_5_ru@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_5_ru::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_8859_5_ru@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_5_ru::`vftable'
??_7CharsetRecog_8859_5_ru@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_5@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_5_ru::CharsetRecog_8859_5_ru(void)+2Eo
					; icu_56::CharsetRecog_8859_5::getName(void)
		dd offset ?getLanguage@CharsetRecog_8859_5_ru@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_8859_5_ru::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_5_ru@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_8859_5_ru::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_5_ru::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2110h
		public ??_R4CharsetRecog_8859_5_ru@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_5_ru::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_5_ru@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:000020F8o
		dd offset ??_R0?AVCharsetRecog_8859_5_ru@icu_56@@@8 ; icu_56::CharsetRecog_8859_5_ru `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_8859_5_ru@icu_56@@8	; icu_56::CharsetRecog_8859_5_ru::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2124h
		public ??_R0?AVCharsetRecog_8859_5_ru@icu_56@@@8
; class	icu_56::CharsetRecog_8859_5_ru `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_5_ru@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:0000211Co
					; .rdata$r:icu_56::CharsetRecog_8859_5_ru::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_10	db '.?AVCharsetRecog_8859_5_ru@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2150h
		public ??_R3CharsetRecog_8859_5_ru@icu_56@@8
; icu_56::CharsetRecog_8859_5_ru::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_8859_5_ru@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002120o
					; .rdata$r:00002190o
		dd 5
		dd offset ??_R2CharsetRecog_8859_5_ru@icu_56@@8	; icu_56::CharsetRecog_8859_5_ru::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2160h
		public ??_R2CharsetRecog_8859_5_ru@icu_56@@8
; icu_56::CharsetRecog_8859_5_ru::`RTTI	Base Class Array'
??_R2CharsetRecog_8859_5_ru@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_8859_5_ru@icu_56@@8
					; DATA XREF: .rdata$r:0000215Co
					; icu_56::CharsetRecog_8859_5_ru::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_8859_5@icu_56@@8 ;	icu_56::CharsetRecog_8859_5::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2178h
		public ??_R1A@?0A@EA@CharsetRecog_8859_5_ru@icu_56@@8
; icu_56::CharsetRecog_8859_5_ru::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_5_ru@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_5_ru@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_5_ru::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_5_ru `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_5_ru@icu_56@@8	; icu_56::CharsetRecog_8859_5_ru::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2194h
		public ??_R1A@?0A@EA@CharsetRecog_8859_5@icu_56@@8
; icu_56::CharsetRecog_8859_5::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_5@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_5@icu_56@@@8
					; DATA XREF: .rdata$r:00002164o
					; .rdata$r:icu_56::CharsetRecog_8859_5::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_5 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_5@icu_56@@8 ; icu_56::CharsetRecog_8859_5::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 21B0h
		public ??_R0?AVCharsetRecog_8859_5@icu_56@@@8
; class	icu_56::CharsetRecog_8859_5 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_5@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_5::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00003C98o
					; const	type_info::`vftable'
		align 8
a_?avcharset_11	db '.?AVCharsetRecog_8859_5@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 21DCh
		public ??_R3CharsetRecog_8859_5@icu_56@@8
; icu_56::CharsetRecog_8859_5::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_5@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000021ACo
					; .rdata$r:00003C9Co
		dd 4
		dd offset ??_R2CharsetRecog_8859_5@icu_56@@8 ; icu_56::CharsetRecog_8859_5::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 21ECh
		public ??_R2CharsetRecog_8859_5@icu_56@@8
; icu_56::CharsetRecog_8859_5::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_5@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_5@icu_56@@8
					; DATA XREF: .rdata$r:000021E8o
					; icu_56::CharsetRecog_8859_5::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2200h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_6_ar::CharsetRecog_8859_6_ar(icu_56::CharsetRecog_8859_6_ar *__hidden this)
		public ??0CharsetRecog_8859_6_ar@icu_56@@QAE@XZ
??0CharsetRecog_8859_6_ar@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+58Dp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_8859_6@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_6::CharsetRecog_8859_6(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_6_ar@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_6_ar::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_6_ar@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 224Ch
		dd offset ??_R4CharsetRecog_8859_6_ar@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_6_ar::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_8859_6_ar@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_6_ar::`vftable'
??_7CharsetRecog_8859_6_ar@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_6@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_6_ar::CharsetRecog_8859_6_ar(void)+2Eo
					; icu_56::CharsetRecog_8859_6::getName(void)
		dd offset ?getLanguage@CharsetRecog_8859_6_ar@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_8859_6_ar::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_6_ar@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_8859_6_ar::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_6_ar::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2264h
		public ??_R4CharsetRecog_8859_6_ar@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_6_ar::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_6_ar@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:0000224Co
		dd offset ??_R0?AVCharsetRecog_8859_6_ar@icu_56@@@8 ; icu_56::CharsetRecog_8859_6_ar `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_8859_6_ar@icu_56@@8	; icu_56::CharsetRecog_8859_6_ar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2278h
		public ??_R0?AVCharsetRecog_8859_6_ar@icu_56@@@8
; class	icu_56::CharsetRecog_8859_6_ar `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_6_ar@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002270o
					; .rdata$r:icu_56::CharsetRecog_8859_6_ar::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_12	db '.?AVCharsetRecog_8859_6_ar@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 22A4h
		public ??_R3CharsetRecog_8859_6_ar@icu_56@@8
; icu_56::CharsetRecog_8859_6_ar::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_8859_6_ar@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002274o
					; .rdata$r:000022E4o
		dd 5
		dd offset ??_R2CharsetRecog_8859_6_ar@icu_56@@8	; icu_56::CharsetRecog_8859_6_ar::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 22B4h
		public ??_R2CharsetRecog_8859_6_ar@icu_56@@8
; icu_56::CharsetRecog_8859_6_ar::`RTTI	Base Class Array'
??_R2CharsetRecog_8859_6_ar@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_8859_6_ar@icu_56@@8
					; DATA XREF: .rdata$r:000022B0o
					; icu_56::CharsetRecog_8859_6_ar::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_8859_6@icu_56@@8 ;	icu_56::CharsetRecog_8859_6::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 22CCh
		public ??_R1A@?0A@EA@CharsetRecog_8859_6_ar@icu_56@@8
; icu_56::CharsetRecog_8859_6_ar::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_6_ar@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_6_ar@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_6_ar::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_6_ar `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_6_ar@icu_56@@8	; icu_56::CharsetRecog_8859_6_ar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 22E8h
		public ??_R1A@?0A@EA@CharsetRecog_8859_6@icu_56@@8
; icu_56::CharsetRecog_8859_6::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_6@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_6@icu_56@@@8
					; DATA XREF: .rdata$r:000022B8o
					; .rdata$r:icu_56::CharsetRecog_8859_6::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_6 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_6@icu_56@@8 ; icu_56::CharsetRecog_8859_6::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2304h
		public ??_R0?AVCharsetRecog_8859_6@icu_56@@@8
; class	icu_56::CharsetRecog_8859_6 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_6@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_6::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00003D74o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_13	db '.?AVCharsetRecog_8859_6@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2330h
		public ??_R3CharsetRecog_8859_6@icu_56@@8
; icu_56::CharsetRecog_8859_6::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_6@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00002300o
					; .rdata$r:00003D78o
		dd 4
		dd offset ??_R2CharsetRecog_8859_6@icu_56@@8 ; icu_56::CharsetRecog_8859_6::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2340h
		public ??_R2CharsetRecog_8859_6@icu_56@@8
; icu_56::CharsetRecog_8859_6::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_6@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_6@icu_56@@8
					; DATA XREF: .rdata$r:0000233Co
					; icu_56::CharsetRecog_8859_6::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2354h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_7_el::CharsetRecog_8859_7_el(icu_56::CharsetRecog_8859_7_el *__hidden this)
		public ??0CharsetRecog_8859_7_el@icu_56@@QAE@XZ
??0CharsetRecog_8859_7_el@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+637p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_8859_7@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_7::CharsetRecog_8859_7(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_7_el@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_7_el::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_7_el@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 23A0h
		dd offset ??_R4CharsetRecog_8859_7_el@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_7_el::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_8859_7_el@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_7_el::`vftable'
??_7CharsetRecog_8859_7_el@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_7@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_7_el::CharsetRecog_8859_7_el(void)+2Eo
					; icu_56::CharsetRecog_8859_7::getName(void)
		dd offset ?getLanguage@CharsetRecog_8859_7_el@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_8859_7_el::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_7_el@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_8859_7_el::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_7_el::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 23B8h
		public ??_R4CharsetRecog_8859_7_el@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_7_el::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_7_el@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:000023A0o
		dd offset ??_R0?AVCharsetRecog_8859_7_el@icu_56@@@8 ; icu_56::CharsetRecog_8859_7_el `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_8859_7_el@icu_56@@8	; icu_56::CharsetRecog_8859_7_el::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 23CCh
		public ??_R0?AVCharsetRecog_8859_7_el@icu_56@@@8
; class	icu_56::CharsetRecog_8859_7_el `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_7_el@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000023C4o
					; .rdata$r:icu_56::CharsetRecog_8859_7_el::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_14	db '.?AVCharsetRecog_8859_7_el@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 23F8h
		public ??_R3CharsetRecog_8859_7_el@icu_56@@8
; icu_56::CharsetRecog_8859_7_el::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_8859_7_el@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:000023C8o
					; .rdata$r:00002438o
		dd 5
		dd offset ??_R2CharsetRecog_8859_7_el@icu_56@@8	; icu_56::CharsetRecog_8859_7_el::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2408h
		public ??_R2CharsetRecog_8859_7_el@icu_56@@8
; icu_56::CharsetRecog_8859_7_el::`RTTI	Base Class Array'
??_R2CharsetRecog_8859_7_el@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_8859_7_el@icu_56@@8
					; DATA XREF: .rdata$r:00002404o
					; icu_56::CharsetRecog_8859_7_el::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_8859_7@icu_56@@8 ;	icu_56::CharsetRecog_8859_7::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2420h
		public ??_R1A@?0A@EA@CharsetRecog_8859_7_el@icu_56@@8
; icu_56::CharsetRecog_8859_7_el::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_7_el@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_7_el@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_7_el::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_7_el `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_7_el@icu_56@@8	; icu_56::CharsetRecog_8859_7_el::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 243Ch
		public ??_R1A@?0A@EA@CharsetRecog_8859_7@icu_56@@8
; icu_56::CharsetRecog_8859_7::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_7@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_7@icu_56@@@8
					; DATA XREF: .rdata$r:0000240Co
					; .rdata$r:icu_56::CharsetRecog_8859_7::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_7 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_7@icu_56@@8 ; icu_56::CharsetRecog_8859_7::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2458h
		public ??_R0?AVCharsetRecog_8859_7@icu_56@@@8
; class	icu_56::CharsetRecog_8859_7 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_7@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_7::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00003E50o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_15	db '.?AVCharsetRecog_8859_7@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2484h
		public ??_R3CharsetRecog_8859_7@icu_56@@8
; icu_56::CharsetRecog_8859_7::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_7@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00002454o
					; .rdata$r:00003E54o
		dd 4
		dd offset ??_R2CharsetRecog_8859_7@icu_56@@8 ; icu_56::CharsetRecog_8859_7::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2494h
		public ??_R2CharsetRecog_8859_7@icu_56@@8
; icu_56::CharsetRecog_8859_7::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_7@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_7@icu_56@@8
					; DATA XREF: .rdata$r:00002490o
					; icu_56::CharsetRecog_8859_7::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 24A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_8_I_he::CharsetRecog_8859_8_I_he(icu_56::CharsetRecog_8859_8_I_he	*__hidden this)
		public ??0CharsetRecog_8859_8_I_he@icu_56@@QAE@XZ
??0CharsetRecog_8859_8_I_he@icu_56@@QAE@XZ proc	near ; CODE XREF: _initRecognizers+6E1p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_8859_8@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_8::CharsetRecog_8859_8(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_8_I_he@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_8_I_he::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_8_I_he@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24F4h
		dd offset ??_R4CharsetRecog_8859_8_I_he@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_8_I_he::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_8_I_he@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_8_I_he::`vftable'
??_7CharsetRecog_8859_8_I_he@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_8_I_he::CharsetRecog_8859_8_I_he(void)+2Eo
					; icu_56::CharsetRecog_8859_8_I_he::getName(void)
		dd offset ?getLanguage@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_8859_8_I_he::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_8_I_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_8859_8_I_he::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_8_I_he::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 250Ch
		public ??_R4CharsetRecog_8859_8_I_he@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_8_I_he::`RTTI	Complete Object	Locator'
??_R4CharsetRecog_8859_8_I_he@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:000024F4o
		dd offset ??_R0?AVCharsetRecog_8859_8_I_he@icu_56@@@8 ;	icu_56::CharsetRecog_8859_8_I_he `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_8_I_he@icu_56@@8 ; icu_56::CharsetRecog_8859_8_I_he::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2520h
		public ??_R0?AVCharsetRecog_8859_8_I_he@icu_56@@@8
; class	icu_56::CharsetRecog_8859_8_I_he `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_8_I_he@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002518o
					; .rdata$r:icu_56::CharsetRecog_8859_8_I_he::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharset_16	db '.?AVCharsetRecog_8859_8_I_he@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2550h
		public ??_R3CharsetRecog_8859_8_I_he@icu_56@@8
; icu_56::CharsetRecog_8859_8_I_he::`RTTI Class	Hierarchy Descriptor'
??_R3CharsetRecog_8859_8_I_he@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:0000251Co
					; .rdata$r:00002590o
		dd 5
		dd offset ??_R2CharsetRecog_8859_8_I_he@icu_56@@8 ; icu_56::CharsetRecog_8859_8_I_he::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2560h
		public ??_R2CharsetRecog_8859_8_I_he@icu_56@@8
; icu_56::CharsetRecog_8859_8_I_he::`RTTI Base Class Array'
??_R2CharsetRecog_8859_8_I_he@icu_56@@8	dd offset ??_R1A@?0A@EA@CharsetRecog_8859_8_I_he@icu_56@@8
					; DATA XREF: .rdata$r:0000255Co
					; icu_56::CharsetRecog_8859_8_I_he::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8 ;	icu_56::CharsetRecog_8859_8::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2578h
		public ??_R1A@?0A@EA@CharsetRecog_8859_8_I_he@icu_56@@8
; icu_56::CharsetRecog_8859_8_I_he::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_8_I_he@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_8_I_he@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_8_I_he::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_8_I_he `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_8_I_he@icu_56@@8 ; icu_56::CharsetRecog_8859_8_I_he::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2594h
		public ??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8
; icu_56::CharsetRecog_8859_8::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_8@icu_56@@@8
					; DATA XREF: .rdata$r:00002564o
					; .rdata$r:icu_56::CharsetRecog_8859_8::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_8859_8 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_8@icu_56@@8 ; icu_56::CharsetRecog_8859_8::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 25B0h
		public ??_R0?AVCharsetRecog_8859_8@icu_56@@@8
; class	icu_56::CharsetRecog_8859_8 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_8@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_8::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00003F2Co
					; const	type_info::`vftable'
		align 8
a_?avcharset_17	db '.?AVCharsetRecog_8859_8@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 25DCh
		public ??_R3CharsetRecog_8859_8@icu_56@@8
; icu_56::CharsetRecog_8859_8::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_8@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000025ACo
					; .rdata$r:00003F30o
		dd 4
		dd offset ??_R2CharsetRecog_8859_8@icu_56@@8 ; icu_56::CharsetRecog_8859_8::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 25ECh
		public ??_R2CharsetRecog_8859_8@icu_56@@8
; icu_56::CharsetRecog_8859_8::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_8@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8
					; DATA XREF: .rdata$r:000025E8o
					; icu_56::CharsetRecog_8859_8::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2600h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_8_he::CharsetRecog_8859_8_he(icu_56::CharsetRecog_8859_8_he *__hidden this)
		public ??0CharsetRecog_8859_8_he@icu_56@@QAE@XZ
??0CharsetRecog_8859_8_he@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+78Bp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_8859_8@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_8::CharsetRecog_8859_8(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_8_he@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_8_he::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_8_he@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 264Ch
		dd offset ??_R4CharsetRecog_8859_8_he@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_8_he::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_8859_8_he@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_8_he::`vftable'
??_7CharsetRecog_8859_8_he@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_8@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_8_he::CharsetRecog_8859_8_he(void)+2Eo
					; icu_56::CharsetRecog_8859_8::getName(void)
		dd offset ?getLanguage@CharsetRecog_8859_8_he@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_8859_8_he::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_8_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_8859_8_he::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_8_he::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2664h
		public ??_R4CharsetRecog_8859_8_he@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_8_he::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_8_he@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:0000264Co
		dd offset ??_R0?AVCharsetRecog_8859_8_he@icu_56@@@8 ; icu_56::CharsetRecog_8859_8_he `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_8859_8_he@icu_56@@8	; icu_56::CharsetRecog_8859_8_he::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2678h
		public ??_R0?AVCharsetRecog_8859_8_he@icu_56@@@8
; class	icu_56::CharsetRecog_8859_8_he `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_8_he@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002670o
					; .rdata$r:icu_56::CharsetRecog_8859_8_he::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_18	db '.?AVCharsetRecog_8859_8_he@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 26A4h
		public ??_R3CharsetRecog_8859_8_he@icu_56@@8
; icu_56::CharsetRecog_8859_8_he::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_8859_8_he@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002674o
					; .rdata$r:000026E4o
		dd 5
		dd offset ??_R2CharsetRecog_8859_8_he@icu_56@@8	; icu_56::CharsetRecog_8859_8_he::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 26B4h
		public ??_R2CharsetRecog_8859_8_he@icu_56@@8
; icu_56::CharsetRecog_8859_8_he::`RTTI	Base Class Array'
??_R2CharsetRecog_8859_8_he@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_8859_8_he@icu_56@@8
					; DATA XREF: .rdata$r:000026B0o
					; icu_56::CharsetRecog_8859_8_he::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_8859_8@icu_56@@8 ;	icu_56::CharsetRecog_8859_8::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 26CCh
		public ??_R1A@?0A@EA@CharsetRecog_8859_8_he@icu_56@@8
; icu_56::CharsetRecog_8859_8_he::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_8_he@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_8_he@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_8_he::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_8_he `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_8_he@icu_56@@8	; icu_56::CharsetRecog_8859_8_he::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 26E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_windows_1251::CharsetRecog_windows_1251(icu_56::CharsetRecog_windows_1251 *__hidden this)
		public ??0CharsetRecog_windows_1251@icu_56@@QAE@XZ
??0CharsetRecog_windows_1251@icu_56@@QAE@XZ proc near ;	CODE XREF: _initRecognizers+835p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_windows_1251@icu_56@@6B@ ; const icu_56::CharsetRecog_windows_1251::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_windows_1251@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2734h
		dd offset ??_R4CharsetRecog_windows_1251@icu_56@@6B@ ; const icu_56::CharsetRecog_windows_1251::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_windows_1251@icu_56@@6B@
; const	icu_56::CharsetRecog_windows_1251::`vftable'
??_7CharsetRecog_windows_1251@icu_56@@6B@ dd offset ?getName@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_windows_1251::CharsetRecog_windows_1251(void)+2Eo
					; icu_56::CharsetRecog_windows_1251::getName(void)
		dd offset ?getLanguage@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_windows_1251::getLanguage(void)
		dd offset ?match@CharsetRecog_windows_1251@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_windows_1251::match(icu_56::InputText	*,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_windows_1251@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_windows_1251::`vector deleting	destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 274Ch
		public ??_R4CharsetRecog_windows_1251@icu_56@@6B@
; const	icu_56::CharsetRecog_windows_1251::`RTTI Complete Object Locator'
??_R4CharsetRecog_windows_1251@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00002734o
		dd offset ??_R0?AVCharsetRecog_windows_1251@icu_56@@@8 ; icu_56::CharsetRecog_windows_1251 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_windows_1251@icu_56@@8 ; icu_56::CharsetRecog_windows_1251::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2760h
		public ??_R0?AVCharsetRecog_windows_1251@icu_56@@@8
; class	icu_56::CharsetRecog_windows_1251 `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_windows_1251@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002758o
					; .rdata$r:icu_56::CharsetRecog_windows_1251::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharset_19	db '.?AVCharsetRecog_windows_1251@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2790h
		public ??_R3CharsetRecog_windows_1251@icu_56@@8
; icu_56::CharsetRecog_windows_1251::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_windows_1251@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:0000275Co
					; .rdata$r:000027CCo
		dd 4
		dd offset ??_R2CharsetRecog_windows_1251@icu_56@@8 ; icu_56::CharsetRecog_windows_1251::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 27A0h
		public ??_R2CharsetRecog_windows_1251@icu_56@@8
; icu_56::CharsetRecog_windows_1251::`RTTI Base	Class Array'
??_R2CharsetRecog_windows_1251@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_windows_1251@icu_56@@8
					; DATA XREF: .rdata$r:0000279Co
					; icu_56::CharsetRecog_windows_1251::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 27B4h
		public ??_R1A@?0A@EA@CharsetRecog_windows_1251@icu_56@@8
; icu_56::CharsetRecog_windows_1251::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_windows_1251@icu_56@@8 dd offset ??_R0?AVCharsetRecog_windows_1251@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_windows_1251::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_windows_1251 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_windows_1251@icu_56@@8 ; icu_56::CharsetRecog_windows_1251::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 27D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_windows_1256::CharsetRecog_windows_1256(icu_56::CharsetRecog_windows_1256 *__hidden this)
		public ??0CharsetRecog_windows_1256@icu_56@@QAE@XZ
??0CharsetRecog_windows_1256@icu_56@@QAE@XZ proc near ;	CODE XREF: _initRecognizers+8DFp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_windows_1256@icu_56@@6B@ ; const icu_56::CharsetRecog_windows_1256::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_windows_1256@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 281Ch
		dd offset ??_R4CharsetRecog_windows_1256@icu_56@@6B@ ; const icu_56::CharsetRecog_windows_1256::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_windows_1256@icu_56@@6B@
; const	icu_56::CharsetRecog_windows_1256::`vftable'
??_7CharsetRecog_windows_1256@icu_56@@6B@ dd offset ?getName@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_windows_1256::CharsetRecog_windows_1256(void)+2Eo
					; icu_56::CharsetRecog_windows_1256::getName(void)
		dd offset ?getLanguage@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_windows_1256::getLanguage(void)
		dd offset ?match@CharsetRecog_windows_1256@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_windows_1256::match(icu_56::InputText	*,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_windows_1256@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_windows_1256::`vector deleting	destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2834h
		public ??_R4CharsetRecog_windows_1256@icu_56@@6B@
; const	icu_56::CharsetRecog_windows_1256::`RTTI Complete Object Locator'
??_R4CharsetRecog_windows_1256@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:0000281Co
		dd offset ??_R0?AVCharsetRecog_windows_1256@icu_56@@@8 ; icu_56::CharsetRecog_windows_1256 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_windows_1256@icu_56@@8 ; icu_56::CharsetRecog_windows_1256::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2848h
		public ??_R0?AVCharsetRecog_windows_1256@icu_56@@@8
; class	icu_56::CharsetRecog_windows_1256 `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_windows_1256@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002840o
					; .rdata$r:icu_56::CharsetRecog_windows_1256::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_20	db '.?AVCharsetRecog_windows_1256@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2878h
		public ??_R3CharsetRecog_windows_1256@icu_56@@8
; icu_56::CharsetRecog_windows_1256::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_windows_1256@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002844o
					; .rdata$r:000028B4o
		dd 4
		dd offset ??_R2CharsetRecog_windows_1256@icu_56@@8 ; icu_56::CharsetRecog_windows_1256::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2888h
		public ??_R2CharsetRecog_windows_1256@icu_56@@8
; icu_56::CharsetRecog_windows_1256::`RTTI Base	Class Array'
??_R2CharsetRecog_windows_1256@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_windows_1256@icu_56@@8
					; DATA XREF: .rdata$r:00002884o
					; icu_56::CharsetRecog_windows_1256::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 289Ch
		public ??_R1A@?0A@EA@CharsetRecog_windows_1256@icu_56@@8
; icu_56::CharsetRecog_windows_1256::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_windows_1256@icu_56@@8 dd offset ??_R0?AVCharsetRecog_windows_1256@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_windows_1256::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_windows_1256 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_windows_1256@icu_56@@8 ; icu_56::CharsetRecog_windows_1256::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 28B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_KOI8_R::CharsetRecog_KOI8_R(icu_56::CharsetRecog_KOI8_R *__hidden this)
		public ??0CharsetRecog_KOI8_R@icu_56@@QAE@XZ
??0CharsetRecog_KOI8_R@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+989p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_KOI8_R@icu_56@@6B@ ; const icu_56::CharsetRecog_KOI8_R::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_KOI8_R@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2904h
		dd offset ??_R4CharsetRecog_KOI8_R@icu_56@@6B@ ; const icu_56::CharsetRecog_KOI8_R::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_KOI8_R@icu_56@@6B@
; const	icu_56::CharsetRecog_KOI8_R::`vftable'
??_7CharsetRecog_KOI8_R@icu_56@@6B@ dd offset ?getName@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_KOI8_R::CharsetRecog_KOI8_R(void)+2Eo
					; icu_56::CharsetRecog_KOI8_R::getName(void)
		dd offset ?getLanguage@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_KOI8_R::getLanguage(void)
		dd offset ?match@CharsetRecog_KOI8_R@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_KOI8_R::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_KOI8_R::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 291Ch
		public ??_R4CharsetRecog_KOI8_R@icu_56@@6B@
; const	icu_56::CharsetRecog_KOI8_R::`RTTI Complete Object Locator'
??_R4CharsetRecog_KOI8_R@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00002904o
		dd offset ??_R0?AVCharsetRecog_KOI8_R@icu_56@@@8 ; icu_56::CharsetRecog_KOI8_R `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_KOI8_R@icu_56@@8 ; icu_56::CharsetRecog_KOI8_R::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2930h
		public ??_R0?AVCharsetRecog_KOI8_R@icu_56@@@8
; class	icu_56::CharsetRecog_KOI8_R `RTTI Type Descriptor'
??_R0?AVCharsetRecog_KOI8_R@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002928o
					; .rdata$r:icu_56::CharsetRecog_KOI8_R::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharset_21	db '.?AVCharsetRecog_KOI8_R@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 295Ch
		public ??_R3CharsetRecog_KOI8_R@icu_56@@8
; icu_56::CharsetRecog_KOI8_R::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_KOI8_R@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:0000292Co
					; .rdata$r:00002998o
		dd 4
		dd offset ??_R2CharsetRecog_KOI8_R@icu_56@@8 ; icu_56::CharsetRecog_KOI8_R::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 296Ch
		public ??_R2CharsetRecog_KOI8_R@icu_56@@8
; icu_56::CharsetRecog_KOI8_R::`RTTI Base Class	Array'
??_R2CharsetRecog_KOI8_R@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_KOI8_R@icu_56@@8
					; DATA XREF: .rdata$r:00002968o
					; icu_56::CharsetRecog_KOI8_R::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2980h
		public ??_R1A@?0A@EA@CharsetRecog_KOI8_R@icu_56@@8
; icu_56::CharsetRecog_KOI8_R::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_KOI8_R@icu_56@@8 dd offset ??_R0?AVCharsetRecog_KOI8_R@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_KOI8_R::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_KOI8_R `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_KOI8_R@icu_56@@8 ; icu_56::CharsetRecog_KOI8_R::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 299Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_9_tr::CharsetRecog_8859_9_tr(icu_56::CharsetRecog_8859_9_tr *__hidden this)
		public ??0CharsetRecog_8859_9_tr@icu_56@@QAE@XZ
??0CharsetRecog_8859_9_tr@icu_56@@QAE@XZ proc near ; CODE XREF:	_initRecognizers+A33p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_8859_9@icu_56@@QAE@XZ ;	icu_56::CharsetRecog_8859_9::CharsetRecog_8859_9(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_9_tr@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_9_tr::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_9_tr@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 29E8h
		dd offset ??_R4CharsetRecog_8859_9_tr@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_9_tr::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_8859_9_tr@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_9_tr::`vftable'
??_7CharsetRecog_8859_9_tr@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_9@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_9_tr::CharsetRecog_8859_9_tr(void)+2Eo
					; icu_56::CharsetRecog_8859_9::getName(void)
		dd offset ?getLanguage@CharsetRecog_8859_9_tr@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_8859_9_tr::getLanguage(void)
		dd offset ?match@CharsetRecog_8859_9_tr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z	; icu_56::CharsetRecog_8859_9_tr::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_9_tr::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2A00h
		public ??_R4CharsetRecog_8859_9_tr@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_9_tr::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_9_tr@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:000029E8o
		dd offset ??_R0?AVCharsetRecog_8859_9_tr@icu_56@@@8 ; icu_56::CharsetRecog_8859_9_tr `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_8859_9_tr@icu_56@@8	; icu_56::CharsetRecog_8859_9_tr::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2A14h
		public ??_R0?AVCharsetRecog_8859_9_tr@icu_56@@@8
; class	icu_56::CharsetRecog_8859_9_tr `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_9_tr@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002A0Co
					; .rdata$r:icu_56::CharsetRecog_8859_9_tr::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_22	db '.?AVCharsetRecog_8859_9_tr@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2A40h
		public ??_R3CharsetRecog_8859_9_tr@icu_56@@8
; icu_56::CharsetRecog_8859_9_tr::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_8859_9_tr@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002A10o
					; .rdata$r:00002A80o
		dd 5
		dd offset ??_R2CharsetRecog_8859_9_tr@icu_56@@8	; icu_56::CharsetRecog_8859_9_tr::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2A50h
		public ??_R2CharsetRecog_8859_9_tr@icu_56@@8
; icu_56::CharsetRecog_8859_9_tr::`RTTI	Base Class Array'
??_R2CharsetRecog_8859_9_tr@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_8859_9_tr@icu_56@@8
					; DATA XREF: .rdata$r:00002A4Co
					; icu_56::CharsetRecog_8859_9_tr::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_8859_9@icu_56@@8 ;	icu_56::CharsetRecog_8859_9::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2A68h
		public ??_R1A@?0A@EA@CharsetRecog_8859_9_tr@icu_56@@8
; icu_56::CharsetRecog_8859_9_tr::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_9_tr@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_9_tr@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_9_tr::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_9_tr `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_9_tr@icu_56@@8	; icu_56::CharsetRecog_8859_9_tr::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2A84h
		public ??_R1A@?0A@EA@CharsetRecog_8859_9@icu_56@@8
; icu_56::CharsetRecog_8859_9::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_8859_9@icu_56@@8 dd offset ??_R0?AVCharsetRecog_8859_9@icu_56@@@8
					; DATA XREF: .rdata$r:00002A54o
					; .rdata$r:icu_56::CharsetRecog_8859_9::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_8859_9 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_8859_9@icu_56@@8 ; icu_56::CharsetRecog_8859_9::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2AA0h
		public ??_R0?AVCharsetRecog_8859_9@icu_56@@@8
; class	icu_56::CharsetRecog_8859_9 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_8859_9@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_8859_9::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00004198o
					; const	type_info::`vftable'
		align 8
a_?avcharset_23	db '.?AVCharsetRecog_8859_9@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2ACCh
		public ??_R3CharsetRecog_8859_9@icu_56@@8
; icu_56::CharsetRecog_8859_9::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_8859_9@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00002A9Co
					; .rdata$r:0000419Co
		dd 4
		dd offset ??_R2CharsetRecog_8859_9@icu_56@@8 ; icu_56::CharsetRecog_8859_9::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2ADCh
		public ??_R2CharsetRecog_8859_9@icu_56@@8
; icu_56::CharsetRecog_8859_9::`RTTI Base Class	Array'
??_R2CharsetRecog_8859_9@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_8859_9@icu_56@@8
					; DATA XREF: .rdata$r:00002AD8o
					; icu_56::CharsetRecog_8859_9::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2AF0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_sjis::CharsetRecog_sjis(icu_56::CharsetRecog_sjis *__hidden this)
		public ??0CharsetRecog_sjis@icu_56@@QAE@XZ
??0CharsetRecog_sjis@icu_56@@QAE@XZ proc near ;	CODE XREF: _initRecognizers+ADDp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_mbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_mbcs::CharsetRecog_mbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_sjis@icu_56@@6B@ ; const icu_56::CharsetRecog_sjis::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_sjis@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B3Ch
		dd offset ??_R4CharsetRecog_sjis@icu_56@@6B@ ; const icu_56::CharsetRecog_sjis::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_sjis@icu_56@@6B@
; const	icu_56::CharsetRecog_sjis::`vftable'
??_7CharsetRecog_sjis@icu_56@@6B@ dd offset ?getName@CharsetRecog_sjis@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_sjis::CharsetRecog_sjis(void)+2Eo
					; icu_56::CharsetRecog_sjis::getName(void)
		dd offset ?getLanguage@CharsetRecog_sjis@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_sjis::getLanguage(void)
		dd offset ?match@CharsetRecog_sjis@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_sjis::match(icu_56::InputText	*,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_sjis@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_sjis::`vector deleting	destructor'(uint)
		dd offset ?nextChar@CharsetRecog_sjis@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z ;	icu_56::CharsetRecog_sjis::nextChar(icu_56::IteratedChar *,icu_56::InputText *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2B54h
		public ??_R4CharsetRecog_sjis@icu_56@@6B@
; const	icu_56::CharsetRecog_sjis::`RTTI Complete Object Locator'
??_R4CharsetRecog_sjis@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00002B3Co
		dd offset ??_R0?AVCharsetRecog_sjis@icu_56@@@8 ; icu_56::CharsetRecog_sjis `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_sjis@icu_56@@8 ; icu_56::CharsetRecog_sjis::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2B68h
		public ??_R0?AVCharsetRecog_sjis@icu_56@@@8
; class	icu_56::CharsetRecog_sjis `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_sjis@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002B60o
					; .rdata$r:icu_56::CharsetRecog_sjis::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_24	db '.?AVCharsetRecog_sjis@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2B90h
		public ??_R3CharsetRecog_sjis@icu_56@@8
; icu_56::CharsetRecog_sjis::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_sjis@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002B64o
					; .rdata$r:00002BCCo
		dd 4
		dd offset ??_R2CharsetRecog_sjis@icu_56@@8 ; icu_56::CharsetRecog_sjis::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2BA0h
		public ??_R2CharsetRecog_sjis@icu_56@@8
; icu_56::CharsetRecog_sjis::`RTTI Base	Class Array'
??_R2CharsetRecog_sjis@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_sjis@icu_56@@8
					; DATA XREF: .rdata$r:00002B9Co
					; icu_56::CharsetRecog_sjis::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2BB4h
		public ??_R1A@?0A@EA@CharsetRecog_sjis@icu_56@@8
; icu_56::CharsetRecog_sjis::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_sjis@icu_56@@8 dd offset ??_R0?AVCharsetRecog_sjis@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_sjis::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_sjis `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_sjis@icu_56@@8 ; icu_56::CharsetRecog_sjis::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2BD0h
		public ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8
; icu_56::CharsetRecog_mbcs::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 dd offset ??_R0?AVCharsetRecog_mbcs@icu_56@@@8
					; DATA XREF: .rdata$r:00002BA4o
					; .rdata$r:icu_56::CharsetRecog_mbcs::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_mbcs `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2BECh
		public ??_R0?AVCharsetRecog_mbcs@icu_56@@@8
; class	icu_56::CharsetRecog_mbcs `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_mbcs@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; .rdata$r:00004274o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_25	db '.?AVCharsetRecog_mbcs@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2C14h
		public ??_R3CharsetRecog_mbcs@icu_56@@8
; icu_56::CharsetRecog_mbcs::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_mbcs@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002BE8o
					; .rdata$r:00004278o
		dd 3
		dd offset ??_R2CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2C24h
		public ??_R2CharsetRecog_mbcs@icu_56@@8
; icu_56::CharsetRecog_mbcs::`RTTI Base	Class Array'
??_R2CharsetRecog_mbcs@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8
					; DATA XREF: .rdata$r:00002C20o
					; icu_56::CharsetRecog_mbcs::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2C34h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_gb_18030::CharsetRecog_gb_18030(icu_56::CharsetRecog_gb_18030 *__hidden this)
		public ??0CharsetRecog_gb_18030@icu_56@@QAE@XZ
??0CharsetRecog_gb_18030@icu_56@@QAE@XZ	proc near ; CODE XREF: _initRecognizers+B7Bp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_mbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_mbcs::CharsetRecog_mbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_gb_18030@icu_56@@6B@ ;	const icu_56::CharsetRecog_gb_18030::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_gb_18030@icu_56@@QAE@XZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2C80h
		dd offset ??_R4CharsetRecog_gb_18030@icu_56@@6B@ ; const icu_56::CharsetRecog_gb_18030::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_gb_18030@icu_56@@6B@
; const	icu_56::CharsetRecog_gb_18030::`vftable'
??_7CharsetRecog_gb_18030@icu_56@@6B@ dd offset	?getName@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_gb_18030::CharsetRecog_gb_18030(void)+2Eo
					; icu_56::CharsetRecog_gb_18030::getName(void)
		dd offset ?getLanguage@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ ;	icu_56::CharsetRecog_gb_18030::getLanguage(void)
		dd offset ?match@CharsetRecog_gb_18030@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_gb_18030::match(icu_56::InputText	*,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_gb_18030@icu_56@@UAEPAXI@Z ;	icu_56::CharsetRecog_gb_18030::`vector deleting	destructor'(uint)
		dd offset ?nextChar@CharsetRecog_gb_18030@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z ; icu_56::CharsetRecog_gb_18030::nextChar(icu_56::IteratedChar *,icu_56::InputText *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2C98h
		public ??_R4CharsetRecog_gb_18030@icu_56@@6B@
; const	icu_56::CharsetRecog_gb_18030::`RTTI Complete Object Locator'
??_R4CharsetRecog_gb_18030@icu_56@@6B@ dd 3 dup(0) ; DATA XREF:	.rdata:00002C80o
		dd offset ??_R0?AVCharsetRecog_gb_18030@icu_56@@@8 ; icu_56::CharsetRecog_gb_18030 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_gb_18030@icu_56@@8 ; icu_56::CharsetRecog_gb_18030::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2CACh
		public ??_R0?AVCharsetRecog_gb_18030@icu_56@@@8
; class	icu_56::CharsetRecog_gb_18030 `RTTI Type Descriptor'
??_R0?AVCharsetRecog_gb_18030@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002CA4o
					; .rdata$r:icu_56::CharsetRecog_gb_18030::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_26	db '.?AVCharsetRecog_gb_18030@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2CD8h
		public ??_R3CharsetRecog_gb_18030@icu_56@@8
; icu_56::CharsetRecog_gb_18030::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_gb_18030@icu_56@@8 dd	2 dup(0) ; DATA	XREF: .rdata$r:00002CA8o
					; .rdata$r:00002D14o
		dd 4
		dd offset ??_R2CharsetRecog_gb_18030@icu_56@@8 ; icu_56::CharsetRecog_gb_18030::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2CE8h
		public ??_R2CharsetRecog_gb_18030@icu_56@@8
; icu_56::CharsetRecog_gb_18030::`RTTI Base Class Array'
??_R2CharsetRecog_gb_18030@icu_56@@8 dd	offset ??_R1A@?0A@EA@CharsetRecog_gb_18030@icu_56@@8
					; DATA XREF: .rdata$r:00002CE4o
					; icu_56::CharsetRecog_gb_18030::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2CFCh
		public ??_R1A@?0A@EA@CharsetRecog_gb_18030@icu_56@@8
; icu_56::CharsetRecog_gb_18030::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@CharsetRecog_gb_18030@icu_56@@8 dd offset	??_R0?AVCharsetRecog_gb_18030@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_gb_18030::`RTTI Base	Class Array'o
					; icu_56::CharsetRecog_gb_18030	`RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_gb_18030@icu_56@@8 ; icu_56::CharsetRecog_gb_18030::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2D18h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_euc_jp::CharsetRecog_euc_jp(icu_56::CharsetRecog_euc_jp *__hidden this)
		public ??0CharsetRecog_euc_jp@icu_56@@QAE@XZ
??0CharsetRecog_euc_jp@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+C19p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_euc@icu_56@@QAE@XZ ; icu_56::CharsetRecog_euc::CharsetRecog_euc(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_euc_jp@icu_56@@6B@ ; const icu_56::CharsetRecog_euc_jp::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_euc_jp@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2D64h
		dd offset ??_R4CharsetRecog_euc_jp@icu_56@@6B@ ; const icu_56::CharsetRecog_euc_jp::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_euc_jp@icu_56@@6B@
; const	icu_56::CharsetRecog_euc_jp::`vftable'
??_7CharsetRecog_euc_jp@icu_56@@6B@ dd offset ?getName@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_euc_jp::CharsetRecog_euc_jp(void)+2Eo
					; icu_56::CharsetRecog_euc_jp::getName(void)
		dd offset ?getLanguage@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_euc_jp::getLanguage(void)
		dd offset ?match@CharsetRecog_euc_jp@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_euc_jp::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_euc_jp@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_euc_jp::`vector deleting destructor'(uint)
		dd offset ?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z ; icu_56::CharsetRecog_euc::nextChar(icu_56::IteratedChar *,icu_56::InputText *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2D7Ch
		public ??_R4CharsetRecog_euc_jp@icu_56@@6B@
; const	icu_56::CharsetRecog_euc_jp::`RTTI Complete Object Locator'
??_R4CharsetRecog_euc_jp@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00002D64o
		dd offset ??_R0?AVCharsetRecog_euc_jp@icu_56@@@8 ; icu_56::CharsetRecog_euc_jp `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_euc_jp@icu_56@@8 ; icu_56::CharsetRecog_euc_jp::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2D90h
		public ??_R0?AVCharsetRecog_euc_jp@icu_56@@@8
; class	icu_56::CharsetRecog_euc_jp `RTTI Type Descriptor'
??_R0?AVCharsetRecog_euc_jp@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002D88o
					; .rdata$r:icu_56::CharsetRecog_euc_jp::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharset_27	db '.?AVCharsetRecog_euc_jp@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2DBCh
		public ??_R3CharsetRecog_euc_jp@icu_56@@8
; icu_56::CharsetRecog_euc_jp::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_euc_jp@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00002D8Co
					; .rdata$r:00002DFCo
		dd 5
		dd offset ??_R2CharsetRecog_euc_jp@icu_56@@8 ; icu_56::CharsetRecog_euc_jp::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2DCCh
		public ??_R2CharsetRecog_euc_jp@icu_56@@8
; icu_56::CharsetRecog_euc_jp::`RTTI Base Class	Array'
??_R2CharsetRecog_euc_jp@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_euc_jp@icu_56@@8
					; DATA XREF: .rdata$r:00002DC8o
					; icu_56::CharsetRecog_euc_jp::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8 ; icu_56::CharsetRecog_euc::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2DE4h
		public ??_R1A@?0A@EA@CharsetRecog_euc_jp@icu_56@@8
; icu_56::CharsetRecog_euc_jp::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_euc_jp@icu_56@@8 dd offset ??_R0?AVCharsetRecog_euc_jp@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_euc_jp::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_euc_jp `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_euc_jp@icu_56@@8 ; icu_56::CharsetRecog_euc_jp::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2E00h
		public ??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8
; icu_56::CharsetRecog_euc::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8 dd offset ??_R0?AVCharsetRecog_euc@icu_56@@@8
					; DATA XREF: .rdata$r:00002DD0o
					; .rdata$r:icu_56::CharsetRecog_euc::`RTTI Base	Class Array'o ...
					; icu_56::CharsetRecog_euc `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_euc@icu_56@@8 ; icu_56::CharsetRecog_euc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2E1Ch
		public ??_R0?AVCharsetRecog_euc@icu_56@@@8
; class	icu_56::CharsetRecog_euc `RTTI Type Descriptor'
??_R0?AVCharsetRecog_euc@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_euc::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:000043B4o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_28	db '.?AVCharsetRecog_euc@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2E44h
		public ??_R3CharsetRecog_euc@icu_56@@8
; icu_56::CharsetRecog_euc::`RTTI Class	Hierarchy Descriptor'
??_R3CharsetRecog_euc@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:00002E18o
					; .rdata$r:000043B8o
		dd 4
		dd offset ??_R2CharsetRecog_euc@icu_56@@8 ; icu_56::CharsetRecog_euc::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2E54h
		public ??_R2CharsetRecog_euc@icu_56@@8
; icu_56::CharsetRecog_euc::`RTTI Base Class Array'
??_R2CharsetRecog_euc@icu_56@@8	dd offset ??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8
					; DATA XREF: .rdata$r:00002E50o
					; icu_56::CharsetRecog_euc::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2E68h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_euc_kr::CharsetRecog_euc_kr(icu_56::CharsetRecog_euc_kr *__hidden this)
		public ??0CharsetRecog_euc_kr@icu_56@@QAE@XZ
??0CharsetRecog_euc_kr@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+CB7p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_euc@icu_56@@QAE@XZ ; icu_56::CharsetRecog_euc::CharsetRecog_euc(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_euc_kr@icu_56@@6B@ ; const icu_56::CharsetRecog_euc_kr::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_euc_kr@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2EB4h
		dd offset ??_R4CharsetRecog_euc_kr@icu_56@@6B@ ; const icu_56::CharsetRecog_euc_kr::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_euc_kr@icu_56@@6B@
; const	icu_56::CharsetRecog_euc_kr::`vftable'
??_7CharsetRecog_euc_kr@icu_56@@6B@ dd offset ?getName@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_euc_kr::CharsetRecog_euc_kr(void)+2Eo
					; icu_56::CharsetRecog_euc_kr::getName(void)
		dd offset ?getLanguage@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_euc_kr::getLanguage(void)
		dd offset ?match@CharsetRecog_euc_kr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_euc_kr::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_euc_kr@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_euc_kr::`vector deleting destructor'(uint)
		dd offset ?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z ; icu_56::CharsetRecog_euc::nextChar(icu_56::IteratedChar *,icu_56::InputText *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2ECCh
		public ??_R4CharsetRecog_euc_kr@icu_56@@6B@
; const	icu_56::CharsetRecog_euc_kr::`RTTI Complete Object Locator'
??_R4CharsetRecog_euc_kr@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00002EB4o
		dd offset ??_R0?AVCharsetRecog_euc_kr@icu_56@@@8 ; icu_56::CharsetRecog_euc_kr `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_euc_kr@icu_56@@8 ; icu_56::CharsetRecog_euc_kr::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2EE0h
		public ??_R0?AVCharsetRecog_euc_kr@icu_56@@@8
; class	icu_56::CharsetRecog_euc_kr `RTTI Type Descriptor'
??_R0?AVCharsetRecog_euc_kr@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002ED8o
					; .rdata$r:icu_56::CharsetRecog_euc_kr::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharset_29	db '.?AVCharsetRecog_euc_kr@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F0Ch
		public ??_R3CharsetRecog_euc_kr@icu_56@@8
; icu_56::CharsetRecog_euc_kr::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_euc_kr@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00002EDCo
					; .rdata$r:00002F4Co
		dd 5
		dd offset ??_R2CharsetRecog_euc_kr@icu_56@@8 ; icu_56::CharsetRecog_euc_kr::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F1Ch
		public ??_R2CharsetRecog_euc_kr@icu_56@@8
; icu_56::CharsetRecog_euc_kr::`RTTI Base Class	Array'
??_R2CharsetRecog_euc_kr@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_euc_kr@icu_56@@8
					; DATA XREF: .rdata$r:00002F18o
					; icu_56::CharsetRecog_euc_kr::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_euc@icu_56@@8 ; icu_56::CharsetRecog_euc::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F34h
		public ??_R1A@?0A@EA@CharsetRecog_euc_kr@icu_56@@8
; icu_56::CharsetRecog_euc_kr::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_euc_kr@icu_56@@8 dd offset ??_R0?AVCharsetRecog_euc_kr@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_euc_kr::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_euc_kr `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_euc_kr@icu_56@@8 ; icu_56::CharsetRecog_euc_kr::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2F50h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_big5::CharsetRecog_big5(icu_56::CharsetRecog_big5 *__hidden this)
		public ??0CharsetRecog_big5@icu_56@@QAE@XZ
??0CharsetRecog_big5@icu_56@@QAE@XZ proc near ;	CODE XREF: _initRecognizers+D55p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_mbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_mbcs::CharsetRecog_mbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_big5@icu_56@@6B@ ; const icu_56::CharsetRecog_big5::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_big5@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2F9Ch
		dd offset ??_R4CharsetRecog_big5@icu_56@@6B@ ; const icu_56::CharsetRecog_big5::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_big5@icu_56@@6B@
; const	icu_56::CharsetRecog_big5::`vftable'
??_7CharsetRecog_big5@icu_56@@6B@ dd offset ?getName@CharsetRecog_big5@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_big5::CharsetRecog_big5(void)+2Eo
					; icu_56::CharsetRecog_big5::getName(void)
		dd offset ?getLanguage@CharsetRecog_big5@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_big5::getLanguage(void)
		dd offset ?match@CharsetRecog_big5@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_big5::match(icu_56::InputText	*,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_big5@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_big5::`vector deleting	destructor'(uint)
		dd offset ?nextChar@CharsetRecog_big5@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z ;	icu_56::CharsetRecog_big5::nextChar(icu_56::IteratedChar *,icu_56::InputText *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2FB4h
		public ??_R4CharsetRecog_big5@icu_56@@6B@
; const	icu_56::CharsetRecog_big5::`RTTI Complete Object Locator'
??_R4CharsetRecog_big5@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00002F9Co
		dd offset ??_R0?AVCharsetRecog_big5@icu_56@@@8 ; icu_56::CharsetRecog_big5 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_big5@icu_56@@8 ; icu_56::CharsetRecog_big5::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2FC8h
		public ??_R0?AVCharsetRecog_big5@icu_56@@@8
; class	icu_56::CharsetRecog_big5 `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_big5@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002FC0o
					; .rdata$r:icu_56::CharsetRecog_big5::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_30	db '.?AVCharsetRecog_big5@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2FF0h
		public ??_R3CharsetRecog_big5@icu_56@@8
; icu_56::CharsetRecog_big5::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_big5@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002FC4o
					; .rdata$r:0000302Co
		dd 4
		dd offset ??_R2CharsetRecog_big5@icu_56@@8 ; icu_56::CharsetRecog_big5::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3000h
		public ??_R2CharsetRecog_big5@icu_56@@8
; icu_56::CharsetRecog_big5::`RTTI Base	Class Array'
??_R2CharsetRecog_big5@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_big5@icu_56@@8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexfloato
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::floatfieldo	...
					; icu_56::CharsetRecog_big5::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3014h
		public ??_R1A@?0A@EA@CharsetRecog_big5@icu_56@@8
; icu_56::CharsetRecog_big5::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_big5@icu_56@@8 dd offset ??_R0?AVCharsetRecog_big5@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_big5::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_big5 `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_big5@icu_56@@8 ; icu_56::CharsetRecog_big5::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3030h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_2022JP::CharsetRecog_2022JP(icu_56::CharsetRecog_2022JP *__hidden this)
		public ??0CharsetRecog_2022JP@icu_56@@QAE@XZ
??0CharsetRecog_2022JP@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+DF3p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_2022@icu_56@@QAE@XZ ; icu_56::CharsetRecog_2022::CharsetRecog_2022(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_2022JP@icu_56@@6B@ ; const icu_56::CharsetRecog_2022JP::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_2022JP@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 307Ch
		dd offset ??_R4CharsetRecog_2022JP@icu_56@@6B@ ; const icu_56::CharsetRecog_2022JP::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_2022JP@icu_56@@6B@
; const	icu_56::CharsetRecog_2022JP::`vftable'
??_7CharsetRecog_2022JP@icu_56@@6B@ dd offset ?getName@CharsetRecog_2022JP@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_2022JP::CharsetRecog_2022JP(void)+2Eo
					; icu_56::CharsetRecog_2022JP::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_2022JP@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_2022JP::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_2022JP@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_2022JP::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3090h
		public ??_R4CharsetRecog_2022JP@icu_56@@6B@
; const	icu_56::CharsetRecog_2022JP::`RTTI Complete Object Locator'
??_R4CharsetRecog_2022JP@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:0000307Co
		dd offset ??_R0?AVCharsetRecog_2022JP@icu_56@@@8 ; icu_56::CharsetRecog_2022JP `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_2022JP@icu_56@@8 ; icu_56::CharsetRecog_2022JP::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 30A4h
		public ??_R0?AVCharsetRecog_2022JP@icu_56@@@8
; class	icu_56::CharsetRecog_2022JP `RTTI Type Descriptor'
??_R0?AVCharsetRecog_2022JP@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:0000309Co
					; .rdata$r:icu_56::CharsetRecog_2022JP::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_31	db '.?AVCharsetRecog_2022JP@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 30D0h
		public ??_R3CharsetRecog_2022JP@icu_56@@8
; icu_56::CharsetRecog_2022JP::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_2022JP@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000030A0o
					; .rdata$r:0000310Co
		dd 4
		dd offset ??_R2CharsetRecog_2022JP@icu_56@@8 ; icu_56::CharsetRecog_2022JP::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 30E0h
		public ??_R2CharsetRecog_2022JP@icu_56@@8
; icu_56::CharsetRecog_2022JP::`RTTI Base Class	Array'
??_R2CharsetRecog_2022JP@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_2022JP@icu_56@@8
					; DATA XREF: .rdata$r:000030DCo
					; icu_56::CharsetRecog_2022JP::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8 ; icu_56::CharsetRecog_2022::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 30F4h
		public ??_R1A@?0A@EA@CharsetRecog_2022JP@icu_56@@8
; icu_56::CharsetRecog_2022JP::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_2022JP@icu_56@@8 dd offset ??_R0?AVCharsetRecog_2022JP@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_2022JP::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_2022JP `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_2022JP@icu_56@@8 ; icu_56::CharsetRecog_2022JP::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3110h
		public ??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8
; icu_56::CharsetRecog_2022::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8 dd offset ??_R0?AVCharsetRecog_2022@icu_56@@@8
					; DATA XREF: .rdata$r:000030E4o
					; .rdata$r:icu_56::CharsetRecog_2022::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_2022 `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_2022@icu_56@@8 ; icu_56::CharsetRecog_2022::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 312Ch
		public ??_R0?AVCharsetRecog_2022@icu_56@@@8
; class	icu_56::CharsetRecog_2022 `RTTI	Type Descriptor'
??_R0?AVCharsetRecog_2022@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_2022::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; .rdata$r:00004554o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_32	db '.?AVCharsetRecog_2022@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3154h
		public ??_R3CharsetRecog_2022@icu_56@@8
; icu_56::CharsetRecog_2022::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_2022@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00003128o
					; .rdata$r:00004558o
		dd 3
		dd offset ??_R2CharsetRecog_2022@icu_56@@8 ; icu_56::CharsetRecog_2022::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3164h
		public ??_R2CharsetRecog_2022@icu_56@@8
; icu_56::CharsetRecog_2022::`RTTI Base	Class Array'
??_R2CharsetRecog_2022@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8
					; DATA XREF: .rdata$r:00003160o
					; icu_56::CharsetRecog_2022::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3174h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_2022KR::CharsetRecog_2022KR(icu_56::CharsetRecog_2022KR *__hidden this)
		public ??0CharsetRecog_2022KR@icu_56@@QAE@XZ
??0CharsetRecog_2022KR@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+E91p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_2022@icu_56@@QAE@XZ ; icu_56::CharsetRecog_2022::CharsetRecog_2022(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_2022KR@icu_56@@6B@ ; const icu_56::CharsetRecog_2022KR::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_2022KR@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 31C0h
		dd offset ??_R4CharsetRecog_2022KR@icu_56@@6B@ ; const icu_56::CharsetRecog_2022KR::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_2022KR@icu_56@@6B@
; const	icu_56::CharsetRecog_2022KR::`vftable'
??_7CharsetRecog_2022KR@icu_56@@6B@ dd offset ?getName@CharsetRecog_2022KR@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_2022KR::CharsetRecog_2022KR(void)+2Eo
					; icu_56::CharsetRecog_2022KR::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_2022KR@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_2022KR::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_2022KR@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_2022KR::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 31D4h
		public ??_R4CharsetRecog_2022KR@icu_56@@6B@
; const	icu_56::CharsetRecog_2022KR::`RTTI Complete Object Locator'
??_R4CharsetRecog_2022KR@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:000031C0o
		dd offset ??_R0?AVCharsetRecog_2022KR@icu_56@@@8 ; icu_56::CharsetRecog_2022KR `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_2022KR@icu_56@@8 ; icu_56::CharsetRecog_2022KR::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 31E8h
		public ??_R0?AVCharsetRecog_2022KR@icu_56@@@8
; class	icu_56::CharsetRecog_2022KR `RTTI Type Descriptor'
??_R0?AVCharsetRecog_2022KR@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000031E0o
					; .rdata$r:icu_56::CharsetRecog_2022KR::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_33	db '.?AVCharsetRecog_2022KR@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3214h
		public ??_R3CharsetRecog_2022KR@icu_56@@8
; icu_56::CharsetRecog_2022KR::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_2022KR@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000031E4o
					; .rdata$r:00003250o
		dd 4
		dd offset ??_R2CharsetRecog_2022KR@icu_56@@8 ; icu_56::CharsetRecog_2022KR::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3224h
		public ??_R2CharsetRecog_2022KR@icu_56@@8
; icu_56::CharsetRecog_2022KR::`RTTI Base Class	Array'
??_R2CharsetRecog_2022KR@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_2022KR@icu_56@@8
					; DATA XREF: .rdata$r:00003220o
					; icu_56::CharsetRecog_2022KR::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8 ; icu_56::CharsetRecog_2022::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3238h
		public ??_R1A@?0A@EA@CharsetRecog_2022KR@icu_56@@8
; icu_56::CharsetRecog_2022KR::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_2022KR@icu_56@@8 dd offset ??_R0?AVCharsetRecog_2022KR@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_2022KR::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_2022KR `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_2022KR@icu_56@@8 ; icu_56::CharsetRecog_2022KR::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3254h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_2022CN::CharsetRecog_2022CN(icu_56::CharsetRecog_2022CN *__hidden this)
		public ??0CharsetRecog_2022CN@icu_56@@QAE@XZ
??0CharsetRecog_2022CN@icu_56@@QAE@XZ proc near	; CODE XREF: _initRecognizers+F2Fp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_2022@icu_56@@QAE@XZ ; icu_56::CharsetRecog_2022::CharsetRecog_2022(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_2022CN@icu_56@@6B@ ; const icu_56::CharsetRecog_2022CN::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_2022CN@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 32A0h
		dd offset ??_R4CharsetRecog_2022CN@icu_56@@6B@ ; const icu_56::CharsetRecog_2022CN::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_2022CN@icu_56@@6B@
; const	icu_56::CharsetRecog_2022CN::`vftable'
??_7CharsetRecog_2022CN@icu_56@@6B@ dd offset ?getName@CharsetRecog_2022CN@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_2022CN::CharsetRecog_2022CN(void)+2Eo
					; icu_56::CharsetRecog_2022CN::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_2022CN@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_2022CN::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_2022CN@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_2022CN::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 32B4h
		public ??_R4CharsetRecog_2022CN@icu_56@@6B@
; const	icu_56::CharsetRecog_2022CN::`RTTI Complete Object Locator'
??_R4CharsetRecog_2022CN@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:000032A0o
		dd offset ??_R0?AVCharsetRecog_2022CN@icu_56@@@8 ; icu_56::CharsetRecog_2022CN `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_2022CN@icu_56@@8 ; icu_56::CharsetRecog_2022CN::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 32C8h
		public ??_R0?AVCharsetRecog_2022CN@icu_56@@@8
; class	icu_56::CharsetRecog_2022CN `RTTI Type Descriptor'
??_R0?AVCharsetRecog_2022CN@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000032C0o
					; .rdata$r:icu_56::CharsetRecog_2022CN::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_34	db '.?AVCharsetRecog_2022CN@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 32F4h
		public ??_R3CharsetRecog_2022CN@icu_56@@8
; icu_56::CharsetRecog_2022CN::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_2022CN@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000032C4o
					; .rdata$r:00003330o
		dd 4
		dd offset ??_R2CharsetRecog_2022CN@icu_56@@8 ; icu_56::CharsetRecog_2022CN::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3304h
		public ??_R2CharsetRecog_2022CN@icu_56@@8
; icu_56::CharsetRecog_2022CN::`RTTI Base Class	Array'
??_R2CharsetRecog_2022CN@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_2022CN@icu_56@@8
					; DATA XREF: .rdata$r:00003300o
					; icu_56::CharsetRecog_2022CN::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_2022@icu_56@@8 ; icu_56::CharsetRecog_2022::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3318h
		public ??_R1A@?0A@EA@CharsetRecog_2022CN@icu_56@@8
; icu_56::CharsetRecog_2022CN::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_2022CN@icu_56@@8 dd offset ??_R0?AVCharsetRecog_2022CN@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_2022CN::`RTTI Base Class Array'o
					; icu_56::CharsetRecog_2022CN `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_2022CN@icu_56@@8 ; icu_56::CharsetRecog_2022CN::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3334h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_IBM424_he_rtl::CharsetRecog_IBM424_he_rtl(icu_56::CharsetRecog_IBM424_he_rtl *__hidden	this)
		public ??0CharsetRecog_IBM424_he_rtl@icu_56@@QAE@XZ
??0CharsetRecog_IBM424_he_rtl@icu_56@@QAE@XZ proc near ; CODE XREF: _initRecognizers+FCDp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM424_he::CharsetRecog_IBM424_he(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_IBM424_he_rtl@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM424_he_rtl::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_IBM424_he_rtl@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3380h
		dd offset ??_R4CharsetRecog_IBM424_he_rtl@icu_56@@6B@ ;	const icu_56::CharsetRecog_IBM424_he_rtl::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_IBM424_he_rtl@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM424_he_rtl::`vftable'
??_7CharsetRecog_IBM424_he_rtl@icu_56@@6B@ dd offset ?getName@CharsetRecog_IBM424_he_rtl@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_IBM424_he_rtl::CharsetRecog_IBM424_he_rtl(void)+2Eo
					; icu_56::CharsetRecog_IBM424_he_rtl::getName(void)
		dd offset ?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_IBM424_he::getLanguage(void)
		dd offset ?match@CharsetRecog_IBM424_he_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_IBM424_he_rtl::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_IBM424_he_rtl::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3398h
		public ??_R4CharsetRecog_IBM424_he_rtl@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM424_he_rtl::`RTTI Complete Object Locator'
??_R4CharsetRecog_IBM424_he_rtl@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:00003380o
		dd offset ??_R0?AVCharsetRecog_IBM424_he_rtl@icu_56@@@8	; icu_56::CharsetRecog_IBM424_he_rtl `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 33ACh
		public ??_R0?AVCharsetRecog_IBM424_he_rtl@icu_56@@@8
; class	icu_56::CharsetRecog_IBM424_he_rtl `RTTI Type Descriptor'
??_R0?AVCharsetRecog_IBM424_he_rtl@icu_56@@@8 dd offset	??_7type_info@@6B@
					; DATA XREF: .rdata$r:000033A4o
					; .rdata$r:icu_56::CharsetRecog_IBM424_he_rtl::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_35	db '.?AVCharsetRecog_IBM424_he_rtl@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 33DCh
		public ??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8
; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8 dd 2 dup(0) ;	DATA XREF: .rdata$r:000033A8o
					; .rdata$r:0000341Co
		dd 5
		dd offset ??_R2CharsetRecog_IBM424_he_rtl@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 33ECh
		public ??_R2CharsetRecog_IBM424_he_rtl@icu_56@@8
; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI Base Class Array'
??_R2CharsetRecog_IBM424_he_rtl@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_IBM424_he_rtl@icu_56@@8
					; DATA XREF: .rdata$r:000033E8o
					; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3404h
		public ??_R1A@?0A@EA@CharsetRecog_IBM424_he_rtl@icu_56@@8
; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@CharsetRecog_IBM424_he_rtl@icu_56@@8 dd offset ??_R0?AVCharsetRecog_IBM424_he_rtl@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_IBM424_he_rtl::`RTTI	Base Class Array'o
					; icu_56::CharsetRecog_IBM424_he_rtl `RTTI Type	Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_IBM424_he_rtl@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he_rtl::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3420h
		public ??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8
; icu_56::CharsetRecog_IBM424_he::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8 dd offset ??_R0?AVCharsetRecog_IBM424_he@icu_56@@@8
					; DATA XREF: .rdata$r:000033F0o
					; .rdata$r:icu_56::CharsetRecog_IBM424_he::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_IBM424_he `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_IBM424_he@icu_56@@8	; icu_56::CharsetRecog_IBM424_he::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 343Ch
		public ??_R0?AVCharsetRecog_IBM424_he@icu_56@@@8
; class	icu_56::CharsetRecog_IBM424_he `RTTI Type Descriptor'
??_R0?AVCharsetRecog_IBM424_he@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_IBM424_he::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:000046F8o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_36	db '.?AVCharsetRecog_IBM424_he@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3468h
		public ??_R3CharsetRecog_IBM424_he@icu_56@@8
; icu_56::CharsetRecog_IBM424_he::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_IBM424_he@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00003438o
					; .rdata$r:000046FCo
		dd 4
		dd offset ??_R2CharsetRecog_IBM424_he@icu_56@@8	; icu_56::CharsetRecog_IBM424_he::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3478h
		public ??_R2CharsetRecog_IBM424_he@icu_56@@8
; icu_56::CharsetRecog_IBM424_he::`RTTI	Base Class Array'
??_R2CharsetRecog_IBM424_he@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8
					; DATA XREF: .rdata$r:00003474o
					; icu_56::CharsetRecog_IBM424_he::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 348Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_IBM424_he_ltr::CharsetRecog_IBM424_he_ltr(icu_56::CharsetRecog_IBM424_he_ltr *__hidden	this)
		public ??0CharsetRecog_IBM424_he_ltr@icu_56@@QAE@XZ
??0CharsetRecog_IBM424_he_ltr@icu_56@@QAE@XZ proc near ; CODE XREF: _initRecognizers+1077p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM424_he::CharsetRecog_IBM424_he(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_IBM424_he_ltr@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM424_he_ltr::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_IBM424_he_ltr@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34D8h
		dd offset ??_R4CharsetRecog_IBM424_he_ltr@icu_56@@6B@ ;	const icu_56::CharsetRecog_IBM424_he_ltr::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_IBM424_he_ltr@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM424_he_ltr::`vftable'
??_7CharsetRecog_IBM424_he_ltr@icu_56@@6B@ dd offset ?getName@CharsetRecog_IBM424_he_ltr@icu_56@@EBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_IBM424_he_ltr::CharsetRecog_IBM424_he_ltr(void)+2Eo
					; icu_56::CharsetRecog_IBM424_he_ltr::getName(void)
		dd offset ?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_IBM424_he::getLanguage(void)
		dd offset ?match@CharsetRecog_IBM424_he_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_IBM424_he_ltr::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z ; icu_56::CharsetRecog_IBM424_he_ltr::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 34F0h
		public ??_R4CharsetRecog_IBM424_he_ltr@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM424_he_ltr::`RTTI Complete Object Locator'
??_R4CharsetRecog_IBM424_he_ltr@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:000034D8o
		dd offset ??_R0?AVCharsetRecog_IBM424_he_ltr@icu_56@@@8	; icu_56::CharsetRecog_IBM424_he_ltr `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 3504h
		public ??_R0?AVCharsetRecog_IBM424_he_ltr@icu_56@@@8
; class	icu_56::CharsetRecog_IBM424_he_ltr `RTTI Type Descriptor'
??_R0?AVCharsetRecog_IBM424_he_ltr@icu_56@@@8 dd offset	??_7type_info@@6B@
					; DATA XREF: .rdata$r:000034FCo
					; .rdata$r:icu_56::CharsetRecog_IBM424_he_ltr::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcharset_37	db '.?AVCharsetRecog_IBM424_he_ltr@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3534h
		public ??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8
; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8 dd 2 dup(0) ;	DATA XREF: .rdata$r:00003500o
					; .rdata$r:00003574o
		dd 5
		dd offset ??_R2CharsetRecog_IBM424_he_ltr@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3544h
		public ??_R2CharsetRecog_IBM424_he_ltr@icu_56@@8
; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI Base Class Array'
??_R2CharsetRecog_IBM424_he_ltr@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_IBM424_he_ltr@icu_56@@8
					; DATA XREF: .rdata$r:00003540o
					; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_IBM424_he@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 355Ch
		public ??_R1A@?0A@EA@CharsetRecog_IBM424_he_ltr@icu_56@@8
; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@CharsetRecog_IBM424_he_ltr@icu_56@@8 dd offset ??_R0?AVCharsetRecog_IBM424_he_ltr@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_IBM424_he_ltr::`RTTI	Base Class Array'o
					; icu_56::CharsetRecog_IBM424_he_ltr `RTTI Type	Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_IBM424_he_ltr@icu_56@@8 ; icu_56::CharsetRecog_IBM424_he_ltr::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3578h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::CharsetRecog_IBM420_ar_rtl(icu_56::CharsetRecog_IBM420_ar_rtl *__hidden	this)
		public ??0CharsetRecog_IBM420_ar_rtl@icu_56@@QAE@XZ
??0CharsetRecog_IBM420_ar_rtl@icu_56@@QAE@XZ proc near ; CODE XREF: _initRecognizers+1121p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM420_ar::CharsetRecog_IBM420_ar(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_IBM420_ar_rtl@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM420_ar_rtl::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_IBM420_ar_rtl@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 35C4h
		dd offset ??_R4CharsetRecog_IBM420_ar_rtl@icu_56@@6B@ ;	const icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_IBM420_ar_rtl@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM420_ar_rtl::`vftable'
??_7CharsetRecog_IBM420_ar_rtl@icu_56@@6B@ dd offset ?getName@CharsetRecog_IBM420_ar_rtl@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_IBM420_ar_rtl::CharsetRecog_IBM420_ar_rtl(void)+2Eo
					; icu_56::CharsetRecog_IBM420_ar_rtl::getName(void)
		dd offset ?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_IBM420_ar::getLanguage(void)
		dd offset ?match@CharsetRecog_IBM420_ar_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_IBM420_ar_rtl::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_IBM420_ar_rtl::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_IBM420_ar::match_sbcs(icu_56::InputText	*,int const * const,uchar const	* const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 35DCh
		public ??_R4CharsetRecog_IBM420_ar_rtl@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI Complete Object Locator'
??_R4CharsetRecog_IBM420_ar_rtl@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:000035C4o
		dd offset ??_R0?AVCharsetRecog_IBM420_ar_rtl@icu_56@@@8	; icu_56::CharsetRecog_IBM420_ar_rtl `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 35F0h
		public ??_R0?AVCharsetRecog_IBM420_ar_rtl@icu_56@@@8
; class	icu_56::CharsetRecog_IBM420_ar_rtl `RTTI Type Descriptor'
??_R0?AVCharsetRecog_IBM420_ar_rtl@icu_56@@@8 dd offset	??_7type_info@@6B@
					; DATA XREF: .rdata$r:000035E8o
					; .rdata$r:icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avcharset_38	db '.?AVCharsetRecog_IBM420_ar_rtl@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3620h
		public ??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8 dd 2 dup(0) ;	DATA XREF: .rdata$r:000035ECo
					; .rdata$r:00003660o
		dd 5
		dd offset ??_R2CharsetRecog_IBM420_ar_rtl@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3630h
		public ??_R2CharsetRecog_IBM420_ar_rtl@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI Base Class Array'
??_R2CharsetRecog_IBM420_ar_rtl@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_IBM420_ar_rtl@icu_56@@8
					; DATA XREF: .rdata$r:0000362Co
					; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3648h
		public ??_R1A@?0A@EA@CharsetRecog_IBM420_ar_rtl@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@CharsetRecog_IBM420_ar_rtl@icu_56@@8 dd offset ??_R0?AVCharsetRecog_IBM420_ar_rtl@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI	Base Class Array'o
					; icu_56::CharsetRecog_IBM420_ar_rtl `RTTI Type	Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_IBM420_ar_rtl@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar_rtl::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3664h
		public ??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8 dd offset ??_R0?AVCharsetRecog_IBM420_ar@icu_56@@@8
					; DATA XREF: .rdata$r:00003634o
					; .rdata$r:icu_56::CharsetRecog_IBM420_ar::`RTTI Base Class Array'o ...
					; icu_56::CharsetRecog_IBM420_ar `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_IBM420_ar@icu_56@@8	; icu_56::CharsetRecog_IBM420_ar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 3680h
		public ??_R0?AVCharsetRecog_IBM420_ar@icu_56@@@8
; class	icu_56::CharsetRecog_IBM420_ar `RTTI Type Descriptor'
??_R0?AVCharsetRecog_IBM420_ar@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_IBM420_ar::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00004838o
					; const	type_info::`vftable'
		align 8
a_?avcharset_39	db '.?AVCharsetRecog_IBM420_ar@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 36ACh
		public ??_R3CharsetRecog_IBM420_ar@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar::`RTTI	Class Hierarchy	Descriptor'
??_R3CharsetRecog_IBM420_ar@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:0000367Co
					; .rdata$r:0000483Co
		dd 4
		dd offset ??_R2CharsetRecog_IBM420_ar@icu_56@@8	; icu_56::CharsetRecog_IBM420_ar::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 36BCh
		public ??_R2CharsetRecog_IBM420_ar@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar::`RTTI	Base Class Array'
??_R2CharsetRecog_IBM420_ar@icu_56@@8 dd offset	??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8
					; DATA XREF: .rdata$r:000036B8o
					; icu_56::CharsetRecog_IBM420_ar::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 36D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_IBM420_ar_ltr::CharsetRecog_IBM420_ar_ltr(icu_56::CharsetRecog_IBM420_ar_ltr *__hidden	this)
		public ??0CharsetRecog_IBM420_ar_ltr@icu_56@@QAE@XZ
??0CharsetRecog_IBM420_ar_ltr@icu_56@@QAE@XZ proc near ; CODE XREF: _initRecognizers+11CBp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ ; icu_56::CharsetRecog_IBM420_ar::CharsetRecog_IBM420_ar(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_IBM420_ar_ltr@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM420_ar_ltr::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_IBM420_ar_ltr@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 371Ch
		dd offset ??_R4CharsetRecog_IBM420_ar_ltr@icu_56@@6B@ ;	const icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_IBM420_ar_ltr@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM420_ar_ltr::`vftable'
??_7CharsetRecog_IBM420_ar_ltr@icu_56@@6B@ dd offset ?getName@CharsetRecog_IBM420_ar_ltr@icu_56@@EBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_IBM420_ar_ltr::CharsetRecog_IBM420_ar_ltr(void)+2Eo
					; icu_56::CharsetRecog_IBM420_ar_ltr::getName(void)
		dd offset ?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_IBM420_ar::getLanguage(void)
		dd offset ?match@CharsetRecog_IBM420_ar_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_IBM420_ar_ltr::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z ; icu_56::CharsetRecog_IBM420_ar_ltr::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_IBM420_ar::match_sbcs(icu_56::InputText	*,int const * const,uchar const	* const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3734h
		public ??_R4CharsetRecog_IBM420_ar_ltr@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI Complete Object Locator'
??_R4CharsetRecog_IBM420_ar_ltr@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:0000371Co
		dd offset ??_R0?AVCharsetRecog_IBM420_ar_ltr@icu_56@@@8	; icu_56::CharsetRecog_IBM420_ar_ltr `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 3748h
		public ??_R0?AVCharsetRecog_IBM420_ar_ltr@icu_56@@@8
; class	icu_56::CharsetRecog_IBM420_ar_ltr `RTTI Type Descriptor'
??_R0?AVCharsetRecog_IBM420_ar_ltr@icu_56@@@8 dd offset	??_7type_info@@6B@
					; DATA XREF: .rdata$r:00003740o
					; .rdata$r:icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcharset_40	db '.?AVCharsetRecog_IBM420_ar_ltr@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3778h
		public ??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI Class Hierarchy Descriptor'
??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8 dd 2 dup(0) ;	DATA XREF: .rdata$r:00003744o
					; .rdata$r:000037B8o
		dd 5
		dd offset ??_R2CharsetRecog_IBM420_ar_ltr@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3788h
		public ??_R2CharsetRecog_IBM420_ar_ltr@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI Base Class Array'
??_R2CharsetRecog_IBM420_ar_ltr@icu_56@@8 dd offset ??_R1A@?0A@EA@CharsetRecog_IBM420_ar_ltr@icu_56@@8
					; DATA XREF: .rdata$r:00003784o
					; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_IBM420_ar@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecog_sbcs@icu_56@@8 ; icu_56::CharsetRecog_sbcs::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 37A0h
		public ??_R1A@?0A@EA@CharsetRecog_IBM420_ar_ltr@icu_56@@8
; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@CharsetRecog_IBM420_ar_ltr@icu_56@@8 dd offset ??_R0?AVCharsetRecog_IBM420_ar_ltr@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI	Base Class Array'o
					; icu_56::CharsetRecog_IBM420_ar_ltr `RTTI Type	Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CharsetRecog_IBM420_ar_ltr@icu_56@@8 ; icu_56::CharsetRecog_IBM420_ar_ltr::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 37BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_UTF8::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecog_UTF8@icu_56@@UAEPAXI@Z
??_GCharsetRecog_UTF8@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_UTF8@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF8::~CharsetRecog_UTF8(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3805
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3805:				; CODE XREF: icu_56::CharsetRecog_UTF8::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_UTF8@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3820h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecognizer::CharsetRecognizer(icu_56::CharsetRecognizer *__hidden this)
		public ??0CharsetRecognizer@icu_56@@QAE@XZ
??0CharsetRecognizer@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_UTF8::CharsetRecog_UTF8(void)+26p
					; icu_56::CharsetRecog_Unicode::CharsetRecog_Unicode(void)+26p	...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecognizer@icu_56@@6B@ ; const icu_56::CharsetRecognizer::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecognizer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3858h
		dd offset ??_R4CharsetRecognizer@icu_56@@6B@ ; const icu_56::CharsetRecognizer::`RTTI Complete Object Locator'
		public ??_7CharsetRecognizer@icu_56@@6B@
; const	icu_56::CharsetRecognizer::`vftable'
??_7CharsetRecognizer@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecognizer::CharsetRecognizer(void)+26o
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecognizer@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecognizer::`vector deleting	destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 386Ch
		public ??_R4CharsetRecognizer@icu_56@@6B@
; const	icu_56::CharsetRecognizer::`RTTI Complete Object Locator'
??_R4CharsetRecognizer@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00003858o
		dd offset ??_R0?AVCharsetRecognizer@icu_56@@@8 ; icu_56::CharsetRecognizer `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3880h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_16_BE::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z
??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_38C9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_38C9:				; CODE XREF: icu_56::CharsetRecog_UTF_16_BE::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 38E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_Unicode::CharsetRecog_Unicode(icu_56::CharsetRecog_Unicode *__hidden this)
		public ??0CharsetRecog_Unicode@icu_56@@QAE@XZ
??0CharsetRecog_Unicode@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_UTF_16_BE::CharsetRecog_UTF_16_BE(void)+26p
					; icu_56::CharsetRecog_UTF_16_LE::CharsetRecog_UTF_16_LE(void)+26p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecognizer@icu_56@@QAE@XZ ; icu_56::CharsetRecognizer::CharsetRecognizer(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_Unicode@icu_56@@6B@ ; const icu_56::CharsetRecog_Unicode::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_Unicode@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3930h
		dd offset ??_R4CharsetRecog_Unicode@icu_56@@6B@	; const	icu_56::CharsetRecog_Unicode::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_Unicode@icu_56@@6B@
; const	icu_56::CharsetRecog_Unicode::`vftable'
??_7CharsetRecog_Unicode@icu_56@@6B@ dd	offset __purecall
					; DATA XREF: icu_56::CharsetRecog_Unicode::CharsetRecog_Unicode(void)+2Eo
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_Unicode@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_Unicode::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3944h
		public ??_R4CharsetRecog_Unicode@icu_56@@6B@
; const	icu_56::CharsetRecog_Unicode::`RTTI Complete Object Locator'
??_R4CharsetRecog_Unicode@icu_56@@6B@ dd 3 dup(0) ; DATA XREF: .rdata:00003930o
		dd offset ??_R0?AVCharsetRecog_Unicode@icu_56@@@8 ; icu_56::CharsetRecog_Unicode `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_Unicode@icu_56@@8 ;	icu_56::CharsetRecog_Unicode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3958h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_16_LE::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z
??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_39A1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_39A1:				; CODE XREF: icu_56::CharsetRecog_UTF_16_LE::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 39BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32_BE::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z
??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3A05
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3A05:				; CODE XREF: icu_56::CharsetRecog_UTF_32_BE::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3A20h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_UTF_32::CharsetRecog_UTF_32(icu_56::CharsetRecog_UTF_32 *__hidden this)
		public ??0CharsetRecog_UTF_32@icu_56@@QAE@XZ
??0CharsetRecog_UTF_32@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_UTF_32_BE::CharsetRecog_UTF_32_BE(void)+26p
					; icu_56::CharsetRecog_UTF_32_LE::CharsetRecog_UTF_32_LE(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_Unicode@icu_56@@QAE@XZ ; icu_56::CharsetRecog_Unicode::CharsetRecog_Unicode(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_UTF_32@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_32::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_UTF_32@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3A6Ch
		dd offset ??_R4CharsetRecog_UTF_32@icu_56@@6B@ ; const icu_56::CharsetRecog_UTF_32::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_UTF_32@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_32::`vftable'
??_7CharsetRecog_UTF_32@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecog_UTF_32::CharsetRecog_UTF_32(void)+2Eo
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset ?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF_32::match(icu_56::InputText *,icu_56::CharsetMatch *)
		dd offset ??_ECharsetRecog_UTF_32@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_UTF_32::`vector deleting destructor'(uint)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3A84h
		public ??_R4CharsetRecog_UTF_32@icu_56@@6B@
; const	icu_56::CharsetRecog_UTF_32::`RTTI Complete Object Locator'
??_R4CharsetRecog_UTF_32@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00003A6Co
		dd offset ??_R0?AVCharsetRecog_UTF_32@icu_56@@@8 ; icu_56::CharsetRecog_UTF_32 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_UTF_32@icu_56@@8 ; icu_56::CharsetRecog_UTF_32::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3A98h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32_LE::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z
??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3AE1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3AE1:				; CODE XREF: icu_56::CharsetRecog_UTF_32_LE::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3AFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_1::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_1@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_1@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_1@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_1::~CharsetRecog_8859_1(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3B45
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3B45:				; CODE XREF: icu_56::CharsetRecog_8859_1::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_1@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B60h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_2::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_2@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_2@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_2@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_2::~CharsetRecog_8859_2(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3BA9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3BA9:				; CODE XREF: icu_56::CharsetRecog_8859_2::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_2@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3BC4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_5_ru::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_5_ru@icu_56@@UAE@XZ ; icu_56::CharsetRecog_8859_5_ru::~CharsetRecog_8859_5_ru(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3C0D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3C0D:				; CODE XREF: icu_56::CharsetRecog_8859_5_ru::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3C28h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_5::CharsetRecog_8859_5(icu_56::CharsetRecog_8859_5 *__hidden this)
		public ??0CharsetRecog_8859_5@icu_56@@QAE@XZ
??0CharsetRecog_8859_5@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_8859_5_ru::CharsetRecog_8859_5_ru(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_5@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_5::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_5@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C74h
		dd offset ??_R4CharsetRecog_8859_5@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_5::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_5@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_5::`vftable'
??_7CharsetRecog_8859_5@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_5@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_5::CharsetRecog_8859_5(void)+2Eo
					; icu_56::CharsetRecog_8859_5::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_8859_5@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_5::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3C8Ch
		public ??_R4CharsetRecog_8859_5@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_5::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_5@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00003C74o
		dd offset ??_R0?AVCharsetRecog_8859_5@icu_56@@@8 ; icu_56::CharsetRecog_8859_5 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_5@icu_56@@8 ; icu_56::CharsetRecog_8859_5::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3CA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_6_ar::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_6_ar@icu_56@@UAE@XZ ; icu_56::CharsetRecog_8859_6_ar::~CharsetRecog_8859_6_ar(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3CE9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3CE9:				; CODE XREF: icu_56::CharsetRecog_8859_6_ar::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3D04h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_6::CharsetRecog_8859_6(icu_56::CharsetRecog_8859_6 *__hidden this)
		public ??0CharsetRecog_8859_6@icu_56@@QAE@XZ
??0CharsetRecog_8859_6@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_8859_6_ar::CharsetRecog_8859_6_ar(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_6@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_6::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_6@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D50h
		dd offset ??_R4CharsetRecog_8859_6@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_6::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_6@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_6::`vftable'
??_7CharsetRecog_8859_6@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_6@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_6::CharsetRecog_8859_6(void)+2Eo
					; icu_56::CharsetRecog_8859_6::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_8859_6@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_6::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3D68h
		public ??_R4CharsetRecog_8859_6@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_6::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_6@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00003D50o
		dd offset ??_R0?AVCharsetRecog_8859_6@icu_56@@@8 ; icu_56::CharsetRecog_8859_6 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_6@icu_56@@8 ; icu_56::CharsetRecog_8859_6::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3D7Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_7_el::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_7_el@icu_56@@UAE@XZ ; icu_56::CharsetRecog_8859_7_el::~CharsetRecog_8859_7_el(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3DC5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3DC5:				; CODE XREF: icu_56::CharsetRecog_8859_7_el::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3DE0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_7::CharsetRecog_8859_7(icu_56::CharsetRecog_8859_7 *__hidden this)
		public ??0CharsetRecog_8859_7@icu_56@@QAE@XZ
??0CharsetRecog_8859_7@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_8859_7_el::CharsetRecog_8859_7_el(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_7@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_7::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_7@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3E2Ch
		dd offset ??_R4CharsetRecog_8859_7@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_7::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_7@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_7::`vftable'
??_7CharsetRecog_8859_7@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_7@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_7::CharsetRecog_8859_7(void)+2Eo
					; icu_56::CharsetRecog_8859_7::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_8859_7@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_7::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3E44h
		public ??_R4CharsetRecog_8859_7@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_7::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_7@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00003E2Co
		dd offset ??_R0?AVCharsetRecog_8859_7@icu_56@@@8 ; icu_56::CharsetRecog_8859_7 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_7@icu_56@@8 ; icu_56::CharsetRecog_8859_7::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3E58h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8_I_he::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_8_I_he@icu_56@@UAE@XZ ; icu_56::CharsetRecog_8859_8_I_he::~CharsetRecog_8859_8_I_he(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3EA1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3EA1:				; CODE XREF: icu_56::CharsetRecog_8859_8_I_he::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3EBCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_8::CharsetRecog_8859_8(icu_56::CharsetRecog_8859_8 *__hidden this)
		public ??0CharsetRecog_8859_8@icu_56@@QAE@XZ
??0CharsetRecog_8859_8@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_8859_8_I_he::CharsetRecog_8859_8_I_he(void)+26p
					; icu_56::CharsetRecog_8859_8_he::CharsetRecog_8859_8_he(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_8@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_8::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_8@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3F08h
		dd offset ??_R4CharsetRecog_8859_8@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_8::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_8@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_8::`vftable'
??_7CharsetRecog_8859_8@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_8@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_8::CharsetRecog_8859_8(void)+2Eo
					; icu_56::CharsetRecog_8859_8::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_8859_8@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_8::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3F20h
		public ??_R4CharsetRecog_8859_8@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_8::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_8@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00003F08o
		dd offset ??_R0?AVCharsetRecog_8859_8@icu_56@@@8 ; icu_56::CharsetRecog_8859_8 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_8@icu_56@@8 ; icu_56::CharsetRecog_8859_8::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3F34h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8_he::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_8_he@icu_56@@UAE@XZ ; icu_56::CharsetRecog_8859_8_he::~CharsetRecog_8859_8_he(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3F7D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3F7D:				; CODE XREF: icu_56::CharsetRecog_8859_8_he::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3F98h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_windows_1251::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecog_windows_1251@icu_56@@UAEPAXI@Z
??_GCharsetRecog_windows_1251@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_windows_1251@icu_56@@UAE@XZ ; icu_56::CharsetRecog_windows_1251::~CharsetRecog_windows_1251(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3FE1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3FE1:				; CODE XREF: icu_56::CharsetRecog_windows_1251::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_windows_1251@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3FFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_windows_1256::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecog_windows_1256@icu_56@@UAEPAXI@Z
??_GCharsetRecog_windows_1256@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp

loc_3FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::boolalphao
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_windows_1256@icu_56@@UAE@XZ ; icu_56::CharsetRecog_windows_1256::~CharsetRecog_windows_1256(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4045
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4045:				; CODE XREF: icu_56::CharsetRecog_windows_1256::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_windows_1256@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4060h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_KOI8_R::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z
??_GCharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_KOI8_R@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_KOI8_R::~CharsetRecog_KOI8_R(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_40A9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_40A9:				; CODE XREF: icu_56::CharsetRecog_KOI8_R::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 40C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_9_tr::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_9_tr@icu_56@@UAE@XZ ; icu_56::CharsetRecog_8859_9_tr::~CharsetRecog_8859_9_tr(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_410D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_410D:				; CODE XREF: icu_56::CharsetRecog_8859_9_tr::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4128h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_8859_9::CharsetRecog_8859_9(icu_56::CharsetRecog_8859_9 *__hidden this)
		public ??0CharsetRecog_8859_9@icu_56@@QAE@XZ
??0CharsetRecog_8859_9@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_8859_9_tr::CharsetRecog_8859_9_tr(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_8859_9@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_9::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_8859_9@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4174h
		dd offset ??_R4CharsetRecog_8859_9@icu_56@@6B@ ; const icu_56::CharsetRecog_8859_9::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_8859_9@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_9::`vftable'
??_7CharsetRecog_8859_9@icu_56@@6B@ dd offset ?getName@CharsetRecog_8859_9@icu_56@@UBEPBDXZ
					; DATA XREF: icu_56::CharsetRecog_8859_9::CharsetRecog_8859_9(void)+2Eo
					; icu_56::CharsetRecog_8859_9::getName(void)
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_8859_9@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_8859_9::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 418Ch
		public ??_R4CharsetRecog_8859_9@icu_56@@6B@
; const	icu_56::CharsetRecog_8859_9::`RTTI Complete Object Locator'
??_R4CharsetRecog_8859_9@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00004174o
		dd offset ??_R0?AVCharsetRecog_8859_9@icu_56@@@8 ; icu_56::CharsetRecog_8859_9 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_8859_9@icu_56@@8 ; icu_56::CharsetRecog_8859_9::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 41A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_sjis::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z
??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_sjis@icu_56@@UAE@XZ ; icu_56::CharsetRecog_sjis::~CharsetRecog_sjis(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_41E9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_41E9:				; CODE XREF: icu_56::CharsetRecog_sjis::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4204h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_mbcs::CharsetRecog_mbcs(icu_56::CharsetRecog_mbcs *__hidden this)
		public ??0CharsetRecog_mbcs@icu_56@@QAE@XZ
??0CharsetRecog_mbcs@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_sjis::CharsetRecog_sjis(void)+26p
					; icu_56::CharsetRecog_gb_18030::CharsetRecog_gb_18030(void)+26p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecognizer@icu_56@@QAE@XZ ; icu_56::CharsetRecognizer::CharsetRecognizer(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_mbcs@icu_56@@6B@ ; const icu_56::CharsetRecog_mbcs::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_mbcs@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4250h
		dd offset ??_R4CharsetRecog_mbcs@icu_56@@6B@ ; const icu_56::CharsetRecog_mbcs::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_mbcs@icu_56@@6B@
; const	icu_56::CharsetRecog_mbcs::`vftable'
??_7CharsetRecog_mbcs@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecog_mbcs::CharsetRecog_mbcs(void)+2Eo
		dd offset __purecall
		dd offset __purecall
		dd offset ??_ECharsetRecog_mbcs@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_mbcs::`vector deleting	destructor'(uint)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 4268h
		public ??_R4CharsetRecog_mbcs@icu_56@@6B@
; const	icu_56::CharsetRecog_mbcs::`RTTI Complete Object Locator'
??_R4CharsetRecog_mbcs@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00004250o
		dd offset ??_R0?AVCharsetRecog_mbcs@icu_56@@@8 ; icu_56::CharsetRecog_mbcs `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_mbcs@icu_56@@8 ; icu_56::CharsetRecog_mbcs::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 427Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_gb_18030::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z
??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_gb_18030@icu_56@@UAE@XZ	; icu_56::CharsetRecog_gb_18030::~CharsetRecog_gb_18030(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_42C5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_42C5:				; CODE XREF: icu_56::CharsetRecog_gb_18030::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 42E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_euc_jp::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z
??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_euc_jp@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_euc_jp::~CharsetRecog_euc_jp(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4329
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4329:				; CODE XREF: icu_56::CharsetRecog_euc_jp::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4344h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_euc::CharsetRecog_euc(icu_56::CharsetRecog_euc	*__hidden this)
		public ??0CharsetRecog_euc@icu_56@@QAE@XZ
??0CharsetRecog_euc@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::CharsetRecog_euc_jp::CharsetRecog_euc_jp(void)+26p
					; icu_56::CharsetRecog_euc_kr::CharsetRecog_euc_kr(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_mbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_mbcs::CharsetRecog_mbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_euc@icu_56@@6B@ ; const icu_56::CharsetRecog_euc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_euc@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4390h
		dd offset ??_R4CharsetRecog_euc@icu_56@@6B@ ; const icu_56::CharsetRecog_euc::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_euc@icu_56@@6B@
; const	icu_56::CharsetRecog_euc::`vftable'
??_7CharsetRecog_euc@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecog_euc::CharsetRecog_euc(void)+2Eo
		dd offset __purecall
		dd offset __purecall
		dd offset ??_ECharsetRecog_euc@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_euc::`vector deleting destructor'(uint)
		dd offset ?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z ; icu_56::CharsetRecog_euc::nextChar(icu_56::IteratedChar *,icu_56::InputText *)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 43A8h
		public ??_R4CharsetRecog_euc@icu_56@@6B@
; const	icu_56::CharsetRecog_euc::`RTTI	Complete Object	Locator'
??_R4CharsetRecog_euc@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:00004390o
		dd offset ??_R0?AVCharsetRecog_euc@icu_56@@@8 ;	icu_56::CharsetRecog_euc `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_euc@icu_56@@8 ; icu_56::CharsetRecog_euc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 43BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_euc_kr::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z
??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_euc_kr@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_euc_kr::~CharsetRecog_euc_kr(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4405
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4405:				; CODE XREF: icu_56::CharsetRecog_euc_kr::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4420h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_big5::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z
??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_big5@icu_56@@UAE@XZ ; icu_56::CharsetRecog_big5::~CharsetRecog_big5(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4469
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4469:				; CODE XREF: icu_56::CharsetRecog_big5::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4484h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_2022JP::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_2022JP@icu_56@@UAEPAXI@Z
??_GCharsetRecog_2022JP@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_2022JP@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_2022JP::~CharsetRecog_2022JP(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_44CD
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_44CD:				; CODE XREF: icu_56::CharsetRecog_2022JP::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_2022JP@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 44E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_2022::CharsetRecog_2022(icu_56::CharsetRecog_2022 *__hidden this)
		public ??0CharsetRecog_2022@icu_56@@QAE@XZ
??0CharsetRecog_2022@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_2022JP::CharsetRecog_2022JP(void)+26p
					; icu_56::CharsetRecog_2022KR::CharsetRecog_2022KR(void)+26p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecognizer@icu_56@@QAE@XZ ; icu_56::CharsetRecognizer::CharsetRecognizer(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_2022@icu_56@@6B@ ; const icu_56::CharsetRecog_2022::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_2022@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4534h
		dd offset ??_R4CharsetRecog_2022@icu_56@@6B@ ; const icu_56::CharsetRecog_2022::`RTTI Complete Object Locator'
		public ??_7CharsetRecog_2022@icu_56@@6B@
; const	icu_56::CharsetRecog_2022::`vftable'
??_7CharsetRecog_2022@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecog_2022::CharsetRecog_2022(void)+2Eo
		dd offset ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ ; icu_56::CharsetRecognizer::getLanguage(void)
		dd offset __purecall
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 4548h
		public ??_R4CharsetRecog_2022@icu_56@@6B@
; const	icu_56::CharsetRecog_2022::`RTTI Complete Object Locator'
??_R4CharsetRecog_2022@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00004534o
		dd offset ??_R0?AVCharsetRecog_2022@icu_56@@@8 ; icu_56::CharsetRecog_2022 `RTTI Type Descriptor'
		dd offset ??_R3CharsetRecog_2022@icu_56@@8 ; icu_56::CharsetRecog_2022::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 455Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_2022KR::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_2022KR@icu_56@@UAEPAXI@Z
??_GCharsetRecog_2022KR@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_2022KR@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_2022KR::~CharsetRecog_2022KR(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_45A5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_45A5:				; CODE XREF: icu_56::CharsetRecog_2022KR::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_2022KR@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 45C0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_2022CN::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_2022CN@icu_56@@UAEPAXI@Z
??_GCharsetRecog_2022CN@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_2022CN@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_2022CN::~CharsetRecog_2022CN(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4609
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4609:				; CODE XREF: icu_56::CharsetRecog_2022CN::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_2022CN@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4624h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_IBM424_he_rtl::`scalar	deleting destructor'(unsigned int)
		public ??_GCharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z
??_GCharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_IBM424_he_rtl@icu_56@@UAE@XZ ; icu_56::CharsetRecog_IBM424_he_rtl::~CharsetRecog_IBM424_he_rtl(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_466D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_466D:				; CODE XREF: icu_56::CharsetRecog_IBM424_he_rtl::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4688h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_IBM424_he::CharsetRecog_IBM424_he(icu_56::CharsetRecog_IBM424_he *__hidden this)
		public ??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ
??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_IBM424_he_rtl::CharsetRecog_IBM424_he_rtl(void)+26p
					; icu_56::CharsetRecog_IBM424_he_ltr::CharsetRecog_IBM424_he_ltr(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_IBM424_he@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM424_he::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_IBM424_he@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 46D4h
		dd offset ??_R4CharsetRecog_IBM424_he@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM424_he::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_IBM424_he@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM424_he::`vftable'
??_7CharsetRecog_IBM424_he@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecog_IBM424_he::CharsetRecog_IBM424_he(void)+2Eo
		dd offset ?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_IBM424_he::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_IBM424_he::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_sbcs::match_sbcs(icu_56::InputText *,int const * const,uchar	const *	const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 46ECh
		public ??_R4CharsetRecog_IBM424_he@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM424_he::`RTTI Complete Object Locator'
??_R4CharsetRecog_IBM424_he@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:000046D4o
		dd offset ??_R0?AVCharsetRecog_IBM424_he@icu_56@@@8 ; icu_56::CharsetRecog_IBM424_he `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_IBM424_he@icu_56@@8	; icu_56::CharsetRecog_IBM424_he::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4700h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; private: virtual void	* __thiscall icu_56::CharsetRecog_IBM424_he_ltr::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z
??_GCharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_IBM424_he_ltr@icu_56@@EAE@XZ ; icu_56::CharsetRecog_IBM424_he_ltr::~CharsetRecog_IBM424_he_ltr(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4749
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4749:				; CODE XREF: icu_56::CharsetRecog_IBM424_he_ltr::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4764h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::`scalar	deleting destructor'(unsigned int)
		public ??_GCharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z
??_GCharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_IBM420_ar_rtl@icu_56@@UAE@XZ ; icu_56::CharsetRecog_IBM420_ar_rtl::~CharsetRecog_IBM420_ar_rtl(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_47AD
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_47AD:				; CODE XREF: icu_56::CharsetRecog_IBM420_ar_rtl::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 47C8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetRecog_IBM420_ar::CharsetRecog_IBM420_ar(icu_56::CharsetRecog_IBM420_ar *__hidden this)
		public ??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ
??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CharsetRecog_IBM420_ar_rtl::CharsetRecog_IBM420_ar_rtl(void)+26p
					; icu_56::CharsetRecog_IBM420_ar_ltr::CharsetRecog_IBM420_ar_ltr(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CharsetRecog_sbcs@icu_56@@QAE@XZ ; icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CharsetRecog_IBM420_ar@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM420_ar::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CharsetRecog_IBM420_ar@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4814h
		dd offset ??_R4CharsetRecog_IBM420_ar@icu_56@@6B@ ; const icu_56::CharsetRecog_IBM420_ar::`RTTI	Complete Object	Locator'
		public ??_7CharsetRecog_IBM420_ar@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM420_ar::`vftable'
??_7CharsetRecog_IBM420_ar@icu_56@@6B@ dd offset __purecall
					; DATA XREF: icu_56::CharsetRecog_IBM420_ar::CharsetRecog_IBM420_ar(void)+2Eo
		dd offset ?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_IBM420_ar::getLanguage(void)
		dd offset __purecall
		dd offset ??_ECharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z ; icu_56::CharsetRecog_IBM420_ar::`vector deleting destructor'(uint)
		dd offset ?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z ; icu_56::CharsetRecog_IBM420_ar::match_sbcs(icu_56::InputText	*,int const * const,uchar const	* const)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 482Ch
		public ??_R4CharsetRecog_IBM420_ar@icu_56@@6B@
; const	icu_56::CharsetRecog_IBM420_ar::`RTTI Complete Object Locator'
??_R4CharsetRecog_IBM420_ar@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:00004814o
		dd offset ??_R0?AVCharsetRecog_IBM420_ar@icu_56@@@8 ; icu_56::CharsetRecog_IBM420_ar `RTTI Type	Descriptor'
		dd offset ??_R3CharsetRecog_IBM420_ar@icu_56@@8	; icu_56::CharsetRecog_IBM420_ar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4840h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; private: virtual void	* __thiscall icu_56::CharsetRecog_IBM420_ar_ltr::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z
??_GCharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_IBM420_ar_ltr@icu_56@@EAE@XZ ; icu_56::CharsetRecog_IBM420_ar_ltr::~CharsetRecog_IBM420_ar_ltr(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4889
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4889:				; CODE XREF: icu_56::CharsetRecog_IBM420_ar_ltr::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 48A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecognizer::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecognizer@icu_56@@UAEPAXI@Z
??_GCharsetRecognizer@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecognizer@icu_56@@UAE@XZ ; icu_56::CharsetRecognizer::~CharsetRecognizer(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_48ED
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_48ED:				; CODE XREF: icu_56::CharsetRecognizer::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecognizer@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4908h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_Unicode::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z
??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_Unicode@icu_56@@UAE@XZ ; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4951
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4951:				; CODE XREF: icu_56::CharsetRecog_Unicode::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 496Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z
??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_UTF_32@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_49B5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_49B5:				; CODE XREF: icu_56::CharsetRecog_UTF_32::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 49D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_5::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_5@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_5@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_5@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_5::~CharsetRecog_8859_5(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4A19
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4A19:				; CODE XREF: icu_56::CharsetRecog_8859_5::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_5@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4A34h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_6::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_6@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_6@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_6@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_6::~CharsetRecog_8859_6(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4A7D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4A7D:				; CODE XREF: icu_56::CharsetRecog_8859_6::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_6@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4A98h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_7::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_7@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_7@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_7@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_7::~CharsetRecog_8859_7(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4AE1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4AE1:				; CODE XREF: icu_56::CharsetRecog_8859_7::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_7@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4AFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_8@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_8@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_8@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_8::~CharsetRecog_8859_8(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4B45
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4B45:				; CODE XREF: icu_56::CharsetRecog_8859_8::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_8@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4B60h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_8859_9::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_8859_9@icu_56@@UAEPAXI@Z
??_GCharsetRecog_8859_9@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_8859_9@icu_56@@UAE@XZ ;	icu_56::CharsetRecog_8859_9::~CharsetRecog_8859_9(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4BA9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4BA9:				; CODE XREF: icu_56::CharsetRecog_8859_9::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_8859_9@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4BC4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_mbcs::`scalar deleting	destructor'(unsigned int)
		public ??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z
??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_mbcs@icu_56@@UAE@XZ ; icu_56::CharsetRecog_mbcs::~CharsetRecog_mbcs(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4C0D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4C0D:				; CODE XREF: icu_56::CharsetRecog_mbcs::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4C28h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_euc::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z
??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_euc@icu_56@@UAE@XZ ; icu_56::CharsetRecog_euc::~CharsetRecog_euc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4C71
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4C71:				; CODE XREF: icu_56::CharsetRecog_euc::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4C8Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_IBM424_he::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z
??_GCharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_IBM424_he@icu_56@@UAE@XZ ; icu_56::CharsetRecog_IBM424_he::~CharsetRecog_IBM424_he(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4CD5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4CD5:				; CODE XREF: icu_56::CharsetRecog_IBM424_he::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4CF0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CharsetRecog_IBM420_ar::`scalar deleting destructor'(unsigned int)
		public ??_GCharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z
??_GCharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CharsetRecog_IBM420_ar@icu_56@@UAE@XZ ; icu_56::CharsetRecog_IBM420_ar::~CharsetRecog_IBM420_ar(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_4D39
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4D39:				; CODE XREF: icu_56::CharsetRecog_IBM420_ar::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4D54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetDetector::CharsetDetector(icu_56::CharsetDetector *this, enum UErrorCode *)
		public ??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z
??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z proc near

var_118		= dword	ptr -118h
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 10Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_118]
		mov	ecx, 43h ; 'C'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		push	1Ch		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_104], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_104], 0
		jz	short loc_4DD7
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_104] ; this
		call	??0InputText@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::InputText::InputText(UErrorCode &)
		mov	[ebp+var_118], eax
		jmp	short loc_4DE1
; ---------------------------------------------------------------------------

loc_4DD7:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+6Aj
		mov	[ebp+var_118], 0

loc_4DE1:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+81j
		mov	ecx, [ebp+var_118]
		mov	[ebp+var_110], ecx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_110]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax+0Ch], 0
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax+0Dh], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+10h], 0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_4E45
		jmp	loc_4F45
; ---------------------------------------------------------------------------

loc_4E45:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+EAj
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		call	?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z ;	icu_56::CharsetDetector::setRecognizers(UErrorCode &)
		add	esp, 4
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_4E6B
		jmp	loc_4F45
; ---------------------------------------------------------------------------

loc_4E6B:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+110j
		mov	eax, ds:_fCSRecognizers_size
		shl	eax, 2
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	ecx, [ebp+var_14]
		mov	[ecx+4], eax
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+4], 0
		jnz	short loc_4E99
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		jmp	loc_4F45
; ---------------------------------------------------------------------------

loc_4E99:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+135j
		mov	[ebp+var_20], 0
		jmp	short loc_4EAB
; ---------------------------------------------------------------------------

loc_4EA2:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &):loc_4F40j
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_4EAB:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+14Cj
		mov	eax, [ebp+var_20]
		cmp	eax, ds:_fCSRecognizers_size
		jge	loc_4F45
		mov	esi, esp
		push	10h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_EC], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_EC], 0
		jz	short loc_4EF7
		mov	ecx, [ebp+var_EC] ; this
		call	??0CharsetMatch@icu_56@@QAE@XZ ; icu_56::CharsetMatch::CharsetMatch(void)
		mov	[ebp+var_118], eax
		jmp	short loc_4F01
; ---------------------------------------------------------------------------

loc_4EF7:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+18Ej
		mov	[ebp+var_118], 0

loc_4F01:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+1A1j
		mov	eax, [ebp+var_118]
		mov	[ebp+var_F8], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx+4]
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_F8]
		mov	[edx+eax*4], ecx
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+4]
		mov	edx, [ebp+var_20]
		cmp	dword ptr [ecx+edx*4], 0
		jnz	short loc_4F40
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		jmp	short loc_4F45
; ---------------------------------------------------------------------------

loc_4F40:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+1DFj
		jmp	loc_4EA2
; ---------------------------------------------------------------------------

loc_4F45:				; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+ECj
					; icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+112j ...
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 118h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 4F6Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00004FC0o
		mov	esi, esp
		mov	eax, [ebp-104h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00004FC8o
		mov	esi, esp
		mov	eax, [ebp-0ECh]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-11Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 4FBCh
__unwindtable$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00004FD4o
		dd offset __unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z dd 19930522h, 2
					; DATA XREF: __ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4FF0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CharsetDetector::~CharsetDetector(icu_56::CharsetDetector *__hidden	this)
		public ??1CharsetDetector@icu_56@@QAE@XZ
??1CharsetDetector@icu_56@@QAE@XZ proc near

var_100		= dword	ptr -100h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 100h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_100]
		mov	ecx, 40h ; '@'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_EC], ecx
		mov	edx, [ebp+var_EC]
		mov	[ebp+var_F8], edx
		cmp	[ebp+var_F8], 0
		jz	short loc_5048
		push	1
		mov	ecx, [ebp+var_F8]
		call	??_GInputText@icu_56@@QAEPAXI@Z	; icu_56::InputText::`scalar deleting destructor'(uint)
		mov	[ebp+var_100], eax
		jmp	short loc_5052
; ---------------------------------------------------------------------------

loc_5048:				; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+41j
		mov	[ebp+var_100], 0

loc_5052:				; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+56j
		mov	[ebp+var_14], 0
		jmp	short loc_5064
; ---------------------------------------------------------------------------

loc_505B:				; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+AAj
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_5064:				; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+69j
		mov	eax, [ebp+var_14]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_509C
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		mov	edx, [ebp+var_14]
		mov	eax, [ecx+edx*4]
		mov	[ebp+var_E0], eax
		mov	esi, esp
		mov	ecx, [ebp+var_E0]
		push	ecx		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_505B
; ---------------------------------------------------------------------------

loc_509C:				; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+7Dj
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx
		call	_uprv_free_56
		add	esp, 4
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+10h], 0
		jz	short loc_50C3
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]
		push	ecx
		call	_uprv_free_56
		add	esp, 4

loc_50C3:				; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+C2j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 100h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1CharsetDetector@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 50D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void * __thiscall icu_56::InputText::`scalar deleting	destructor'(unsigned int)
		public ??_GInputText@icu_56@@QAEPAXI@Z
??_GInputText@icu_56@@QAEPAXI@Z	proc near
					; CODE XREF: icu_56::CharsetDetector::~CharsetDetector(void)+4Bp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1InputText@icu_56@@QAE@XZ ; icu_56::InputText::~InputText(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_5121
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_5121:				; CODE XREF: icu_56::InputText::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GInputText@icu_56@@QAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 513Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CharsetDetector::setText(icu_56::CharsetDetector *this, const	char *,	int)
		public ?setText@CharsetDetector@icu_56@@QAEXPBDH@Z
?setText@CharsetDetector@icu_56@@QAEXPBDH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; char *
		mov	edx, [ebp+var_8]
		mov	ecx, [edx]	; this
		call	?setText@InputText@icu_56@@QAEXPBDH@Z ;	icu_56::InputText::setText(char	const *,int)
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Dh], 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?setText@CharsetDetector@icu_56@@QAEXPBDH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5190h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::CharsetDetector::setStripTagsFlag(icu_56::CharsetDetector *this, signed __int8)
		public ?setStripTagsFlag@CharsetDetector@icu_56@@QAECC@Z
?setStripTagsFlag@CharsetDetector@icu_56@@QAECC@Z proc near

var_D8		= byte ptr -0D8h
var_11		= byte ptr -11h
var_8		= dword	ptr -8
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	cl, [eax+0Ch]
		mov	[ebp+var_11], cl
		mov	eax, [ebp+var_8]
		mov	cl, [ebp+arg_0]
		mov	[eax+0Ch], cl
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Dh], 1
		mov	al, [ebp+var_11]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?setStripTagsFlag@CharsetDetector@icu_56@@QAECC@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 51D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::CharsetDetector::getStripTagsFlag(icu_56::CharsetDetector *__hidden this)
		public ?getStripTagsFlag@CharsetDetector@icu_56@@QBECXZ
?getStripTagsFlag@CharsetDetector@icu_56@@QBECXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	al, [eax+0Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getStripTagsFlag@CharsetDetector@icu_56@@QBECXZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5208h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CharsetDetector::setDeclaredEncoding(icu_56::CharsetDetector *this, const char *, int)
		public ?setDeclaredEncoding@CharsetDetector@icu_56@@QBEXPBDH@Z
?setDeclaredEncoding@CharsetDetector@icu_56@@QBEXPBDH@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; char *
		mov	edx, [ebp+var_8]
		mov	ecx, [edx]	; this
		call	?setDeclaredEncoding@InputText@icu_56@@QAEXPBDH@Z ; icu_56::InputText::setDeclaredEncoding(char	const *,int)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?setDeclaredEncoding@CharsetDetector@icu_56@@QBEXPBDH@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5254h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::CharsetDetector::getDetectableCount()
		public ?getDetectableCount@CharsetDetector@icu_56@@SAHXZ
?getDetectableCount@CharsetDetector@icu_56@@SAHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		lea	eax, [ebp+var_8]
		push	eax		; enum UErrorCode *
		call	?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z ;	icu_56::CharsetDetector::setRecognizers(UErrorCode &)
		add	esp, 4
		mov	eax, ds:_fCSRecognizers_size
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getDetectableCount@CharsetDetector@icu_56@@SAHXZ endp

; ---------------------------------------------------------------------------
		align 10h
$LN5		dd 1			; DATA XREF: icu_56::CharsetDetector::getDetectableCount(void)+3Ao
		dd offset $LN4
$LN4		dd 0FFFFFFF8h, 4	; DATA XREF: .text:000052B4o
		dd offset $LN3		; "status"
$LN3		db 'status',0           ; DATA XREF: .text:000052C0o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 52CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::CharsetMatch *__thiscall	icu_56::CharsetDetector::detect(icu_56::CharsetDetector	*this, enum UErrorCode *)
		public ?detect@CharsetDetector@icu_56@@QAEPBVCharsetMatch@2@AAW4UErrorCode@@@Z
?detect@CharsetDetector@icu_56@@QAEPBVCharsetMatch@2@AAW4UErrorCode@@@Z	proc near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_14]
		push	ecx		; int *
		mov	ecx, [ebp+var_8] ; this
		call	?detectAll@CharsetDetector@icu_56@@QAEPBQBVCharsetMatch@2@AAHAAW4UErrorCode@@@Z	; icu_56::CharsetDetector::detectAll(int &,UErrorCode &)
		cmp	[ebp+var_14], 0
		jle	short loc_5318
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		mov	eax, [ecx]
		jmp	short loc_531A
; ---------------------------------------------------------------------------
		jmp	short loc_531A
; ---------------------------------------------------------------------------

loc_5318:				; CODE XREF: icu_56::CharsetDetector::detect(UErrorCode	&)+3Ej
		xor	eax, eax

loc_531A:				; CODE XREF: icu_56::CharsetDetector::detect(UErrorCode	&)+48j
					; icu_56::CharsetDetector::detect(UErrorCode &)+4Aj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?detect@CharsetDetector@icu_56@@QAEPBVCharsetMatch@2@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
$LN7		dd 1			; DATA XREF: icu_56::CharsetDetector::detect(UErrorCode	&)+52o
		dd offset $LN6
$LN6		dd 0FFFFFFECh, 4	; DATA XREF: .text:00005348o
		dd offset $LN5_0	; "maxMatchesFound"
$LN5_0		db 'maxMatchesFound',0  ; DATA XREF: .text:00005354o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5368h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::CharsetMatch *const *__thiscall icu_56::CharsetDetector::detectAll(icu_56::CharsetDetector *this, int *,	enum UErrorCode	*)
		public ?detectAll@CharsetDetector@icu_56@@QAEPBQBVCharsetMatch@2@AAHAAW4UErrorCode@@@Z
?detectAll@CharsetDetector@icu_56@@QAEPBQBVCharsetMatch@2@AAHAAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::CharsetDetector::detect(UErrorCode	&)+35p

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]	; this
		call	?isSet@InputText@icu_56@@QBECXZ	; icu_56::InputText::isSet(void)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_53B1
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 2
		xor	eax, eax
		jmp	loc_5494
; ---------------------------------------------------------------------------
		jmp	loc_5483
; ---------------------------------------------------------------------------

loc_53B1:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+32j
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax+0Dh]
		test	ecx, ecx
		jz	loc_5483
		mov	eax, [ebp+var_8]
		movzx	ecx, byte ptr [eax+0Ch]
		push	ecx		; signed __int8
		mov	edx, [ebp+var_8]
		mov	ecx, [edx]	; this
		call	?MungeInput@InputText@icu_56@@QAEXC@Z ;	icu_56::InputText::MungeInput(signed char)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+8], 0
		mov	[ebp+var_20], 0
		jmp	short loc_53EE
; ---------------------------------------------------------------------------

loc_53E5:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &):loc_544Cj
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_53EE:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+7Bj
		mov	eax, [ebp+var_20]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_544E
		mov	eax, [ebp+var_20]
		mov	ecx, ds:_fCSRecognizers
		mov	edx, [ecx+eax*4]
		mov	eax, [edx]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		mov	edx, [ebp+var_8]
		mov	eax, [edx+4]
		mov	esi, esp
		mov	ecx, [eax+ecx*4]
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_544C
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		add	ecx, 1
		mov	edx, [ebp+var_8]
		mov	[edx+8], ecx

loc_544C:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+D3j
		jmp	short loc_53E5
; ---------------------------------------------------------------------------

loc_544E:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+8Fj
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 1
		jle	short loc_547C
		mov	eax, [ebp+arg_4]
		push	eax
		push	1
		push	0
		push	offset _charsetMatchComparator
		push	4
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+8]
		push	edx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx
		call	_uprv_sortArray_56
		add	esp, 1Ch

loc_547C:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+EDj
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Dh], 0

loc_5483:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+44j
					; icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+52j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]

loc_5494:				; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+3Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?detectAll@CharsetDetector@icu_56@@QAEPBQBVCharsetMatch@2@AAHAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 54ACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_charsetMatchComparator	proc near	; DATA XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+F7o

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		mov	ecx, [eax]	; this
		call	?getConfidence@CharsetMatch@icu_56@@QBEHXZ ; icu_56::CharsetMatch::getConfidence(void)
		mov	esi, eax
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx]	; this
		call	?getConfidence@CharsetMatch@icu_56@@QBEHXZ ; icu_56::CharsetMatch::getConfidence(void)
		sub	esi, eax
		mov	eax, esi
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_charsetMatchComparator	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5504h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CharsetDetector::setDetectableCharset(icu_56::CharsetDetector	*this, const char *Str2, char, enum UErrorCode *)
		public ?setDetectableCharset@CharsetDetector@icu_56@@QAEXPBDCAAW4UErrorCode@@@Z
?setDetectableCharset@CharsetDetector@icu_56@@QAEXPBDCAAW4UErrorCode@@@Z proc near

var_108		= byte ptr -108h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_1D		= byte ptr -1Dh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
Str2		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_108]
		mov	ecx, 42h ; 'B'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_5541
		jmp	loc_565E
; ---------------------------------------------------------------------------

loc_5541:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+36j
		mov	[ebp+var_14], 0FFFFFFFFh
		mov	[ebp+var_1D], 0
		mov	[ebp+var_2C], 0
		jmp	short loc_555E
; ---------------------------------------------------------------------------

loc_5555:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &):loc_55BDj
		mov	eax, [ebp+var_2C]
		add	eax, 1
		mov	[ebp+var_2C], eax

loc_555E:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+4Fj
		mov	eax, [ebp+var_2C]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_55BF
		mov	eax, [ebp+var_2C]
		mov	ecx, ds:_fCSRecognizers
		mov	edx, [ecx+eax*4]
		mov	[ebp+var_38], edx
		mov	eax, [ebp+Str2]
		push	eax		; Str2
		mov	ecx, [ebp+var_38]
		mov	edx, [ecx]
		mov	eax, [ebp+var_38]
		mov	ecx, [eax]
		mov	edx, [edx]
		mov	esi, esp
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_55BD
		mov	eax, [ebp+var_2C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_38]
		movsx	ecx, byte ptr [eax+4]
		movsx	edx, [ebp+arg_4]
		cmp	ecx, edx
		setz	al
		mov	[ebp+var_1D], al
		jmp	short loc_55BF
; ---------------------------------------------------------------------------

loc_55BD:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+9Cj
		jmp	short loc_5555
; ---------------------------------------------------------------------------

loc_55BF:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+63j
					; icu_56::CharsetDetector::setDetectableCharset(char const *,signed char,UErrorCode &)+B7j
		cmp	[ebp+var_14], 0
		jge	short loc_55D3
		mov	eax, [ebp+arg_8]
		mov	dword ptr [eax], 1
		jmp	loc_565E
; ---------------------------------------------------------------------------

loc_55D3:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+BFj
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+10h], 0
		jnz	short loc_5646
		movsx	eax, [ebp+var_1D]
		test	eax, eax
		jnz	short loc_5646
		mov	eax, ds:_fCSRecognizers_size
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	ecx, [ebp+var_8]
		mov	[ecx+10h], eax
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+10h], 0
		jnz	short loc_560C
		mov	eax, [ebp+arg_8]
		mov	dword ptr [eax], 7
		jmp	short loc_565E
; ---------------------------------------------------------------------------

loc_560C:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+FBj
		mov	[ebp+var_44], 0
		jmp	short loc_561E
; ---------------------------------------------------------------------------

loc_5615:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+140j
		mov	eax, [ebp+var_44]
		add	eax, 1
		mov	[ebp+var_44], eax

loc_561E:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+10Fj
		mov	eax, [ebp+var_44]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_5646
		mov	eax, [ebp+var_44]
		mov	ecx, ds:_fCSRecognizers
		mov	edx, [ecx+eax*4]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]
		mov	eax, [ebp+var_44]
		mov	dl, [edx+4]
		mov	[ecx+eax], dl
		jmp	short loc_5615
; ---------------------------------------------------------------------------

loc_5646:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+D6j
					; icu_56::CharsetDetector::setDetectableCharset(char const *,signed char,UErrorCode &)+DEj ...
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+10h], 0
		jz	short loc_565E
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]
		mov	edx, [ebp+var_14]
		mov	al, [ebp+arg_4]
		mov	[ecx+edx], al

loc_565E:				; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+38j
					; icu_56::CharsetDetector::setDetectableCharset(char const *,signed char,UErrorCode &)+CAj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 108h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?setDetectableCharset@CharsetDetector@icu_56@@QAEXPBDCAAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5674h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_enumClose	proc near		; DATA XREF: .rdata:00000110o

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax+4], 0
		jz	short loc_56AA
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		push	ecx
		call	_uprv_free_56
		add	esp, 4

loc_56AA:				; CODE XREF: _enumClose+25j
		mov	eax, [ebp+arg_0]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_enumClose	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 56CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_enumCount	proc near		; DATA XREF: .rdata:00000114o

var_F0		= byte ptr -0F0h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		movsx	edx, byte ptr [ecx+4]
		test	edx, edx
		jz	short loc_5702
		mov	eax, ds:_fCSRecognizers_size
		jmp	loc_5791
; ---------------------------------------------------------------------------

loc_5702:				; CODE XREF: _enumCount+2Aj
		mov	[ebp+var_8], 0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx+8]
		mov	[ebp+var_14], edx
		cmp	[ebp+var_14], 0
		jz	short loc_5752
		mov	[ebp+var_20], 0
		jmp	short loc_572D
; ---------------------------------------------------------------------------

loc_5724:				; CODE XREF: _enumCount:loc_574Ej
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_572D:				; CODE XREF: _enumCount+56j
		mov	eax, [ebp+var_20]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_5750
		mov	eax, [ebp+var_14]
		add	eax, [ebp+var_20]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jz	short loc_574E
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_574E:				; CODE XREF: _enumCount+77j
		jmp	short loc_5724
; ---------------------------------------------------------------------------

loc_5750:				; CODE XREF: _enumCount+6Aj
		jmp	short loc_578E
; ---------------------------------------------------------------------------

loc_5752:				; CODE XREF: _enumCount+4Dj
		mov	[ebp+var_2C], 0
		jmp	short loc_5764
; ---------------------------------------------------------------------------

loc_575B:				; CODE XREF: _enumCount:loc_578Cj
		mov	eax, [ebp+var_2C]
		add	eax, 1
		mov	[ebp+var_2C], eax

loc_5764:				; CODE XREF: _enumCount+8Dj
		mov	eax, [ebp+var_2C]
		cmp	eax, ds:_fCSRecognizers_size
		jge	short loc_578E
		mov	eax, [ebp+var_2C]
		mov	ecx, ds:_fCSRecognizers
		mov	edx, [ecx+eax*4]
		movsx	eax, byte ptr [edx+4]
		test	eax, eax
		jz	short loc_578C
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_578C:				; CODE XREF: _enumCount+B5j
		jmp	short loc_575B
; ---------------------------------------------------------------------------

loc_578E:				; CODE XREF: _enumCount:loc_5750j
					; _enumCount+A1j
		mov	eax, [ebp+var_8]

loc_5791:				; CODE XREF: _enumCount+31j
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_enumCount	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5798h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_enumNext	proc near		; DATA XREF: .rdata:0000011Co

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
Str		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+Str], 0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		cmp	edx, ds:_fCSRecognizers_size
		jge	loc_5931
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		movsx	edx, byte ptr [ecx+4]
		test	edx, edx
		jz	short loc_582E
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		mov	eax, ds:_fCSRecognizers
		mov	ecx, [eax+edx*4]
		mov	edx, [ecx]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	eax, [ecx]
		mov	ecx, ds:_fCSRecognizers
		mov	eax, [ecx+eax*4]
		mov	ecx, [eax]
		mov	edx, [edx]
		mov	esi, esp
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+Str], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		add	edx, 1
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	[ecx], edx
		jmp	loc_5931
; ---------------------------------------------------------------------------

loc_582E:				; CODE XREF: _enumNext+45j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx+8]
		mov	[ebp+var_14], edx
		cmp	[ebp+var_14], 0
		jz	short loc_58B7

loc_5840:				; CODE XREF: _enumNext+11Bj
		cmp	[ebp+Str], 0
		jnz	short loc_58B5
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		cmp	edx, ds:_fCSRecognizers_size
		jge	short loc_58B5
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		mov	eax, [ebp+var_14]
		movsx	ecx, byte ptr [eax+edx]
		test	ecx, ecx
		jz	short loc_58A0
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		mov	eax, ds:_fCSRecognizers
		mov	ecx, [eax+edx*4]
		mov	edx, [ecx]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	eax, [ecx]
		mov	ecx, ds:_fCSRecognizers
		mov	eax, [ecx+eax*4]
		mov	ecx, [eax]
		mov	edx, [edx]
		mov	esi, esp
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+Str], eax

loc_58A0:				; CODE XREF: _enumNext+CFj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		add	edx, 1
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	[ecx], edx
		jmp	short loc_5840
; ---------------------------------------------------------------------------

loc_58B5:				; CODE XREF: _enumNext+ACj
					; _enumNext+BCj
		jmp	short loc_5931
; ---------------------------------------------------------------------------

loc_58B7:				; CODE XREF: _enumNext+A6j
					; _enumNext+197j
		cmp	[ebp+Str], 0
		jnz	short loc_5931
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		cmp	edx, ds:_fCSRecognizers_size
		jge	short loc_5931
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		mov	eax, ds:_fCSRecognizers
		mov	ecx, [eax+edx*4]
		movsx	edx, byte ptr [ecx+4]
		test	edx, edx
		jz	short loc_591C
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		mov	eax, ds:_fCSRecognizers
		mov	ecx, [eax+edx*4]
		mov	edx, [ecx]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	eax, [ecx]
		mov	ecx, ds:_fCSRecognizers
		mov	eax, [ecx+eax*4]
		mov	ecx, [eax]
		mov	edx, [edx]
		mov	esi, esp
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+Str], eax

loc_591C:				; CODE XREF: _enumNext+14Bj
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	edx, [ecx]
		add	edx, 1
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	[ecx], edx
		jmp	short loc_58B7
; ---------------------------------------------------------------------------

loc_5931:				; CODE XREF: _enumNext+33j
					; _enumNext+91j ...
		cmp	[ebp+arg_4], 0
		jz	short loc_5966
		cmp	[ebp+Str], 0
		jnz	short loc_5949
		mov	[ebp+var_DC], 0
		jmp	short loc_595B
; ---------------------------------------------------------------------------

loc_5949:				; CODE XREF: _enumNext+1A3j
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		mov	[ebp+var_DC], eax

loc_595B:				; CODE XREF: _enumNext+1AFj
		mov	ecx, [ebp+arg_4]
		mov	edx, [ebp+var_DC]
		mov	[ecx], edx

loc_5966:				; CODE XREF: _enumNext+19Dj
		mov	eax, [ebp+Str]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_enumNext	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5980h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_enumReset	proc near		; DATA XREF: .rdata:00000120o

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4]
		mov	dword ptr [ecx], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_enumReset	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 59B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct UEnumeration *__cdecl icu_56::CharsetDetector::getAllDetectableCharsets(enum UErrorCode *)
		public ?getAllDetectableCharsets@CharsetDetector@icu_56@@SAPAUUEnumeration@@AAW4UErrorCode@@@Z
?getAllDetectableCharsets@CharsetDetector@icu_56@@SAPAUUEnumeration@@AAW4UErrorCode@@@Z	proc near

var_CC		= byte ptr -0CCh
Dst		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		call	?setRecognizers@CharsetDetector@icu_56@@CAXAAW4UErrorCode@@@Z ;	icu_56::CharsetDetector::setRecognizers(UErrorCode &)
		add	esp, 4
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_59FA
		xor	eax, eax
		jmp	loc_5A7F
; ---------------------------------------------------------------------------

loc_59FA:				; CODE XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+3Dj
		push	1Ch
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+Dst], eax
		cmp	[ebp+Dst], 0
		jnz	short loc_5A1A
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		xor	eax, eax
		jmp	short loc_5A7F
; ---------------------------------------------------------------------------

loc_5A1A:				; CODE XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+57j
		push	1Ch		; Size
		push	offset _gCSDetEnumeration ; Src
		mov	eax, [ebp+Dst]
		push	eax		; Dst
		call	_memcpy
		add	esp, 0Ch
		push	0Ch
		call	_uprv_malloc_56
		add	esp, 4
		mov	ecx, [ebp+Dst]
		mov	[ecx+4], eax
		mov	eax, [ebp+Dst]
		cmp	dword ptr [eax+4], 0
		jnz	short loc_5A5F
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		mov	eax, [ebp+Dst]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		xor	eax, eax
		jmp	short loc_5A7F
; ---------------------------------------------------------------------------

loc_5A5F:				; CODE XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+90j
		push	0Ch		; Size
		push	0		; Val
		mov	eax, [ebp+Dst]
		mov	ecx, [eax+4]
		push	ecx		; Dst
		call	_memset
		add	esp, 0Ch
		mov	eax, [ebp+Dst]
		mov	ecx, [eax+4]
		mov	byte ptr [ecx+4], 1
		mov	eax, [ebp+Dst]

loc_5A7F:				; CODE XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+41j
					; icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+64j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getAllDetectableCharsets@CharsetDetector@icu_56@@SAPAUUEnumeration@@AAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5A94h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct UEnumeration *__thiscall icu_56::CharsetDetector::getDetectableCharsets(icu_56::CharsetDetector *this,	enum UErrorCode	*)
		public ?getDetectableCharsets@CharsetDetector@icu_56@@QBEPAUUEnumeration@@AAW4UErrorCode@@@Z
?getDetectableCharsets@CharsetDetector@icu_56@@QBEPAUUEnumeration@@AAW4UErrorCode@@@Z proc near

var_D8		= byte ptr -0D8h
Dst		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_5AD3
		xor	eax, eax
		jmp	loc_5B67
; ---------------------------------------------------------------------------

loc_5AD3:				; CODE XREF: icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+36j
		push	1Ch
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+Dst], eax
		cmp	[ebp+Dst], 0
		jnz	short loc_5AF3
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		xor	eax, eax
		jmp	short loc_5B67
; ---------------------------------------------------------------------------

loc_5AF3:				; CODE XREF: icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+50j
		push	1Ch		; Size
		push	offset _gCSDetEnumeration ; Src
		mov	eax, [ebp+Dst]
		push	eax		; Dst
		call	_memcpy
		add	esp, 0Ch
		push	0Ch
		call	_uprv_malloc_56
		add	esp, 4
		mov	ecx, [ebp+Dst]
		mov	[ecx+4], eax
		mov	eax, [ebp+Dst]
		cmp	dword ptr [eax+4], 0
		jnz	short loc_5B38
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		mov	eax, [ebp+Dst]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		xor	eax, eax
		jmp	short loc_5B67
; ---------------------------------------------------------------------------

loc_5B38:				; CODE XREF: icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+89j
		push	0Ch		; Size
		push	0		; Val
		mov	eax, [ebp+Dst]
		mov	ecx, [eax+4]
		push	ecx		; Dst
		call	_memset
		add	esp, 0Ch
		mov	eax, [ebp+Dst]
		mov	ecx, [eax+4]
		mov	byte ptr [ecx+4], 0
		mov	eax, [ebp+Dst]
		mov	ecx, [eax+4]
		mov	edx, [ebp+var_8]
		mov	eax, [edx+10h]
		mov	[ecx+8], eax
		mov	eax, [ebp+Dst]

loc_5B67:				; CODE XREF: icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+3Aj
					; icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+5Dj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getDetectableCharsets@CharsetDetector@icu_56@@QBEPAUUEnumeration@@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _uenum_unextDefault_56:near ; DATA XREF: .rdata:00000118o
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::CharsetDetector::setRecognizers(UErrorCode	&)+3Fp
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+5Ap ...
; void __cdecl icu_56::umtx_initImplPostInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ap
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ar
; signed __int8	__cdecl	icu_56::umtx_initImplPreInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fp
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fr
; LONG __stdcall InterlockedCompareExchange(volatile LONG *Destination,	LONG Exchange, LONG Comperand)
		extrn __imp__InterlockedCompareExchange@12:near
					; CODE XREF: icu_56::umtx_loadAcquire(long volatile &)+28p
					; DATA XREF: icu_56::umtx_loadAcquire(long volatile &)+28r
		extrn _uprv_malloc_56:near ; CODE XREF:	_initRecognizers+1237p
					; icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+120p ...
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: _initRecognizers+31p
					; _initRecognizers+54p	...
		extrn _ucln_i18n_registerCleanup_56:near ; CODE	XREF: _initRecognizers+25p
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _initRecognizers+12C6p
					; icu_56::CharsetDetector::getDetectableCount(void)+40p ...
		extrn _uprv_free_56:near ; CODE	XREF: _csdet_cleanup+A6p
					; icu_56::CharsetDetector::~CharsetDetector(void)+B3p ...
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::CSRecognizerInfo::`scalar deleting	destructor'(uint)+39p
					; icu_56::CharsetRecog_UTF8::`scalar deleting destructor'(uint)+39p ...
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::CharsetRecog_UTF8 `RTTI Type	Descriptor'o
					; .data:icu_56::CharsetRecognizer `RTTI	Type Descriptor'o ...
; public: virtual char const * __thiscall icu_56::CharsetRecog_UTF8::getName(void)const
		extrn ?getName@CharsetRecog_UTF8@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_UTF8::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecognizer::getLanguage(void)const
		extrn ?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:000018C8o
					; .rdata:00001A70o ...
; public: virtual signed char __thiscall icu_56::CharsetRecog_UTF8::match(class	icu_56::InputText *, class icu_56::CharsetMatch	*)const
		extrn ?match@CharsetRecog_UTF8@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000018CCo
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF8::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecog_UTF8@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF8::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecog_UTF8@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000018D0o
; public: virtual char const * __thiscall icu_56::CharsetRecog_UTF_16_BE::getName(void)const
		extrn ?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_UTF_16_BE::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_UTF_16_BE::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00001A74o
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_16_BE::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_16_BE::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:00001A78o
; public: virtual char const * __thiscall icu_56::CharsetRecog_UTF_16_LE::getName(void)const
		extrn ?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_UTF_16_LE::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_UTF_16_LE::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00001BBCo
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_16_LE::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_16_LE::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:00001BC0o
; public: virtual char const * __thiscall icu_56::CharsetRecog_UTF_32_BE::getName(void)const
		extrn ?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_UTF_32_BE::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_UTF_32::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00001C9Co
					; .rdata:00001DF0o ...
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32_BE::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32_BE::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:00001CA0o
; protected: virtual int __thiscall icu_56::CharsetRecog_UTF_32_BE::getChar(unsigned char const	*, int)const
		extrn ?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z:near
					; DATA XREF: .rdata:00001CA4o
; public: virtual char const * __thiscall icu_56::CharsetRecog_UTF_32_LE::getName(void)const
		extrn ?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_UTF_32_LE::`vftable'o
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32_LE::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32_LE::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:00001DF4o
; protected: virtual int __thiscall icu_56::CharsetRecog_UTF_32_LE::getChar(unsigned char const	*, int)const
		extrn ?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z:near
					; DATA XREF: .rdata:00001DF8o
; _DWORD __thiscall icu_56::CharsetRecog_sbcs::CharsetRecog_sbcs(icu_56::CharsetRecog_sbcs *__hidden this)
		extrn ??0CharsetRecog_sbcs@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_1::CharsetRecog_8859_1(void)+26p
					; icu_56::CharsetRecog_8859_2::CharsetRecog_8859_2(void)+26p ...
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_1::getName(void)const
		extrn ?getName@CharsetRecog_8859_1@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_1::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_1::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_1@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00001ED8o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_1::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_1@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_1::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_1@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00001EDCo
; public: virtual int __thiscall icu_56::CharsetRecog_sbcs::match_sbcs(class icu_56::InputText *, int const * const, unsigned char const * const)const
		extrn ?match_sbcs@CharsetRecog_sbcs@icu_56@@UBEHPAVInputText@2@QBHQBE@Z:near
					; DATA XREF: .rdata:00001EE0o
					; .rdata:00002028o ...
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_2::getName(void)const
		extrn ?getName@CharsetRecog_8859_2@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_2::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_2::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_2@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002020o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_2::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_2@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_2::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_2@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002024o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_5::getName(void)const
		extrn ?getName@CharsetRecog_8859_5@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_5_ru::`vftable'o
					; .rdata:const icu_56::CharsetRecog_8859_5::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_5_ru::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_8859_5_ru@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002100o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_5_ru::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_5_ru@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002104o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_5_ru::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_5_ru::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_5_ru@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:00002108o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_6::getName(void)const
		extrn ?getName@CharsetRecog_8859_6@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_6_ar::`vftable'o
					; .rdata:const icu_56::CharsetRecog_8859_6::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_6_ar::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_8859_6_ar@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002254o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_6_ar::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_6_ar@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002258o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_6_ar::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_6_ar::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_6_ar@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:0000225Co
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_7::getName(void)const
		extrn ?getName@CharsetRecog_8859_7@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_7_el::`vftable'o
					; .rdata:const icu_56::CharsetRecog_8859_7::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_7_el::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_8859_7_el@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:000023A8o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_7_el::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_7_el@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000023ACo
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_7_el::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_7_el::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_7_el@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:000023B0o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_8_I_he::getName(void)const
		extrn ?getName@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_8_I_he::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_8_I_he::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_8859_8_I_he@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:000024FCo
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_8_I_he::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_8_I_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002500o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8_I_he::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8_I_he::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_8_I_he@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002504o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_8::getName(void)const
		extrn ?getName@CharsetRecog_8859_8@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_8_he::`vftable'o
					; .rdata:const icu_56::CharsetRecog_8859_8::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_8_he::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_8859_8_he@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002654o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_8_he::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_8_he@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002658o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8_he::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8_he::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_8_he@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:0000265Co
; public: virtual char const * __thiscall icu_56::CharsetRecog_windows_1251::getName(void)const
		extrn ?getName@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_windows_1251::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_windows_1251::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_windows_1251@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:0000273Co
; public: virtual signed char __thiscall icu_56::CharsetRecog_windows_1251::match(class	icu_56::InputText *, class icu_56::CharsetMatch	*)const
		extrn ?match@CharsetRecog_windows_1251@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002740o
; public: virtual void * __thiscall icu_56::CharsetRecog_windows_1251::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecog_windows_1251@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_windows_1251::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecog_windows_1251@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002744o
; public: virtual char const * __thiscall icu_56::CharsetRecog_windows_1256::getName(void)const
		extrn ?getName@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_windows_1256::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_windows_1256::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_windows_1256@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002824o
; public: virtual signed char __thiscall icu_56::CharsetRecog_windows_1256::match(class	icu_56::InputText *, class icu_56::CharsetMatch	*)const
		extrn ?match@CharsetRecog_windows_1256@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002828o
; public: virtual void * __thiscall icu_56::CharsetRecog_windows_1256::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecog_windows_1256@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_windows_1256::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecog_windows_1256@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:0000282Co
; public: virtual char const * __thiscall icu_56::CharsetRecog_KOI8_R::getName(void)const
		extrn ?getName@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_KOI8_R::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_KOI8_R::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_KOI8_R@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:0000290Co
; public: virtual signed char __thiscall icu_56::CharsetRecog_KOI8_R::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_KOI8_R@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002910o
; public: virtual void * __thiscall icu_56::CharsetRecog_KOI8_R::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_KOI8_R::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_KOI8_R@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002914o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_9::getName(void)const
		extrn ?getName@CharsetRecog_8859_9@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_8859_9_tr::`vftable'o
					; .rdata:const icu_56::CharsetRecog_8859_9::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_8859_9_tr::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_8859_9_tr@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:000029F0o
; public: virtual signed char __thiscall icu_56::CharsetRecog_8859_9_tr::match(class icu_56::InputText *, class	icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_8859_9_tr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000029F4o
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_9_tr::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_9_tr::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_9_tr@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:000029F8o
; public: virtual char const * __thiscall icu_56::CharsetRecog_sjis::getName(void)const
		extrn ?getName@CharsetRecog_sjis@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_sjis::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_sjis::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_sjis@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002B44o
; public: virtual signed char __thiscall icu_56::CharsetRecog_sjis::match(class	icu_56::InputText *, class icu_56::CharsetMatch	*)const
		extrn ?match@CharsetRecog_sjis@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002B48o
; public: virtual void * __thiscall icu_56::CharsetRecog_sjis::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecog_sjis@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_sjis::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecog_sjis@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002B4Co
; public: virtual signed char __thiscall icu_56::CharsetRecog_sjis::nextChar(class icu_56::IteratedChar	*, class icu_56::InputText *)const
		extrn ?nextChar@CharsetRecog_sjis@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near
					; DATA XREF: .rdata:00002B50o
; public: virtual char const * __thiscall icu_56::CharsetRecog_gb_18030::getName(void)const
		extrn ?getName@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_gb_18030::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_gb_18030::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_gb_18030@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002C88o
; public: virtual signed char __thiscall icu_56::CharsetRecog_gb_18030::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_gb_18030@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002C8Co
; public: virtual void * __thiscall icu_56::CharsetRecog_gb_18030::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_gb_18030@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_gb_18030::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_gb_18030@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002C90o
; public: virtual signed char __thiscall icu_56::CharsetRecog_gb_18030::nextChar(class icu_56::IteratedChar *, class icu_56::InputText *)const
		extrn ?nextChar@CharsetRecog_gb_18030@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near
					; DATA XREF: .rdata:00002C94o
; public: virtual char const * __thiscall icu_56::CharsetRecog_euc_jp::getName(void)const
		extrn ?getName@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_euc_jp::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_euc_jp::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_euc_jp@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002D6Co
; public: virtual signed char __thiscall icu_56::CharsetRecog_euc_jp::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_euc_jp@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002D70o
; public: virtual void * __thiscall icu_56::CharsetRecog_euc_jp::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_euc_jp@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_euc_jp::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_euc_jp@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002D74o
; public: virtual signed char __thiscall icu_56::CharsetRecog_euc::nextChar(class icu_56::IteratedChar *, class	icu_56::InputText *)const
		extrn ?nextChar@CharsetRecog_euc@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near
					; DATA XREF: .rdata:00002D78o
					; .rdata:00002EC8o ...
; public: virtual char const * __thiscall icu_56::CharsetRecog_euc_kr::getName(void)const
		extrn ?getName@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_euc_kr::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_euc_kr::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_euc_kr@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002EBCo
; public: virtual signed char __thiscall icu_56::CharsetRecog_euc_kr::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_euc_kr@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002EC0o
; public: virtual void * __thiscall icu_56::CharsetRecog_euc_kr::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_euc_kr@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_euc_kr::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_euc_kr@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002EC4o
; public: virtual char const * __thiscall icu_56::CharsetRecog_big5::getName(void)const
		extrn ?getName@CharsetRecog_big5@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_big5::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_big5::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_big5@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00002FA4o
; public: virtual signed char __thiscall icu_56::CharsetRecog_big5::match(class	icu_56::InputText *, class icu_56::CharsetMatch	*)const
		extrn ?match@CharsetRecog_big5@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00002FA8o
; public: virtual void * __thiscall icu_56::CharsetRecog_big5::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecog_big5@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_big5::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecog_big5@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002FACo
; public: virtual signed char __thiscall icu_56::CharsetRecog_big5::nextChar(class icu_56::IteratedChar	*, class icu_56::InputText *)const
		extrn ?nextChar@CharsetRecog_big5@icu_56@@UBECPAVIteratedChar@2@PAVInputText@2@@Z:near
					; DATA XREF: .rdata:00002FB0o
; public: virtual char const * __thiscall icu_56::CharsetRecog_2022JP::getName(void)const
		extrn ?getName@CharsetRecog_2022JP@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_2022JP::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_2022JP::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_2022JP@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00003088o
; public: virtual void * __thiscall icu_56::CharsetRecog_2022JP::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_2022JP@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_2022JP::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_2022JP@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:0000308Co
; public: virtual char const * __thiscall icu_56::CharsetRecog_2022KR::getName(void)const
		extrn ?getName@CharsetRecog_2022KR@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_2022KR::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_2022KR::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_2022KR@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000031CCo
; public: virtual void * __thiscall icu_56::CharsetRecog_2022KR::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_2022KR@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_2022KR::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_2022KR@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000031D0o
; public: virtual char const * __thiscall icu_56::CharsetRecog_2022CN::getName(void)const
		extrn ?getName@CharsetRecog_2022CN@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_2022CN::`vftable'o
; public: virtual signed char __thiscall icu_56::CharsetRecog_2022CN::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_2022CN@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000032ACo
; public: virtual void * __thiscall icu_56::CharsetRecog_2022CN::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_2022CN@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_2022CN::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_2022CN@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000032B0o
; public: virtual char const * __thiscall icu_56::CharsetRecog_IBM424_he_rtl::getName(void)const
		extrn ?getName@CharsetRecog_IBM424_he_rtl@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_IBM424_he_rtl::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_IBM424_he::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_IBM424_he@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:00003388o
					; .rdata:000034E0o ...
; public: virtual signed char __thiscall icu_56::CharsetRecog_IBM424_he_rtl::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_IBM424_he_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:0000338Co
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM424_he_rtl::`scalar	deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM424_he_rtl::`vector	deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_IBM424_he_rtl@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003390o
; private: virtual char	const *	__thiscall icu_56::CharsetRecog_IBM424_he_ltr::getName(void)const
		extrn ?getName@CharsetRecog_IBM424_he_ltr@icu_56@@EBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_IBM424_he_ltr::`vftable'o
; private: virtual signed char __thiscall icu_56::CharsetRecog_IBM424_he_ltr::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_IBM424_he_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000034E4o
; private: virtual void	* __thiscall icu_56::CharsetRecog_IBM424_he_ltr::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z_0:near
; private: virtual void	* __thiscall icu_56::CharsetRecog_IBM424_he_ltr::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_IBM424_he_ltr@icu_56@@EAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000034E8o
; public: virtual char const * __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::getName(void)const
		extrn ?getName@CharsetRecog_IBM420_ar_rtl@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_IBM420_ar_rtl::`vftable'o
; public: virtual char const * __thiscall icu_56::CharsetRecog_IBM420_ar::getLanguage(void)const
		extrn ?getLanguage@CharsetRecog_IBM420_ar@icu_56@@UBEPBDXZ:near
					; DATA XREF: .rdata:000035CCo
					; .rdata:00003724o ...
; public: virtual signed char __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_IBM420_ar_rtl@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:000035D0o
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::`scalar	deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::`vector	deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_IBM420_ar_rtl@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000035D4o
; public: virtual int __thiscall icu_56::CharsetRecog_IBM420_ar::match_sbcs(class icu_56::InputText *, int const * const, unsigned char	const *	const)const
		extrn ?match_sbcs@CharsetRecog_IBM420_ar@icu_56@@UBEHPAVInputText@2@QBHQBE@Z:near
					; DATA XREF: .rdata:000035D8o
					; .rdata:00003730o ...
; private: virtual char	const *	__thiscall icu_56::CharsetRecog_IBM420_ar_ltr::getName(void)const
		extrn ?getName@CharsetRecog_IBM420_ar_ltr@icu_56@@EBEPBDXZ:near
					; DATA XREF: .rdata:const icu_56::CharsetRecog_IBM420_ar_ltr::`vftable'o
; private: virtual signed char __thiscall icu_56::CharsetRecog_IBM420_ar_ltr::match(class icu_56::InputText *, class icu_56::CharsetMatch *)const
		extrn ?match@CharsetRecog_IBM420_ar_ltr@icu_56@@EBECPAVInputText@2@PAVCharsetMatch@2@@Z:near
					; DATA XREF: .rdata:00003728o
; private: virtual void	* __thiscall icu_56::CharsetRecog_IBM420_ar_ltr::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z_0:near
; private: virtual void	* __thiscall icu_56::CharsetRecog_IBM420_ar_ltr::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_IBM420_ar_ltr@icu_56@@EAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:0000372Co
; _DWORD __thiscall icu_56::CharsetRecog_UTF8::~CharsetRecog_UTF8(icu_56::CharsetRecog_UTF8 *__hidden this)
		extrn ??1CharsetRecog_UTF8@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_UTF8::`scalar	deleting destructor'(uint)+26p
		extrn __purecall:near	; DATA XREF: .rdata:const icu_56::CharsetRecognizer::`vftable'o
					; .rdata:00003864o ...
; public: virtual void * __thiscall icu_56::CharsetRecognizer::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecognizer@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecognizer::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecognizer@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003868o
; _DWORD __thiscall icu_56::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE(icu_56::CharsetRecog_UTF_16_BE *__hidden this)
		extrn ??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_UTF_16_BE::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_Unicode::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_Unicode::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_Unicode@icu_56@@UAEPAXI@Z:near ;	weak
					; DATA XREF: .rdata:00003940o
; _DWORD __thiscall icu_56::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE(icu_56::CharsetRecog_UTF_16_LE *__hidden this)
		extrn ??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_UTF_16_LE::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE(icu_56::CharsetRecog_UTF_32_BE *__hidden this)
		extrn ??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_UTF_32_BE::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_UTF_32::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_UTF_32@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003A7Co
; _DWORD __thiscall icu_56::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE(icu_56::CharsetRecog_UTF_32_LE *__hidden this)
		extrn ??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_UTF_32_LE::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_1::~CharsetRecog_8859_1(icu_56::CharsetRecog_8859_1 *__hidden this)
		extrn ??1CharsetRecog_8859_1@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_1::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_2::~CharsetRecog_8859_2(icu_56::CharsetRecog_8859_2 *__hidden this)
		extrn ??1CharsetRecog_8859_2@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_2::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_5_ru::~CharsetRecog_8859_5_ru(icu_56::CharsetRecog_8859_5_ru *__hidden this)
		extrn ??1CharsetRecog_8859_5_ru@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_5_ru::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_5::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_5@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_5::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_5@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003C84o
; _DWORD __thiscall icu_56::CharsetRecog_8859_6_ar::~CharsetRecog_8859_6_ar(icu_56::CharsetRecog_8859_6_ar *__hidden this)
		extrn ??1CharsetRecog_8859_6_ar@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_6_ar::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_6::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_6@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_6::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_6@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003D60o
; _DWORD __thiscall icu_56::CharsetRecog_8859_7_el::~CharsetRecog_8859_7_el(icu_56::CharsetRecog_8859_7_el *__hidden this)
		extrn ??1CharsetRecog_8859_7_el@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_7_el::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_7::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_7@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_7::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_7@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003E3Co
; _DWORD __thiscall icu_56::CharsetRecog_8859_8_I_he::~CharsetRecog_8859_8_I_he(icu_56::CharsetRecog_8859_8_I_he *__hidden this)
		extrn ??1CharsetRecog_8859_8_I_he@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_8_I_he::`scalar deleting	destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_8@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_8::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_8@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00003F18o
; _DWORD __thiscall icu_56::CharsetRecog_8859_8_he::~CharsetRecog_8859_8_he(icu_56::CharsetRecog_8859_8_he *__hidden this)
		extrn ??1CharsetRecog_8859_8_he@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_8_he::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_windows_1251::~CharsetRecog_windows_1251(icu_56::CharsetRecog_windows_1251 *__hidden this)
		extrn ??1CharsetRecog_windows_1251@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_windows_1251::`scalar	deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_windows_1256::~CharsetRecog_windows_1256(icu_56::CharsetRecog_windows_1256 *__hidden this)
		extrn ??1CharsetRecog_windows_1256@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_windows_1256::`scalar	deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_KOI8_R::~CharsetRecog_KOI8_R(icu_56::CharsetRecog_KOI8_R *__hidden this)
		extrn ??1CharsetRecog_KOI8_R@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_KOI8_R::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_9_tr::~CharsetRecog_8859_9_tr(icu_56::CharsetRecog_8859_9_tr *__hidden this)
		extrn ??1CharsetRecog_8859_9_tr@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_9_tr::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_9::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_8859_9@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_8859_9::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_8859_9@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00004184o
; _DWORD __thiscall icu_56::CharsetRecog_sjis::~CharsetRecog_sjis(icu_56::CharsetRecog_sjis *__hidden this)
		extrn ??1CharsetRecog_sjis@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_sjis::`scalar	deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_mbcs::`scalar deleting	destructor'(unsigned int)
		extrn ??_GCharsetRecog_mbcs@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_mbcs::`vector deleting	destructor'(unsigned int)
		extrn ??_ECharsetRecog_mbcs@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00004260o
; _DWORD __thiscall icu_56::CharsetRecog_gb_18030::~CharsetRecog_gb_18030(icu_56::CharsetRecog_gb_18030	*__hidden this)
		extrn ??1CharsetRecog_gb_18030@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_gb_18030::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_euc_jp::~CharsetRecog_euc_jp(icu_56::CharsetRecog_euc_jp *__hidden this)
		extrn ??1CharsetRecog_euc_jp@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_euc_jp::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_euc::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_euc@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_euc::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_euc@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000043A0o
; _DWORD __thiscall icu_56::CharsetRecog_euc_kr::~CharsetRecog_euc_kr(icu_56::CharsetRecog_euc_kr *__hidden this)
		extrn ??1CharsetRecog_euc_kr@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_euc_kr::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_big5::~CharsetRecog_big5(icu_56::CharsetRecog_big5 *__hidden this)
		extrn ??1CharsetRecog_big5@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_big5::`scalar	deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_2022JP::~CharsetRecog_2022JP(icu_56::CharsetRecog_2022JP *__hidden this)
		extrn ??1CharsetRecog_2022JP@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_2022JP::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_2022KR::~CharsetRecog_2022KR(icu_56::CharsetRecog_2022KR *__hidden this)
		extrn ??1CharsetRecog_2022KR@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_2022KR::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_2022CN::~CharsetRecog_2022CN(icu_56::CharsetRecog_2022CN *__hidden this)
		extrn ??1CharsetRecog_2022CN@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_2022CN::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_IBM424_he_rtl::~CharsetRecog_IBM424_he_rtl(icu_56::CharsetRecog_IBM424_he_rtl *__hidden this)
		extrn ??1CharsetRecog_IBM424_he_rtl@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_IBM424_he_rtl::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM424_he::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM424_he::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_IBM424_he@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:000046E4o
; _DWORD __thiscall icu_56::CharsetRecog_IBM424_he_ltr::~CharsetRecog_IBM424_he_ltr(icu_56::CharsetRecog_IBM424_he_ltr *__hidden this)
		extrn ??1CharsetRecog_IBM424_he_ltr@icu_56@@EAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_IBM424_he_ltr::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_IBM420_ar_rtl::~CharsetRecog_IBM420_ar_rtl(icu_56::CharsetRecog_IBM420_ar_rtl *__hidden this)
		extrn ??1CharsetRecog_IBM420_ar_rtl@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_IBM420_ar_rtl::`scalar deleting destructor'(uint)+26p
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM420_ar::`scalar deleting destructor'(unsigned int)
		extrn ??_GCharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CharsetRecog_IBM420_ar::`vector deleting destructor'(unsigned int)
		extrn ??_ECharsetRecog_IBM420_ar@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:00004824o
; _DWORD __thiscall icu_56::CharsetRecog_IBM420_ar_ltr::~CharsetRecog_IBM420_ar_ltr(icu_56::CharsetRecog_IBM420_ar_ltr *__hidden this)
		extrn ??1CharsetRecog_IBM420_ar_ltr@icu_56@@EAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_IBM420_ar_ltr::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecognizer::~CharsetRecognizer(icu_56::CharsetRecognizer *__hidden this)
		extrn ??1CharsetRecognizer@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecognizer::`scalar	deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode(icu_56::CharsetRecog_Unicode *__hidden this)
		extrn ??1CharsetRecog_Unicode@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_Unicode::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32(icu_56::CharsetRecog_UTF_32 *__hidden this)
		extrn ??1CharsetRecog_UTF_32@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_UTF_32::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_5::~CharsetRecog_8859_5(icu_56::CharsetRecog_8859_5 *__hidden this)
		extrn ??1CharsetRecog_8859_5@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_5::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_6::~CharsetRecog_8859_6(icu_56::CharsetRecog_8859_6 *__hidden this)
		extrn ??1CharsetRecog_8859_6@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_6::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_7::~CharsetRecog_8859_7(icu_56::CharsetRecog_8859_7 *__hidden this)
		extrn ??1CharsetRecog_8859_7@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_7::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_8::~CharsetRecog_8859_8(icu_56::CharsetRecog_8859_8 *__hidden this)
		extrn ??1CharsetRecog_8859_8@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_8::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_8859_9::~CharsetRecog_8859_9(icu_56::CharsetRecog_8859_9 *__hidden this)
		extrn ??1CharsetRecog_8859_9@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_8859_9::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_mbcs::~CharsetRecog_mbcs(icu_56::CharsetRecog_mbcs *__hidden this)
		extrn ??1CharsetRecog_mbcs@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_mbcs::`scalar	deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_euc::~CharsetRecog_euc(icu_56::CharsetRecog_euc *__hidden this)
		extrn ??1CharsetRecog_euc@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_euc::`scalar deleting	destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_IBM424_he::~CharsetRecog_IBM424_he(icu_56::CharsetRecog_IBM424_he *__hidden this)
		extrn ??1CharsetRecog_IBM424_he@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_IBM424_he::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetRecog_IBM420_ar::~CharsetRecog_IBM420_ar(icu_56::CharsetRecog_IBM420_ar *__hidden this)
		extrn ??1CharsetRecog_IBM420_ar@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::CharsetRecog_IBM420_ar::`scalar deleting destructor'(uint)+26p
; _DWORD __thiscall icu_56::CharsetMatch::CharsetMatch(icu_56::CharsetMatch *__hidden this)
		extrn ??0CharsetMatch@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+196p
; _DWORD __thiscall icu_56::InputText::InputText(icu_56::InputText *__hidden this, enum	UErrorCode *)
		extrn ??0InputText@icu_56@@QAE@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+76p
		extrn ___security_cookie:near
					; DATA XREF: icu_56::CharsetDetector::CharsetDetector(UErrorCode &)+2Er
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z+19j
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$??0CharsetDetector@icu_56@@QAE@AAW4UErrorCode@@@Z+Fp
; _DWORD __thiscall icu_56::InputText::~InputText(icu_56::InputText *__hidden this)
		extrn ??1InputText@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::InputText::`scalar	deleting destructor'(uint)+26p
; void __thiscall icu_56::InputText::setText(icu_56::InputText *__hidden this, const char *, int)
		extrn ?setText@InputText@icu_56@@QAEXPBDH@Z:near
					; CODE XREF: icu_56::CharsetDetector::setText(char const *,int)+30p
; void __thiscall icu_56::InputText::setDeclaredEncoding(icu_56::InputText *__hidden this, const char *, int)
		extrn ?setDeclaredEncoding@InputText@icu_56@@QAEXPBDH@Z:near
					; CODE XREF: icu_56::CharsetDetector::setDeclaredEncoding(char const *,int)+30p
		extrn _uprv_sortArray_56:near
					; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+10Cp
; void __thiscall icu_56::InputText::MungeInput(icu_56::InputText *__hidden this, signed __int8)
		extrn ?MungeInput@InputText@icu_56@@QAEXC@Z:near
					; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+65p
; signed __int8	__thiscall icu_56::InputText::isSet(icu_56::InputText *__hidden	this)
		extrn ?isSet@InputText@icu_56@@QBECXZ:near
					; CODE XREF: icu_56::CharsetDetector::detectAll(int &,UErrorCode &)+28p
; int __thiscall icu_56::CharsetMatch::getConfidence(icu_56::CharsetMatch *__hidden this)
		extrn ?getConfidence@CharsetMatch@icu_56@@QBEHXZ:near
					; CODE XREF: _charsetMatchComparator+2Fp
					; _charsetMatchComparator+3Bp
; int __cdecl strcmp(const char	*Str1, const char *Str2)
		extrn _strcmp:near	; CODE XREF: icu_56::CharsetDetector::setDetectableCharset(char	const *,signed char,UErrorCode &)+92p
; size_t __cdecl strlen(const char *Str)
		extrn _strlen:near	; CODE XREF: _enumNext+1B5p
; void *__cdecl	memset(void *Dst, int Val, size_t Size)
		extrn _memset:near	; CODE XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+B6p
					; icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+AFp
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: icu_56::CharsetDetector::getAllDetectableCharsets(UErrorCode &)+71p
					; icu_56::CharsetDetector::getDetectableCharsets(UErrorCode &)+6Ap


		end

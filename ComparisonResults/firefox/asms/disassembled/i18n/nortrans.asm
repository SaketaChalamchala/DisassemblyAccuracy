;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A51F81DBF71966267BA33EAC8868175D
; Input	CRC32 :	C611A994

; File Name   :	D:\compspace\objfiles\firefox\i18n\nortrans.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1FB+5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_7FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset dword_1000
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd 2000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1C0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset __unwindfunclet$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z$0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	byte public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
; char `public:	static void * __cdecl icu_56::NormalizationTransliterator::getStaticClassID(void)'::`2'::classID
?classID@?1??getStaticClassID@NormalizationTransliterator@icu_56@@SAPAXXZ@4DA db ?
					; DATA XREF: icu_56::NormalizationTransliterator::getStaticClassID(void)+1Eo
		align 4
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp

loc_FF:					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 134h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 138h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 170h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Transliterator::getMaximumContextLength(icu_56::Transliterator	*__hidden this)
		public ?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+48h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Transliterator::setID(icu_56::Transliterator *this, const struct icu_56::UnicodeString *)
		public ?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx

loc_1C0:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 4
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0		; wchar_t
		mov	ecx, [ebp+var_8]
		add	ecx, 4		; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z ; icu_56::UnicodeString::append(wchar_t)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		add	ecx, 4		; this
		mov	esi, esp

loc_1FB:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		sub	eax, 1
		mov	esi, esp
		push	eax		; int
		mov	ecx, [ebp+var_8]
		add	ecx, 4		; this
		call	dword ptr ds:__imp_?truncate@UnicodeString@icu_56@@QAECH@Z ; icu_56::UnicodeString::truncate(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 238h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: static union icu_56::Transliterator::Token __cdecl icu_56::Transliterator::integerToken(int)
		public ?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN5		dd 1			; DATA XREF: icu_56::Transliterator::integerToken(int)+2Bo
		dd offset $LN4
$LN4		dd 0FFFFFFF8h, 4	; DATA XREF: .text:0000027Co
		dd offset $LN3
$LN3		db 74h,	0		; DATA XREF: .text:00000288o
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 290h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: static union icu_56::Transliterator::Token __cdecl icu_56::Transliterator::pointerToken(void *)
		public ?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z proc near
					; CODE XREF: icu_56::cstrToken(char const *)+22p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z endp

; ---------------------------------------------------------------------------
		align 10h
$LN5_0		dd 1			; DATA XREF: icu_56::Transliterator::pointerToken(void *)+2Bo
		dd offset $LN4_0
$LN4_0		dd 0FFFFFFF8h, 4	; DATA XREF: .text:000002D4o
		dd offset $LN3_0
$LN3_0		db 74h,	0		; DATA XREF: .text:000002E0o
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	icu_56::NormalizationTransliterator::getStaticClassID()
		public ?getStaticClassID@NormalizationTransliterator@icu_56@@SAPAXXZ
?getStaticClassID@NormalizationTransliterator@icu_56@@SAPAXXZ proc near
					; CODE XREF: icu_56::NormalizationTransliterator::getDynamicClassID(void)+23p

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, offset ?classID@?1??getStaticClassID@NormalizationTransliterator@icu_56@@SAPAXXZ@4DA ; char `icu_56::NormalizationTransliterator::getStaticClassID(void)'::`2'::classID
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getStaticClassID@NormalizationTransliterator@icu_56@@SAPAXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 314h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__thiscall icu_56::NormalizationTransliterator::getDynamicClassID(icu_56::NormalizationTransliterator *__hidden	this)
		public ?getDynamicClassID@NormalizationTransliterator@icu_56@@UBEPAXXZ
?getDynamicClassID@NormalizationTransliterator@icu_56@@UBEPAXXZ	proc near
					; DATA XREF: .rdata:00000EF4o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	?getStaticClassID@NormalizationTransliterator@icu_56@@SAPAXXZ ;	icu_56::NormalizationTransliterator::getStaticClassID(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getDynamicClassID@NormalizationTransliterator@icu_56@@UBEPAXXZ	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 350h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::NormalizationTransliterator::registerIDs()
		public ?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ
?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ proc near

var_518		= dword	ptr -518h
var_514		= dword	ptr -514h
var_510		= dword	ptr -510h
var_50C		= dword	ptr -50Ch
var_504		= byte ptr -504h
var_4BC		= byte ptr -4BCh
var_474		= byte ptr -474h
var_42C		= byte ptr -42Ch
var_3E4		= byte ptr -3E4h
var_39C		= byte ptr -39Ch
var_354		= byte ptr -354h
var_30C		= byte ptr -30Ch
var_2C4		= byte ptr -2C4h
var_27C		= byte ptr -27Ch
var_234		= byte ptr -234h
var_1EC		= byte ptr -1ECh
var_1A4		= byte ptr -1A4h
var_15C		= byte ptr -15Ch
var_114		= byte ptr -114h
var_108		= dword	ptr -108h
var_FC		= byte ptr -0FCh
var_F0		= dword	ptr -0F0h
var_E4		= dword	ptr -0E4h
var_D8		= dword	ptr -0D8h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 50Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_518]
		mov	ecx, 143h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		push	offset ??_C@_05EDCCOKHG@nfc?$AA?$AA?$AA@ ; "nfc"
		call	?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z ; icu_56::cstrToken(char const *)
		add	esp, 4
		mov	dword ptr [ebp+var_114], eax
		mov	eax, dword ptr [ebp+var_114]
		push	eax		; signed __int8
		push	offset ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z ; struct icu_56::UnicodeString *
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_1BA@LLODPEBA@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAC?$AA?$AA@	; "Any-NFC"
		push	1		; signed __int8
		lea	ecx, [ebp+var_504] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	ecx, [ebp+var_50C]
		mov	[ebp+var_510], ecx
		mov	[ebp+var_4], 0
		mov	edx, [ebp+var_510]
		push	edx
		call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory(icu_56::UnicodeString const	&,icu_56::Transliterator * (*)(icu_56::UnicodeString const &,icu_56::Transliterator::Token),icu_56::Transliterator::Token)
		add	esp, 0Ch
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp

loc_3FE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		lea	ecx, [ebp+var_504] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset ??_C@_06KAMGOFMP@nfkc?$AA?$AA?$AA@ ; "nfkc"
		call	?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z ; icu_56::cstrToken(char const *)
		add	esp, 4
		mov	[ebp+var_108], eax
		mov	eax, [ebp+var_108]
		push	eax		; struct icu_56::UnicodeString *
		push	offset ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z ; signed __int8
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_1BC@JFOAOKAJ@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAK?$AAC?$AA?$AA@ ; "Any-NFKC"
		push	1		; signed __int8
		lea	ecx, [ebp+var_4BC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	ecx, [ebp+var_50C]
		mov	[ebp+var_510], ecx
		mov	[ebp+var_4], 1
		mov	edx, [ebp+var_510]
		push	edx
		call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory(icu_56::UnicodeString const	&,icu_56::Transliterator * (*)(icu_56::UnicodeString const &,icu_56::Transliterator::Token),icu_56::Transliterator::Token)
		add	esp, 0Ch
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_4BC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset ??_C@_05FKDJNLDH@nfc?$AA?$AB?$AA@ ; "nfc"
		call	?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z ; icu_56::cstrToken(char const *)
		add	esp, 4
		mov	dword ptr [ebp+var_FC],	eax
		mov	eax, dword ptr [ebp+var_FC]
		push	eax		; signed __int8
		push	offset ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z ; struct icu_56::UnicodeString *
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_1BA@CGDEMMKJ@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAD?$AA?$AA@	; "Any-NFD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_474] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	ecx, [ebp+var_50C]
		mov	[ebp+var_510], ecx
		mov	[ebp+var_4], 2
		mov	edx, [ebp+var_510]
		push	edx
		call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory(icu_56::UnicodeString const	&,icu_56::Transliterator * (*)(icu_56::UnicodeString const &,icu_56::Transliterator::Token),icu_56::Transliterator::Token)
		add	esp, 0Ch
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_474] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset ??_C@_06LJNNNEIO@nfkc?$AA?$AB?$AA@ ; "nfkc"
		call	?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z ; icu_56::cstrToken(char const *)
		add	esp, 4
		mov	[ebp+var_F0], eax
		mov	eax, [ebp+var_F0]
		push	eax
		push	offset ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z ; icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString const &,icu_56::Transliterator::Token)
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_1BC@IDHNCLA@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAK?$AAD?$AA?$AA@ ; "Any-NFKD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_42C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	ecx, [ebp+var_50C]
		mov	[ebp+var_510], ecx
		mov	[ebp+var_4], 3
		mov	edx, [ebp+var_510]
		push	edx
		call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory(icu_56::UnicodeString const	&,icu_56::Transliterator * (*)(icu_56::UnicodeString const &,icu_56::Transliterator::Token),icu_56::Transliterator::Token)
		add	esp, 0Ch
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_42C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset ??_C@_05HBBEIIPE@nfc?$AA?$AC?$AA@ ; "nfc"
		call	?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z ; icu_56::cstrToken(char const *)
		add	esp, 4
		mov	[ebp+var_E4], eax
		mov	eax, [ebp+var_E4]
		push	eax
		push	offset ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z ; icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString const &,icu_56::Transliterator::Token)
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_1BA@KFBMEGKP@?$AAA?$AAn?$AAy?$AA?9?$AAF?$AAC?$AAD?$AA?$AA@	; "Any-FCD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_3E4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	ecx, [ebp+var_50C]
		mov	[ebp+var_510], ecx
		mov	[ebp+var_4], 4
		mov	edx, [ebp+var_510]
		push	edx
		call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory(icu_56::UnicodeString const	&,icu_56::Transliterator * (*)(icu_56::UnicodeString const &,icu_56::Transliterator::Token),icu_56::Transliterator::Token)
		add	esp, 0Ch
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_3E4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	offset ??_C@_05GIAPLJLF@nfc?$AA?$AD?$AA@ ; "nfc"
		call	?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z ; icu_56::cstrToken(char const *)
		add	esp, 4
		mov	[ebp+var_D8], eax
		mov	eax, [ebp+var_D8]
		push	eax
		push	offset ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z ; icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString const &,icu_56::Transliterator::Token)
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_1BA@DIMLHOBG@?$AAA?$AAn?$AAy?$AA?9?$AAF?$AAC?$AAC?$AA?$AA@	; "Any-FCC"
		push	1		; signed __int8
		lea	ecx, [ebp+var_39C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	ecx, [ebp+var_50C]
		mov	[ebp+var_510], ecx
		mov	[ebp+var_4], 5
		mov	edx, [ebp+var_510]
		push	edx
		call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory(icu_56::UnicodeString const	&,icu_56::Transliterator * (*)(icu_56::UnicodeString const &,icu_56::Transliterator::Token),icu_56::Transliterator::Token)
		add	esp, 0Ch
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_39C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; signed __int8
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_17GLLNNGFC@?$AAN?$AAF?$AAD?$AA?$AA@ ; "NFD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_30C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	eax, [ebp+var_50C]
		mov	[ebp+var_510], eax
		mov	[ebp+var_4], 6
		mov	ecx, [ebp+var_510]
		push	ecx		; struct icu_56::UnicodeString *
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_17PGGKOOOL@?$AAN?$AAF?$AAC?$AA?$AA@ ; "NFC"
		push	1		; signed __int8
		lea	ecx, [ebp+var_354] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	edx, [ebp+var_514]
		mov	[ebp+var_518], edx
		mov	byte ptr [ebp+var_4], 7
		mov	eax, [ebp+var_518]
		push	eax		; struct icu_56::UnicodeString *
		call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse(icu_56::UnicodeString const &,icu_56::UnicodeString const &,signed	char)
		add	esp, 0Ch
		mov	byte ptr [ebp+var_4], 6
		mov	esi, esp
		lea	ecx, [ebp+var_354] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_30C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; signed __int8
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_19CBNFODF@?$AAN?$AAF?$AAK?$AAD?$AA?$AA@ ; "NFKD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_27C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	eax, [ebp+var_50C]
		mov	[ebp+var_510], eax
		mov	[ebp+var_4], 8
		mov	ecx, [ebp+var_510]
		push	ecx		; struct icu_56::UnicodeString *
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_19JPMKGGIM@?$AAN?$AAF?$AAK?$AAC?$AA?$AA@ ;	"NFKC"
		push	1		; signed __int8
		lea	ecx, [ebp+var_2C4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	edx, [ebp+var_514]
		mov	[ebp+var_518], edx
		mov	byte ptr [ebp+var_4], 9
		mov	eax, [ebp+var_518]
		push	eax		; struct icu_56::UnicodeString *
		call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse(icu_56::UnicodeString const &,icu_56::UnicodeString const &,signed	char)
		add	esp, 0Ch
		mov	byte ptr [ebp+var_4], 8
		mov	esi, esp
		lea	ecx, [ebp+var_2C4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_27C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)

loc_7FF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0		; signed __int8
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_17GLLNNGFC@?$AAN?$AAF?$AAD?$AA?$AA@ ; "NFD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_1EC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	eax, [ebp+var_50C]
		mov	[ebp+var_510], eax
		mov	[ebp+var_4], 0Ah
		mov	ecx, [ebp+var_510]
		push	ecx		; struct icu_56::UnicodeString *
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_17HFECGEON@?$AAF?$AAC?$AAC?$AA?$AA@ ; "FCC"
		push	1		; signed __int8
		lea	ecx, [ebp+var_234] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	edx, [ebp+var_514]
		mov	[ebp+var_518], edx
		mov	byte ptr [ebp+var_4], 0Bh
		mov	eax, [ebp+var_518]
		push	eax		; struct icu_56::UnicodeString *
		call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse(icu_56::UnicodeString const &,icu_56::UnicodeString const &,signed	char)
		add	esp, 0Ch
		mov	byte ptr [ebp+var_4], 0Ah
		mov	esi, esp
		lea	ecx, [ebp+var_234] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_1EC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	0		; signed __int8
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_17OIJFFMFE@?$AAF?$AAC?$AAD?$AA?$AA@ ; "FCD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_15C] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50C], eax
		mov	eax, [ebp+var_50C]
		mov	[ebp+var_510], eax
		mov	[ebp+var_4], 0Ch
		mov	ecx, [ebp+var_510]
		push	ecx		; struct icu_56::UnicodeString *
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_17OIJFFMFE@?$AAF?$AAC?$AAD?$AA?$AA@ ; "FCD"
		push	1		; signed __int8
		lea	ecx, [ebp+var_1A4] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_514], eax
		mov	edx, [ebp+var_514]
		mov	[ebp+var_518], edx
		mov	byte ptr [ebp+var_4], 0Dh
		mov	eax, [ebp+var_518]
		push	eax		; struct icu_56::UnicodeString *
		call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse(icu_56::UnicodeString const &,icu_56::UnicodeString const &,signed	char)
		add	esp, 0Ch
		mov	byte ptr [ebp+var_4], 0Ch
		mov	esi, esp
		lea	ecx, [ebp+var_1A4] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_15C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 518h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 9A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$0 proc near
					; DATA XREF: .xdata$x:00000BE8o
		mov	esi, esp
		lea	ecx, [ebp-504h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$1 proc near
					; DATA XREF: .xdata$x:00000BF0o
		mov	esi, esp
		lea	ecx, [ebp-4BCh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$2 proc near
					; DATA XREF: .xdata$x:00000BF8o
		mov	esi, esp
		lea	ecx, [ebp-474h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$2 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$3 proc near
					; DATA XREF: .xdata$x:00000C00o
		mov	esi, esp
		lea	ecx, [ebp-42Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$3 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$4 proc near
					; DATA XREF: .xdata$x:00000C08o
		mov	esi, esp
		lea	ecx, [ebp-3E4h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$4 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$5 proc near
					; DATA XREF: .xdata$x:00000C10o
		mov	esi, esp
		lea	ecx, [ebp-39Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$5 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$6 proc near
					; DATA XREF: .xdata$x:00000C18o
		mov	esi, esp
		lea	ecx, [ebp-30Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$6 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$7 proc near
					; DATA XREF: .xdata$x:00000C20o
		mov	esi, esp
		lea	ecx, [ebp-354h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$7 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$8 proc near
					; DATA XREF: .xdata$x:00000C28o
		mov	esi, esp
		lea	ecx, [ebp-27Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$8 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$9 proc near
					; DATA XREF: .xdata$x:00000C30o
		mov	esi, esp
		lea	ecx, [ebp-2C4h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$9 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$10 proc near
					; DATA XREF: .xdata$x:00000C38o
		mov	esi, esp
		lea	ecx, [ebp-1ECh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$10 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$11 proc near
					; DATA XREF: .xdata$x:00000C40o
		mov	esi, esp
		lea	ecx, [ebp-234h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$11 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$12 proc near
					; DATA XREF: .xdata$x:00000C48o
		mov	esi, esp
		lea	ecx, [ebp-15Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$12 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$13 proc near
					; DATA XREF: .xdata$x:00000C50o
		mov	esi, esp
		lea	ecx, [ebp-1A4h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$13 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ proc	near
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-51Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ
		jmp	___CxxFrameHandler3
__ehhandler$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AF0h
		public ??_C@_17OIJFFMFE@?$AAF?$AAC?$AAD?$AA?$AA@
; wchar_t `string'
??_C@_17OIJFFMFE@?$AAF?$AAC?$AAD?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+574o
					; icu_56::NormalizationTransliterator::registerIDs(void)+5B2o
		unicode	0, <FCD>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0AF8h
		public ??_C@_17HFECGEON@?$AAF?$AAC?$AAC?$AA?$AA@
; wchar_t `string'
??_C@_17HFECGEON@?$AAF?$AAC?$AAC?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+4FAo
		unicode	0, <FCC>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B00h
		public ??_C@_19JPMKGGIM@?$AAN?$AAF?$AAK?$AAC?$AA?$AA@
; wchar_t `string'
??_C@_19JPMKGGIM@?$AAN?$AAF?$AAK?$AAC?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+442o
		unicode	0, <NFKC>,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0Ch
		public ??_C@_19CBNFODF@?$AAN?$AAF?$AAK?$AAD?$AA?$AA@
; wchar_t `string'
??_C@_19CBNFODF@?$AAN?$AAF?$AAK?$AAD?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+404o
		unicode	0, <NFKD>,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B18h
		public ??_C@_17PGGKOOOL@?$AAN?$AAF?$AAC?$AA?$AA@
; wchar_t `string'
??_C@_17PGGKOOOL@?$AAN?$AAF?$AAC?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+38Ao
		unicode	0, <NFC>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B20h
		public ??_C@_17GLLNNGFC@?$AAN?$AAF?$AAD?$AA?$AA@
; wchar_t `string'
??_C@_17GLLNNGFC@?$AAN?$AAF?$AAD?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+34Co
					; icu_56::NormalizationTransliterator::registerIDs(void)+4BCo
		unicode	0, <NFD>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B28h
		public ??_C@_1BA@DIMLHOBG@?$AAA?$AAn?$AAy?$AA?9?$AAF?$AAC?$AAC?$AA?$AA@
; wchar_t `string'
??_C@_1BA@DIMLHOBG@?$AAA?$AAn?$AAy?$AA?9?$AAF?$AAC?$AAC?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+2E8o
		unicode	0, <Any-FCC>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B38h
		public ??_C@_05GIAPLJLF@nfc?$AA?$AD?$AA@
; `string'
??_C@_05GIAPLJLF@nfc?$AA?$AD?$AA@ db 'nfc',0
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+2C5o
		db 3, 0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B40h
		public ??_C@_1BA@KFBMEGKP@?$AAA?$AAn?$AAy?$AA?9?$AAF?$AAC?$AAD?$AA?$AA@
; wchar_t `string'
??_C@_1BA@KFBMEGKP@?$AAA?$AAn?$AAy?$AA?9?$AAF?$AAC?$AAD?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+267o
		unicode	0, <Any-FCD>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B50h
		public ??_C@_05HBBEIIPE@nfc?$AA?$AC?$AA@
; `string'
??_C@_05HBBEIIPE@nfc?$AA?$AC?$AA@ db 'nfc',0
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+244o
		db 2, 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B58h
		public ??_C@_1BC@IDHNCLA@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAK?$AAD?$AA?$AA@
; wchar_t `string'
??_C@_1BC@IDHNCLA@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAK?$AAD?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+1E6o
		unicode	0, <Any-NFKD>,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B6Ch
		public ??_C@_06LJNNNEIO@nfkc?$AA?$AB?$AA@
; `string'
??_C@_06LJNNNEIO@nfkc?$AA?$AB?$AA@ db 'nfkc',0
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+1C3o
		db 1, 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B74h
		public ??_C@_1BA@CGDEMMKJ@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAD?$AA?$AA@
; wchar_t `string'
??_C@_1BA@CGDEMMKJ@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAD?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+165o
		unicode	0, <Any-NFD>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B84h
		public ??_C@_05FKDJNLDH@nfc?$AA?$AB?$AA@
; `string'
??_C@_05FKDJNLDH@nfc?$AA?$AB?$AA@ db 'nfc',0
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+142o
		db 1, 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8Ch
		public ??_C@_1BC@JFOAOKAJ@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAK?$AAC?$AA?$AA@
; wchar_t `string'
??_C@_1BC@JFOAOKAJ@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAK?$AAC?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+E4o
		unicode	0, <Any-NFKC>,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA0h
		public ??_C@_06KAMGOFMP@nfkc?$AA?$AA?$AA@
; `string'
??_C@_06KAMGOFMP@nfkc?$AA?$AA?$AA@ db 'nfkc',0
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+C1o
		db 2 dup(0)
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BA8h
		public ??_C@_1BA@LLODPEBA@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAC?$AA?$AA@
; wchar_t `string'
??_C@_1BA@LLODPEBA@?$AAA?$AAn?$AAy?$AA?9?$AAN?$AAF?$AAC?$AA?$AA@:
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+63o
		unicode	0, <Any-NFC>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BB8h
		public ??_C@_05EDCCOKHG@nfc?$AA?$AA?$AA@
; `string'
??_C@_05EDCCOKHG@nfc?$AA?$AA?$AA@ db 'nfc',0
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+40o
		db 2 dup(0)
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0BC0h
__ehfuncinfo$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ dd 19930522h, 0Eh
					; DATA XREF: __ehhandler$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ+1Eo
		dd offset __unwindtable$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ
		align 20h
		dd 1
__unwindtable$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ dd	0FFFFFFFFh
					; DATA XREF: .xdata$x:00000BC8o
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$1
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$2
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$3
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$4
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$5
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$6
		dd 6
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$7
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$8
		dd 8
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$9
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$10
		dd 0Ah
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$11
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$12
		dd 0Ch
		dd offset __unwindfunclet$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ$13
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; union	icu_56::Transliterator::Token __cdecl icu_56::cstrToken(char const *)
?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z proc near
					; CODE XREF: icu_56::NormalizationTransliterator::registerIDs(void)+45p
					; icu_56::NormalizationTransliterator::registerIDs(void)+C6p ...

var_CC		= byte ptr -0CCh
var_C8		= dword	ptr -0C8h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		push	eax
		call	?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ; icu_56::Transliterator::pointerToken(void *)
		add	esp, 4
		mov	[ebp+var_C8], eax
		mov	eax, [ebp+var_C8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?cstrToken@icu_56@@YA?ATToken@Transliterator@1@PBD@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString icu_56::NormalizationTransliterator::_create
		public ?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z
?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z proc	near
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+5Ao
					; icu_56::NormalizationTransliterator::registerIDs(void)+DBo ...

var_118		= dword	ptr -118h
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
Str		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 10Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_118]
		mov	ecx, 43h ; 'C'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+Str], eax
		mov	esi, esp
		push	0		; Val
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, byte ptr [eax+1]
		mov	[ebp+var_20], ecx
		mov	[ebp+var_2C], 0
		mov	esi, esp
		lea	eax, [ebp+var_2C]
		push	eax
		mov	ecx, [ebp+var_20]
		push	ecx
		mov	edx, [ebp+Str]
		push	edx
		push	0
		call	dword ptr ds:__imp_?getInstance@Normalizer2@icu_56@@SAPBV12@PBD0W4UNormalization2Mode@@AAW4UErrorCode@@@Z ; icu_56::Normalizer2::getInstance(char const	*,char const *,UNormalization2Mode,UErrorCode &)
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_2C]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_DAB
		mov	esi, esp
		push	50h ; 'P'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_104], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_104], 0
		jz	short loc_D84
		mov	eax, [ebp+var_38]
		push	eax		; struct icu_56::Normalizer2 *
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_104] ; this
		call	??0NormalizationTransliterator@icu_56@@AAE@ABVUnicodeString@1@ABVNormalizer2@1@@Z ; icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::UnicodeString const &,icu_56::Normalizer2 const &)
		mov	[ebp+var_118], eax
		jmp	short loc_D8E
; ---------------------------------------------------------------------------

loc_D84:				; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+C7j
		mov	[ebp+var_118], 0

loc_D8E:				; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+E2j
		mov	edx, [ebp+var_118]
		mov	[ebp+var_110], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_110]
		jmp	short loc_DAD
; ---------------------------------------------------------------------------
		jmp	short loc_DAD
; ---------------------------------------------------------------------------

loc_DAB:				; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+9Dj
		xor	eax, eax

loc_DAD:				; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+107j
					; icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString const &,icu_56::Transliterator::Token)+109j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN11
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 118h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z endp

; ---------------------------------------------------------------------------
		align 10h
$LN11		dd 1			; DATA XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+111o
		dd offset $LN10
$LN10		dd 0FFFFFFD4h, 4	; DATA XREF: .text:00000DE4o
		dd offset $LN8		; "errorCode"
$LN8		db 'errorCode',0        ; DATA XREF: .text:00000DF0o
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0E00h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z$0 proc near
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
					; .xdata$x:00000E3Co
		mov	esi, esp
		mov	eax, [ebp-104h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z proc near
					; DATA XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-11Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0E38h
__unwindtable$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000E48o
		dd offset __unwindfunclet$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z$0
__ehfuncinfo$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z	dd 19930522h, 1
					; DATA XREF: __ehhandler$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z+14o
		dd offset __unwindtable$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+90p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::NormalizationTransliterator *this,	const struct icu_56::UnicodeString *, const struct icu_56::Normalizer2 *)
		public ??0NormalizationTransliterator@icu_56@@AAE@ABVUnicodeString@1@ABVNormalizer2@1@@Z
??0NormalizationTransliterator@icu_56@@AAE@ABVUnicodeString@1@ABVNormalizer2@1@@Z proc near
					; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+D7p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	0		; struct icu_56::UnicodeFilter *
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_8] ; this
		call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator(icu_56::UnicodeString const &,icu_56::UnicodeFilter *)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7NormalizationTransliterator@icu_56@@6B@ ; const icu_56::NormalizationTransliterator::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	[eax+4Ch], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0NormalizationTransliterator@icu_56@@AAE@ABVUnicodeString@1@ABVNormalizer2@1@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0EECh
		dd offset ??_R4NormalizationTransliterator@icu_56@@6B@ ; const icu_56::NormalizationTransliterator::`RTTI Complete Object Locator'
		public ??_7NormalizationTransliterator@icu_56@@6B@
; const	icu_56::NormalizationTransliterator::`vftable'
??_7NormalizationTransliterator@icu_56@@6B@ dd offset ??_ENormalizationTransliterator@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::UnicodeString const &,icu_56::Normalizer2	const &)+34o
					; icu_56::NormalizationTransliterator::~NormalizationTransliterator(void)+26o ...
					; icu_56::NormalizationTransliterator::`vector deleting	destructor'(uint)
		dd offset ?getDynamicClassID@NormalizationTransliterator@icu_56@@UBEPAXXZ ; icu_56::NormalizationTransliterator::getDynamicClassID(void)
		dd offset ?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ ; icu_56::NormalizationTransliterator::clone(void)
		dd offset ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::transliterate(icu_56::Replaceable &,UTransPosition	&,UErrorCode &)
		dd offset ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z ; icu_56::Transliterator::transliterate(icu_56::Replaceable	&,UTransPosition &,int,UErrorCode &)
		dd offset ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ;	icu_56::Transliterator::transliterate(icu_56::Replaceable &,UTransPosition &,icu_56::UnicodeString const &,UErrorCode &)
		dd offset ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z	; icu_56::Transliterator::transliterate(icu_56::Replaceable &)
		dd offset ?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z ; icu_56::Transliterator::transliterate(icu_56::Replaceable &,int,int)
		dd offset ?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z ; icu_56::Transliterator::finishTransliteration(icu_56::Replaceable &,UTransPosition	&)
		dd offset ?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed	char)
		dd offset ?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z ; icu_56::Transliterator::filteredTransliterate(icu_56::Replaceable &,UTransPosition &,signed char,signed char)
		dd offset ?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::Transliterator::filteredTransliterate(icu_56::Replaceable	&,UTransPosition &,signed char)
		dd offset ?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ ; icu_56::Transliterator::getID(void)
		dd offset ?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::Transliterator::toRules(icu_56::UnicodeString &,signed char)
		dd offset ?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z ; icu_56::Transliterator::handleGetSourceSet(icu_56::UnicodeSet &)
		dd offset ?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z ; icu_56::Transliterator::getTargetSet(icu_56::UnicodeSet &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0F30h
		public ??_R4NormalizationTransliterator@icu_56@@6B@
; const	icu_56::NormalizationTransliterator::`RTTI Complete Object Locator'
??_R4NormalizationTransliterator@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:00000EECo
		dd offset ??_R0?AVNormalizationTransliterator@icu_56@@@8 ; icu_56::NormalizationTransliterator `RTTI Type Descriptor'
		dd offset ??_R3NormalizationTransliterator@icu_56@@8 ; icu_56::NormalizationTransliterator::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0F44h
		public ??_R0?AVNormalizationTransliterator@icu_56@@@8
; class	icu_56::NormalizationTransliterator `RTTI Type Descriptor'
??_R0?AVNormalizationTransliterator@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00000F3Co
					; .rdata$r:icu_56::NormalizationTransliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avnormalizat	db '.?AVNormalizationTransliterator@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0F78h
		public ??_R3NormalizationTransliterator@icu_56@@8
; icu_56::NormalizationTransliterator::`RTTI Class Hierarchy Descriptor'
??_R3NormalizationTransliterator@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:00000F40o
					; .rdata$r:00000FB4o
		dd 4
		dd offset ??_R2NormalizationTransliterator@icu_56@@8 ; icu_56::NormalizationTransliterator::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0F88h
		public ??_R2NormalizationTransliterator@icu_56@@8
; icu_56::NormalizationTransliterator::`RTTI Base Class	Array'
??_R2NormalizationTransliterator@icu_56@@8 dd offset ??_R1A@?0A@EA@NormalizationTransliterator@icu_56@@8
					; DATA XREF: .rdata$r:00000F84o
					; icu_56::NormalizationTransliterator::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Transliterator@icu_56@@8 ; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0F9Ch
		public ??_R1A@?0A@EA@NormalizationTransliterator@icu_56@@8
; icu_56::NormalizationTransliterator::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@NormalizationTransliterator@icu_56@@8 dd offset ??_R0?AVNormalizationTransliterator@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::NormalizationTransliterator::`RTTI Base Class Array'o
					; icu_56::NormalizationTransliterator `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3NormalizationTransliterator@icu_56@@8 ; icu_56::NormalizationTransliterator::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0FB8h
		public ??_R1A@?0A@EA@Transliterator@icu_56@@8
; icu_56::Transliterator::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@Transliterator@icu_56@@8 dd offset ??_R0?AVTransliterator@icu_56@@@8
					; DATA XREF: .rdata$r:00000F8Co
					; .rdata$r:icu_56::Transliterator::`RTTI Base Class Array'o
					; icu_56::Transliterator `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3Transliterator@icu_56@@8	; icu_56::Transliterator::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0FD4h
		public ??_R0?AVTransliterator@icu_56@@@8
; class	icu_56::Transliterator `RTTI Type Descriptor'
??_R0?AVTransliterator@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avtransliter	db '.?AVTransliterator@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0FF8h
		public ??_R3Transliterator@icu_56@@8
; icu_56::Transliterator::`RTTI	Class Hierarchy	Descriptor'
??_R3Transliterator@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00000FD0o
dword_1000	dd 3			; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		dd offset ??_R2Transliterator@icu_56@@8	; icu_56::Transliterator::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1008h
		public ??_R2Transliterator@icu_56@@8
; icu_56::Transliterator::`RTTI	Base Class Array'
??_R2Transliterator@icu_56@@8 dd offset	??_R1A@?0A@EA@Transliterator@icu_56@@8
					; DATA XREF: .rdata$r:00001004o
					; icu_56::Transliterator::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1018h
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:00000F90o
					; .rdata$r:0000100Co ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1034h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1054h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001030o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1064h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00001060o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1070h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00000F94o
					; .rdata$r:00001010o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		align 8
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 108Ch
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 10ACh
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001088o
					; .rdata$r:000010DCo
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 10BCh
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:000010B8o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 10C4h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		align 10h
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 10E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::NormalizationTransliterator::`scalar deleting destructor'(unsigned int)
		public ??_GNormalizationTransliterator@icu_56@@UAEPAXI@Z
??_GNormalizationTransliterator@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1NormalizationTransliterator@icu_56@@UAE@XZ ;	icu_56::NormalizationTransliterator::~NormalizationTransliterator(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1129
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1129:				; CODE XREF: icu_56::NormalizationTransliterator::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GNormalizationTransliterator@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1144h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::NormalizationTransliterator::~NormalizationTransliterator(icu_56::NormalizationTransliterator *__hidden this)
		public ??1NormalizationTransliterator@icu_56@@UAE@XZ
??1NormalizationTransliterator@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::NormalizationTransliterator::`scalar deleting destructor'(uint)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7NormalizationTransliterator@icu_56@@6B@ ; const icu_56::NormalizationTransliterator::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1Transliterator@icu_56@@UAE@XZ ; icu_56::Transliterator::~Transliterator(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1NormalizationTransliterator@icu_56@@UAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 118Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::NormalizationTransliterator *this,	const struct icu_56::NormalizationTransliterator *)
		public ??0NormalizationTransliterator@icu_56@@QAE@ABV01@@Z
??0NormalizationTransliterator@icu_56@@QAE@ABV01@@Z proc near
					; CODE XREF: icu_56::NormalizationTransliterator::clone(void)+76p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::Transliterator	*
		mov	ecx, [ebp+var_8] ; this
		call	??0Transliterator@icu_56@@IAE@ABV01@@Z ; icu_56::Transliterator::Transliterator(icu_56::Transliterator const &)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7NormalizationTransliterator@icu_56@@6B@ ; const icu_56::NormalizationTransliterator::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4Ch]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0NormalizationTransliterator@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 11ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::Transliterator	*__thiscall icu_56::NormalizationTransliterator::clone(icu_56::NormalizationTransliterator *__hidden this)
		public ?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ proc near
					; DATA XREF: .rdata:00000EF8o

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		push	50h ; 'P'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_E0], 0
		jz	short loc_126F
		mov	eax, [ebp+var_14]
		push	eax		; struct icu_56::NormalizationTransliterator *
		mov	ecx, [ebp+var_E0] ; this
		call	??0NormalizationTransliterator@icu_56@@QAE@ABV01@@Z ; icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::NormalizationTransliterator const &)
		mov	[ebp+var_F4], eax
		jmp	short loc_1279
; ---------------------------------------------------------------------------

loc_126F:				; CODE XREF: icu_56::NormalizationTransliterator::clone(void)+6Aj
		mov	[ebp+var_F4], 0

loc_1279:				; CODE XREF: icu_56::NormalizationTransliterator::clone(void)+81j
		mov	ecx, [ebp+var_F4]
		mov	[ebp+var_EC], ecx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_EC]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 12B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0 proc near
					; DATA XREF: .xdata$x:000012F0o
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ proc near
					; DATA XREF: icu_56::NormalizationTransliterator::clone(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
		jmp	___CxxFrameHandler3
__ehhandler$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 12ECh
__unwindtable$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000012FCo
		dd offset __unwindfunclet$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0
__ehfuncinfo$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ dd 19930522h,	1
					; DATA XREF: __ehhandler$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ+14o
		dd offset __unwindtable$?clone@NormalizationTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1318h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::NormalizationTransliterator::handleTransliterate(icu_56::NormalizationTransliterator *this, struct icu_56::Replaceable *, struct UTransPosition *, signed __int8)
		public ?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z proc near
					; DATA XREF: .rdata:00000F14o

var_1B4		= byte ptr -1B4h
var_F0		= dword	ptr -0F0h
var_E4		= dword	ptr -0E4h
var_D8		= dword	ptr -0D8h
var_CC		= byte ptr -0CCh
var_84		= byte ptr -84h
var_3C		= dword	ptr -3Ch
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 1A8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_1B4]
		mov	ecx, 6Ah ; 'j'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax+8]
		mov	[ebp+var_24], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax+0Ch]
		mov	[ebp+var_30], ecx
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_30]
		jl	short loc_137C
		jmp	loc_15F9
; ---------------------------------------------------------------------------

loc_137C:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+5Dj
		mov	[ebp+var_3C], 0
		mov	esi, esp
		lea	ecx, [ebp+var_84] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_CC] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		mov	esi, esp
		mov	eax, [ebp+var_24]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?char32At@Replaceable@icu_56@@QBEHH@Z ; icu_56::Replaceable::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_D8], eax

loc_13D4:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+27Fj
		mov	eax, [ebp+var_24]
		mov	[ebp+var_E4], eax
		mov	esi, esp
		lea	ecx, [ebp+var_84] ; this
		call	dword ptr ds:__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ ; icu_56::UnicodeString::remove(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_13F2:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+15Aj
		mov	esi, esp
		mov	eax, [ebp+var_D8]
		push	eax		; int
		lea	ecx, [ebp+var_84] ; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z ;	icu_56::UnicodeString::append(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, 0FFFFh
		cmp	eax, [ebp+var_D8]
		sbb	ecx, ecx
		neg	ecx
		add	ecx, 1
		add	ecx, [ebp+var_24]
		mov	[ebp+var_24], ecx
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_30]
		jge	short loc_1478
		mov	esi, esp
		mov	eax, [ebp+var_24]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?char32At@Replaceable@icu_56@@QBEHH@Z ; icu_56::Replaceable::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_D8], eax
		mov	esi, esp
		mov	ecx, [ebp+var_D8]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx+4Ch]
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+4Ch]
		mov	edx, [eax]
		mov	eax, [edx+30h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	loc_13F2

loc_1478:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+114j
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_30]
		jnz	short loc_14C0
		movsx	eax, [ebp+arg_8]
		test	eax, eax
		jz	short loc_14C0
		mov	esi, esp
		mov	eax, [ebp+var_D8]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+4Ch]
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+4Ch]
		mov	edx, [edx]
		mov	eax, [edx+34h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_14C0
		mov	eax, [ebp+var_E4]
		mov	[ebp+var_24], eax
		jmp	loc_159D
; ---------------------------------------------------------------------------

loc_14C0:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+166j
					; icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition	&,signed char)+16Ej ...
		mov	esi, esp
		lea	eax, [ebp+var_3C]
		push	eax
		lea	ecx, [ebp+var_CC]
		push	ecx
		lea	edx, [ebp+var_84]
		push	edx
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+4Ch]
		mov	edx, [ebp+var_18]
		mov	eax, [edx+4Ch]
		mov	edx, [ecx]
		mov	ecx, eax
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_3C]
		push	eax
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_1508
		jmp	loc_159D
; ---------------------------------------------------------------------------

loc_1508:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+1E9j
		mov	esi, esp
		lea	eax, [ebp+var_CC]
		push	eax
		lea	ecx, [ebp+var_84]
		call	dword ptr ds:__imp_??9UnicodeString@icu_56@@QBECABV01@@Z ; icu_56::UnicodeString::operator!=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_1591
		mov	esi, esp
		lea	eax, [ebp+var_CC]
		push	eax
		mov	ecx, [ebp+var_24]
		push	ecx
		mov	edx, [ebp+var_E4]
		push	edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_CC] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_24]
		sub	ecx, [ebp+var_E4]
		sub	eax, ecx
		mov	[ebp+var_F0], eax
		mov	eax, [ebp+var_24]
		add	eax, [ebp+var_F0]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_30]
		add	eax, [ebp+var_F0]
		mov	[ebp+var_30], eax

loc_1591:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+211j
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_30]
		jl	loc_13D4

loc_159D:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+1A3j
					; icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition	&,signed char)+1EBj
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_24]
		mov	[eax+8], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_30]
		sub	ecx, [eax+0Ch]
		mov	edx, [ebp+arg_4]
		add	ecx, [edx+4]
		mov	eax, [ebp+arg_4]
		mov	[eax+4], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+var_30]
		mov	[eax+0Ch], ecx
		mov	byte ptr [ebp+var_4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_CC] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_84] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_15F9:				; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+5Fj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN21
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 1B4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN21		dd 3			; DATA XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+2E5o
		dd offset $LN20
$LN20		dd 0FFFFFFC4h, 4	; DATA XREF: .text:0000163Co
		dd offset $LN16		; "errorCode"
		dd 0FFFFFF7Ch, 40h
		dd offset $LN17		; "segment"
		dd 0FFFFFF34h, 40h
		dd offset $LN18		; "normalized"
$LN18		db 'normalized',0       ; DATA XREF: .text:00001660o
$LN17		db 'segment',0          ; DATA XREF: .text:00001654o
$LN16		db 'errorCode',0        ; DATA XREF: .text:00001648o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1684h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$0 proc near
					; DATA XREF: .xdata$x:000016DCo
		mov	esi, esp
		lea	ecx, [ebp-84h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$1 proc near
					; DATA XREF: .xdata$x:000016E4o
		mov	esi, esp
		lea	ecx, [ebp-0CCh]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z proc near
					; DATA XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-1B8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
		jmp	___CxxFrameHandler3
__ehhandler$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 16D8h
__unwindtable$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000016F0o
		dd offset __unwindfunclet$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$0
		dd 0
		dd offset __unwindfunclet$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z$1
__ehfuncinfo$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z dd 19930522h,	2
					; DATA XREF: __ehhandler$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z+1Eo
		dd offset __unwindtable$?handleTransliterate@NormalizationTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 170Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+1DCp

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; signed __int8	__thiscall icu_56::UnicodeString::truncate(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?truncate@UnicodeString@icu_56@@QAECH@Z:near
					; CODE XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+74p
					; DATA XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+74r
; int __thiscall icu_56::UnicodeString::length(icu_56::UnicodeString *__hidden this)
		extrn __imp_?length@UnicodeString@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &):loc_1FBp
					; icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition	&,signed char)+243p
					; DATA XREF: ...
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::append(icu_56::UnicodeString *__hidden this, wchar_t)
		extrn __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:near
					; CODE XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+46p
					; DATA XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+46r
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString const &)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+2Fp
					; DATA XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+2Fr
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::Transliterator::setID(icu_56::UnicodeString const &)+37p
					; icu_56::Transliterator::setID(icu_56::UnicodeString const &)+4Ep ...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::Transliterator::integerToken(int)+31p
					; icu_56::Transliterator::pointerToken(void *)+31p ...
; void __cdecl static icu_56::Transliterator::_registerSpecialInverse(const struct icu_56::UnicodeString *, const struct icu_56::UnicodeString *, signed __int8)
		extrn ?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::registerIDs(void)+3C1p
					; icu_56::NormalizationTransliterator::registerIDs(void)+479p ...
; _DWORD __thiscall icu_56::UnicodeString::~UnicodeString(icu_56::UnicodeString	*__hidden this)
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::NormalizationTransliterator::registerIDs(void)+B4p
					; icu_56::NormalizationTransliterator::registerIDs(void)+135p ...
; void __cdecl __high static icu_56::Transliterator::_registerFactory(const struct icu_56::UnicodeString *, struct icu_56::Transliterator *(__cdecl __high static *)(const struct icu_56::UnicodeString	*, union icu_56::Transliterator::Token), union icu_56::Transliterator::Token)
		extrn ?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::registerIDs(void)+9Dp
					; icu_56::NormalizationTransliterator::registerIDs(void)+11Ep ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, signed __int8, const wchar_t *, int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::registerIDs(void)+70p
					; icu_56::NormalizationTransliterator::registerIDs(void)+F1p ...
		extrn ___security_cookie:near
					; DATA XREF: icu_56::NormalizationTransliterator::registerIDs(void)+2Cr
					; icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString const &,icu_56::Transliterator::Token)+2Cr ...
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ+23j
					; __ehhandler$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z+19j ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: icu_56::NormalizationTransliterator::registerIDs(void)+639p
					; __ehhandler$?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ+Fp ...
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: __unwindfunclet$?_create@NormalizationTransliterator@icu_56@@CAPAVTransliterator@2@ABVUnicodeString@2@TToken@32@@Z$0+9p
					; icu_56::NormalizationTransliterator::`scalar deleting	destructor'(uint)+39p ...
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+A3p
					; icu_56::NormalizationTransliterator::clone(void)+46p
					; DATA XREF: ...
; const	struct icu_56::Normalizer2 *__cdecl __high static icu_56::Normalizer2::getInstance(const char *, const char *, enum UNormalization2Mode, enum UErrorCode *)
		extrn __imp_?getInstance@Normalizer2@icu_56@@SAPBV12@PBD0W4UNormalization2Mode@@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+79p
					; DATA XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+79r
; char *__cdecl	_strchr(const char *Str, int Val)
		extrn __imp__strchr:near
					; CODE XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+4Bp
					; DATA XREF: icu_56::NormalizationTransliterator::_create(icu_56::UnicodeString	const &,icu_56::Transliterator::Token)+4Br
; _DWORD __thiscall icu_56::Transliterator::Transliterator(icu_56::Transliterator *__hidden this, const	struct icu_56::UnicodeString *,	struct icu_56::UnicodeFilter *)
		extrn ??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::UnicodeString const &,icu_56::Normalizer2	const &)+2Cp
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::NormalizationTransliterator `RTTI Type Descriptor'o
					; .data:icu_56::Transliterator `RTTI Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::NormalizationTransliterator::`scalar deleting destructor'(unsigned int)
		extrn ??_GNormalizationTransliterator@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::NormalizationTransliterator::`vector deleting destructor'(unsigned int)
		extrn ??_ENormalizationTransliterator@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::NormalizationTransliterator::`vftable'o
; public: virtual void __thiscall icu_56::Transliterator::transliterate(class icu_56::Replaceable &, struct UTransPosition &, enum  UErrorCode &)const
		extrn ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000EFCo
; public: virtual void __thiscall icu_56::Transliterator::transliterate(class icu_56::Replaceable &, struct UTransPosition &, int, enum	 UErrorCode &)const
		extrn ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000F00o
; public: virtual void __thiscall icu_56::Transliterator::transliterate(class icu_56::Replaceable &, struct UTransPosition &, class icu_56::UnicodeString const	&, enum	 UErrorCode &)const
		extrn ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000F04o
; public: virtual void __thiscall icu_56::Transliterator::transliterate(class icu_56::Replaceable &)const
		extrn ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z:near
					; DATA XREF: .rdata:00000F08o
; public: virtual int __thiscall icu_56::Transliterator::transliterate(class icu_56::Replaceable &, int, int)const
		extrn ?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z:near
					; DATA XREF: .rdata:00000F0Co
; public: virtual void __thiscall icu_56::Transliterator::finishTransliteration(class icu_56::Replaceable &, struct UTransPosition &)const
		extrn ?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z:near
					; DATA XREF: .rdata:00000F10o
; private: virtual void	__thiscall icu_56::Transliterator::filteredTransliterate(class icu_56::Replaceable &, struct UTransPosition &, signed char, signed char)const
		extrn ?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z:near
					; DATA XREF: .rdata:00000F18o
; public: virtual void __thiscall icu_56::Transliterator::filteredTransliterate(class icu_56::Replaceable &, struct UTransPosition &, signed char)const
		extrn ?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z:near
					; DATA XREF: .rdata:00000F1Co
; public: virtual class	icu_56::UnicodeString const & __thiscall icu_56::Transliterator::getID(void)const
		extrn ?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ:near
					; DATA XREF: .rdata:00000F20o
; public: virtual class	icu_56::UnicodeString &	__thiscall icu_56::Transliterator::toRules(class icu_56::UnicodeString &, signed char)const
		extrn ?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near
					; DATA XREF: .rdata:00000F24o
; public: virtual void __thiscall icu_56::Transliterator::handleGetSourceSet(class icu_56::UnicodeSet &)const
		extrn ?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z:near
					; DATA XREF: .rdata:00000F28o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::Transliterator::getTargetSet(class icu_56::UnicodeSet &)const
		extrn ?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z:near
					; DATA XREF: .rdata:00000F2Co
; _DWORD __thiscall icu_56::Transliterator::~Transliterator(icu_56::Transliterator *__hidden this)
		extrn ??1Transliterator@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::NormalizationTransliterator::~NormalizationTransliterator(void)+2Fp
; _DWORD __thiscall icu_56::Transliterator::Transliterator(icu_56::Transliterator *__hidden this, const	struct icu_56::Transliterator *)
		extrn ??0Transliterator@icu_56@@IAE@ABV01@@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::NormalizationTransliterator(icu_56::NormalizationTransliterator const	&)+2Ap
; __declspec(dllimport)	public:	signed char __thiscall icu_56::UnicodeString::operator!=(class icu_56::UnicodeString const &)const
		extrn __imp_??9UnicodeString@icu_56@@QBECABV01@@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+1FFp
					; DATA XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+1FFr
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::append(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+E9p
					; DATA XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+E9r
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::remove(icu_56::UnicodeString *__hidden this)
		extrn __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:near
					; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+CDp
					; DATA XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+CDr
; int __thiscall icu_56::Replaceable::char32At(icu_56::Replaceable *__hidden this, int)
		extrn __imp_?char32At@Replaceable@icu_56@@QBEHH@Z:near
					; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+A9p
					; icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition	&,signed char)+11Fp
					; DATA XREF: ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition &,signed char)+73p
					; icu_56::NormalizationTransliterator::handleTransliterate(icu_56::Replaceable &,UTransPosition	&,signed char)+8Fp
					; DATA XREF: ...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	4FC0AEBAA50F7450C1A15761D95F8DCC
; Input	CRC32 :	DA159E4D

; File Name   :	D:\compspace\objfiles\firefox\i18n\identifier_info.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset _CHINESE
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	??_GIdentifierInfo@icu_56@@UAEPAXI@Z ; icu_56::IdentifierInfo::`scalar deleting	destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	off_800
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_FFB+5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset loc_1FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1C0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?umtx_loadAcquire@icu_56@@YAHACJ@Z ; icu_56::umtx_loadAcquire(long volatile &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
; struct icu_56::ScriptSet *JAPANESE
_JAPANESE	dd ?			; DATA XREF: _IdentifierInfo_init+F5w
					; _IdentifierInfo_init+20Cr ...
; icu_56::UnicodeSet *ASCII
_ASCII		dd ?			; DATA XREF: _IdentifierInfo_init+9Dw
					; _IdentifierInfo_init+203r ...
; struct icu_56::ScriptSet *CHINESE
_CHINESE	dd ?			; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
					; _IdentifierInfo_init+14Dw ...
; struct icu_56::ScriptSet *CONFUSABLE_WITH_LATIN
_CONFUSABLE_WITH_LATIN dd ?		; DATA XREF: _IdentifierInfo_init+1FDw
					; _IdentifierInfo_init+227r ...
; struct icu_56::ScriptSet *KOREAN
_KOREAN		dd ?			; DATA XREF: _IdentifierInfo_init+1A5w
					; _IdentifierInfo_init+21Er ...
; icu_56::UInitOnce gIdentifierInfoInitOnce
_gIdentifierInfoInitOnce dd 2 dup(?)	; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+90o
					; _IdentifierInfo_cleanup+19Bo
_bss		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 114h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 14Ch
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 150h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 154h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 188h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::IdentifierInfo & __thiscall icu_56::IdentifierInfo::operator=(class icu_56::IdentifierInfo const &)
		public ??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z
??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+8]

loc_1C0:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		mov	[eax+8], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+0Ch]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+10h]
		mov	[eax+10h], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+14h]
		mov	[eax+14h], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+18h]
		mov	[eax+18h], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 200h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::IdentifierInfo::`scalar deleting destructor'(unsigned int)
		public ??_GIdentifierInfo@icu_56@@UAEPAXI@Z
??_GIdentifierInfo@icu_56@@UAEPAXI@Z proc near
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1IdentifierInfo@icu_56@@UAE@XZ ; icu_56::IdentifierInfo::~IdentifierInfo(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_249
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_249:				; CODE XREF: icu_56::IdentifierInfo::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GIdentifierInfo@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 264h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::IdentifierInfo::`vector deleting destructor'(unsigned int)
		public ??_EIdentifierInfo@icu_56@@UAEPAXI@Z
??_EIdentifierInfo@icu_56@@UAEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::IdentifierInfo::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_2CF
		push	offset ??1IdentifierInfo@icu_56@@UAE@XZ	; icu_56::IdentifierInfo::~IdentifierInfo(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	1Ch
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2C7
		mov	eax, [ebp+var_8]
		sub	eax, 4
		mov	esi, esp
		push	eax		; void *
		call	dword ptr ds:__imp_??_VUMemory@icu_56@@SAXPAX@Z	; icu_56::UMemory::operator delete[](void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2C7:				; CODE XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_2F8
; ---------------------------------------------------------------------------

loc_2CF:				; CODE XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1IdentifierInfo@icu_56@@UAE@XZ ; icu_56::IdentifierInfo::~IdentifierInfo(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2F5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2F5:				; CODE XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+79j
		mov	eax, [ebp+var_8]

loc_2F8:				; CODE XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+69j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_EIdentifierInfo@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 310h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::IdentifierInfo::IdentifierInfo(icu_56::IdentifierInfo *this, enum UErrorCode *)
		public ??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z proc near

var_154		= dword	ptr -154h
var_14C		= dword	ptr -14Ch
var_140		= dword	ptr -140h
var_134		= dword	ptr -134h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 148h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_154]
		mov	ecx, 52h ; 'R'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7IdentifierInfo@icu_56@@6B@ ; const icu_56::IdentifierInfo::`vftable'
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+0Ch], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+10h], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		push	eax		; void (__cdecl	*)(enum	UErrorCode *)
		push	offset _IdentifierInfo_init ; struct icu_56::UInitOnce *
		push	offset _gIdentifierInfoInitOnce	; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)
		add	esp, 0Ch
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3C7
		jmp	loc_6C0
; ---------------------------------------------------------------------------

loc_3C7:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+B0j
		mov	esi, esp
		push	40h ; '@'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_140], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_140], 0
		jz	short loc_420
		mov	esi, esp
		mov	ecx, [ebp+var_140] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)

loc_3FF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_140]
		mov	dword ptr [eax], offset	??_SUnicodeString@icu_56@@6B@ ;	const icu_56::UnicodeString::`local vftable'
		mov	ecx, [ebp+var_140]
		mov	[ebp+var_154], ecx
		jmp	short loc_42A
; ---------------------------------------------------------------------------

loc_420:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+DFj
		mov	[ebp+var_154], 0

loc_42A:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+10Ej
		mov	edx, [ebp+var_154]
		mov	[ebp+var_14C], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_14C]
		mov	[eax+4], ecx
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_128], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_128], 0
		jz	short loc_486
		mov	ecx, [ebp+var_128] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_154], eax
		jmp	short loc_490
; ---------------------------------------------------------------------------

loc_486:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+161j
		mov	[ebp+var_154], 0

loc_490:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+174j
		mov	eax, [ebp+var_154]
		mov	[ebp+var_134], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_134]
		mov	[ecx+8], edx
		mov	eax, [ebp+arg_0]
		push	eax
		push	0
		push	offset _uhash_compareScriptSet_56
		push	offset _uhash_hashScriptSet_56
		call	_uhash_open_56
		add	esp, 10h
		mov	ecx, [ebp+var_14]
		mov	[ecx+0Ch], eax
		push	offset _uhash_deleteScriptSet_56
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+0Ch]
		push	ecx
		call	_uhash_setKeyDeleter_56
		add	esp, 8
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_110], eax
		mov	[ebp+var_4], 2
		cmp	[ebp+var_110], 0
		jz	short loc_51E
		mov	ecx, [ebp+var_110] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_154], eax
		jmp	short loc_528
; ---------------------------------------------------------------------------

loc_51E:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+1F9j
		mov	[ebp+var_154], 0

loc_528:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+20Cj
		mov	eax, [ebp+var_154]
		mov	[ebp+var_11C], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_11C]
		mov	[ecx+10h], edx
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F8], eax
		mov	[ebp+var_4], 3
		cmp	[ebp+var_F8], 0
		jz	short loc_5AD
		mov	esi, esp
		mov	ecx, [ebp+var_F8] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@XZ	; icu_56::UnicodeSet::UnicodeSet(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_F8]
		mov	dword ptr [eax], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	ecx, [ebp+var_F8]
		mov	dword ptr [ecx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	edx, [ebp+var_F8]
		mov	[ebp+var_154], edx
		jmp	short loc_5B7
; ---------------------------------------------------------------------------

loc_5AD:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+25Fj
		mov	[ebp+var_154], 0

loc_5B7:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+29Bj
		mov	eax, [ebp+var_154]
		mov	[ebp+var_104], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_104]
		mov	[ecx+14h], edx
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 4
		cmp	[ebp+var_E0], 0
		jz	short loc_643
		mov	esi, esp
		push	10FFFFh		; int
		push	0		; int
		mov	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@HH@Z ; icu_56::UnicodeSet::UnicodeSet(int,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_E0]
		mov	dword ptr [eax], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	ecx, [ebp+var_E0]
		mov	dword ptr [ecx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_154], edx
		jmp	short loc_64D
; ---------------------------------------------------------------------------

loc_643:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+2EEj
		mov	[ebp+var_154], 0

loc_64D:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+331j
		mov	eax, [ebp+var_154]
		mov	[ebp+var_EC], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_EC]
		mov	[ecx+18h], edx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6C0
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+4], 0
		jz	short loc_6B7
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+8], 0
		jz	short loc_6B7
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+0Ch], 0
		jz	short loc_6B7
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+10h], 0
		jz	short loc_6B7
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+14h], 0
		jz	short loc_6B7
		mov	eax, [ebp+var_14]
		cmp	dword ptr [eax+18h], 0
		jnz	short loc_6C0

loc_6B7:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+378j
					; icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+381j ...
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7

loc_6C0:				; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+B2j
					; icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+36Fj ...
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 154h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 6E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$0 proc	near
					; DATA XREF: .xdata$x:00000868o
		mov	esi, esp
		mov	eax, [ebp-140h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$1 proc	near
					; DATA XREF: .xdata$x:00000870o
		mov	esi, esp
		mov	eax, [ebp-128h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$2 proc	near
					; DATA XREF: .xdata$x:00000878o
		mov	esi, esp
		mov	eax, [ebp-110h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$2 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$3 proc	near
					; DATA XREF: .xdata$x:00000880o
		mov	esi, esp
		mov	eax, [ebp-0F8h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$3 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$4 proc	near
					; DATA XREF: .xdata$x:00000888o
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$4 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-158h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 780h
		dd offset ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; const icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeMatcher'}
		public ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; const	icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ dd offset ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+288o
					; icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+31Eo ...
					; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'`adjustor{4}' (uint)
		dd offset ?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z ; icu_56::UnicodeSet::matches(icu_56::Replaceable const &,int &,int,signed	char)
		dd offset ?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z	; icu_56::UnicodeSet::toPattern(icu_56::UnicodeString &,signed char)
		dd offset ?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z	; icu_56::UnicodeSet::matchesIndexValue(uchar)
		dd offset ?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z ; icu_56::UnicodeSet::addMatchSetTo(icu_56::UnicodeSet	&)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 798h
		dd offset ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeFunctor'}
		public ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
; const	icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ dd offset ??_EUnicodeSet@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+27Co
					; icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+312o ...
					; icu_56::UnicodeSet::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ ; icu_56::UnicodeSet::getDynamicClassID(void)
		dd offset ?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ ;	icu_56::UnicodeSet::clone(void)
		dd offset ?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ ; icu_56::UnicodeFilter::toMatcher(void)
		dd offset ?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ	; icu_56::UnicodeFunctor::toReplacer(void)
		dd offset ?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z ; icu_56::UnicodeFilter::setData(icu_56::TransliterationRuleData const *)
		dd offset ?contains@UnicodeSet@icu_56@@UBECH@Z ; icu_56::UnicodeSet::contains(int)
		dd offset ??8UnicodeSet@icu_56@@UBECABV01@@Z ; icu_56::UnicodeSet::operator==(icu_56::UnicodeSet const &)
		dd offset ?hashCode@UnicodeSet@icu_56@@UBEHXZ ;	icu_56::UnicodeSet::hashCode(void)
		dd offset ?size@UnicodeSet@icu_56@@UBEHXZ ; icu_56::UnicodeSet::size(void)
		dd offset ?isEmpty@UnicodeSet@icu_56@@UBECXZ ; icu_56::UnicodeSet::isEmpty(void)
		dd offset ?contains@UnicodeSet@icu_56@@UBECHH@Z	; icu_56::UnicodeSet::contains(int,int)
		dd offset ?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z ; icu_56::UnicodeSet::containsAll(icu_56::UnicodeSet const &)
		dd offset ?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z	; icu_56::UnicodeSet::add(int,int)
		dd offset ?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::addAll(icu_56::UnicodeSet const &)
		dd offset ?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::retainAll(icu_56::UnicodeSet const &)
		dd offset ?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ;	icu_56::UnicodeSet::complementAll(icu_56::UnicodeSet const &)
		dd offset ?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z ; icu_56::UnicodeSet::removeAll(icu_56::UnicodeSet const &)
		dd offset ?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::retain(int,int)
		dd offset ?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::remove(int,int)
		dd offset ?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z ; icu_56::UnicodeSet::complement(int,int)
		dd offset ?complement@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::complement(void)
		dd offset ?clear@UnicodeSet@icu_56@@UAEAAV12@XZ	; icu_56::UnicodeSet::clear(void)
		dd offset ?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::removeAllStrings(void)
		dd offset ?getRangeCount@UnicodeSet@icu_56@@UBEHXZ ; icu_56::UnicodeSet::getRangeCount(void)
off_800		dd offset ?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
					; icu_56::UnicodeSet::getRangeStart(int)
		dd offset ?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z ; icu_56::UnicodeSet::getRangeEnd(int)
		dd offset ?compact@UnicodeSet@icu_56@@UAEAAV12@XZ ; icu_56::UnicodeSet::compact(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80Ch
		dd offset ??_R4UnicodeString@icu_56@@6B@ ; const icu_56::UnicodeString::`RTTI Complete Object Locator'
		public ??_SUnicodeString@icu_56@@6B@
; const	icu_56::UnicodeString::`local vftable'
??_SUnicodeString@icu_56@@6B@ dd offset	??_EUnicodeString@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+FCo
					; icu_56::UnicodeString::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ ; icu_56::UnicodeString::getDynamicClassID(void)
		dd offset ?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z ; icu_56::UnicodeString::extractBetween(int,int,icu_56::UnicodeString &)
		dd offset ?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z ; icu_56::UnicodeString::handleReplaceBetween(int,int,icu_56::UnicodeString const &)
		dd offset ?copy@UnicodeString@icu_56@@UAEXHHH@Z	; icu_56::UnicodeString::copy(int,int,int)
		dd offset ?hasMetaData@UnicodeString@icu_56@@UBECXZ ; icu_56::UnicodeString::hasMetaData(void)
		dd offset ?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ ;	icu_56::UnicodeString::clone(void)
		dd offset ?getLength@UnicodeString@icu_56@@MBEHXZ ; icu_56::UnicodeString::getLength(void)
		dd offset ?getCharAt@UnicodeString@icu_56@@MBE_WH@Z ; icu_56::UnicodeString::getCharAt(int)
		dd offset ?getChar32At@UnicodeString@icu_56@@MBEHH@Z ; icu_56::UnicodeString::getChar32At(int)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 838h
		dd offset ??_R4IdentifierInfo@icu_56@@6B@ ; const icu_56::IdentifierInfo::`RTTI	Complete Object	Locator'
;
; Exported entry
;
		public ??_7IdentifierInfo@icu_56@@6B@
; const	icu_56::IdentifierInfo::`vftable'
??_7IdentifierInfo@icu_56@@6B@ dd offset ??_EIdentifierInfo@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+45o
					; icu_56::IdentifierInfo::~IdentifierInfo(void)+26o
_rdata		ends			; icu_56::IdentifierInfo::`vector deleting destructor'(uint)

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 840h
__ehfuncinfo$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z dd 19930522h, 5
					; DATA XREF: __ehhandler$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
		align 20h
		dd 1
__unwindtable$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000848o
		dd offset __unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$1
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$2
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$3
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$4
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 88Ch
		public ??_R4IdentifierInfo@icu_56@@6B@
; const	icu_56::IdentifierInfo::`RTTI Complete Object Locator'
??_R4IdentifierInfo@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:00000838o
		dd offset ??_R0?AVIdentifierInfo@icu_56@@@8 ; icu_56::IdentifierInfo `RTTI Type	Descriptor'
		dd offset ??_R3IdentifierInfo@icu_56@@8	; icu_56::IdentifierInfo::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 8A0h
		public ??_R0?AVIdentifierInfo@icu_56@@@8
; class	icu_56::IdentifierInfo `RTTI Type Descriptor'
??_R0?AVIdentifierInfo@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00000898o
					; .rdata$r:icu_56::IdentifierInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avidentifier	db '.?AVIdentifierInfo@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 8C4h
		public ??_R3IdentifierInfo@icu_56@@8
; icu_56::IdentifierInfo::`RTTI	Class Hierarchy	Descriptor'
??_R3IdentifierInfo@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:0000089Co
					; .rdata$r:000008F8o
		dd 2
		dd offset ??_R2IdentifierInfo@icu_56@@8	; icu_56::IdentifierInfo::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 8D4h
		public ??_R2IdentifierInfo@icu_56@@8
; icu_56::IdentifierInfo::`RTTI	Base Class Array'
??_R2IdentifierInfo@icu_56@@8 dd offset	??_R1A@?0A@EA@IdentifierInfo@icu_56@@8
					; DATA XREF: .rdata$r:000008D0o
					; icu_56::IdentifierInfo::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 8E0h
		public ??_R1A@?0A@EA@IdentifierInfo@icu_56@@8
; icu_56::IdentifierInfo::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@IdentifierInfo@icu_56@@8 dd offset ??_R0?AVIdentifierInfo@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::IdentifierInfo::`RTTI Base Class Array'o
					; icu_56::IdentifierInfo `RTTI Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3IdentifierInfo@icu_56@@8	; icu_56::IdentifierInfo::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 8FCh
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:000008D8o
					; .rdata$r:000009C0o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 918h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 938h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000914o
					; .rdata$r:00000968o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 948h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:00000944o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 950h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 96Ch
		public ??_R4UnicodeString@icu_56@@6B@
; const	icu_56::UnicodeString::`RTTI Complete Object Locator'
??_R4UnicodeString@icu_56@@6B@ dd 3 dup(0) ; DATA XREF:	.rdata:0000080Co
		dd offset ??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString `RTTI Type Descriptor'
		dd offset ??_R3UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 980h
		public ??_R0?AVUnicodeString@icu_56@@@8
; class	icu_56::UnicodeString `RTTI Type Descriptor'
??_R0?AVUnicodeString@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00000978o
					; .rdata$r:icu_56::UnicodeString::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avunicodestr	db '.?AVUnicodeString@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9A4h
		public ??_R3UnicodeString@icu_56@@8
; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeString@icu_56@@8 dd	2 dup(0) ; DATA	XREF: .rdata$r:0000097Co
					; .rdata$r:000009E0o
		dd 4
		dd offset ??_R2UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9B4h
		public ??_R2UnicodeString@icu_56@@8
; icu_56::UnicodeString::`RTTI Base Class Array'
??_R2UnicodeString@icu_56@@8 dd	offset ??_R1A@?0A@EA@UnicodeString@icu_56@@8
					; DATA XREF: .rdata$r:000009B0o
					; icu_56::UnicodeString::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Replaceable@icu_56@@8 ;	icu_56::Replaceable::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9C8h
		public ??_R1A@?0A@EA@UnicodeString@icu_56@@8
; icu_56::UnicodeString::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@UnicodeString@icu_56@@8 dd offset	??_R0?AVUnicodeString@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeString::`RTTI Base	Class Array'o
					; icu_56::UnicodeString	`RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9E4h
		public ??_R1A@?0A@EA@Replaceable@icu_56@@8
; icu_56::Replaceable::`RTTI Base Class	Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@Replaceable@icu_56@@8 dd offset ??_R0?AVReplaceable@icu_56@@@8
					; DATA XREF: .rdata$r:000009B8o
					; .rdata$r:icu_56::Replaceable::`RTTI Base Class Array'o
					; icu_56::Replaceable `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0A00h
		public ??_R0?AVReplaceable@icu_56@@@8
; class	icu_56::Replaceable `RTTI Type Descriptor'
??_R0?AVReplaceable@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avreplaceabl	db '.?AVReplaceable@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A24h
		public ??_R3Replaceable@icu_56@@8
; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
??_R3Replaceable@icu_56@@8 dd 2	dup(0)	; DATA XREF: .rdata$r:000009FCo
		dd 3
		dd offset ??_R2Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A34h
		public ??_R2Replaceable@icu_56@@8
; icu_56::Replaceable::`RTTI Base Class	Array'
??_R2Replaceable@icu_56@@8 dd offset ??_R1A@?0A@EA@Replaceable@icu_56@@8
					; DATA XREF: .rdata$r:00000A30o
					; icu_56::Replaceable::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A44h
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:000009BCo
					; .rdata$r:00000A38o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0A60h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A80h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000A5Co
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A90h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00000A8Co
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A9Ch
		public ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
; const	icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeFunctor'}
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ dd	3 dup(0) ; DATA	XREF: .rdata:00000798o
		dd offset ??_R0?AVUnicodeSet@icu_56@@@8	; icu_56::UnicodeSet `RTTI Type	Descriptor'
		dd offset ??_R3UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0AB0h
		public ??_R0?AVUnicodeSet@icu_56@@@8
; class	icu_56::UnicodeSet `RTTI Type Descriptor'
??_R0?AVUnicodeSet@icu_56@@@8 dd offset	??_7type_info@@6B@ ; DATA XREF:	.rdata$r:00000AA8o
					; .rdata$r:icu_56::UnicodeSet::`RTTI Base Class	Descriptor at (0,-1,0,64)'o ...
					; const	type_info::`vftable'
		align 8
a_?avunicodeset	db '.?AVUnicodeSet@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0AD0h
		public ??_R3UnicodeSet@icu_56@@8
; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeSet@icu_56@@8 dd 0		; DATA XREF: .rdata$r:00000AACo
					; .rdata$r:00000B14o ...
		dd 1, 6
		dd offset ??_R2UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0AE0h
		public ??_R2UnicodeSet@icu_56@@8
; icu_56::UnicodeSet::`RTTI Base Class Array'
??_R2UnicodeSet@icu_56@@8 dd offset ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
					; DATA XREF: .rdata$r:00000ADCo
					; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8	; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		dd offset ??_R13?0A@EA@UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0AFCh
		public ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 dd offset ??_R0?AVUnicodeSet@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeSet::`RTTI	Base Class Array'o
					; icu_56::UnicodeSet `RTTI Type	Descriptor'
		dd 5, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0B18h
		public ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 dd offset	??_R0?AVUnicodeFilter@icu_56@@@8
					; DATA XREF: .rdata$r:00000AE4o
					; .rdata$r:icu_56::UnicodeFilter::`RTTI	Base Class Array'o
					; icu_56::UnicodeFilter	`RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0B34h
		public ??_R0?AVUnicodeFilter@icu_56@@@8
; class	icu_56::UnicodeFilter `RTTI Type Descriptor'
??_R0?AVUnicodeFilter@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeFilter::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avunicodefil	db '.?AVUnicodeFilter@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0B58h
		public ??_R3UnicodeFilter@icu_56@@8
; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
??_R3UnicodeFilter@icu_56@@8 dd	0	; DATA XREF: .rdata$r:00000B30o
		dd 1, 5
		dd offset ??_R2UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0B68h
		public ??_R2UnicodeFilter@icu_56@@8
; icu_56::UnicodeFilter::`RTTI Base Class Array'
??_R2UnicodeFilter@icu_56@@8 dd	offset ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
					; DATA XREF: .rdata$r:00000B64o
					; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		dd offset ??_R13?0A@EA@UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0B80h
		public ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 dd offset ??_R0?AVUnicodeFunctor@icu_56@@@8
					; DATA XREF: .rdata$r:00000AE8o
					; .rdata$r:00000B6Co ...
					; icu_56::UnicodeFunctor `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeFunctor@icu_56@@8	; icu_56::UnicodeFunctor::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0B9Ch
		public ??_R0?AVUnicodeFunctor@icu_56@@@8
; class	icu_56::UnicodeFunctor `RTTI Type Descriptor'
??_R0?AVUnicodeFunctor@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avunicodefun	db '.?AVUnicodeFunctor@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BC0h
		public ??_R3UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Class Hierarchy	Descriptor'
??_R3UnicodeFunctor@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00000B98o
		dd 3
		dd offset ??_R2UnicodeFunctor@icu_56@@8	; icu_56::UnicodeFunctor::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BD0h
		public ??_R2UnicodeFunctor@icu_56@@8
; icu_56::UnicodeFunctor::`RTTI	Base Class Array'
??_R2UnicodeFunctor@icu_56@@8 dd offset	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
					; DATA XREF: .rdata$r:00000BCCo
					; icu_56::UnicodeFunctor::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0BE0h
		public ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 dd offset	??_R0?AVUnicodeMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:00000AF4o
					; .rdata$r:00000B78o
					; icu_56::UnicodeMatcher `RTTI Type Descriptor'
		align 8
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0BFCh
		public ??_R0?AVUnicodeMatcher@icu_56@@@8
; class	icu_56::UnicodeMatcher `RTTI Type Descriptor'
??_R0?AVUnicodeMatcher@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avunicodemat	db '.?AVUnicodeMatcher@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C20h
		public ??_R3UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
??_R3UnicodeMatcher@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00000BF8o
					; .rdata$r:00000C50o
		dd 1
		dd offset ??_R2UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C30h
		public ??_R2UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Array'
??_R2UnicodeMatcher@icu_56@@8 dd offset	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
					; DATA XREF: .rdata$r:00000C2Co
					; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C38h
		public ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
; icu_56::UnicodeMatcher::`RTTI	Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 dd offset ??_R0?AVUnicodeMatcher@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UnicodeMatcher::`RTTI Base Class Array'o
					; icu_56::UnicodeMatcher `RTTI Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UnicodeMatcher@icu_56@@8	; icu_56::UnicodeMatcher::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0C54h
		public ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; const	icu_56::UnicodeSet::`RTTI Complete Object Locator'{for `icu_56::UnicodeMatcher'}
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ dd	0 ; DATA XREF: .rdata:00000780o
		dd 4, 0
		dd offset ??_R0?AVUnicodeSet@icu_56@@@8	; icu_56::UnicodeSet `RTTI Type	Descriptor'
		dd offset ??_R3UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C68h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+362p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C94h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+A3p
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+24p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CC0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UnicodeString::`scalar deleting destructor'(unsigned int)
		public ??_GUnicodeString@icu_56@@UAEPAXI@Z
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_D13
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_D13:				; CODE XREF: icu_56::UnicodeString::`scalar deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUnicodeString@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D2Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::umtx_initOnce(icu_56 *__hidden this, struct icu_56::UInitOnce *,	void (__cdecl *)(enum UErrorCode *), enum UErrorCode *)
		public ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+95p

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; struct icu_56::UInitOnce *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_D64
		jmp	loc_DE9
; ---------------------------------------------------------------------------

loc_D64:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+31j
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	?umtx_loadAcquire@icu_56@@YAHACJ@Z ; icu_56::umtx_loadAcquire(long volatile &)
		add	esp, 4
		cmp	eax, 2
		jz	short loc_DC8
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ;	icu_56::umtx_initImplPreInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_DC8
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		call	[ebp+arg_4]
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+Destination]
		mov	ecx, [ebp+arg_8]
		mov	edx, [ecx]
		mov	[eax+4], edx
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_DE9
; ---------------------------------------------------------------------------

loc_DC8:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+47j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+64j
		mov	eax, [ebp+Destination]
		mov	ecx, [eax+4]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_DE9
		mov	eax, [ebp+arg_8]
		mov	ecx, [ebp+Destination]
		mov	edx, [ecx+4]
		mov	[eax], edx

loc_DE9:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+33j
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode	&),UErrorCode &)+9Aj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E00h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::umtx_loadAcquire(volatile	LONG *Destination, volatile __int32 *)
		public ?umtx_loadAcquire@icu_56@@YAHACJ@Z
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+3Cp
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	0		; Comperand
		push	0		; Exchange
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	dword ptr ds:__imp__InterlockedCompareExchange@12 ; InterlockedCompareExchange(x,x,x)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_loadAcquire@icu_56@@YAHACJ@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E4Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UInitOnce IdentifierInfo_init
_IdentifierInfo_init proc near		; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+8Bo

var_13C		= dword	ptr -13Ch
var_134		= dword	ptr -134h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 13Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_13C]
		mov	ecx, 4Fh ; 'O'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	34h ; '4'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_128], eax
		cmp	[ebp+var_128], 0
		jz	short loc_ECD
		mov	esi, esp
		push	7Fh ; ''       ; int
		push	0		; int
		mov	ecx, [ebp+var_128] ; this
		call	dword ptr ds:__imp_??0UnicodeSet@icu_56@@QAE@HH@Z ; icu_56::UnicodeSet::UnicodeSet(int,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_128]
		mov	dword ptr [eax], offset	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}
		mov	ecx, [ebp+var_128]
		mov	dword ptr [ecx+4], offset ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ;	const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}
		mov	edx, [ebp+var_128]
		mov	[ebp+var_13C], edx
		jmp	short loc_ED7
; ---------------------------------------------------------------------------

loc_ECD:				; CODE XREF: _IdentifierInfo_init+3Fj
		mov	[ebp+var_13C], 0

loc_ED7:				; CODE XREF: _IdentifierInfo_init+7Fj
		mov	eax, [ebp+var_13C]
		mov	[ebp+var_134], eax
		mov	ecx, [ebp+var_134]
		mov	ds:_ASCII, ecx
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_110], eax
		cmp	[ebp+var_110], 0
		jz	short loc_F25
		mov	ecx, [ebp+var_110] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_13C], eax
		jmp	short loc_F2F
; ---------------------------------------------------------------------------

loc_F25:				; CODE XREF: _IdentifierInfo_init+C4j
		mov	[ebp+var_13C], 0

loc_F2F:				; CODE XREF: _IdentifierInfo_init+D7j
		mov	eax, [ebp+var_13C]
		mov	[ebp+var_11C], eax
		mov	ecx, [ebp+var_11C]
		mov	ds:_JAPANESE, ecx
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F8], eax
		cmp	[ebp+var_F8], 0
		jz	short loc_F7D
		mov	ecx, [ebp+var_F8] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_13C], eax
		jmp	short loc_F87
; ---------------------------------------------------------------------------

loc_F7D:				; CODE XREF: _IdentifierInfo_init+11Cj
		mov	[ebp+var_13C], 0

loc_F87:				; CODE XREF: _IdentifierInfo_init+12Fj
		mov	eax, [ebp+var_13C]
		mov	[ebp+var_104], eax
		mov	ecx, [ebp+var_104]
		mov	ds:_CHINESE, ecx
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		cmp	[ebp+var_E0], 0
		jz	short loc_FD5
		mov	ecx, [ebp+var_E0] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_13C], eax
		jmp	short loc_FDF
; ---------------------------------------------------------------------------

loc_FD5:				; CODE XREF: _IdentifierInfo_init+174j
		mov	[ebp+var_13C], 0

loc_FDF:				; CODE XREF: _IdentifierInfo_init+187j
		mov	eax, [ebp+var_13C]
		mov	[ebp+var_EC], eax
		mov	ecx, [ebp+var_EC]
		mov	ds:_KOREAN, ecx
		mov	esi, esp
		push	18h		; unsigned int

loc_FFB:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C8], eax
		cmp	[ebp+var_C8], 0
		jz	short loc_102D
		mov	ecx, [ebp+var_C8] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_13C], eax
		jmp	short loc_1037
; ---------------------------------------------------------------------------

loc_102D:				; CODE XREF: _IdentifierInfo_init+1CCj
		mov	[ebp+var_13C], 0

loc_1037:				; CODE XREF: _IdentifierInfo_init+1DFj
		mov	eax, [ebp+var_13C]
		mov	[ebp+var_D4], eax
		mov	ecx, [ebp+var_D4]
		mov	ds:_CONFUSABLE_WITH_LATIN, ecx
		cmp	ds:_ASCII, 0
		jz	short loc_107C
		cmp	ds:_JAPANESE, 0
		jz	short loc_107C
		cmp	ds:_CHINESE, 0
		jz	short loc_107C
		cmp	ds:_KOREAN, 0
		jz	short loc_107C
		cmp	ds:_CONFUSABLE_WITH_LATIN, 0
		jnz	short loc_108A

loc_107C:				; CODE XREF: _IdentifierInfo_init+20Aj
					; _IdentifierInfo_init+213j ...
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 7
		jmp	loc_1167
; ---------------------------------------------------------------------------

loc_108A:				; CODE XREF: _IdentifierInfo_init+22Ej
		mov	esi, esp
		mov	ecx, ds:_ASCII	; this
		call	dword ptr ds:__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ	; icu_56::UnicodeSet::freeze(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		push	eax
		push	16h
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	14h
		mov	edx, [ebp+arg_0]
		push	edx
		push	11h
		mov	eax, [ebp+arg_0]
		push	eax
		push	19h
		mov	ecx, ds:_JAPANESE
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	eax, [ebp+arg_0]
		push	eax
		push	5
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	11h
		mov	edx, [ebp+arg_0]
		push	edx
		push	19h
		mov	ecx, ds:_CHINESE
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	eax, [ebp+arg_0]
		push	eax
		push	12h
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	11h
		mov	edx, [ebp+arg_0]
		push	edx
		push	19h
		mov	ecx, ds:_KOREAN
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	eax, [ebp+arg_0]
		push	eax
		push	6
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	0Eh
		mov	edx, [ebp+arg_0]
		push	edx
		push	8
		mov	ecx, ds:_CONFUSABLE_WITH_LATIN
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		mov	ecx, eax
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		push	offset _IdentifierInfo_cleanup
		push	0
		call	_ucln_i18n_registerCleanup_56
		add	esp, 8

loc_1167:				; CODE XREF: _IdentifierInfo_init+239j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 13Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_IdentifierInfo_init endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 117Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_IdentifierInfo_cleanup	proc near	; DATA XREF: _IdentifierInfo_init+30Co

var_13C		= dword	ptr -13Ch
var_134		= dword	ptr -134h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_C8		= dword	ptr -0C8h

		push	ebp
		mov	ebp, esp
		sub	esp, 13Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_13C]
		mov	ecx, 4Fh ; 'O'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, ds:_ASCII
		mov	[ebp+var_128], eax
		mov	ecx, [ebp+var_128]
		mov	[ebp+var_134], ecx
		cmp	[ebp+var_134], 0
		jz	short loc_11DF
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_134]
		mov	eax, [edx]
		mov	ecx, [ebp+var_134]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_13C], eax
		jmp	short loc_11E9
; ---------------------------------------------------------------------------

loc_11DF:				; CODE XREF: _IdentifierInfo_cleanup+3Cj
		mov	[ebp+var_13C], 0

loc_11E9:				; CODE XREF: _IdentifierInfo_cleanup+61j
		mov	ds:_ASCII, 0
		mov	eax, ds:_JAPANESE
		mov	[ebp+var_110], eax
		mov	ecx, [ebp+var_110]
		mov	[ebp+var_11C], ecx
		cmp	[ebp+var_11C], 0
		jz	short loc_1228
		push	1
		mov	ecx, [ebp+var_11C]
		call	??_GScriptSet@icu_56@@QAEPAXI@Z	; icu_56::ScriptSet::`scalar deleting destructor'(uint)
		mov	[ebp+var_13C], eax
		jmp	short loc_1232
; ---------------------------------------------------------------------------

loc_1228:				; CODE XREF: _IdentifierInfo_cleanup+95j
		mov	[ebp+var_13C], 0

loc_1232:				; CODE XREF: _IdentifierInfo_cleanup+AAj
		mov	ds:_JAPANESE, 0
		mov	eax, ds:_CHINESE
		mov	[ebp+var_F8], eax
		mov	ecx, [ebp+var_F8]
		mov	[ebp+var_104], ecx
		cmp	[ebp+var_104], 0
		jz	short loc_1271
		push	1
		mov	ecx, [ebp+var_104]
		call	??_GScriptSet@icu_56@@QAEPAXI@Z	; icu_56::ScriptSet::`scalar deleting destructor'(uint)
		mov	[ebp+var_13C], eax
		jmp	short loc_127B
; ---------------------------------------------------------------------------

loc_1271:				; CODE XREF: _IdentifierInfo_cleanup+DEj
		mov	[ebp+var_13C], 0

loc_127B:				; CODE XREF: _IdentifierInfo_cleanup+F3j
		mov	ds:_CHINESE, 0
		mov	eax, ds:_KOREAN
		mov	[ebp+var_E0], eax
		mov	ecx, [ebp+var_E0]
		mov	[ebp+var_EC], ecx
		cmp	[ebp+var_EC], 0
		jz	short loc_12BA
		push	1
		mov	ecx, [ebp+var_EC]
		call	??_GScriptSet@icu_56@@QAEPAXI@Z	; icu_56::ScriptSet::`scalar deleting destructor'(uint)
		mov	[ebp+var_13C], eax
		jmp	short loc_12C4
; ---------------------------------------------------------------------------

loc_12BA:				; CODE XREF: _IdentifierInfo_cleanup+127j
		mov	[ebp+var_13C], 0

loc_12C4:				; CODE XREF: _IdentifierInfo_cleanup+13Cj
		mov	ds:_KOREAN, 0
		mov	eax, ds:_CONFUSABLE_WITH_LATIN
		mov	[ebp+var_C8], eax
		mov	ecx, [ebp+var_C8]
		mov	[ebp+var_D4], ecx
		cmp	[ebp+var_D4], 0
		jz	short loc_1303
		push	1
		mov	ecx, [ebp+var_D4]
		call	??_GScriptSet@icu_56@@QAEPAXI@Z	; icu_56::ScriptSet::`scalar deleting destructor'(uint)
		mov	[ebp+var_13C], eax
		jmp	short loc_130D
; ---------------------------------------------------------------------------

loc_1303:				; CODE XREF: _IdentifierInfo_cleanup+170j
		mov	[ebp+var_13C], 0

loc_130D:				; CODE XREF: _IdentifierInfo_cleanup+185j
		mov	ds:_CONFUSABLE_WITH_LATIN, 0
		mov	ecx, offset _gIdentifierInfoInitOnce ; this
		call	?reset@UInitOnce@icu_56@@QAEXXZ	; icu_56::UInitOnce::reset(void)
		mov	al, 1
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 13Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_IdentifierInfo_cleanup	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1338h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::UInitOnce::reset(icu_56::UInitOnce *__hidden this)
		public ?reset@UInitOnce@icu_56@@QAEXXZ
?reset@UInitOnce@icu_56@@QAEXXZ	proc near ; CODE XREF: _IdentifierInfo_cleanup+1A0p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], 0
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?reset@UInitOnce@icu_56@@QAEXXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 136Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void * __thiscall icu_56::ScriptSet::`scalar deleting	destructor'(unsigned int)
		public ??_GScriptSet@icu_56@@QAEPAXI@Z
??_GScriptSet@icu_56@@QAEPAXI@Z	proc near ; CODE XREF: _IdentifierInfo_cleanup+9Fp
					; _IdentifierInfo_cleanup+E8p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::~ScriptSet(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_13B5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_13B5:				; CODE XREF: icu_56::ScriptSet::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GScriptSet@icu_56@@QAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UnicodeSet::`scalar	deleting destructor'(unsigned int)
		public ??_GUnicodeSet@icu_56@@UAEPAXI@Z
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1UnicodeSet@icu_56@@UAE@XZ	; icu_56::UnicodeSet::~UnicodeSet(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1423
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1423:				; CODE XREF: icu_56::UnicodeSet::`scalar deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 143Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::IdentifierInfo::~IdentifierInfo(icu_56::IdentifierInfo *__hidden this)
		public ??1IdentifierInfo@icu_56@@UAE@XZ
??1IdentifierInfo@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::IdentifierInfo::`scalar deleting destructor'(uint)+26p
					; icu_56::IdentifierInfo::`vector deleting destructor'(uint)+6Ep
					; DATA XREF: ...

var_148		= dword	ptr -148h
var_140		= dword	ptr -140h
var_134		= dword	ptr -134h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 148h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_148]
		mov	ecx, 52h ; 'R'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7IdentifierInfo@icu_56@@6B@ ; const icu_56::IdentifierInfo::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		mov	[ebp+var_134], ecx
		mov	edx, [ebp+var_134]
		mov	[ebp+var_140], edx
		cmp	[ebp+var_140], 0
		jz	short loc_14AE
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_140]
		mov	edx, [eax]
		mov	ecx, [ebp+var_140]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_148], eax
		jmp	short loc_14B8
; ---------------------------------------------------------------------------

loc_14AE:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+4Bj
		mov	[ebp+var_148], 0

loc_14B8:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+70j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		mov	[ebp+var_11C], ecx
		mov	edx, [ebp+var_11C]
		mov	[ebp+var_128], edx
		cmp	[ebp+var_128], 0
		jz	short loc_14EE
		push	1
		mov	ecx, [ebp+var_128]
		call	??_GScriptSet@icu_56@@QAEPAXI@Z	; icu_56::ScriptSet::`scalar deleting destructor'(uint)
		mov	[ebp+var_148], eax
		jmp	short loc_14F8
; ---------------------------------------------------------------------------

loc_14EE:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+9Bj
		mov	[ebp+var_148], 0

loc_14F8:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+B0j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+0Ch]
		push	ecx
		call	_uhash_close_56
		add	esp, 4
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]
		mov	[ebp+var_104], ecx
		mov	edx, [ebp+var_104]
		mov	[ebp+var_110], edx
		cmp	[ebp+var_110], 0
		jz	short loc_153D
		push	1
		mov	ecx, [ebp+var_110]
		call	??_GScriptSet@icu_56@@QAEPAXI@Z	; icu_56::ScriptSet::`scalar deleting destructor'(uint)
		mov	[ebp+var_148], eax
		jmp	short loc_1547
; ---------------------------------------------------------------------------

loc_153D:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+EAj
		mov	[ebp+var_148], 0

loc_1547:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+FFj
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		mov	[ebp+var_EC], ecx
		mov	edx, [ebp+var_EC]
		mov	[ebp+var_F8], edx
		cmp	[ebp+var_F8], 0
		jz	short loc_158D
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_F8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_F8]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_148], eax
		jmp	short loc_1597
; ---------------------------------------------------------------------------

loc_158D:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+12Aj
		mov	[ebp+var_148], 0

loc_1597:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+14Fj
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+18h]
		mov	[ebp+var_D4], ecx
		mov	edx, [ebp+var_D4]
		mov	[ebp+var_E0], edx
		cmp	[ebp+var_E0], 0
		jz	short loc_15DD
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_E0]
		mov	edx, [eax]
		mov	ecx, [ebp+var_E0]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_148], eax
		jmp	short loc_15E7
; ---------------------------------------------------------------------------

loc_15DD:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+17Aj
		mov	[ebp+var_148], 0

loc_15E7:				; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+19Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 148h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1IdentifierInfo@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 15FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::IdentifierInfo	*__thiscall icu_56::IdentifierInfo::clear(icu_56::IdentifierInfo *__hidden this)
		public ?clear@IdentifierInfo@icu_56@@AAEAAV12@XZ
?clear@IdentifierInfo@icu_56@@AAEAAV12@XZ proc near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+7Ep

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]	; this
		call	?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ	; icu_56::ScriptSet::resetAll(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+0Ch]
		push	ecx
		call	_uhash_removeAll_56
		add	esp, 4
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		mov	edx, [ebp+var_8]
		mov	eax, [edx+14h]
		mov	edx, [ecx]
		mov	esi, esp
		mov	ecx, eax
		mov	eax, [edx+58h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]	; this
		call	?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ	; icu_56::ScriptSet::resetAll(void)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?clear@IdentifierInfo@icu_56@@AAEAAV12@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 167Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::IdentifierInfo	*__thiscall icu_56::IdentifierInfo::setIdentifierProfile(icu_56::IdentifierInfo	*this, const struct icu_56::UnicodeSet *)
		public ?setIdentifierProfile@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeSet@2@@Z
?setIdentifierProfile@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeSet@2@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+18h]
		call	dword ptr ds:__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UnicodeSet::operator=(icu_56::UnicodeSet const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setIdentifierProfile@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeSet@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 16D4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::UnicodeSet *__thiscall icu_56::IdentifierInfo::getIdentifierProfile(icu_56::IdentifierInfo *__hidden this)
		public ?getIdentifierProfile@IdentifierInfo@icu_56@@QBEABVUnicodeSet@2@XZ
?getIdentifierProfile@IdentifierInfo@icu_56@@QBEABVUnicodeSet@2@XZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+18h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getIdentifierProfile@IdentifierInfo@icu_56@@QBEABVUnicodeSet@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1704h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::IdentifierInfo	*__thiscall icu_56::IdentifierInfo::setIdentifier(icu_56::IdentifierInfo *this,	const struct icu_56::UnicodeString *, enum UErrorCode *)
		public ?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z proc near

var_980		= dword	ptr -980h
var_978		= dword	ptr -978h
var_96C		= dword	ptr -96Ch
var_960		= dword	ptr -960h
var_954		= dword	ptr -954h
var_888		= dword	ptr -888h
var_87C		= dword	ptr -87Ch
var_870		= dword	ptr -870h
var_864		= dword	ptr -864h
var_858		= dword	ptr -858h
var_84C		= dword	ptr -84Ch
var_840		= dword	ptr -840h
var_834		= dword	ptr -834h
var_828		= dword	ptr -828h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 974h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_980]
		mov	ecx, 25Dh
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_1766
		mov	eax, [ebp+var_18]
		jmp	loc_1B3D
; ---------------------------------------------------------------------------

loc_1766:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+58j
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+4]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_18] ; this
		call	?clear@IdentifierInfo@icu_56@@AAEAAV12@XZ ; icu_56::IdentifierInfo::clear(void)
		lea	ecx, [ebp+var_38] ; this
		call	??0ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::ScriptSet(void)
		mov	[ebp+var_4], 0
		mov	[ebp+var_50], 0
		jmp	short loc_17B4
; ---------------------------------------------------------------------------

loc_179F:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &):loc_19CBj
		mov	eax, 0FFFFh
		cmp	eax, [ebp+var_44]
		sbb	ecx, ecx
		neg	ecx
		add	ecx, 1
		add	ecx, [ebp+var_50]
		mov	[ebp+var_50], ecx

loc_17B4:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+99j
		mov	esi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_50], eax
		jge	loc_19D0
		mov	esi, esp
		mov	eax, [ebp+var_50]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z ; icu_56::UnicodeString::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		push	eax
		call	_u_charType_56
		add	esp, 4
		movsx	ecx, al
		cmp	ecx, 9
		jnz	short loc_1828
		mov	eax, [ebp+var_44]
		push	eax
		call	_u_getNumericValue_56
		add	esp, 4
		call	__ftol2_sse
		mov	ecx, [ebp+var_44]
		sub	ecx, eax
		mov	esi, esp
		push	ecx		; int
		mov	edx, [ebp+var_18]
		mov	ecx, [edx+14h]	; this
		call	dword ptr ds:__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z	; icu_56::UnicodeSet::add(int)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1828:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+F6j
		mov	eax, [ebp+arg_4]
		push	eax
		push	1F4h
		lea	ecx, [ebp+var_828]
		push	ecx
		mov	edx, [ebp+var_44]
		push	edx
		call	_uscript_getScriptExtensions_56
		add	esp, 10h
		mov	[ebp+var_834], eax
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_1882
		mov	eax, [ebp+var_18]
		mov	[ebp+var_978], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_38] ; this
		call	??1ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::~ScriptSet(void)
		mov	eax, [ebp+var_978]
		jmp	loc_1B3D
; ---------------------------------------------------------------------------

loc_1882:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+159j
		lea	ecx, [ebp+var_38] ; this
		call	?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ	; icu_56::ScriptSet::resetAll(void)
		mov	[ebp+var_840], 0
		jmp	short loc_18A5
; ---------------------------------------------------------------------------

loc_1896:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+1C9j
		mov	eax, [ebp+var_840]
		add	eax, 1
		mov	[ebp+var_840], eax

loc_18A5:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+190j
		mov	eax, [ebp+var_840]
		cmp	eax, [ebp+var_834]
		jge	short loc_18CF
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+var_840]
		mov	edx, [ebp+ecx*4+var_828]
		push	edx
		lea	ecx, [ebp+var_38]
		call	?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::set(UScriptCode,UErrorCode &)
		jmp	short loc_1896
; ---------------------------------------------------------------------------

loc_18CF:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+1ADj
		mov	eax, [ebp+arg_4]
		push	eax
		push	0
		lea	ecx, [ebp+var_38]
		call	?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::reset(UScriptCode,UErrorCode &)
		mov	eax, [ebp+arg_4]
		push	eax
		push	1
		lea	ecx, [ebp+var_38]
		call	?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::reset(UScriptCode,UErrorCode &)
		lea	ecx, [ebp+var_38] ; this
		call	?countMembers@ScriptSet@icu_56@@QBEHXZ ; icu_56::ScriptSet::countMembers(void)
		mov	[ebp+var_980], eax
		cmp	[ebp+var_980], 0
		jz	short loc_190D
		cmp	[ebp+var_980], 1
		jz	short loc_1912
		jmp	short loc_1926
; ---------------------------------------------------------------------------

loc_190D:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+1FCj
		jmp	loc_19CB
; ---------------------------------------------------------------------------

loc_1912:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+205j
		lea	eax, [ebp+var_38]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+8]	; this
		call	?Union@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::ScriptSet::Union(icu_56::ScriptSet	const &)
		jmp	loc_19CB
; ---------------------------------------------------------------------------

loc_1926:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+207j
		lea	eax, [ebp+var_38]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+8]	; this
		call	?intersects@ScriptSet@icu_56@@QBECABV12@@Z ; icu_56::ScriptSet::intersects(icu_56::ScriptSet const &)
		movsx	edx, al
		test	edx, edx
		jnz	loc_19CB
		lea	eax, [ebp+var_38]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_geti_56
		add	esp, 8
		test	eax, eax
		jnz	short loc_19CB
		mov	esi, esp
		push	18h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_960], eax
		mov	byte ptr [ebp+var_4], 1
		cmp	[ebp+var_960], 0
		jz	short loc_1995
		lea	eax, [ebp+var_38]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_960] ; this
		call	??0ScriptSet@icu_56@@QAE@ABV01@@Z ; icu_56::ScriptSet::ScriptSet(icu_56::ScriptSet const &)
		mov	[ebp+var_980], eax
		jmp	short loc_199F
; ---------------------------------------------------------------------------

loc_1995:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+278j
		mov	[ebp+var_980], 0

loc_199F:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+28Fj
		mov	ecx, [ebp+var_980]
		mov	[ebp+var_96C], ecx
		mov	byte ptr [ebp+var_4], 0
		mov	edx, [ebp+arg_4]
		push	edx
		push	1
		mov	eax, [ebp+var_96C]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_puti_56
		add	esp, 10h

loc_19CB:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &):loc_190Dj
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+21Dj ...
		jmp	loc_179F
; ---------------------------------------------------------------------------

loc_19D0:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+C5j
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+0Ch]
		push	ecx
		call	_uhash_count_56
		add	esp, 4
		test	eax, eax
		jle	loc_1B01
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+10h]	; this
		call	?setAll@ScriptSet@icu_56@@QAEAAV12@XZ ;	icu_56::ScriptSet::setAll(void)
		mov	[ebp+var_84C], 0FFFFFFFFh

loc_19FC:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &):loc_1AFCj
		lea	eax, [ebp+var_84C]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_nextElement_56
		add	esp, 8
		mov	[ebp+var_858], eax
		cmp	[ebp+var_858], 0
		jnz	short loc_1A26
		jmp	loc_1B01
; ---------------------------------------------------------------------------

loc_1A26:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+31Bj
		mov	eax, [ebp+var_858]
		mov	ecx, [eax+8]
		mov	[ebp+var_864], ecx
		mov	eax, [ebp+var_864]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+8]	; this
		call	?intersects@ScriptSet@icu_56@@QBECABV12@@Z ; icu_56::ScriptSet::intersects(icu_56::ScriptSet const &)
		movsx	edx, al
		test	edx, edx
		jz	short loc_1A69
		mov	eax, [ebp+var_858]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_removeElement_56
		add	esp, 8
		jmp	loc_1AFC
; ---------------------------------------------------------------------------

loc_1A69:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+348j
		mov	eax, [ebp+var_864]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_18]
		mov	ecx, [ecx+10h]	; this
		call	?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::ScriptSet::intersect(icu_56::ScriptSet	const &)
		mov	[ebp+var_870], 0FFFFFFFFh

loc_1A85:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &):loc_1AFAj
		lea	eax, [ebp+var_870]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_nextElement_56
		add	esp, 8
		mov	[ebp+var_87C], eax
		cmp	[ebp+var_87C], 0
		jnz	short loc_1AAC
		jmp	short loc_1AFC
; ---------------------------------------------------------------------------

loc_1AAC:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+3A4j
		mov	eax, [ebp+var_87C]
		mov	ecx, [eax+8]
		mov	[ebp+var_888], ecx
		mov	eax, [ebp+var_864]
		cmp	eax, [ebp+var_888]
		jz	short loc_1AFA
		mov	eax, [ebp+var_888]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_864] ; this
		call	?contains@ScriptSet@icu_56@@QBECABV12@@Z ; icu_56::ScriptSet::contains(icu_56::ScriptSet const &)
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_1AFA
		mov	eax, [ebp+var_858]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_removeElement_56
		add	esp, 8
		jmp	short loc_1AFC
; ---------------------------------------------------------------------------

loc_1AFA:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+3C3j
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+3DCj
		jmp	short loc_1A85
; ---------------------------------------------------------------------------

loc_1AFC:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+360j
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+3A6j ...
		jmp	loc_19FC
; ---------------------------------------------------------------------------

loc_1B01:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+2DDj
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+31Dj
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+0Ch]
		push	ecx
		call	_uhash_count_56
		add	esp, 4
		test	eax, eax
		jnz	short loc_1B1F
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+10h]	; this
		call	?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ	; icu_56::ScriptSet::resetAll(void)

loc_1B1F:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+40Ej
		mov	eax, [ebp+var_18]
		mov	[ebp+var_954], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_38] ; this
		call	??1ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::~ScriptSet(void)
		mov	eax, [ebp+var_954]

loc_1B3D:				; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+5Dj
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+179j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN39
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 980h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z endp ; sp-analysis	failed

; ---------------------------------------------------------------------------
		align 4
$LN39		dd 4			; DATA XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+43Do
		dd offset $LN38
$LN38		dd 0FFFFFFC8h, 18h	; DATA XREF: .text:00001B80o
		dd offset $LN33		; "scriptsForCP"
		dd 0FFFFF7D8h, 7D0h
		dd offset $LN34		; "extensions"
		dd 0FFFFF7B4h, 4
		dd offset $LN35		; "it"
		db 90h
		db 0F7h, 2 dup(0FFh)
		dd 4
		dd offset $LN36		; "otherIt"
$LN36		db 'otherIt',0          ; DATA XREF: .text:00001BB0o
$LN35		db 'it',0               ; DATA XREF: .text:00001BA4o
$LN34		db 'extensions',0       ; DATA XREF: .text:00001B98o
$LN33		db 'scriptsForCP',0     ; DATA XREF: .text:00001B8Co
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1BD8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00001C28o
		lea	ecx, [ebp-38h]	; this
		jmp	??1ScriptSet@icu_56@@QAE@XZ ; icu_56::ScriptSet::~ScriptSet(void)
__unwindfunclet$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00001C30o
		mov	esi, esp
		mov	eax, [ebp-960h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-984h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1C24h
__unwindtable$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001C3Co
		dd offset __unwindfunclet$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
		align 10h
		dd offset __unwindfunclet$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z dd 19930522h,	2
					; DATA XREF: __ehhandler$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1C58h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::UnicodeString *__thiscall icu_56::IdentifierInfo::getIdentifier(icu_56::IdentifierInfo *__hidden	this)
		public ?getIdentifier@IdentifierInfo@icu_56@@QBEPBVUnicodeString@2@XZ
?getIdentifier@IdentifierInfo@icu_56@@QBEPBVUnicodeString@2@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getIdentifier@IdentifierInfo@icu_56@@QBEPBVUnicodeString@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1C88h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::ScriptSet *__thiscall icu_56::IdentifierInfo::getScripts(icu_56::IdentifierInfo *__hidden this)
		public ?getScripts@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ
?getScripts@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getScripts@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1CB8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct UHashtable *__thiscall icu_56::IdentifierInfo::getAlternates(icu_56::IdentifierInfo *__hidden this)
		public ?getAlternates@IdentifierInfo@icu_56@@QBEPBUUHashtable@@XZ
?getAlternates@IdentifierInfo@icu_56@@QBEPBUUHashtable@@XZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+0Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getAlternates@IdentifierInfo@icu_56@@QBEPBUUHashtable@@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1CE8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::UnicodeSet *__thiscall icu_56::IdentifierInfo::getNumerics(icu_56::IdentifierInfo *__hidden this)
		public ?getNumerics@IdentifierInfo@icu_56@@QBEPBVUnicodeSet@2@XZ
?getNumerics@IdentifierInfo@icu_56@@QBEPBVUnicodeSet@2@XZ proc near
					; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+49p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+14h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getNumerics@IdentifierInfo@icu_56@@QBEPBVUnicodeSet@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D18h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::ScriptSet *__thiscall icu_56::IdentifierInfo::getCommonAmongAlternates(icu_56::IdentifierInfo *__hidden this)
		public ?getCommonAmongAlternates@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ
?getCommonAmongAlternates@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+10h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getCommonAmongAlternates@IdentifierInfo@icu_56@@QBEPBVScriptSet@2@XZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D48h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: enum	URestrictionLevel __thiscall icu_56::IdentifierInfo::getRestrictionLevel(enum  UErrorCode &)const
		public ?getRestrictionLevel@IdentifierInfo@icu_56@@QBE?AW4URestrictionLevel@@AAW4UErrorCode@@@Z
?getRestrictionLevel@IdentifierInfo@icu_56@@QBE?AW4URestrictionLevel@@AAW4UErrorCode@@@Z proc near

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx		; struct icu_56::UnicodeString *
		mov	edx, [ebp+var_8]
		mov	ecx, [edx+18h]	; this
		call	dword ptr ds:__imp_?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsAll(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_1DBD
		mov	ecx, [ebp+var_8] ; this
		call	?getNumerics@IdentifierInfo@icu_56@@QBEPBVUnicodeSet@2@XZ ; icu_56::IdentifierInfo::getNumerics(void)
		mov	[ebp+var_DC], eax
		mov	eax, [ebp+var_DC]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_DC]
		mov	eax, [edx+24h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	eax, 1
		jle	short loc_1DC7

loc_1DBD:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+44j
		mov	eax, 60000000h
		jmp	loc_1EE8
; ---------------------------------------------------------------------------

loc_1DC7:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+73j
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx		; struct icu_56::UnicodeString *
		mov	ecx, ds:_ASCII	; this
		call	dword ptr ds:__imp_?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::UnicodeSet::containsAll(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	edx, al
		test	edx, edx
		jz	short loc_1DF4
		mov	eax, 10000000h
		jmp	loc_1EE8
; ---------------------------------------------------------------------------

loc_1DF4:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+A0j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]	; this
		call	?countMembers@ScriptSet@icu_56@@QBEHXZ ; icu_56::ScriptSet::countMembers(void)
		test	eax, eax
		jnz	short loc_1E1A
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_count_56
		add	esp, 4
		mov	[ebp+var_DC], eax
		jmp	short loc_1E24
; ---------------------------------------------------------------------------

loc_1E1A:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+B9j
		mov	[ebp+var_DC], 1

loc_1E24:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+D0j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]	; this
		call	?countMembers@ScriptSet@icu_56@@QBEHXZ ; icu_56::ScriptSet::countMembers(void)
		add	eax, [ebp+var_DC]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 2
		jge	short loc_1E48
		mov	eax, 20000000h
		jmp	loc_1EE8
; ---------------------------------------------------------------------------

loc_1E48:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+F4j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		push	ecx		; struct icu_56::ScriptSet *
		mov	edx, ds:_JAPANESE
		push	edx		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_8] ; this
		call	?containsWithAlternates@IdentifierInfo@icu_56@@ABECABVScriptSet@2@0@Z ;	icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet const &)
		movsx	eax, al
		test	eax, eax
		jnz	short loc_1E9F
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		push	ecx		; struct icu_56::ScriptSet *
		mov	edx, ds:_CHINESE
		push	edx		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_8] ; this
		call	?containsWithAlternates@IdentifierInfo@icu_56@@ABECABVScriptSet@2@0@Z ;	icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet const &)
		movsx	eax, al
		test	eax, eax
		jnz	short loc_1E9F
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		push	ecx		; struct icu_56::ScriptSet *
		mov	edx, ds:_KOREAN
		push	edx		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_8] ; this
		call	?containsWithAlternates@IdentifierInfo@icu_56@@ABECABVScriptSet@2@0@Z ;	icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet const &)
		movsx	eax, al
		test	eax, eax
		jz	short loc_1EA6

loc_1E9F:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+11Bj
					; icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+138j
		mov	eax, 30000000h
		jmp	short loc_1EE8
; ---------------------------------------------------------------------------

loc_1EA6:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+155j
		cmp	[ebp+var_14], 2
		jnz	short loc_1EE3
		mov	eax, [ebp+arg_0]
		push	eax
		push	19h
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+8]
		call	?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z ;	icu_56::ScriptSet::test(UScriptCode,UErrorCode &)
		movsx	edx, al
		test	edx, edx
		jz	short loc_1EE3
		mov	eax, ds:_CONFUSABLE_WITH_LATIN
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+8]	; this
		call	?intersects@ScriptSet@icu_56@@QBECABV12@@Z ; icu_56::ScriptSet::intersects(icu_56::ScriptSet const &)
		movsx	edx, al
		test	edx, edx
		jnz	short loc_1EE3
		mov	eax, 40000000h
		jmp	short loc_1EE8
; ---------------------------------------------------------------------------

loc_1EE3:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+162j
					; icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+17Aj ...
		mov	eax, 50000000h

loc_1EE8:				; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+7Aj
					; icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+A7j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getRestrictionLevel@IdentifierInfo@icu_56@@QBE?AW4URestrictionLevel@@AAW4UErrorCode@@@Z endp ;	sp-analysis failed

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1F00h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::IdentifierInfo::getScriptCount(icu_56::IdentifierInfo *__hidden this)
		public ?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ
?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ proc near

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]	; this
		call	?countMembers@ScriptSet@icu_56@@QBEHXZ ; icu_56::ScriptSet::countMembers(void)
		test	eax, eax
		jnz	short loc_1F49
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_count_56
		add	esp, 4
		mov	[ebp+var_DC], eax
		jmp	short loc_1F53
; ---------------------------------------------------------------------------

loc_1F49:				; CODE XREF: icu_56::IdentifierInfo::getScriptCount(void)+30j
		mov	[ebp+var_DC], 1

loc_1F53:				; CODE XREF: icu_56::IdentifierInfo::getScriptCount(void)+47j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]	; this
		call	?countMembers@ScriptSet@icu_56@@QBEHXZ ; icu_56::ScriptSet::countMembers(void)
		add	eax, [ebp+var_DC]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getScriptCount@IdentifierInfo@icu_56@@QBEHXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1F80h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::IdentifierInfo::containsWithAlternates(icu_56::IdentifierInfo *this,	const struct icu_56::ScriptSet *, const	struct icu_56::ScriptSet *)
		public ?containsWithAlternates@IdentifierInfo@icu_56@@ABECABVScriptSet@2@0@Z
?containsWithAlternates@IdentifierInfo@icu_56@@ABECABVScriptSet@2@0@Z proc near
					; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+111p
					; icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+12Ep ...

var_F0		= byte ptr -0F0h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+arg_0] ; this
		call	?contains@ScriptSet@icu_56@@QBECABV12@@Z ; icu_56::ScriptSet::contains(icu_56::ScriptSet const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_1FBA
		xor	al, al
		jmp	short loc_2003
; ---------------------------------------------------------------------------

loc_1FBA:				; CODE XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &)+34j
		mov	[ebp+var_14], 0FFFFFFFFh

loc_1FC1:				; CODE XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &):loc_1FFFj
		lea	eax, [ebp+var_14]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+0Ch]
		push	edx
		call	_uhash_nextElement_56
		add	esp, 8
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jnz	short loc_1FDF
		jmp	short loc_2001
; ---------------------------------------------------------------------------

loc_1FDF:				; CODE XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &)+5Bj
		mov	eax, [ebp+var_20]
		mov	ecx, [eax+8]
		mov	[ebp+var_2C], ecx
		mov	eax, [ebp+var_2C]
		push	eax		; struct icu_56::ScriptSet *
		mov	ecx, [ebp+arg_0] ; this
		call	?intersects@ScriptSet@icu_56@@QBECABV12@@Z ; icu_56::ScriptSet::intersects(icu_56::ScriptSet const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_1FFF
		xor	al, al
		jmp	short loc_2003
; ---------------------------------------------------------------------------

loc_1FFF:				; CODE XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &)+79j
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::fixedo
		jmp	short loc_1FC1
; ---------------------------------------------------------------------------

loc_2001:				; CODE XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &)+5Dj
		mov	al, 1

loc_2003:				; CODE XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &)+38j
					; icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet const &)+7Dj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN10
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?containsWithAlternates@IdentifierInfo@icu_56@@ABECABVScriptSet@2@0@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN10		dd 1			; DATA XREF: icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet	const &)+87o
		dd offset $LN9
$LN9		dd 0FFFFFFECh, 4	; DATA XREF: .text:00002030o
		dd offset $LN8		; "iter"
$LN8		db 'iter',0             ; DATA XREF: .text:0000203Co
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2048h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__cdecl	icu_56::IdentifierInfo::displayAlternates(struct icu_56::UnicodeString *, const	struct UHashtable *, enum UErrorCode *)
		public ?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z
?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z proc near

var_18C		= byte ptr -18Ch
var_188		= dword	ptr -188h
var_17C		= dword	ptr -17Ch
var_B0		= dword	ptr -0B0h
var_A4		= dword	ptr -0A4h
var_98		= byte ptr -98h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= byte ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 180h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_18C]
		mov	ecx, 60h ; '`'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UVector::UVector(UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_20E7
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_188], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_??1UVector@icu_56@@UAE@XZ ; icu_56::UVector::~UVector(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_188]
		jmp	loc_2233
; ---------------------------------------------------------------------------

loc_20E7:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+70j
		mov	[ebp+var_38], 0FFFFFFFFh

loc_20EE:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+E4j
		lea	eax, [ebp+var_38]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx
		call	_uhash_nextElement_56
		add	esp, 8
		mov	[ebp+var_44], eax
		cmp	[ebp+var_44], 0
		jnz	short loc_2109
		jmp	short loc_212E
; ---------------------------------------------------------------------------

loc_2109:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+BDj
		mov	eax, [ebp+var_44]
		mov	ecx, [eax+8]
		mov	[ebp+var_50], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_50]
		push	ecx		; void *
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z ; icu_56::UVector::addElement(void *,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_20EE
; ---------------------------------------------------------------------------

loc_212E:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+BFj
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		push	offset _uhash_compareScriptSet_56 ; signed __int8 (__cdecl __high *)(union UElement, union UElement)
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_?sort@UVector@icu_56@@QAEXP6ACTUElement@@0@ZAAW4UErrorCode@@@Z ; icu_56::UVector::sort(signed char (*)(UElement,UElement),UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0FFFFFFFFh	; int
		push	offset ??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@	; "; "
		push	1		; signed __int8
		lea	ecx, [ebp+var_98] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z ; icu_56::UnicodeString::UnicodeString(signed char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		mov	[ebp+var_A4], 0
		jmp	short loc_2186
; ---------------------------------------------------------------------------

loc_2177:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+1A8j
		mov	eax, [ebp+var_A4]
		add	eax, 1
		mov	[ebp+var_A4], eax

loc_2186:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+12Dj
		mov	esi, esp
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_?size@UVector@icu_56@@QBEHXZ	; icu_56::UVector::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_A4], eax
		jge	short loc_21F2
		cmp	[ebp+var_A4], 0
		jle	short loc_21C2
		mov	esi, esp
		lea	eax, [ebp+var_98]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::UnicodeString::append(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_21C2:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+15Fj
		mov	esi, esp
		mov	eax, [ebp+var_A4]
		push	eax		; int
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z	; icu_56::UVector::elementAt(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B0], eax
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_B0] ; this
		call	?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::ScriptSet::displayScripts(icu_56::UnicodeString &)
		jmp	short loc_2177
; ---------------------------------------------------------------------------

loc_21F2:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+156j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_17C], eax
		mov	byte ptr [ebp+var_4], 0
		mov	esi, esp
		lea	ecx, [ebp+var_98] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_2C] ; this
		call	dword ptr ds:__imp_??1UVector@icu_56@@UAE@XZ ; icu_56::UVector::~UVector(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_17C]

loc_2233:				; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+9Aj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN18
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 18Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
$LN18		dd 3			; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+1EFo
		dd offset $LN17
$LN17		dd 0FFFFFFD4h, 18h	; DATA XREF: .text:00002274o
		dd offset $LN13		; "sorted"
		dd 0FFFFFFC8h, 4
		dd offset $LN14		; "pos"
		dd 0FFFFFF68h, 40h
		dd offset $LN15		; "separator"
$LN15		db 'separator',0        ; DATA XREF: .text:00002298o
$LN14		db 'pos',0              ; DATA XREF: .text:0000228Co
$LN13		db 'sorted',0           ; DATA XREF: .text:00002280o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 22B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00002310o
		mov	esi, esp
		lea	ecx, [ebp-2Ch]	; this
		call	dword ptr ds:__imp_??1UVector@icu_56@@UAE@XZ ; icu_56::UVector::~UVector(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00002318o
		mov	esi, esp
		lea	ecx, [ebp-98h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z proc	near
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-190h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2304h
		public ??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@
; wchar_t `string'
??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@:
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+105o
		unicode	0, <; >,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 230Ch
__unwindtable$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z dd	0FFFFFFFFh
					; DATA XREF: .xdata$x:00002324o
		dd offset __unwindfunclet$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z$0
		align 8
		dd offset __unwindfunclet$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z dd 19930522h, 2
					; DATA XREF: __ehhandler$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?displayAlternates@IdentifierInfo@icu_56@@SAAAVUnicodeString@2@AAV32@PBUUHashtable@@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2340h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; [thunk]:public: virtual void * __thiscall icu_56::UnicodeSet::`vector	deleting destructor'`adjustor{4}' (unsigned int)
		public ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
					; DATA XREF: .rdata:const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeMatcher'}o
		sub	ecx, 4
		jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z ; icu_56::UnicodeSet::`vector deleting	destructor'(uint)
??_EUnicodeSet@icu_56@@W3AEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::IdentifierInfo::`scalar deleting destructor'(uint)+39p
					; icu_56::IdentifierInfo::`vector deleting destructor'(uint)+81p ...
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::IdentifierInfo::`scalar deleting destructor'(uint)+44p
					; icu_56::IdentifierInfo::`scalar deleting destructor'(uint)+57p ...
; void __cdecl icu_56::UMemory::operator delete[](void *)
		extrn __imp_??_VUMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+53p
					; DATA XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+53r
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near
					; CODE XREF: icu_56::IdentifierInfo::`vector deleting destructor'(uint)+3Dp
; _DWORD __thiscall icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeSet *__hidden	this, int, int)
		extrn __imp_??0UnicodeSet@icu_56@@QAE@HH@Z:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+2FFp
					; _IdentifierInfo_init+4Dp
					; DATA XREF: ...
; _DWORD __thiscall icu_56::UnicodeSet::UnicodeSet(icu_56::UnicodeSet *__hidden	this)
		extrn __imp_??0UnicodeSet@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+269p
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+269r
		extrn _uhash_setKeyDeleter_56:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+1C9p
		extrn _uhash_deleteScriptSet_56:near
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+1BDo
		extrn _uhash_open_56:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+1AFp
		extrn _uhash_hashScriptSet_56:near
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+1AAo
; signed __int8	__cdecl	__high uhash_compareScriptSet_56(union UElement, union UElement)
		extrn _uhash_compareScriptSet_56:near
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+1A5o
					; icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const *,UErrorCode &)+ECo
; _DWORD __thiscall icu_56::ScriptSet::ScriptSet(icu_56::ScriptSet *__hidden this)
		extrn ??0ScriptSet@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+169p
					; icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+201p ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+E9p
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+E9r
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+BBp
					; icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+13Dp ...
		extrn ___security_cookie:near
					; DATA XREF: icu_56::IdentifierInfo::IdentifierInfo(UErrorCode &)+2Er
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+2Er ...
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z+19j
					; __ehhandler$?setIdentifier@IdentifierInfo@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z+23j	...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z+Fp
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+45Dp ...
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::IdentifierInfo `RTTI	Type Descriptor'o
					; .data:icu_56::UMemory	`RTTI Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::UnicodeString::`scalar deleting destructor'(unsigned int)
		extrn ??_GUnicodeString@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::UnicodeString::`vector deleting destructor'(unsigned int)
		extrn ??_EUnicodeString@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::UnicodeString::`local	vftable'o
; public: virtual void * __thiscall icu_56::UnicodeString::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:00000814o
; public: virtual void __thiscall icu_56::UnicodeString::extractBetween(int, int, class	icu_56::UnicodeString &)const
		extrn ?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near
					; DATA XREF: .rdata:00000818o
; public: virtual void __thiscall icu_56::UnicodeString::handleReplaceBetween(int, int,	class icu_56::UnicodeString const &)
		extrn ?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near
					; DATA XREF: .rdata:0000081Co
; public: virtual void __thiscall icu_56::UnicodeString::copy(int, int,	int)
		extrn ?copy@UnicodeString@icu_56@@UAEXHHH@Z:near
					; DATA XREF: .rdata:00000820o
; public: virtual signed char __thiscall icu_56::UnicodeString::hasMetaData(void)const
		extrn ?hasMetaData@UnicodeString@icu_56@@UBECXZ:near
					; DATA XREF: .rdata:00000824o
; public: virtual class	icu_56::Replaceable * __thiscall icu_56::UnicodeString::clone(void)const
		extrn ?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near
					; DATA XREF: .rdata:00000828o
; protected: virtual int __thiscall icu_56::UnicodeString::getLength(void)const
		extrn ?getLength@UnicodeString@icu_56@@MBEHXZ:near
					; DATA XREF: .rdata:0000082Co
; protected: virtual wchar_t __thiscall	icu_56::UnicodeString::getCharAt(int)const
		extrn ?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near
					; DATA XREF: .rdata:00000830o
; protected: virtual int __thiscall icu_56::UnicodeString::getChar32At(int)const
		extrn ?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near
					; DATA XREF: .rdata:00000834o
; public: virtual void * __thiscall icu_56::UnicodeSet::`scalar	deleting destructor'(unsigned int)
		extrn ??_GUnicodeSet@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::UnicodeSet::`vector	deleting destructor'(unsigned int)
		extrn ??_EUnicodeSet@icu_56@@UAEPAXI@Z:near ; weak
					; CODE XREF: [thunk]:icu_56::UnicodeSet::`vector deleting destructor'`adjustor{4}' (uint)+3j
					; DATA XREF: .rdata:const icu_56::UnicodeSet::`local vftable'{for `icu_56::UnicodeFunctor'}o
; public: virtual void * __thiscall icu_56::UnicodeSet::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:000007A0o
; public: virtual class	icu_56::UnicodeFunctor * __thiscall icu_56::UnicodeSet::clone(void)const
		extrn ?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:near
					; DATA XREF: .rdata:000007A4o
; public: virtual class	icu_56::UnicodeMatcher * __thiscall icu_56::UnicodeFilter::toMatcher(void)const
		extrn ?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near
					; DATA XREF: .rdata:000007A8o
; public: virtual class	icu_56::UnicodeReplacer	* __thiscall icu_56::UnicodeFunctor::toReplacer(void)const
		extrn ?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near
					; DATA XREF: .rdata:000007ACo
; public: virtual void __thiscall icu_56::UnicodeFilter::setData(class icu_56::TransliterationRuleData const *)
		extrn ?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near
					; DATA XREF: .rdata:000007B0o
; public: virtual signed char __thiscall icu_56::UnicodeSet::contains(int)const
		extrn ?contains@UnicodeSet@icu_56@@UBECH@Z:near
					; DATA XREF: .rdata:000007B4o
; public: virtual signed char __thiscall icu_56::UnicodeSet::operator==(class icu_56::UnicodeSet const &)const
		extrn ??8UnicodeSet@icu_56@@UBECABV01@@Z:near ;	DATA XREF: .rdata:000007B8o
; public: virtual int __thiscall icu_56::UnicodeSet::hashCode(void)const
		extrn ?hashCode@UnicodeSet@icu_56@@UBEHXZ:near ; DATA XREF: .rdata:000007BCo
; public: virtual int __thiscall icu_56::UnicodeSet::size(void)const
		extrn ?size@UnicodeSet@icu_56@@UBEHXZ:near ; DATA XREF:	.rdata:000007C0o
; public: virtual signed char __thiscall icu_56::UnicodeSet::isEmpty(void)const
		extrn ?isEmpty@UnicodeSet@icu_56@@UBECXZ:near ;	DATA XREF: .rdata:000007C4o
; public: virtual signed char __thiscall icu_56::UnicodeSet::contains(int, int)const
		extrn ?contains@UnicodeSet@icu_56@@UBECHH@Z:near
					; DATA XREF: .rdata:000007C8o
; public: virtual signed char __thiscall icu_56::UnicodeSet::containsAll(class icu_56::UnicodeSet const	&)const
		extrn ?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:near
					; DATA XREF: .rdata:000007CCo
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::add(int, int)
		extrn ?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:000007D0o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::addAll(class icu_56::UnicodeSet const &)
		extrn ?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:000007D4o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::retainAll(class icu_56::UnicodeSet const &)
		extrn ?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:000007D8o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::complementAll(class	icu_56::UnicodeSet const &)
		extrn ?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:000007DCo
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::removeAll(class icu_56::UnicodeSet const &)
		extrn ?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near
					; DATA XREF: .rdata:000007E0o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::retain(int,	int)
		extrn ?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:000007E4o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::remove(int,	int)
		extrn ?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:000007E8o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::complement(int, int)
		extrn ?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:near
					; DATA XREF: .rdata:000007ECo
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::complement(void)
		extrn ?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:000007F0o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::clear(void)
		extrn ?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:000007F4o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::removeAllStrings(void)
		extrn ?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:000007F8o
; public: virtual int __thiscall icu_56::UnicodeSet::getRangeCount(void)const
		extrn ?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:near
					; DATA XREF: .rdata:000007FCo
; public: virtual int __thiscall icu_56::UnicodeSet::getRangeStart(int)const
		extrn ?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:near
					; DATA XREF: .rdata:off_800o
; public: virtual int __thiscall icu_56::UnicodeSet::getRangeEnd(int)const
		extrn ?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:near
					; DATA XREF: .rdata:00000804o
; public: virtual class	icu_56::UnicodeSet & __thiscall	icu_56::UnicodeSet::compact(void)
		extrn ?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:near
					; DATA XREF: .rdata:00000808o
; public: virtual enum	icu_56::UMatchDegree __thiscall	icu_56::UnicodeSet::matches(class icu_56::Replaceable const &, int &, int, signed char)
		extrn ?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near
					; DATA XREF: .rdata:00000788o
; public: virtual class	icu_56::UnicodeString &	__thiscall icu_56::UnicodeSet::toPattern(class icu_56::UnicodeString &,	signed char)const
		extrn ?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:near
					; DATA XREF: .rdata:0000078Co
; private: virtual signed char __thiscall icu_56::UnicodeSet::matchesIndexValue(unsigned char)const
		extrn ?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:near
					; DATA XREF: .rdata:00000790o
; public: virtual void __thiscall icu_56::UnicodeSet::addMatchSetTo(class icu_56::UnicodeSet &)const
		extrn ?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:near
					; DATA XREF: .rdata:00000794o
; _DWORD __thiscall icu_56::UnicodeString::~UnicodeString(icu_56::UnicodeString	*__hidden this)
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::UnicodeString::`scalar deleting destructor'(uint)+28p
					; icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const *,UErrorCode &)+1BFp ...
; void __cdecl icu_56::umtx_initImplPostInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ap
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+8Ar
; signed __int8	__cdecl	icu_56::umtx_initImplPreInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fp
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(UErrorCode &),UErrorCode &)+4Fr
; LONG __stdcall InterlockedCompareExchange(volatile LONG *Destination,	LONG Exchange, LONG Comperand)
		extrn __imp__InterlockedCompareExchange@12:near
					; CODE XREF: icu_56::umtx_loadAcquire(long volatile &)+28p
					; DATA XREF: icu_56::umtx_loadAcquire(long volatile &)+28r
		extrn _ucln_i18n_registerCleanup_56:near
					; CODE XREF: _IdentifierInfo_init+313p
; struct icu_56::ScriptSet *__thiscall __high icu_56::ScriptSet::set(enum UScriptCode, enum UErrorCode *)
		extrn ?set@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z:near
					; CODE XREF: _IdentifierInfo_init+271p
					; _IdentifierInfo_init+278p ...
; struct icu_56::UnicodeFunctor	*__thiscall icu_56::UnicodeSet::freeze(icu_56::UnicodeSet *__hidden this)
		extrn __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:near
					; CODE XREF: _IdentifierInfo_init+246p
					; DATA XREF: _IdentifierInfo_init+246r
; _DWORD __thiscall icu_56::ScriptSet::~ScriptSet(icu_56::ScriptSet *__hidden this)
		extrn ??1ScriptSet@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::ScriptSet::`scalar	deleting destructor'(uint)+26p
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+16Ep ...
; _DWORD __thiscall icu_56::UnicodeSet::~UnicodeSet(icu_56::UnicodeSet *__hidden this)
		extrn __imp_??1UnicodeSet@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::UnicodeSet::`scalar deleting destructor'(uint)+28p
					; DATA XREF: icu_56::UnicodeSet::`scalar deleting destructor'(uint)+28r
		extrn _uhash_close_56:near
					; CODE XREF: icu_56::IdentifierInfo::~IdentifierInfo(void)+C3p
		extrn _uhash_removeAll_56:near
					; CODE XREF: icu_56::IdentifierInfo::clear(void)+35p
; struct icu_56::ScriptSet *__thiscall icu_56::ScriptSet::resetAll(icu_56::ScriptSet *__hidden this)
		extrn ?resetAll@ScriptSet@icu_56@@QAEAAV12@XZ:near
					; CODE XREF: icu_56::IdentifierInfo::clear(void)+29p
					; icu_56::IdentifierInfo::clear(void)+61p ...
; __declspec(dllimport)	public:	class icu_56::UnicodeSet & __thiscall icu_56::UnicodeSet::operator=(class icu_56::UnicodeSet const &)
		extrn __imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifierProfile(icu_56::UnicodeSet const &)+2Fp
					; DATA XREF: icu_56::IdentifierInfo::setIdentifierProfile(icu_56::UnicodeSet const &)+2Fr
; signed __int8	__thiscall icu_56::ScriptSet::contains(icu_56::ScriptSet *__hidden this, const struct icu_56::ScriptSet	*)
		extrn ?contains@ScriptSet@icu_56@@QBECABV12@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+3D2p
					; icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet const &)+2Ap
; struct icu_56::ScriptSet *__thiscall icu_56::ScriptSet::intersect(icu_56::ScriptSet *__hidden	this, const struct icu_56::ScriptSet *)
		extrn ?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+372p
		extrn _uhash_removeElement_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+358p
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+3ECp
		extrn _uhash_nextElement_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+306p
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+38Fp ...
; struct icu_56::ScriptSet *__thiscall icu_56::ScriptSet::setAll(icu_56::ScriptSet *__hidden this)
		extrn ?setAll@ScriptSet@icu_56@@QAEAAV12@XZ:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+2E9p
		extrn _uhash_count_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+2D3p
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+404p ...
		extrn _uhash_puti_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+2BFp
; _DWORD __thiscall icu_56::ScriptSet::ScriptSet(icu_56::ScriptSet *__hidden this, const struct	icu_56::ScriptSet *)
		extrn ??0ScriptSet@icu_56@@QAE@ABV01@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+284p
		extrn _uhash_geti_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+247p
; signed __int8	__thiscall icu_56::ScriptSet::intersects(icu_56::ScriptSet *__hidden this, const struct	icu_56::ScriptSet *)
		extrn ?intersects@ScriptSet@icu_56@@QBECABV12@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+22Cp
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+33Ep ...
; struct icu_56::ScriptSet *__thiscall icu_56::ScriptSet::Union(icu_56::ScriptSet *__hidden this, const	struct icu_56::ScriptSet *)
		extrn ?Union@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+218p
; int __thiscall icu_56::ScriptSet::countMembers(icu_56::ScriptSet *__hidden this)
		extrn ?countMembers@ScriptSet@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+1EAp
					; icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+B2p ...
; struct icu_56::ScriptSet *__thiscall __high icu_56::ScriptSet::reset(enum UScriptCode, enum UErrorCode *)
		extrn ?reset@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+1D4p
					; icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+1E2p
		extrn _uscript_getScriptExtensions_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+138p
; struct icu_56::UnicodeSet *__thiscall	icu_56::UnicodeSet::add(icu_56::UnicodeSet *__hidden this, int)
		extrn __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+117p
					; DATA XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+117r
		extrn _u_getNumericValue_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+FCp
		extrn _u_charType_56:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+E8p
; int __thiscall icu_56::UnicodeString::char32At(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+D4p
					; DATA XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+D4r
; int __thiscall icu_56::UnicodeString::length(icu_56::UnicodeString *__hidden this)
		extrn __imp_?length@UnicodeString@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+B5p
					; DATA XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+B5r
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString const &)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+6Ep
					; DATA XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+6Er
		extrn __fltused:near
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+443p
					; icu_56::IdentifierInfo::containsWithAlternates(icu_56::ScriptSet const &,icu_56::ScriptSet const &)+8Dp ...
		extrn __ftol2_sse:near	; CODE XREF: icu_56::IdentifierInfo::setIdentifier(icu_56::UnicodeString const &,UErrorCode &)+104p
; signed __int8	__thiscall __high icu_56::ScriptSet::test(enum UScriptCode, enum UErrorCode *)
		extrn ?test@ScriptSet@icu_56@@QBECW4UScriptCode@@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+170p
; signed __int8	__thiscall icu_56::UnicodeSet::containsAll(icu_56::UnicodeSet *__hidden	this, const struct icu_56::UnicodeString *)
		extrn __imp_?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+32p
					; icu_56::IdentifierInfo::getRestrictionLevel(UErrorCode &)+8Ep
					; DATA XREF: ...
; struct icu_56::UnicodeString *__thiscall icu_56::ScriptSet::displayScripts(icu_56::ScriptSet *__hidden this, struct icu_56::UnicodeString *)
		extrn ?displayScripts@ScriptSet@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+1A3p
; void *__thiscall icu_56::UVector::elementAt(icu_56::UVector *__hidden	this, int)
		extrn __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+186p
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+186r
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::append(icu_56::UnicodeString *__hidden this, const struct icu_56::UnicodeString *)
		extrn __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+16Dp
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+16Dr
; int __thiscall icu_56::UVector::size(icu_56::UVector *__hidden this)
		extrn __imp_?size@UVector@icu_56@@QBEHXZ:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+143p
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+143r
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this, signed __int8, const wchar_t *, int)
		extrn __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+112p
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+112r
; void __thiscall icu_56::UVector::sort(icu_56::UVector	*__hidden this,	signed __int8 (__cdecl __high *)(union UElement, union UElement), enum UErrorCode *)
		extrn __imp_?sort@UVector@icu_56@@QAEXP6ACTUElement@@0@ZAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+F4p
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+F4r
; void __thiscall icu_56::UVector::addElement(icu_56::UVector *__hidden	this, void *, enum UErrorCode *)
		extrn __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+D7p
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+D7r
; _DWORD __thiscall icu_56::UVector::~UVector(icu_56::UVector *__hidden	this)
		extrn __imp_??1UVector@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+87p
					; icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const *,UErrorCode &)+1D8p ...
; _DWORD __thiscall icu_56::UVector::UVector(icu_56::UVector *__hidden this, enum UErrorCode *)
		extrn __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+49p
					; DATA XREF: icu_56::IdentifierInfo::displayAlternates(icu_56::UnicodeString &,UHashtable const	*,UErrorCode &)+49r


		end

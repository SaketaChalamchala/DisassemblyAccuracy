;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	083D0991F404C1D2E5279CDF88AB55F1
; Input	CRC32 :	110065DD

; File Name   :	D:\compspace\objfiles\firefox\i18n\ethpccal.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset dword_100
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_200
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FD+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	locret_7FE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset dword_1000
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd 2000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1BC+4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_DFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	3000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
; char `public:	static void * __cdecl icu_56::EthiopicCalendar::getStaticClassID(void)'::`2'::classID
?classID@?1??getStaticClassID@EthiopicCalendar@icu_56@@SAPAXXZ@4DA dd ?
					; DATA XREF: icu_56::EthiopicCalendar::getStaticClassID(void)+1Eo
; icu_56 gSystemDefaultCenturyInit
_gSystemDefaultCenturyInit dd ?		; DATA XREF: icu_56::EthiopicCalendar::defaultCenturyStart(void)+28o
					; icu_56::EthiopicCalendar::defaultCenturyStartYear(void)+28o
dword_100	dd ?			; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 104h
_gSystemDefaultCenturyStart dq 2.225073858507201e-308
					; DATA XREF: icu_56::EthiopicCalendar::defaultCenturyStart(void)+35r
					; icu_56::initializeSystemDefaultCentury(void)+100w
_gSystemDefaultCenturyStartYear	dd 0FFFFFFFFh
					; DATA XREF: icu_56::initializeSystemDefaultCentury(void)+117w
					; icu_56::EthiopicCalendar::defaultCenturyStartYear(void)+44r ...
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 110h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 148h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 14Ch
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 150h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 184h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::TimeZone::operator!=(class icu_56::TimeZone const &)const
		public ??9TimeZone@icu_56@@QBECABV01@@Z
??9TimeZone@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp

loc_1BC:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9TimeZone@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::TimeZone::getID(icu_56::TimeZone *this, struct icu_56::UnicodeString	*)
		public ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx

loc_200:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		add	eax, 4
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+arg_0]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 238h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::TimeZone::setID(icu_56::TimeZone *this, const	struct icu_56::UnicodeString *)
		public ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 4
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 28Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Calendar::getTime(icu_56::Calendar *this, enum UErrorCode *)
		public ?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+FBp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_8] ; this
		call	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTimeInMillis(UErrorCode	&)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2D4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Calendar::setTime(icu_56::Calendar *this, double, enum UErrorCode *)
		public ?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+D9p

var_E4		= qword	ptr -0E4h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0E4h+var_E4] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis(double,UErrorCode	&)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 324h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Calendar::operator!=(class icu_56::Calendar const &)const
		public ??9Calendar@icu_56@@QBECABV01@@Z
??9Calendar@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9Calendar@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 380h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	icu_56::Calendar::EDateFields)const
		public ?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+eax*4+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	UCalendarDateFields, int)const
		public ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z proc near
					; CODE XREF: icu_56::EthiopicCalendar::handleGetExtendedYear(void)+3Bp
					; icu_56::EthiopicCalendar::handleGetExtendedYear(void)+5Ep ...

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+eax*4+7Ch], 0
		jle	short loc_3FA
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+edx*4+8]
		mov	[ebp+var_D0], ecx
		jmp	short loc_403
; ---------------------------------------------------------------------------

loc_3FA:				; CODE XREF: icu_56::Calendar::internalGet(UCalendarDateFields,int)+2Ej
		mov	edx, [ebp+arg_4]

loc_3FD:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		mov	[ebp+var_D0], edx

loc_403:				; CODE XREF: icu_56::Calendar::internalGet(UCalendarDateFields,int)+40j
		mov	eax, [ebp+var_D0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 414h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	UCalendarDateFields)const
		public ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+eax*4+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 44Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Calendar::internalGetTime(icu_56::Calendar *__hidden this)
		public ?internalGetTime@Calendar@icu_56@@IBENXZ
?internalGetTime@Calendar@icu_56@@IBENXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+0E0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?internalGetTime@Calendar@icu_56@@IBENXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 480h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Calendar::internalSetTime(icu_56::Calendar *this, double)
		public ?internalSetTime@Calendar@icu_56@@IAEXN@Z
?internalSetTime@Calendar@icu_56@@IAEXN@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax+0E0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalSetTime@Calendar@icu_56@@IAEXN@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4B8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianYear(icu_56::Calendar *__hidden this)
		public ?getGregorianYear@Calendar@icu_56@@IBEHXZ
?getGregorianYear@Calendar@icu_56@@IBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+110h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianYear@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianMonth(icu_56::Calendar *__hidden	this)
		public ?getGregorianMonth@Calendar@icu_56@@IBEHXZ
?getGregorianMonth@Calendar@icu_56@@IBEHXZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+114h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianMonth@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 520h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianDayOfYear(icu_56::Calendar *__hidden this)
		public ?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+118h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 554h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianDayOfMonth(icu_56::Calendar *__hidden this)
		public ?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+11Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 588h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::Calendar *__cdecl icu_56::Calendar::createInstance(struct icu_56::TimeZone *, enum UErrorCode *)
		public ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	esi, esp
		call	dword ptr ds:__imp_?getDefault@Locale@icu_56@@SAABV12@XZ ; icu_56::Locale::getDefault(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::Locale	*
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::TimeZone *
		call	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z ;	icu_56::Calendar::createInstance(icu_56::TimeZone *,icu_56::Locale const &,UErrorCode &)
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::Calendar::roll(enum  UCalendarDateFields, signed char, enum  UErrorCode &)
		public ?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Calendar::roll(icu_56::Calendar::EDateFields,signed char,UErrorCode &)+33p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		movsx	ecx, [ebp+arg_4]
		neg	ecx
		sbb	ecx, ecx
		and	ecx, 2
		add	ecx, 0FFFFFFFFh
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+1Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 644h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::Calendar::roll(enum  icu_56::Calendar::EDateFields, signed char, enum	 UErrorCode &)
		public ?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		push	eax
		movzx	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	ecx, [ebp+var_8]
		call	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ;	icu_56::Calendar::roll(UCalendarDateFields,signed char,UErrorCode &)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 694h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: void __thiscall icu_56::Calendar::internalSet(enum	 UCalendarDateFields, int)
		public ?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z proc near
					; CODE XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+A8p
					; icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+B6p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_4]
		mov	[ecx+eax*4+8], edx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	dword ptr [ecx+eax*4+7Ch], 1
		mov	eax, [ebp+var_8]
		add	eax, [ebp+arg_0]
		mov	byte ptr [eax+64h], 1
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::weekNumber(icu_56::Calendar *this, int, int)
		public ?weekNumber@Calendar@icu_56@@IAEHHH@Z
?weekNumber@Calendar@icu_56@@IAEHHH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		mov	ecx, [ebp+var_8] ; this
		call	?weekNumber@Calendar@icu_56@@IAEHHHH@Z ; icu_56::Calendar::weekNumber(int,int,int)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?weekNumber@Calendar@icu_56@@IAEHHH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 738h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	icu_56::EthiopicCalendar::getStaticClassID()
		public ?getStaticClassID@EthiopicCalendar@icu_56@@SAPAXXZ
?getStaticClassID@EthiopicCalendar@icu_56@@SAPAXXZ proc	near
					; CODE XREF: icu_56::EthiopicCalendar::getDynamicClassID(void)+23p

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, offset ?classID@?1??getStaticClassID@EthiopicCalendar@icu_56@@SAPAXXZ@4DA ; char `icu_56::EthiopicCalendar::getStaticClassID(void)'::`2'::classID
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getStaticClassID@EthiopicCalendar@icu_56@@SAPAXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 764h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__thiscall icu_56::EthiopicCalendar::getDynamicClassID(icu_56::EthiopicCalendar	*__hidden this)
		public ?getDynamicClassID@EthiopicCalendar@icu_56@@UBEPAXXZ
?getDynamicClassID@EthiopicCalendar@icu_56@@UBEPAXXZ proc near ; DATA XREF: .rdata:0000080Co

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	?getStaticClassID@EthiopicCalendar@icu_56@@SAPAXXZ ; icu_56::EthiopicCalendar::getStaticClassID(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getDynamicClassID@EthiopicCalendar@icu_56@@UBEPAXXZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::EthiopicCalendar::EthiopicCalendar(class icu_56::Locale const &, enum  UErrorCode &, enum	icu_56::EthiopicCalendar::EEraType)
		public ??0EthiopicCalendar@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@W4EEraType@01@@Z
??0EthiopicCalendar@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@W4EEraType@01@@Z proc near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+93p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::Locale	*
		mov	ecx, [ebp+var_8] ; this
		call	??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::CECalendar::CECalendar(icu_56::Locale const &,UErrorCode &)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7EthiopicCalendar@icu_56@@6B@ ; const icu_56::EthiopicCalendar::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_8]
		mov	[eax+260h], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp

locret_7FE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		retn	0Ch
??0EthiopicCalendar@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@W4EEraType@01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 804h
		dd offset ??_R4EthiopicCalendar@icu_56@@6B@ ; const icu_56::EthiopicCalendar::`RTTI Complete Object Locator'
		public ??_7EthiopicCalendar@icu_56@@6B@
; const	icu_56::EthiopicCalendar::`vftable'
??_7EthiopicCalendar@icu_56@@6B@ dd offset ??_EEthiopicCalendar@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::Locale const &,UErrorCode &,icu_56::EthiopicCalendar::EEraType)+36o
					; icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::EthiopicCalendar const &)+32o ...
					; icu_56::EthiopicCalendar::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@EthiopicCalendar@icu_56@@UBEPAXXZ ; icu_56::EthiopicCalendar::getDynamicClassID(void)
		dd offset ?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ ;	icu_56::EthiopicCalendar::clone(void)
		dd offset ??8Calendar@icu_56@@UBECABV01@@Z ; icu_56::Calendar::operator==(icu_56::Calendar const &)
		dd offset ?isEquivalentTo@Calendar@icu_56@@UBECABV12@@Z	; icu_56::Calendar::isEquivalentTo(icu_56::Calendar const &)
		dd offset ?add@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z ; icu_56::Calendar::add(UCalendarDateFields,int,UErrorCode &)
		dd offset ?add@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z ; icu_56::Calendar::add(icu_56::Calendar::EDateFields,int,UErrorCode &)
		dd offset ?roll@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z	; icu_56::Calendar::roll(UCalendarDateFields,int,UErrorCode &)
		dd offset ?roll@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z ; icu_56::Calendar::roll(icu_56::Calendar::EDateFields,int,UErrorCode	&)
		dd offset ?fieldDifference@Calendar@icu_56@@UAEHNW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::fieldDifference(double,UCalendarDateFields,UErrorCode &)
		dd offset ?fieldDifference@Calendar@icu_56@@UAEHNW4EDateFields@12@AAW4UErrorCode@@@Z ; icu_56::Calendar::fieldDifference(double,icu_56::Calendar::EDateFields,UErrorCode &)
		dd offset ?inDaylightTime@CECalendar@icu_56@@MBECAAW4UErrorCode@@@Z ; icu_56::CECalendar::inDaylightTime(UErrorCode &)
		dd offset ?getMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getMinimum(UCalendarDateFields)
		dd offset ?getMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getMinimum(icu_56::Calendar::EDateFields)
		dd offset ?getMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getMaximum(UCalendarDateFields)
		dd offset ?getMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getMaximum(icu_56::Calendar::EDateFields)
		dd offset ?getGreatestMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getGreatestMinimum(UCalendarDateFields)
		dd offset ?getGreatestMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getGreatestMinimum(icu_56::Calendar::EDateFields)
		dd offset ?getLeastMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::getLeastMaximum(UCalendarDateFields)
		dd offset ?getLeastMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z ; icu_56::Calendar::getLeastMaximum(icu_56::Calendar::EDateFields)
		dd offset ?getActualMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getActualMinimum(UCalendarDateFields,UErrorCode &)
		dd offset ?getActualMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getActualMaximum(UCalendarDateFields,UErrorCode &)
		dd offset ?getType@EthiopicCalendar@icu_56@@UBEPBDXZ ; icu_56::EthiopicCalendar::getType(void)
		dd offset ?getDayOfWeekType@Calendar@icu_56@@UBE?AW4UCalendarWeekdayType@@W4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getDayOfWeekType(UCalendarDaysOfWeek,UErrorCode	&)
		dd offset ?getWeekendTransition@Calendar@icu_56@@UBEHW4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z ; icu_56::Calendar::getWeekendTransition(UCalendarDaysOfWeek,UErrorCode &)
		dd offset ?isWeekend@Calendar@icu_56@@UBECXZ ; icu_56::Calendar::isWeekend(void)
		dd offset ?isWeekend@Calendar@icu_56@@UBECNAAW4UErrorCode@@@Z ;	icu_56::Calendar::isWeekend(double,UErrorCode &)
		dd offset ?computeTime@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z ; icu_56::Calendar::computeTime(UErrorCode &)
		dd offset ?computeFields@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z ; icu_56::Calendar::computeFields(UErrorCode &)
		dd offset ?prepareGetActual@Calendar@icu_56@@MAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::prepareGetActual(UCalendarDateFields,signed char,UErrorCode &)
		dd offset ?handleGetLimit@EthiopicCalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z ; icu_56::EthiopicCalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)
		dd offset ?getLimit@Calendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@12@@Z ; icu_56::Calendar::getLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)
		dd offset ?handleComputeMonthStart@CECalendar@icu_56@@MBEHHHC@Z	; icu_56::CECalendar::handleComputeMonthStart(int,int,signed char)
		dd offset ?handleGetMonthLength@Calendar@icu_56@@MBEHHH@Z ; icu_56::Calendar::handleGetMonthLength(int,int)
		dd offset ?handleGetYearLength@Calendar@icu_56@@MBEHH@Z	; icu_56::Calendar::handleGetYearLength(int)
		dd offset ?handleGetExtendedYear@EthiopicCalendar@icu_56@@MAEHXZ ; icu_56::EthiopicCalendar::handleGetExtendedYear(void)
		dd offset ?handleComputeJulianDay@Calendar@icu_56@@MAEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::handleComputeJulianDay(UCalendarDateFields)
		dd offset ?handleGetExtendedYearFromWeekFields@Calendar@icu_56@@MAEHHH@Z ; icu_56::Calendar::handleGetExtendedYearFromWeekFields(int,int)
		dd offset ?validateField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z	; icu_56::Calendar::validateField(UCalendarDateFields,UErrorCode &)
		dd offset ?getFieldResolutionTable@Calendar@icu_56@@MBEPAY1M@7$$CBHXZ ;	icu_56::Calendar::getFieldResolutionTable(void)
		dd offset ?handleComputeFields@EthiopicCalendar@icu_56@@MAEXHAAW4UErrorCode@@@Z	; icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)
		dd offset ?getDefaultMonthInYear@Calendar@icu_56@@MAEHH@Z ; icu_56::Calendar::getDefaultMonthInYear(int)
		dd offset ?getDefaultDayInMonth@Calendar@icu_56@@MAEHHH@Z ; icu_56::Calendar::getDefaultDayInMonth(int,int)
		dd offset ?pinField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::pinField(UCalendarDateFields,UErrorCode &)
		dd offset ?haveDefaultCentury@CECalendar@icu_56@@MBECXZ	; icu_56::CECalendar::haveDefaultCentury(void)
		dd offset ?defaultCenturyStart@EthiopicCalendar@icu_56@@MBENXZ ; icu_56::EthiopicCalendar::defaultCenturyStart(void)
		dd offset ?defaultCenturyStartYear@EthiopicCalendar@icu_56@@MBEHXZ ; icu_56::EthiopicCalendar::defaultCenturyStartYear(void)
		dd offset ?getRelatedYear@Calendar@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::Calendar::getRelatedYear(UErrorCode	&)
		dd offset ?setRelatedYear@Calendar@icu_56@@UAEXH@Z ; icu_56::Calendar::setRelatedYear(int)
		dd offset ?getJDEpochOffset@EthiopicCalendar@icu_56@@MBEHXZ ; icu_56::EthiopicCalendar::getJDEpochOffset(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 8D0h
		public ??_R4EthiopicCalendar@icu_56@@6B@
; const	icu_56::EthiopicCalendar::`RTTI	Complete Object	Locator'
??_R4EthiopicCalendar@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:00000804o
		dd offset ??_R0?AVEthiopicCalendar@icu_56@@@8 ;	icu_56::EthiopicCalendar `RTTI Type Descriptor'
		dd offset ??_R3EthiopicCalendar@icu_56@@8 ; icu_56::EthiopicCalendar::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 8E4h
		public ??_R0?AVEthiopicCalendar@icu_56@@@8
; class	icu_56::EthiopicCalendar `RTTI Type Descriptor'
??_R0?AVEthiopicCalendar@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000008DCo
					; .rdata$r:icu_56::EthiopicCalendar::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avethiopicca	db '.?AVEthiopicCalendar@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 90Ch
		public ??_R3EthiopicCalendar@icu_56@@8
; icu_56::EthiopicCalendar::`RTTI Class	Hierarchy Descriptor'
??_R3EthiopicCalendar@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:000008E0o
					; .rdata$r:0000094Co
		dd 5
		dd offset ??_R2EthiopicCalendar@icu_56@@8 ; icu_56::EthiopicCalendar::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 91Ch
		public ??_R2EthiopicCalendar@icu_56@@8
; icu_56::EthiopicCalendar::`RTTI Base Class Array'
??_R2EthiopicCalendar@icu_56@@8	dd offset ??_R1A@?0A@EA@EthiopicCalendar@icu_56@@8
					; DATA XREF: .rdata$r:00000918o
					; icu_56::EthiopicCalendar::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CECalendar@icu_56@@8 ; icu_56::CECalendar::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 934h
		public ??_R1A@?0A@EA@EthiopicCalendar@icu_56@@8
; icu_56::EthiopicCalendar::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@EthiopicCalendar@icu_56@@8 dd offset ??_R0?AVEthiopicCalendar@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::EthiopicCalendar::`RTTI Base Class Array'o
					; icu_56::EthiopicCalendar `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3EthiopicCalendar@icu_56@@8 ; icu_56::EthiopicCalendar::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 950h
		public ??_R1A@?0A@EA@CECalendar@icu_56@@8
; icu_56::CECalendar::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@CECalendar@icu_56@@8 dd offset ??_R0?AVCECalendar@icu_56@@@8
					; DATA XREF: .rdata$r:00000920o
					; .rdata$r:icu_56::CECalendar::`RTTI Base Class	Array'o
					; icu_56::CECalendar `RTTI Type	Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CECalendar@icu_56@@8 ; icu_56::CECalendar::`RTTI	Class Hierarchy	Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 96Ch
		public ??_R0?AVCECalendar@icu_56@@@8
; class	icu_56::CECalendar `RTTI Type Descriptor'
??_R0?AVCECalendar@icu_56@@@8 dd offset	??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::CECalendar::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcecalendar	db '.?AVCECalendar@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 98Ch
		public ??_R3CECalendar@icu_56@@8
; icu_56::CECalendar::`RTTI Class Hierarchy Descriptor'
??_R3CECalendar@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000968o
		dd 4
		dd offset ??_R2CECalendar@icu_56@@8 ; icu_56::CECalendar::`RTTI	Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 99Ch
		public ??_R2CECalendar@icu_56@@8
; icu_56::CECalendar::`RTTI Base Class Array'
??_R2CECalendar@icu_56@@8 dd offset ??_R1A@?0A@EA@CECalendar@icu_56@@8
					; DATA XREF: .rdata$r:00000998o
					; icu_56::CECalendar::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Base Class	Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9B0h
		public ??_R1A@?0A@EA@Calendar@icu_56@@8
; icu_56::Calendar::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@Calendar@icu_56@@8 dd offset ??_R0?AVCalendar@icu_56@@@8
					; DATA XREF: .rdata$r:00000924o
					; .rdata$r:000009A0o ...
					; icu_56::Calendar `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 9CCh
		public ??_R0?AVCalendar@icu_56@@@8
; class	icu_56::Calendar `RTTI Type Descriptor'
??_R0?AVCalendar@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::Calendar::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcalendar@i	db '.?AVCalendar@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9ECh
		public ??_R3Calendar@icu_56@@8
; icu_56::Calendar::`RTTI Class	Hierarchy Descriptor'
??_R3Calendar@icu_56@@8	dd 2 dup(0)	; DATA XREF: .rdata$r:000009C8o
		dd 3
		dd offset ??_R2Calendar@icu_56@@8 ; icu_56::Calendar::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 9FCh
		public ??_R2Calendar@icu_56@@8
; icu_56::Calendar::`RTTI Base Class Array'
??_R2Calendar@icu_56@@8	dd offset ??_R1A@?0A@EA@Calendar@icu_56@@8
					; DATA XREF: .rdata$r:000009F8o
					; icu_56::Calendar::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A0Ch
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:00000928o
					; .rdata$r:000009A4o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0A28h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A48h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000A24o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A58h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00000A54o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0A64h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:0000092Co
					; .rdata$r:000009A8o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0A80h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0AA0h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000A7Co
					; .rdata$r:00000AD0o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0AB0h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:00000AACo
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 0AB8h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0AD4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::EthiopicCalendar::`scalar deleting destructor'(unsigned int)
		public ??_GEthiopicCalendar@icu_56@@UAEPAXI@Z
??_GEthiopicCalendar@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1EthiopicCalendar@icu_56@@UAE@XZ ; icu_56::EthiopicCalendar::~EthiopicCalendar(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_B1D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_B1D:				; CODE XREF: icu_56::EthiopicCalendar::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GEthiopicCalendar@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B38h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::EthiopicCalendar	*this, const struct icu_56::EthiopicCalendar *)
		public ??0EthiopicCalendar@icu_56@@QAE@ABV01@@Z
??0EthiopicCalendar@icu_56@@QAE@ABV01@@Z proc near
					; CODE XREF: icu_56::EthiopicCalendar::clone(void)+79p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::CECalendar *
		mov	ecx, [ebp+var_8] ; this
		call	??0CECalendar@icu_56@@IAE@ABV01@@Z ; icu_56::CECalendar::CECalendar(icu_56::CECalendar const &)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7EthiopicCalendar@icu_56@@6B@ ; const icu_56::EthiopicCalendar::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+260h]
		mov	[eax+260h], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0EthiopicCalendar@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B9Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::EthiopicCalendar::~EthiopicCalendar(icu_56::EthiopicCalendar *__hidden this)
		public ??1EthiopicCalendar@icu_56@@UAE@XZ
??1EthiopicCalendar@icu_56@@UAE@XZ proc	near
					; CODE XREF: icu_56::EthiopicCalendar::`scalar deleting	destructor'(uint)+26p
					; icu_56::initializeSystemDefaultCentury(void)+129p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7EthiopicCalendar@icu_56@@6B@ ; const icu_56::EthiopicCalendar::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1CECalendar@icu_56@@MAE@XZ ; icu_56::CECalendar::~CECalendar(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1EthiopicCalendar@icu_56@@UAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0BE4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::Calendar *__thiscall icu_56::EthiopicCalendar::clone(icu_56::EthiopicCalendar *__hidden this)
		public ?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ
?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ proc near ;	DATA XREF: .rdata:00000810o

var_F4		= dword	ptr -0F4h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	esi, esp
		push	268h		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_E0], 0
		jz	short loc_C6A
		mov	eax, [ebp+var_14]
		push	eax		; struct icu_56::EthiopicCalendar *
		mov	ecx, [ebp+var_E0] ; this
		call	??0EthiopicCalendar@icu_56@@QAE@ABV01@@Z ; icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::EthiopicCalendar const &)
		mov	[ebp+var_F4], eax
		jmp	short loc_C74
; ---------------------------------------------------------------------------

loc_C6A:				; CODE XREF: icu_56::EthiopicCalendar::clone(void)+6Dj
		mov	[ebp+var_F4], 0

loc_C74:				; CODE XREF: icu_56::EthiopicCalendar::clone(void)+84j
		mov	ecx, [ebp+var_F4]
		mov	[ebp+var_EC], ecx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_EC]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 0CACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ$0 proc near
					; DATA XREF: .xdata$x:00000CE8o
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ	proc near
					; DATA XREF: icu_56::EthiopicCalendar::clone(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ
		jmp	___CxxFrameHandler3
__ehhandler$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 0CE4h
__unwindtable$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000CF4o
		dd offset __unwindfunclet$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ$0
__ehfuncinfo$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ+14o
		dd offset __unwindtable$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D10h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	char *__thiscall icu_56::EthiopicCalendar::getType(icu_56::EthiopicCalendar *__hidden this)
		public ?getType@EthiopicCalendar@icu_56@@UBEPBDXZ
?getType@EthiopicCalendar@icu_56@@UBEPBDXZ proc	near ; DATA XREF: .rdata:00000860o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	; icu_56::EthiopicCalendar::isAmeteAlemEra(void)
		movsx	eax, al
		test	eax, eax
		jz	short loc_D49
		mov	eax, offset ??_C@_0BE@IDOMJDKB@ethiopic?9amete?9alem?$AA@ ; "ethiopic-amete-alem"
		jmp	short loc_D4E
; ---------------------------------------------------------------------------

loc_D49:				; CODE XREF: icu_56::EthiopicCalendar::getType(void)+30j
		mov	eax, offset ??_C@_08MJDBGEAL@ethiopic?$AA@ ; "ethiopic"

loc_D4E:				; CODE XREF: icu_56::EthiopicCalendar::getType(void)+37j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getType@EthiopicCalendar@icu_56@@UBEPBDXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D64h
		public ??_C@_08MJDBGEAL@ethiopic?$AA@
; `string'
??_C@_08MJDBGEAL@ethiopic?$AA@ db 'ethiopic',0
					; DATA XREF: icu_56::EthiopicCalendar::getType(void):loc_D49o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D70h
		public ??_C@_0BE@IDOMJDKB@ethiopic?9amete?9alem?$AA@
; `string'
??_C@_0BE@IDOMJDKB@ethiopic?9amete?9alem?$AA@ db 'ethiopic-amete-alem',0
					; DATA XREF: icu_56::EthiopicCalendar::getType(void)+32o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0D84h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::EthiopicCalendar::setAmeteAlemEra(icu_56::EthiopicCalendar *this, signed __int8)
		public ?setAmeteAlemEra@EthiopicCalendar@icu_56@@QAEXC@Z
?setAmeteAlemEra@EthiopicCalendar@icu_56@@QAEXC@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		movsx	eax, [ebp+arg_0]
		neg	eax
		sbb	eax, eax
		neg	eax
		mov	ecx, [ebp+var_8]
		mov	[ecx+260h], eax
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?setAmeteAlemEra@EthiopicCalendar@icu_56@@QAEXC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DC4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__thiscall icu_56::EthiopicCalendar::isAmeteAlemEra(icu_56::EthiopicCalendar *__hidden this)
		public ?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ
?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	proc near
					; CODE XREF: icu_56::EthiopicCalendar::getType(void)+26p
					; icu_56::EthiopicCalendar::handleGetExtendedYear(void)+48p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+260h], 1
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::EthiopicCalendar::handleGetExtendedYear(icu_56::EthiopicCalendar *__hidden this)
		public ?handleGetExtendedYear@EthiopicCalendar@icu_56@@MAEHXZ
?handleGetExtendedYear@EthiopicCalendar@icu_56@@MAEHXZ proc near
					; DATA XREF: .rdata:00000894o

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp

loc_DFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	1
		push	13h
		mov	ecx, [ebp+var_8]
		call	?newerField@Calendar@icu_56@@IBE?AW4UCalendarDateFields@@W43@0@Z ; icu_56::Calendar::newerField(UCalendarDateFields,UCalendarDateFields)
		cmp	eax, 13h
		jnz	short loc_E41
		push	1
		push	13h
		mov	ecx, [ebp+var_8]
		call	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet(UCalendarDateFields,int)
		mov	[ebp+var_14], eax
		jmp	short loc_EA3
; ---------------------------------------------------------------------------

loc_E41:				; CODE XREF: icu_56::EthiopicCalendar::handleGetExtendedYear(void)+32j
		mov	ecx, [ebp+var_8] ; this
		call	?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	; icu_56::EthiopicCalendar::isAmeteAlemEra(void)
		movsx	eax, al
		test	eax, eax
		jz	short loc_E69
		push	157Dh
		push	1
		mov	ecx, [ebp+var_8]
		call	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet(UCalendarDateFields,int)
		sub	eax, 157Ch
		mov	[ebp+var_14], eax
		jmp	short loc_EA3
; ---------------------------------------------------------------------------

loc_E69:				; CODE XREF: icu_56::EthiopicCalendar::handleGetExtendedYear(void)+52j
		push	1
		push	0
		mov	ecx, [ebp+var_8]
		call	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet(UCalendarDateFields,int)
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 1
		jnz	short loc_E8F
		push	1
		push	1
		mov	ecx, [ebp+var_8]
		call	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet(UCalendarDateFields,int)
		mov	[ebp+var_14], eax
		jmp	short loc_EA3
; ---------------------------------------------------------------------------

loc_E8F:				; CODE XREF: icu_56::EthiopicCalendar::handleGetExtendedYear(void)+80j
		push	1
		push	1
		mov	ecx, [ebp+var_8]
		call	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet(UCalendarDateFields,int)
		sub	eax, 157Ch
		mov	[ebp+var_14], eax

loc_EA3:				; CODE XREF: icu_56::EthiopicCalendar::handleGetExtendedYear(void)+43j
					; icu_56::EthiopicCalendar::handleGetExtendedYear(void)+6Bj ...
		mov	eax, [ebp+var_14]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?handleGetExtendedYear@EthiopicCalendar@icu_56@@MAEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0EBCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::EthiopicCalendar::handleComputeFields(icu_56::EthiopicCalendar *this,	int, enum UErrorCode *)
		public ?handleComputeFields@EthiopicCalendar@icu_56@@MAEXHAAW4UErrorCode@@@Z
?handleComputeFields@EthiopicCalendar@icu_56@@MAEXHAAW4UErrorCode@@@Z proc near
					; DATA XREF: .rdata:000008A8o

var_108		= byte ptr -108h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_108]
		mov	ecx, 42h ; 'B'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		lea	eax, [ebp+var_2C]
		push	eax		; int *
		lea	ecx, [ebp+var_20]
		push	ecx		; int *
		lea	edx, [ebp+var_14]
		push	edx		; int *
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+0C4h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; int
		call	?jdToCE@CECalendar@icu_56@@KAXHHAAH00@Z	; icu_56::CECalendar::jdToCE(int,int,int &,int &,int &)
		add	esp, 14h
		mov	ecx, [ebp+var_8] ; this
		call	?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	; icu_56::EthiopicCalendar::isAmeteAlemEra(void)
		movsx	eax, al
		test	eax, eax
		jz	short loc_F34
		mov	[ebp+var_38], 0
		mov	eax, [ebp+var_14]
		add	eax, 157Ch
		mov	[ebp+var_44], eax
		jmp	short loc_F5B
; ---------------------------------------------------------------------------

loc_F34:				; CODE XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+62j
		cmp	[ebp+var_14], 0
		jle	short loc_F49
		mov	[ebp+var_38], 1
		mov	eax, [ebp+var_14]
		mov	[ebp+var_44], eax
		jmp	short loc_F5B
; ---------------------------------------------------------------------------

loc_F49:				; CODE XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+7Cj
		mov	[ebp+var_38], 0
		mov	eax, [ebp+var_14]
		add	eax, 157Ch
		mov	[ebp+var_44], eax

loc_F5B:				; CODE XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+76j
					; icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+8Bj
		mov	eax, [ebp+var_14]
		push	eax
		push	13h
		mov	ecx, [ebp+var_8]
		call	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet(UCalendarDateFields,int)
		mov	eax, [ebp+var_38]
		push	eax
		push	0
		mov	ecx, [ebp+var_8]
		call	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet(UCalendarDateFields,int)
		mov	eax, [ebp+var_44]
		push	eax
		push	1
		mov	ecx, [ebp+var_8]
		call	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet(UCalendarDateFields,int)
		mov	eax, [ebp+var_20]
		push	eax
		push	2
		mov	ecx, [ebp+var_8]
		call	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet(UCalendarDateFields,int)
		mov	eax, [ebp+var_2C]
		push	eax
		push	5
		mov	ecx, [ebp+var_8]
		call	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet(UCalendarDateFields,int)
		mov	eax, [ebp+var_20]
		imul	eax, 1Eh
		add	eax, [ebp+var_2C]
		push	eax
		push	6
		mov	ecx, [ebp+var_8]
		call	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet(UCalendarDateFields,int)
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN11
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 108h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?handleComputeFields@EthiopicCalendar@icu_56@@MAEXHAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
$LN11		dd 3			; DATA XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+FDo
		dd offset $LN10
$LN10		dd 0FFFFFFECh, 4	; DATA XREF: .text:00000FE0o
		dd offset $LN7		; "eyear"
		dd 0FFFFFFE0h, 4
		dd offset $LN8		; "month"
		dd 0FFFFFFD4h
dword_1000	dd 4			; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::scientifico
		dd offset $LN9
$LN9		dd 796164h		; DATA XREF: .text:00001004o
$LN8		db 'month',0            ; DATA XREF: .text:00000FF8o
$LN7		db 'eyear',0            ; DATA XREF: .text:00000FECo
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1018h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: virtual int __thiscall icu_56::EthiopicCalendar::handleGetLimit(enum  UCalendarDateFields,	enum  icu_56::Calendar::ELimitType)const
		public ?handleGetLimit@EthiopicCalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z
?handleGetLimit@EthiopicCalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z proc near
					; DATA XREF: .rdata:00000880o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	; icu_56::EthiopicCalendar::isAmeteAlemEra(void)
		movsx	eax, al
		test	eax, eax
		jz	short loc_1054
		cmp	[ebp+arg_0], 0
		jnz	short loc_1054
		xor	eax, eax
		jmp	short loc_1064
; ---------------------------------------------------------------------------

loc_1054:				; CODE XREF: icu_56::EthiopicCalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)+30j
					; icu_56::EthiopicCalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)+36j
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	ecx, [ebp+var_8]
		call	?handleGetLimit@CECalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z ; icu_56::CECalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)

loc_1064:				; CODE XREF: icu_56::EthiopicCalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)+3Aj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?handleGetLimit@EthiopicCalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 107Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::EthiopicCalendar::defaultCenturyStart(icu_56::EthiopicCalendar *__hidden this)
		public ?defaultCenturyStart@EthiopicCalendar@icu_56@@MBENXZ
?defaultCenturyStart@EthiopicCalendar@icu_56@@MBENXZ proc near ; DATA XREF: .rdata:000008BCo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi		; void (__cdecl	*)()
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	offset ?initializeSystemDefaultCentury@icu_56@@YAXXZ ; struct icu_56::UInitOnce	*
		push	offset _gSystemDefaultCenturyInit ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))
		add	esp, 8
		fld	ds:_gSystemDefaultCenturyStart
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?defaultCenturyStart@EthiopicCalendar@icu_56@@MBENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 10CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::umtx_initOnce(icu_56 *__hidden this, struct icu_56::UInitOnce *,	void (__cdecl *)())
		public ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z proc near
					; CODE XREF: icu_56::EthiopicCalendar::defaultCenturyStart(void)+2Dp
					; icu_56::EthiopicCalendar::defaultCenturyStartYear(void)+2Dp

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi		; struct icu_56::UInitOnce *
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	?umtx_loadAcquire@icu_56@@YAHACJ@Z ; icu_56::umtx_loadAcquire(long volatile &)
		add	esp, 4
		cmp	eax, 2
		jnz	short loc_10FD
		jmp	short loc_113C
; ---------------------------------------------------------------------------

loc_10FD:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+2Dj
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z ;	icu_56::umtx_initImplPreInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_113C
		mov	esi, esp
		call	[ebp+arg_4]
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Destination]
		push	eax		; this
		call	dword ptr ds:__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z ; icu_56::umtx_initImplPostInit(icu_56::UInitOnce &)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_113C:				; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+2Fj
					; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+4Cj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1150h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::umtx_loadAcquire(volatile	LONG *Destination, volatile __int32 *)
		public ?umtx_loadAcquire@icu_56@@YAHACJ@Z
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+22p

var_C0		= byte ptr -0C0h
Destination	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		push	0		; Comperand
		push	0		; Exchange
		mov	eax, [ebp+Destination]
		push	eax		; Destination
		call	dword ptr ds:__imp__InterlockedCompareExchange@12 ; InterlockedCompareExchange(x,x,x)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?umtx_loadAcquire@icu_56@@YAHACJ@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 119Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UInitOnce icu_56::initializeSystemDefaultCentury
?initializeSystemDefaultCentury@icu_56@@YAXXZ proc near
					; DATA XREF: icu_56::EthiopicCalendar::defaultCenturyStart(void)+23o
					; icu_56::EthiopicCalendar::defaultCenturyStartYear(void)+23o

var_440		= qword	ptr -440h
var_428		= dword	ptr -428h
var_424		= dword	ptr -424h
var_41C		= byte ptr -41Ch
var_288		= byte ptr -288h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?initializeSystemDefaultCentury@icu_56@@YAXXZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 41Ch
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_428]
		mov	ecx, 107h
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], 0
		push	0
		lea	eax, [ebp+var_18]
		push	eax
		mov	esi, esp
		push	0		; char *
		push	0		; char *
		push	0		; char *
		push	offset ??_C@_0BD@KPFENBAG@?$EAcalendar?$DNethiopic?$AA@	; "@calendar=ethiopic"
		lea	ecx, [ebp+var_41C] ; this
		call	dword ptr ds:__imp_??0Locale@icu_56@@QAE@PBD000@Z ; icu_56::Locale::Locale(char	const *,char const *,char const	*,char const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_424], eax
		mov	ecx, [ebp+var_424]
		mov	[ebp+var_428], ecx
		mov	[ebp+var_4], 0
		mov	edx, [ebp+var_428]
		push	edx
		lea	ecx, [ebp+var_288]
		call	??0EthiopicCalendar@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@W4EEraType@01@@Z ; icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::Locale const &,UErrorCode &,icu_56::EthiopicCalendar::EEraType)
		mov	byte ptr [ebp+var_4], 2
		mov	esi, esp
		lea	ecx, [ebp+var_41C] ; this
		call	dword ptr ds:__imp_??1Locale@icu_56@@UAE@XZ ; icu_56::Locale::~Locale(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_18]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_12B8
		lea	eax, [ebp+var_18]
		push	eax		; enum UErrorCode *
		call	?getNow@Calendar@icu_56@@SANXZ ; icu_56::Calendar::getNow(void)
		sub	esp, 8
		fstp	qword ptr [esp+0] ; double
		lea	ecx, [ebp+var_288] ; this
		call	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime(double,UErrorCode	&)
		lea	eax, [ebp+var_18]
		push	eax
		push	0FFFFFFB0h
		push	1
		lea	ecx, [ebp+var_288]
		call	?add@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z ; icu_56::Calendar::add(UCalendarDateFields,int,UErrorCode	&)
		lea	eax, [ebp+var_18]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_288] ; this
		call	?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTime(UErrorCode	&)
		fstp	ds:_gSystemDefaultCenturyStart
		lea	eax, [ebp+var_18]
		push	eax
		push	1
		lea	ecx, [ebp+var_288]
		call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get(UCalendarDateFields,UErrorCode &)
		mov	ds:_gSystemDefaultCenturyStartYear, eax

loc_12B8:				; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+C2j
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_288] ; this
		call	??1EthiopicCalendar@icu_56@@UAE@XZ ; icu_56::EthiopicCalendar::~EthiopicCalendar(void)
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN10_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 428h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?initializeSystemDefaultCentury@icu_56@@YAXXZ endp ; sp-analysis failed

; ---------------------------------------------------------------------------
$LN10_0		dd 2			; DATA XREF: icu_56::initializeSystemDefaultCentury(void)+132o
		dd offset $LN9_0
$LN9_0		dd 0FFFFFFE8h, 4	; DATA XREF: .text:00001308o
		dd offset $LN6		; "status"
		dd 0FFFFFD78h, 268h
		dd offset $LN7_0	; "calendar"
$LN7_0		db 'calendar',0         ; DATA XREF: .text:00001320o
$LN6		db 'status',0           ; DATA XREF: .text:00001314o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1334h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$0	proc near
					; DATA XREF: .xdata$x:00001394o
		mov	esi, esp
		lea	ecx, [ebp-41Ch]	; this
		call	dword ptr ds:__imp_??1Locale@icu_56@@UAE@XZ ; icu_56::Locale::~Locale(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$0	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$1	proc near
					; DATA XREF: .xdata$x:0000139Co
					; .xdata$x:000013A4o
		lea	ecx, [ebp-288h]	; this
		jmp	??1EthiopicCalendar@icu_56@@UAE@XZ ; icu_56::EthiopicCalendar::~EthiopicCalendar(void)
__unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$1	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?initializeSystemDefaultCentury@icu_56@@YAXXZ proc near
					; DATA XREF: icu_56::initializeSystemDefaultCentury(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-42Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?initializeSystemDefaultCentury@icu_56@@YAXXZ
		jmp	___CxxFrameHandler3
__ehhandler$?initializeSystemDefaultCentury@icu_56@@YAXXZ endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 137Ch
		public ??_C@_0BD@KPFENBAG@?$EAcalendar?$DNethiopic?$AA@
; char `string'[]
??_C@_0BD@KPFENBAG@?$EAcalendar?$DNethiopic?$AA@ db '@calendar=ethiopic',0
					; DATA XREF: icu_56::initializeSystemDefaultCentury(void)+55o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1390h
__unwindtable$?initializeSystemDefaultCentury@icu_56@@YAXXZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000013B0o
		dd offset __unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$0
		dd 0
		dd offset __unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$1
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$1
__ehfuncinfo$?initializeSystemDefaultCentury@icu_56@@YAXXZ dd 19930522h, 3
					; DATA XREF: __ehhandler$?initializeSystemDefaultCentury@icu_56@@YAXXZ+1Eo
		dd offset __unwindtable$?initializeSystemDefaultCentury@icu_56@@YAXXZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+B5p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 13F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::EthiopicCalendar::defaultCenturyStartYear(icu_56::EthiopicCalendar *__hidden this)
		public ?defaultCenturyStartYear@EthiopicCalendar@icu_56@@MBEHXZ
?defaultCenturyStartYear@EthiopicCalendar@icu_56@@MBEHXZ proc near
					; DATA XREF: .rdata:000008C0o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi		; void (__cdecl	*)()
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	offset ?initializeSystemDefaultCentury@icu_56@@YAXXZ ; struct icu_56::UInitOnce	*
		push	offset _gSystemDefaultCenturyInit ; this
		call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ; icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))
		add	esp, 8
		mov	ecx, [ebp+var_8] ; this
		call	?isAmeteAlemEra@EthiopicCalendar@icu_56@@QBECXZ	; icu_56::EthiopicCalendar::isAmeteAlemEra(void)
		movsx	eax, al
		test	eax, eax
		jz	short loc_1448
		mov	eax, ds:_gSystemDefaultCenturyStartYear
		add	eax, 157Ch
		jmp	short loc_144D
; ---------------------------------------------------------------------------

loc_1448:				; CODE XREF: icu_56::EthiopicCalendar::defaultCenturyStartYear(void)+42j
		mov	eax, ds:_gSystemDefaultCenturyStartYear

loc_144D:				; CODE XREF: icu_56::EthiopicCalendar::defaultCenturyStartYear(void)+4Ej
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?defaultCenturyStartYear@EthiopicCalendar@icu_56@@MBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1464h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::EthiopicCalendar::getJDEpochOffset(icu_56::EthiopicCalendar *__hidden this)
		public ?getJDEpochOffset@EthiopicCalendar@icu_56@@MBEHXZ
?getJDEpochOffset@EthiopicCalendar@icu_56@@MBEHXZ proc near ; DATA XREF: .rdata:000008CCo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, 1A4DD0h
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getJDEpochOffset@EthiopicCalendar@icu_56@@MBEHXZ endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::TimeZone::operator!=(icu_56::TimeZone const &):loc_1BCp
					; icu_56::TimeZone::operator!=(icu_56::TimeZone	const &)+50p ...
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString const &)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::TimeZone::getID(icu_56::UnicodeString &)+2Fp
					; icu_56::TimeZone::setID(icu_56::UnicodeString	const &)+2Fp
					; DATA XREF: ...
; double __thiscall icu_56::Calendar::getTimeInMillis(icu_56::Calendar *__hidden this, enum UErrorCode *)
		extrn ?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::getTime(UErrorCode &)+2Ap
		extrn __fltused:near
; void __thiscall icu_56::Calendar::setTimeInMillis(icu_56::Calendar *__hidden this, double, enum UErrorCode *)
		extrn ?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::setTime(double,UErrorCode &)+33p
; struct icu_56::Calendar *__cdecl static icu_56::Calendar::createInstance(struct icu_56::TimeZone *, const struct icu_56::Locale *, enum UErrorCode *)
		extrn ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+36p
; const	struct icu_56::Locale *__cdecl static icu_56::Locale::getDefault()
		extrn __imp_?getDefault@Locale@icu_56@@SAABV12@XZ:near
					; CODE XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+24p
					; DATA XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+24r
; int __thiscall icu_56::Calendar::weekNumber(icu_56::Calendar *__hidden this, int, int, int)
		extrn ?weekNumber@Calendar@icu_56@@IAEHHHH@Z:near
					; CODE XREF: icu_56::Calendar::weekNumber(int,int)+32p
; _DWORD __thiscall icu_56::CECalendar::CECalendar(icu_56::CECalendar *__hidden	this, const struct icu_56::Locale *, enum UErrorCode *)
		extrn ??0CECalendar@icu_56@@IAE@ABVLocale@1@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::Locale const &,UErrorCode &,icu_56::EthiopicCalendar::EEraType)+2Ep
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::EthiopicCalendar `RTTI Type Descriptor'o
					; .data:icu_56::CECalendar `RTTI Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::EthiopicCalendar::`scalar deleting destructor'(unsigned int)
		extrn ??_GEthiopicCalendar@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::EthiopicCalendar::`vector deleting destructor'(unsigned int)
		extrn ??_EEthiopicCalendar@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::EthiopicCalendar::`vftable'o
; public: virtual signed char __thiscall icu_56::Calendar::operator==(class icu_56::Calendar const &)const
		extrn ??8Calendar@icu_56@@UBECABV01@@Z:near ; DATA XREF: .rdata:00000814o
; public: virtual signed char __thiscall icu_56::Calendar::isEquivalentTo(class	icu_56::Calendar const &)const
		extrn ?isEquivalentTo@Calendar@icu_56@@UBECABV12@@Z:near
					; DATA XREF: .rdata:00000818o
; void __thiscall __high icu_56::Calendar::add(enum UCalendarDateFields, int, enum UErrorCode *)
		extrn ?add@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+ECp
					; DATA XREF: .rdata:0000081Co
; public: virtual void __thiscall icu_56::Calendar::add(enum  icu_56::Calendar::EDateFields, int, enum	UErrorCode &)
		extrn ?add@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000820o
; public: virtual void __thiscall icu_56::Calendar::roll(enum  UCalendarDateFields, int, enum  UErrorCode &)
		extrn ?roll@Calendar@icu_56@@UAEXW4UCalendarDateFields@@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000824o
; public: virtual void __thiscall icu_56::Calendar::roll(enum  icu_56::Calendar::EDateFields, int, enum	 UErrorCode &)
		extrn ?roll@Calendar@icu_56@@UAEXW4EDateFields@12@HAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000828o
; public: virtual int __thiscall icu_56::Calendar::fieldDifference(double, enum	 UCalendarDateFields, enum  UErrorCode &)
		extrn ?fieldDifference@Calendar@icu_56@@UAEHNW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:0000082Co
; public: virtual int __thiscall icu_56::Calendar::fieldDifference(double, enum	 icu_56::Calendar::EDateFields,	enum  UErrorCode &)
		extrn ?fieldDifference@Calendar@icu_56@@UAEHNW4EDateFields@12@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000830o
; protected: virtual signed char __thiscall icu_56::CECalendar::inDaylightTime(enum  UErrorCode	&)const
		extrn ?inDaylightTime@CECalendar@icu_56@@MBECAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000834o
; public: virtual int __thiscall icu_56::Calendar::getMinimum(enum  UCalendarDateFields)const
		extrn ?getMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000838o
; public: virtual int __thiscall icu_56::Calendar::getMinimum(enum  icu_56::Calendar::EDateFields)const
		extrn ?getMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:0000083Co
; public: virtual int __thiscall icu_56::Calendar::getMaximum(enum  UCalendarDateFields)const
		extrn ?getMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000840o
; public: virtual int __thiscall icu_56::Calendar::getMaximum(enum  icu_56::Calendar::EDateFields)const
		extrn ?getMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:00000844o
; public: virtual int __thiscall icu_56::Calendar::getGreatestMinimum(enum  UCalendarDateFields)const
		extrn ?getGreatestMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000848o
; public: virtual int __thiscall icu_56::Calendar::getGreatestMinimum(enum  icu_56::Calendar::EDateFields)const
		extrn ?getGreatestMinimum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:0000084Co
; public: virtual int __thiscall icu_56::Calendar::getLeastMaximum(enum	 UCalendarDateFields)const
		extrn ?getLeastMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000850o
; public: virtual int __thiscall icu_56::Calendar::getLeastMaximum(enum	 icu_56::Calendar::EDateFields)const
		extrn ?getLeastMaximum@Calendar@icu_56@@UBEHW4EDateFields@12@@Z:near
					; DATA XREF: .rdata:00000854o
; public: virtual int __thiscall icu_56::Calendar::getActualMinimum(enum  UCalendarDateFields, enum  UErrorCode	&)const
		extrn ?getActualMinimum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000858o
; public: virtual int __thiscall icu_56::Calendar::getActualMaximum(enum  UCalendarDateFields, enum  UErrorCode	&)const
		extrn ?getActualMaximum@Calendar@icu_56@@UBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:0000085Co
; public: virtual enum	UCalendarWeekdayType __thiscall	icu_56::Calendar::getDayOfWeekType(enum	 UCalendarDaysOfWeek, enum  UErrorCode &)const
		extrn ?getDayOfWeekType@Calendar@icu_56@@UBE?AW4UCalendarWeekdayType@@W4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000864o
; public: virtual int __thiscall icu_56::Calendar::getWeekendTransition(enum  UCalendarDaysOfWeek, enum	 UErrorCode &)const
		extrn ?getWeekendTransition@Calendar@icu_56@@UBEHW4UCalendarDaysOfWeek@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000868o
; public: virtual signed char __thiscall icu_56::Calendar::isWeekend(void)const
		extrn ?isWeekend@Calendar@icu_56@@UBECXZ:near ;	DATA XREF: .rdata:0000086Co
; public: virtual signed char __thiscall icu_56::Calendar::isWeekend(double, enum  UErrorCode &)const
		extrn ?isWeekend@Calendar@icu_56@@UBECNAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000870o
; protected: virtual void __thiscall icu_56::Calendar::computeTime(enum	 UErrorCode &)
		extrn ?computeTime@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000874o
; protected: virtual void __thiscall icu_56::Calendar::computeFields(enum  UErrorCode &)
		extrn ?computeFields@Calendar@icu_56@@MAEXAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:00000878o
; protected: virtual void __thiscall icu_56::Calendar::prepareGetActual(enum  UCalendarDateFields, signed char,	enum  UErrorCode &)
		extrn ?prepareGetActual@Calendar@icu_56@@MAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:0000087Co
; protected: virtual int __thiscall icu_56::Calendar::getLimit(enum  UCalendarDateFields, enum	icu_56::Calendar::ELimitType)const
		extrn ?getLimit@Calendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@12@@Z:near
					; DATA XREF: .rdata:00000884o
; protected: virtual int __thiscall icu_56::CECalendar::handleComputeMonthStart(int, int, signed char)const
		extrn ?handleComputeMonthStart@CECalendar@icu_56@@MBEHHHC@Z:near
					; DATA XREF: .rdata:00000888o
; protected: virtual int __thiscall icu_56::Calendar::handleGetMonthLength(int,	int)const
		extrn ?handleGetMonthLength@Calendar@icu_56@@MBEHHH@Z:near
					; DATA XREF: .rdata:0000088Co
; protected: virtual int __thiscall icu_56::Calendar::handleGetYearLength(int)const
		extrn ?handleGetYearLength@Calendar@icu_56@@MBEHH@Z:near
					; DATA XREF: .rdata:00000890o
; protected: virtual int __thiscall icu_56::Calendar::handleComputeJulianDay(enum  UCalendarDateFields)
		extrn ?handleComputeJulianDay@Calendar@icu_56@@MAEHW4UCalendarDateFields@@@Z:near
					; DATA XREF: .rdata:00000898o
; protected: virtual int __thiscall icu_56::Calendar::handleGetExtendedYearFromWeekFields(int, int)
		extrn ?handleGetExtendedYearFromWeekFields@Calendar@icu_56@@MAEHHH@Z:near
					; DATA XREF: .rdata:0000089Co
; protected: virtual void __thiscall icu_56::Calendar::validateField(enum  UCalendarDateFields,	enum  UErrorCode &)
		extrn ?validateField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:000008A0o
; protected: virtual int const (* __thiscall icu_56::Calendar::getFieldResolutionTable(void)const)[12][8]
		extrn ?getFieldResolutionTable@Calendar@icu_56@@MBEPAY1M@7$$CBHXZ:near
					; DATA XREF: .rdata:000008A4o
; protected: virtual int __thiscall icu_56::Calendar::getDefaultMonthInYear(int)
		extrn ?getDefaultMonthInYear@Calendar@icu_56@@MAEHH@Z:near
					; DATA XREF: .rdata:000008ACo
; protected: virtual int __thiscall icu_56::Calendar::getDefaultDayInMonth(int,	int)
		extrn ?getDefaultDayInMonth@Calendar@icu_56@@MAEHHH@Z:near
					; DATA XREF: .rdata:000008B0o
; protected: virtual void __thiscall icu_56::Calendar::pinField(enum  UCalendarDateFields, enum	 UErrorCode &)
		extrn ?pinField@Calendar@icu_56@@MAEXW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:000008B4o
; protected: virtual signed char __thiscall icu_56::CECalendar::haveDefaultCentury(void)const
		extrn ?haveDefaultCentury@CECalendar@icu_56@@MBECXZ:near
					; DATA XREF: .rdata:000008B8o
; public: virtual int __thiscall icu_56::Calendar::getRelatedYear(enum	UErrorCode &)const
		extrn ?getRelatedYear@Calendar@icu_56@@UBEHAAW4UErrorCode@@@Z:near
					; DATA XREF: .rdata:000008C4o
; public: virtual void __thiscall icu_56::Calendar::setRelatedYear(int)
		extrn ?setRelatedYear@Calendar@icu_56@@UAEXH@Z:near
					; DATA XREF: .rdata:000008C8o
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::`scalar deleting	destructor'(uint)+39p
					; __unwindfunclet$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ$0+9p
					; DATA XREF: ...
; _DWORD __thiscall icu_56::CECalendar::CECalendar(icu_56::CECalendar *__hidden	this, const struct icu_56::CECalendar *)
		extrn ??0CECalendar@icu_56@@IAE@ABV01@@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::EthiopicCalendar(icu_56::EthiopicCalendar const &)+2Ap
; _DWORD __thiscall icu_56::CECalendar::~CECalendar(icu_56::CECalendar *__hidden this)
		extrn ??1CECalendar@icu_56@@MAE@XZ:near
					; CODE XREF: icu_56::EthiopicCalendar::~EthiopicCalendar(void)+2Fp
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::clone(void)+49p
					; DATA XREF: icu_56::EthiopicCalendar::clone(void)+49r
		extrn ___security_cookie:near
					; DATA XREF: icu_56::EthiopicCalendar::clone(void)+2Er
					; icu_56::initializeSystemDefaultCentury(void)+2Cr
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ+19j
					; __ehhandler$?initializeSystemDefaultCentury@icu_56@@YAXXZ+23j
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$?clone@EthiopicCalendar@icu_56@@UBEPAVCalendar@2@XZ+Fp
					; icu_56::initializeSystemDefaultCentury(void)+152p ...
; enum UCalendarDateFields __thiscall __high icu_56::Calendar::newerField(enum UCalendarDateFields, enum UCalendarDateFields)
		extrn ?newerField@Calendar@icu_56@@IBE?AW4UCalendarDateFields@@W43@0@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::handleGetExtendedYear(void)+2Ap
; void __cdecl static icu_56::CECalendar::jdToCE(int, int, int *, int *, int *)
		extrn ?jdToCE@CECalendar@icu_56@@KAXHHAAH00@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+4Dp
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::EthiopicCalendar::handleComputeFields(int,UErrorCode &)+103p
					; icu_56::initializeSystemDefaultCentury(void)+138p
; int __thiscall __high	icu_56::CECalendar::handleGetLimit(enum	UCalendarDateFields, enum icu_56::Calendar::ELimitType)
		extrn ?handleGetLimit@CECalendar@icu_56@@MBEHW4UCalendarDateFields@@W4ELimitType@Calendar@2@@Z:near
					; CODE XREF: icu_56::EthiopicCalendar::handleGetLimit(UCalendarDateFields,icu_56::Calendar::ELimitType)+47p
; void __cdecl icu_56::umtx_initImplPostInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+60p
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+60r
; signed __int8	__cdecl	icu_56::umtx_initImplPreInit(icu_56 *__hidden this, struct icu_56::UInitOnce *)
		extrn __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near
					; CODE XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+37p
					; DATA XREF: icu_56::umtx_initOnce(icu_56::UInitOnce &,void (*)(void))+37r
; LONG __stdcall InterlockedCompareExchange(volatile LONG *Destination,	LONG Exchange, LONG Comperand)
		extrn __imp__InterlockedCompareExchange@12:near
					; CODE XREF: icu_56::umtx_loadAcquire(long volatile &)+28p
					; DATA XREF: icu_56::umtx_loadAcquire(long volatile &)+28r
; int __thiscall __high	icu_56::Calendar::get(enum UCalendarDateFields,	enum UErrorCode	*)
		extrn ?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+112p
; double __cdecl static	icu_56::Calendar::getNow()
		extrn ?getNow@Calendar@icu_56@@SANXZ:near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+C8p
; _DWORD __thiscall icu_56::Locale::~Locale(icu_56::Locale *__hidden this)
		extrn __imp_??1Locale@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+A4p
					; __unwindfunclet$?initializeSystemDefaultCentury@icu_56@@YAXXZ$0+8p
					; DATA XREF: ...
; _DWORD __thiscall icu_56::Locale::Locale(icu_56::Locale *__hidden this, const	char *,	const char *, const char *, const char *)
		extrn __imp_??0Locale@icu_56@@QAE@PBD000@Z:near
					; CODE XREF: icu_56::initializeSystemDefaultCentury(void)+60p
					; DATA XREF: icu_56::initializeSystemDefaultCentury(void)+60r


		end

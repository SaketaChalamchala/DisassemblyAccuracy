;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	9D3CAE91361C86A2E98F45FAB7849C7E
; Input	CRC32 :	403A06D0

; File Name   :	D:\compspace\objfiles\firefox\i18n\astro.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		public ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 0>::value
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?value@?$integral_constant@_N$00@tr1@std@@2_NB
; public: static bool const std::tr1::integral_constant<bool, 1>::value
?value@?$integral_constant@_N$00@tr1@std@@2_NB db 1
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ?value@?$integral_constant@I$0A@@tr1@std@@2IB
; public: static unsigned int const std::tr1::integral_constant<unsigned int, 0>::value
?value@?$integral_constant@I$0A@@tr1@std@@2IB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0Ch
		public ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
; public: static int const std::_Arithmetic_traits<bool>::_Rank
?_Rank@?$_Arithmetic_traits@_N@std@@2HB	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 10h
		public ?_Rank@?$_Arithmetic_traits@D@std@@2HB
; public: static int const std::_Arithmetic_traits<char>::_Rank
?_Rank@?$_Arithmetic_traits@D@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ?_Rank@?$_Arithmetic_traits@C@std@@2HB
; public: static int const std::_Arithmetic_traits<signed char>::_Rank
?_Rank@?$_Arithmetic_traits@C@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 18h
		public ?_Rank@?$_Arithmetic_traits@E@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned char>::_Rank
?_Rank@?$_Arithmetic_traits@E@std@@2HB dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ?_Rank@?$_Arithmetic_traits@F@std@@2HB
; public: static int const std::_Arithmetic_traits<short>::_Rank
?_Rank@?$_Arithmetic_traits@F@std@@2HB dd 3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 20h
		public ?_Rank@?$_Arithmetic_traits@G@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned short>::_Rank
?_Rank@?$_Arithmetic_traits@G@std@@2HB dd 3
					; DATA XREF: .rdata:int	const std::_Locbase<int>::messageso
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::showposo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ?_Rank@?$_Arithmetic_traits@H@std@@2HB
; public: static int const std::_Arithmetic_traits<int>::_Rank
?_Rank@?$_Arithmetic_traits@H@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ?_Rank@?$_Arithmetic_traits@I@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned int>::_Rank
?_Rank@?$_Arithmetic_traits@I@std@@2HB dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2Ch
		public ?_Rank@?$_Arithmetic_traits@J@std@@2HB
; public: static int const std::_Arithmetic_traits<long>::_Rank
?_Rank@?$_Arithmetic_traits@J@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ?_Rank@?$_Arithmetic_traits@K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned long>::_Rank
?_Rank@?$_Arithmetic_traits@K@std@@2HB dd 5
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 34h
		public ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
; public: static int const std::_Arithmetic_traits<__int64>::_Rank
?_Rank@?$_Arithmetic_traits@_J@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 38h
		public ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
; public: static int const std::_Arithmetic_traits<unsigned __int64>::_Rank
?_Rank@?$_Arithmetic_traits@_K@std@@2HB	dd 6
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ?_Rank@?$_Arithmetic_traits@M@std@@2HB
; public: static int const std::_Arithmetic_traits<float>::_Rank
?_Rank@?$_Arithmetic_traits@M@std@@2HB dd 7
					; DATA XREF: .rdata:int	const std::_Locbase<int>::allo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40h
		public ?_Rank@?$_Arithmetic_traits@N@std@@2HB
; public: static int const std::_Arithmetic_traits<double>::_Rank
?_Rank@?$_Arithmetic_traits@N@std@@2HB dd 8
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::lefto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Nocreateo ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ?_Rank@?$_Arithmetic_traits@O@std@@2HB
; public: static int const std::_Arithmetic_traits<long	double>::_Rank
?_Rank@?$_Arithmetic_traits@O@std@@2HB dd 9
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 48h
		public ?collate@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::collate
?collate@?$_Locbase@H@std@@2HB dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4Ch
		public ?ctype@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::ctype
?ctype@?$_Locbase@H@std@@2HB dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 50h
		public ?monetary@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::monetary
?monetary@?$_Locbase@H@std@@2HB	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 54h
		public ?numeric@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::numeric
?numeric@?$_Locbase@H@std@@2HB dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 58h
		public ?time@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::time
?time@?$_Locbase@H@std@@2HB dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 5Ch
		public ?messages@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::messages
?messages@?$_Locbase@H@std@@2HB	dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 60h
		public ?all@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::all
?all@?$_Locbase@H@std@@2HB dd offset ?_Rank@?$_Arithmetic_traits@M@std@@2HB+3
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 64h
		public ?none@?$_Locbase@H@std@@2HB
; public: static int const std::_Locbase<int>::none
?none@?$_Locbase@H@std@@2HB dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 68h
		public ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::skipws
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6Ch
		public ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::unitbuf
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 70h
		public ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::uppercase
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 74h
		public ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showbase
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 78h
		public ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpoint
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 7Ch
		public ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::showpos
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 80h
		public ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::left
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB
					; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::righto
					; .rdata:std::_Iosb<int>::_Openmode const std::_Iosb<int>::_Noreplaceo
_rdata		ends			; int const std::_Arithmetic_traits<double>::_Rank

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 84h
		public ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::right
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ; std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 88h
		public ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::internal
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset dword_100
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8Ch
		public ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::dec
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 90h
		public ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::oct
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_3FF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 94h
		public ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hex
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_800
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 98h
		public ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::scientific
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset ?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ ; icu_56::CalendarAstronomer::getJulianDay(void)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 9Ch
		public ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::fixed
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B	dd offset loc_2000
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A0h
		public ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::hexfloat
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_2FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A4h
		public ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::boolalpha
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 4000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0A8h
		public ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::_Stdio
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd 8000h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ACh
		public ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::adjustfield
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset	loc_1BF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B0h
		public ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::basefield
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd offset loc_DFE+2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B4h
		public ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
; public: static enum  std::_Iosb<int>::_Fmtflags const	std::_Iosb<int>::floatfield
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B dd	offset loc_2FFF+1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0B8h
		public ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::goodbit
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0BCh
		public ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::eofbit
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C0h
		public ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::failbit
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C4h
		public ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::badbit
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B	dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0C8h
		public ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
; public: static enum  std::_Iosb<int>::_Iostate const std::_Iosb<int>::_Hardfail
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0CCh
		public ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::in
?in@?$_Iosb@H@std@@2W4_Openmode@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D0h
		public ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::out
?out@?$_Iosb@H@std@@2W4_Openmode@12@B dd 2
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D4h
		public ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::ate
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B dd 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0D8h
		public ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::app
?app@?$_Iosb@H@std@@2W4_Openmode@12@B dd 8
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0DCh
		public ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::trunc
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B	dd 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E0h
		public ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Nocreate
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E4h
		public ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::_Noreplace
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B dd	offset ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B ;	std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::left
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0E8h
		public ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
; public: static enum  std::_Iosb<int>::_Openmode const	std::_Iosb<int>::binary
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B dd offset ?_Rank@?$_Arithmetic_traits@G@std@@2HB ; int	const std::_Arithmetic_traits<ushort>::_Rank
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0ECh
		public ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::beg
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F0h
		public ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::cur
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	1
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 0F4h
		public ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
; public: static enum  std::_Iosb<int>::_Seekdir const std::_Iosb<int>::end
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B dd	2
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 0F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
_ccLock		dd 2 dup(?)		; DATA XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &):loc_3B9Bo
					; icu_56::CalendarCache::get(icu_56::CalendarCache * *,int,UErrorCode &)+71o ...
dword_100	dd 6 dup(?)		; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::internalo
_bss		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 118h
		public ?SYNODIC_MONTH@CalendarAstronomer@icu_56@@2NB
; public: static double	const icu_56::CalendarAstronomer::SYNODIC_MONTH
?SYNODIC_MONTH@CalendarAstronomer@icu_56@@2NB dq 29.530588853
					; DATA XREF: icu_56::CalendarAstronomer::getMoonTime(double,signed char)+65r
;
; Exported entry
;
		public ?PI@CalendarAstronomer@icu_56@@2NB
; public: static double	const icu_56::CalendarAstronomer::PI
?PI@CalendarAstronomer@icu_56@@2NB dq 3.141592653589793
					; DATA XREF: icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+52r
					; icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+75r ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 128h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 160h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 164h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 168h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 19Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::Ecliptic::Ecliptic(icu_56::CalendarAstronomer::Ecliptic	*this, double, double)
		public ??0Ecliptic@CalendarAstronomer@icu_56@@QAE@NN@Z
??0Ecliptic@CalendarAstronomer@icu_56@@QAE@NN@Z	proc near
					; CODE XREF: icu_56::CalendarAstronomer::Ecliptic::`default constructor	closure'(void)+36p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx

loc_1BF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::adjustfieldo
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		fstp	qword ptr [eax+8]
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	10h
??0Ecliptic@CalendarAstronomer@icu_56@@QAE@NN@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::Ecliptic::set(icu_56::CalendarAstronomer::Ecliptic *this,	double,	double)
		public ?set@Ecliptic@CalendarAstronomer@icu_56@@QAEXNN@Z
?set@Ecliptic@CalendarAstronomer@icu_56@@QAEXNN@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx

loc_1FF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::deco
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		fstp	qword ptr [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	10h
?set@Ecliptic@CalendarAstronomer@icu_56@@QAEXNN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 21Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::Equatorial::Equatorial(icu_56::CalendarAstronomer::Equatorial *this, double, double)
		public ??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z
??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::Equatorial::`default constructor closure'(void)+36p
					; icu_56::CalendarAstronomer::CalendarAstronomer(void)+5Bp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		fstp	qword ptr [eax+8]
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	10h
??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::Equatorial::set(icu_56::CalendarAstronomer::Equatorial *this, double, double)
		public ?set@Equatorial@CalendarAstronomer@icu_56@@QAEXNN@Z
?set@Equatorial@CalendarAstronomer@icu_56@@QAEXNN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+10Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		fstp	qword ptr [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	10h
?set@Equatorial@CalendarAstronomer@icu_56@@QAEXNN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 29Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::Horizon::Horizon(icu_56::CalendarAstronomer::Horizon *this, double, double)
		public ??0Horizon@CalendarAstronomer@icu_56@@QAE@NN@Z
??0Horizon@CalendarAstronomer@icu_56@@QAE@NN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::Horizon::`default constructor closure'(void)+36p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		fstp	qword ptr [eax+8]
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	10h
??0Horizon@CalendarAstronomer@icu_56@@QAE@NN@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2DCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::Horizon::set(icu_56::CalendarAstronomer::Horizon *this, double, double)
		public ?set@Horizon@CalendarAstronomer@icu_56@@QAEXNN@Z
?set@Horizon@CalendarAstronomer@icu_56@@QAEXNN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+170p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_8]
		fstp	qword ptr [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	10h
?set@Horizon@CalendarAstronomer@icu_56@@QAEXNN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 31Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::setDate(icu_56::CalendarAstronomer *this,	double)
		public ?setDate@CalendarAstronomer@icu_56@@QAEXN@Z
?setDate@CalendarAstronomer@icu_56@@QAEXN@Z proc near

var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0E0h+var_E0] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?setDate@CalendarAstronomer@icu_56@@QAEXN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 368h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::MoonAge::MoonAge(icu_56::CalendarAstronomer::MoonAge *this, double)
		public ??0MoonAge@CalendarAstronomer@icu_56@@QAE@N@Z
??0MoonAge@CalendarAstronomer@icu_56@@QAE@N@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::NEW_MOON(void)+29p
					; icu_56::CalendarAstronomer::FULL_MOON(void)+2Dp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
??0MoonAge@CalendarAstronomer@icu_56@@QAE@N@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::MoonAge::set(icu_56::CalendarAstronomer::MoonAge *this, double)
		public ?set@MoonAge@CalendarAstronomer@icu_56@@QAEXN@Z
?set@MoonAge@CalendarAstronomer@icu_56@@QAEXN@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?set@MoonAge@CalendarAstronomer@icu_56@@QAEXN@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3D4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::CalendarAstronomer::Ecliptic & __thiscall icu_56::CalendarAstronomer::Ecliptic::operator=(class	icu_56::CalendarAstronomer::Ecliptic const &)
		public ??4Ecliptic@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z
??4Ecliptic@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [eax]

loc_3FF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::octo
		mov	[ecx], edx
		mov	edx, [eax+4]
		mov	[ecx+4], edx
		mov	edx, [eax+8]
		mov	[ecx+8], edx
		mov	eax, [eax+0Ch]
		mov	[ecx+0Ch], eax
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4Ecliptic@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 420h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::CalendarAstronomer::Ecliptic::`default constructor closure'(void)
		public ??_FEcliptic@CalendarAstronomer@icu_56@@QAEXXZ
??_FEcliptic@CalendarAstronomer@icu_56@@QAEXXZ proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fldz
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8] ; this
		call	??0Ecliptic@CalendarAstronomer@icu_56@@QAE@NN@Z	; icu_56::CalendarAstronomer::Ecliptic::Ecliptic(double,double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??_FEcliptic@CalendarAstronomer@icu_56@@QAEXXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 470h
		public __real@0000000000000000
__real@0000000000000000	dd 2 dup(0)
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 478h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::CalendarAstronomer::Equatorial & __thiscall icu_56::CalendarAstronomer::Equatorial::operator=(class icu_56::CalendarAstronomer::Equatorial const &)
		public ??4Equatorial@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z
??4Equatorial@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [eax]
		mov	[ecx], edx
		mov	edx, [eax+4]
		mov	[ecx+4], edx
		mov	edx, [eax+8]
		mov	[ecx+8], edx
		mov	eax, [eax+0Ch]
		mov	[ecx+0Ch], eax
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4Equatorial@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::CalendarAstronomer::Equatorial::`default constructor closure'(void)
		public ??_FEquatorial@CalendarAstronomer@icu_56@@QAEXXZ
??_FEquatorial@CalendarAstronomer@icu_56@@QAEXXZ proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fldz
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8] ; this
		call	??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Equatorial::Equatorial(double,double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??_FEquatorial@CalendarAstronomer@icu_56@@QAEXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 514h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::CalendarAstronomer::Horizon & __thiscall icu_56::CalendarAstronomer::Horizon::operator=(class icu_56::CalendarAstronomer::Horizon const	&)
		public ??4Horizon@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z
??4Horizon@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [eax]
		mov	[ecx], edx
		mov	edx, [eax+4]
		mov	[ecx+4], edx
		mov	edx, [eax+8]
		mov	[ecx+8], edx
		mov	eax, [eax+0Ch]
		mov	[ecx+0Ch], eax
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4Horizon@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 560h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::CalendarAstronomer::Horizon::`default	constructor closure'(void)
		public ??_FHorizon@CalendarAstronomer@icu_56@@QAEXXZ
??_FHorizon@CalendarAstronomer@icu_56@@QAEXXZ proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fldz
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8] ; this
		call	??0Horizon@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Horizon::Horizon(double,double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??_FHorizon@CalendarAstronomer@icu_56@@QAEXXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5B0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::CalendarAstronomer::MoonAge & __thiscall icu_56::CalendarAstronomer::MoonAge::operator=(class icu_56::CalendarAstronomer::MoonAge const	&)
		public ??4MoonAge@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z
??4MoonAge@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [eax+4]
		mov	eax, [ebp+var_8]
		mov	[eax], ecx
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4MoonAge@CalendarAstronomer@icu_56@@QAEAAV012@ABV012@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 5F0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::CalendarAstronomer & __thiscall	icu_56::CalendarAstronomer::operator=(class icu_56::CalendarAstronomer const &)
		public ??4CalendarAstronomer@icu_56@@QAEAAV01@ABV01@@Z
??4CalendarAstronomer@icu_56@@QAEAAV01@ABV01@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, [ebp+arg_0]
		mov	ecx, 22h ; '"'
		mov	edi, [ebp+var_8]
		rep movsd
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4CalendarAstronomer@icu_56@@QAEAAV01@ABV01@@Z	endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 62Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::TimeZone::operator!=(class icu_56::TimeZone const &)const
		public ??9TimeZone@icu_56@@QBECABV01@@Z
??9TimeZone@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9TimeZone@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 688h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::UnicodeString *__thiscall icu_56::TimeZone::getID(icu_56::TimeZone *this, struct icu_56::UnicodeString	*)
		public ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		add	eax, 4
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+arg_0]
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::TimeZone::setID(icu_56::TimeZone *this, const	struct icu_56::UnicodeString *)
		public ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		add	ecx, 4
		call	dword ptr ds:__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z ;	icu_56::UnicodeString::operator=(icu_56::UnicodeString const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 734h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Calendar::getTime(icu_56::Calendar *this, enum UErrorCode *)
		public ?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_8] ; this
		call	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTimeInMillis(UErrorCode	&)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 77Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Calendar::setTime(icu_56::Calendar *this, double, enum UErrorCode *)
		public ?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z proc near

var_E4		= qword	ptr -0E4h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0E4h+var_E4] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis(double,UErrorCode	&)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: signed char __thiscall icu_56::Calendar::operator!=(class icu_56::Calendar const &)const
		public ??9Calendar@icu_56@@QBECABV01@@Z
??9Calendar@icu_56@@QBECABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+0Ch]

loc_800:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexo
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		setz	al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??9Calendar@icu_56@@QBECABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 828h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	icu_56::Calendar::EDateFields)const
		public ?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+eax*4+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 860h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	UCalendarDateFields, int)const
		public ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z proc near

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+eax*4+7Ch], 0
		jle	short loc_8A2
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+edx*4+8]
		mov	[ebp+var_D0], ecx
		jmp	short loc_8AB
; ---------------------------------------------------------------------------

loc_8A2:				; CODE XREF: icu_56::Calendar::internalGet(UCalendarDateFields,int)+2Ej
		mov	edx, [ebp+arg_4]
		mov	[ebp+var_D0], edx

loc_8AB:				; CODE XREF: icu_56::Calendar::internalGet(UCalendarDateFields,int)+40j
		mov	eax, [ebp+var_D0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: int __thiscall icu_56::Calendar::internalGet(enum	UCalendarDateFields)const
		public ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	eax, [ecx+eax*4+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::Calendar::internalGetTime(icu_56::Calendar *__hidden this)
		public ?internalGetTime@Calendar@icu_56@@IBENXZ
?internalGetTime@Calendar@icu_56@@IBENXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+0E0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?internalGetTime@Calendar@icu_56@@IBENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 928h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::Calendar::internalSetTime(icu_56::Calendar *this, double)
		public ?internalSetTime@Calendar@icu_56@@IAEXN@Z
?internalSetTime@Calendar@icu_56@@IAEXN@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax+0E0h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalSetTime@Calendar@icu_56@@IAEXN@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 960h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianYear(icu_56::Calendar *__hidden this)
		public ?getGregorianYear@Calendar@icu_56@@IBEHXZ
?getGregorianYear@Calendar@icu_56@@IBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+110h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianYear@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 994h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianMonth(icu_56::Calendar *__hidden	this)
		public ?getGregorianMonth@Calendar@icu_56@@IBEHXZ
?getGregorianMonth@Calendar@icu_56@@IBEHXZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+114h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianMonth@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9C8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianDayOfYear(icu_56::Calendar *__hidden this)
		public ?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+118h]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::getGregorianDayOfMonth(icu_56::Calendar *__hidden this)
		public ?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+11Ch]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0A30h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::Calendar *__cdecl icu_56::Calendar::createInstance(struct icu_56::TimeZone *, enum UErrorCode *)
		public ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	esi, esp
		call	dword ptr ds:__imp_?getDefault@Locale@icu_56@@SAABV12@XZ ; icu_56::Locale::getDefault(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::Locale	*
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::TimeZone *
		call	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z ;	icu_56::Calendar::createInstance(icu_56::TimeZone *,icu_56::Locale const &,UErrorCode &)
		add	esp, 0Ch
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0A84h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::Calendar::roll(enum  UCalendarDateFields, signed char, enum  UErrorCode &)
		public ?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::Calendar::roll(icu_56::Calendar::EDateFields,signed char,UErrorCode &)+33p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		movsx	ecx, [ebp+arg_4]
		neg	ecx
		sbb	ecx, ecx
		and	ecx, 2
		add	ecx, 0FFFFFFFFh
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+1Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0AECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::Calendar::roll(enum  icu_56::Calendar::EDateFields, signed char, enum	 UErrorCode &)
		public ?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_8]
		push	eax
		movzx	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	ecx, [ebp+var_8]
		call	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ;	icu_56::Calendar::roll(UCalendarDateFields,signed char,UErrorCode &)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B3Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: void __thiscall icu_56::Calendar::internalSet(enum	 UCalendarDateFields, int)
		public ?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_4]
		mov	[ecx+eax*4+8], edx
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	dword ptr [ecx+eax*4+7Ch], 1
		mov	eax, [ebp+var_8]
		add	eax, [ebp+arg_0]
		mov	byte ptr [eax+64h], 1
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0B90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::Calendar::weekNumber(icu_56::Calendar *this, int, int)
		public ?weekNumber@Calendar@icu_56@@IAEHHH@Z
?weekNumber@Calendar@icu_56@@IAEHHH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		mov	ecx, [ebp+var_8] ; this
		call	?weekNumber@Calendar@icu_56@@IAEHHHH@Z ; icu_56::Calendar::weekNumber(int,int,int)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?weekNumber@Calendar@icu_56@@IAEHHH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0BE0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::CalendarAstronomer(icu_56::CalendarAstronomer *__hidden	this)
		public ??0CalendarAstronomer@icu_56@@QAE@XZ
??0CalendarAstronomer@icu_56@@QAE@XZ proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	?getNow@Calendar@icu_56@@SANXZ ; icu_56::Calendar::getNow(void)
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fldz
		fstp	qword ptr [eax+8]
		mov	eax, [ebp+var_8]
		fldz
		fstp	qword ptr [eax+10h]
		mov	eax, [ebp+var_8]
		fldz
		fstp	qword ptr [eax+18h]
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fldz
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8]
		add	ecx, 70h ; 'p'  ; this
		call	??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Equatorial::Equatorial(double,double)
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+80h], 0
		mov	ecx, [ebp+var_8] ; this
		call	?clearCache@CalendarAstronomer@icu_56@@AAEXXZ ;	icu_56::CalendarAstronomer::clearCache(void)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0CalendarAstronomer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0C6Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::CalendarAstronomer(icu_56::CalendarAstronomer *this, double)
		public ??0CalendarAstronomer@icu_56@@QAE@N@Z
??0CalendarAstronomer@icu_56@@QAE@N@Z proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	eax, [ebp+var_8]
		fldz
		fstp	qword ptr [eax+8]
		mov	eax, [ebp+var_8]
		fldz
		fstp	qword ptr [eax+10h]
		mov	eax, [ebp+var_8]
		fldz
		fstp	qword ptr [eax+18h]
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fldz
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8]
		add	ecx, 70h ; 'p'  ; this
		call	??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Equatorial::Equatorial(double,double)
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+80h], 0
		mov	ecx, [ebp+var_8] ; this
		call	?clearCache@CalendarAstronomer@icu_56@@AAEXXZ ;	icu_56::CalendarAstronomer::clearCache(void)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0CalendarAstronomer@icu_56@@QAE@N@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CF8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::CalendarAstronomer(icu_56::CalendarAstronomer *this, double, double)
		public ??0CalendarAstronomer@icu_56@@QAE@NN@Z
??0CalendarAstronomer@icu_56@@QAE@NN@Z proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	?getNow@Calendar@icu_56@@SANXZ ; icu_56::Calendar::getNow(void)
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax]
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fldz
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8]
		add	ecx, 70h ; 'p'  ; this
		call	??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Equatorial::Equatorial(double,double)
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+80h], 0
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	[ebp+arg_0]
		sub	esp, 8
		fstp	[esp+0E0h+var_E0] ; double
		call	?normPI@icu_56@@YANN@Z ; icu_56::normPI(double)
		add	esp, 8
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+8]
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	[ebp+arg_8]
		sub	esp, 8
		fstp	[esp+0E0h+var_E0] ; double
		call	?normPI@icu_56@@YANN@Z ; icu_56::normPI(double)
		add	esp, 8
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+10h]
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+8]
		fmul	ds:__real@4038000000000000
		fmul	ds:__real@414b774000000000
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		fdivp	st(1), st
		mov	ecx, [ebp+var_8]
		fstp	qword ptr [ecx+18h]
		mov	ecx, [ebp+var_8] ; this
		call	?clearCache@CalendarAstronomer@icu_56@@AAEXXZ ;	icu_56::CalendarAstronomer::clearCache(void)
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
??0CalendarAstronomer@icu_56@@QAE@NN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DD4h
		public __real@414b774000000000
__real@414b774000000000	dq 3600000.0	; DATA XREF: icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+A4r
					; icu_56::CalendarAstronomer::getGreenwichSidereal(void)+4Fr ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DDCh
		public __real@4038000000000000
__real@4038000000000000	dq 24.0		; DATA XREF: icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+9Er
					; icu_56::CalendarAstronomer::getGreenwichSidereal(void)+41r ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0DE4h
		public __real@4066800000000000
__real@4066800000000000	dq 180.0	; DATA XREF: icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+58r
					; icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+7Br ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0DECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::normPI(double)
?normPI@icu_56@@YANN@Z proc near	; CODE XREF: icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+67p
					; icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+8Ap ...

var_DC		= qword	ptr -0DCh
var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]

loc_DFE:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::basefieldo
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		sub	esp, 8
		fstp	[esp+0D4h+var_D4] ; double
		fld	[ebp+arg_0]
		fadd	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		sub	esp, 8
		fstp	[esp+0DCh+var_DC] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		fsub	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?normPI@icu_56@@YANN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0E4Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::normalize(double,	double)
?normalize@icu_56@@YANNN@Z proc	near	; CODE XREF: icu_56::normPI(double)+3Bp
					; icu_56::CalendarAstronomer::getGreenwichSidereal(void)+5Bp ...

var_DC		= qword	ptr -0DCh
var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		sub	esp, 8
		fld	[ebp+arg_8]
		fstp	[esp+0D4h+var_D4] ; double
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0DCh+var_DC] ; double
		call	?floorDivide@ClockMath@icu_56@@SANNN@Z ; icu_56::ClockMath::floorDivide(double,double)
		add	esp, 10h
		fmul	[ebp+arg_8]
		fsubr	[ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?normalize@icu_56@@YANNN@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0EA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __cdecl icu_56::ClockMath::floorDivide(double,	double)
		public ?floorDivide@ClockMath@icu_56@@SANNN@Z
?floorDivide@ClockMath@icu_56@@SANNN@Z proc near
					; CODE XREF: icu_56::normalize(double,double)+30p
					; icu_56::CalendarAstronomer::lstToUT(double)+6Ep ...

var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		fld	[ebp+arg_0]
		fdiv	[ebp+arg_8]
		sub	esp, 8
		fstp	[esp+0D4h+var_D4]
		call	_uprv_floor_56
		add	esp, 8
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?floorDivide@ClockMath@icu_56@@SANNN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0EE8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::~CalendarAstronomer(icu_56::CalendarAstronomer *__hidden this)
		public ??1CalendarAstronomer@icu_56@@QAE@XZ
??1CalendarAstronomer@icu_56@@QAE@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1CalendarAstronomer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0F14h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::setTime(icu_56::CalendarAstronomer *this,	double)
		public ?setTime@CalendarAstronomer@icu_56@@QAEXN@Z
?setTime@CalendarAstronomer@icu_56@@QAEXN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::setDate(double)+2Fp
					; icu_56::CalendarAstronomer::getSunRiseSet(signed char)+B0p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax]
		mov	ecx, [ebp+var_8] ; this
		call	?clearCache@CalendarAstronomer@icu_56@@AAEXXZ ;	icu_56::CalendarAstronomer::clearCache(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?setTime@CalendarAstronomer@icu_56@@QAEXN@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0F60h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::setJulianDay(icu_56::CalendarAstronomer *this, double)
		public ?setJulianDay@CalendarAstronomer@icu_56@@QAEXN@Z
?setJulianDay@CalendarAstronomer@icu_56@@QAEXN@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		fld	[ebp+arg_0]
		fmul	ds:__real@4194997000000000
		fadd	ds:__real@c2e7f907ca644000
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax]
		mov	ecx, [ebp+var_8] ; this
		call	?clearCache@CalendarAstronomer@icu_56@@AAEXXZ ;	icu_56::CalendarAstronomer::clearCache(void)
		mov	eax, [ebp+var_8]
		fld	[ebp+arg_0]
		fstp	qword ptr [eax+20h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?setJulianDay@CalendarAstronomer@icu_56@@QAEXN@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0FC0h
		public __real@c2e7f907ca644000
__real@c2e7f907ca644000	dq -2.1086676e14
					; DATA XREF: icu_56::CalendarAstronomer::setJulianDay(double)+2Cr
					; icu_56::CalendarAstronomer::getJulianDay(void)+43r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0FC8h
		public __real@4194997000000000
__real@4194997000000000	dq 8.64e7	; DATA XREF: icu_56::CalendarAstronomer::setJulianDay(double)+26r
					; icu_56::CalendarAstronomer::getJulianDay(void)+49r ...
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FD0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getTime(icu_56::CalendarAstronomer *__hidden this)
		public ?getTime@CalendarAstronomer@icu_56@@QAENXZ
?getTime@CalendarAstronomer@icu_56@@QAENXZ proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getTime@CalendarAstronomer@icu_56@@QAENXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1000h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getJulianDay(icu_56::CalendarAstronomer	*__hidden this)
		public ?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ
?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	proc near
					; CODE XREF: icu_56::CalendarAstronomer::getJulianCentury(void)+41p
					; icu_56::CalendarAstronomer::getSiderealOffset(void)+41p ...

var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+20h]
		fstp	[esp+0E0h+var_E0] ; double
		call	?isINVALID@@YACN@Z ; isINVALID(double)
		add	esp, 8
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_1055
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax]
		fsub	ds:__real@c2e7f907ca644000
		fdiv	ds:__real@4194997000000000
		mov	ecx, [ebp+var_8]
		fstp	qword ptr [ecx+20h]

loc_1055:				; CODE XREF: icu_56::CalendarAstronomer::getJulianDay(void)+3Cj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+20h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1070h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl isINVALID(double)
?isINVALID@@YACN@Z proc	near		; CODE XREF: icu_56::CalendarAstronomer::getJulianDay(void)+2Fp
					; icu_56::CalendarAstronomer::getJulianCentury(void)+2Fp ...

var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0D4h+var_D4]
		call	_uprv_isNaN_56
		add	esp, 8
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?isINVALID@@YACN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 10B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getJulianCentury(icu_56::CalendarAstronomer *__hidden this)
		public ?getJulianCentury@CalendarAstronomer@icu_56@@QAENXZ
?getJulianCentury@CalendarAstronomer@icu_56@@QAENXZ proc near

var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+28h]
		fstp	[esp+0E0h+var_E0] ; double
		call	?isINVALID@@YACN@Z ; isINVALID(double)
		add	esp, 8
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_110C
		mov	ecx, [ebp+var_8] ; this
		call	?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	; icu_56::CalendarAstronomer::getJulianDay(void)
		fsub	ds:__real@41426cd600000000
		fdiv	ds:__real@40e1d5a000000000
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+28h]

loc_110C:				; CODE XREF: icu_56::CalendarAstronomer::getJulianCentury(void)+3Cj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+28h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getJulianCentury@CalendarAstronomer@icu_56@@QAENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1128h
		public __real@40e1d5a000000000
__real@40e1d5a000000000	dq 36525.0	; DATA XREF: icu_56::CalendarAstronomer::getJulianCentury(void)+4Cr
					; icu_56::CalendarAstronomer::getSiderealOffset(void)+72r ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1130h
		public __real@41426cd600000000
__real@41426cd600000000	dq 2415020.0	; DATA XREF: icu_56::CalendarAstronomer::getJulianCentury(void)+46r
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1138h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getGreenwichSidereal(icu_56::CalendarAstronomer	*__hidden this)
		public ?getGreenwichSidereal@CalendarAstronomer@icu_56@@QAENXZ
?getGreenwichSidereal@CalendarAstronomer@icu_56@@QAENXZ	proc near
					; CODE XREF: icu_56::CalendarAstronomer::getLocalSidereal(void)+32p

var_F8		= qword	ptr -0F8h
var_F0		= qword	ptr -0F0h
var_DC		= byte ptr -0DCh
var_18		= qword	ptr -18h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+68h]
		fstp	[esp+0F0h+var_F0] ; double
		call	?isINVALID@@YACN@Z ; isINVALID(double)
		add	esp, 8
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_11D1
		sub	esp, 8
		fld	ds:__real@4038000000000000
		fstp	[esp+0F0h+var_F0] ; double
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax]
		fdiv	ds:__real@414b774000000000
		sub	esp, 8
		fstp	[esp+0F8h+var_F8] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		fstp	[ebp+var_18]
		sub	esp, 8
		fld	ds:__real@4038000000000000
		fstp	[esp+0F0h+var_F0] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?getSiderealOffset@CalendarAstronomer@icu_56@@AAENXZ ; icu_56::CalendarAstronomer::getSiderealOffset(void)
		fld	[ebp+var_18]
		fmul	ds:__real@3ff00b36e7d9d4ae
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+0F8h+var_F8] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+68h]

loc_11D1:				; CODE XREF: icu_56::CalendarAstronomer::getGreenwichSidereal(void)+3Cj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+68h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getGreenwichSidereal@CalendarAstronomer@icu_56@@QAENXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 11ECh
		public __real@3ff00b36e7d9d4ae
__real@3ff00b36e7d9d4ae	dq 1.002737909	; DATA XREF: icu_56::CalendarAstronomer::getGreenwichSidereal(void)+7Dr
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 11F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getSiderealOffset(icu_56::CalendarAstronomer *__hidden this)
		public ?getSiderealOffset@CalendarAstronomer@icu_56@@AAENXZ
?getSiderealOffset@CalendarAstronomer@icu_56@@AAENXZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::getGreenwichSidereal(void)+75p
					; icu_56::CalendarAstronomer::lstToUT(double)+32p

var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_FC		= byte ptr -0FCh
var_38		= qword	ptr -38h
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0FCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_FC]
		mov	ecx, 3Fh ; '?'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+60h]
		fstp	[esp+110h+var_110] ; double
		call	?isINVALID@@YACN@Z ; isINVALID(double)
		add	esp, 8
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_12AC
		mov	ecx, [ebp+var_8] ; this
		call	?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	; icu_56::CalendarAstronomer::getJulianDay(void)
		fsub	ds:__real@3fe0000000000000
		sub	esp, 8
		fstp	[esp+110h+var_110]
		call	_uprv_floor_56
		add	esp, 8
		fadd	ds:__real@3fe0000000000000
		fstp	[ebp+var_18]
		fld	[ebp+var_18]
		fsub	ds:__real@4142b42c80000000
		fstp	[ebp+var_28]
		fld	[ebp+var_28]
		fdiv	ds:__real@40e1d5a000000000
		fstp	[ebp+var_38]
		sub	esp, 8
		fld	ds:__real@4038000000000000
		fstp	[esp+110h+var_110] ; double
		fld	ds:__real@40a2c01a48b65237
		fmul	[ebp+var_38]
		fadd	ds:__real@401aca1c8e5eb098
		fld	ds:__real@3efb1e471b7b0e47
		fmul	[ebp+var_38]
		fmul	[ebp+var_38]
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+118h+var_118] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+60h]

loc_12AC:				; CODE XREF: icu_56::CalendarAstronomer::getSiderealOffset(void)+3Cj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+60h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0FCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getSiderealOffset@CalendarAstronomer@icu_56@@AAENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 12C8h
		public __real@3efb1e471b7b0e47
__real@3efb1e471b7b0e47	dq 0.000025862	; DATA XREF: icu_56::CalendarAstronomer::getSiderealOffset(void)+96r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 12D0h
		public __real@401aca1c8e5eb098
__real@401aca1c8e5eb098	dq 6.697374558	; DATA XREF: icu_56::CalendarAstronomer::getSiderealOffset(void)+90r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 12D8h
		public __real@40a2c01a48b65237
__real@40a2c01a48b65237	dq 2400.051336	; DATA XREF: icu_56::CalendarAstronomer::getSiderealOffset(void)+87r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 12E0h
		public __real@4142b42c80000000
__real@4142b42c80000000	dq 2451545.0	; DATA XREF: icu_56::CalendarAstronomer::getSiderealOffset(void)+66r
					; icu_56::CalendarAstronomer::eclipticObliquity(void)+3Er
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 12E8h
		public __real@3fe0000000000000
__real@3fe0000000000000	dq 0.5		; DATA XREF: icu_56::CalendarAstronomer::getSiderealOffset(void)+46r
					; icu_56::CalendarAstronomer::getSiderealOffset(void)+5Ar ...
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 12F0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getLocalSidereal(icu_56::CalendarAstronomer *__hidden this)
		public ?getLocalSidereal@CalendarAstronomer@icu_56@@QAENXZ
?getLocalSidereal@CalendarAstronomer@icu_56@@QAENXZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+53p

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fld	ds:__real@4038000000000000
		fstp	[esp+0E0h+var_E0] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?getGreenwichSidereal@CalendarAstronomer@icu_56@@QAENXZ	; icu_56::CalendarAstronomer::getGreenwichSidereal(void)
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+18h]
		fdiv	ds:__real@414b774000000000
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+0E8h+var_E8] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getLocalSidereal@CalendarAstronomer@icu_56@@QAENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1358h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::lstToUT(icu_56::CalendarAstronomer *this, double)
		public ?lstToUT@CalendarAstronomer@icu_56@@QAENN@Z
?lstToUT@CalendarAstronomer@icu_56@@QAENN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+FAp

var_10C		= qword	ptr -10Ch
var_104		= qword	ptr -104h
var_F0		= dword	ptr -0F0h
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fld	ds:__real@4038000000000000
		fstp	[esp+104h+var_104] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?getSiderealOffset@CalendarAstronomer@icu_56@@AAENXZ ; icu_56::CalendarAstronomer::getSiderealOffset(void)
		fsubr	[ebp+arg_0]
		fmul	ds:__real@3fefe9a1dd91bf50
		sub	esp, 8
		fstp	[esp+10Ch+var_10C] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		fstp	[ebp+var_18]
		sub	esp, 8
		fld	ds:__real@4194997000000000
		fstp	[esp+104h+var_104] ; double
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_8]
		fld	qword ptr [eax]
		fadd	qword ptr [ecx+18h]
		sub	esp, 8
		fstp	[esp+10Ch+var_10C] ; double
		call	?floorDivide@ClockMath@icu_56@@SANNN@Z ; icu_56::ClockMath::floorDivide(double,double)
		add	esp, 10h
		fmul	ds:__real@4194997000000000
		mov	edx, [ebp+var_8]
		fsub	qword ptr [edx+18h]
		fstp	[ebp+var_28]
		fld	[ebp+var_18]
		fmul	ds:__real@414b774000000000
		call	__ftol2_sse
		mov	[ebp+var_F0], eax
		fild	[ebp+var_F0]
		fadd	[ebp+var_28]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?lstToUT@CalendarAstronomer@icu_56@@QAENN@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1410h
		public __real@3fefe9a1dd91bf50
__real@3fefe9a1dd91bf50	dq 0.9972695663	; DATA XREF: icu_56::CalendarAstronomer::lstToUT(double)+3Ar
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1418h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::CalendarAstronomer::Equatorial	*__thiscall icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer	*this, struct icu_56::CalendarAstronomer::Equatorial *,	const struct icu_56::CalendarAstronomer::Ecliptic *)
		public ?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@ABVEcliptic@12@@Z
?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@ABVEcliptic@12@@Z proc near

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		sub	esp, 8
		fld	qword ptr [eax]
		fstp	[esp+0E0h+var_E0] ; double
		mov	ecx, [ebp+arg_4]
		sub	esp, 8
		fld	qword ptr [ecx+8]
		fstp	[esp+0E8h+var_E8] ; double
		mov	edx, [ebp+arg_0]
		push	edx		; struct icu_56::CalendarAstronomer::Equatorial	*
		mov	ecx, [ebp+var_8] ; this
		call	?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z ; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@ABVEcliptic@12@@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1474h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::CalendarAstronomer::Equatorial	*__thiscall icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer	*this, struct icu_56::CalendarAstronomer::Equatorial *,	double,	double)
		public ?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z
?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,icu_56::CalendarAstronomer::Ecliptic const &)+41p
					; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double)+3Bp ...

var_170		= qword	ptr -170h
var_168		= qword	ptr -168h
var_160		= qword	ptr -160h
var_14C		= byte ptr -14Ch
var_88		= qword	ptr -88h
var_78		= qword	ptr -78h
var_68		= qword	ptr -68h
var_58		= qword	ptr -58h
var_48		= qword	ptr -48h
var_38		= qword	ptr -38h
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= qword	ptr  0Ch
arg_C		= qword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 14Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_14C]
		mov	ecx, 53h ; 'S'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?eclipticObliquity@CalendarAstronomer@icu_56@@AAENXZ ; icu_56::CalendarAstronomer::eclipticObliquity(void)
		fstp	[ebp+var_18]
		sub	esp, 8
		fld	[ebp+var_18]
		fstp	[esp+160h+var_160]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_28]
		sub	esp, 8
		fld	[ebp+var_18]
		fstp	[esp+160h+var_160]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_38]
		sub	esp, 8
		fld	[ebp+arg_4]
		fstp	[esp+160h+var_160]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_48]
		sub	esp, 8
		fld	[ebp+arg_4]
		fstp	[esp+160h+var_160]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_58]
		sub	esp, 8
		fld	[ebp+arg_C]
		fstp	[esp+160h+var_160]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_68]
		sub	esp, 8
		fld	[ebp+arg_C]
		fstp	[esp+160h+var_160]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_78]
		sub	esp, 8
		fld	[ebp+arg_C]
		fstp	[esp+160h+var_160]
		call	_tan
		add	esp, 8
		fstp	[ebp+var_88]
		fld	[ebp+var_68]
		fmul	[ebp+var_38]
		fld	[ebp+var_78]
		fmul	[ebp+var_28]
		fmul	[ebp+var_48]
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+160h+var_160]
		call	_asin
		fstp	[esp+160h+var_160] ; double
		sub	esp, 8
		fld	[ebp+var_58]
		fstp	[esp+168h+var_168]
		fld	[ebp+var_48]
		fmul	[ebp+var_38]
		fld	[ebp+var_88]
		fmul	[ebp+var_28]
		fsubp	st(1), st
		sub	esp, 8
		fstp	[esp+170h+var_170]
		call	_atan2
		add	esp, 8
		fstp	[esp+168h+var_168] ; double
		mov	ecx, [ebp+arg_0] ; this
		call	?set@Equatorial@CalendarAstronomer@icu_56@@QAEXNN@Z ; icu_56::CalendarAstronomer::Equatorial::set(double,double)
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 14Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	14h
?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 159Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::CalendarAstronomer::Equatorial	*__thiscall icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer	*this, struct icu_56::CalendarAstronomer::Equatorial *,	double)
		public ?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@N@Z
?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@N@Z	proc near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+4Bp

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= qword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		sub	esp, 8
		fld	[ebp+arg_4]
		fstp	[esp+0E8h+var_E8] ; double
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::CalendarAstronomer::Equatorial	*
		mov	ecx, [ebp+var_8] ; this
		call	?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z ; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@N@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 15F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::CalendarAstronomer::Horizon *__thiscall icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer *this, struct	icu_56::CalendarAstronomer::Horizon *, double)
		public ?eclipticToHorizon@CalendarAstronomer@icu_56@@QAEAAVHorizon@12@AAV312@N@Z
?eclipticToHorizon@CalendarAstronomer@icu_56@@QAEAAVHorizon@12@AAV312@N@Z proc near

var_190		= qword	ptr -190h
var_188		= qword	ptr -188h
var_174		= byte ptr -174h
var_B0		= qword	ptr -0B0h
var_A0		= qword	ptr -0A0h
var_90		= qword	ptr -90h
var_80		= qword	ptr -80h
var_70		= qword	ptr -70h
var_60		= qword	ptr -60h
var_50		= qword	ptr -50h
var_40		= qword	ptr -40h
var_30		= qword	ptr -30h
var_20		= qword	ptr -20h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= qword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 174h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_174]
		mov	ecx, 5Dh ; ']'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+188h+var_188] ; double
		sub	esp, 8
		fldz
		fstp	[esp+190h+var_190] ; double
		lea	ecx, [ebp+var_20] ; this
		call	??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Equatorial::Equatorial(double,double)
		sub	esp, 8
		fld	[ebp+arg_4]
		fstp	[esp+188h+var_188] ; double
		lea	eax, [ebp+var_20]
		push	eax		; struct icu_56::CalendarAstronomer::Equatorial	*
		mov	ecx, [ebp+var_8] ; this
		call	?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@N@Z	; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double)
		mov	ecx, [ebp+var_8] ; this
		call	?getLocalSidereal@CalendarAstronomer@icu_56@@QAENXZ ; icu_56::CalendarAstronomer::getLocalSidereal(void)
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4028000000000000
		fsub	[ebp+var_20]
		fstp	[ebp+var_30]
		sub	esp, 8
		fld	[ebp+var_30]
		fstp	[esp+188h+var_188]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_40]
		sub	esp, 8
		fld	[ebp+var_30]
		fstp	[esp+188h+var_188]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_50]
		sub	esp, 8
		fld	[ebp+var_18]
		fstp	[esp+188h+var_188]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_60]
		sub	esp, 8
		fld	[ebp+var_18]
		fstp	[esp+188h+var_188]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_70]
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+10h]
		fstp	[esp+188h+var_188]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_80]
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+10h]
		fstp	[esp+188h+var_188]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_90]
		fld	[ebp+var_60]
		fmul	[ebp+var_80]
		fld	[ebp+var_70]
		fmul	[ebp+var_90]
		fmul	[ebp+var_50]
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+188h+var_188]
		call	_asin
		add	esp, 8
		fstp	[ebp+var_A0]
		sub	esp, 8
		fld	[ebp+var_A0]
		fstp	[esp+188h+var_188]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_80]
		fsubr	[ebp+var_60]
		sub	esp, 8
		fstp	[esp+188h+var_188]
		fld	[ebp+var_70]
		fchs
		fmul	[ebp+var_90]
		fmul	[ebp+var_40]
		sub	esp, 8
		fstp	[esp+190h+var_190]
		call	_atan2
		add	esp, 10h
		fstp	[ebp+var_B0]
		sub	esp, 8
		fld	[ebp+var_A0]
		fstp	[esp+188h+var_188] ; double
		sub	esp, 8
		fld	[ebp+var_B0]
		fstp	[esp+190h+var_190] ; double
		mov	ecx, [ebp+arg_0] ; this
		call	?set@Horizon@CalendarAstronomer@icu_56@@QAEXNN@Z ; icu_56::CalendarAstronomer::Horizon::set(double,double)
		mov	eax, [ebp+arg_0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN5
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 174h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?eclipticToHorizon@CalendarAstronomer@icu_56@@QAEAAVHorizon@12@AAV312@N@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN5		dd 1			; DATA XREF: icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+17Co
		dd offset $LN4
$LN4		dd 0FFFFFFE0h, 10h	; DATA XREF: .text:00001798o
		dd offset $LN3		; "equatorial"
$LN3		db 'equatorial',0       ; DATA XREF: .text:000017A4o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 17B4h
		public __real@4028000000000000
__real@4028000000000000	dq 12.0		; DATA XREF: icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+5Er
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 17BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getSunLongitude(icu_56::CalendarAstronomer *__hidden this)
		public ?getSunLongitude@CalendarAstronomer@icu_56@@QAENXZ
?getSunLongitude@CalendarAstronomer@icu_56@@QAENXZ proc	near
					; CODE XREF: icu_56::CalendarAstronomer::getSunPosition(icu_56::CalendarAstronomer::Equatorial &)+2Ep
					; icu_56::SunTimeAngleFunc::eval(icu_56::CalendarAstronomer &)+26p ...

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+30h]
		fstp	[esp+0E0h+var_E0] ; double
		call	?isINVALID@@YACN@Z ; isINVALID(double)
		add	esp, 8
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_181E
		mov	eax, [ebp+var_8]
		add	eax, 38h ; '8'
		push	eax		; double *
		mov	ecx, [ebp+var_8]
		add	ecx, 30h ; '0'
		push	ecx		; double *
		mov	ecx, [ebp+var_8] ; this
		call	?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	; icu_56::CalendarAstronomer::getJulianDay(void)
		sub	esp, 8
		fstp	[esp+0E8h+var_E8] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?getSunLongitude@CalendarAstronomer@icu_56@@QAEXNAAN0@Z	; icu_56::CalendarAstronomer::getSunLongitude(double,double &,double &)

loc_181E:				; CODE XREF: icu_56::CalendarAstronomer::getSunLongitude(void)+3Cj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+30h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getSunLongitude@CalendarAstronomer@icu_56@@QAENXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1838h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::getSunLongitude(icu_56::CalendarAstronomer *this,	double,	double *, double *)
		public ?getSunLongitude@CalendarAstronomer@icu_56@@QAEXNAAN0@Z
?getSunLongitude@CalendarAstronomer@icu_56@@QAEXNAAN0@Z	proc near
					; CODE XREF: icu_56::CalendarAstronomer::getSunLongitude(void)+5Dp

var_108		= qword	ptr -108h
var_100		= qword	ptr -100h
var_EC		= byte ptr -0ECh
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8
arg_0		= qword	ptr  8
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0ECh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_EC]
		mov	ecx, 3Bh ; ';'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		fld	[ebp+arg_0]
		fsub	ds:__real@4142ad09c0000000
		fstp	[ebp+var_18]
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		fdiv	ds:__real@4076d3e003ab862b
		fmul	[ebp+var_18]
		sub	esp, 8
		fstp	[esp+100h+var_100] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		fstp	[ebp+var_28]
		fld	ds:__real@40717673edd8b60f
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fadd	[ebp+var_28]
		fld	ds:__real@4071ac4b74ddf86e
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fsubp	st(1), st
		sub	esp, 8
		fstp	[esp+100h+var_100] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		mov	eax, [ebp+arg_C]
		fstp	qword ptr [eax]
		sub	esp, 8
		fld	ds:__real@3f911d3671ac14c6
		fstp	[esp+100h+var_100] ; double
		mov	eax, [ebp+arg_C]
		sub	esp, 8
		fld	qword ptr [eax]
		fstp	[esp+108h+var_108] ; double
		call	?trueAnomaly@icu_56@@YANNN@Z ; icu_56::trueAnomaly(double,double)
		add	esp, 10h
		fld	ds:__real@4071ac4b74ddf86e
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+100h+var_100] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		mov	ecx, [ebp+arg_8]
		fstp	qword ptr [ecx]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0ECh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
?getSunLongitude@CalendarAstronomer@icu_56@@QAEXNAAN0@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1924h
		public __real@3f911d3671ac14c6
__real@3f911d3671ac14c6	dq 0.016713	; DATA XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+90r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 192Ch
		public __real@4071ac4b74ddf86e
__real@4071ac4b74ddf86e	dq 282.768422	; DATA XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+66r
					; icu_56::CalendarAstronomer::getSunLongitude(double,double &,double &)+ACr
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1934h
		public __real@40717673edd8b60f
__real@40717673edd8b60f	dq 279.403303	; DATA XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+51r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 193Ch
		public __real@4076d3e003ab862b
__real@4076d3e003ab862b	dq 365.242191	; DATA XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+37r
					; icu_56::CalendarAstronomer::getSunTime(double,signed char)+65r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1944h
		public __real@4142ad09c0000000
__real@4142ad09c0000000	dq 2447891.5	; DATA XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+26r
					; icu_56::CalendarAstronomer::getMoonPosition(void)+47r
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 194Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::norm2PI(double)
?norm2PI@icu_56@@YANN@Z	proc near	; CODE XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+46p
					; icu_56::CalendarAstronomer::getSunLongitude(double,double &,double &)+80p ...

var_DC		= qword	ptr -0DCh
var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= qword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		sub	esp, 8
		fstp	[esp+0D4h+var_D4] ; double
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+0DCh+var_DC] ; double
		call	?normalize@icu_56@@YANNN@Z ; icu_56::normalize(double,double)
		add	esp, 10h
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?norm2PI@icu_56@@YANN@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 19A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::trueAnomaly(double, double)
?trueAnomaly@icu_56@@YANNN@Z proc near	; CODE XREF: icu_56::CalendarAstronomer::getSunLongitude(double,double &,double	&)+A4p

var_FC		= qword	ptr -0FCh
var_E8		= qword	ptr -0E8h
var_1C		= qword	ptr -1Ch
var_C		= qword	ptr -0Ch
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E8]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		fld	[ebp+arg_0]
		fstp	[ebp+var_1C]

loc_19C4:				; CODE XREF: icu_56::trueAnomaly(double,double)+7Ej
		sub	esp, 8
		fld	[ebp+var_1C]
		fstp	[esp+0FCh+var_FC]
		call	_sin
		add	esp, 8
		fmul	[ebp+arg_8]
		fsubr	[ebp+var_1C]
		fsub	[ebp+arg_0]
		fstp	[ebp+var_C]
		sub	esp, 8
		fld	[ebp+var_1C]
		fstp	[esp+0FCh+var_FC]
		call	_cos
		add	esp, 8
		fmul	[ebp+arg_8]
		fld1
		fsubrp	st(1), st
		fdivr	[ebp+var_C]
		fsubr	[ebp+var_1C]
		fstp	[ebp+var_1C]
		sub	esp, 8
		fld	[ebp+var_C]
		fstp	[esp+0FCh+var_FC]
		call	_uprv_fabs_56
		add	esp, 8
		fcomp	ds:__real@3ee4f8b588e368f1
		fnstsw	ax
		test	ah, 41h
		jz	short loc_19C4
		fld	[ebp+var_1C]
		fdiv	ds:__real@4000000000000000
		sub	esp, 8
		fstp	[esp+0FCh+var_FC]
		call	_tan
		add	esp, 8
		fld1
		fadd	[ebp+arg_8]
		fld1
		fsub	[ebp+arg_8]
		fdivp	st(1), st
		sub	esp, 8
		fstp	[esp+0FCh+var_FC]
		fstp	[ebp+var_E8]
		call	_sqrt
		add	esp, 8
		fmul	[ebp+var_E8]
		sub	esp, 8
		fstp	[esp+0FCh+var_FC]
		call	_atan
		add	esp, 8
		fmul	ds:__real@4000000000000000
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?trueAnomaly@icu_56@@YANNN@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1A88h
		public __real@4000000000000000
__real@4000000000000000	dq 2.0		; DATA XREF: icu_56::trueAnomaly(double,double)+83r
					; icu_56::trueAnomaly(double,double)+CBr ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1A90h
		public __real@3ee4f8b588e368f1
__real@3ee4f8b588e368f1	dq 0.00001	; DATA XREF: icu_56::trueAnomaly(double,double)+73r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1A98h
		public __real@3ff0000000000000
__real@3ff0000000000000	dd 0
		dd 3FF00000h
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1AA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct icu_56::CalendarAstronomer::Equatorial	*__thiscall icu_56::CalendarAstronomer::getSunPosition(icu_56::CalendarAstronomer *this, struct	icu_56::CalendarAstronomer::Equatorial *)
		public ?getSunPosition@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@@Z
?getSunPosition@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@@Z proc near
					; CODE XREF: icu_56::RiseSetCoordFunc::eval(icu_56::CalendarAstronomer::Equatorial &,icu_56::CalendarAstronomer	&)+2Ap

var_E8		= qword	ptr -0E8h
var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+0E0h+var_E0] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?getSunLongitude@CalendarAstronomer@icu_56@@QAENXZ ; icu_56::CalendarAstronomer::getSunLongitude(void)
		sub	esp, 8
		fstp	[esp+0E8h+var_E8] ; double
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::CalendarAstronomer::Equatorial	*
		mov	ecx, [ebp+var_8] ; this
		call	?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z ; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getSunPosition@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1AFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __cdecl icu_56::CalendarAstronomer::SUMMER_SOLSTICE()
		public ?SUMMER_SOLSTICE@CalendarAstronomer@icu_56@@SANXZ
?SUMMER_SOLSTICE@CalendarAstronomer@icu_56@@SANXZ proc near

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4000000000000000
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?SUMMER_SOLSTICE@CalendarAstronomer@icu_56@@SANXZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B30h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __cdecl icu_56::CalendarAstronomer::WINTER_SOLSTICE()
		public ?WINTER_SOLSTICE@CalendarAstronomer@icu_56@@SANXZ
?WINTER_SOLSTICE@CalendarAstronomer@icu_56@@SANXZ proc near

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fmul	ds:__real@4008000000000000
		fdiv	ds:__real@4000000000000000
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?WINTER_SOLSTICE@CalendarAstronomer@icu_56@@SANXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1B68h
		public __real@4008000000000000
__real@4008000000000000	dq 3.0		; DATA XREF: icu_56::CalendarAstronomer::WINTER_SOLSTICE(void)+24r
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B70h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::AngleFunc::~AngleFunc(icu_56::CalendarAstronomer::AngleFunc *__hidden this)
		public ??1AngleFunc@CalendarAstronomer@icu_56@@UAE@XZ
??1AngleFunc@CalendarAstronomer@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::AngleFunc::`scalar deleting destructor'(uint)+26p
					; icu_56::SunTimeAngleFunc::~SunTimeAngleFunc(void)+2Fp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7AngleFunc@CalendarAstronomer@icu_56@@6B@ ; const icu_56::CalendarAstronomer::AngleFunc::`vftable'
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1AngleFunc@CalendarAstronomer@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1BA4h
		dd offset ??_R4AngleFunc@CalendarAstronomer@icu_56@@6B@	; const	icu_56::CalendarAstronomer::AngleFunc::`RTTI Complete Object Locator'
		public ??_7AngleFunc@CalendarAstronomer@icu_56@@6B@
; const	icu_56::CalendarAstronomer::AngleFunc::`vftable'
??_7AngleFunc@CalendarAstronomer@icu_56@@6B@ dd	offset __purecall
					; DATA XREF: icu_56::CalendarAstronomer::AngleFunc::~AngleFunc(void)+26o
					; icu_56::CalendarAstronomer::AngleFunc::AngleFunc(void)+26o
		dd offset ??_EAngleFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z ; icu_56::CalendarAstronomer::AngleFunc::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1BB0h
		public ??_R4AngleFunc@CalendarAstronomer@icu_56@@6B@
; const	icu_56::CalendarAstronomer::AngleFunc::`RTTI Complete Object Locator'
??_R4AngleFunc@CalendarAstronomer@icu_56@@6B@ dd 3 dup(0) ; DATA XREF: .rdata:00001BA4o
		dd offset ??_R0?AVAngleFunc@CalendarAstronomer@icu_56@@@8 ; icu_56::CalendarAstronomer::AngleFunc `RTTI	Type Descriptor'
		dd offset ??_R3AngleFunc@CalendarAstronomer@icu_56@@8 ;	icu_56::CalendarAstronomer::AngleFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1BC4h
		public ??_R0?AVAngleFunc@CalendarAstronomer@icu_56@@@8
; class	icu_56::CalendarAstronomer::AngleFunc `RTTI Type Descriptor'
??_R0?AVAngleFunc@CalendarAstronomer@icu_56@@@8	dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001BBCo
					; .rdata$r:icu_56::CalendarAstronomer::AngleFunc::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avanglefunc@	db '.?AVAngleFunc@CalendarAstronomer@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1BF8h
		public ??_R3AngleFunc@CalendarAstronomer@icu_56@@8
; icu_56::CalendarAstronomer::AngleFunc::`RTTI Class Hierarchy Descriptor'
??_R3AngleFunc@CalendarAstronomer@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001BC0o
					; .rdata$r:00001C2Co
		dd 2
		dd offset ??_R2AngleFunc@CalendarAstronomer@icu_56@@8 ;	icu_56::CalendarAstronomer::AngleFunc::`RTTI Base Class	Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C08h
		public ??_R2AngleFunc@CalendarAstronomer@icu_56@@8
; icu_56::CalendarAstronomer::AngleFunc::`RTTI Base Class Array'
??_R2AngleFunc@CalendarAstronomer@icu_56@@8 dd offset ??_R1A@?0A@EA@AngleFunc@CalendarAstronomer@icu_56@@8
					; DATA XREF: .rdata$r:00001C04o
					; icu_56::CalendarAstronomer::AngleFunc::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C14h
		public ??_R1A@?0A@EA@AngleFunc@CalendarAstronomer@icu_56@@8
; icu_56::CalendarAstronomer::AngleFunc::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@AngleFunc@CalendarAstronomer@icu_56@@8 dd	offset ??_R0?AVAngleFunc@CalendarAstronomer@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CalendarAstronomer::AngleFunc::`RTTI Base	Class Array'o
					; .rdata$r:00001DA8o ...
					; icu_56::CalendarAstronomer::AngleFunc	`RTTI Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3AngleFunc@CalendarAstronomer@icu_56@@8 ;	icu_56::CalendarAstronomer::AngleFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C30h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00001C0Co
					; .rdata$r:00001DACo ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		align 8
		dd 4, 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1C4Ch
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C6Ch
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001C48o
					; .rdata$r:00001C9Co
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C7Ch
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:00001C78o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1C84h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		align 10h
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1CA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CalendarAstronomer::AngleFunc::`scalar deleting destructor'(unsigned int)
		public ??_GAngleFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z
??_GAngleFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1AngleFunc@CalendarAstronomer@icu_56@@UAE@XZ ; icu_56::CalendarAstronomer::AngleFunc::~AngleFunc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1CE9
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1CE9:				; CODE XREF: icu_56::CalendarAstronomer::AngleFunc::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GAngleFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D04h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::SunTimeAngleFunc::~SunTimeAngleFunc(icu_56::SunTimeAngleFunc *__hidden this)
		public ??1SunTimeAngleFunc@icu_56@@UAE@XZ
??1SunTimeAngleFunc@icu_56@@UAE@XZ proc	near
					; CODE XREF: icu_56::SunTimeAngleFunc::`scalar deleting	destructor'(uint)+26p
					; icu_56::CalendarAstronomer::getSunTime(double,signed char)+93p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7SunTimeAngleFunc@icu_56@@6B@ ; const icu_56::SunTimeAngleFunc::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1AngleFunc@CalendarAstronomer@icu_56@@UAE@XZ ; icu_56::CalendarAstronomer::AngleFunc::~AngleFunc(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1SunTimeAngleFunc@icu_56@@UAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1D4Ch
		dd offset ??_R4SunTimeAngleFunc@icu_56@@6B@ ; const icu_56::SunTimeAngleFunc::`RTTI Complete Object Locator'
		public ??_7SunTimeAngleFunc@icu_56@@6B@
; const	icu_56::SunTimeAngleFunc::`vftable'
??_7SunTimeAngleFunc@icu_56@@6B@ dd offset ?eval@SunTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z
					; DATA XREF: icu_56::SunTimeAngleFunc::~SunTimeAngleFunc(void)+26o
					; icu_56::SunTimeAngleFunc::SunTimeAngleFunc(void)+2Eo
					; icu_56::SunTimeAngleFunc::eval(icu_56::CalendarAstronomer &)
		dd offset ??_ESunTimeAngleFunc@icu_56@@UAEPAXI@Z ; icu_56::SunTimeAngleFunc::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D58h
		public ??_R4SunTimeAngleFunc@icu_56@@6B@
; const	icu_56::SunTimeAngleFunc::`RTTI	Complete Object	Locator'
??_R4SunTimeAngleFunc@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:00001D4Co
		dd offset ??_R0?AVSunTimeAngleFunc@icu_56@@@8 ;	icu_56::SunTimeAngleFunc `RTTI Type Descriptor'
		dd offset ??_R3SunTimeAngleFunc@icu_56@@8 ; icu_56::SunTimeAngleFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1D6Ch
		public ??_R0?AVSunTimeAngleFunc@icu_56@@@8
; class	icu_56::SunTimeAngleFunc `RTTI Type Descriptor'
??_R0?AVSunTimeAngleFunc@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001D64o
					; .rdata$r:icu_56::SunTimeAngleFunc::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avsuntimeang	db '.?AVSunTimeAngleFunc@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1D94h
		public ??_R3SunTimeAngleFunc@icu_56@@8
; icu_56::SunTimeAngleFunc::`RTTI Class	Hierarchy Descriptor'
??_R3SunTimeAngleFunc@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:00001D68o
					; .rdata$r:00001DCCo
		dd 3
		dd offset ??_R2SunTimeAngleFunc@icu_56@@8 ; icu_56::SunTimeAngleFunc::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1DA4h
		public ??_R2SunTimeAngleFunc@icu_56@@8
; icu_56::SunTimeAngleFunc::`RTTI Base Class Array'
??_R2SunTimeAngleFunc@icu_56@@8	dd offset ??_R1A@?0A@EA@SunTimeAngleFunc@icu_56@@8
					; DATA XREF: .rdata$r:00001DA0o
					; icu_56::SunTimeAngleFunc::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@AngleFunc@CalendarAstronomer@icu_56@@8 ; icu_56::CalendarAstronomer::AngleFunc::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1DB4h
		public ??_R1A@?0A@EA@SunTimeAngleFunc@icu_56@@8
; icu_56::SunTimeAngleFunc::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@SunTimeAngleFunc@icu_56@@8 dd offset ??_R0?AVSunTimeAngleFunc@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::SunTimeAngleFunc::`RTTI Base Class Array'o
					; icu_56::SunTimeAngleFunc `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3SunTimeAngleFunc@icu_56@@8 ; icu_56::SunTimeAngleFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1DD0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::SunTimeAngleFunc::eval(icu_56::SunTimeAngleFunc *this, struct icu_56::CalendarAstronomer *)
		public ?eval@SunTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z
?eval@SunTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z proc near
					; DATA XREF: .rdata:const icu_56::SunTimeAngleFunc::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+arg_0] ; this
		call	?getSunLongitude@CalendarAstronomer@icu_56@@QAENXZ ; icu_56::CalendarAstronomer::getSunLongitude(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?eval@SunTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1E14h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::SunTimeAngleFunc::`scalar deleting destructor'(unsigned int)
		public ??_GSunTimeAngleFunc@icu_56@@UAEPAXI@Z
??_GSunTimeAngleFunc@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1SunTimeAngleFunc@icu_56@@UAE@XZ ; icu_56::SunTimeAngleFunc::~SunTimeAngleFunc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1E5D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_1E5D:				; CODE XREF: icu_56::SunTimeAngleFunc::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GSunTimeAngleFunc@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1E78h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getSunTime(icu_56::CalendarAstronomer *this, double, signed __int8)
		public ?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z
?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z	proc near

var_120		= qword	ptr -120h
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_F4		= byte ptr -0F4h
var_F0		= qword	ptr -0F0h
var_20		= byte ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= qword	ptr  8
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		lea	ecx, [ebp+var_20] ; this
		call	??0SunTimeAngleFunc@icu_56@@QAE@XZ ; icu_56::SunTimeAngleFunc::SunTimeAngleFunc(void)
		mov	[ebp+var_4], 0
		movzx	eax, [ebp+arg_8]
		push	eax		; signed __int8
		sub	esp, 8
		fld	ds:__real@40ed4c0000000000
		fstp	[esp+110h+var_110] ; double
		sub	esp, 8
		fld	ds:__real@4076d3e003ab862b
		fstp	[esp+118h+var_118] ; double
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+120h+var_120] ; double
		lea	ecx, [ebp+var_20]
		push	ecx		; struct icu_56::CalendarAstronomer::AngleFunc *
		mov	ecx, [ebp+var_14] ; this
		call	?timeOfAngle@CalendarAstronomer@icu_56@@QAENAAVAngleFunc@12@NNNC@Z ; icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)
		fstp	[ebp+var_F0]
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_20] ; this
		call	??1SunTimeAngleFunc@icu_56@@UAE@XZ ; icu_56::SunTimeAngleFunc::~SunTimeAngleFunc(void)
		fld	[ebp+var_F0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z	endp

; ---------------------------------------------------------------------------
$LN7		dd 1			; DATA XREF: icu_56::CalendarAstronomer::getSunTime(double,signed char)+A2o
		dd offset $LN6
$LN6		dd 0FFFFFFE0h, 4	; DATA XREF: .text:00001F4Co
		dd offset $LN4_0	; "func"
$LN4_0		db 'func',0             ; DATA XREF: .text:00001F58o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1F64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z$0 proc near
					; DATA XREF: .xdata$x:00001F98o
		lea	ecx, [ebp-20h]	; this
		jmp	??1SunTimeAngleFunc@icu_56@@UAE@XZ ; icu_56::SunTimeAngleFunc::~SunTimeAngleFunc(void)
__unwindfunclet$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z proc near
					; DATA XREF: icu_56::CalendarAstronomer::getSunTime(double,signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1F8Ch
		public __real@40ed4c0000000000
__real@40ed4c0000000000	dq 60000.0	; DATA XREF: icu_56::CalendarAstronomer::getSunTime(double,signed char)+59r
					; icu_56::CalendarAstronomer::getMoonTime(double,signed	char)+59r ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1F94h
__unwindtable$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001FA4o
		dd offset __unwindfunclet$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z$0
__ehfuncinfo$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z dd	19930522h, 1
					; DATA XREF: __ehhandler$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z+14o
		dd offset __unwindtable$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1FC0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::SunTimeAngleFunc::SunTimeAngleFunc(icu_56::SunTimeAngleFunc	*__hidden this)
		public ??0SunTimeAngleFunc@icu_56@@QAE@XZ
??0SunTimeAngleFunc@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::CalendarAstronomer::getSunTime(double,signed char)+45p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0AngleFunc@CalendarAstronomer@icu_56@@QAE@XZ ; icu_56::CalendarAstronomer::AngleFunc::AngleFunc(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7SunTimeAngleFunc@icu_56@@6B@ ; const icu_56::SunTimeAngleFunc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh

loc_2000:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::fixedo
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0SunTimeAngleFunc@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 200Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::AngleFunc::AngleFunc(icu_56::CalendarAstronomer::AngleFunc *__hidden this)
		public ??0AngleFunc@CalendarAstronomer@icu_56@@QAE@XZ
??0AngleFunc@CalendarAstronomer@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::SunTimeAngleFunc::SunTimeAngleFunc(void)+26p
					; icu_56::MoonTimeAngleFunc::MoonTimeAngleFunc(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7AngleFunc@CalendarAstronomer@icu_56@@6B@ ; const icu_56::CalendarAstronomer::AngleFunc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??0AngleFunc@CalendarAstronomer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2044h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::CoordFunc::~CoordFunc(icu_56::CalendarAstronomer::CoordFunc *__hidden this)
		public ??1CoordFunc@CalendarAstronomer@icu_56@@UAE@XZ
??1CoordFunc@CalendarAstronomer@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::CoordFunc::`scalar deleting destructor'(uint)+26p
					; icu_56::RiseSetCoordFunc::~RiseSetCoordFunc(void)+2Fp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CoordFunc@CalendarAstronomer@icu_56@@6B@ ; const icu_56::CalendarAstronomer::CoordFunc::`vftable'
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??1CoordFunc@CalendarAstronomer@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2078h
		dd offset ??_R4CoordFunc@CalendarAstronomer@icu_56@@6B@	; const	icu_56::CalendarAstronomer::CoordFunc::`RTTI Complete Object Locator'
		public ??_7CoordFunc@CalendarAstronomer@icu_56@@6B@
; const	icu_56::CalendarAstronomer::CoordFunc::`vftable'
??_7CoordFunc@CalendarAstronomer@icu_56@@6B@ dd	offset __purecall
					; DATA XREF: icu_56::CalendarAstronomer::CoordFunc::~CoordFunc(void)+26o
					; icu_56::CalendarAstronomer::CoordFunc::CoordFunc(void)+26o
		dd offset ??_ECoordFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z ; icu_56::CalendarAstronomer::CoordFunc::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2084h
		public ??_R4CoordFunc@CalendarAstronomer@icu_56@@6B@
; const	icu_56::CalendarAstronomer::CoordFunc::`RTTI Complete Object Locator'
??_R4CoordFunc@CalendarAstronomer@icu_56@@6B@ dd 3 dup(0) ; DATA XREF: .rdata:00002078o
		dd offset ??_R0?AVCoordFunc@CalendarAstronomer@icu_56@@@8 ; icu_56::CalendarAstronomer::CoordFunc `RTTI	Type Descriptor'
		dd offset ??_R3CoordFunc@CalendarAstronomer@icu_56@@8 ;	icu_56::CalendarAstronomer::CoordFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2098h
		public ??_R0?AVCoordFunc@CalendarAstronomer@icu_56@@@8
; class	icu_56::CalendarAstronomer::CoordFunc `RTTI Type Descriptor'
??_R0?AVCoordFunc@CalendarAstronomer@icu_56@@@8	dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002090o
					; .rdata$r:icu_56::CalendarAstronomer::CoordFunc::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avcoordfunc@	db '.?AVCoordFunc@CalendarAstronomer@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 20CCh
		public ??_R3CoordFunc@CalendarAstronomer@icu_56@@8
; icu_56::CalendarAstronomer::CoordFunc::`RTTI Class Hierarchy Descriptor'
??_R3CoordFunc@CalendarAstronomer@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00002094o
					; .rdata$r:00002100o
		dd 2
		dd offset ??_R2CoordFunc@CalendarAstronomer@icu_56@@8 ;	icu_56::CalendarAstronomer::CoordFunc::`RTTI Base Class	Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 20DCh
		public ??_R2CoordFunc@CalendarAstronomer@icu_56@@8
; icu_56::CalendarAstronomer::CoordFunc::`RTTI Base Class Array'
??_R2CoordFunc@CalendarAstronomer@icu_56@@8 dd offset ??_R1A@?0A@EA@CoordFunc@CalendarAstronomer@icu_56@@8
					; DATA XREF: .rdata$r:000020D8o
					; icu_56::CalendarAstronomer::CoordFunc::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 20E8h
		public ??_R1A@?0A@EA@CoordFunc@CalendarAstronomer@icu_56@@8
; icu_56::CalendarAstronomer::CoordFunc::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@CoordFunc@CalendarAstronomer@icu_56@@8 dd	offset ??_R0?AVCoordFunc@CalendarAstronomer@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CalendarAstronomer::CoordFunc::`RTTI Base	Class Array'o
					; .rdata$r:0000220Co ...
					; icu_56::CalendarAstronomer::CoordFunc	`RTTI Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CoordFunc@CalendarAstronomer@icu_56@@8 ;	icu_56::CalendarAstronomer::CoordFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2104h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CalendarAstronomer::CoordFunc::`scalar deleting destructor'(unsigned int)
		public ??_GCoordFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z
??_GCoordFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CoordFunc@CalendarAstronomer@icu_56@@UAE@XZ ; icu_56::CalendarAstronomer::CoordFunc::~CoordFunc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_214D
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_214D:				; CODE XREF: icu_56::CalendarAstronomer::CoordFunc::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCoordFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2168h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::RiseSetCoordFunc::~RiseSetCoordFunc(icu_56::RiseSetCoordFunc *__hidden this)
		public ??1RiseSetCoordFunc@icu_56@@UAE@XZ
??1RiseSetCoordFunc@icu_56@@UAE@XZ proc	near
					; CODE XREF: icu_56::RiseSetCoordFunc::`scalar deleting	destructor'(uint)+26p
					; icu_56::CalendarAstronomer::getSunRiseSet(signed char)+138p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7RiseSetCoordFunc@icu_56@@6B@ ; const icu_56::RiseSetCoordFunc::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1CoordFunc@CalendarAstronomer@icu_56@@UAE@XZ ; icu_56::CalendarAstronomer::CoordFunc::~CoordFunc(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1RiseSetCoordFunc@icu_56@@UAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 21B0h
		dd offset ??_R4RiseSetCoordFunc@icu_56@@6B@ ; const icu_56::RiseSetCoordFunc::`RTTI Complete Object Locator'
		public ??_7RiseSetCoordFunc@icu_56@@6B@
; const	icu_56::RiseSetCoordFunc::`vftable'
??_7RiseSetCoordFunc@icu_56@@6B@ dd offset ?eval@RiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z
					; DATA XREF: icu_56::RiseSetCoordFunc::~RiseSetCoordFunc(void)+26o
					; icu_56::RiseSetCoordFunc::RiseSetCoordFunc(void)+2Eo
					; icu_56::RiseSetCoordFunc::eval(icu_56::CalendarAstronomer::Equatorial	&,icu_56::CalendarAstronomer &)
		dd offset ??_ERiseSetCoordFunc@icu_56@@UAEPAXI@Z ; icu_56::RiseSetCoordFunc::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 21BCh
		public ??_R4RiseSetCoordFunc@icu_56@@6B@
; const	icu_56::RiseSetCoordFunc::`RTTI	Complete Object	Locator'
??_R4RiseSetCoordFunc@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:000021B0o
		dd offset ??_R0?AVRiseSetCoordFunc@icu_56@@@8 ;	icu_56::RiseSetCoordFunc `RTTI Type Descriptor'
		dd offset ??_R3RiseSetCoordFunc@icu_56@@8 ; icu_56::RiseSetCoordFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 21D0h
		public ??_R0?AVRiseSetCoordFunc@icu_56@@@8
; class	icu_56::RiseSetCoordFunc `RTTI Type Descriptor'
??_R0?AVRiseSetCoordFunc@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000021C8o
					; .rdata$r:icu_56::RiseSetCoordFunc::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avrisesetcoo	db '.?AVRiseSetCoordFunc@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 21F8h
		public ??_R3RiseSetCoordFunc@icu_56@@8
; icu_56::RiseSetCoordFunc::`RTTI Class	Hierarchy Descriptor'
??_R3RiseSetCoordFunc@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:000021CCo
					; .rdata$r:00002230o
		dd 3
		dd offset ??_R2RiseSetCoordFunc@icu_56@@8 ; icu_56::RiseSetCoordFunc::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2208h
		public ??_R2RiseSetCoordFunc@icu_56@@8
; icu_56::RiseSetCoordFunc::`RTTI Base Class Array'
??_R2RiseSetCoordFunc@icu_56@@8	dd offset ??_R1A@?0A@EA@RiseSetCoordFunc@icu_56@@8
					; DATA XREF: .rdata$r:00002204o
					; icu_56::RiseSetCoordFunc::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CoordFunc@CalendarAstronomer@icu_56@@8 ; icu_56::CalendarAstronomer::CoordFunc::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2218h
		public ??_R1A@?0A@EA@RiseSetCoordFunc@icu_56@@8
; icu_56::RiseSetCoordFunc::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@RiseSetCoordFunc@icu_56@@8 dd offset ??_R0?AVRiseSetCoordFunc@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::RiseSetCoordFunc::`RTTI Base Class Array'o
					; icu_56::RiseSetCoordFunc `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3RiseSetCoordFunc@icu_56@@8 ; icu_56::RiseSetCoordFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2234h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::RiseSetCoordFunc::eval(icu_56::RiseSetCoordFunc *this, struct	icu_56::CalendarAstronomer::Equatorial *, struct icu_56::CalendarAstronomer *)
		public ?eval@RiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z
?eval@RiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z proc near
					; DATA XREF: .rdata:const icu_56::RiseSetCoordFunc::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::CalendarAstronomer::Equatorial	*
		mov	ecx, [ebp+arg_4] ; this
		call	?getSunPosition@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@@Z ; icu_56::CalendarAstronomer::getSunPosition(icu_56::CalendarAstronomer::Equatorial &)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?eval@RiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 227Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::RiseSetCoordFunc::`scalar deleting destructor'(unsigned int)
		public ??_GRiseSetCoordFunc@icu_56@@UAEPAXI@Z
??_GRiseSetCoordFunc@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1RiseSetCoordFunc@icu_56@@UAE@XZ ; icu_56::RiseSetCoordFunc::~RiseSetCoordFunc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_22C5
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_22C5:				; CODE XREF: icu_56::RiseSetCoordFunc::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GRiseSetCoordFunc@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 22E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getSunRiseSet(icu_56::CalendarAstronomer *this,	signed __int8)
		public ?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z proc near

var_150		= qword	ptr -150h
var_148		= qword	ptr -148h
var_140		= qword	ptr -140h
var_128		= dword	ptr -128h
var_120		= qword	ptr -120h
var_50		= qword	ptr -50h
var_40		= byte ptr -40h
var_34		= qword	ptr -34h
var_24		= qword	ptr -24h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 11Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_128]
		mov	ecx, 47h ; 'G'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		fld	qword ptr [eax]
		fstp	[ebp+var_24]
		sub	esp, 8
		fld	ds:__real@4194997000000000
		fstp	[esp+140h+var_140] ; double
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_14]
		fld	qword ptr [eax]
		fadd	qword ptr [ecx+18h]
		sub	esp, 8
		fstp	[esp+148h+var_148] ; double
		call	?floorDivide@ClockMath@icu_56@@SANNN@Z ; icu_56::ClockMath::floorDivide(double,double)
		add	esp, 10h
		fmul	ds:__real@4194997000000000
		mov	edx, [ebp+var_14]
		fsub	qword ptr [edx+18h]
		fadd	ds:__real@4184997000000000
		fstp	[ebp+var_34]
		movsx	eax, [ebp+arg_0]
		neg	eax
		sbb	eax, eax
		and	eax, 0FFFFFFF4h
		add	eax, 6
		imul	eax, 36EE80h
		mov	[ebp+var_128], eax
		fild	[ebp+var_128]
		fadd	[ebp+var_34]
		sub	esp, 8
		fstp	[esp+140h+var_140] ; double
		mov	ecx, [ebp+var_14] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)
		lea	ecx, [ebp+var_40] ; this
		call	??0RiseSetCoordFunc@icu_56@@QAE@XZ ; icu_56::RiseSetCoordFunc::RiseSetCoordFunc(void)
		mov	[ebp+var_4], 0
		sub	esp, 8
		fld	ds:__real@40b3880000000000
		fstp	[esp+140h+var_140] ; double
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	ds:__real@3fe2222222222222
		sub	esp, 8
		fstp	[esp+148h+var_148] ; double
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	ds:__real@3fe10e5604189375
		sub	esp, 8
		fstp	[esp+150h+var_150] ; double
		movzx	eax, [ebp+arg_0]
		push	eax		; char
		lea	ecx, [ebp+var_40]
		push	ecx		; struct icu_56::CalendarAstronomer::CoordFunc *
		mov	ecx, [ebp+var_14] ; this
		call	?riseOrSet@CalendarAstronomer@icu_56@@QAENAAVCoordFunc@12@CNNN@Z ; icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed	char,double,double,double)
		fstp	[ebp+var_50]
		sub	esp, 8
		fld	[ebp+var_24]
		fstp	[esp+140h+var_140] ; double
		mov	ecx, [ebp+var_14] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)
		fld	[ebp+var_50]
		fstp	[ebp+var_120]
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_40] ; this
		call	??1RiseSetCoordFunc@icu_56@@UAE@XZ ; icu_56::RiseSetCoordFunc::~RiseSetCoordFunc(void)
		fld	[ebp+var_120]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 128h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN7_0		dd 1			; DATA XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+147o
		dd offset $LN6_0
$LN6_0		dd 0FFFFFFC0h, 4	; DATA XREF: .text:0000245Co
		dd offset $LN4_1	; "func"
$LN4_1		db 'func',0             ; DATA XREF: .text:00002468o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 2474h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z$0 proc near
					; DATA XREF: .xdata$x:000024C0o
		lea	ecx, [ebp-40h]	; this
		jmp	??1RiseSetCoordFunc@icu_56@@UAE@XZ ; icu_56::RiseSetCoordFunc::~RiseSetCoordFunc(void)
__unwindfunclet$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z proc near
					; DATA XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-12Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 249Ch
		public __real@3fe10e5604189375
__real@3fe10e5604189375	dq 0.533	; DATA XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+F4r
					; icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+81r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 24A4h
		public __real@3fe2222222222222
__real@3fe2222222222222	dq 0.5666666666666667
					; DATA XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+DCr
					; icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+69r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 24ACh
		public __real@40b3880000000000
__real@40b3880000000000	dq 5000.0	; DATA XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+C7r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 24B4h
		public __real@4184997000000000
__real@4184997000000000	dq 4.32e7	; DATA XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+7Br
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 24BCh
__unwindtable$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000024CCo
		dd offset __unwindfunclet$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z$0
__ehfuncinfo$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z+14o
		dd offset __unwindtable$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 24E8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::RiseSetCoordFunc::RiseSetCoordFunc(icu_56::RiseSetCoordFunc	*__hidden this)
		public ??0RiseSetCoordFunc@icu_56@@QAE@XZ
??0RiseSetCoordFunc@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+B8p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CoordFunc@CalendarAstronomer@icu_56@@QAE@XZ ; icu_56::CalendarAstronomer::CoordFunc::CoordFunc(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7RiseSetCoordFunc@icu_56@@6B@ ; const icu_56::RiseSetCoordFunc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0RiseSetCoordFunc@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2534h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarAstronomer::CoordFunc::CoordFunc(icu_56::CalendarAstronomer::CoordFunc *__hidden this)
		public ??0CoordFunc@CalendarAstronomer@icu_56@@QAE@XZ
??0CoordFunc@CalendarAstronomer@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::RiseSetCoordFunc::RiseSetCoordFunc(void)+26p
					; icu_56::MoonRiseSetCoordFunc::MoonRiseSetCoordFunc(void)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CoordFunc@CalendarAstronomer@icu_56@@6B@ ; const icu_56::CalendarAstronomer::CoordFunc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??0CoordFunc@CalendarAstronomer@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 256Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; const	struct icu_56::CalendarAstronomer::Equatorial *__thiscall icu_56::CalendarAstronomer::getMoonPosition(icu_56::CalendarAstronomer *__hidden this)
		public ?getMoonPosition@CalendarAstronomer@icu_56@@QAEABVEquatorial@12@XZ
?getMoonPosition@CalendarAstronomer@icu_56@@QAEABVEquatorial@12@XZ proc	near
					; CODE XREF: icu_56::CalendarAstronomer::getMoonAge(void)+26p
					; icu_56::MoonRiseSetCoordFunc::eval(icu_56::CalendarAstronomer::Equatorial &,icu_56::CalendarAstronomer &)+26p

var_1B0		= qword	ptr -1B0h
var_1A8		= qword	ptr -1A8h
var_194		= qword	ptr -194h
var_C8		= qword	ptr -0C8h
var_B8		= qword	ptr -0B8h
var_A8		= qword	ptr -0A8h
var_98		= qword	ptr -98h
var_88		= qword	ptr -88h
var_78		= qword	ptr -78h
var_68		= qword	ptr -68h
var_58		= qword	ptr -58h
var_48		= qword	ptr -48h
var_38		= qword	ptr -38h
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 194h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_194]
		mov	ecx, 65h ; 'e'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax+80h]
		test	ecx, ecx
		jnz	loc_2946
		mov	ecx, [ebp+var_8] ; this
		call	?getSunLongitude@CalendarAstronomer@icu_56@@QAENXZ ; icu_56::CalendarAstronomer::getSunLongitude(void)
		fstp	st
		mov	ecx, [ebp+var_8] ; this
		call	?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	; icu_56::CalendarAstronomer::getJulianDay(void)
		fsub	ds:__real@4142ad09c0000000
		fstp	[ebp+var_18]
		fld	ds:__real@402a5a50a7b8404e
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	[ebp+var_18]
		fld	ds:__real@4073e5a059a73b43
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		faddp	st(1), st
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		fstp	[ebp+var_28]
		fld	ds:__real@3fbc84faa623eb98
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	[ebp+var_18]
		fsubr	[ebp+var_28]
		fld	ds:__real@40422b928e0c9d9d
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fsubp	st(1), st
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+50h]
		fld	ds:__real@3ff461e4f765fd8b
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		fld	[ebp+var_28]
		fsub	qword ptr [eax+30h]
		fmul	ds:__real@4000000000000000
		mov	ecx, [ebp+var_8]
		fsub	qword ptr [ecx+50h]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fstp	[ebp+var_38]
		fld	ds:__real@3fc7c84b5dcc63f1
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+38h]
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fstp	[ebp+var_48]
		fld	ds:__real@3fd7ae147ae147ae
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+38h]
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fstp	[ebp+var_58]
		fld	[ebp+var_38]
		fsub	[ebp+var_48]
		fsub	[ebp+var_58]
		mov	eax, [ebp+var_8]
		fadd	qword ptr [eax+50h]
		mov	ecx, [ebp+var_8]
		fstp	qword ptr [ecx+50h]
		fld	ds:__real@40192786c226809d
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+50h]
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fstp	[ebp+var_68]
		fld	ds:__real@3fcb645a1cac0831
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		fld	ds:__real@4000000000000000
		fmul	qword ptr [eax+50h]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fstp	[ebp+var_78]
		fld	[ebp+var_28]
		fadd	[ebp+var_38]
		fadd	[ebp+var_68]
		fsub	[ebp+var_48]
		fadd	[ebp+var_78]
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+40h]
		fld	ds:__real@3fe510cb295e9e1b
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_8]
		fld	qword ptr [eax+40h]
		fsub	qword ptr [ecx+30h]
		fmul	ds:__real@4000000000000000
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fstp	[ebp+var_88]
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+40h]
		fadd	[ebp+var_88]
		mov	ecx, [ebp+var_8]
		fstp	qword ptr [ecx+40h]
		fld	ds:__real@4073e82965f5275f
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fld	ds:__real@3fab1cc609642cd0
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	[ebp+var_18]
		fsubp	st(1), st
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		fstp	[ebp+var_98]
		fld	ds:__real@3fc47ae147ae147b
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+38h]
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_194]
		fsubr	[ebp+var_98]
		fstp	[ebp+var_98]
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+40h]
		fsub	[ebp+var_98]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_sin
		add	esp, 8
		fstp	[ebp+var_A8]
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+40h]
		fsub	[ebp+var_98]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_B8]
		sub	esp, 8
		fld	[ebp+var_B8]
		fstp	[esp+1A8h+var_1A8]
		fld	ds:__real@401494dad31fcd25
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		sub	esp, 8
		fstp	[esp+1B0h+var_1B0]
		call	_cos
		add	esp, 8
		fmul	[ebp+var_A8]
		sub	esp, 8
		fstp	[esp+1B0h+var_1B0]
		call	_atan2
		add	esp, 10h
		fadd	[ebp+var_98]
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+48h]
		fld	ds:__real@401494dad31fcd25
		fmul	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_sin
		add	esp, 8
		fmul	[ebp+var_A8]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_asin
		add	esp, 8
		fstp	[ebp+var_C8]
		sub	esp, 8
		fld	[ebp+var_C8]
		fstp	[esp+1A8h+var_1A8] ; double
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+48h]
		fstp	[esp+1B0h+var_1B0] ; double
		mov	ecx, [ebp+var_8]
		add	ecx, 70h ; 'p'
		push	ecx		; struct icu_56::CalendarAstronomer::Equatorial	*
		mov	ecx, [ebp+var_8] ; this
		call	?eclipticToEquatorial@CalendarAstronomer@icu_56@@QAEAAVEquatorial@12@AAV312@NN@Z ; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+80h], 1

loc_2946:				; CODE XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+2Fj
		mov	eax, [ebp+var_8]
		add	eax, 70h ; 'p'
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 194h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getMoonPosition@CalendarAstronomer@icu_56@@QAEABVEquatorial@12@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2960h
		public __real@401494dad31fcd25
__real@401494dad31fcd25	dq 5.145366	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+32Fr
					; icu_56::CalendarAstronomer::getMoonPosition(void)+36Fr
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2968h
		public __real@3fc47ae147ae147b
__real@3fc47ae147ae147b	dq 0.16		; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+2A5r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2970h
		public __real@3fab1cc609642cd0
__real@3fab1cc609642cd0	dq 0.0529539	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+27Ar
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2978h
		public __real@4073e82965f5275f
__real@4073e82965f5275f	dq 318.510107	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+268r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2980h
		public __real@3fe510cb295e9e1b
__real@3fe510cb295e9e1b	dq 0.6583	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+212r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2988h
		public __real@3fcb645a1cac0831
__real@3fcb645a1cac0831	dq 0.214	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+1C2r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2990h
		public __real@40192786c226809d
__real@40192786c226809d	dq 6.2886	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+18Dr
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2998h
		public __real@3fd7ae147ae147ae
__real@3fd7ae147ae147ae	dq 0.37		; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+143r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 29A0h
		public __real@3fc7c84b5dcc63f1
__real@3fc7c84b5dcc63f1	dq 0.1858	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+10Er
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 29A8h
		public __real@3ff461e4f765fd8b
__real@3ff461e4f765fd8b	dq 1.2739	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+CAr
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 29B0h
		public __real@40422b928e0c9d9d
__real@40422b928e0c9d9d	dq 36.34041	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+A2r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 29B8h
		public __real@3fbc84faa623eb98
__real@3fbc84faa623eb98	dq 0.1114041	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+8Ar
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 29C0h
		public __real@4073e5a059a73b43
__real@4073e5a059a73b43	dq 318.351648	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+65r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 29C8h
		public __real@402a5a50a7b8404e
__real@402a5a50a7b8404e	dq 13.1763966	; DATA XREF: icu_56::CalendarAstronomer::getMoonPosition(void)+50r
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 29D0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getMoonAge(icu_56::CalendarAstronomer *__hidden	this)
		public ?getMoonAge@CalendarAstronomer@icu_56@@QAENXZ
?getMoonAge@CalendarAstronomer@icu_56@@QAENXZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::getMoonPhase(void)+26p
					; icu_56::MoonTimeAngleFunc::eval(icu_56::CalendarAstronomer &)+26p

var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?getMoonPosition@CalendarAstronomer@icu_56@@QAEABVEquatorial@12@XZ ; icu_56::CalendarAstronomer::getMoonPosition(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_8]
		fld	qword ptr [eax+48h]
		fsub	qword ptr [ecx+30h]
		sub	esp, 8
		fstp	[esp+0E0h+var_E0] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getMoonAge@CalendarAstronomer@icu_56@@QAENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2A2Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getMoonPhase(icu_56::CalendarAstronomer	*__hidden this)
		public ?getMoonPhase@CalendarAstronomer@icu_56@@QAENXZ
?getMoonPhase@CalendarAstronomer@icu_56@@QAENXZ	proc near

var_E0		= qword	ptr -0E0h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	?getMoonAge@CalendarAstronomer@icu_56@@QAENXZ ;	icu_56::CalendarAstronomer::getMoonAge(void)
		sub	esp, 8
		fstp	[esp+0E0h+var_E0]
		call	_cos
		add	esp, 8
		fld1
		fsubrp	st(1), st
		fmul	ds:__real@3fe0000000000000
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?getMoonPhase@CalendarAstronomer@icu_56@@QAENXZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2A84h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: static class icu_56::CalendarAstronomer::MoonAge const __cdecl icu_56::CalendarAstronomer::NEW_MOON(void)
		public ?NEW_MOON@CalendarAstronomer@icu_56@@SA?BVMoonAge@12@XZ
?NEW_MOON@CalendarAstronomer@icu_56@@SA?BVMoonAge@12@XZ	proc near

var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		sub	esp, 8
		fldz
		fstp	[esp+0D4h+var_D4] ; double
		mov	ecx, [ebp+arg_0] ; this
		call	??0MoonAge@CalendarAstronomer@icu_56@@QAE@N@Z ;	icu_56::CalendarAstronomer::MoonAge::MoonAge(double)
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?NEW_MOON@CalendarAstronomer@icu_56@@SA?BVMoonAge@12@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2ACCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: static class icu_56::CalendarAstronomer::MoonAge const __cdecl icu_56::CalendarAstronomer::FULL_MOON(void)
		public ?FULL_MOON@CalendarAstronomer@icu_56@@SA?BVMoonAge@12@XZ
?FULL_MOON@CalendarAstronomer@icu_56@@SA?BVMoonAge@12@XZ proc near

var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		sub	esp, 8
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fstp	[esp+0D4h+var_D4] ; double
		mov	ecx, [ebp+arg_0] ; this
		call	??0MoonAge@CalendarAstronomer@icu_56@@QAE@N@Z ;	icu_56::CalendarAstronomer::MoonAge::MoonAge(double)
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?FULL_MOON@CalendarAstronomer@icu_56@@SA?BVMoonAge@12@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2B18h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::MoonTimeAngleFunc::~MoonTimeAngleFunc(icu_56::MoonTimeAngleFunc *__hidden this)
		public ??1MoonTimeAngleFunc@icu_56@@UAE@XZ
??1MoonTimeAngleFunc@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::MoonTimeAngleFunc::`scalar	deleting destructor'(uint)+26p
					; icu_56::CalendarAstronomer::getMoonTime(double,signed	char)+93p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7MoonTimeAngleFunc@icu_56@@6B@ ; const icu_56::MoonTimeAngleFunc::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1AngleFunc@CalendarAstronomer@icu_56@@UAE@XZ ; icu_56::CalendarAstronomer::AngleFunc::~AngleFunc(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1MoonTimeAngleFunc@icu_56@@UAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B60h
		dd offset ??_R4MoonTimeAngleFunc@icu_56@@6B@ ; const icu_56::MoonTimeAngleFunc::`RTTI Complete Object Locator'
		public ??_7MoonTimeAngleFunc@icu_56@@6B@
; const	icu_56::MoonTimeAngleFunc::`vftable'
??_7MoonTimeAngleFunc@icu_56@@6B@ dd offset ?eval@MoonTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z
					; DATA XREF: icu_56::MoonTimeAngleFunc::~MoonTimeAngleFunc(void)+26o
					; icu_56::MoonTimeAngleFunc::MoonTimeAngleFunc(void)+2Eo
					; icu_56::MoonTimeAngleFunc::eval(icu_56::CalendarAstronomer &)
		dd offset ??_EMoonTimeAngleFunc@icu_56@@UAEPAXI@Z ; icu_56::MoonTimeAngleFunc::`vector deleting	destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2B6Ch
		public ??_R4MoonTimeAngleFunc@icu_56@@6B@
; const	icu_56::MoonTimeAngleFunc::`RTTI Complete Object Locator'
??_R4MoonTimeAngleFunc@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00002B60o
		dd offset ??_R0?AVMoonTimeAngleFunc@icu_56@@@8 ; icu_56::MoonTimeAngleFunc `RTTI Type Descriptor'
		dd offset ??_R3MoonTimeAngleFunc@icu_56@@8 ; icu_56::MoonTimeAngleFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2B80h
		public ??_R0?AVMoonTimeAngleFunc@icu_56@@@8
; class	icu_56::MoonTimeAngleFunc `RTTI	Type Descriptor'
??_R0?AVMoonTimeAngleFunc@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002B78o
					; .rdata$r:icu_56::MoonTimeAngleFunc::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avmoontimean	db '.?AVMoonTimeAngleFunc@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2BA8h
		public ??_R3MoonTimeAngleFunc@icu_56@@8
; icu_56::MoonTimeAngleFunc::`RTTI Class Hierarchy Descriptor'
??_R3MoonTimeAngleFunc@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002B7Co
					; .rdata$r:00002BE0o
		dd 3
		dd offset ??_R2MoonTimeAngleFunc@icu_56@@8 ; icu_56::MoonTimeAngleFunc::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2BB8h
		public ??_R2MoonTimeAngleFunc@icu_56@@8
; icu_56::MoonTimeAngleFunc::`RTTI Base	Class Array'
??_R2MoonTimeAngleFunc@icu_56@@8 dd offset ??_R1A@?0A@EA@MoonTimeAngleFunc@icu_56@@8
					; DATA XREF: .rdata$r:00002BB4o
					; icu_56::MoonTimeAngleFunc::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@AngleFunc@CalendarAstronomer@icu_56@@8 ; icu_56::CalendarAstronomer::AngleFunc::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2BC8h
		public ??_R1A@?0A@EA@MoonTimeAngleFunc@icu_56@@8
; icu_56::MoonTimeAngleFunc::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@MoonTimeAngleFunc@icu_56@@8 dd offset ??_R0?AVMoonTimeAngleFunc@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::MoonTimeAngleFunc::`RTTI Base Class Array'o
					; icu_56::MoonTimeAngleFunc `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3MoonTimeAngleFunc@icu_56@@8 ; icu_56::MoonTimeAngleFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2BE4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::MoonTimeAngleFunc::eval(icu_56::MoonTimeAngleFunc *this, struct icu_56::CalendarAstronomer *)
		public ?eval@MoonTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z
?eval@MoonTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z proc near
					; DATA XREF: .rdata:const icu_56::MoonTimeAngleFunc::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+arg_0] ; this
		call	?getMoonAge@CalendarAstronomer@icu_56@@QAENXZ ;	icu_56::CalendarAstronomer::getMoonAge(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?eval@MoonTimeAngleFunc@icu_56@@UAENAAVCalendarAstronomer@2@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2C28h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::MoonTimeAngleFunc::`scalar deleting	destructor'(unsigned int)
		public ??_GMoonTimeAngleFunc@icu_56@@UAEPAXI@Z
??_GMoonTimeAngleFunc@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1MoonTimeAngleFunc@icu_56@@UAE@XZ ; icu_56::MoonTimeAngleFunc::~MoonTimeAngleFunc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2C71
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2C71:				; CODE XREF: icu_56::MoonTimeAngleFunc::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GMoonTimeAngleFunc@icu_56@@UAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2C8Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getMoonTime(icu_56::CalendarAstronomer *this, double, signed __int8)
		public ?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z
?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::getMoonTime(icu_56::CalendarAstronomer::MoonAge const &,signed	char)+36p

var_120		= qword	ptr -120h
var_118		= qword	ptr -118h
var_110		= qword	ptr -110h
var_F4		= byte ptr -0F4h
var_F0		= qword	ptr -0F0h
var_20		= byte ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= qword	ptr  8
arg_8		= byte ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		lea	ecx, [ebp+var_20] ; this
		call	??0MoonTimeAngleFunc@icu_56@@QAE@XZ ; icu_56::MoonTimeAngleFunc::MoonTimeAngleFunc(void)
		mov	[ebp+var_4], 0
		movzx	eax, [ebp+arg_8]
		push	eax		; signed __int8
		sub	esp, 8
		fld	ds:__real@40ed4c0000000000
		fstp	[esp+110h+var_110] ; double
		sub	esp, 8
		fld	ds:?SYNODIC_MONTH@CalendarAstronomer@icu_56@@2NB ; double const	icu_56::CalendarAstronomer::SYNODIC_MONTH
		fstp	[esp+118h+var_118] ; double
		sub	esp, 8
		fld	[ebp+arg_0]
		fstp	[esp+120h+var_120] ; double
		lea	ecx, [ebp+var_20]
		push	ecx		; struct icu_56::CalendarAstronomer::AngleFunc *
		mov	ecx, [ebp+var_14] ; this
		call	?timeOfAngle@CalendarAstronomer@icu_56@@QAENAAVAngleFunc@12@NNNC@Z ; icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)
		fstp	[ebp+var_F0]
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_20] ; this
		call	??1MoonTimeAngleFunc@icu_56@@UAE@XZ ; icu_56::MoonTimeAngleFunc::~MoonTimeAngleFunc(void)
		fld	[ebp+var_F0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7_1
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z endp

; ---------------------------------------------------------------------------
$LN7_1		dd 1			; DATA XREF: icu_56::CalendarAstronomer::getMoonTime(double,signed char)+A2o
		dd offset $LN6_1
$LN6_1		dd 0FFFFFFE0h, 4	; DATA XREF: .text:00002D60o
		dd offset $LN4_2	; "func"
$LN4_2		db 'func',0             ; DATA XREF: .text:00002D6Co
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 2D78h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z$0 proc	near
					; DATA XREF: .xdata$x:00002DA4o
		lea	ecx, [ebp-20h]	; this
		jmp	??1MoonTimeAngleFunc@icu_56@@UAE@XZ ; icu_56::MoonTimeAngleFunc::~MoonTimeAngleFunc(void)
__unwindfunclet$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z proc near
					; DATA XREF: icu_56::CalendarAstronomer::getMoonTime(double,signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 2DA0h
__unwindtable$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00002DB0o
		dd offset __unwindfunclet$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z$0
__ehfuncinfo$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z+14o
		dd offset __unwindtable$?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2DCCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::MoonTimeAngleFunc::MoonTimeAngleFunc(icu_56::MoonTimeAngleFunc *__hidden this)
		public ??0MoonTimeAngleFunc@icu_56@@QAE@XZ
??0MoonTimeAngleFunc@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::getMoonTime(double,signed char)+45p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0AngleFunc@CalendarAstronomer@icu_56@@QAE@XZ ; icu_56::CalendarAstronomer::AngleFunc::AngleFunc(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7MoonTimeAngleFunc@icu_56@@6B@ ; const icu_56::MoonTimeAngleFunc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0MoonTimeAngleFunc@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2E18h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getMoonTime(icu_56::CalendarAstronomer *this, const struct icu_56::CalendarAstronomer::MoonAge *, signed __int8)
		public ?getMoonTime@CalendarAstronomer@icu_56@@QAENABVMoonAge@12@C@Z
?getMoonTime@CalendarAstronomer@icu_56@@QAENABVMoonAge@12@C@Z proc near

var_E4		= qword	ptr -0E4h
var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		movzx	eax, [ebp+arg_4]
		push	eax		; signed __int8
		mov	ecx, [ebp+arg_0]
		sub	esp, 8
		fld	qword ptr [ecx]
		fstp	[esp+0E4h+var_E4] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?getMoonTime@CalendarAstronomer@icu_56@@QAENNC@Z ; icu_56::CalendarAstronomer::getMoonTime(double,signed char)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?getMoonTime@CalendarAstronomer@icu_56@@QAENABVMoonAge@12@C@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2E6Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc(icu_56::MoonRiseSetCoordFunc *__hidden this)
		public ??1MoonRiseSetCoordFunc@icu_56@@UAE@XZ
??1MoonRiseSetCoordFunc@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::MoonRiseSetCoordFunc::`scalar deleting destructor'(uint)+26p
					; icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+AEp ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7MoonRiseSetCoordFunc@icu_56@@6B@ ; const icu_56::MoonRiseSetCoordFunc::`vftable'
		mov	ecx, [ebp+var_8] ; this
		call	??1CoordFunc@CalendarAstronomer@icu_56@@UAE@XZ ; icu_56::CalendarAstronomer::CoordFunc::~CoordFunc(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1MoonRiseSetCoordFunc@icu_56@@UAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2EB4h
		dd offset ??_R4MoonRiseSetCoordFunc@icu_56@@6B@	; const	icu_56::MoonRiseSetCoordFunc::`RTTI Complete Object Locator'
		public ??_7MoonRiseSetCoordFunc@icu_56@@6B@
; const	icu_56::MoonRiseSetCoordFunc::`vftable'
??_7MoonRiseSetCoordFunc@icu_56@@6B@ dd	offset ?eval@MoonRiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z
					; DATA XREF: icu_56::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc(void)+26o
					; icu_56::MoonRiseSetCoordFunc::MoonRiseSetCoordFunc(void)+2Eo
					; icu_56::MoonRiseSetCoordFunc::eval(icu_56::CalendarAstronomer::Equatorial &,icu_56::CalendarAstronomer &)
		dd offset ??_EMoonRiseSetCoordFunc@icu_56@@UAEPAXI@Z ; icu_56::MoonRiseSetCoordFunc::`vector deleting destructor'(uint)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2EC0h
		public ??_R4MoonRiseSetCoordFunc@icu_56@@6B@
; const	icu_56::MoonRiseSetCoordFunc::`RTTI Complete Object Locator'
??_R4MoonRiseSetCoordFunc@icu_56@@6B@ dd 3 dup(0) ; DATA XREF: .rdata:00002EB4o
		dd offset ??_R0?AVMoonRiseSetCoordFunc@icu_56@@@8 ; icu_56::MoonRiseSetCoordFunc `RTTI Type Descriptor'
		dd offset ??_R3MoonRiseSetCoordFunc@icu_56@@8 ;	icu_56::MoonRiseSetCoordFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2ED4h
		public ??_R0?AVMoonRiseSetCoordFunc@icu_56@@@8
; class	icu_56::MoonRiseSetCoordFunc `RTTI Type	Descriptor'
??_R0?AVMoonRiseSetCoordFunc@icu_56@@@8	dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002ECCo
					; .rdata$r:icu_56::MoonRiseSetCoordFunc::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avmoonrisese	db '.?AVMoonRiseSetCoordFunc@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F00h
		public ??_R3MoonRiseSetCoordFunc@icu_56@@8
; icu_56::MoonRiseSetCoordFunc::`RTTI Class Hierarchy Descriptor'
??_R3MoonRiseSetCoordFunc@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00002ED0o
					; .rdata$r:00002F38o
		dd 3
		dd offset ??_R2MoonRiseSetCoordFunc@icu_56@@8 ;	icu_56::MoonRiseSetCoordFunc::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F10h
		public ??_R2MoonRiseSetCoordFunc@icu_56@@8
; icu_56::MoonRiseSetCoordFunc::`RTTI Base Class Array'
??_R2MoonRiseSetCoordFunc@icu_56@@8 dd offset ??_R1A@?0A@EA@MoonRiseSetCoordFunc@icu_56@@8
					; DATA XREF: .rdata$r:00002F0Co
					; icu_56::MoonRiseSetCoordFunc::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@CoordFunc@CalendarAstronomer@icu_56@@8 ; icu_56::CalendarAstronomer::CoordFunc::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F20h
		public ??_R1A@?0A@EA@MoonRiseSetCoordFunc@icu_56@@8
; icu_56::MoonRiseSetCoordFunc::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@MoonRiseSetCoordFunc@icu_56@@8 dd	offset ??_R0?AVMoonRiseSetCoordFunc@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::MoonRiseSetCoordFunc::`RTTI Base Class Array'o
					; icu_56::MoonRiseSetCoordFunc `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3MoonRiseSetCoordFunc@icu_56@@8 ;	icu_56::MoonRiseSetCoordFunc::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2F3Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::MoonRiseSetCoordFunc::eval(icu_56::MoonRiseSetCoordFunc *this, struct	icu_56::CalendarAstronomer::Equatorial *, struct icu_56::CalendarAstronomer *)
		public ?eval@MoonRiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z
?eval@MoonRiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z proc	near
					; DATA XREF: .rdata:const icu_56::MoonRiseSetCoordFunc::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+arg_4] ; this
		call	?getMoonPosition@CalendarAstronomer@icu_56@@QAEABVEquatorial@12@XZ ; icu_56::CalendarAstronomer::getMoonPosition(void)
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		mov	[ecx], edx
		mov	edx, [eax+4]
		mov	[ecx+4], edx
		mov	edx, [eax+8]
		mov	[ecx+8], edx
		mov	eax, [eax+0Ch]
		mov	[ecx+0Ch], eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?eval@MoonRiseSetCoordFunc@icu_56@@UAEXAAVEquatorial@CalendarAstronomer@2@AAV42@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2F98h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::MoonRiseSetCoordFunc::`scalar deleting destructor'(unsigned int)
		public ??_GMoonRiseSetCoordFunc@icu_56@@UAEPAXI@Z
??_GMoonRiseSetCoordFunc@icu_56@@UAEPAXI@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1MoonRiseSetCoordFunc@icu_56@@UAE@XZ ; icu_56::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2FE1
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2FE1:				; CODE XREF: icu_56::MoonRiseSetCoordFunc::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GMoonRiseSetCoordFunc@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2FFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::getMoonRiseSet(icu_56::CalendarAstronomer *this, signed	__int8)
		public ?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z proc	near

var_11C		= qword	ptr -11Ch
var_114		= qword	ptr -114h
var_10C		= qword	ptr -10Ch
var_F4		= byte ptr -0F4h
var_F0		= qword	ptr -0F0h
var_20		= byte ptr -20h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= byte ptr  8

		push	ebp
		mov	ebp, esp

loc_2FFF:				; DATA XREF: .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::hexfloato
					; .rdata:std::_Iosb<int>::_Fmtflags const std::_Iosb<int>::floatfieldo
		push	0FFFFFFFFh
		push	offset __ehhandler$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0E8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Ah ; ':'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		lea	ecx, [ebp+var_20] ; this
		call	??0MoonRiseSetCoordFunc@icu_56@@QAE@XZ ; icu_56::MoonRiseSetCoordFunc::MoonRiseSetCoordFunc(void)
		mov	[ebp+var_4], 0
		sub	esp, 8
		fld	ds:__real@40ed4c0000000000
		fstp	[esp+10Ch+var_10C] ; double
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	ds:__real@3fe2222222222222
		sub	esp, 8
		fstp	[esp+114h+var_114] ; double
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		fmul	ds:__real@3fe10e5604189375
		sub	esp, 8
		fstp	[esp+11Ch+var_11C] ; double
		movzx	eax, [ebp+arg_0]
		push	eax		; char
		lea	ecx, [ebp+var_20]
		push	ecx		; struct icu_56::CalendarAstronomer::CoordFunc *
		mov	ecx, [ebp+var_14] ; this
		call	?riseOrSet@CalendarAstronomer@icu_56@@QAENAAVCoordFunc@12@CNNN@Z ; icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed	char,double,double,double)
		fstp	[ebp+var_F0]
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_20] ; this
		call	??1MoonRiseSetCoordFunc@icu_56@@UAE@XZ ; icu_56::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc(void)
		fld	[ebp+var_F0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN7_2
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN7_2		dd 1			; DATA XREF: icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+BDo
		dd offset $LN6_2
$LN6_2		dd 0FFFFFFE0h, 4	; DATA XREF: .text:000030ECo
		dd offset $LN4_3	; "func"
$LN4_3		db 'func',0             ; DATA XREF: .text:000030F8o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 3104h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z$0 proc near
					; DATA XREF: .xdata$x:00003130o
		lea	ecx, [ebp-20h]	; this
		jmp	??1MoonRiseSetCoordFunc@icu_56@@UAE@XZ ; icu_56::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc(void)
__unwindfunclet$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z proc near
					; DATA XREF: icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0F8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
		jmp	___CxxFrameHandler3
__ehhandler$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 312Ch
__unwindtable$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:0000313Co
		dd offset __unwindfunclet$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z$0
__ehfuncinfo$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z	dd 19930522h, 1
					; DATA XREF: __ehhandler$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z+14o
		dd offset __unwindtable$?getMoonRiseSet@CalendarAstronomer@icu_56@@QAENC@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3158h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::MoonRiseSetCoordFunc::MoonRiseSetCoordFunc(icu_56::MoonRiseSetCoordFunc *__hidden this)
		public ??0MoonRiseSetCoordFunc@icu_56@@QAE@XZ
??0MoonRiseSetCoordFunc@icu_56@@QAE@XZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+45p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0CoordFunc@CalendarAstronomer@icu_56@@QAE@XZ ; icu_56::CalendarAstronomer::CoordFunc::CoordFunc(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7MoonRiseSetCoordFunc@icu_56@@6B@ ; const icu_56::MoonRiseSetCoordFunc::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0MoonRiseSetCoordFunc@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 31A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer *this, struct icu_56::CalendarAstronomer::AngleFunc *, double, double, double, signed __int8)
		public ?timeOfAngle@CalendarAstronomer@icu_56@@QAENAAVAngleFunc@12@NNNC@Z
?timeOfAngle@CalendarAstronomer@icu_56@@QAENAAVAngleFunc@12@NNNC@Z proc	near
					; CODE XREF: icu_56::CalendarAstronomer::getSunTime(double,signed char)+7Ep
					; icu_56::CalendarAstronomer::getMoonTime(double,signed	char)+7Ep ...

var_17C		= qword	ptr -17Ch
var_174		= qword	ptr -174h
var_168		= qword	ptr -168h
var_154		= qword	ptr -154h
var_88		= qword	ptr -88h
var_78		= qword	ptr -78h
var_68		= qword	ptr -68h
var_58		= qword	ptr -58h
var_48		= qword	ptr -48h
var_38		= qword	ptr -38h
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= qword	ptr  0Ch
arg_C		= qword	ptr  14h
arg_14		= qword	ptr  1Ch
arg_1C		= byte ptr  24h

		push	ebp
		mov	ebp, esp
		sub	esp, 154h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_154]
		mov	ecx, 55h ; 'U'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		fstp	[ebp+var_18]
		fld	[ebp+arg_4]
		fsub	[ebp+var_18]
		sub	esp, 8
		fstp	[esp+168h+var_168] ; double
		call	?norm2PI@icu_56@@YANN@Z	; icu_56::norm2PI(double)
		add	esp, 8
		fstp	[ebp+var_28]
		movsx	eax, [ebp+arg_1C]
		test	eax, eax
		jz	short loc_320C
		fldz
		fstp	[ebp+var_154]
		jmp	short loc_321C
; ---------------------------------------------------------------------------

loc_320C:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+5Cj
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		fchs
		fstp	[ebp+var_154]

loc_321C:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+66j
		fld	[ebp+var_28]
		fadd	[ebp+var_154]
		fld	[ebp+arg_C]
		fmul	ds:__real@4194997000000000
		fmulp	st(1), st
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		fdivp	st(1), st
		fstp	[ebp+var_38]
		fld	[ebp+var_38]
		fstp	[ebp+var_48]
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax]
		fstp	[ebp+var_58]
		sub	esp, 8
		fld	[ebp+var_38]
		fstp	[esp+168h+var_168]
		call	_uprv_ceil_56
		add	esp, 8
		mov	eax, [ebp+var_8]
		fadd	qword ptr [eax]
		sub	esp, 8
		fstp	[esp+168h+var_168] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)

loc_326F:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+231j
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		fstp	[ebp+var_68]
		fld	[ebp+var_68]
		fsub	[ebp+var_18]
		sub	esp, 8
		fstp	[esp+168h+var_168] ; double
		call	?normPI@icu_56@@YANN@Z ; icu_56::normPI(double)
		add	esp, 8
		fdivr	[ebp+var_38]
		sub	esp, 8
		fstp	[esp+168h+var_168]
		call	_uprv_fabs_56
		add	esp, 8
		fstp	[ebp+var_78]
		fld	[ebp+arg_4]
		fsub	[ebp+var_68]
		sub	esp, 8
		fstp	[esp+168h+var_168] ; double
		call	?normPI@icu_56@@YANN@Z ; icu_56::normPI(double)
		add	esp, 8
		fmul	[ebp+var_78]
		fstp	[ebp+var_38]
		sub	esp, 8
		fld	[ebp+var_38]
		fstp	[esp+168h+var_168]
		call	_uprv_fabs_56
		fld	[ebp+var_48]
		fstp	[esp+168h+var_168]
		fstp	[ebp+var_154]
		call	_uprv_fabs_56
		add	esp, 8
		fcomp	[ebp+var_154]
		fnstsw	ax
		test	ah, 5
		jp	loc_338C
		fld	[ebp+arg_C]
		fmul	ds:__real@4194997000000000
		fdiv	ds:__real@4020000000000000
		sub	esp, 8
		fstp	[esp+168h+var_168]
		call	_uprv_ceil_56
		add	esp, 8
		fstp	[ebp+var_88]
		movsx	eax, [ebp+arg_1C]
		test	eax, eax
		jz	short loc_3339
		fld	[ebp+var_88]
		fstp	[ebp+var_154]
		jmp	short loc_3347
; ---------------------------------------------------------------------------

loc_3339:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+185j
		fld	[ebp+var_88]
		fchs
		fstp	[ebp+var_154]

loc_3347:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+193j
		fld	[ebp+var_58]
		fadd	[ebp+var_154]
		sub	esp, 8
		fstp	[esp+168h+var_168] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)
		movzx	eax, [ebp+arg_1C]
		push	eax		; signed __int8
		sub	esp, 8
		fld	[ebp+arg_14]
		fstp	qword ptr [esp]	; double
		sub	esp, 8
		fld	[ebp+arg_C]
		fstp	[esp+174h+var_174] ; double
		sub	esp, 8
		fld	[ebp+arg_4]
		fstp	[esp+17Ch+var_17C] ; double
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::CalendarAstronomer::AngleFunc *
		mov	ecx, [ebp+var_8] ; this
		call	?timeOfAngle@CalendarAstronomer@icu_56@@QAENAAVAngleFunc@12@NNNC@Z ; icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)
		jmp	short loc_33E0
; ---------------------------------------------------------------------------

loc_338C:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+156j
		fld	[ebp+var_38]
		fstp	[ebp+var_48]
		fld	[ebp+var_68]
		fstp	[ebp+var_18]
		sub	esp, 8
		fld	[ebp+var_38]
		fstp	[esp+168h+var_168]
		call	_uprv_ceil_56
		add	esp, 8
		mov	eax, [ebp+var_8]
		fadd	qword ptr [eax]
		sub	esp, 8
		fstp	[esp+168h+var_168] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)
		sub	esp, 8
		fld	[ebp+var_38]
		fstp	[esp+168h+var_168]
		call	_uprv_fabs_56
		add	esp, 8
		fcomp	[ebp+arg_14]
		fnstsw	ax
		test	ah, 41h
		jz	loc_326F
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax]

loc_33E0:				; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+1E6j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 154h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	20h
?timeOfAngle@CalendarAstronomer@icu_56@@QAENAAVAngleFunc@12@NNNC@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 33F8h
		public __real@4020000000000000
__real@4020000000000000	dq 8.0		; DATA XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+165r
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3400h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer *this, struct icu_56::CalendarAstronomer::CoordFunc *, char, double, double, double)
		public ?riseOrSet@CalendarAstronomer@icu_56@@QAENAAVCoordFunc@12@CNNN@Z
?riseOrSet@CalendarAstronomer@icu_56@@QAENAAVCoordFunc@12@CNNN@Z proc near
					; CODE XREF: icu_56::CalendarAstronomer::getSunRiseSet(signed char)+10Cp
					; icu_56::CalendarAstronomer::getMoonRiseSet(signed char)+99p

var_1B0		= qword	ptr -1B0h
var_1A8		= qword	ptr -1A8h
var_194		= qword	ptr -194h
var_C8		= dword	ptr -0C8h
var_BC		= qword	ptr -0BCh
var_AC		= qword	ptr -0ACh
var_9C		= qword	ptr -9Ch
var_8C		= qword	ptr -8Ch
var_7C		= qword	ptr -7Ch
var_6C		= qword	ptr -6Ch
var_5C		= qword	ptr -5Ch
var_4C		= dword	ptr -4Ch
var_40		= qword	ptr -40h
var_30		= qword	ptr -30h
var_20		= qword	ptr -20h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch
arg_8		= qword	ptr  10h
arg_10		= qword	ptr  18h
arg_18		= qword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 194h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_194]
		mov	ecx, 65h ; 'e'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		sub	esp, 8
		fldz
		fstp	[esp+1A8h+var_1A8] ; double
		sub	esp, 8
		fldz
		fstp	[esp+1B0h+var_1B0] ; double
		lea	ecx, [ebp+var_20] ; this
		call	??0Equatorial@CalendarAstronomer@icu_56@@QAE@NN@Z ; icu_56::CalendarAstronomer::Equatorial::Equatorial(double,double)
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+10h]
		fstp	[esp+1A8h+var_1A8]
		call	_tan
		add	esp, 8
		fstp	[ebp+var_30]
		fldz
		fstp	[ebp+var_40]
		mov	[ebp+var_4C], 0

loc_345E:				; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+146j
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax
		lea	ecx, [ebp+var_20]
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		fld	[ebp+var_30]
		fchs
		sub	esp, 8
		fld	[ebp+var_18]
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_tan
		add	esp, 8
		fmul	[ebp+var_194]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_acos
		add	esp, 8
		fstp	[ebp+var_5C]
		movsx	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_34C9
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		fsub	[ebp+var_5C]
		fstp	[ebp+var_194]
		jmp	short loc_34D2
; ---------------------------------------------------------------------------

loc_34C9:				; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+B4j
		fld	[ebp+var_5C]
		fstp	[ebp+var_194]

loc_34D2:				; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+C7j
		fld	[ebp+var_194]
		fadd	[ebp+var_20]
		fmul	ds:__real@4038000000000000
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fadd	st, st
		fdivp	st(1), st
		fstp	[ebp+var_6C]
		sub	esp, 8
		fld	[ebp+var_6C]
		fstp	[esp+1A8h+var_1A8] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?lstToUT@CalendarAstronomer@icu_56@@QAENN@Z ; icu_56::CalendarAstronomer::lstToUT(double)
		fstp	[ebp+var_7C]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_7C]
		fsub	qword ptr [eax]
		fstp	[ebp+var_40]
		sub	esp, 8
		fld	[ebp+var_7C]
		fstp	[esp+1A8h+var_1A8] ; double
		mov	ecx, [ebp+var_8] ; this
		call	?setTime@CalendarAstronomer@icu_56@@QAEXN@Z ; icu_56::CalendarAstronomer::setTime(double)
		mov	eax, [ebp+var_4C]
		add	eax, 1
		mov	[ebp+var_4C], eax
		cmp	[ebp+var_4C], 5
		jge	short loc_354C
		sub	esp, 8
		fld	[ebp+var_40]
		fstp	[esp+1A8h+var_1A8]
		call	_uprv_fabs_56
		add	esp, 8
		fcomp	[ebp+arg_18]
		fnstsw	ax
		test	ah, 41h
		jz	loc_345E

loc_354C:				; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+12Bj
		sub	esp, 8
		fld	[ebp+var_18]
		fstp	[esp+1A8h+var_1A8]
		call	_cos
		add	esp, 8
		fstp	[ebp+var_8C]
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+10h]
		fstp	[esp+1A8h+var_1A8]
		call	_sin
		add	esp, 8
		fdiv	[ebp+var_8C]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_acos
		add	esp, 8
		fstp	[ebp+var_9C]
		fld	[ebp+arg_8]
		fdiv	ds:__real@4000000000000000
		fadd	[ebp+arg_10]
		fstp	[ebp+var_AC]
		sub	esp, 8
		fld	[ebp+var_AC]
		fstp	[esp+1A8h+var_1A8]
		call	_sin
		fld	[ebp+var_9C]
		fstp	[esp+1A8h+var_1A8]
		fstp	[ebp+var_194]
		call	_sin
		add	esp, 8
		fdivr	[ebp+var_194]
		sub	esp, 8
		fstp	[esp+1A8h+var_1A8]
		call	_asin
		add	esp, 8
		fstp	[ebp+var_BC]
		fld	ds:__real@406e000000000000
		fmul	[ebp+var_BC]
		fld	ds:__real@4066800000000000
		fdiv	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fmulp	st(1), st
		fdiv	[ebp+var_8C]
		fmul	ds:__real@408f400000000000
		call	__ftol2_sse
		mov	[ebp+var_C8], eax
		movsx	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_362E
		mov	ecx, [ebp+var_C8]
		neg	ecx
		mov	dword ptr [ebp+var_194+4], ecx
		jmp	short loc_363A
; ---------------------------------------------------------------------------

loc_362E:				; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+21Cj
		mov	edx, [ebp+var_C8]
		mov	dword ptr [ebp+var_194+4], edx

loc_363A:				; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+22Cj
		fild	dword ptr [ebp+var_194+4]
		mov	eax, [ebp+var_8]
		fadd	qword ptr [eax]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN13
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 194h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	20h
?riseOrSet@CalendarAstronomer@icu_56@@QAENAAVCoordFunc@12@CNNN@Z endp

; ---------------------------------------------------------------------------
$LN13		dd 1			; DATA XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+249o
		dd offset $LN12
$LN12		dd 0FFFFFFE0h, 10h	; DATA XREF: .text:00003670o
		dd offset $LN11
$LN11		dd 736F70h		; DATA XREF: .text:0000367Co
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 3684h
		public __real@408f400000000000
__real@408f400000000000	dq 1000.0	; DATA XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+205r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 368Ch
		public __real@406e000000000000
__real@406e000000000000	dq 240.0	; DATA XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+1E5r
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3694h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; double __thiscall icu_56::CalendarAstronomer::eclipticObliquity(icu_56::CalendarAstronomer *__hidden this)
		public ?eclipticObliquity@CalendarAstronomer@icu_56@@AAENXZ
?eclipticObliquity@CalendarAstronomer@icu_56@@AAENXZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+26p

var_100		= qword	ptr -100h
var_EC		= byte ptr -0ECh
var_28		= qword	ptr -28h
var_18		= qword	ptr -18h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0ECh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_EC]
		mov	ecx, 3Bh ; ';'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		sub	esp, 8
		fld	qword ptr [eax+58h]
		fstp	[esp+100h+var_100] ; double
		call	?isINVALID@@YACN@Z ; isINVALID(double)
		add	esp, 8
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_373B
		fld	ds:__real@4142b42c80000000
		fstp	[ebp+var_18]
		mov	ecx, [ebp+var_8] ; this
		call	?getJulianDay@CalendarAstronomer@icu_56@@QAENXZ	; icu_56::CalendarAstronomer::getJulianDay(void)
		fsub	[ebp+var_18]
		fdiv	ds:__real@40e1d5a000000000
		fstp	[ebp+var_28]
		fld	ds:__real@3f8aa1edb45c4be9
		fmul	[ebp+var_28]
		fsubr	ds:__real@4037707570c564f9
		fld	ds:__real@3e865e9f80f29211
		fmul	[ebp+var_28]
		fmul	[ebp+var_28]
		fsubp	st(1), st
		fld	ds:__real@3ea0ded40694ce29
		fmul	[ebp+var_28]
		fmul	[ebp+var_28]
		fmul	[ebp+var_28]
		faddp	st(1), st
		mov	eax, [ebp+var_8]
		fstp	qword ptr [eax+58h]
		fld	ds:?PI@CalendarAstronomer@icu_56@@2NB ;	double const icu_56::CalendarAstronomer::PI
		fdiv	ds:__real@4066800000000000
		mov	eax, [ebp+var_8]
		fmul	qword ptr [eax+58h]
		mov	ecx, [ebp+var_8]
		fstp	qword ptr [ecx+58h]

loc_373B:				; CODE XREF: icu_56::CalendarAstronomer::eclipticObliquity(void)+3Cj
		mov	eax, [ebp+var_8]
		fld	qword ptr [eax+58h]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0ECh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?eclipticObliquity@CalendarAstronomer@icu_56@@AAENXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 3758h
		public __real@3ea0ded40694ce29
__real@3ea0ded40694ce29	dq 5.027777777777778e-7
					; DATA XREF: icu_56::CalendarAstronomer::eclipticObliquity(void)+78r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 3760h
		public __real@3e865e9f80f29211
__real@3e865e9f80f29211	dq 1.666666666666667e-7
					; DATA XREF: icu_56::CalendarAstronomer::eclipticObliquity(void)+6Ar
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 3768h
		public __real@4037707570c564f9
__real@4037707570c564f9	dq 23.439292	; DATA XREF: icu_56::CalendarAstronomer::eclipticObliquity(void)+64r
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 3770h
		public __real@3f8aa1edb45c4be9
__real@3f8aa1edb45c4be9	dq 0.01300416666666667
					; DATA XREF: icu_56::CalendarAstronomer::eclipticObliquity(void)+5Br
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3778h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::CalendarAstronomer::clearCache(icu_56::CalendarAstronomer *__hidden this)
		public ?clearCache@CalendarAstronomer@icu_56@@AAEXXZ
?clearCache@CalendarAstronomer@icu_56@@AAEXXZ proc near
					; CODE XREF: icu_56::CalendarAstronomer::CalendarAstronomer(void)+6Dp
					; icu_56::CalendarAstronomer::CalendarAstronomer(double)+6Bp ...

var_DC		= byte ptr -0DCh
var_18		= qword	ptr -18h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		call	_uprv_getNaN_56
		fstp	[ebp+var_18]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+20h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+28h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+30h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+38h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+40h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+48h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+50h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+58h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+68h]
		mov	eax, [ebp+var_8]
		fld	[ebp+var_18]
		fstp	qword ptr [eax+60h]
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+80h], 0
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?clearCache@CalendarAstronomer@icu_56@@AAEXXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 381Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString __thiscall icu_56::CalendarAstronomer::Ecliptic::toString(void)const
		public ?toString@Ecliptic@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ
?toString@Ecliptic@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ proc near

var_D8		= byte ptr -0D8h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_D4], 0
		mov	esi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_D4]
		or	eax, 1
		mov	[ebp+var_D4], eax
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?toString@Ecliptic@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3884h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString __thiscall icu_56::CalendarAstronomer::Equatorial::toString(void)const
		public ?toString@Equatorial@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ
?toString@Equatorial@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ proc near

var_D8		= byte ptr -0D8h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_D4], 0
		mov	esi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_D4]
		or	eax, 1
		mov	[ebp+var_D4], eax
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?toString@Equatorial@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 38ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UnicodeString __thiscall icu_56::CalendarAstronomer::Horizon::toString(void)const
		public ?toString@Horizon@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ
?toString@Horizon@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ proc near

var_D8		= byte ptr -0D8h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_D4], 0
		mov	esi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_D4]
		or	eax, 1
		mov	[ebp+var_D4], eax
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?toString@Horizon@CalendarAstronomer@icu_56@@QBE?AVUnicodeString@3@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3954h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::CalendarCache::createCache(struct icu_56::CalendarCache **, enum	UErrorCode *)
		public ?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z
?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+54p
					; icu_56::CalendarCache::put(icu_56::CalendarCache * *,int,int,UErrorCode &)+52p

var_100		= dword	ptr -100h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0F4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_100]
		mov	ecx, 3Dh ; '='
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		push	offset _calendar_astro_cleanup
		push	7
		call	_ucln_i18n_registerCleanup_56
		add	esp, 8
		cmp	[ebp+arg_0], 0
		jnz	short loc_39B4
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7
		jmp	loc_3A8C
; ---------------------------------------------------------------------------

loc_39B4:				; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+50j
		mov	esi, esp
		push	8		; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_EC], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_EC], 0
		jz	short loc_39F7
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		push	20h ; ' '       ; int
		mov	ecx, [ebp+var_EC] ; this
		call	??0CalendarCache@icu_56@@AAE@HAAW4UErrorCode@@@Z ; icu_56::CalendarCache::CalendarCache(int,UErrorCode &)
		mov	[ebp+var_100], eax
		jmp	short loc_3A01
; ---------------------------------------------------------------------------

loc_39F7:				; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+88j
		mov	[ebp+var_100], 0

loc_3A01:				; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+A1j
		mov	ecx, [ebp+var_100]
		mov	[ebp+var_F8], ecx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+var_F8]
		mov	[edx], eax
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3A8C
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	[ebp+var_D4], ecx
		mov	edx, [ebp+var_D4]
		mov	[ebp+var_E0], edx
		cmp	[ebp+var_E0], 0
		jz	short loc_3A79
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_E0]
		mov	edx, [eax]
		mov	ecx, [ebp+var_E0]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_100], eax
		jmp	short loc_3A83
; ---------------------------------------------------------------------------

loc_3A79:				; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+FEj
		mov	[ebp+var_100], 0

loc_3A83:				; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+123j
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0

loc_3A8C:				; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+5Bj
					; icu_56::CalendarCache::createCache(icu_56::CalendarCache * *,UErrorCode &)+DEj
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 100h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 3AACh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z$0 proc	near
					; DATA XREF: .xdata$x:00003AE8o
		mov	esi, esp
		mov	eax, [ebp-0ECh]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-104h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 3AE4h
__unwindtable$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00003AF4o
		dd offset __unwindfunclet$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B10h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+D1p
					; icu_56::CalendarCache::get(icu_56::CalendarCache * *,int,UErrorCode &)+24p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B3Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_calendar_astro_cleanup	proc near	; DATA XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+3Do

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	al, 1
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_calendar_astro_cleanup	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B64h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl icu_56::CalendarCache::get(struct	icu_56::CalendarCache **, int, enum UErrorCode *)
		public ?get@CalendarCache@icu_56@@SAHPAPAV12@HAAW4UErrorCode@@@Z
?get@CalendarCache@icu_56@@SAHPAPAV12@HAAW4UErrorCode@@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3B9B
		xor	eax, eax
		jmp	short loc_3C0E
; ---------------------------------------------------------------------------

loc_3B9B:				; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+31j
		push	offset _ccLock
		call	_umtx_lock_56
		add	esp, 4
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax], 0
		jnz	short loc_3BE6
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::CalendarCache **
		call	?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z ; icu_56::CalendarCache::createCache(icu_56::CalendarCache * *,UErrorCode &)
		add	esp, 8
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3BE6
		push	offset _ccLock
		call	_umtx_unlock_56
		add	esp, 4
		xor	eax, eax
		jmp	short loc_3C0E
; ---------------------------------------------------------------------------

loc_3BE6:				; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+4Aj
					; icu_56::CalendarCache::get(icu_56::CalendarCache * *,int,UErrorCode &)+6Fj
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	eax, [edx+4]
		push	eax
		call	_uhash_igeti_56
		add	esp, 8
		mov	[ebp+var_8], eax
		push	offset _ccLock
		call	_umtx_unlock_56
		add	esp, 4
		mov	eax, [ebp+var_8]

loc_3C0E:				; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+35j
					; icu_56::CalendarCache::get(icu_56::CalendarCache * *,int,UErrorCode &)+80j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?get@CalendarCache@icu_56@@SAHPAPAV12@HAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3C24h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::CalendarCache::put(struct icu_56::CalendarCache **, int,	int, enum UErrorCode *)
		public ?put@CalendarCache@icu_56@@SAXPAPAV12@HHAAW4UErrorCode@@@Z
?put@CalendarCache@icu_56@@SAXPAPAV12@HHAAW4UErrorCode@@@Z proc	near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3C59
		jmp	short loc_3CCC
; ---------------------------------------------------------------------------

loc_3C59:				; CODE XREF: icu_56::CalendarCache::put(icu_56::CalendarCache *	*,int,int,UErrorCode &)+31j
		push	offset _ccLock
		call	_umtx_lock_56
		add	esp, 4
		mov	eax, [ebp+arg_0]
		cmp	dword ptr [eax], 0
		jnz	short loc_3CA2
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_0]
		push	ecx		; struct icu_56::CalendarCache **
		call	?createCache@CalendarCache@icu_56@@CAXPAPAV12@AAW4UErrorCode@@@Z ; icu_56::CalendarCache::createCache(icu_56::CalendarCache * *,UErrorCode &)
		add	esp, 8
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_3CA2
		push	offset _ccLock
		call	_umtx_unlock_56
		add	esp, 4
		jmp	short loc_3CCC
; ---------------------------------------------------------------------------

loc_3CA2:				; CODE XREF: icu_56::CalendarCache::put(icu_56::CalendarCache *	*,int,int,UErrorCode &)+48j
					; icu_56::CalendarCache::put(icu_56::CalendarCache * *,int,int,UErrorCode &)+6Dj
		mov	eax, [ebp+arg_C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ecx+4]
		push	edx
		call	_uhash_iputi_56
		add	esp, 10h
		push	offset _ccLock
		call	_umtx_unlock_56
		add	esp, 4

loc_3CCC:				; CODE XREF: icu_56::CalendarCache::put(icu_56::CalendarCache *	*,int,int,UErrorCode &)+33j
					; icu_56::CalendarCache::put(icu_56::CalendarCache * *,int,int,UErrorCode &)+7Cj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?put@CalendarCache@icu_56@@SAXPAPAV12@HHAAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3CE0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarCache::CalendarCache(icu_56::CalendarCache *this, int, enum	UErrorCode *)
		public ??0CalendarCache@icu_56@@AAE@HAAW4UErrorCode@@@Z
??0CalendarCache@icu_56@@AAE@HAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+96p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CalendarCache@icu_56@@6B@ ;	const icu_56::CalendarCache::`vftable'
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	0
		push	offset _uhash_compareLong_56
		push	offset _uhash_hashLong_56
		call	_uhash_openSize_56
		add	esp, 14h
		mov	edx, [ebp+var_8]
		mov	[edx+4], eax
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0CalendarCache@icu_56@@AAE@HAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3D48h
		dd offset ??_R4CalendarCache@icu_56@@6B@ ; const icu_56::CalendarCache::`RTTI Complete Object Locator'
		public ??_7CalendarCache@icu_56@@6B@
; const	icu_56::CalendarCache::`vftable'
??_7CalendarCache@icu_56@@6B@ dd offset	??_ECalendarCache@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::CalendarCache::CalendarCache(int,UErrorCode &)+26o
					; icu_56::CalendarCache::~CalendarCache(void)+26o
_rdata		ends			; icu_56::CalendarCache::`vector deleting destructor'(uint)

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3D50h
		public ??_R4CalendarCache@icu_56@@6B@
; const	icu_56::CalendarCache::`RTTI Complete Object Locator'
??_R4CalendarCache@icu_56@@6B@ dd 3 dup(0) ; DATA XREF:	.rdata:00003D48o
		dd offset ??_R0?AVCalendarCache@icu_56@@@8 ; icu_56::CalendarCache `RTTI Type Descriptor'
		dd offset ??_R3CalendarCache@icu_56@@8 ; icu_56::CalendarCache::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 3D64h
		public ??_R0?AVCalendarCache@icu_56@@@8
; class	icu_56::CalendarCache `RTTI Type Descriptor'
??_R0?AVCalendarCache@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00003D5Co
					; .rdata$r:icu_56::CalendarCache::`RTTI	Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avcalendarca	db '.?AVCalendarCache@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3D88h
		public ??_R3CalendarCache@icu_56@@8
; icu_56::CalendarCache::`RTTI Class Hierarchy Descriptor'
??_R3CalendarCache@icu_56@@8 dd	2 dup(0) ; DATA	XREF: .rdata$r:00003D60o
					; .rdata$r:00003DBCo
		dd 2
		dd offset ??_R2CalendarCache@icu_56@@8 ; icu_56::CalendarCache::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3D98h
		public ??_R2CalendarCache@icu_56@@8
; icu_56::CalendarCache::`RTTI Base Class Array'
??_R2CalendarCache@icu_56@@8 dd	offset ??_R1A@?0A@EA@CalendarCache@icu_56@@8
					; DATA XREF: .rdata$r:00003D94o
					; icu_56::CalendarCache::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 3DA4h
		public ??_R1A@?0A@EA@CalendarCache@icu_56@@8
; icu_56::CalendarCache::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@CalendarCache@icu_56@@8 dd offset	??_R0?AVCalendarCache@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::CalendarCache::`RTTI Base	Class Array'o
					; icu_56::CalendarCache	`RTTI Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ?_Rank@?$_Arithmetic_traits@N@std@@2HB ; int const std::_Arithmetic_traits<double>::_Rank
		dd offset ??_R3CalendarCache@icu_56@@8 ; icu_56::CalendarCache::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3DC0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::CalendarCache::`scalar deleting destructor'(unsigned int)
		public ??_GCalendarCache@icu_56@@UAEPAXI@Z
??_GCalendarCache@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1CalendarCache@icu_56@@UAE@XZ	; icu_56::CalendarCache::~CalendarCache(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_3E09
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3E09:				; CODE XREF: icu_56::CalendarCache::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GCalendarCache@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3E24h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::CalendarCache::~CalendarCache(icu_56::CalendarCache	*__hidden this)
		public ??1CalendarCache@icu_56@@UAE@XZ
??1CalendarCache@icu_56@@UAE@XZ	proc near
					; CODE XREF: icu_56::CalendarCache::`scalar deleting destructor'(uint)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7CalendarCache@icu_56@@6B@ ;	const icu_56::CalendarCache::`vftable'
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+4], 0
		jz	short loc_3E68
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx
		call	_uhash_close_56
		add	esp, 4

loc_3E68:				; CODE XREF: icu_56::CalendarCache::~CalendarCache(void)+33j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1CalendarCache@icu_56@@UAE@XZ	endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn __fltused:near
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::CalendarAstronomer::setDate(double)+3Fp
					; icu_56::CalendarAstronomer::Ecliptic::`default constructor closure'(void)+46p ...
; __declspec(dllimport)	public:	class icu_56::UnicodeString & __thiscall icu_56::UnicodeString::operator=(class	icu_56::UnicodeString const &)
		extrn __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near
					; CODE XREF: icu_56::TimeZone::getID(icu_56::UnicodeString &)+2Fp
					; icu_56::TimeZone::setID(icu_56::UnicodeString	const &)+2Fp
					; DATA XREF: ...
; double __thiscall icu_56::Calendar::getTimeInMillis(icu_56::Calendar *__hidden this, enum UErrorCode *)
		extrn ?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::getTime(UErrorCode &)+2Ap
; void __thiscall icu_56::Calendar::setTimeInMillis(icu_56::Calendar *__hidden this, double, enum UErrorCode *)
		extrn ?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::setTime(double,UErrorCode &)+33p
; struct icu_56::Calendar *__cdecl static icu_56::Calendar::createInstance(struct icu_56::TimeZone *, const struct icu_56::Locale *, enum UErrorCode *)
		extrn ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:near
					; CODE XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+36p
; const	struct icu_56::Locale *__cdecl static icu_56::Locale::getDefault()
		extrn __imp_?getDefault@Locale@icu_56@@SAABV12@XZ:near
					; CODE XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+24p
					; DATA XREF: icu_56::Calendar::createInstance(icu_56::TimeZone *,UErrorCode &)+24r
; int __thiscall icu_56::Calendar::weekNumber(icu_56::Calendar *__hidden this, int, int, int)
		extrn ?weekNumber@Calendar@icu_56@@IAEHHHH@Z:near
					; CODE XREF: icu_56::Calendar::weekNumber(int,int)+32p
; double __cdecl static	icu_56::Calendar::getNow()
		extrn ?getNow@Calendar@icu_56@@SANXZ:near
					; CODE XREF: icu_56::CalendarAstronomer::CalendarAstronomer(void)+23p
					; icu_56::CalendarAstronomer::CalendarAstronomer(double,double)+23p
		extrn _uprv_floor_56:near
					; CODE XREF: icu_56::ClockMath::floorDivide(double,double)+2Ap
					; icu_56::CalendarAstronomer::getSiderealOffset(void)+52p
		extrn _uprv_isNaN_56:near ; CODE XREF: isINVALID(double)+27p
		extrn __ftol2_sse:near	; CODE XREF: icu_56::CalendarAstronomer::lstToUT(double)+8Ep
					; icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+20Bp
		extrn _atan2:near	; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+FCp
					; icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+147p ...
		extrn _asin:near	; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+D4p
					; icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+105p ...
		extrn _tan:near		; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+AFp
					; icu_56::trueAnomaly(double,double)+8Fp ...
		extrn _cos:near		; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+4Bp
					; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+73p	...
		extrn _sin:near		; CODE XREF: icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+37p
					; icu_56::CalendarAstronomer::eclipticToEquatorial(icu_56::CalendarAstronomer::Equatorial &,double,double)+5Fp	...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::CalendarAstronomer::eclipticToHorizon(icu_56::CalendarAstronomer::Horizon &,double)+182p
					; icu_56::CalendarAstronomer::getSunTime(double,signed char)+A8p ...
		extrn _atan:near	; CODE XREF: icu_56::trueAnomaly(double,double)+C3p
		extrn _sqrt:near	; CODE XREF: icu_56::trueAnomaly(double,double)+AFp
		extrn _uprv_fabs_56:near ; CODE	XREF: icu_56::trueAnomaly(double,double)+6Bp
					; icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc	&,double,double,double,signed char)+104p ...
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::CalendarAstronomer::AngleFunc `RTTI Type Descriptor'o
					; .data:icu_56::UMemory	`RTTI Type Descriptor'o ...
		extrn __purecall:near	; DATA XREF: .rdata:const icu_56::CalendarAstronomer::AngleFunc::`vftable'o
					; .rdata:const icu_56::CalendarAstronomer::CoordFunc::`vftable'o
; public: virtual void * __thiscall icu_56::CalendarAstronomer::AngleFunc::`scalar deleting destructor'(unsigned int)
		extrn ??_GAngleFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CalendarAstronomer::AngleFunc::`vector deleting destructor'(unsigned int)
		extrn ??_EAngleFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z:near ;	weak
					; DATA XREF: .rdata:00001BACo
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::CalendarAstronomer::AngleFunc::`scalar deleting destructor'(uint)+39p
					; icu_56::SunTimeAngleFunc::`scalar deleting destructor'(uint)+39p ...
; public: virtual void * __thiscall icu_56::SunTimeAngleFunc::`scalar deleting destructor'(unsigned int)
		extrn ??_GSunTimeAngleFunc@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::SunTimeAngleFunc::`vector deleting destructor'(unsigned int)
		extrn ??_ESunTimeAngleFunc@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00001D54o
		extrn ___security_cookie:near
					; DATA XREF: icu_56::CalendarAstronomer::getSunTime(double,signed char)+2Er
					; icu_56::CalendarAstronomer::getSunRiseSet(signed char)+2Er ...
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z+19j
					; __ehhandler$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z+19j ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$?getSunTime@CalendarAstronomer@icu_56@@QAENNC@Z+Fp
					; __ehhandler$?getSunRiseSet@CalendarAstronomer@icu_56@@QAENC@Z+Fp ...
; public: virtual void * __thiscall icu_56::CalendarAstronomer::CoordFunc::`scalar deleting destructor'(unsigned int)
		extrn ??_GCoordFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CalendarAstronomer::CoordFunc::`vector deleting destructor'(unsigned int)
		extrn ??_ECoordFunc@CalendarAstronomer@icu_56@@UAEPAXI@Z:near ;	weak
					; DATA XREF: .rdata:00002080o
; public: virtual void * __thiscall icu_56::RiseSetCoordFunc::`scalar deleting destructor'(unsigned int)
		extrn ??_GRiseSetCoordFunc@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::RiseSetCoordFunc::`vector deleting destructor'(unsigned int)
		extrn ??_ERiseSetCoordFunc@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:000021B8o
; public: virtual void * __thiscall icu_56::MoonTimeAngleFunc::`scalar deleting	destructor'(unsigned int)
		extrn ??_GMoonTimeAngleFunc@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::MoonTimeAngleFunc::`vector deleting	destructor'(unsigned int)
		extrn ??_EMoonTimeAngleFunc@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:00002B68o
; public: virtual void * __thiscall icu_56::MoonRiseSetCoordFunc::`scalar deleting destructor'(unsigned int)
		extrn ??_GMoonRiseSetCoordFunc@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::MoonRiseSetCoordFunc::`vector deleting destructor'(unsigned int)
		extrn ??_EMoonRiseSetCoordFunc@icu_56@@UAEPAXI@Z:near ;	weak
					; DATA XREF: .rdata:00002EBCo
		extrn _uprv_ceil_56:near
					; CODE XREF: icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc &,double,double,double,signed char)+B0p
					; icu_56::CalendarAstronomer::timeOfAngle(icu_56::CalendarAstronomer::AngleFunc	&,double,double,double,signed char)+171p ...
		extrn _acos:near	; CODE XREF: icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+A3p
					; icu_56::CalendarAstronomer::riseOrSet(icu_56::CalendarAstronomer::CoordFunc &,signed char,double,double,double)+183p
		extrn _uprv_getNaN_56:near
					; CODE XREF: icu_56::CalendarAstronomer::clearCache(void)+23p
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near
					; CODE XREF: icu_56::CalendarAstronomer::Ecliptic::toString(void)+32p
					; icu_56::CalendarAstronomer::Equatorial::toString(void)+32p ...
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+64p
					; DATA XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+64r
		extrn _ucln_i18n_registerCleanup_56:near
					; CODE XREF: icu_56::CalendarCache::createCache(icu_56::CalendarCache *	*,UErrorCode &)+44p
		extrn _uhash_igeti_56:near
					; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+8Fp
		extrn _umtx_unlock_56:near
					; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+76p
					; icu_56::CalendarCache::get(icu_56::CalendarCache * *,int,UErrorCode &)+9Fp ...
		extrn _umtx_lock_56:near
					; CODE XREF: icu_56::CalendarCache::get(icu_56::CalendarCache *	*,int,UErrorCode &)+3Cp
					; icu_56::CalendarCache::put(icu_56::CalendarCache * *,int,int,UErrorCode &)+3Ap
		extrn _uhash_iputi_56:near
					; CODE XREF: icu_56::CalendarCache::put(icu_56::CalendarCache *	*,int,int,UErrorCode &)+93p
		extrn _uhash_openSize_56:near
					; CODE XREF: icu_56::CalendarCache::CalendarCache(int,UErrorCode &)+40p
		extrn _uhash_hashLong_56:near
					; DATA XREF: icu_56::CalendarCache::CalendarCache(int,UErrorCode &)+3Bo
		extrn _uhash_compareLong_56:near
					; DATA XREF: icu_56::CalendarCache::CalendarCache(int,UErrorCode &)+36o
; public: virtual void * __thiscall icu_56::CalendarCache::`scalar deleting destructor'(unsigned int)
		extrn ??_GCalendarCache@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::CalendarCache::`vector deleting destructor'(unsigned int)
		extrn ??_ECalendarCache@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::CalendarCache::`vftable'o
		extrn _uhash_close_56:near
					; CODE XREF: icu_56::CalendarCache::~CalendarCache(void)+3Cp


		end

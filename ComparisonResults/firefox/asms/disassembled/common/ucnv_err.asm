;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	2414FF73D60ACB2E72297578327EE056
; Input	CRC32 :	89ADC8FE

; File Name   :	D:\compspace\objfiles\firefox\common\ucnv_err.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"
;
; Exported entry
;

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_FROM_U_CALLBACK_STOP_56
_UCNV_FROM_U_CALLBACK_STOP_56 proc near

var_C0		= byte ptr -0C0h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_14], 0
		jnz	loc_209
		cmp	[ebp+arg_10], 0ADh ; '­'
		jz	loc_200
		cmp	[ebp+arg_10], 34Fh
		jz	loc_200
		cmp	[ebp+arg_10], 61Ch
		jz	loc_200
		cmp	[ebp+arg_10], 115Fh
		jz	loc_200
		cmp	[ebp+arg_10], 1160h
		jz	loc_200
		cmp	[ebp+arg_10], 17B4h
		jl	short loc_7F
		cmp	[ebp+arg_10], 17B5h
		jle	loc_200

loc_7F:					; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+70j
		cmp	[ebp+arg_10], 180Bh
		jl	short loc_95
		cmp	[ebp+arg_10], 180Eh
		jle	loc_200

loc_95:					; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+86j
		cmp	[ebp+arg_10], 200Bh
		jl	short loc_AB
		cmp	[ebp+arg_10], 200Fh
		jle	loc_200

loc_AB:					; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+9Cj
		cmp	[ebp+arg_10], 202Ah
		jl	short loc_C1
		cmp	[ebp+arg_10], 202Eh
		jle	loc_200

loc_C1:					; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+B2j
		cmp	[ebp+arg_10], 2060h
		jz	loc_200
		cmp	[ebp+arg_10], 2066h
		jl	short loc_E4
		cmp	[ebp+arg_10], 2069h
		jle	loc_200

loc_E4:					; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+D5j
		cmp	[ebp+arg_10], 2061h
		jl	short loc_FA
		cmp	[ebp+arg_10], 2064h
		jle	loc_200

loc_FA:					; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+EBj
		cmp	[ebp+arg_10], 206Ah
		jl	short loc_110
		cmp	[ebp+arg_10], 206Fh
		jle	loc_200

loc_110:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+101j
		cmp	[ebp+arg_10], 3164h
		jz	loc_200
		cmp	[ebp+arg_10], 0FE00h
		jl	short loc_133
		cmp	[ebp+arg_10], 0FE0Fh
		jle	loc_200

loc_133:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+124j
		cmp	[ebp+arg_10], 0FEFFh
		jz	loc_200
		cmp	[ebp+arg_10], 0FFA0h
		jz	loc_200
		cmp	[ebp+arg_10], 1BCA0h
		jl	short loc_163
		cmp	[ebp+arg_10], 1BCA3h
		jle	loc_200

loc_163:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+154j
		cmp	[ebp+arg_10], 1D173h
		jl	short loc_179
		cmp	[ebp+arg_10], 1D17Ah
		jle	loc_200

loc_179:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+16Aj
		cmp	[ebp+arg_10], 0E0001h
		jz	short loc_200
		cmp	[ebp+arg_10], 0E0020h
		jl	short loc_194
		cmp	[ebp+arg_10], 0E007Fh
		jle	short loc_200

loc_194:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+189j
		cmp	[ebp+arg_10], 0E0100h
		jl	short loc_1A6
		cmp	[ebp+arg_10], 0E01EFh
		jle	short loc_200

loc_1A6:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+19Bj
		cmp	[ebp+arg_10], 2065h
		jz	short loc_200
		cmp	[ebp+arg_10], 0FFF0h
		jl	short loc_1C1
		cmp	[ebp+arg_10], 0FFF8h
		jle	short loc_200

loc_1C1:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+1B6j
		cmp	[ebp+arg_10], 0E0000h
		jz	short loc_200
		cmp	[ebp+arg_10], 0E0002h
		jl	short loc_1DC
		cmp	[ebp+arg_10], 0E001Fh
		jle	short loc_200

loc_1DC:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+1D1j
		cmp	[ebp+arg_10], 0E0080h
		jl	short loc_1EE
		cmp	[ebp+arg_10], 0E00FFh
		jle	short loc_200

loc_1EE:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+1E3j
		cmp	[ebp+arg_10], 0E01F0h
		jl	short loc_209
		cmp	[ebp+arg_10], 0E0FFFh
		jg	short loc_209

loc_200:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+2Fj
					; _UCNV_FROM_U_CALLBACK_STOP_56+3Cj ...
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0

loc_209:				; CODE XREF: _UCNV_FROM_U_CALLBACK_STOP_56+22j
					; _UCNV_FROM_U_CALLBACK_STOP_56+1F5j ...
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_FROM_U_CALLBACK_STOP_56 endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 210h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 214h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 218h
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_TO_U_CALLBACK_STOP_56
_UCNV_TO_U_CALLBACK_STOP_56 proc near

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_TO_U_CALLBACK_STOP_56 endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 240h
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_FROM_U_CALLBACK_SKIP_56
_UCNV_FROM_U_CALLBACK_SKIP_56 proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_14], 2
		jg	loc_475
		cmp	[ebp+arg_14], 0
		jnz	loc_455
		cmp	[ebp+arg_10], 0ADh ; '­'
		jz	loc_44A
		cmp	[ebp+arg_10], 34Fh
		jz	loc_44A
		cmp	[ebp+arg_10], 61Ch
		jz	loc_44A
		cmp	[ebp+arg_10], 115Fh
		jz	loc_44A
		cmp	[ebp+arg_10], 1160h
		jz	loc_44A
		cmp	[ebp+arg_10], 17B4h
		jl	short loc_2C9
		cmp	[ebp+arg_10], 17B5h
		jle	loc_44A

loc_2C9:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+7Aj
		cmp	[ebp+arg_10], 180Bh
		jl	short loc_2DF
		cmp	[ebp+arg_10], 180Eh
		jle	loc_44A

loc_2DF:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+90j
		cmp	[ebp+arg_10], 200Bh
		jl	short loc_2F5
		cmp	[ebp+arg_10], 200Fh
		jle	loc_44A

loc_2F5:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+A6j
		cmp	[ebp+arg_10], 202Ah
		jl	short loc_30B
		cmp	[ebp+arg_10], 202Eh
		jle	loc_44A

loc_30B:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+BCj
		cmp	[ebp+arg_10], 2060h
		jz	loc_44A
		cmp	[ebp+arg_10], 2066h
		jl	short loc_32E
		cmp	[ebp+arg_10], 2069h
		jle	loc_44A

loc_32E:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+DFj
		cmp	[ebp+arg_10], 2061h
		jl	short loc_344
		cmp	[ebp+arg_10], 2064h
		jle	loc_44A

loc_344:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+F5j
		cmp	[ebp+arg_10], 206Ah
		jl	short loc_35A
		cmp	[ebp+arg_10], 206Fh
		jle	loc_44A

loc_35A:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+10Bj
		cmp	[ebp+arg_10], 3164h
		jz	loc_44A
		cmp	[ebp+arg_10], 0FE00h
		jl	short loc_37D
		cmp	[ebp+arg_10], 0FE0Fh
		jle	loc_44A

loc_37D:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+12Ej
		cmp	[ebp+arg_10], 0FEFFh
		jz	loc_44A
		cmp	[ebp+arg_10], 0FFA0h
		jz	loc_44A
		cmp	[ebp+arg_10], 1BCA0h
		jl	short loc_3AD
		cmp	[ebp+arg_10], 1BCA3h
		jle	loc_44A

loc_3AD:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+15Ej
		cmp	[ebp+arg_10], 1D173h
		jl	short loc_3C3
		cmp	[ebp+arg_10], 1D17Ah
		jle	loc_44A

loc_3C3:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+174j
		cmp	[ebp+arg_10], 0E0001h
		jz	short loc_44A
		cmp	[ebp+arg_10], 0E0020h
		jl	short loc_3DE
		cmp	[ebp+arg_10], 0E007Fh
		jle	short loc_44A

loc_3DE:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+193j
		cmp	[ebp+arg_10], 0E0100h
		jl	short loc_3F0
		cmp	[ebp+arg_10], 0E01EFh
		jle	short loc_44A

loc_3F0:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+1A5j
		cmp	[ebp+arg_10], 2065h
		jz	short loc_44A
		cmp	[ebp+arg_10], 0FFF0h
		jl	short loc_40B
		cmp	[ebp+arg_10], 0FFF8h
		jle	short loc_44A

loc_40B:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+1C0j
		cmp	[ebp+arg_10], 0E0000h
		jz	short loc_44A
		cmp	[ebp+arg_10], 0E0002h
		jl	short loc_426
		cmp	[ebp+arg_10], 0E001Fh
		jle	short loc_44A

loc_426:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+1DBj
		cmp	[ebp+arg_10], 0E0080h
		jl	short loc_438
		cmp	[ebp+arg_10], 0E00FFh
		jle	short loc_44A

loc_438:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+1EDj
		cmp	[ebp+arg_10], 0E01F0h
		jl	short loc_455
		cmp	[ebp+arg_10], 0E0FFFh
		jg	short loc_455

loc_44A:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+39j
					; _UCNV_FROM_U_CALLBACK_SKIP_56+46j ...
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0
		jmp	short loc_475
; ---------------------------------------------------------------------------

loc_455:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+2Cj
					; _UCNV_FROM_U_CALLBACK_SKIP_56+1FFj ...
		cmp	[ebp+arg_0], 0
		jz	short loc_46C
		mov	eax, [ebp+arg_0]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 69h ; 'i'
		jnz	short loc_475
		cmp	[ebp+arg_14], 0
		jnz	short loc_475

loc_46C:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+219j
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0

loc_475:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SKIP_56+22j
					; _UCNV_FROM_U_CALLBACK_SKIP_56+213j ...
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_FROM_U_CALLBACK_SKIP_56 endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 47Ch
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56
_UCNV_FROM_U_CALLBACK_SUBSTITUTE_56 proc near
					; DATA XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+26Co

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_14], 2
		jg	loc_6C3
		cmp	[ebp+arg_14], 0
		jnz	loc_691
		cmp	[ebp+arg_10], 0ADh ; '­'
		jz	loc_686
		cmp	[ebp+arg_10], 34Fh
		jz	loc_686
		cmp	[ebp+arg_10], 61Ch
		jz	loc_686
		cmp	[ebp+arg_10], 115Fh
		jz	loc_686
		cmp	[ebp+arg_10], 1160h
		jz	loc_686
		cmp	[ebp+arg_10], 17B4h
		jl	short loc_505
		cmp	[ebp+arg_10], 17B5h
		jle	loc_686

loc_505:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+7Aj
		cmp	[ebp+arg_10], 180Bh
		jl	short loc_51B
		cmp	[ebp+arg_10], 180Eh
		jle	loc_686

loc_51B:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+90j
		cmp	[ebp+arg_10], 200Bh
		jl	short loc_531
		cmp	[ebp+arg_10], 200Fh
		jle	loc_686

loc_531:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+A6j
		cmp	[ebp+arg_10], 202Ah
		jl	short loc_547
		cmp	[ebp+arg_10], 202Eh
		jle	loc_686

loc_547:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+BCj
		cmp	[ebp+arg_10], 2060h
		jz	loc_686
		cmp	[ebp+arg_10], 2066h
		jl	short loc_56A
		cmp	[ebp+arg_10], 2069h
		jle	loc_686

loc_56A:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+DFj
		cmp	[ebp+arg_10], 2061h
		jl	short loc_580
		cmp	[ebp+arg_10], 2064h
		jle	loc_686

loc_580:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+F5j
		cmp	[ebp+arg_10], 206Ah
		jl	short loc_596
		cmp	[ebp+arg_10], 206Fh
		jle	loc_686

loc_596:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+10Bj
		cmp	[ebp+arg_10], 3164h
		jz	loc_686
		cmp	[ebp+arg_10], 0FE00h
		jl	short loc_5B9
		cmp	[ebp+arg_10], 0FE0Fh
		jle	loc_686

loc_5B9:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+12Ej
		cmp	[ebp+arg_10], 0FEFFh
		jz	loc_686
		cmp	[ebp+arg_10], 0FFA0h
		jz	loc_686
		cmp	[ebp+arg_10], 1BCA0h
		jl	short loc_5E9
		cmp	[ebp+arg_10], 1BCA3h
		jle	loc_686

loc_5E9:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+15Ej
		cmp	[ebp+arg_10], 1D173h
		jl	short loc_5FF
		cmp	[ebp+arg_10], 1D17Ah
		jle	loc_686

loc_5FF:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+174j
		cmp	[ebp+arg_10], 0E0001h
		jz	short loc_686
		cmp	[ebp+arg_10], 0E0020h
		jl	short loc_61A
		cmp	[ebp+arg_10], 0E007Fh
		jle	short loc_686

loc_61A:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+193j
		cmp	[ebp+arg_10], 0E0100h
		jl	short loc_62C
		cmp	[ebp+arg_10], 0E01EFh
		jle	short loc_686

loc_62C:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+1A5j
		cmp	[ebp+arg_10], 2065h
		jz	short loc_686
		cmp	[ebp+arg_10], 0FFF0h
		jl	short loc_647
		cmp	[ebp+arg_10], 0FFF8h
		jle	short loc_686

loc_647:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+1C0j
		cmp	[ebp+arg_10], 0E0000h
		jz	short loc_686
		cmp	[ebp+arg_10], 0E0002h
		jl	short loc_662
		cmp	[ebp+arg_10], 0E001Fh
		jle	short loc_686

loc_662:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+1DBj
		cmp	[ebp+arg_10], 0E0080h
		jl	short loc_674
		cmp	[ebp+arg_10], 0E00FFh
		jle	short loc_686

loc_674:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+1EDj
		cmp	[ebp+arg_10], 0E01F0h
		jl	short loc_691
		cmp	[ebp+arg_10], 0E0FFFh
		jg	short loc_691

loc_686:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+39j
					; _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+46j ...
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0
		jmp	short loc_6C3
; ---------------------------------------------------------------------------

loc_691:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+2Cj
					; _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+1FFj ...
		cmp	[ebp+arg_0], 0
		jz	short loc_6A8
		mov	eax, [ebp+arg_0]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 69h ; 'i'
		jnz	short loc_6C3
		cmp	[ebp+arg_14], 0
		jnz	short loc_6C3

loc_6A8:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+219j
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_18]
		push	eax
		push	0
		mov	ecx, [ebp+arg_4]
		push	ecx
		call	_ucnv_cbFromUWriteSub_56
		add	esp, 0Ch

loc_6C3:				; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+22j
					; _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+213j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_FROM_U_CALLBACK_SUBSTITUTE_56 endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6D8h
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_FROM_U_CALLBACK_ESCAPE_56
_UCNV_FROM_U_CALLBACK_ESCAPE_56	proc near

var_170		= dword	ptr -170h
var_A8		= byte ptr -0A8h
var_9C		= dword	ptr -9Ch
var_90		= dword	ptr -90h
var_84		= dword	ptr -84h
var_78		= dword	ptr -78h
var_6C		= dword	ptr -6Ch
var_60		= dword	ptr -60h
var_54		= dword	ptr -54h
var_48		= word ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 170h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_170]
		mov	ecx, 5Ch ; '\'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	[ebp+var_54], 0
		mov	[ebp+var_60], 0
		mov	[ebp+var_6C], 0
		mov	[ebp+var_78], 0
		mov	[ebp+var_84], 0
		mov	[ebp+var_9C], 0
		cmp	[ebp+arg_14], 2
		jle	short loc_740
		jmp	loc_E99
; ---------------------------------------------------------------------------
		jmp	loc_930
; ---------------------------------------------------------------------------

loc_740:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+5Cj
		cmp	[ebp+arg_14], 0
		jnz	loc_930
		cmp	[ebp+arg_10], 0ADh ; '­'
		jz	loc_922
		cmp	[ebp+arg_10], 34Fh
		jz	loc_922
		cmp	[ebp+arg_10], 61Ch
		jz	loc_922
		cmp	[ebp+arg_10], 115Fh
		jz	loc_922
		cmp	[ebp+arg_10], 1160h
		jz	loc_922
		cmp	[ebp+arg_10], 17B4h
		jl	short loc_7A1
		cmp	[ebp+arg_10], 17B5h
		jle	loc_922

loc_7A1:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+BAj
		cmp	[ebp+arg_10], 180Bh
		jl	short loc_7B7
		cmp	[ebp+arg_10], 180Eh
		jle	loc_922

loc_7B7:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+D0j
		cmp	[ebp+arg_10], 200Bh
		jl	short loc_7CD
		cmp	[ebp+arg_10], 200Fh
		jle	loc_922

loc_7CD:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+E6j
		cmp	[ebp+arg_10], 202Ah
		jl	short loc_7E3
		cmp	[ebp+arg_10], 202Eh
		jle	loc_922

loc_7E3:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+FCj
		cmp	[ebp+arg_10], 2060h
		jz	loc_922
		cmp	[ebp+arg_10], 2066h
		jl	short loc_806
		cmp	[ebp+arg_10], 2069h
		jle	loc_922

loc_806:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+11Fj
		cmp	[ebp+arg_10], 2061h
		jl	short loc_81C
		cmp	[ebp+arg_10], 2064h
		jle	loc_922

loc_81C:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+135j
		cmp	[ebp+arg_10], 206Ah
		jl	short loc_832
		cmp	[ebp+arg_10], 206Fh
		jle	loc_922

loc_832:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+14Bj
		cmp	[ebp+arg_10], 3164h
		jz	loc_922
		cmp	[ebp+arg_10], 0FE00h
		jl	short loc_855
		cmp	[ebp+arg_10], 0FE0Fh
		jle	loc_922

loc_855:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+16Ej
		cmp	[ebp+arg_10], 0FEFFh
		jz	loc_922
		cmp	[ebp+arg_10], 0FFA0h
		jz	loc_922
		cmp	[ebp+arg_10], 1BCA0h
		jl	short loc_885
		cmp	[ebp+arg_10], 1BCA3h
		jle	loc_922

loc_885:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+19Ej
		cmp	[ebp+arg_10], 1D173h
		jl	short loc_89B
		cmp	[ebp+arg_10], 1D17Ah
		jle	loc_922

loc_89B:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+1B4j
		cmp	[ebp+arg_10], 0E0001h
		jz	short loc_922
		cmp	[ebp+arg_10], 0E0020h
		jl	short loc_8B6
		cmp	[ebp+arg_10], 0E007Fh
		jle	short loc_922

loc_8B6:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+1D3j
		cmp	[ebp+arg_10], 0E0100h
		jl	short loc_8C8
		cmp	[ebp+arg_10], 0E01EFh
		jle	short loc_922

loc_8C8:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+1E5j
		cmp	[ebp+arg_10], 2065h
		jz	short loc_922
		cmp	[ebp+arg_10], 0FFF0h
		jl	short loc_8E3
		cmp	[ebp+arg_10], 0FFF8h
		jle	short loc_922

loc_8E3:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+200j
		cmp	[ebp+arg_10], 0E0000h
		jz	short loc_922
		cmp	[ebp+arg_10], 0E0002h
		jl	short loc_8FE
		cmp	[ebp+arg_10], 0E001Fh
		jle	short loc_922

loc_8FE:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+21Bj
		cmp	[ebp+arg_10], 0E0080h
		jl	short loc_910
		cmp	[ebp+arg_10], 0E00FFh
		jle	short loc_922

loc_910:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+22Dj
		cmp	[ebp+arg_10], 0E01F0h
		jl	short loc_930
		cmp	[ebp+arg_10], 0E0FFFh
		jg	short loc_930

loc_922:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+79j
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+86j ...
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0
		jmp	loc_E99
; ---------------------------------------------------------------------------

loc_930:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+63j
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+6Cj ...
		lea	eax, [ebp+var_78]
		push	eax
		lea	ecx, [ebp+var_90]
		push	ecx
		lea	edx, [ebp+var_84]
		push	edx
		push	0
		push	offset _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax+4]
		push	ecx
		call	_ucnv_setFromUCallBack_56
		add	esp, 18h
		cmp	[ebp+var_78], 0
		jle	short loc_96B
		mov	eax, [ebp+arg_18]
		mov	ecx, [ebp+var_78]
		mov	[eax], ecx
		jmp	loc_E99
; ---------------------------------------------------------------------------

loc_96B:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+284j
		cmp	[ebp+arg_0], 0
		jnz	loc_9F5

loc_975:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+316j
		mov	eax, [ebp+var_60]
		cmp	eax, [ebp+arg_C]
		jge	short loc_9F0
		mov	eax, 25h ; '%'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 55h ; 'U'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+var_60]
		mov	ecx, [ebp+arg_8]
		mov	dx, [ecx+eax*2]
		mov	word ptr [ebp+var_170+2], dx
		mov	eax, [ebp+var_60]
		add	eax, 1
		mov	[ebp+var_60], eax
		push	4
		push	10h
		movzx	ecx, word ptr [ebp+var_170+2]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_975
; ---------------------------------------------------------------------------

loc_9F0:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+2A3j
		jmp	loc_E2D
; ---------------------------------------------------------------------------

loc_9F5:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+297j
		mov	eax, [ebp+arg_0]
		movsx	ecx, byte ptr [eax]
		mov	[ebp+var_170], ecx
		mov	edx, [ebp+var_170]
		sub	edx, 43h ; 'C'
		mov	[ebp+var_170], edx
		cmp	[ebp+var_170], 15h ; switch 22 cases
		ja	$LN3		; jumptable 00000A2A default case
		mov	eax, [ebp+var_170]
		movzx	ecx, ds:$LN49[eax]
		jmp	ds:$LN59[ecx*4]	; switch jump
; ---------------------------------------------------------------------------

$LN19:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+3D2j
					; DATA XREF: ...
		mov	eax, [ebp+var_60] ; jumptable 00000A2A case 7
		cmp	eax, [ebp+arg_C]
		jge	short loc_AAC
		mov	eax, 5Ch ; '\'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 75h ; 'u'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+var_60]
		mov	ecx, [ebp+arg_8]
		mov	dx, [ecx+eax*2]
		mov	word ptr [ebp+var_170+2], dx
		mov	eax, [ebp+var_60]
		add	eax, 1
		mov	[ebp+var_60], eax
		push	4
		push	10h
		movzx	ecx, word ptr [ebp+var_170+2]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short $LN19	; jumptable 00000A2A case 7
; ---------------------------------------------------------------------------

loc_AAC:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+35Fj
		jmp	loc_E2D
; ---------------------------------------------------------------------------

$LN17:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j
					; DATA XREF: .text:$LN59o
		mov	eax, 5Ch ; '\'  ; jumptable 00000A2A case 0
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		cmp	[ebp+arg_C], 2
		jnz	short loc_B0C
		mov	eax, 55h ; 'U'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		push	8
		push	10h
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_B4C
; ---------------------------------------------------------------------------

loc_B0C:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+3F3j
		mov	eax, 75h ; 'u'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		push	4
		push	10h
		mov	eax, [ebp+arg_8]
		movzx	ecx, word ptr [eax]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax

loc_B4C:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+432j
		jmp	loc_E2D
; ---------------------------------------------------------------------------

$LN14:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j
					; DATA XREF: .text:$LN59o
		mov	eax, 26h ; '&'  ; jumptable 00000A2A case 1
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 23h ; '#'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		cmp	[ebp+arg_C], 2
		jnz	short loc_BAC
		push	0
		push	0Ah
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_BD6
; ---------------------------------------------------------------------------

loc_BAC:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+4A9j
		push	0
		push	0Ah
		mov	eax, [ebp+arg_8]
		movzx	ecx, word ptr [eax]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax

loc_BD6:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+4D2j
		mov	eax, 3Bh ; ';'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		jmp	loc_E2D
; ---------------------------------------------------------------------------

$LN11:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j
					; DATA XREF: .text:$LN59o
		mov	eax, 26h ; '&'  ; jumptable 00000A2A case 21
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 23h ; '#'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 78h ; 'x'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		cmp	[ebp+arg_C], 2
		jnz	short loc_C62
		push	0
		push	10h
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_C8C
; ---------------------------------------------------------------------------

loc_C62:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+55Fj
		push	0
		push	10h
		mov	eax, [ebp+arg_8]
		movzx	ecx, word ptr [eax]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax

loc_C8C:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+588j
		mov	eax, 3Bh ; ';'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		jmp	loc_E2D
; ---------------------------------------------------------------------------

$LN8:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j
					; DATA XREF: .text:$LN59o
		mov	eax, 7Bh ; '{'  ; jumptable 00000A2A case 18
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 55h ; 'U'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 2Bh ; '+'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		cmp	[ebp+arg_C], 2
		jnz	short loc_D18
		push	4
		push	10h
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_D42
; ---------------------------------------------------------------------------

loc_D18:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+615j
		push	4
		push	10h
		mov	eax, [ebp+arg_8]
		movzx	ecx, word ptr [eax]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax

loc_D42:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+63Ej
		mov	eax, 7Dh ; '}'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		jmp	loc_E2D
; ---------------------------------------------------------------------------

$LN5:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j
					; DATA XREF: .text:$LN59o
		mov	eax, 5Ch ; '\'  ; jumptable 00000A2A case 16
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		push	0
		push	10h
		mov	eax, [ebp+arg_10]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		mov	eax, 20h ; ' '
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		jmp	short loc_E2D
; ---------------------------------------------------------------------------

$LN3:					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+33Fj
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+352j	...
		mov	eax, [ebp+var_60] ; jumptable 00000A2A default case
		cmp	eax, [ebp+arg_C]
		jge	short loc_E2D
		mov	eax, 25h ; '%'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 55h ; 'U'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+var_60]
		mov	ecx, [ebp+arg_8]
		mov	dx, [ecx+eax*2]
		mov	word ptr [ebp+var_170+2], dx
		mov	eax, [ebp+var_60]
		add	eax, 1
		mov	[ebp+var_60], eax
		push	4
		push	10h
		movzx	ecx, word ptr [ebp+var_170+2]
		push	ecx
		mov	edx, 20h ; ' '
		sub	edx, [ebp+var_54]
		push	edx
		mov	eax, [ebp+var_54]
		lea	ecx, [ebp+eax*2+var_48]
		push	ecx
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short $LN3	; jumptable 00000A2A default case
; ---------------------------------------------------------------------------

loc_E2D:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56:loc_9F0j
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56:loc_AACj ...
		lea	eax, [ebp+var_48]
		mov	[ebp+var_6C], eax
		mov	eax, [ebp+arg_18]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_18]
		push	eax
		push	0
		mov	ecx, [ebp+var_54]
		mov	edx, [ebp+var_6C]
		lea	eax, [edx+ecx*2]
		push	eax
		lea	ecx, [ebp+var_6C]
		push	ecx
		mov	edx, [ebp+arg_4]
		push	edx
		call	_ucnv_cbFromUWriteUChars_56
		add	esp, 14h
		lea	eax, [ebp+var_78]
		push	eax
		lea	ecx, [ebp+var_A8]
		push	ecx
		lea	edx, [ebp+var_9C]
		push	edx
		mov	eax, [ebp+var_90]
		push	eax
		mov	ecx, [ebp+var_84]
		push	ecx
		mov	edx, [ebp+arg_4]
		mov	eax, [edx+4]
		push	eax
		call	_ucnv_setFromUCallBack_56
		add	esp, 18h
		cmp	[ebp+var_78], 0
		jle	short loc_E99
		mov	eax, [ebp+arg_18]
		mov	ecx, [ebp+var_78]
		mov	[eax], ecx

loc_E99:				; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+5Ej
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+253j	...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN58
		call	@_RTC_CheckStackVars@8
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4
		add	esp, 170h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_FROM_U_CALLBACK_ESCAPE_56	endp

; ---------------------------------------------------------------------------
$LN58		dd 7			; DATA XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+7C5o
		dd offset $LN57
$LN57		dd 0FFFFFFB8h, 40h	; DATA XREF: .text:00000ECCo
		dd offset $LN50		; "valueString"
		dd 0FFFFFF94h, 4
		dd offset $LN51		; "myValueSource"
		db 88h,	0FFh
		dw 0FFFFh
		dd 4
		dd offset $LN52		; "err2"
		dd 0FFFFFF7Ch, 4
		dd offset $LN53		; "original"
		dd 0FFFFFF70h, 4
		dd offset $LN54		; "originalContext"
		dd 0FFFFFF64h, 4
		dd offset $LN55		; "ignoredCallback"
		dd 0FFFFFF58h, 4
		dd offset $LN56		; "ignoredContext"
$LN56		db 'ignoredContext',0   ; DATA XREF: .text:00000F20o
$LN55		db 'ignoredCallback',0  ; DATA XREF: .text:00000F14o
$LN54		db 'originalContext',0  ; DATA XREF: .text:00000F08o
$LN53		db 'original',0         ; DATA XREF: .text:00000EFCo
$LN52		db 'err2',0             ; DATA XREF: .text:00000EF0o
$LN51		db 'myValueSource',0    ; DATA XREF: .text:00000EE4o
$LN50		db 'valueString',0      ; DATA XREF: .text:00000ED8o
		align 4
$LN59		dd offset $LN17		; DATA XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+352r
		dd offset $LN14		; jump table for switch	statement
		dd offset $LN19
		dd offset $LN5
		dd offset $LN8
		dd offset $LN11
		dd offset $LN3
$LN49		db	0,     1,     6,     6
					; DATA XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+34Br
		db	6,     6,     6,     2 ; indirect table	for switch statement
		db	6,     6,     6,     6
		db	6,     6,     6,     6
		db	3,     6,     4,     6
		db	6,     5
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FB0h
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_TO_U_CALLBACK_SKIP_56
_UCNV_TO_U_CALLBACK_SKIP_56 proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_10], 2
		jg	short loc_FF4
		cmp	[ebp+arg_0], 0
		jz	short loc_FEB
		mov	eax, [ebp+arg_0]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 69h ; 'i'
		jnz	short loc_FF4
		cmp	[ebp+arg_10], 0
		jnz	short loc_FF4

loc_FEB:				; CODE XREF: _UCNV_TO_U_CALLBACK_SKIP_56+28j
		mov	eax, [ebp+arg_14]
		mov	dword ptr [eax], 0

loc_FF4:				; CODE XREF: _UCNV_TO_U_CALLBACK_SKIP_56+22j
					; _UCNV_TO_U_CALLBACK_SKIP_56+33j ...
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_TO_U_CALLBACK_SKIP_56 endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FFCh
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_TO_U_CALLBACK_SUBSTITUTE_56
_UCNV_TO_U_CALLBACK_SUBSTITUTE_56 proc near

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_10], 2
		jg	short loc_1052
		cmp	[ebp+arg_0], 0
		jz	short loc_1037
		mov	eax, [ebp+arg_0]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 69h ; 'i'
		jnz	short loc_1052
		cmp	[ebp+arg_10], 0
		jnz	short loc_1052

loc_1037:				; CODE XREF: _UCNV_TO_U_CALLBACK_SUBSTITUTE_56+28j
		mov	eax, [ebp+arg_14]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_14]
		push	eax
		push	0
		mov	ecx, [ebp+arg_4]
		push	ecx
		call	_ucnv_cbToUWriteSub_56
		add	esp, 0Ch

loc_1052:				; CODE XREF: _UCNV_TO_U_CALLBACK_SUBSTITUTE_56+22j
					; _UCNV_TO_U_CALLBACK_SUBSTITUTE_56+33j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_TO_U_CALLBACK_SUBSTITUTE_56 endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1068h
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _UCNV_TO_U_CALLBACK_ESCAPE_56
_UCNV_TO_U_CALLBACK_ESCAPE_56 proc near

var_128		= byte ptr -128h
var_125		= byte ptr -125h
var_60		= dword	ptr -60h
var_54		= dword	ptr -54h
var_48		= word ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 128h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_128]
		mov	ecx, 4Ah ; 'J'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	[ebp+var_54], 0
		mov	[ebp+var_60], 0
		cmp	[ebp+arg_10], 2
		jle	short loc_10A9
		jmp	loc_13C1
; ---------------------------------------------------------------------------

loc_10A9:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+3Aj
		cmp	[ebp+arg_0], 0
		jnz	short loc_112C

loc_10AF:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+BDj
		mov	eax, [ebp+var_60]
		cmp	eax, [ebp+arg_C]
		jge	short loc_1127
		mov	eax, 25h ; '%'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 58h ; 'X'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+arg_8]
		add	eax, [ebp+var_60]
		mov	cl, [eax]
		mov	[ebp+var_125], cl
		mov	edx, [ebp+var_60]
		add	edx, 1
		mov	[ebp+var_60], edx
		push	2
		push	10h
		movzx	eax, [ebp+var_125]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_10AF
; ---------------------------------------------------------------------------

loc_1127:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+4Dj
		jmp	loc_139E
; ---------------------------------------------------------------------------

loc_112C:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+45j
		mov	eax, [ebp+arg_0]
		mov	cl, [eax]
		mov	[ebp+var_128], cl
		cmp	[ebp+var_128], 43h ; 'C'
		jz	loc_12A9
		cmp	[ebp+var_128], 44h ; 'D'
		jz	short loc_115F
		cmp	[ebp+var_128], 58h ; 'X'
		jz	loc_11F9
		jmp	loc_1323
; ---------------------------------------------------------------------------

loc_115F:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+E3j
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+187j
		mov	eax, [ebp+var_60]
		cmp	eax, [ebp+arg_C]
		jge	loc_11F4
		mov	eax, 26h ; '&'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 23h ; '#'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+arg_8]
		add	eax, [ebp+var_60]
		mov	cl, [eax]
		mov	[ebp+var_125], cl
		mov	edx, [ebp+var_60]
		add	edx, 1
		mov	[ebp+var_60], edx
		push	0
		push	0Ah
		movzx	eax, [ebp+var_125]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		mov	eax, 3Bh ; ';'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		jmp	loc_115F
; ---------------------------------------------------------------------------

loc_11F4:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+FDj
		jmp	loc_139E
; ---------------------------------------------------------------------------

loc_11F9:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+ECj
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+237j
		mov	eax, [ebp+var_60]
		cmp	eax, [ebp+arg_C]
		jge	loc_12A4
		mov	eax, 26h ; '&'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 23h ; '#'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 78h ; 'x'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+arg_8]
		add	eax, [ebp+var_60]
		mov	cl, [eax]
		mov	[ebp+var_125], cl
		mov	edx, [ebp+var_60]
		add	edx, 1
		mov	[ebp+var_60], edx
		push	0
		push	10h
		movzx	eax, [ebp+var_125]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		mov	eax, 3Bh ; ';'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		jmp	loc_11F9
; ---------------------------------------------------------------------------

loc_12A4:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+197j
		jmp	loc_139E
; ---------------------------------------------------------------------------

loc_12A9:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+D6j
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+2B7j
		mov	eax, [ebp+var_60]
		cmp	eax, [ebp+arg_C]
		jge	short loc_1321
		mov	eax, 5Ch ; '\'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 78h ; 'x'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+arg_8]
		add	eax, [ebp+var_60]
		mov	cl, [eax]
		mov	[ebp+var_125], cl
		mov	edx, [ebp+var_60]
		add	edx, 1
		mov	[ebp+var_60], edx
		push	2
		push	10h
		movzx	eax, [ebp+var_125]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		add	eax, [ebp+var_54]
		mov	[ebp+var_54], eax
		jmp	short loc_12A9
; ---------------------------------------------------------------------------

loc_1321:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+247j
		jmp	short loc_139E
; ---------------------------------------------------------------------------

loc_1323:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+F2j
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+334j
		mov	eax, [ebp+var_60]
		cmp	eax, [ebp+arg_C]
		jge	short loc_139E
		mov	eax, 25h ; '%'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, 58h ; 'X'
		mov	ecx, [ebp+var_54]
		mov	[ebp+ecx*2+var_48], ax
		mov	edx, [ebp+var_54]
		add	edx, 1
		mov	[ebp+var_54], edx
		mov	eax, [ebp+arg_8]
		add	eax, [ebp+var_60]
		mov	cl, [eax]
		mov	[ebp+var_125], cl
		mov	edx, [ebp+var_60]
		add	edx, 1
		mov	[ebp+var_60], edx
		push	2
		push	10h
		movzx	eax, [ebp+var_125]
		push	eax
		mov	ecx, 20h ; ' '
		sub	ecx, [ebp+var_54]
		push	ecx
		mov	edx, [ebp+var_54]
		lea	eax, [ebp+edx*2+var_48]
		push	eax
		call	_uprv_itou_56
		add	esp, 14h
		mov	eax, [ebp+var_54]
		add	eax, 2
		mov	[ebp+var_54], eax
		jmp	short loc_1323
; ---------------------------------------------------------------------------

loc_139E:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56:loc_1127j
					; _UCNV_TO_U_CALLBACK_ESCAPE_56:loc_11F4j ...
		mov	eax, [ebp+arg_14]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_14]
		push	eax
		push	0
		mov	ecx, [ebp+var_54]
		push	ecx
		lea	edx, [ebp+var_48]
		push	edx
		mov	eax, [ebp+arg_4]
		push	eax
		call	_ucnv_cbToUWriteUChars_56
		add	esp, 14h

loc_13C1:				; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+3Cj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN24
		call	@_RTC_CheckStackVars@8
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4
		add	esp, 128h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_UCNV_TO_U_CALLBACK_ESCAPE_56 endp

; ---------------------------------------------------------------------------
$LN24		dd 1			; DATA XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+35Do
		dd offset $LN23
$LN23		dd 0FFFFFFB8h, 40h	; DATA XREF: .text:000013F4o
		dd offset $LN22		; "uniValueString"
$LN22		db 'uniValueString',0   ; DATA XREF: .text:00001400o
_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn _ucnv_cbFromUWriteSub_56:near
					; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+23Fp
		extrn __RTC_CheckEsp:near
					; CODE XREF: _UCNV_FROM_U_CALLBACK_SUBSTITUTE_56+252p
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+7E7p	...
		extrn _ucnv_cbFromUWriteUChars_56:near
					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+77Cp
		extrn _uprv_itou_56:near ; CODE	XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+308p
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+3C4p	...
		extrn _ucnv_setFromUCallBack_56:near
					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+278p
					; _UCNV_FROM_U_CALLBACK_ESCAPE_56+7ABp
		extrn ___security_cookie:near
					; DATA XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+1Er
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+1Er
		extrn @__security_check_cookie@4:near
					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+7DAp
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+372p
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: _UCNV_FROM_U_CALLBACK_ESCAPE_56+7CBp
					; _UCNV_TO_U_CALLBACK_ESCAPE_56+363p
		extrn _ucnv_cbToUWriteSub_56:near
					; CODE XREF: _UCNV_TO_U_CALLBACK_SUBSTITUTE_56+4Ep
		extrn _ucnv_cbToUWriteUChars_56:near
					; CODE XREF: _UCNV_TO_U_CALLBACK_ESCAPE_56+351p


		end

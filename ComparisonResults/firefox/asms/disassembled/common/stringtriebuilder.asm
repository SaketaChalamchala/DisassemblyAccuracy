;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1C18CF91BAAB77F6F058DB5A179D4610
; Input	CRC32 :	2B95C95B

; File Name   :	D:\compspace\objfiles\firefox\common\stringtriebuilder.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"
;
; Exported entry
;

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		public ?kMaxBranchLinearSubNodeLength@StringTrieBuilder@icu_56@@1HB
; protected: static int	const icu_56::StringTrieBuilder::kMaxBranchLinearSubNodeLength
?kMaxBranchLinearSubNodeLength@StringTrieBuilder@icu_56@@1HB dd	5
_rdata		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4
		public ?kMaxSplitBranchLevels@StringTrieBuilder@icu_56@@1HB
; protected: static int	const icu_56::StringTrieBuilder::kMaxSplitBranchLevels
?kMaxSplitBranchLevels@StringTrieBuilder@icu_56@@1HB dd	0Eh
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	operator new(unsigned int)
		public ??2@YAPAXI@Z
??2@YAPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi

loc_38:					; DATA XREF: .text:00001124o
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2@YAPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 40h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown	; DATA XREF: .rdata$r:000001A4o
					; .rdata$r:000001C0o ...
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 44h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 48h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl operator	delete(void *)
		public ??3@YAXPAX@Z
??3@YAXPAX@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	5
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3@YAXPAX@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void *__cdecl	icu_56::UMemory::operator new(unsigned int, void *)
		public ??2UMemory@icu_56@@SAPAXIPAX@Z
??2UMemory@icu_56@@SAPAXIPAX@Z proc near

var_C0		= byte ptr -0C0h
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??2UMemory@icu_56@@SAPAXIPAX@Z endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl icu_56::UMemory::operator delete(void *)
		public ??3UMemory@icu_56@@SAXPAX0@Z
??3UMemory@icu_56@@SAXPAX0@Z proc near

var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??3UMemory@icu_56@@SAXPAX0@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UMemory	& __thiscall icu_56::UMemory::operator=(class icu_56::UMemory const &)
		public ??4UMemory@icu_56@@QAEAAV01@ABV01@@Z
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::UObject::UObject(icu_56::UObject *__hidden this)
		public ??0UObject@icu_56@@QAE@XZ
??0UObject@icu_56@@QAE@XZ proc near	; CODE XREF: icu_56::StringTrieBuilder::StringTrieBuilder(void)+26p
					; icu_56::StringTrieBuilder::Node::Node(int)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7UObject@icu_56@@6B@	; const	icu_56::UObject::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
??0UObject@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 134h
		dd offset ??_R4UObject@icu_56@@6B@ ; const icu_56::UObject::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7UObject@icu_56@@6B@
; const	icu_56::UObject::`vftable'
??_7UObject@icu_56@@6B@	dd offset ??_EUObject@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::UObject::UObject(void)+26o
					; icu_56::UObject::UObject(icu_56::UObject const &)+44o
					; icu_56::UObject::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
					; DATA XREF: .data:long	`icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)'::`2'::__LINE__Varo
_rdata		ends			; icu_56::UObject::getDynamicClassID(void)

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 140h
		public ??_R4UObject@icu_56@@6B@
; const	icu_56::UObject::`RTTI Complete	Object Locator'
??_R4UObject@icu_56@@6B@ dd 3 dup(0)	; DATA XREF: .rdata:00000134o
		dd offset ??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject `RTTI Type Descriptor'
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 154h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@	; DATA XREF: .rdata$r:0000014Co
					; .rdata$r:icu_56::UObject::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		db 2 dup(0)
word_15A	dw 0			; DATA XREF: .data:long	`icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)'::`2'::__LINE__Varo
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 174h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00000150o
					; .rdata$r:000001A8o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 184h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00000180o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 190h
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Array'o
					; .rdata$r:00000494o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1ACh
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00000188o
					; .rdata$r:00000498o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1C8h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1E8h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:000001C4o
					; .rdata$r:00000218o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F8h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:000001F4o
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
byte_1FD	db 3 dup(?)		; DATA XREF: .data:long	`icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder &)'::`2'::__LINE__Varo
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 200h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 21Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::UObject::UObject(icu_56::UObject *this, const struct icu_56::UObject *)
		public ??0UObject@icu_56@@QAE@ABV01@@Z
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::StringTrieBuilder(icu_56::StringTrieBuilder const &)+2Ap

var_D0		= dword	ptr -0D0h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_0], 0
		jz	short loc_253
		mov	eax, [ebp+arg_0]
		add	eax, 4
		mov	[ebp+var_D0], eax
		jmp	short loc_25D
; ---------------------------------------------------------------------------

loc_253:				; CODE XREF: icu_56::UObject::UObject(icu_56::UObject const &)+27j
		mov	[ebp+var_D0], 0

loc_25D:				; CODE XREF: icu_56::UObject::UObject(icu_56::UObject const &)+35j
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7UObject@icu_56@@6B@	; const	icu_56::UObject::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??0UObject@icu_56@@QAE@ABV01@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 274h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::UObject	& __thiscall icu_56::UObject::operator=(class icu_56::UObject const &)
		public ??4UObject@icu_56@@QAEAAV01@ABV01@@Z
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::operator=(icu_56::StringTrieBuilder const &)+2Ap

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
??4UObject@icu_56@@QAEAAV01@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UObject::`scalar deleting destructor'(unsigned int)
		public ??_GUObject@icu_56@@UAEPAXI@Z
??_GUObject@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2E3
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_2E3:				; CODE XREF: icu_56::UObject::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUObject@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UObject::`vector deleting destructor'(unsigned int)
		public ??_EUObject@icu_56@@UAEPAXI@Z
??_EUObject@icu_56@@UAEPAXI@Z proc near	; DATA XREF: .rdata:const icu_56::UObject::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_35D
		push	offset ??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	4
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_355
		mov	eax, [ebp+var_8]
		sub	eax, 4
		push	eax		; void *
		call	??_VUMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete[](void *)
		add	esp, 4

loc_355:				; CODE XREF: icu_56::UObject::`vector deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_37C
; ---------------------------------------------------------------------------

loc_35D:				; CODE XREF: icu_56::UObject::`vector deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_379
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_379:				; CODE XREF: icu_56::UObject::`vector deleting destructor'(uint)+6Fj
		mov	eax, [ebp+var_8]

loc_37C:				; CODE XREF: icu_56::UObject::`vector deleting destructor'(uint)+5Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_EUObject@icu_56@@UAEPAXI@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 394h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::StringTrieBuilder(icu_56::StringTrieBuilder *this, const	struct icu_56::StringTrieBuilder *)
		public ??0StringTrieBuilder@icu_56@@QAE@ABV01@@Z
??0StringTrieBuilder@icu_56@@QAE@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; struct icu_56::UObject *
		mov	ecx, [ebp+var_8] ; this
		call	??0UObject@icu_56@@QAE@ABV01@@Z	; icu_56::UObject::UObject(icu_56::UObject const &)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0StringTrieBuilder@icu_56@@QAE@ABV01@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 3F4h
		dd offset ??_R4StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::`RTTI Complete Object Locator'
;
; Exported entry
;
		public ??_7StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::`vftable'
??_7StringTrieBuilder@icu_56@@6B@ dd offset ??_EStringTrieBuilder@icu_56@@MAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::StringTrieBuilder(icu_56::StringTrieBuilder const &)+32o
					; icu_56::StringTrieBuilder::StringTrieBuilder(void)+2Eo ...
					; icu_56::StringTrieBuilder::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 444h
		public ??_R4StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::`RTTI Complete Object Locator'
??_R4StringTrieBuilder@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:000003F4o
		dd offset ??_R0?AVStringTrieBuilder@icu_56@@@8 ; icu_56::StringTrieBuilder `RTTI Type Descriptor'
		dd offset ??_R3StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 458h
		public ??_R0?AVStringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder `RTTI	Type Descriptor'
??_R0?AVStringTrieBuilder@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00000450o
					; .rdata$r:icu_56::StringTrieBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avstringtrie	db '.?AVStringTrieBuilder@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 480h
		public ??_R3StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::`RTTI Class Hierarchy Descriptor'
??_R3StringTrieBuilder@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00000454o
					; .rdata$r:000004B8o
		dd 3
		dd offset ??_R2StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 490h
		public ??_R2StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::`RTTI Base	Class Array'
??_R2StringTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:0000048Co
					; icu_56::StringTrieBuilder::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 4A0h
		public ??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVStringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::`RTTI Base Class Array'o
					; icu_56::StringTrieBuilder `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 4BCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::StringTrieBuilder & __thiscall icu_56::StringTrieBuilder::operator=(class icu_56::StringTrieBuilder const &)
		public ??4StringTrieBuilder@icu_56@@QAEAAV01@ABV01@@Z
??4StringTrieBuilder@icu_56@@QAEAAV01@ABV01@@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??4UObject@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::UObject::operator=(icu_56::UObject const	&)
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx+4]
		mov	[eax+4], edx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??4StringTrieBuilder@icu_56@@QAEAAV01@ABV01@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 510h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: virtual void * __thiscall icu_56::StringTrieBuilder::`scalar deleting destructor'(unsigned int)
		public ??_GStringTrieBuilder@icu_56@@MAEPAXI@Z
??_GStringTrieBuilder@icu_56@@MAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1StringTrieBuilder@icu_56@@MAE@XZ ; icu_56::StringTrieBuilder::~StringTrieBuilder(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_54F
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_54F:				; CODE XREF: icu_56::StringTrieBuilder::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GStringTrieBuilder@icu_56@@MAEPAXI@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 568h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: virtual void * __thiscall icu_56::StringTrieBuilder::`vector deleting destructor'(unsigned int)
		public ??_EStringTrieBuilder@icu_56@@MAEPAXI@Z
??_EStringTrieBuilder@icu_56@@MAEPAXI@Z	proc near
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::`vftable'o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		and	eax, 2
		jz	short loc_5C9
		push	offset ??1StringTrieBuilder@icu_56@@MAE@XZ ; icu_56::StringTrieBuilder::~StringTrieBuilder(void)
		mov	eax, [ebp+var_8]
		mov	ecx, [eax-4]
		push	ecx
		push	8
		mov	edx, [ebp+var_8]
		push	edx
		call	??_M@YGXPAXIHP6EX0@Z@Z ; `eh vector destructor iterator'(void *,uint,int,void (*)(void *))
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_5C1
		mov	eax, [ebp+var_8]
		sub	eax, 4
		push	eax		; void *
		call	??_VUMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete[](void *)
		add	esp, 4

loc_5C1:				; CODE XREF: icu_56::StringTrieBuilder::`vector	deleting destructor'(uint)+48j
		mov	eax, [ebp+var_8]
		sub	eax, 4
		jmp	short loc_5E8
; ---------------------------------------------------------------------------

loc_5C9:				; CODE XREF: icu_56::StringTrieBuilder::`vector	deleting destructor'(uint)+29j
		mov	ecx, [ebp+var_8] ; this
		call	??1StringTrieBuilder@icu_56@@MAE@XZ ; icu_56::StringTrieBuilder::~StringTrieBuilder(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_5E5
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_5E5:				; CODE XREF: icu_56::StringTrieBuilder::`vector	deleting destructor'(uint)+6Fj
		mov	eax, [ebp+var_8]

loc_5E8:				; CODE XREF: icu_56::StringTrieBuilder::`vector	deleting destructor'(uint)+5Fj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_EStringTrieBuilder@icu_56@@MAEPAXI@Z	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 600h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::StringTrieBuilder(icu_56::StringTrieBuilder *__hidden this)
		public ??0StringTrieBuilder@icu_56@@IAE@XZ
??0StringTrieBuilder@icu_56@@IAE@XZ proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::`vftable'
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0StringTrieBuilder@icu_56@@IAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 658h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::~StringTrieBuilder(icu_56::StringTrieBuilder *__hidden this)
		public ??1StringTrieBuilder@icu_56@@MAE@XZ
??1StringTrieBuilder@icu_56@@MAE@XZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::`scalar	deleting destructor'(uint)+26p
					; icu_56::StringTrieBuilder::`vector deleting destructor'(uint)+64p
					; DATA XREF: ...

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??1StringTrieBuilder@icu_56@@MAE@XZ
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::`vftable'
		mov	[ebp+var_4], 0
		mov	ecx, [ebp+var_14] ; this
		call	?deleteCompactBuilder@StringTrieBuilder@icu_56@@IAEXXZ ; icu_56::StringTrieBuilder::deleteCompactBuilder(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14] ; this
		call	??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1StringTrieBuilder@icu_56@@MAE@XZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 6E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??1StringTrieBuilder@icu_56@@MAE@XZ$0 proc near
					; DATA XREF: .xdata$x:0000070Co
		mov	ecx, [ebp-14h]	; this
		jmp	??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
__unwindfunclet$??1StringTrieBuilder@icu_56@@MAE@XZ$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??1StringTrieBuilder@icu_56@@MAE@XZ	proc near
					; DATA XREF: icu_56::StringTrieBuilder::~StringTrieBuilder(void)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??1StringTrieBuilder@icu_56@@MAE@XZ
		jmp	___CxxFrameHandler3
__ehhandler$??1StringTrieBuilder@icu_56@@MAE@XZ	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 708h
__unwindtable$??1StringTrieBuilder@icu_56@@MAE@XZ dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00000718o
		dd offset __unwindfunclet$??1StringTrieBuilder@icu_56@@MAE@XZ$0
__ehfuncinfo$??1StringTrieBuilder@icu_56@@MAE@XZ dd 19930522h, 1
					; DATA XREF: __ehhandler$??1StringTrieBuilder@icu_56@@MAE@XZ+14o
		dd offset __unwindtable$??1StringTrieBuilder@icu_56@@MAE@XZ
		dd 5 dup(0)
		dd 1
_xdata$x	ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 734h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::createCompactBuilder(icu_56::StringTrieBuilder *this, int,	enum UErrorCode	*)
		public ?createCompactBuilder@StringTrieBuilder@icu_56@@IAEXHAAW4UErrorCode@@@Z
?createCompactBuilder@StringTrieBuilder@icu_56@@IAEXHAAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+48p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_76E
		jmp	short loc_7CD
; ---------------------------------------------------------------------------

loc_76E:				; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+36j
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	0
		push	offset _equalStringTrieNodes
		push	offset _hashStringTrieNode
		call	_uhash_openSize_56
		add	esp, 14h
		mov	edx, [ebp+var_8]
		mov	[edx+4], eax
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_7CD
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+4], 0
		jnz	short loc_7B9
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7
		jmp	short loc_7CD
; ---------------------------------------------------------------------------

loc_7B9:				; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+78j
		push	offset _uprv_deleteUObject_56
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx
		call	_uhash_setKeyDeleter_56
		add	esp, 8

loc_7CD:				; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+38j
					; icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+6Fj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?createCompactBuilder@StringTrieBuilder@icu_56@@IAEXHAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 7E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+62p
					; icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+6Ap

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 810h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_FAILURE(enum  UErrorCode)
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+29p
					; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)+48p ...

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setnle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_FAILURE@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 83Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl hashStringTrieNode(void *)
_hashStringTrieNode proc near		; DATA XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+49o

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		push	eax		; void *
		call	?hashNode@StringTrieBuilder@icu_56@@SACPBX@Z ; icu_56::StringTrieBuilder::hashNode(void	const *)
		add	esp, 4
		movsx	eax, al
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_hashStringTrieNode endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 880h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl equalStringTrieNodes(void	*, void	*)
_equalStringTrieNodes proc near		; DATA XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+44o

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		push	eax		; void *
		mov	ecx, [ebp+arg_0]
		push	ecx		; void *
		call	?equalNodes@StringTrieBuilder@icu_56@@SACPBX0@Z	; icu_56::StringTrieBuilder::equalNodes(void const *,void const	*)
		add	esp, 8
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_equalStringTrieNodes endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 8C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::deleteCompactBuilder(icu_56::StringTrieBuilder *__hidden this)
		public ?deleteCompactBuilder@StringTrieBuilder@icu_56@@IAEXXZ
?deleteCompactBuilder@StringTrieBuilder@icu_56@@IAEXXZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::~StringTrieBuilder(void)+55p
					; icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+AEp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		push	ecx
		call	_uhash_close_56
		add	esp, 4
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+4], 0
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?deleteCompactBuilder@StringTrieBuilder@icu_56@@IAEXXZ endp

_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 914h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; protected: void __thiscall icu_56::StringTrieBuilder::build(enum  UStringTrieBuildOption, int, enum  UErrorCode &)
		public ?build@StringTrieBuilder@icu_56@@IAEXW4UStringTrieBuildOption@@HAAW4UErrorCode@@@Z
?build@StringTrieBuilder@icu_56@@IAEXW4UStringTrieBuildOption@@HAAW4UErrorCode@@@Z proc	near

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		cmp	[ebp+arg_0], 0
		jnz	short loc_94F
		push	0		; int
		mov	eax, [ebp+arg_4]
		push	eax		; int
		push	0		; int
		mov	ecx, [ebp+var_8] ; this
		call	?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z ; icu_56::StringTrieBuilder::writeNode(int,int,int)
		jmp	short loc_9C7
; ---------------------------------------------------------------------------

loc_94F:				; CODE XREF: icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+27j
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_4]
		shl	ecx, 1
		push	ecx		; int
		mov	ecx, [ebp+var_8] ; this
		call	?createCompactBuilder@StringTrieBuilder@icu_56@@IAEXHAAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		push	0		; int
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		push	0		; int
		mov	ecx, [ebp+var_8] ; this
		call	?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_8]
		mov	ecx, [eax]
		push	ecx
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_9BF
		mov	esi, esp
		push	0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_9BF:				; CODE XREF: icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+77j
		mov	ecx, [ebp+var_8] ; this
		call	?deleteCompactBuilder@StringTrieBuilder@icu_56@@IAEXXZ ; icu_56::StringTrieBuilder::deleteCompactBuilder(void)

loc_9C7:				; CODE XREF: icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+39j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?build@StringTrieBuilder@icu_56@@IAEXW4UStringTrieBuildOption@@HAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 9E0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::writeNode(icu_56::StringTrieBuilder	*this, int, int, int)
		public ?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z
?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+34p
					; icu_56::StringTrieBuilder::writeNode(int,int,int)+13Ap ...

var_13C		= dword	ptr -13Ch
var_74		= dword	ptr -74h
var_68		= dword	ptr -68h
var_5C		= dword	ptr -5Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_11		= byte ptr -11h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 13Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_13C]
		mov	ecx, 4Fh ; 'O'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_11], 0
		mov	[ebp+var_20], 0
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+arg_8], eax
		jnz	short loc_A8C
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_13C], eax
		mov	ecx, [ebp+arg_0]
		add	ecx, 1
		mov	[ebp+arg_0], ecx
		mov	esi, esp
		mov	edx, [ebp+var_13C]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_0]
		cmp	eax, [ebp+arg_4]
		jnz	short loc_A88
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_20]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+40h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_CA7
; ---------------------------------------------------------------------------

loc_A88:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+85j
		mov	[ebp+var_11], 1

loc_A8C:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+4Bj
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx]
		mov	ecx, [ebp+var_8]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, ax
		mov	[ebp+var_38], eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		sub	ecx, 1
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx]
		mov	ecx, [ebp+var_8]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, ax
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_38]
		cmp	eax, [ebp+var_44]
		jnz	loc_BFA
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		sub	ecx, 1
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+14h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		push	eax		; int
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		mov	ecx, [ebp+var_8] ; this
		call	?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z ; icu_56::StringTrieBuilder::writeNode(int,int,int)
		mov	eax, [ebp+var_50]
		sub	eax, [ebp+arg_8]
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+30h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_68], eax

loc_B41:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+1D1j
		mov	eax, [ebp+var_5C]
		cmp	eax, [ebp+var_68]
		jle	short loc_BB3
		mov	eax, [ebp+var_50]
		sub	eax, [ebp+var_68]
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_5C]
		sub	eax, [ebp+var_68]
		mov	[ebp+var_5C], eax
		mov	esi, esp
		mov	eax, [ebp+var_68]
		push	eax
		mov	ecx, [ebp+var_50]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+3Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_68]
		lea	edx, [eax+ecx-1]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_B41
; ---------------------------------------------------------------------------

loc_BB3:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+167j
		mov	esi, esp
		mov	eax, [ebp+var_5C]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+3Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_5C]
		lea	edx, [eax+ecx-1]
		mov	[ebp+var_2C], edx
		jmp	loc_C84
; ---------------------------------------------------------------------------

loc_BFA:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+FDj
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+18h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_74], eax
		mov	eax, [ebp+var_74]
		push	eax		; int
		mov	ecx, [ebp+arg_8]
		push	ecx		; int
		mov	edx, [ebp+arg_4]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_8] ; this
		call	?writeBranchSubNode@StringTrieBuilder@icu_56@@IAEHHHHH@Z ; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)
		mov	eax, [ebp+var_74]
		sub	eax, 1
		mov	[ebp+var_74], eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	esi, esp
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_74], eax
		jge	short loc_C63
		mov	eax, [ebp+var_74]
		mov	[ebp+var_2C], eax
		jmp	short loc_C84
; ---------------------------------------------------------------------------

loc_C63:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+279j
		mov	esi, esp
		mov	eax, [ebp+var_74]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2C], 0

loc_C84:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+215j
					; icu_56::StringTrieBuilder::writeNode(int,int,int)+281j
		mov	esi, esp
		mov	eax, [ebp+var_2C]
		push	eax
		mov	ecx, [ebp+var_20]
		push	ecx
		movzx	edx, [ebp+var_11]
		push	edx
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_CA7:				; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+A3j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 13Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 0CC0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::writeBranchSubNode(icu_56::StringTrieBuilder *this,	int, int, int, int)
		public ?writeBranchSubNode@StringTrieBuilder@icu_56@@IAEHHHHH@Z
?writeBranchSubNode@StringTrieBuilder@icu_56@@IAEHHHHH@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::writeNode(int,int,int)+252p
					; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+C4p

var_1CC		= dword	ptr -1CCh
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_D4		= word ptr -0D4h
var_C8		= dword	ptr -0C8h
var_BC		= dword	ptr -0BCh
var_B0		= byte ptr -0B0h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_88		= dword	ptr -88h
var_7C		= dword	ptr -7Ch
var_70		= dword	ptr -70h
var_30		= word ptr -30h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 1CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_1CC]
		mov	ecx, 73h ; 's'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	[ebp+var_C], ecx
		mov	[ebp+var_7C], 0

loc_CF4:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+F2j
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+28h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+arg_C], eax
		jle	loc_DB7
		mov	eax, [ebp+arg_C]
		cdq
		sub	eax, edx
		sar	eax, 1
		mov	esi, esp
		push	eax
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+1Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_88], eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+var_88]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_7C]
		mov	[ebp+ecx*2+var_30], ax
		mov	eax, [ebp+arg_C]
		cdq
		sub	eax, edx
		sar	eax, 1
		push	eax		; int
		mov	eax, [ebp+arg_8]
		push	eax		; int
		mov	ecx, [ebp+var_88]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		mov	ecx, [ebp+var_C] ; this
		call	?writeBranchSubNode@StringTrieBuilder@icu_56@@IAEHHHHH@Z ; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)
		mov	ecx, [ebp+var_7C]
		mov	[ebp+ecx*4+var_70], eax
		mov	eax, [ebp+var_7C]
		add	eax, 1
		mov	[ebp+var_7C], eax
		mov	eax, [ebp+var_88]
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+arg_C]
		cdq
		sub	eax, edx
		sar	eax, 1
		mov	ecx, [ebp+arg_C]
		sub	ecx, eax
		mov	[ebp+arg_C], ecx
		jmp	loc_CF4
; ---------------------------------------------------------------------------

loc_DB7:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+4Dj
		mov	[ebp+var_BC], 0

loc_DC1:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+205j
		mov	eax, [ebp+var_BC]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+eax*4+var_A4], ecx
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_C8], edx
		mov	eax, [ebp+var_C8]
		mov	[ebp+var_1CC], eax
		mov	ecx, [ebp+var_C8]
		add	ecx, 1
		mov	[ebp+var_C8], ecx
		mov	esi, esp
		mov	edx, [ebp+arg_8]
		push	edx
		mov	eax, [ebp+var_1CC]
		push	eax
		mov	ecx, [ebp+var_C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_D4], ax
		mov	esi, esp
		movzx	eax, [ebp+var_D4]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+var_C8]
		push	edx
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+20h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C8], eax
		mov	eax, [ebp+var_C8]
		sub	eax, 1
		cmp	[ebp+arg_0], eax
		jnz	short loc_E87
		mov	esi, [ebp+arg_8]
		add	esi, 1
		mov	edi, esp
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+8]
		call	edx
		cmp	edi, esp
		call	__RTC_CheckEsp
		cmp	esi, eax
		jnz	short loc_E87
		mov	byte ptr [ebp+var_1CC+3], 1
		jmp	short loc_E8E
; ---------------------------------------------------------------------------

loc_E87:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+198j
					; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+1BCj
		mov	byte ptr [ebp+var_1CC+3], 0

loc_E8E:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+1C5j
		mov	eax, [ebp+var_BC]
		mov	cl, byte ptr [ebp+var_1CC+3]
		mov	[ebp+eax+var_B0], cl
		mov	eax, [ebp+var_C8]
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+var_BC]
		add	eax, 1
		mov	[ebp+var_BC], eax
		mov	ecx, [ebp+arg_C]
		sub	ecx, 1
		cmp	[ebp+var_BC], ecx
		jl	loc_DC1
		mov	eax, [ebp+var_BC]
		mov	ecx, [ebp+arg_0]
		mov	[ebp+eax*4+var_A4], ecx

loc_EDB:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+27Bj
		mov	eax, [ebp+var_BC]
		sub	eax, 1
		mov	[ebp+var_BC], eax
		mov	eax, [ebp+var_BC]
		movsx	ecx, [ebp+eax+var_B0]
		test	ecx, ecx
		jnz	short loc_F34
		mov	eax, [ebp+arg_8]
		add	eax, 1
		push	eax		; int
		mov	ecx, [ebp+var_BC]
		mov	edx, [ebp+ecx*4+var_A0]
		push	edx		; int
		mov	eax, [ebp+var_BC]
		mov	ecx, [ebp+eax*4+var_A4]
		push	ecx		; int
		mov	ecx, [ebp+var_C] ; this
		call	?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z ; icu_56::StringTrieBuilder::writeNode(int,int,int)
		mov	edx, [ebp+var_BC]
		mov	[ebp+edx*4+var_EC], eax

loc_F34:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+23Aj
		cmp	[ebp+var_BC], 0
		jg	short loc_EDB
		mov	eax, [ebp+arg_C]
		sub	eax, 1
		mov	[ebp+var_BC], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		push	eax		; int
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; int
		mov	ecx, [ebp+var_C] ; this
		call	?writeNode@StringTrieBuilder@icu_56@@IAEHHHH@Z ; icu_56::StringTrieBuilder::writeNode(int,int,int)
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, ax
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F8], eax

loc_F9E:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+3BAj
		mov	eax, [ebp+var_BC]
		sub	eax, 1
		mov	[ebp+var_BC], eax
		js	loc_107F
		mov	eax, [ebp+var_BC]
		mov	ecx, [ebp+eax*4+var_A4]
		mov	[ebp+arg_0], ecx
		mov	eax, [ebp+var_BC]
		movsx	ecx, [ebp+eax+var_B0]
		test	ecx, ecx
		jz	short loc_FF7
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_104], eax
		jmp	short loc_1010
; ---------------------------------------------------------------------------

loc_FF7:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+313j
		mov	eax, [ebp+var_BC]
		mov	ecx, [ebp+var_F8]
		sub	ecx, [ebp+eax*4+var_EC]
		mov	[ebp+var_104], ecx

loc_1010:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+335j
		mov	esi, esp
		mov	eax, [ebp+var_BC]
		movzx	ecx, [ebp+eax+var_B0]
		push	ecx
		mov	edx, [ebp+var_104]
		push	edx
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+40h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, ax
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_C]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F8], eax
		jmp	loc_F9E
; ---------------------------------------------------------------------------

loc_107F:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+2EDj
					; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+411j
		cmp	[ebp+var_7C], 0
		jle	short loc_10D3
		mov	eax, [ebp+var_7C]
		sub	eax, 1
		mov	[ebp+var_7C], eax
		mov	esi, esp
		mov	eax, [ebp+var_7C]
		mov	ecx, [ebp+eax*4+var_70]
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+48h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_7C]
		movzx	ecx, [ebp+eax*2+var_30]
		mov	esi, esp
		push	ecx
		mov	edx, [ebp+var_C]
		mov	eax, [edx]
		mov	ecx, [ebp+var_C]
		mov	edx, [eax+38h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F8], eax
		jmp	short loc_107F
; ---------------------------------------------------------------------------

loc_10D3:				; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+3C3j
		mov	eax, [ebp+var_F8]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN26
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 1CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
?writeBranchSubNode@StringTrieBuilder@icu_56@@IAEHHHHH@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN26		dd 5			; DATA XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+41Do
		dd offset $LN25
$LN25		dd 0FFFFFFD0h, 1Ch	; DATA XREF: .text:00001110o
		dd offset $LN20		; "middleUnits"
		db 90h
		db 3 dup(0FFh)
		dd offset loc_38
		dd offset $LN21		; "lessThan"
		dd 0FFFFFF5Ch, 14h
		dd offset $LN22		; "starts"
		dd 0FFFFFF50h, 4
		dd offset $LN23		; "isFinal"
		dd 0FFFFFF14h, 10h
		dd offset $LN24		; "jumpTargets"
$LN24		db 'jumpTargets',0      ; DATA XREF: .text:0000114Co
$LN23		db 'isFinal',0          ; DATA XREF: .text:00001140o
$LN22		db 'starts',0           ; DATA XREF: .text:00001134o
$LN21		db 'lessThan',0         ; DATA XREF: .text:00001128o
$LN20		db 'middleUnits',0      ; DATA XREF: .text:0000111Co
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1180h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct Node *__thiscall icu_56::StringTrieBuilder::makeNode(icu_56::StringTrieBuilder	*this, int, int, int, enum UErrorCode *)
		public ?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z
?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::build(UStringTrieBuildOption,int,UErrorCode &)+5Cp
					; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)+16Dp ...

var_190		= dword	ptr -190h
var_188		= dword	ptr -188h
var_17C		= dword	ptr -17Ch
var_170		= dword	ptr -170h
var_164		= dword	ptr -164h
var_98		= dword	ptr -98h
var_8C		= dword	ptr -8Ch
var_80		= dword	ptr -80h
var_74		= dword	ptr -74h
var_68		= dword	ptr -68h
var_5C		= dword	ptr -5Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_1D		= byte ptr -1Dh
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 184h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_190]
		mov	ecx, 61h ; 'a'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_11DE
		xor	eax, eax
		jmp	loc_1510
; ---------------------------------------------------------------------------

loc_11DE:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+55j
		mov	[ebp+var_1D], 0
		mov	[ebp+var_2C], 0
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+arg_8], eax
		jnz	short loc_125B
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_190], eax
		mov	ecx, [ebp+arg_0]
		add	ecx, 1
		mov	[ebp+arg_0], ecx
		mov	esi, esp
		mov	edx, [ebp+var_190]
		push	edx
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_0]
		cmp	eax, [ebp+arg_4]
		jnz	short loc_1257
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_2C]
		push	ecx		; int
		mov	ecx, [ebp+var_14] ; this
		call	?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)
		jmp	loc_1510
; ---------------------------------------------------------------------------

loc_1257:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+C0j
		mov	[ebp+var_1D], 1

loc_125B:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+86j
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_14]
		mov	eax, [edx]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, ax
		mov	[ebp+var_44], eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		sub	ecx, 1
		push	ecx
		mov	edx, [ebp+var_14]
		mov	eax, [edx]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, ax
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_44]
		cmp	eax, [ebp+var_50]
		jnz	loc_139D
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		sub	ecx, 1
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+14h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_5C]
		push	ecx		; int
		mov	edx, [ebp+arg_4]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_14] ; this
		call	?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)
		mov	[ebp+var_68], eax
		mov	eax, [ebp+var_5C]
		sub	eax, [ebp+arg_8]
		mov	[ebp+var_74], eax
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+30h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_80], eax

loc_1317:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+1EDj
		mov	eax, [ebp+var_74]
		cmp	eax, [ebp+var_80]
		jle	short loc_136F
		mov	eax, [ebp+var_5C]
		sub	eax, [ebp+var_80]
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_74]
		sub	eax, [ebp+var_80]
		mov	[ebp+var_74], eax
		mov	esi, esp
		mov	eax, [ebp+var_68]
		push	eax
		mov	ecx, [ebp+var_80]
		push	ecx
		mov	edx, [ebp+var_5C]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+34h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_38], eax
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_38]
		push	ecx		; struct Node *
		mov	ecx, [ebp+var_14] ; this
		call	?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)
		mov	[ebp+var_68], eax
		jmp	short loc_1317
; ---------------------------------------------------------------------------

loc_136F:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+19Dj
		mov	esi, esp
		mov	eax, [ebp+var_68]
		push	eax
		mov	ecx, [ebp+var_74]
		push	ecx
		mov	edx, [ebp+arg_8]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+34h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_38], eax
		jmp	loc_1451
; ---------------------------------------------------------------------------

loc_139D:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+12Cj
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+18h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_8C], eax
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_8C]
		push	ecx		; int
		mov	edx, [ebp+arg_8]
		push	edx		; int
		mov	eax, [ebp+arg_4]
		push	eax		; int
		mov	ecx, [ebp+arg_0]
		push	ecx		; int
		mov	ecx, [ebp+var_14] ; this
		call	?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z ; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)
		mov	[ebp+var_98], eax
		push	1Ch		; unsigned int
		call	??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator	new(uint)
		add	esp, 4
		mov	[ebp+var_17C], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_17C], 0
		jz	short loc_142B
		mov	eax, [ebp+var_98]
		push	eax		; struct Node *
		mov	ecx, [ebp+var_8C]
		push	ecx		; int
		mov	ecx, [ebp+var_17C] ; this
		call	??0BranchHeadNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z ; icu_56::StringTrieBuilder::BranchHeadNode::BranchHeadNode(int,icu_56::StringTrieBuilder::Node *)
		mov	[ebp+var_190], eax
		jmp	short loc_1435
; ---------------------------------------------------------------------------

loc_142B:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+288j
		mov	[ebp+var_190], 0

loc_1435:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+2A9j
		mov	edx, [ebp+var_190]
		mov	[ebp+var_188], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_188]
		mov	[ebp+var_38], eax

loc_1451:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+218j
		movsx	eax, [ebp+var_1D]
		test	eax, eax
		jz	loc_1500
		cmp	[ebp+var_38], 0
		jz	loc_1500
		mov	eax, [ebp+var_14]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_14]
		mov	eax, [edx+24h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_1492
		mov	eax, [ebp+var_2C]
		push	eax		; int
		mov	ecx, [ebp+var_38] ; this
		call	?setValue@ValueNode@StringTrieBuilder@icu_56@@QAEXH@Z ;	icu_56::StringTrieBuilder::ValueNode::setValue(int)
		jmp	short loc_1500
; ---------------------------------------------------------------------------

loc_1492:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+302j
		push	18h		; unsigned int
		call	??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator	new(uint)
		add	esp, 4
		mov	[ebp+var_164], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_164], 0
		jz	short loc_14DA
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_38]
		push	ecx		; struct Node *
		mov	ecx, [ebp+var_14] ; this
		call	?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)
		push	eax		; struct Node *
		mov	edx, [ebp+var_2C]
		push	edx		; int
		mov	ecx, [ebp+var_164] ; this
		call	??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z ;	icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(int,icu_56::StringTrieBuilder::Node *)
		mov	[ebp+var_190], eax
		jmp	short loc_14E4
; ---------------------------------------------------------------------------

loc_14DA:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+330j
		mov	[ebp+var_190], 0

loc_14E4:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+358j
		mov	eax, [ebp+var_190]
		mov	[ebp+var_170], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_170]
		mov	[ebp+var_38], ecx

loc_1500:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+2D7j
					; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)+2E1j ...
		mov	eax, [ebp+arg_C]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_38]
		push	ecx		; struct Node *
		mov	ecx, [ebp+var_14] ; this
		call	?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)

loc_1510:				; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+59j
					; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)+D2j
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 190h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	10h
?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1534h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00001574o
		mov	eax, [ebp-17Ch]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		pop	ecx
		retn
__unwindfunclet$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:0000157Co
		mov	eax, [ebp-164h]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		pop	ecx
		retn
__unwindfunclet$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-194h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1570h
__unwindtable$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001588o
		dd offset __unwindfunclet$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z$1
__ehfuncinfo$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z dd	19930522h, 2
					; DATA XREF: __ehhandler$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 15A4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::ValueNode::setValue(icu_56::StringTrieBuilder::ValueNode *this, int)
		public ?setValue@ValueNode@StringTrieBuilder@icu_56@@QAEXH@Z
?setValue@ValueNode@StringTrieBuilder@icu_56@@QAEXH@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+30Bp
					; icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(int,icu_56::StringTrieBuilder::Node *)+7Cp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Ch], 1
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+10h], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		imul	ecx, 25h
		add	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_8]
		mov	[edx+4], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?setValue@ValueNode@StringTrieBuilder@icu_56@@QAEXH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 15F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(icu_56::StringTrieBuilder::IntermediateValueNode *this, int, struct	Node *)
		public ??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z
??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+34Dp

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_4]
		push	eax
		call	?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z ;	icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const	*)
		add	esp, 4
		add	eax, 4EEEEEAh
		push	eax		; int
		mov	ecx, [ebp+var_14] ; this
		call	??0ValueNode@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::ValueNode::ValueNode(int)
		mov	[ebp+var_4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], offset	??_7IntermediateValueNode@StringTrieBuilder@icu_56@@6B@	; const	icu_56::StringTrieBuilder::IntermediateValueNode::`vftable'
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_4]
		mov	[eax+14h], ecx
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_14] ; this
		call	?setValue@ValueNode@StringTrieBuilder@icu_56@@QAEXH@Z ;	icu_56::StringTrieBuilder::ValueNode::setValue(int)
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 16A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z$0	proc near
					; DATA XREF: .xdata$x:000016E4o
		mov	ecx, [ebp-14h]	; this
		jmp	??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ ;	icu_56::StringTrieBuilder::ValueNode::~ValueNode(void)
__unwindfunclet$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z$0	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z proc near
					; DATA XREF: icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(int,icu_56::StringTrieBuilder::Node *)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-0DCh]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 16C8h
		dd offset ??_R4IntermediateValueNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Complete Object Locator'
		public ??_7IntermediateValueNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::IntermediateValueNode::`vftable'
??_7IntermediateValueNode@StringTrieBuilder@icu_56@@6B@	dd offset ??_EIntermediateValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(int,icu_56::StringTrieBuilder::Node *)+66o
					; icu_56::StringTrieBuilder::IntermediateValueNode::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8IntermediateValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z ; icu_56::StringTrieBuilder::IntermediateValueNode::operator==(icu_56::StringTrieBuilder::Node const &)
		dd offset ?markRightEdgesFirst@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEHH@Z ; icu_56::StringTrieBuilder::IntermediateValueNode::markRightEdgesFirst(int)
		dd offset ?write@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z ;	icu_56::StringTrieBuilder::IntermediateValueNode::write(icu_56::StringTrieBuilder &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 16E0h
__unwindtable$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000016F0o
		dd offset __unwindfunclet$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z$0
__ehfuncinfo$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z+14o
		dd offset __unwindtable$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 170Ch
		public ??_R4IntermediateValueNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI	Complete Object	Locator'
??_R4IntermediateValueNode@StringTrieBuilder@icu_56@@6B@ dd 3 dup(0)
					; DATA XREF: .rdata:000016C8o
		dd offset ??_R0?AVIntermediateValueNode@StringTrieBuilder@icu_56@@@8 ; icu_56::StringTrieBuilder::IntermediateValueNode	`RTTI Type Descriptor'
		dd offset ??_R3IntermediateValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1720h
		public ??_R0?AVIntermediateValueNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::IntermediateValueNode `RTTI Type Descriptor'
??_R0?AVIntermediateValueNode@StringTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001718o
					; .rdata$r:icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avintermedia	db '.?AVIntermediateValueNode@StringTrieBuilder@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1760h
		public ??_R3IntermediateValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Class	Hierarchy Descriptor'
??_R3IntermediateValueNode@StringTrieBuilder@icu_56@@8 dd 2 dup(0)
					; DATA XREF: .rdata$r:0000171Co
					; .rdata$r:000017A0o
		dd 5
		dd offset ??_R2IntermediateValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Base	Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1770h
		public ??_R2IntermediateValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Base Class Array'
??_R2IntermediateValueNode@StringTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@IntermediateValueNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:0000176Co
					; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@ValueNode@StringTrieBuilder@icu_56@@8 ;	icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1788h
		public ??_R1A@?0A@EA@IntermediateValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@IntermediateValueNode@StringTrieBuilder@icu_56@@8	dd offset ??_R0?AVIntermediateValueNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Base Class Array'o
					; icu_56::StringTrieBuilder::IntermediateValueNode `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3IntermediateValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::IntermediateValueNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 17A4h
		public ??_R1A@?0A@EA@ValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@ValueNode@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVValueNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:00001774o
					; .rdata$r:icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Array'o ...
					; icu_56::StringTrieBuilder::ValueNode `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3ValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::ValueNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 17C0h
		public ??_R0?AVValueNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::ValueNode `RTTI Type	Descriptor'
??_R0?AVValueNode@StringTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; .rdata$r:00001990o
					; const	type_info::`vftable'
		align 8
a_?avvaluenode@	db '.?AVValueNode@StringTrieBuilder@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 17F4h
		public ??_R3ValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::ValueNode::`RTTI Class Hierarchy Descriptor'
??_R3ValueNode@StringTrieBuilder@icu_56@@8 dd 2	dup(0) ; DATA XREF: .rdata$r:000017BCo
					; .rdata$r:00001994o
		dd 4
		dd offset ??_R2ValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::ValueNode::`RTTI Base	Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1804h
		public ??_R2ValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Array'
??_R2ValueNode@StringTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@ValueNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00001800o
					; icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1818h
		public ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:00001778o
					; .rdata$r:00001808o ...
					; icu_56::StringTrieBuilder::Node `RTTI	Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3Node@StringTrieBuilder@icu_56@@8	; icu_56::StringTrieBuilder::Node::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1834h
		public ??_R0?AVNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::Node	`RTTI Type Descriptor'
??_R0?AVNode@StringTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::Node::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; .rdata$r:00001A1Co
					; const	type_info::`vftable'
		dd 0
a_?avnode@strin	db '.?AVNode@StringTrieBuilder@icu_56@@',0
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1860h
		public ??_R3Node@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::Node::`RTTI Class Hierarchy Descriptor'
??_R3Node@StringTrieBuilder@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001830o
					; .rdata$r:00001A20o
		dd 3
		dd offset ??_R2Node@StringTrieBuilder@icu_56@@8	; icu_56::StringTrieBuilder::Node::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1870h
		public ??_R2Node@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::Node::`RTTI Base Class Array'
??_R2Node@StringTrieBuilder@icu_56@@8 dd offset	??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:0000186Co
					; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 10h
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1880h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: static int __cdecl icu_56::StringTrieBuilder::Node::hashCode(class icu_56::StringTrieBuilder::Node const *)
		public ?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z
?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(int,icu_56::StringTrieBuilder::Node *)+46p
					; icu_56::StringTrieBuilder::BranchHeadNode::BranchHeadNode(int,icu_56::StringTrieBuilder::Node	*)+33p	...

var_C4		= dword	ptr -0C4h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C4]
		mov	ecx, 31h ; '1'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		jnz	short loc_18B0
		mov	[ebp+var_C4], 0
		jmp	short loc_18BE
; ---------------------------------------------------------------------------

loc_18B0:				; CODE XREF: icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const *)+22j
		mov	ecx, [ebp+arg_0]
		call	?hashCode@Node@StringTrieBuilder@icu_56@@QBEHXZ	; icu_56::StringTrieBuilder::Node::hashCode(void)
		mov	[ebp+var_C4], eax

loc_18BE:				; CODE XREF: icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const *)+2Ej
		mov	eax, [ebp+var_C4]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 18D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: int __thiscall icu_56::StringTrieBuilder::Node::hashCode(void)const
		public ?hashCode@Node@StringTrieBuilder@icu_56@@QBEHXZ
?hashCode@Node@StringTrieBuilder@icu_56@@QBEHXZ	proc near
					; CODE XREF: icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const *)+33p
					; icu_56::StringTrieBuilder::hashNode(void const *)+21p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?hashCode@Node@StringTrieBuilder@icu_56@@QBEHXZ	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1908h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::ValueNode::ValueNode(icu_56::StringTrieBuilder::ValueNode *this,	int)
		public ??0ValueNode@StringTrieBuilder@icu_56@@QAE@H@Z
??0ValueNode@StringTrieBuilder@icu_56@@QAE@H@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::IntermediateValueNode(int,icu_56::StringTrieBuilder::Node *)+57p
					; icu_56::StringTrieBuilder::BranchHeadNode::BranchHeadNode(int,icu_56::StringTrieBuilder::Node	*)+41p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??0Node@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::Node::Node(int)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7ValueNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::ValueNode::`vftable'
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax+0Ch], 0
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+10h], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0ValueNode@StringTrieBuilder@icu_56@@QAE@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 196Ch
		dd offset ??_R4ValueNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::ValueNode::`RTTI Complete Object Locator'
		public ??_7ValueNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::ValueNode::`vftable'
??_7ValueNode@StringTrieBuilder@icu_56@@6B@ dd offset ??_EValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::ValueNode::ValueNode(int)+32o
					; icu_56::StringTrieBuilder::ValueNode::`vector	deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z ; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)
		dd offset ?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z ;	icu_56::StringTrieBuilder::Node::markRightEdgesFirst(int)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1984h
		public ??_R4ValueNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::ValueNode::`RTTI Complete Object Locator'
??_R4ValueNode@StringTrieBuilder@icu_56@@6B@ dd	3 dup(0) ; DATA	XREF: .rdata:0000196Co
		dd offset ??_R0?AVValueNode@StringTrieBuilder@icu_56@@@8 ; icu_56::StringTrieBuilder::ValueNode	`RTTI Type Descriptor'
		dd offset ??_R3ValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::ValueNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1998h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: __thiscall icu_56::StringTrieBuilder::Node::Node(int)
		public ??0Node@StringTrieBuilder@icu_56@@QAE@H@Z
??0Node@StringTrieBuilder@icu_56@@QAE@H@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::ValueNode::ValueNode(int)+2Ap
					; icu_56::StringTrieBuilder::BranchNode::BranchNode(int)+2Ap ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??0UObject@icu_56@@QAE@XZ ; icu_56::UObject::UObject(void)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7Node@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::Node::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+4], ecx
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0Node@StringTrieBuilder@icu_56@@QAE@H@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 19F8h
		dd offset ??_R4Node@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::Node::`RTTI Complete Object Locator'
		public ??_7Node@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::Node::`vftable'
??_7Node@StringTrieBuilder@icu_56@@6B@ dd offset ??_ENode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::Node::Node(int)+2Eo
					; icu_56::StringTrieBuilder::Node::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z ; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node	const &)
		dd offset ?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z ;	icu_56::StringTrieBuilder::Node::markRightEdgesFirst(int)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1A10h
		public ??_R4Node@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::Node::`RTTI Complete	Object Locator'
??_R4Node@StringTrieBuilder@icu_56@@6B@	dd 3 dup(0) ; DATA XREF: .rdata:000019F8o
		dd offset ??_R0?AVNode@StringTrieBuilder@icu_56@@@8 ; icu_56::StringTrieBuilder::Node `RTTI Type Descriptor'
		dd offset ??_R3Node@StringTrieBuilder@icu_56@@8	; icu_56::StringTrieBuilder::Node::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1A24h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::BranchHeadNode::BranchHeadNode(icu_56::StringTrieBuilder::BranchHeadNode	*this, int, struct Node	*)
		public ??0BranchHeadNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z
??0BranchHeadNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+29Ep

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, [ebp+arg_0]
		add	esi, 0ECCCCBEh
		imul	esi, 25h
		mov	eax, [ebp+arg_4]
		push	eax
		call	?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z ;	icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const	*)
		add	esp, 4
		add	esi, eax
		push	esi		; int
		mov	ecx, [ebp+var_8] ; this
		call	??0ValueNode@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::ValueNode::ValueNode(int)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7BranchHeadNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::BranchHeadNode::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+14h], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	[eax+18h], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0BranchHeadNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1AA0h
		dd offset ??_R4BranchHeadNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Complete Object Locator'
		public ??_7BranchHeadNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::BranchHeadNode::`vftable'
??_7BranchHeadNode@StringTrieBuilder@icu_56@@6B@ dd offset ??_EBranchHeadNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::BranchHeadNode::BranchHeadNode(int,icu_56::StringTrieBuilder::Node *)+49o
					; icu_56::StringTrieBuilder::BranchHeadNode::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8BranchHeadNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z	; icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node	const &)
		dd offset ?markRightEdgesFirst@BranchHeadNode@StringTrieBuilder@icu_56@@UAEHH@Z	; icu_56::StringTrieBuilder::BranchHeadNode::markRightEdgesFirst(int)
		dd offset ?write@BranchHeadNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z ; icu_56::StringTrieBuilder::BranchHeadNode::write(icu_56::StringTrieBuilder &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1AB8h
		public ??_R4BranchHeadNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Complete Object Locator'
??_R4BranchHeadNode@StringTrieBuilder@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:00001AA0o
		dd offset ??_R0?AVBranchHeadNode@StringTrieBuilder@icu_56@@@8 ;	icu_56::StringTrieBuilder::BranchHeadNode `RTTI	Type Descriptor'
		dd offset ??_R3BranchHeadNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1ACCh
		public ??_R0?AVBranchHeadNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::BranchHeadNode `RTTI	Type Descriptor'
??_R0?AVBranchHeadNode@StringTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001AC4o
					; .rdata$r:icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avbranchhead	db '.?AVBranchHeadNode@StringTrieBuilder@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B04h
		public ??_R3BranchHeadNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Class Hierarchy Descriptor'
??_R3BranchHeadNode@StringTrieBuilder@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:00001AC8o
					; .rdata$r:00001B44o
		dd 5
		dd offset ??_R2BranchHeadNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Base Class	Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B14h
		public ??_R2BranchHeadNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Base	Class Array'
??_R2BranchHeadNode@StringTrieBuilder@icu_56@@8	dd offset ??_R1A@?0A@EA@BranchHeadNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00001B10o
					; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@ValueNode@StringTrieBuilder@icu_56@@8 ;	icu_56::StringTrieBuilder::ValueNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1B2Ch
		public ??_R1A@?0A@EA@BranchHeadNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@BranchHeadNode@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVBranchHeadNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Base Class Array'o
					; icu_56::StringTrieBuilder::BranchHeadNode `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3BranchHeadNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::BranchHeadNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B48h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::Node::`scalar deleting destructor'(unsigned int)
		public ??_GNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8]
		call	??1Node@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::Node::~Node(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1B87
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_1B87:				; CODE XREF: icu_56::StringTrieBuilder::Node::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1BA0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual __thiscall icu_56::StringTrieBuilder::Node::~Node(void)
		public ??1Node@StringTrieBuilder@icu_56@@UAE@XZ
??1Node@StringTrieBuilder@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::Node::`scalar deleting destructor'(uint)+26p
					; icu_56::StringTrieBuilder::ValueNode::~ValueNode(void)+26p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1UObject@icu_56@@UAE@XZ ; icu_56::UObject::~UObject(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1Node@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1BE0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::ValueNode::`scalar deleting destructor'(unsigned int)
		public ??_GValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ ;	icu_56::StringTrieBuilder::ValueNode::~ValueNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1C1F
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_1C1F:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1C38h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::`scalar deleting destructor'(unsigned int)
		public ??_GIntermediateValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GIntermediateValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1IntermediateValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::IntermediateValueNode::~IntermediateValueNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1C77
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_1C77:				; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::`scalar deleting	destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GIntermediateValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1C90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::ValueNode::~ValueNode(icu_56::StringTrieBuilder::ValueNode *__hidden this)
		public ??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ
??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ proc near
					; CODE XREF: __unwindfunclet$??0IntermediateValueNode@StringTrieBuilder@icu_56@@QAE@HPAVNode@12@@Z$0+3j
					; icu_56::StringTrieBuilder::ValueNode::`scalar	deleting destructor'(uint)+26p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8]
		call	??1Node@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::Node::~Node(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1CD0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::BranchHeadNode::`scalar deleting	destructor'(unsigned int)
		public ??_GBranchHeadNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GBranchHeadNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1BranchHeadNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::BranchHeadNode::~BranchHeadNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_1D0F
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_1D0F:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GBranchHeadNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D28h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::~IntermediateValueNode(icu_56::StringTrieBuilder::IntermediateValueNode *__hidden	this)
		public ??1IntermediateValueNode@StringTrieBuilder@icu_56@@UAE@XZ
??1IntermediateValueNode@StringTrieBuilder@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::`scalar deleting	destructor'(uint)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ ;	icu_56::StringTrieBuilder::ValueNode::~ValueNode(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1IntermediateValueNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1D68h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::BranchHeadNode::~BranchHeadNode(icu_56::StringTrieBuilder::BranchHeadNode *__hidden this)
		public ??1BranchHeadNode@StringTrieBuilder@icu_56@@UAE@XZ
??1BranchHeadNode@StringTrieBuilder@icu_56@@UAE@XZ proc	near
					; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::`scalar	deleting destructor'(uint)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1ValueNode@StringTrieBuilder@icu_56@@UAE@XZ ;	icu_56::StringTrieBuilder::ValueNode::~ValueNode(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1BranchHeadNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1DA8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct Node *__thiscall icu_56::StringTrieBuilder::makeBranchSubNode(icu_56::StringTrieBuilder *this,	int, int, int, int, enum UErrorCode *)
		public ?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z
?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+25Fp
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+102p

var_1D4		= dword	ptr -1D4h
var_1CC		= dword	ptr -1CCh
var_1C0		= dword	ptr -1C0h
var_1B4		= dword	ptr -1B4h
var_1A8		= dword	ptr -1A8h
var_DC		= dword	ptr -0DCh
var_D0		= word ptr -0D0h
var_C4		= word ptr -0C4h
var_B8		= dword	ptr -0B8h
var_AC		= dword	ptr -0ACh
var_A0		= dword	ptr -0A0h
var_94		= dword	ptr -94h
var_88		= dword	ptr -88h
var_7C		= dword	ptr -7Ch
var_3C		= word ptr -3Ch
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 1C8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_1D4]
		mov	ecx, 72h ; 'r'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	eax, [ebp+arg_10]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_1E09
		xor	eax, eax
		jmp	loc_2234
; ---------------------------------------------------------------------------

loc_1E09:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+58j
		mov	[ebp+var_88], 0

loc_1E13:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+139j
		mov	eax, [ebp+var_18]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+28h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+arg_C], eax
		jle	loc_1EE6
		mov	eax, [ebp+arg_C]
		cdq
		sub	eax, edx
		sar	eax, 1
		mov	esi, esp
		push	eax
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx]
		mov	ecx, [ebp+var_18]
		mov	edx, [eax+1Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_94], eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+var_94]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx]
		mov	ecx, [ebp+var_18]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_88]
		mov	[ebp+ecx*2+var_3C], ax
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		mov	eax, [ebp+arg_C]
		cdq
		sub	eax, edx
		sar	eax, 1
		push	eax		; int
		mov	ecx, [ebp+arg_8]
		push	ecx		; int
		mov	edx, [ebp+var_94]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_18] ; this
		call	?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z ; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)
		mov	ecx, [ebp+var_88]
		mov	[ebp+ecx*4+var_7C], eax
		mov	eax, [ebp+var_88]
		add	eax, 1
		mov	[ebp+var_88], eax
		mov	eax, [ebp+var_94]
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+arg_C]
		cdq
		sub	eax, edx
		sar	eax, 1
		mov	ecx, [ebp+arg_C]
		sub	ecx, eax
		mov	[ebp+arg_C], ecx
		jmp	loc_1E13
; ---------------------------------------------------------------------------

loc_1EE6:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+84j
		mov	eax, [ebp+arg_10]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_1F02
		xor	eax, eax
		jmp	loc_2234
; ---------------------------------------------------------------------------

loc_1F02:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+151j
		push	48h ; 'H'       ; unsigned int
		call	??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator	new(uint)
		add	esp, 4
		mov	[ebp+var_1C0], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_1C0], 0
		jz	short loc_1F35
		mov	ecx, [ebp+var_1C0] ; this
		call	??0ListBranchNode@StringTrieBuilder@icu_56@@QAE@XZ ; icu_56::StringTrieBuilder::ListBranchNode::ListBranchNode(void)
		mov	[ebp+var_1D4], eax
		jmp	short loc_1F3F
; ---------------------------------------------------------------------------

loc_1F35:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+178j
		mov	[ebp+var_1D4], 0

loc_1F3F:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+18Bj
		mov	eax, [ebp+var_1D4]
		mov	[ebp+var_1CC], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_1CC]
		mov	[ebp+var_A0], ecx
		cmp	[ebp+var_A0], 0
		jnz	short loc_1F77
		mov	eax, [ebp+arg_10]
		mov	dword ptr [eax], 7
		xor	eax, eax
		jmp	loc_2234
; ---------------------------------------------------------------------------

loc_1F77:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+1BDj
		mov	[ebp+var_AC], 0

loc_1F81:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+30Cj
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_B8], eax
		mov	eax, [ebp+var_B8]
		mov	[ebp+var_1D4], eax
		mov	ecx, [ebp+var_B8]
		add	ecx, 1
		mov	[ebp+var_B8], ecx
		mov	esi, esp
		mov	edx, [ebp+arg_8]
		push	edx
		mov	eax, [ebp+var_1D4]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_C4], ax
		mov	esi, esp
		movzx	eax, [ebp+var_C4]
		push	eax
		mov	ecx, [ebp+arg_8]
		push	ecx
		mov	edx, [ebp+var_B8]
		push	edx
		mov	eax, [ebp+var_18]
		mov	edx, [eax]
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+20h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_B8], eax
		mov	eax, [ebp+var_B8]
		sub	eax, 1
		cmp	[ebp+arg_0], eax
		jnz	short loc_205E
		mov	esi, [ebp+arg_8]
		add	esi, 1
		mov	edi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+8]
		call	eax
		cmp	edi, esp
		call	__RTC_CheckEsp
		cmp	esi, eax
		jnz	short loc_205E
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; int
		movzx	ecx, [ebp+var_C4]
		push	ecx		; int
		mov	ecx, [ebp+var_A0] ; this
		call	?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHH@Z ; icu_56::StringTrieBuilder::ListBranchNode::add(int,int)
		jmp	short loc_2090
; ---------------------------------------------------------------------------

loc_205E:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+260j
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+284j
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_8]
		add	ecx, 1
		push	ecx		; int
		mov	edx, [ebp+var_B8]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_18] ; this
		call	?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)
		push	eax		; struct Node *
		movzx	ecx, [ebp+var_C4]
		push	ecx		; int
		mov	ecx, [ebp+var_A0] ; this
		call	?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHPAVNode@23@@Z ; icu_56::StringTrieBuilder::ListBranchNode::add(int,icu_56::StringTrieBuilder::Node *)

loc_2090:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+2B4j
		mov	eax, [ebp+var_B8]
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+var_AC]
		add	eax, 1
		mov	[ebp+var_AC], eax
		mov	ecx, [ebp+arg_C]
		sub	ecx, 1
		cmp	[ebp+var_AC], ecx
		jl	loc_1F81
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_18]
		mov	eax, [edx]
		mov	ecx, [ebp+var_18]
		mov	edx, [eax+0Ch]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_D0], ax
		mov	eax, [ebp+arg_4]
		sub	eax, 1
		cmp	[ebp+arg_0], eax
		jnz	short loc_213E
		mov	esi, [ebp+arg_8]
		add	esi, 1
		mov	edi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+8]
		call	eax
		cmp	edi, esp
		call	__RTC_CheckEsp
		cmp	esi, eax
		jnz	short loc_213E
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_18]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_18]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; int
		movzx	ecx, [ebp+var_D0]
		push	ecx		; int
		mov	ecx, [ebp+var_A0] ; this
		call	?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHH@Z ; icu_56::StringTrieBuilder::ListBranchNode::add(int,int)
		jmp	short loc_216D
; ---------------------------------------------------------------------------

loc_213E:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+340j
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+364j
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_8]
		add	ecx, 1
		push	ecx		; int
		mov	edx, [ebp+arg_4]
		push	edx		; int
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_18] ; this
		call	?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)
		push	eax		; struct Node *
		movzx	ecx, [ebp+var_D0]
		push	ecx		; int
		mov	ecx, [ebp+var_A0] ; this
		call	?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHPAVNode@23@@Z ; icu_56::StringTrieBuilder::ListBranchNode::add(int,icu_56::StringTrieBuilder::Node *)

loc_216D:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+394j
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_A0]
		push	ecx		; struct Node *
		mov	ecx, [ebp+var_18] ; this
		call	?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)
		mov	[ebp+var_DC], eax

loc_2186:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+481j
		cmp	[ebp+var_88], 0
		jle	loc_222E
		mov	eax, [ebp+var_88]
		sub	eax, 1
		mov	[ebp+var_88], eax
		push	1Ch		; unsigned int
		call	??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator	new(uint)
		add	esp, 4
		mov	[ebp+var_1A8], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_1A8], 0
		jz	short loc_21F3
		mov	eax, [ebp+var_DC]
		push	eax		; struct Node *
		mov	ecx, [ebp+var_88]
		mov	edx, [ebp+ecx*4+var_7C]
		push	edx		; struct Node *
		mov	eax, [ebp+var_88]
		movzx	ecx, [ebp+eax*2+var_3C]
		push	ecx		; wchar_t
		mov	ecx, [ebp+var_1A8] ; this
		call	??0SplitBranchNode@StringTrieBuilder@icu_56@@QAE@_WPAVNode@12@1@Z ; icu_56::StringTrieBuilder::SplitBranchNode::SplitBranchNode(wchar_t,icu_56::StringTrieBuilder::Node	*,icu_56::StringTrieBuilder::Node *)
		mov	[ebp+var_1D4], eax
		jmp	short loc_21FD
; ---------------------------------------------------------------------------

loc_21F3:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+418j
		mov	[ebp+var_1D4], 0

loc_21FD:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+449j
		mov	edx, [ebp+var_1D4]
		mov	[ebp+var_1B4], edx
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	eax, [ebp+arg_10]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_1B4]
		push	ecx		; struct Node *
		mov	ecx, [ebp+var_18] ; this
		call	?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	; icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)
		mov	[ebp+var_DC], eax
		jmp	loc_2186
; ---------------------------------------------------------------------------

loc_222E:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+3E5j
		mov	eax, [ebp+var_DC]

loc_2234:				; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+5Cj
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+155j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN27
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 1D4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	14h
?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
$LN27		dd 2			; DATA XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+490o
		dd offset $LN26_0
$LN26_0		dd 0FFFFFFC4h, 1Ch	; DATA XREF: .text:00002274o
		dd offset $LN23_0	; "middleUnits"
		dd 0FFFFFF84h, 38h
		dd offset $LN24_0	; "lessThan"
$LN24_0		db 'lessThan',0         ; DATA XREF: .text:0000228Co
$LN23_0		db 'middleUnits',0      ; DATA XREF: .text:00002280o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 22A8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:000022F0o
		mov	eax, [ebp-1C0h]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		pop	ecx
		retn
__unwindfunclet$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:000022F8o
		mov	eax, [ebp-1A8h]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		pop	ecx
		retn
__unwindfunclet$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-1D8h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 22ECh
__unwindtable$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z	dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00002304o
		dd offset __unwindfunclet$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z$1
__ehfuncinfo$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z dd 19930522h, 2
					; DATA XREF: __ehhandler$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?makeBranchSubNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHHAAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2320h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::ListBranchNode::ListBranchNode(icu_56::StringTrieBuilder::ListBranchNode	*__hidden this)
		public ??0ListBranchNode@StringTrieBuilder@icu_56@@QAE@XZ
??0ListBranchNode@StringTrieBuilder@icu_56@@QAE@XZ proc	near
					; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+180p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		push	444444h		; int
		mov	ecx, [ebp+var_8] ; this
		call	??0BranchNode@StringTrieBuilder@icu_56@@QAE@H@Z	; icu_56::StringTrieBuilder::BranchNode::BranchNode(int)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7ListBranchNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::ListBranchNode::`vftable'
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax+24h], 0
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??0ListBranchNode@StringTrieBuilder@icu_56@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 237Ch
		dd offset ??_R4ListBranchNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::ListBranchNode::`RTTI Complete Object Locator'
		public ??_7ListBranchNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::ListBranchNode::`vftable'
??_7ListBranchNode@StringTrieBuilder@icu_56@@6B@ dd offset ??_EListBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::ListBranchNode::ListBranchNode(void)+33o
					; icu_56::StringTrieBuilder::ListBranchNode::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8ListBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z	; icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node	const &)
		dd offset ?markRightEdgesFirst@ListBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z	; icu_56::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)
		dd offset ?write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z ; icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2394h
		public ??_R4ListBranchNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::ListBranchNode::`RTTI Complete Object Locator'
??_R4ListBranchNode@StringTrieBuilder@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:0000237Co
		dd offset ??_R0?AVListBranchNode@StringTrieBuilder@icu_56@@@8 ;	icu_56::StringTrieBuilder::ListBranchNode `RTTI	Type Descriptor'
		dd offset ??_R3ListBranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 23A8h
		public ??_R0?AVListBranchNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::ListBranchNode `RTTI	Type Descriptor'
??_R0?AVListBranchNode@StringTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000023A0o
					; .rdata$r:icu_56::StringTrieBuilder::ListBranchNode::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avlistbranch	db '.?AVListBranchNode@StringTrieBuilder@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 23E0h
		public ??_R3ListBranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Class Hierarchy Descriptor'
??_R3ListBranchNode@StringTrieBuilder@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:000023A4o
					; .rdata$r:00002420o
		dd 5
		dd offset ??_R2ListBranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Base Class	Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 23F0h
		public ??_R2ListBranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Base	Class Array'
??_R2ListBranchNode@StringTrieBuilder@icu_56@@8	dd offset ??_R1A@?0A@EA@ListBranchNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:000023ECo
					; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@BranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::BranchNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2408h
		public ??_R1A@?0A@EA@ListBranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@ListBranchNode@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVListBranchNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::ListBranchNode::`RTTI Base Class Array'o
					; icu_56::StringTrieBuilder::ListBranchNode `RTTI Type Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3ListBranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::ListBranchNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2424h
		public ??_R1A@?0A@EA@BranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::BranchNode::`RTTI Base Class Descriptor at	(0, -1,	0, 64)'
??_R1A@?0A@EA@BranchNode@StringTrieBuilder@icu_56@@8 dd	offset ??_R0?AVBranchNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:000023F4o
					; .rdata$r:icu_56::StringTrieBuilder::BranchNode::`RTTI	Base Class Array'o ...
					; icu_56::StringTrieBuilder::BranchNode	`RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3BranchNode@StringTrieBuilder@icu_56@@8 ;	icu_56::StringTrieBuilder::BranchNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2440h
		public ??_R0?AVBranchNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::BranchNode `RTTI Type Descriptor'
??_R0?AVBranchNode@StringTrieBuilder@icu_56@@@8	dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::BranchNode::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; .rdata$r:00002510o
					; const	type_info::`vftable'
		align 8
a_?avbranchnode	db '.?AVBranchNode@StringTrieBuilder@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2474h
		public ??_R3BranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::BranchNode::`RTTI Class Hierarchy Descriptor'
??_R3BranchNode@StringTrieBuilder@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:0000243Co
					; .rdata$r:00002514o
		dd 4
		dd offset ??_R2BranchNode@StringTrieBuilder@icu_56@@8 ;	icu_56::StringTrieBuilder::BranchNode::`RTTI Base Class	Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2484h
		public ??_R2BranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::BranchNode::`RTTI Base Class Array'
??_R2BranchNode@StringTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@BranchNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00002480o
					; icu_56::StringTrieBuilder::BranchNode::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2498h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::BranchNode::BranchNode(icu_56::StringTrieBuilder::BranchNode *this, int)
		public ??0BranchNode@StringTrieBuilder@icu_56@@QAE@H@Z
??0BranchNode@StringTrieBuilder@icu_56@@QAE@H@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::ListBranchNode(void)+2Bp
					; icu_56::StringTrieBuilder::SplitBranchNode::SplitBranchNode(wchar_t,icu_56::StringTrieBuilder::Node *,icu_56::StringTrieBuilder::Node	*)+53p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??0Node@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::Node::Node(int)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7BranchNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::BranchNode::`vftable'
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0BranchNode@StringTrieBuilder@icu_56@@QAE@H@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24ECh
		dd offset ??_R4BranchNode@StringTrieBuilder@icu_56@@6B@	; const	icu_56::StringTrieBuilder::BranchNode::`RTTI Complete Object Locator'
		public ??_7BranchNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::BranchNode::`vftable'
??_7BranchNode@StringTrieBuilder@icu_56@@6B@ dd	offset ??_EBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::BranchNode::BranchNode(int)+32o
					; icu_56::StringTrieBuilder::BranchNode::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z ; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node	const &)
		dd offset ?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z ;	icu_56::StringTrieBuilder::Node::markRightEdgesFirst(int)
		dd offset __purecall
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2504h
		public ??_R4BranchNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::BranchNode::`RTTI Complete Object Locator'
??_R4BranchNode@StringTrieBuilder@icu_56@@6B@ dd 3 dup(0) ; DATA XREF: .rdata:000024ECo
		dd offset ??_R0?AVBranchNode@StringTrieBuilder@icu_56@@@8 ; icu_56::StringTrieBuilder::BranchNode `RTTI	Type Descriptor'
		dd offset ??_R3BranchNode@StringTrieBuilder@icu_56@@8 ;	icu_56::StringTrieBuilder::BranchNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2518h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::ListBranchNode::add(icu_56::StringTrieBuilder::ListBranchNode *this, int, int)
		public ?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHH@Z
?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHH@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+2AFp
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+38Fp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	edx, [ebp+var_8]
		mov	ax, word ptr [ebp+arg_0]
		mov	[edx+ecx*2+3Ch], ax
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	edx, [ebp+var_8]
		mov	dword ptr [edx+ecx*4+10h], 0
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_4]
		mov	[edx+ecx*4+28h], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		add	ecx, 1
		mov	edx, [ebp+var_8]
		mov	[edx+24h], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		imul	ecx, 25h
		add	ecx, [ebp+arg_0]
		imul	ecx, 25h
		add	ecx, [ebp+arg_4]
		mov	edx, [ebp+var_8]
		mov	[edx+4], ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	8
?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::ListBranchNode::add(icu_56::StringTrieBuilder::ListBranchNode *this, int, struct Node *)
		public ?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHPAVNode@23@@Z
?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHPAVNode@23@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+2E3p
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+3C0p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	edx, [ebp+var_8]
		mov	ax, word ptr [ebp+arg_0]
		mov	[edx+ecx*2+3Ch], ax
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_4]
		mov	[edx+ecx*4+10h], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	edx, [ebp+var_8]
		mov	dword ptr [edx+ecx*4+28h], 0
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		add	ecx, 1
		mov	edx, [ebp+var_8]
		mov	[edx+24h], ecx
		mov	eax, [ebp+var_8]
		mov	esi, [eax+4]
		imul	esi, 25h
		add	esi, [ebp+arg_0]
		imul	esi, 25h
		mov	ecx, [ebp+arg_4]
		push	ecx
		call	?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z ;	icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const	*)
		add	esp, 4
		add	esi, eax
		mov	edx, [ebp+var_8]
		mov	[edx+4], esi
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?add@ListBranchNode@StringTrieBuilder@icu_56@@QAEXHPAVNode@23@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2640h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::SplitBranchNode::SplitBranchNode(icu_56::StringTrieBuilder::SplitBranchNode *this, wchar_t, struct Node *, struct Node *)
		public ??0SplitBranchNode@StringTrieBuilder@icu_56@@QAE@_WPAVNode@12@1@Z
??0SplitBranchNode@StringTrieBuilder@icu_56@@QAE@_WPAVNode@12@1@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+43Ep

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= word ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		movzx	esi, [ebp+arg_0]
		add	esi, 0C555549h
		imul	esi, 25h
		mov	eax, [ebp+arg_4]
		push	eax
		call	?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z ;	icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const	*)
		add	esp, 4
		add	esi, eax
		imul	esi, 25h
		mov	ecx, [ebp+arg_8]
		push	ecx
		call	?hashCode@Node@StringTrieBuilder@icu_56@@SAHPBV123@@Z ;	icu_56::StringTrieBuilder::Node::hashCode(icu_56::StringTrieBuilder::Node const	*)
		add	esp, 4
		add	esi, eax
		push	esi		; int
		mov	ecx, [ebp+var_8] ; this
		call	??0BranchNode@StringTrieBuilder@icu_56@@QAE@H@Z	; icu_56::StringTrieBuilder::BranchNode::BranchNode(int)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7SplitBranchNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::SplitBranchNode::`vftable'
		mov	eax, [ebp+var_8]
		mov	cx, [ebp+arg_0]
		mov	[eax+10h], cx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	[eax+14h], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_8]
		mov	[eax+18h], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
??0SplitBranchNode@StringTrieBuilder@icu_56@@QAE@_WPAVNode@12@1@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 26D8h
		dd offset ??_R4SplitBranchNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Complete	Object Locator'
		public ??_7SplitBranchNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::SplitBranchNode::`vftable'
??_7SplitBranchNode@StringTrieBuilder@icu_56@@6B@ dd offset ??_ESplitBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::SplitBranchNode::SplitBranchNode(wchar_t,icu_56::StringTrieBuilder::Node *,icu_56::StringTrieBuilder::Node *)+5Bo
					; icu_56::StringTrieBuilder::SplitBranchNode::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8SplitBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z ; icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const	&)
		dd offset ?markRightEdgesFirst@SplitBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z ; icu_56::StringTrieBuilder::SplitBranchNode::markRightEdgesFirst(int)
		dd offset ?write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z	; icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 26F0h
		public ??_R4SplitBranchNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Complete Object Locator'
??_R4SplitBranchNode@StringTrieBuilder@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:000026D8o
		dd offset ??_R0?AVSplitBranchNode@StringTrieBuilder@icu_56@@@8 ; icu_56::StringTrieBuilder::SplitBranchNode `RTTI Type Descriptor'
		dd offset ??_R3SplitBranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2704h
		public ??_R0?AVSplitBranchNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::SplitBranchNode `RTTI Type Descriptor'
??_R0?AVSplitBranchNode@StringTrieBuilder@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:000026FCo
					; .rdata$r:icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avsplitbranc	db '.?AVSplitBranchNode@StringTrieBuilder@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 273Ch
		public ??_R3SplitBranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Class Hierarchy Descriptor'
??_R3SplitBranchNode@StringTrieBuilder@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002700o
					; .rdata$r:0000277Co
		dd 5
		dd offset ??_R2SplitBranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 274Ch
		public ??_R2SplitBranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Base Class Array'
??_R2SplitBranchNode@StringTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@SplitBranchNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00002748o
					; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@BranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::BranchNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2764h
		public ??_R1A@?0A@EA@SplitBranchNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Base Class Descriptor at (0, -1, 0,	64)'
??_R1A@?0A@EA@SplitBranchNode@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVSplitBranchNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::SplitBranchNode::`RTTI	Base Class Array'o
					; icu_56::StringTrieBuilder::SplitBranchNode `RTTI Type	Descriptor'
		dd 4, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3SplitBranchNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::SplitBranchNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2780h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::BranchNode::`scalar deleting destructor'(unsigned int)
		public ??_GBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc	near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1BranchNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::BranchNode::~BranchNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_27BF
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_27BF:				; CODE XREF: icu_56::StringTrieBuilder::BranchNode::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 27D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::ListBranchNode::`scalar deleting	destructor'(unsigned int)
		public ??_GListBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GListBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1ListBranchNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::ListBranchNode::~ListBranchNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2817
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_2817:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GListBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2830h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::BranchNode::~BranchNode(icu_56::StringTrieBuilder::BranchNode *__hidden this)
		public ??1BranchNode@StringTrieBuilder@icu_56@@UAE@XZ
??1BranchNode@StringTrieBuilder@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::BranchNode::`scalar deleting destructor'(uint)+26p
					; icu_56::StringTrieBuilder::ListBranchNode::~ListBranchNode(void)+26p	...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8]
		call	??1Node@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::Node::~Node(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1BranchNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2870h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::SplitBranchNode::`scalar	deleting destructor'(unsigned int)
		public ??_GSplitBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GSplitBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1SplitBranchNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::SplitBranchNode::~SplitBranchNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_28AF
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_28AF:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::`scalar deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GSplitBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 28C8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::ListBranchNode::~ListBranchNode(icu_56::StringTrieBuilder::ListBranchNode *__hidden this)
		public ??1ListBranchNode@StringTrieBuilder@icu_56@@UAE@XZ
??1ListBranchNode@StringTrieBuilder@icu_56@@UAE@XZ proc	near
					; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::`scalar	deleting destructor'(uint)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1BranchNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::BranchNode::~BranchNode(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1ListBranchNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2908h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::SplitBranchNode::~SplitBranchNode(icu_56::StringTrieBuilder::SplitBranchNode *__hidden this)
		public ??1SplitBranchNode@StringTrieBuilder@icu_56@@UAE@XZ
??1SplitBranchNode@StringTrieBuilder@icu_56@@UAE@XZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::`scalar deleting destructor'(uint)+26p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1BranchNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::BranchNode::~BranchNode(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1SplitBranchNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2948h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct Node *__thiscall icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder *this, struct Node *, enum UErrorCode *)
		public ?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z
?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+1E5p
					; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)+33Dp ...

var_130		= dword	ptr -130h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 130h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_130]
		mov	ecx, 4Ch ; 'L'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_29D4
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_11C], eax
		mov	ecx, [ebp+var_11C]
		mov	[ebp+var_128], ecx
		cmp	[ebp+var_128], 0
		jz	short loc_29C3
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_128]
		mov	eax, [edx]
		mov	ecx, [ebp+var_128]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_130], eax
		jmp	short loc_29CD
; ---------------------------------------------------------------------------

loc_29C3:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+54j
		mov	[ebp+var_130], 0

loc_29CD:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+79j
		xor	eax, eax
		jmp	loc_2B0E
; ---------------------------------------------------------------------------

loc_29D4:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+36j
		cmp	[ebp+arg_0], 0
		jnz	short loc_29EA
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7
		xor	eax, eax
		jmp	loc_2B0E
; ---------------------------------------------------------------------------

loc_29EA:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+90j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+4]
		push	edx
		call	_uhash_find_56
		add	esp, 8
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_2A5E
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_104], eax
		mov	ecx, [ebp+var_104]
		mov	[ebp+var_110], ecx
		cmp	[ebp+var_110], 0
		jz	short loc_2A49
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_110]
		mov	eax, [edx]
		mov	ecx, [ebp+var_110]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_130], eax
		jmp	short loc_2A53
; ---------------------------------------------------------------------------

loc_2A49:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+DAj
		mov	[ebp+var_130], 0

loc_2A53:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+FFj
		mov	eax, [ebp+var_14]
		mov	eax, [eax+8]
		jmp	loc_2B0E
; ---------------------------------------------------------------------------

loc_2A5E:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+BCj
		mov	eax, [ebp+arg_4]
		push	eax
		push	1
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx+4]
		push	eax
		call	_uhash_puti_56
		add	esp, 10h
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_2AA5
		mov	eax, ds:?__LINE__Var@?1??registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@23@PAV423@AAW4UErrorCode@@@Z@4JA ; long `icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)'::`2'::__LINE__Var
		add	eax, 14h
		mov	esi, esp
		push	eax		; Line
		push	offset ??_C@_1HA@PLIPHOHL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; "d:\\mozilla\\intl\\icu\\source\\common\"...
		push	offset ??_C@_1BI@NHIICENI@?$AAo?$AAl?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@ ; "oldValue==0"
		call	dword ptr ds:__imp___wassert
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2AA5:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+136j
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_2B0B
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_EC], eax
		mov	ecx, [ebp+var_EC]
		mov	[ebp+var_F8], ecx
		cmp	[ebp+var_F8], 0
		jz	short loc_2AFD
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_F8]
		mov	eax, [edx]
		mov	ecx, [ebp+var_F8]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_130], eax
		jmp	short loc_2B07
; ---------------------------------------------------------------------------

loc_2AFD:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+18Ej
		mov	[ebp+var_130], 0

loc_2B07:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+1B3j
		xor	eax, eax
		jmp	short loc_2B0E
; ---------------------------------------------------------------------------

loc_2B0B:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+170j
		mov	eax, [ebp+arg_0]

loc_2B0E:				; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+87j
					; icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+9Dj ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 130h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@PAV312@AAW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2B24h
		public ??_C@_1BI@NHIICENI@?$AAo?$AAl?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@
; wchar_t `string'
??_C@_1BI@NHIICENI@?$AAo?$AAl?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@:
					; DATA XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+148o
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+16Fo
		unicode	0, <oldValue==0>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 2B3Ch
		public ??_C@_1HA@PLIPHOHL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
; wchar_t `string'
??_C@_1HA@PLIPHOHL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@:
					; DATA XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+143o
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+16Ao	...
		unicode	0, <d:\mozilla\intl\icu\source\common\stringtriebuilder.cpp>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2BACh
		public ?__LINE__Var@?1??registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@23@PAV423@AAW4UErrorCode@@@Z@4JA
; long `protected: class icu_56::StringTrieBuilder::Node * __thiscall icu_56::StringTrieBuilder::registerNode(class icu_56::StringTrieBuilder::Node *, enum  UErrorCode	&)'::`2'::__LINE__Var
?__LINE__Var@?1??registerNode@StringTrieBuilder@icu_56@@IAEPAVNode@23@PAV423@AAW4UErrorCode@@@Z@4JA dd offset off_13C+1
					; DATA XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+138r
_data		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2BB0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; struct Node *__thiscall icu_56::StringTrieBuilder::registerFinalValue(icu_56::StringTrieBuilder *this, int, enum UErrorCode *)
		public ?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z
?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+CDp

var_178		= dword	ptr -178h
var_170		= dword	ptr -170h
var_164		= dword	ptr -164h
var_158		= dword	ptr -158h
var_14C		= dword	ptr -14Ch
var_140		= dword	ptr -140h
var_134		= dword	ptr -134h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= byte ptr -2Ch
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 16Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_178]
		mov	ecx, 5Bh ; '['
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_2C0E
		xor	eax, eax
		jmp	loc_2DD5
; ---------------------------------------------------------------------------

loc_2C0E:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+55j
		mov	eax, [ebp+arg_0]
		push	eax		; int
		lea	ecx, [ebp+var_2C] ; this
		call	??0FinalValueNode@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::FinalValueNode::FinalValueNode(int)
		mov	[ebp+var_4], 0
		lea	eax, [ebp+var_2C]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ecx+4]
		push	edx
		call	_uhash_find_56
		add	esp, 8
		mov	[ebp+var_38], eax
		cmp	[ebp+var_38], 0
		jz	short loc_2C63
		mov	eax, [ebp+var_38]
		mov	ecx, [eax+8]
		mov	[ebp+var_170], ecx
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_2C] ; this
		call	??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(void)
		mov	eax, [ebp+var_170]
		jmp	loc_2DD5
; ---------------------------------------------------------------------------

loc_2C63:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+8Bj
		push	10h		; unsigned int
		call	??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator	new(uint)
		add	esp, 4
		mov	[ebp+var_158], eax
		mov	byte ptr [ebp+var_4], 1
		cmp	[ebp+var_158], 0
		jz	short loc_2C97
		mov	eax, [ebp+arg_0]
		push	eax		; int
		mov	ecx, [ebp+var_158] ; this
		call	??0FinalValueNode@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::FinalValueNode::FinalValueNode(int)
		mov	[ebp+var_178], eax
		jmp	short loc_2CA1
; ---------------------------------------------------------------------------

loc_2C97:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+CEj
		mov	[ebp+var_178], 0

loc_2CA1:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+E5j
		mov	ecx, [ebp+var_178]
		mov	[ebp+var_164], ecx
		mov	byte ptr [ebp+var_4], 0
		mov	edx, [ebp+var_164]
		mov	[ebp+var_44], edx
		cmp	[ebp+var_44], 0
		jnz	short loc_2CED
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 7
		mov	[ebp+var_14C], 0
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_2C] ; this
		call	??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(void)
		mov	eax, [ebp+var_14C]
		jmp	loc_2DD5
; ---------------------------------------------------------------------------

loc_2CED:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+10Ej
		mov	eax, [ebp+arg_4]
		push	eax
		push	1
		mov	ecx, [ebp+var_44]
		push	ecx
		mov	edx, [ebp+var_14]
		mov	eax, [edx+4]
		push	eax
		call	_uhash_puti_56
		add	esp, 10h
		mov	[ebp+var_50], eax
		cmp	[ebp+var_50], 0
		jz	short loc_2D34
		mov	eax, ds:?__LINE__Var@?1??registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@23@HAAW4UErrorCode@@@Z@4JA ; long `icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)'::`2'::__LINE__Var
		add	eax, 14h
		mov	esi, esp
		push	eax		; Line
		push	offset ??_C@_1HA@PLIPHOHL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; "d:\\mozilla\\intl\\icu\\source\\common\"...
		push	offset ??_C@_1BI@NHIICENI@?$AAo?$AAl?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@ ; "oldValue==0"
		call	dword ptr ds:__imp___wassert
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2D34:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+15Dj
		mov	eax, [ebp+arg_4]
		mov	ecx, [eax]
		push	ecx
		call	?U_FAILURE@@YACW4UErrorCode@@@Z	; U_FAILURE(UErrorCode)
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_2DB7
		mov	eax, [ebp+var_44]
		mov	[ebp+var_134], eax
		mov	ecx, [ebp+var_134]
		mov	[ebp+var_140], ecx
		cmp	[ebp+var_140], 0
		jz	short loc_2D8C
		mov	esi, esp
		push	1
		mov	edx, [ebp+var_140]
		mov	eax, [edx]
		mov	ecx, [ebp+var_140]
		mov	edx, [eax]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_178], eax
		jmp	short loc_2D96
; ---------------------------------------------------------------------------

loc_2D8C:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+1B5j
		mov	[ebp+var_178], 0

loc_2D96:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+1DAj
		mov	[ebp+var_128], 0
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_2C] ; this
		call	??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(void)
		mov	eax, [ebp+var_128]
		jmp	short loc_2DD5
; ---------------------------------------------------------------------------

loc_2DB7:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+197j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_11C], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		lea	ecx, [ebp+var_2C] ; this
		call	??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(void)
		mov	eax, [ebp+var_11C]

loc_2DD5:				; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+59j
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+AEj ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN17
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 178h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
$LN17		dd 1			; DATA XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+229o
		dd offset $LN16
$LN16		dd 0FFFFFFD4h, 10h	; DATA XREF: .text:00002E0Co
		dd offset $LN14
$LN14		dd 79656Bh		; DATA XREF: .text:00002E18o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 2E20h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00002E5Co
		lea	ecx, [ebp-2Ch]	; this
		jmp	??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(void)
__unwindfunclet$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00002E64o
		mov	eax, [ebp-158h]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		pop	ecx
		retn
__unwindfunclet$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z proc near
					; DATA XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-17Ch]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2E54h
		public ?__LINE__Var@?1??registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@23@HAAW4UErrorCode@@@Z@4JA
; long `protected: class icu_56::StringTrieBuilder::Node * __thiscall icu_56::StringTrieBuilder::registerFinalValue(int, enum  UErrorCode &)'::`2'::__LINE__Var
?__LINE__Var@?1??registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@23@HAAW4UErrorCode@@@Z@4JA dd offset word_15A
					; DATA XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+15Fr
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 2E58h
__unwindtable$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00002E70o
		dd offset __unwindfunclet$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z$0
		dd 0
		dd offset __unwindfunclet$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z$1
__ehfuncinfo$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z dd	19930522h, 2
					; DATA XREF: __ehhandler$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$?registerFinalValue@StringTrieBuilder@icu_56@@IAEPAVNode@12@HAAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2E8Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::FinalValueNode::FinalValueNode(icu_56::StringTrieBuilder::FinalValueNode	*this, int)
		public ??0FinalValueNode@StringTrieBuilder@icu_56@@QAE@H@Z
??0FinalValueNode@StringTrieBuilder@icu_56@@QAE@H@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+65p
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+DAp

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		add	eax, 2777775h
		push	eax
		mov	ecx, [ebp+var_8]
		call	??0Node@StringTrieBuilder@icu_56@@QAE@H@Z ; icu_56::StringTrieBuilder::Node::Node(int)
		mov	eax, [ebp+var_8]
		mov	dword ptr [eax], offset	??_7FinalValueNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::FinalValueNode::`vftable'
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+0Ch], ecx
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??0FinalValueNode@StringTrieBuilder@icu_56@@QAE@H@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2EECh
		dd offset ??_R4FinalValueNode@StringTrieBuilder@icu_56@@6B@ ; const icu_56::StringTrieBuilder::FinalValueNode::`RTTI Complete Object Locator'
		public ??_7FinalValueNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::FinalValueNode::`vftable'
??_7FinalValueNode@StringTrieBuilder@icu_56@@6B@ dd offset ??_EFinalValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: icu_56::StringTrieBuilder::FinalValueNode::FinalValueNode(int)+37o
					; icu_56::StringTrieBuilder::FinalValueNode::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ??8FinalValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z	; icu_56::StringTrieBuilder::FinalValueNode::operator==(icu_56::StringTrieBuilder::Node	const &)
		dd offset ?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z ;	icu_56::StringTrieBuilder::Node::markRightEdgesFirst(int)
		dd offset ?write@FinalValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z ; icu_56::StringTrieBuilder::FinalValueNode::write(icu_56::StringTrieBuilder &)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F04h
		public ??_R4FinalValueNode@StringTrieBuilder@icu_56@@6B@
; const	icu_56::StringTrieBuilder::FinalValueNode::`RTTI Complete Object Locator'
??_R4FinalValueNode@StringTrieBuilder@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:00002EECo
		dd offset ??_R0?AVFinalValueNode@StringTrieBuilder@icu_56@@@8 ;	icu_56::StringTrieBuilder::FinalValueNode `RTTI	Type Descriptor'
		dd offset ??_R3FinalValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2F18h
		public ??_R0?AVFinalValueNode@StringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder::FinalValueNode `RTTI	Type Descriptor'
??_R0?AVFinalValueNode@StringTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002F10o
					; .rdata$r:icu_56::StringTrieBuilder::FinalValueNode::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avfinalvalue	db '.?AVFinalValueNode@StringTrieBuilder@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F50h
		public ??_R3FinalValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Class Hierarchy Descriptor'
??_R3FinalValueNode@StringTrieBuilder@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:00002F14o
					; .rdata$r:00002F8Co
		dd 4
		dd offset ??_R2FinalValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Base Class	Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F60h
		public ??_R2FinalValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Base	Class Array'
??_R2FinalValueNode@StringTrieBuilder@icu_56@@8	dd offset ??_R1A@?0A@EA@FinalValueNode@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00002F5Co
					; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@Node@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::Node::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2F74h
		public ??_R1A@?0A@EA@FinalValueNode@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@FinalValueNode@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVFinalValueNode@StringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::FinalValueNode::`RTTI Base Class Array'o
					; icu_56::StringTrieBuilder::FinalValueNode `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset __RTC_Shutdown_rtc$TMZ
		dd offset ??_R3FinalValueNode@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::FinalValueNode::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2F90h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::StringTrieBuilder::FinalValueNode::`scalar deleting	destructor'(unsigned int)
		public ??_GFinalValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z
??_GFinalValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8] ; this
		call	??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(void)
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_2FCF
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator	delete(void *)
		add	esp, 4

loc_2FCF:				; CODE XREF: icu_56::StringTrieBuilder::FinalValueNode::`scalar	deleting destructor'(uint)+31j
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GFinalValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2FE8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall icu_56::StringTrieBuilder::FinalValueNode::~FinalValueNode(icu_56::StringTrieBuilder::FinalValueNode *__hidden this)
		public ??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ
??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ proc	near
					; CODE XREF: icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+A3p
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+12Dp	...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+var_8]
		call	??1Node@StringTrieBuilder@icu_56@@UAE@XZ ; icu_56::StringTrieBuilder::Node::~Node(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1FinalValueNode@StringTrieBuilder@icu_56@@UAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3028h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__cdecl	icu_56::StringTrieBuilder::hashNode(const void *)
		public ?hashNode@StringTrieBuilder@icu_56@@SACPBX@Z
?hashNode@StringTrieBuilder@icu_56@@SACPBX@Z proc near ; CODE XREF: _hashStringTrieNode+22p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	ecx, [ebp+arg_0]
		call	?hashCode@Node@StringTrieBuilder@icu_56@@QBEHXZ	; icu_56::StringTrieBuilder::Node::hashCode(void)
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?hashNode@StringTrieBuilder@icu_56@@SACPBX@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

;
; Exported entry
;
; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3064h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed __int8	__cdecl	icu_56::StringTrieBuilder::equalNodes(const void *, const void *)
		public ?equalNodes@StringTrieBuilder@icu_56@@SACPBX0@Z
?equalNodes@StringTrieBuilder@icu_56@@SACPBX0@Z	proc near
					; CODE XREF: _equalStringTrieNodes+26p

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+8]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?equalNodes@StringTrieBuilder@icu_56@@SACPBX0@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 30B0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::Node::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z
??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z	proc near
					; CODE XREF: icu_56::StringTrieBuilder::FinalValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+36p
					; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+36p ...

var_D0		= byte ptr -0D0h
var_CD		= byte ptr -0CDh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jz	short loc_3123
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	___RTtypeid
		add	esp, 4
		mov	esi, esp
		push	eax
		mov	edx, [ebp+var_8]
		push	edx
		call	___RTtypeid
		add	esp, 4
		mov	ecx, eax
		call	dword ptr ds:__imp_??8type_info@@QBE_NABV0@@Z ;	type_info::operator==(type_info	const &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, al
		test	eax, eax
		jz	short loc_311A
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	eax, [ecx+4]
		cmp	eax, [edx+4]
		jz	short loc_3123

loc_311A:				; CODE XREF: icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+5Aj
		mov	[ebp+var_CD], 0
		jmp	short loc_312A
; ---------------------------------------------------------------------------

loc_3123:				; CODE XREF: icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+29j
					; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+68j
		mov	[ebp+var_CD], 1

loc_312A:				; CODE XREF: icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+71j
		mov	al, [ebp+var_CD]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3148h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual int __thiscall icu_56::StringTrieBuilder::Node::markRightEdgesFirst(int)
		public ?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z
?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z proc near
					; DATA XREF: .rdata:0000197Co
					; .rdata:00001A08o ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jnz	short loc_317D
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], ecx

loc_317D:				; CODE XREF: icu_56::StringTrieBuilder::Node::markRightEdgesFirst(int)+2Aj
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn	4
?markRightEdgesFirst@Node@StringTrieBuilder@icu_56@@UAEHH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 318Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::FinalValueNode::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8FinalValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8FinalValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near
					; DATA XREF: .rdata:00002EF8o

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_31BB
		mov	al, 1
		jmp	short loc_31E7
; ---------------------------------------------------------------------------

loc_31BB:				; CODE XREF: icu_56::StringTrieBuilder::FinalValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z	; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_31D2
		xor	al, al
		jmp	short loc_31E7
; ---------------------------------------------------------------------------

loc_31D2:				; CODE XREF: icu_56::StringTrieBuilder::FinalValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+0Ch]
		cmp	edx, [ecx+0Ch]
		setz	al

loc_31E7:				; CODE XREF: icu_56::StringTrieBuilder::FinalValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+2Dj
					; icu_56::StringTrieBuilder::FinalValueNode::operator==(icu_56::StringTrieBuilder::Node	const &)+44j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8FinalValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3200h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::FinalValueNode::write(icu_56::StringTrieBuilder::FinalValueNode *this, struct icu_56::StringTrieBuilder *)
		public ?write@FinalValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z
?write@FinalValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z proc near
					; DATA XREF: .rdata:00002F00o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+0Ch]
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+40h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?write@FinalValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3260h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::ValueNode::operator==(class	icu_56::StringTrieBuilder::Node	const &)const
		public ??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::operator==(icu_56::StringTrieBuilder::Node const	&)+36p
					; icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+36p ...

var_DC		= byte ptr -0DCh
var_D9		= byte ptr -0D9h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_328F
		mov	al, 1
		jmp	short loc_32ED
; ---------------------------------------------------------------------------

loc_328F:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z	; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_32A6
		xor	al, al
		jmp	short loc_32ED
; ---------------------------------------------------------------------------

loc_32A6:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax+0Ch]
		mov	edx, [ebp+var_14]
		movsx	eax, byte ptr [edx+0Ch]
		cmp	ecx, eax
		jnz	short loc_32E0
		mov	ecx, [ebp+var_8]
		movsx	edx, byte ptr [ecx+0Ch]
		test	edx, edx
		jz	short loc_32D7
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+10h]
		cmp	edx, [ecx+10h]
		jnz	short loc_32E0

loc_32D7:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+67j
		mov	[ebp+var_D9], 1
		jmp	short loc_32E7
; ---------------------------------------------------------------------------

loc_32E0:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+5Cj
					; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+75j
		mov	[ebp+var_D9], 0

loc_32E7:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+7Ej
		mov	al, [ebp+var_D9]

loc_32ED:				; CODE XREF: icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+2Dj
					; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+44j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3304h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8IntermediateValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8IntermediateValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near
					; DATA XREF: .rdata:000016D4o

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_3333
		mov	al, 1
		jmp	short loc_335F
; ---------------------------------------------------------------------------

loc_3333:				; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::operator==(icu_56::StringTrieBuilder::Node const	&)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z ; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_334A
		xor	al, al
		jmp	short loc_335F
; ---------------------------------------------------------------------------

loc_334A:				; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::operator==(icu_56::StringTrieBuilder::Node const	&)+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+14h]
		cmp	edx, [ecx+14h]
		setz	al

loc_335F:				; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::operator==(icu_56::StringTrieBuilder::Node const	&)+2Dj
					; icu_56::StringTrieBuilder::IntermediateValueNode::operator==(icu_56::StringTrieBuilder::Node const &)+44j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8IntermediateValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3378h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::markRightEdgesFirst(icu_56::StringTrieBuilder::IntermediateValueNode	*this, int)
		public ?markRightEdgesFirst@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEHH@Z
?markRightEdgesFirst@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEHH@Z proc near
					; DATA XREF: .rdata:000016D8o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jnz	short loc_33D0
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+14h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		mov	edx, [edx]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+arg_0], eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	[ecx+8], edx

loc_33D0:				; CODE XREF: icu_56::StringTrieBuilder::IntermediateValueNode::markRightEdgesFirst(int)+2Aj
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?markRightEdgesFirst@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEHH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 33ECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::write(icu_56::StringTrieBuilder::IntermediateValueNode *this, struct icu_56::StringTrieBuilder *)
		public ?write@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z
?write@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z proc near
					; DATA XREF: .rdata:000016DCo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+14h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		mov	edx, [edx]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+40h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?write@IntermediateValueNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 346Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::LinearMatchNode::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8LinearMatchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8LinearMatchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near

var_DC		= byte ptr -0DCh
var_D9		= byte ptr -0D9h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_349B
		mov	al, 1
		jmp	short loc_34EA
; ---------------------------------------------------------------------------

loc_349B:				; CODE XREF: icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z ; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_34B2
		xor	al, al
		jmp	short loc_34EA
; ---------------------------------------------------------------------------

loc_34B2:				; CODE XREF: icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+14h]
		cmp	edx, [ecx+14h]
		jnz	short loc_34DD
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+18h]
		cmp	edx, [ecx+18h]
		jnz	short loc_34DD
		mov	[ebp+var_D9], 1
		jmp	short loc_34E4
; ---------------------------------------------------------------------------

loc_34DD:				; CODE XREF: icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+58j
					; icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+66j
		mov	[ebp+var_D9], 0

loc_34E4:				; CODE XREF: icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+6Fj
		mov	al, [ebp+var_D9]

loc_34EA:				; CODE XREF: icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+2Dj
					; icu_56::StringTrieBuilder::LinearMatchNode::operator==(icu_56::StringTrieBuilder::Node const &)+44j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8LinearMatchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3500h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::LinearMatchNode::markRightEdgesFirst(icu_56::StringTrieBuilder::LinearMatchNode *this, int)
		public ?markRightEdgesFirst@LinearMatchNode@StringTrieBuilder@icu_56@@UAEHH@Z
?markRightEdgesFirst@LinearMatchNode@StringTrieBuilder@icu_56@@UAEHH@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jnz	short loc_3558
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+18h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+18h]
		mov	edx, [edx]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+arg_0], eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	[ecx+8], edx

loc_3558:				; CODE XREF: icu_56::StringTrieBuilder::LinearMatchNode::markRightEdgesFirst(int)+2Aj
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?markRightEdgesFirst@LinearMatchNode@StringTrieBuilder@icu_56@@UAEHH@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3574h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::ListBranchNode::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8ListBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8ListBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near
					; DATA XREF: .rdata:00002388o

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_35A6
		mov	al, 1
		jmp	loc_362E
; ---------------------------------------------------------------------------

loc_35A6:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z	; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_35BD
		xor	al, al
		jmp	short loc_362E
; ---------------------------------------------------------------------------

loc_35BD:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+43j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	[ebp+var_20], 0
		jmp	short loc_35D5
; ---------------------------------------------------------------------------

loc_35CC:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &):loc_362Aj
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax

loc_35D5:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+56j
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_20]
		cmp	ecx, [eax+24h]
		jge	short loc_362C
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_8]
		movzx	edx, word ptr [ecx+eax*2+3Ch]
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_14]
		movzx	eax, word ptr [ecx+eax*2+3Ch]
		cmp	edx, eax
		jnz	short loc_3626
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+var_20]
		mov	esi, [ebp+var_14]
		mov	eax, [ecx+eax*4+28h]
		cmp	eax, [esi+edx*4+28h]
		jnz	short loc_3626
		mov	eax, [ebp+var_20]
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+var_20]
		mov	esi, [ebp+var_14]
		mov	eax, [ecx+eax*4+10h]
		cmp	eax, [esi+edx*4+10h]
		jz	short loc_362A

loc_3626:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+84j
					; icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node	const &)+9Aj
		xor	al, al
		jmp	short loc_362E
; ---------------------------------------------------------------------------

loc_362A:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+B0j
		jmp	short loc_35CC
; ---------------------------------------------------------------------------

loc_362C:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+6Aj
		mov	al, 1

loc_362E:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+2Dj
					; icu_56::StringTrieBuilder::ListBranchNode::operator==(icu_56::StringTrieBuilder::Node	const &)+47j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8ListBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3644h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(icu_56::StringTrieBuilder::ListBranchNode *this, int)
		public ?markRightEdgesFirst@ListBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z
?markRightEdgesFirst@ListBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z proc near
					; DATA XREF: .rdata:0000238Co

var_F0		= byte ptr -0F0h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jnz	short loc_36DB
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+0Ch], ecx
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		mov	[ebp+var_20], ecx

loc_3689:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)+8Cj
		mov	eax, [ebp+var_20]
		sub	eax, 1
		mov	[ebp+var_20], eax
		mov	ecx, [ebp+var_20]
		mov	edx, [ebp+var_8]
		mov	eax, [edx+ecx*4+10h]
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_36C5
		mov	eax, [ebp+arg_0]
		sub	eax, [ebp+var_14]
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_2C]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_2C]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+arg_0], eax

loc_36C5:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)+5Fj
		mov	[ebp+var_14], 1
		cmp	[ebp+var_20], 0
		jg	short loc_3689
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+8], ecx

loc_36DB:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)+2Aj
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?markRightEdgesFirst@ListBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 36F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder::ListBranchNode *this, struct icu_56::StringTrieBuilder *)
		public ?write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z
?write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z proc near
					; DATA XREF: .rdata:00002390o

var_10C		= dword	ptr -10Ch
var_41		= byte ptr -41h
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10Ch
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_10C]
		mov	ecx, 43h ; 'C'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		sub	ecx, 1
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+eax*4+10h]
		mov	[ebp+var_20], edx
		cmp	[ebp+var_20], 0
		jnz	short loc_3744
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+0Ch]
		mov	[ebp+var_10C], ecx
		jmp	short loc_3752
; ---------------------------------------------------------------------------

loc_3744:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+40j
		mov	ecx, [ebp+var_20]
		call	?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ ; icu_56::StringTrieBuilder::Node::getOffset(void)
		mov	[ebp+var_10C], eax

loc_3752:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+4Ej
		mov	edx, [ebp+var_10C]
		mov	[ebp+var_2C], edx

loc_375B:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+9Fj
		mov	eax, [ebp+var_14]
		sub	eax, 1
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+eax*4+10h], 0
		jz	short loc_378F
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_2C]
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx+0Ch]
		push	eax
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_8]
		mov	ecx, [edx+ecx*4+10h]
		call	?writeUnlessInsideRightEdge@Node@StringTrieBuilder@icu_56@@QAEXHHAAV23@@Z ; icu_56::StringTrieBuilder::Node::writeUnlessInsideRightEdge(int,int,icu_56::StringTrieBuilder &)

loc_378F:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+7Bj
		cmp	[ebp+var_14], 0
		jg	short loc_375B
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+24h]
		sub	ecx, 1
		mov	[ebp+var_14], ecx
		cmp	[ebp+var_20], 0
		jnz	short loc_37CC
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+eax*4+28h]
		push	edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+40h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_37E6
; ---------------------------------------------------------------------------

loc_37CC:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+B1j
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_20]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_20]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_37E6:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+D6j
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		movzx	edx, word ptr [ecx+eax*2+3Ch]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax

loc_380E:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+1E7j
		mov	eax, [ebp+var_14]
		sub	eax, 1
		mov	[ebp+var_14], eax
		js	loc_38E0
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		cmp	dword ptr [ecx+eax*4+10h], 0
		jnz	short loc_383D
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+eax*4+28h]
		mov	[ebp+var_38], edx
		mov	[ebp+var_41], 1
		jmp	short loc_3894
; ---------------------------------------------------------------------------

loc_383D:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+134j
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+eax*4+10h]
		call	?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ ; icu_56::StringTrieBuilder::Node::getOffset(void)
		test	eax, eax
		jg	short loc_3876
		mov	edx, ds:?__LINE__Var@?1??write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV34@@Z@4JA ; long	`icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder &)'::`2'::__LINE__Var
		add	edx, 21h ; '!'
		mov	esi, esp
		push	edx		; Line
		push	offset ??_C@_1HA@PLIPHOHL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; "d:\\mozilla\\intl\\icu\\source\\common\"...
		push	offset ??_C@_1EC@FPEGNKG@?$AAe?$AAq?$AAu?$AAa?$AAl?$AA?$FL?$AAu?$AAn?$AAi?$AAt?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$FN?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?$DO?$AA0@ ;	"equal[unitNumber]->getOffset()>0"
		call	dword ptr ds:__imp___wassert
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3876:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+15Aj
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+eax*4+10h]
		call	?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ ; icu_56::StringTrieBuilder::Node::getOffset(void)
		mov	edx, [ebp+var_8]
		mov	ecx, [edx+8]
		sub	ecx, eax
		mov	[ebp+var_38], ecx
		mov	[ebp+var_41], 0

loc_3894:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+147j
		mov	esi, esp
		movzx	eax, [ebp+var_41]
		push	eax
		mov	ecx, [ebp+var_38]
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+40h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_8]
		movzx	edx, word ptr [ecx+eax*2+3Ch]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+38h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax
		jmp	loc_380E
; ---------------------------------------------------------------------------

loc_38E0:				; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+123j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 10Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 38F8h
		public ??_C@_1EC@FPEGNKG@?$AAe?$AAq?$AAu?$AAa?$AAl?$AA?$FL?$AAu?$AAn?$AAi?$AAt?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$FN?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?$DO?$AA0@
; wchar_t `string'
??_C@_1EC@FPEGNKG@?$AAe?$AAq?$AAu?$AAa?$AAl?$AA?$FL?$AAu?$AAn?$AAi?$AAt?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$FN?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?$DO?$AA0@:
					; DATA XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+16Do
		unicode	0, <equal[unitNumber]->
		dw 3Eh
		unicode	0, <getOffset()>
		dw 3Eh
		unicode	0, <0>,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 393Ch
		public ?__LINE__Var@?1??write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV34@@Z@4JA
; long `public:	virtual	void __thiscall	icu_56::StringTrieBuilder::ListBranchNode::write(class icu_56::StringTrieBuilder &)'::`2'::__LINE__Var
?__LINE__Var@?1??write@ListBranchNode@StringTrieBuilder@icu_56@@UAEXAAV34@@Z@4JA dd offset byte_1FD
					; DATA XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+15Cr
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3940h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: void __thiscall icu_56::StringTrieBuilder::Node::writeUnlessInsideRightEdge(int, int,	class icu_56::StringTrieBuilder	&)
		public ?writeUnlessInsideRightEdge@Node@StringTrieBuilder@icu_56@@QAEXHHAAV23@@Z
?writeUnlessInsideRightEdge@Node@StringTrieBuilder@icu_56@@QAEXHHAAV23@@Z proc near
					; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+96p
					; icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder &)+40p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jge	short loc_399C
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		cmp	ecx, [ebp+arg_4]
		jl	short loc_3982
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		cmp	ecx, [eax+8]
		jge	short loc_399C

loc_3982:				; CODE XREF: icu_56::StringTrieBuilder::Node::writeUnlessInsideRightEdge(int,int,icu_56::StringTrieBuilder &)+35j
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx]
		mov	ecx, [ebp+var_8]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_399C:				; CODE XREF: icu_56::StringTrieBuilder::Node::writeUnlessInsideRightEdge(int,int,icu_56::StringTrieBuilder &)+2Aj
					; icu_56::StringTrieBuilder::Node::writeUnlessInsideRightEdge(int,int,icu_56::StringTrieBuilder	&)+40j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?writeUnlessInsideRightEdge@Node@StringTrieBuilder@icu_56@@QAEXHHAAV23@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 39B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: int __thiscall icu_56::StringTrieBuilder::Node::getOffset(void)const
		public ?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ
?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ proc near
					; CODE XREF: icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder	&)+53p
					; icu_56::StringTrieBuilder::ListBranchNode::write(icu_56::StringTrieBuilder &)+153p ...

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	eax, [eax+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 39E4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::SplitBranchNode::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8SplitBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8SplitBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near
					; DATA XREF: .rdata:000026E4o

var_DC		= byte ptr -0DCh
var_D9		= byte ptr -0D9h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_3A13
		mov	al, 1
		jmp	short loc_3A74
; ---------------------------------------------------------------------------

loc_3A13:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8Node@StringTrieBuilder@icu_56@@UBECABV012@@Z	; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_3A2A
		xor	al, al
		jmp	short loc_3A74
; ---------------------------------------------------------------------------

loc_3A2A:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		movzx	ecx, word ptr [eax+10h]
		mov	edx, [ebp+var_14]
		movzx	eax, word ptr [edx+10h]
		cmp	ecx, eax
		jnz	short loc_3A67
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+var_14]
		mov	eax, [ecx+14h]
		cmp	eax, [edx+14h]
		jnz	short loc_3A67
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+var_14]
		mov	eax, [ecx+18h]
		cmp	eax, [edx+18h]
		jnz	short loc_3A67
		mov	[ebp+var_D9], 1
		jmp	short loc_3A6E
; ---------------------------------------------------------------------------

loc_3A67:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+5Cj
					; icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+6Aj ...
		mov	[ebp+var_D9], 0

loc_3A6E:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+81j
		mov	al, [ebp+var_D9]

loc_3A74:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+2Dj
					; icu_56::StringTrieBuilder::SplitBranchNode::operator==(icu_56::StringTrieBuilder::Node const &)+44j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8SplitBranchNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3A8Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::SplitBranchNode::markRightEdgesFirst(icu_56::StringTrieBuilder::SplitBranchNode *this, int)
		public ?markRightEdgesFirst@SplitBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z
?markRightEdgesFirst@SplitBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z proc near
					; DATA XREF: .rdata:000026E8o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jnz	short loc_3B13
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[eax+0Ch], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+18h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+18h]
		mov	edx, [edx]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+arg_0], eax
		mov	eax, [ebp+arg_0]
		sub	eax, 1
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+14h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		mov	edx, [edx]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+arg_0], eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	[ecx+8], edx

loc_3B13:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::markRightEdgesFirst(int)+2Aj
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?markRightEdgesFirst@SplitBranchNode@StringTrieBuilder@icu_56@@UAEHH@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3B2Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder::SplitBranchNode *this, struct icu_56::StringTrieBuilder *)
		public ?write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z
?write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z proc near
					; DATA XREF: .rdata:000026ECo

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+18h]
		call	?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ ; icu_56::StringTrieBuilder::Node::getOffset(void)
		push	eax
		mov	edx, [ebp+var_8]
		mov	eax, [edx+0Ch]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	ecx, [ecx+14h]
		call	?writeUnlessInsideRightEdge@Node@StringTrieBuilder@icu_56@@QAEXHHAAV23@@Z ; icu_56::StringTrieBuilder::Node::writeUnlessInsideRightEdge(int,int,icu_56::StringTrieBuilder &)
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+18h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+18h]
		mov	edx, [edx]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		call	?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ ; icu_56::StringTrieBuilder::Node::getOffset(void)
		test	eax, eax
		jg	short loc_3BC6
		mov	ecx, ds:?__LINE__Var@?1??write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV34@@Z@4JA ; long `icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder &)'::`2'::__LINE__Var
		add	ecx, 6
		mov	esi, esp
		push	ecx		; Line
		push	offset ??_C@_1HA@PLIPHOHL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; "d:\\mozilla\\intl\\icu\\source\\common\"...
		push	offset ??_C@_1DA@ODMBEIDI@?$AAl?$AAe?$AAs?$AAs?$AAT?$AAh?$AAa?$AAn?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?$DO?$AA0?$AA?$AA@ ; "lessThan->getOffset()>0"
		call	dword ptr ds:__imp___wassert
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3BC6:				; CODE XREF: icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder &)+72j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		call	?getOffset@Node@StringTrieBuilder@icu_56@@QBEHXZ ; icu_56::StringTrieBuilder::Node::getOffset(void)
		mov	esi, esp
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+48h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_8]
		movzx	ecx, word ptr [eax+10h]
		mov	esi, esp
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+38h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3C24h
		public ??_C@_1DA@ODMBEIDI@?$AAl?$AAe?$AAs?$AAs?$AAT?$AAh?$AAa?$AAn?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?$DO?$AA0?$AA?$AA@
; wchar_t `string'
??_C@_1DA@ODMBEIDI@?$AAl?$AAe?$AAs?$AAs?$AAT?$AAh?$AAa?$AAn?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?$DO?$AA0?$AA?$AA@:
					; DATA XREF: icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder &)+85o
		unicode	0, <lessThan->
		dw 3Eh
		unicode	0, <getOffset()>
		dw 3Eh
		unicode	0, <0>,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 3C54h
		public ?__LINE__Var@?1??write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV34@@Z@4JA
; long `public:	virtual	void __thiscall	icu_56::StringTrieBuilder::SplitBranchNode::write(class	icu_56::StringTrieBuilder &)'::`2'::__LINE__Var
?__LINE__Var@?1??write@SplitBranchNode@StringTrieBuilder@icu_56@@UAEXAAV34@@Z@4JA dd 23Eh
					; DATA XREF: icu_56::StringTrieBuilder::SplitBranchNode::write(icu_56::StringTrieBuilder &)+74r
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3C58h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual signed char __thiscall icu_56::StringTrieBuilder::BranchHeadNode::operator==(class icu_56::StringTrieBuilder::Node const &)const
		public ??8BranchHeadNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z
??8BranchHeadNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z proc near
					; DATA XREF: .rdata:00001AACo

var_DC		= byte ptr -0DCh
var_D9		= byte ptr -0D9h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_0]
		jnz	short loc_3C87
		mov	al, 1
		jmp	short loc_3CD6
; ---------------------------------------------------------------------------

loc_3C87:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node const &)+29j
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		call	??8ValueNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z ; icu_56::StringTrieBuilder::ValueNode::operator==(icu_56::StringTrieBuilder::Node const &)
		movsx	ecx, al
		test	ecx, ecx
		jnz	short loc_3C9E
		xor	al, al
		jmp	short loc_3CD6
; ---------------------------------------------------------------------------

loc_3C9E:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node const &)+40j
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+14h]
		cmp	edx, [ecx+14h]
		jnz	short loc_3CC9
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		mov	edx, [eax+18h]
		cmp	edx, [ecx+18h]
		jnz	short loc_3CC9
		mov	[ebp+var_D9], 1
		jmp	short loc_3CD0
; ---------------------------------------------------------------------------

loc_3CC9:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node const &)+58j
					; icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node	const &)+66j
		mov	[ebp+var_D9], 0

loc_3CD0:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node const &)+6Fj
		mov	al, [ebp+var_D9]

loc_3CD6:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node const &)+2Dj
					; icu_56::StringTrieBuilder::BranchHeadNode::operator==(icu_56::StringTrieBuilder::Node	const &)+44j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??8BranchHeadNode@StringTrieBuilder@icu_56@@UBECABVNode@12@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3CECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall icu_56::StringTrieBuilder::BranchHeadNode::markRightEdgesFirst(icu_56::StringTrieBuilder::BranchHeadNode *this, int)
		public ?markRightEdgesFirst@BranchHeadNode@StringTrieBuilder@icu_56@@UAEHH@Z
?markRightEdgesFirst@BranchHeadNode@StringTrieBuilder@icu_56@@UAEHH@Z proc near
					; DATA XREF: .rdata:00001AB0o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		cmp	dword ptr [eax+8], 0
		jnz	short loc_3D44
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+18h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+18h]
		mov	edx, [edx]
		mov	eax, [edx+0Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+arg_0], eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	[ecx+8], edx

loc_3D44:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::markRightEdgesFirst(int)+2Aj
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?markRightEdgesFirst@BranchHeadNode@StringTrieBuilder@icu_56@@UAEHH@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 3D60h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall icu_56::StringTrieBuilder::BranchHeadNode::write(icu_56::StringTrieBuilder::BranchHeadNode *this, struct icu_56::StringTrieBuilder *)
		public ?write@BranchHeadNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z
?write@BranchHeadNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z proc near
					; DATA XREF: .rdata:00001AB4o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, [ebp+var_8]
		mov	edx, [ecx+18h]
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+18h]
		mov	edx, [edx]
		mov	eax, [edx+10h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	esi, esp
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+2Ch]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		cmp	[ecx+14h], eax
		jg	short loc_3DF8
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		sub	ecx, 1
		mov	esi, esp
		push	ecx
		mov	edx, [ebp+var_8]
		mov	eax, [edx+10h]
		push	eax
		mov	ecx, [ebp+var_8]
		movzx	edx, byte ptr [ecx+0Ch]
		push	edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax
		jmp	short loc_3E45
; ---------------------------------------------------------------------------

loc_3DF8:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::write(icu_56::StringTrieBuilder	&)+5Fj
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+14h]
		sub	ecx, 1
		mov	esi, esp
		push	ecx
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	ecx, [ebp+arg_0]
		mov	edx, [eax+38h]
		call	edx
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+10h]
		push	ecx
		mov	edx, [ebp+var_8]
		movzx	eax, byte ptr [edx+0Ch]
		push	eax
		mov	ecx, [ebp+arg_0]
		mov	edx, [ecx]
		mov	ecx, [ebp+arg_0]
		mov	eax, [edx+44h]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_8]
		mov	[ecx+8], eax

loc_3E45:				; CODE XREF: icu_56::StringTrieBuilder::BranchHeadNode::write(icu_56::StringTrieBuilder	&)+96j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?write@BranchHeadNode@StringTrieBuilder@icu_56@@UAEXAAV23@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::UObject `RTTI Type Descriptor'o
					; .data:icu_56::UMemory	`RTTI Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::UObject::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:off_13Co
					; .rdata:000003FCo ...
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn ??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::UObject::`scalar deleting destructor'(uint)+37p
					; icu_56::UObject::`vector deleting destructor'(uint)+75p ...
; _DWORD __thiscall icu_56::UObject::~UObject(icu_56::UObject *__hidden	this)
		extrn ??1UObject@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::UObject::`scalar deleting destructor'(uint)+26p
					; icu_56::UObject::`vector deleting destructor'(uint)+64p ...
		extrn __RTC_CheckEsp:near
					; CODE XREF: icu_56::UObject::`scalar deleting destructor'(uint)+4Dp
					; icu_56::UObject::`vector deleting destructor'(uint)+8Bp ...
; void __cdecl icu_56::UMemory::operator delete[](void *)
		extrn ??_VUMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: icu_56::UObject::`vector deleting destructor'(uint)+51p
					; icu_56::StringTrieBuilder::`vector deleting destructor'(uint)+51p
; void __stdcall `eh vector destructor iterator'(void *, unsigned int, int, void (__thiscall *)(void *))
		extrn ??_M@YGXPAXIHP6EX0@Z@Z:near
					; CODE XREF: icu_56::UObject::`vector deleting destructor'(uint)+3Dp
					; icu_56::StringTrieBuilder::`vector deleting destructor'(uint)+3Dp
		extrn __purecall:near	; DATA XREF: .rdata:00000400o
					; .rdata:00000404o ...
		extrn ___security_cookie:near
					; DATA XREF: icu_56::StringTrieBuilder::~StringTrieBuilder(void)+2Er
					; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+20r ...
		extrn ___CxxFrameHandler3:near
					; CODE XREF: __ehhandler$??1StringTrieBuilder@icu_56@@MAE@XZ+19j
					; __ehhandler$?makeNode@StringTrieBuilder@icu_56@@IAEPAVNode@12@HHHAAW4UErrorCode@@@Z+19j ...
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near
					; CODE XREF: __ehhandler$??1StringTrieBuilder@icu_56@@MAE@XZ+Fp
					; icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+432p ...
		extrn _uhash_setKeyDeleter_56:near
					; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+91p
		extrn _uprv_deleteUObject_56:near
					; DATA XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &):loc_7B9o
		extrn _uhash_openSize_56:near
					; CODE XREF: icu_56::StringTrieBuilder::createCompactBuilder(int,UErrorCode &)+4Ep
		extrn _uhash_close_56:near
					; CODE XREF: icu_56::StringTrieBuilder::deleteCompactBuilder(void)+2Ap
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near
					; CODE XREF: icu_56::StringTrieBuilder::writeBranchSubNode(int,int,int,int)+423p
					; icu_56::StringTrieBuilder::makeBranchSubNode(int,int,int,int,UErrorCode &)+496p ...
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn ??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode	&)+26Cp
					; icu_56::StringTrieBuilder::makeNode(int,int,int,UErrorCode &)+314p ...
; public: virtual void * __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::`scalar deleting destructor'(unsigned int)
		extrn ??_GIntermediateValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::IntermediateValueNode::`vector deleting destructor'(unsigned int)
		extrn ??_EIntermediateValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::IntermediateValueNode::`vftable'o
; public: virtual void * __thiscall icu_56::StringTrieBuilder::ValueNode::`scalar deleting destructor'(unsigned int)
		extrn ??_GValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::ValueNode::`vector deleting destructor'(unsigned int)
		extrn ??_EValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::ValueNode::`vftable'o
; public: virtual void * __thiscall icu_56::StringTrieBuilder::Node::`scalar deleting destructor'(unsigned int)
		extrn ??_GNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::Node::`vector deleting destructor'(unsigned int)
		extrn ??_ENode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near	; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::Node::`vftable'o
; public: virtual void * __thiscall icu_56::StringTrieBuilder::BranchHeadNode::`scalar deleting	destructor'(unsigned int)
		extrn ??_GBranchHeadNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::BranchHeadNode::`vector deleting	destructor'(unsigned int)
		extrn ??_EBranchHeadNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::BranchHeadNode::`vftable'o
; public: virtual void * __thiscall icu_56::StringTrieBuilder::ListBranchNode::`scalar deleting	destructor'(unsigned int)
		extrn ??_GListBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::ListBranchNode::`vector deleting	destructor'(unsigned int)
		extrn ??_EListBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::ListBranchNode::`vftable'o
; public: virtual void * __thiscall icu_56::StringTrieBuilder::BranchNode::`scalar deleting destructor'(unsigned int)
		extrn ??_GBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::BranchNode::`vector deleting destructor'(unsigned int)
		extrn ??_EBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ;	weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::BranchNode::`vftable'o
; public: virtual void * __thiscall icu_56::StringTrieBuilder::SplitBranchNode::`scalar	deleting destructor'(unsigned int)
		extrn ??_GSplitBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::SplitBranchNode::`vector	deleting destructor'(unsigned int)
		extrn ??_ESplitBranchNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::SplitBranchNode::`vftable'o
; void __cdecl __wassert(const wchar_t *Message, const wchar_t *File, unsigned int Line)
		extrn __imp___wassert:near
					; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+14Dp
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+174p	...
		extrn _uhash_puti_56:near
					; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+127p
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+14Ep
		extrn _uhash_find_56:near
					; CODE XREF: icu_56::StringTrieBuilder::registerNode(icu_56::StringTrieBuilder::Node *,UErrorCode &)+ADp
					; icu_56::StringTrieBuilder::registerFinalValue(int,UErrorCode &)+7Cp
; public: virtual void * __thiscall icu_56::StringTrieBuilder::FinalValueNode::`scalar deleting	destructor'(unsigned int)
		extrn ??_GFinalValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::StringTrieBuilder::FinalValueNode::`vector deleting	destructor'(unsigned int)
		extrn ??_EFinalValueNode@StringTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::StringTrieBuilder::FinalValueNode::`vftable'o
; __declspec(dllimport)	public:	bool __thiscall	type_info::operator==(class type_info const &)const
		extrn __imp_??8type_info@@QBE_NABV0@@Z:near
					; CODE XREF: icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+48p
					; DATA XREF: icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+48r
		extrn ___RTtypeid:near	; CODE XREF: icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+2Fp
					; icu_56::StringTrieBuilder::Node::operator==(icu_56::StringTrieBuilder::Node const &)+3Ep


		end

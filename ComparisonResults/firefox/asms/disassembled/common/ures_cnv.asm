;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	A2F05F6B7E15E9718373C0D041898A0A
; Input	CRC32 :	45745B0F

; File Name   :	D:\compspace\objfiles\firefox\common\ures_cnv.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"
;
; Exported entry
;

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_rtc$TMZ, fs:nothing,	gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _ures_openU_56
_ures_openU_56	proc near

var_4F0		= byte ptr -4F0h
var_42C		= dword	ptr -42Ch
var_420		= dword	ptr -420h
var_414		= dword	ptr -414h
var_408		= byte ptr -408h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 4F0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_4F0]
		mov	ecx, 13Ch
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		lea	eax, [ebp+var_408]
		mov	[ebp+var_420], eax
		cmp	[ebp+arg_8], 0
		jz	short loc_42
		mov	eax, [ebp+arg_8]
		cmp	dword ptr [eax], 0
		jle	short loc_49

loc_42:					; CODE XREF: _ures_openU_56+38j
		xor	eax, eax
		jmp	loc_157
; ---------------------------------------------------------------------------

loc_49:					; CODE XREF: _ures_openU_56+40j
		cmp	[ebp+arg_0], 0
		jnz	short loc_5E
		mov	[ebp+var_420], 0
		jmp	loc_140
; ---------------------------------------------------------------------------

loc_5E:					; CODE XREF: _ures_openU_56+4Dj
		mov	eax, [ebp+arg_0]
		push	eax
		call	_u_strlen_56
		add	esp, 4
		mov	[ebp+var_414], eax
		cmp	[ebp+var_414], 400h
		jb	short loc_91
		mov	eax, [ebp+arg_8]
		mov	dword ptr [eax], 1
		xor	eax, eax
		jmp	loc_157
; ---------------------------------------------------------------------------
		jmp	loc_140
; ---------------------------------------------------------------------------

loc_91:					; CODE XREF: _ures_openU_56+7Aj
		mov	eax, [ebp+var_414]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_uprv_isInvariantUString_56
		add	esp, 8
		movsx	edx, al
		test	edx, edx
		jz	short loc_CA
		mov	eax, [ebp+var_414]
		add	eax, 1
		push	eax
		mov	ecx, [ebp+var_420]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_u_UCharsToChars_56
		add	esp, 0Ch
		jmp	short loc_140
; ---------------------------------------------------------------------------

loc_CA:					; CODE XREF: _ures_openU_56+A9j
		mov	eax, [ebp+arg_8]
		push	eax
		call	_u_getDefaultConverter_56
		add	esp, 4
		mov	[ebp+var_42C], eax
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+var_414]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		push	400h
		mov	eax, [ebp+var_420]
		push	eax
		mov	ecx, [ebp+var_42C]
		push	ecx
		call	_ucnv_fromUChars_56
		add	esp, 18h
		mov	[ebp+var_414], eax
		mov	eax, [ebp+var_42C]
		push	eax
		call	_u_releaseDefaultConverter_56
		add	esp, 4
		mov	eax, [ebp+arg_8]
		cmp	dword ptr [eax], 0
		jle	short loc_127
		xor	eax, eax
		jmp	short loc_157
; ---------------------------------------------------------------------------

loc_127:				; CODE XREF: _ures_openU_56+121j
		cmp	[ebp+var_414], 400h
		jb	short loc_140
		mov	eax, [ebp+arg_8]
		mov	dword ptr [eax], 1
		xor	eax, eax
		jmp	short loc_157
; ---------------------------------------------------------------------------

loc_140:				; CODE XREF: _ures_openU_56+59j
					; _ures_openU_56+8Cj ...
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx
		mov	edx, [ebp+var_420]
		push	edx
		call	_ures_open_56
		add	esp, 0Ch

loc_157:				; CODE XREF: _ures_openU_56+44j
					; _ures_openU_56+87j ...
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN15
		call	@_RTC_CheckStackVars@8
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4
		add	esp, 4F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_ures_openU_56	endp

; ---------------------------------------------------------------------------
		align 4
$LN15		dd 1			; DATA XREF: _ures_openU_56+15Bo
		dd offset $LN14
$LN14		dd 0FFFFFBF8h, 400h	; DATA XREF: .text:0000018Co
		dd offset $LN13		; "pathBuffer"
$LN13		db 'pathBuffer',0       ; DATA XREF: .text:00000198o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 1A8h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 1ACh
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _ures_open_56:near ; CODE	XREF: _ures_openU_56+14Fp
		extrn _u_releaseDefaultConverter_56:near ; CODE	XREF: _ures_openU_56+113p
		extrn _ucnv_fromUChars_56:near ; CODE XREF: _ures_openU_56+FEp
		extrn _u_getDefaultConverter_56:near ; CODE XREF: _ures_openU_56+CEp
		extrn _u_UCharsToChars_56:near ; CODE XREF: _ures_openU_56+C0p
		extrn _uprv_isInvariantUString_56:near ; CODE XREF: _ures_openU_56+9Cp
		extrn _u_strlen_56:near	; CODE XREF: _ures_openU_56+62p
		extrn ___security_cookie:near ;	DATA XREF: _ures_openU_56+1Er
		extrn __RTC_CheckEsp:near ; CODE XREF: _ures_openU_56+17Dp
		extrn @__security_check_cookie@4:near ;	CODE XREF: _ures_openU_56+170p
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _ures_openU_56+161p
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo


		end

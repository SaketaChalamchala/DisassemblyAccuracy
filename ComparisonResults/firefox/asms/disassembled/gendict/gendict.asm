;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	6667378A1CF72141E662B6B452BCAA5B
; Input	CRC32 :	404CDE38

; File Name   :	D:\compspace\objfiles\firefox\gendict\gendict.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		public ??_C@_05PMBAOCDH@quiet?$AA@
; `string'
??_C@_05PMBAOCDH@quiet?$AA@ db 'quiet',0 ; DATA XREF: .data:000000F8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ??_C@_09IFONHNKG@transform?$AA@
; `string'
??_C@_09IFONHNKG@transform?$AA@	db 'transform',0 ; DATA XREF: .data:000000E4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ??_C@_05FBJAGGIG@bytes?$AA@
; `string'
??_C@_05FBJAGGIG@bytes?$AA@ db 'bytes',0 ; DATA XREF: .data:000000D0o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ??_C@_06CLBMJIBI@uchars?$AA@
; `string'
??_C@_06CLBMJIBI@uchars?$AA@ db	'uchars',0 ; DATA XREF: .data:000000BCo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 24h
		public ??_C@_09JHBDCMB@copyright?$AA@
; `string'
??_C@_09JHBDCMB@copyright?$AA@ db 'copyright',0 ; DATA XREF: .data:000000A8o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ??_C@_0L@JMMPKMPC@icudatadir?$AA@
; `string'
??_C@_0L@JMMPKMPC@icudatadir?$AA@ db 'icudatadir',0 ; DATA XREF: .data:00000094o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 3Ch
		public ??_C@_07KBAMPNJK@verbose?$AA@
; `string'
??_C@_07KBAMPNJK@verbose?$AA@ db 'verbose',0 ; DATA XREF: .data:00000080o
					; .rdata$r:00001ED0o ...
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44h
		public ??_C@_04PCJFHION@help?$AA@
; `string'
??_C@_04PCJFHION@help?$AA@ db 'help',0  ; DATA XREF: .data:_optionso
					; .data:0000006Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 4Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
		public ?startTime@@3NA
; double startTime
?startTime@@3NA	dq ?			; DATA XREF: _main+12Cw
					; elapsedTime(void)+23r
_progName	dd ?			; DATA XREF: _main+45w	_main+E4Fr ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 58h
_options	dd offset ??_C@_04PCJFHION@help?$AA@ ; DATA XREF: _main+4Bo
					; "help"
		dd 3 dup(0)
		db 68h,	0
byte_6A		db 0			; DATA XREF: _main:loc_1CBr
		align 4
		dd offset ??_C@_04PCJFHION@help?$AA@ ; "help"
		dd 3 dup(0)
		db 3Fh,	0
byte_7E		db 0			; DATA XREF: _main+B6r
		align 10h
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@	; "verbose"
		align 10h
		db 76h,	0
byte_92		db 0			; DATA XREF: _main:loc_1EBr
		align 4
		dd offset ??_C@_0L@JMMPKMPC@icudatadir?$AA@ ; "icudatadir"
dword_98	dd 0			; DATA XREF: _main+13Dr
		dd 2 dup(0)
		db 69h,	1
byte_A6		db 0			; DATA XREF: _main+132r
		align 4
		dd offset ??_C@_09JHBDCMB@copyright?$AA@ ; "copyright"
		dd 3 dup(0)
		db 63h,	0
byte_BA		db 0			; DATA XREF: _main+152r
		align 4
		dd offset ??_C@_06CLBMJIBI@uchars?$AA@ ; "uchars"
		dd 3 dup(0)
		db 1, 0
byte_CE		db 0			; DATA XREF: _main:loc_284r
		align 10h
		dd offset ??_C@_05FBJAGGIG@bytes?$AA@ ;	"bytes"
		align 10h
		db 1, 0
byte_E2		db 0			; DATA XREF: _main+16Br _main:loc_2CAr
		align 4
		dd offset ??_C@_09IFONHNKG@transform?$AA@ ; "transform"
; char *dword_E8
dword_E8	dd 0			; DATA XREF: _main+3CDr
		dd 2 dup(0)
		db 2 dup(1)
byte_F6		db 0			; DATA XREF: _main+1B6r _main:loc_4E2r
		align 4
		dd offset ??_C@_05PMBAOCDH@quiet?$AA@ ;	"quiet"
		dd 3 dup(0)
		db 71h,	0
byte_10A	db 0			; DATA XREF: _main+D3r
		align 4
_dataInfo	dd 14h,	20000h,	74636944h, 1, 0	; DATA XREF: _main+B7Do
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 120h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

var_3AC		= dword	ptr -3ACh
var_3A8		= dword	ptr -3A8h
var_3A0		= dword	ptr -3A0h
var_394		= dword	ptr -394h
var_34C		= dword	ptr -34Ch
var_244		= dword	ptr -244h
var_238		= dword	ptr -238h
var_22C		= dword	ptr -22Ch
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_204		= dword	ptr -204h
var_1F8		= byte ptr -1F8h
var_1E8		= byte ptr -1E8h
var_1A0		= dword	ptr -1A0h
var_194		= dword	ptr -194h
var_188		= dword	ptr -188h
EndPtr		= dword	ptr -17Ch
Str		= byte ptr -170h
var_158		= dword	ptr -158h
var_14C		= dword	ptr -14Ch
var_140		= dword	ptr -140h
var_131		= byte ptr -131h
var_128		= dword	ptr -128h
var_11C		= dword	ptr -11Ch
var_110		= dword	ptr -110h
var_104		= dword	ptr -104h
var_F5		= byte ptr -0F5h
var_E9		= byte ptr -0E9h
var_E0		= byte ptr -0E0h
var_98		= byte ptr -98h
var_80		= dword	ptr -80h
var_74		= dword	ptr -74h
var_68		= byte ptr -68h
var_51		= byte ptr -51h
var_48		= dword	ptr -48h
var_3C		= dword	ptr -3Ch
var_30		= dword	ptr -30h
var_21		= byte ptr -21h
var_15		= byte ptr -15h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
argc		= dword	ptr  8
argv		= dword	ptr  0Ch
envp		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$_main
		mov	eax, large fs:0
		push	eax
		sub	esp, 3A0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_3AC]
		mov	ecx, 0E8h ; 'è'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	eax, [ebp+argv]
		mov	ecx, [eax]
		mov	ds:_progName, ecx
		push	offset _options
		push	9
		mov	eax, [ebp+argv]
		push	eax
		mov	ecx, [ebp+argc]
		push	ecx
		call	_u_parseArgs
		add	esp, 10h
		mov	[ebp+argc], eax
		cmp	[ebp+argc], 0
		jge	short loc_1CB
		mov	eax, [ebp+argc]
		neg	eax
		mov	esi, esp
		mov	ecx, [ebp+argv]
		mov	edx, [ecx+eax*4]
		push	edx
		push	offset ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ ; "error in	command	line argument \"%s\"\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_1CB:				; CODE XREF: _main+69j
		movsx	eax, ds:byte_6A
		test	eax, eax
		jnz	short loc_1E1
		movsx	eax, ds:byte_7E
		test	eax, eax
		jz	short loc_1EB

loc_1E1:				; CODE XREF: _main+B4j
		push	0		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_1EB:				; CODE XREF: _main+BFj
		mov	al, ds:byte_92
		mov	[ebp+var_15], al
		mov	al, ds:byte_10A
		mov	[ebp+var_21], al
		cmp	[ebp+argc], 3
		jge	short loc_235
		mov	esi, esp
		push	offset ??_C@_0CP@OLKHGAC@input?5and?5output?5file?5must?5both?5@ ; "input and output file must both be spec"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_235:				; CODE XREF: _main+DFj
		mov	eax, [ebp+argv]
		mov	ecx, [eax+8]
		mov	[ebp+var_30], ecx
		mov	eax, [ebp+argv]
		mov	ecx, [eax+4]
		mov	[ebp+var_3C], ecx
		call	_uprv_getRawUTCtime_56
		fstp	ds:?startTime@@3NA ; double startTime
		movsx	eax, ds:byte_A6
		test	eax, eax
		jz	short loc_26B
		mov	eax, ds:dword_98
		push	eax
		call	_u_setDataDirectory_56
		add	esp, 4

loc_26B:				; CODE XREF: _main+13Bj
		mov	[ebp+var_48], 0
		movsx	eax, ds:byte_BA
		test	eax, eax
		jz	short loc_284
		mov	[ebp+var_48], offset ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; " Copyright (C) 2015, International Busi"...

loc_284:				; CODE XREF: _main+15Bj
		movsx	eax, ds:byte_CE
		movsx	ecx, ds:byte_E2
		cmp	eax, ecx
		jnz	short loc_2CA
		mov	esi, esp
		push	offset ??_C@_0DG@OKDAHDMA@you?5must?5specify?5exactly?5one?5typ@ ; "you	must specify exactly one type of tr"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_2CA:				; CODE XREF: _main+174j
		mov	al, ds:byte_E2
		mov	[ebp+var_51], al
		movsx	eax, [ebp+var_51]
		movsx	ecx, ds:byte_F6
		cmp	eax, ecx
		jz	short loc_315
		mov	esi, esp
		push	offset ??_C@_0GB@DGJJGBCD@you?5must?5provide?5a?5transformatio@	; "you must provide a transformation for a"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_315:				; CODE XREF: _main+1BFj
		mov	esi, esp
		push	offset ??_C@_0P@KOHGMPLE@gendict?1main?$CI?$CJ?$AA@ ; "gendict/main()"
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_??0IcuToolErrorCode@icu_56@@QAE@PBD@Z ; icu_56::IcuToolErrorCode::IcuToolErrorCode(char const *)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_356
		mov	esi, esp
		mov	eax, [ebp+var_3C]
		push	eax
		push	offset ??_C@_0BE@MPNGCDMF@Opening?5file?5?$CFs?4?4?4?6?$AA@ ; "Opening file %s...\n"
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_356:				; CODE XREF: _main+219j
		mov	[ebp+var_74], offset ??_C@_05EGJIMALK@UTF?98?$AA@ ; "UTF-8"
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEPAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode *(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		push	0
		push	1
		lea	eax, [ebp+var_74]
		push	eax
		mov	ecx, [ebp+var_3C]
		push	ecx
		call	_ucbuf_open
		add	esp, 14h
		mov	[ebp+var_80], eax
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_3FF
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ ; icu_56::ErrorCode::errorName(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax
		push	offset ??_C@_0CK@FCIALHCO@error?5opening?5input?5file?3?5ICU?5Er@ ; "error opening input file: ICU Error \"%"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ ; icu_56::ErrorCode::reset(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_3FF:				; CODE XREF: _main+27Ej
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_443
		movsx	eax, [ebp+var_51]
		test	eax, eax
		jz	short loc_41B
		mov	[ebp+var_3A8], offset ??_C@_09PFDBNIIM@BytesTrie?$AA@ ;	"BytesTrie"
		jmp	short loc_425
; ---------------------------------------------------------------------------

loc_41B:				; CODE XREF: _main+2EDj
		mov	[ebp+var_3A8], offset ??_C@_0L@LGIONAHD@UCharsTrie?$AA@	; "UCharsTrie"

loc_425:				; CODE XREF: _main+2F9j
		mov	esi, esp
		mov	ecx, [ebp+var_3A8]
		push	ecx
		push	offset ??_C@_0CP@BNCOEFPB@Initializing?5dictionary?5builder?5@ ; "Initializing dictionary builder of type"...
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_443:				; CODE XREF: _main+2E5j
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEAAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode &(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; enum UErrorCode *
		movzx	eax, [ebp+var_51]
		push	eax		; char
		lea	ecx, [ebp+var_98]
		call	??0DataDict@@QAE@CAAW4UErrorCode@@@Z ; DataDict::DataDict(signed char,UErrorCode &)
		mov	byte ptr [ebp+var_4], 1
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_4E2
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ ; icu_56::ErrorCode::errorName(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax
		push	offset ??_C@_0BO@EFNGAFKA@new?5DataDict?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@ ; "new DataDict: ICU Error \"%s\"\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ ; icu_56::ErrorCode::reset(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_4E2:				; CODE XREF: _main+361j
		movsx	eax, ds:byte_F6
		test	eax, eax
		jz	short loc_4FE
		mov	eax, ds:dword_E8
		push	eax		; char *
		lea	ecx, [ebp+var_98] ; this
		call	?setTransform@DataDict@@QAEXPBD@Z ; DataDict::setTransform(char	const *)

loc_4FE:				; CODE XREF: _main+3CBj
		mov	esi, esp
		lea	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 2
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_536
		mov	esi, esp
		push	offset ??_C@_0BO@LELBGLKJ@Adding?5words?5to?5dictionary?4?4?4?$AA@ ; "Adding words to dictionary..."
		call	dword ptr ds:__imp__puts
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_536:				; CODE XREF: _main+3FDj
		mov	[ebp+var_E9], 0
		mov	[ebp+var_F5], 0
		mov	[ebp+var_104], 0
		mov	[ebp+var_110], 0
		mov	[ebp+var_11C], 0FFh
		mov	[ebp+var_128], 0
		mov	[ebp+var_131], 1

loc_573:				; CODE XREF: _main+4A0j _main+54Cj ...
		lea	eax, [ebp+var_68]
		push	eax		; icu_56::ErrorCode *
		lea	ecx, [ebp+var_E0]
		push	ecx		; icu_56::UnicodeString	*
		mov	edx, [ebp+var_80]
		push	edx		; int
		call	?readLine@@YACPAUUCHARBUF@@AAVUnicodeString@icu_56@@AAVIcuToolErrorCode@3@@Z ; readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)
		add	esp, 0Ch
		movsx	eax, al
		test	eax, eax
		jz	loc_A3D
		mov	eax, [ebp+var_104]
		add	eax, 1
		mov	[ebp+var_104], eax
		mov	esi, esp
		lea	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ ; icu_56::UnicodeString::isEmpty(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_5C2
		jmp	short loc_573
; ---------------------------------------------------------------------------

loc_5C2:				; CODE XREF: _main+49Ej
		mov	[ebp+var_140], 0
		jmp	short loc_5DD
; ---------------------------------------------------------------------------

loc_5CE:				; CODE XREF: _main+509j
		mov	eax, [ebp+var_140]
		add	eax, 1
		mov	[ebp+var_140], eax

loc_5DD:				; CODE XREF: _main+4ACj
		mov	esi, esp
		lea	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_140], eax
		jge	short loc_62B
		mov	esi, esp
		mov	eax, [ebp+var_140]
		push	eax
		lea	ecx, [ebp+var_E0]
		call	dword ptr ds:__imp_??AUnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::operator[](int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	ecx, ax
		push	ecx
		call	_u_isspace_56
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jnz	short loc_62B
		jmp	short loc_5CE
; ---------------------------------------------------------------------------

loc_62B:				; CODE XREF: _main+4D8j _main+507j
		cmp	[ebp+var_140], 0
		jnz	short loc_671
		mov	esi, esp
		mov	eax, [ebp+var_104]
		push	eax
		push	offset ??_C@_0BM@EKPFKGFP@Error?3?5no?5word?5on?5line?5?$CFi?$CB?6?$AA@	; "Error: no word on line %i!\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_131], 0
		jmp	loc_573
; ---------------------------------------------------------------------------

loc_671:				; CODE XREF: _main+512j
		mov	eax, [ebp+var_140]
		mov	[ebp+var_14C], eax
		jmp	short loc_68E
; ---------------------------------------------------------------------------

loc_67F:				; CODE XREF: _main+5BAj
		mov	eax, [ebp+var_14C]
		add	eax, 1
		mov	[ebp+var_14C], eax

loc_68E:				; CODE XREF: _main+55Dj
		mov	esi, esp
		lea	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		cmp	[ebp+var_14C], eax
		jge	short loc_6DC
		mov	esi, esp
		mov	eax, [ebp+var_14C]
		push	eax
		lea	ecx, [ebp+var_E0]
		call	dword ptr ds:__imp_??AUnicodeString@icu_56@@QBE_WH@Z ; icu_56::UnicodeString::operator[](int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	ecx, ax
		push	ecx
		call	_u_isspace_56
		add	esp, 4
		movsx	edx, al
		test	edx, edx
		jz	short loc_6DC
		jmp	short loc_67F
; ---------------------------------------------------------------------------

loc_6DC:				; CODE XREF: _main+589j _main+5B8j
		mov	eax, [ebp+var_140]
		cmp	eax, [ebp+var_14C]
		jge	loc_8F4
		mov	esi, esp
		lea	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		sub	eax, [ebp+var_14C]
		mov	[ebp+var_158], eax
		cmp	[ebp+var_158], 0Fh
		jle	short loc_755
		mov	esi, esp
		mov	eax, [ebp+var_104]
		push	eax
		push	offset ??_C@_0CD@FDBBOHPK@Error?3?5value?5too?5long?5on?5line?5?$CFi@ ;	"Error:	value too long on line %i!\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_131], 0
		jmp	loc_573
; ---------------------------------------------------------------------------

loc_755:				; CODE XREF: _main+5F6j
		mov	esi, esp
		push	0
		push	10h
		lea	eax, [ebp+Str]
		push	eax
		mov	ecx, [ebp+var_158]
		push	ecx
		mov	edx, [ebp+var_14C]
		push	edx
		lea	ecx, [ebp+var_E0]
		call	dword ptr ds:__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z ; icu_56::UnicodeString::extract(int,int,char *,int,icu_56::UnicodeString::EInvariant)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0		; Radix
		lea	eax, [ebp+EndPtr]
		push	eax		; EndPtr
		lea	ecx, [ebp+Str]
		push	ecx		; Str
		call	dword ptr ds:__imp__strtoul
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_188], eax
		mov	eax, [ebp+EndPtr]
		lea	ecx, [ebp+Str]
		cmp	eax, ecx
		jz	short loc_7E8
		mov	eax, [ebp+EndPtr]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jnz	short loc_7E8
		lea	eax, [ebp+Str]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		cmp	eax, [ebp+var_158]
		jnz	short loc_7E8
		cmp	[ebp+var_188], 0FFFFFFFFh
		jbe	short loc_825

loc_7E8:				; CODE XREF: _main+699j _main+6A6j ...
		mov	esi, esp
		mov	eax, [ebp+var_104]
		push	eax
		push	offset ??_C@_0DK@EGLJDBAN@Error?3?5value?5syntax?5error?5or?5val@ ; "Error: value syntax error or value	too "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_131], 0
		jmp	loc_573
; ---------------------------------------------------------------------------

loc_825:				; CODE XREF: _main+6C6j
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEAAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode &(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		mov	eax, [ebp+var_188]
		push	eax
		mov	esi, esp
		mov	ecx, [ebp+var_140]
		push	ecx
		push	0		; enum UErrorCode *
		lea	edx, [ebp+var_394]
		push	edx		; int
		lea	ecx, [ebp+var_E0]
		call	dword ptr ds:__imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ;	icu_56::UnicodeString::tempSubString(int,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_3A8], eax
		mov	eax, [ebp+var_3A8]
		mov	[ebp+var_3AC], eax
		mov	byte ptr [ebp+var_4], 3
		mov	ecx, [ebp+var_3AC]
		push	ecx		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_98] ; this
		call	?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z ; DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)
		mov	byte ptr [ebp+var_4], 2
		mov	esi, esp
		lea	ecx, [ebp+var_394] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E9], 1
		mov	eax, [ebp+var_110]
		add	eax, 1
		mov	[ebp+var_110], eax
		mov	eax, [ebp+var_140]
		cmp	eax, [ebp+var_11C]
		jge	short loc_8D5
		mov	eax, [ebp+var_140]
		mov	[ebp+var_11C], eax

loc_8D5:				; CODE XREF: _main+7A7j
		mov	eax, [ebp+var_140]
		cmp	eax, [ebp+var_128]
		jle	short loc_8EF
		mov	eax, [ebp+var_140]
		mov	[ebp+var_128], eax

loc_8EF:				; CODE XREF: _main+7C1j
		jmp	loc_9B9
; ---------------------------------------------------------------------------

loc_8F4:				; CODE XREF: _main+5C8j
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEAAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode &(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		push	0
		mov	esi, esp
		mov	eax, [ebp+var_140]
		push	eax
		push	0		; enum UErrorCode *
		lea	ecx, [ebp+var_34C]
		push	ecx		; int
		lea	ecx, [ebp+var_E0]
		call	dword ptr ds:__imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z ;	icu_56::UnicodeString::tempSubString(int,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_3A8], eax
		mov	edx, [ebp+var_3A8]
		mov	[ebp+var_3AC], edx
		mov	byte ptr [ebp+var_4], 4
		mov	eax, [ebp+var_3AC]
		push	eax		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_98] ; this
		call	?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z ; DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)
		mov	byte ptr [ebp+var_4], 2
		mov	esi, esp
		lea	ecx, [ebp+var_34C] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F5], 1
		mov	eax, [ebp+var_110]
		add	eax, 1
		mov	[ebp+var_110], eax
		mov	eax, [ebp+var_140]
		cmp	eax, [ebp+var_11C]
		jge	short loc_99F
		mov	eax, [ebp+var_140]
		mov	[ebp+var_11C], eax

loc_99F:				; CODE XREF: _main+871j
		mov	eax, [ebp+var_140]
		cmp	eax, [ebp+var_128]
		jle	short loc_9B9
		mov	eax, [ebp+var_140]
		mov	[ebp+var_128], eax

loc_9B9:				; CODE XREF: _main:loc_8EFj _main+88Bj
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_A38
		mov	esi, esp
		mov	eax, [ebp+var_104]
		push	eax
		mov	edi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ ; icu_56::ErrorCode::errorName(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax
		push	offset ??_C@_0EL@PIKECADD@ICU?5Error?5?$CC?$CFs?$CC?3?5Failed?5to?5add?5wo@ ; "ICU Error \"%s\": Failed	to add word to"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ ; icu_56::ErrorCode::reset(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_A38:				; CODE XREF: _main+8B0j
		jmp	loc_573
; ---------------------------------------------------------------------------

loc_A3D:				; CODE XREF: _main+46Fj
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_A78
		mov	esi, esp
		mov	eax, [ebp+var_128]
		push	eax
		mov	ecx, [ebp+var_11C]
		push	ecx
		mov	edx, [ebp+var_110]
		push	edx
		mov	eax, [ebp+var_104]
		push	eax
		push	offset ??_C@_0DK@MENJFFHJ@Processed?5?$CFd?5lines?0?5added?5?$CFd?5wor@	; "Processed %d	lines, added %d	words, min"...
		call	dword ptr ds:__imp__printf
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_A78:				; CODE XREF: _main+923j
		movsx	eax, [ebp+var_131]
		test	eax, eax
		jnz	short loc_AB0
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isSuccess@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isSuccess(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_AB0
		mov	esi, esp
		push	1
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?set@ErrorCode@icu_56@@QAEXW4UErrorCode@@@Z ; icu_56::ErrorCode::set(UErrorCode)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_AB0:				; CODE XREF: _main+961j _main+97Aj
		movsx	eax, [ebp+var_E9]
		test	eax, eax
		jz	short loc_AF0
		movsx	eax, [ebp+var_F5]
		test	eax, eax
		jz	short loc_AF0
		mov	esi, esp
		push	offset ??_C@_0DL@FNGKOPNH@warning?3?5file?5contained?5both?5val@ ; "warning: file contained both valued	and"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_AF0:				; CODE XREF: _main+999j _main+9A4j
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_B14
		movsx	eax, [ebp+var_51]
		mov	esi, esp
		push	eax
		push	offset ??_C@_0CE@ICENJNHF@Serializing?5data?4?4?4isBytesTrie?$DP?5@ ; "Serializing data...isBytesTrie? %d\n"
		call	dword ptr ds:__imp__printf
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_B14:				; CODE XREF: _main+9D6j
		mov	esi, esp
		lea	ecx, [ebp+var_1E8] ; this
		call	dword ptr ds:__imp_??0UnicodeString@icu_56@@QAE@XZ ; icu_56::UnicodeString::UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 5
		movsx	eax, [ebp+var_51]
		test	eax, eax
		jz	short loc_B92
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEAAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode &(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		lea	eax, [ebp+var_1F8]
		push	eax
		lea	ecx, [ebp+var_98]
		call	?serializeBytes@DataDict@@QAE?AVStringPiece@icu_56@@AAW4UErrorCode@@@Z ; DataDict::serializeBytes(UErrorCode &)
		mov	esi, esp
		lea	ecx, [ebp+var_1F8] ; this
		call	dword ptr ds:__imp_?size@StringPiece@icu_56@@QBEHXZ ; icu_56::StringPiece::size(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_194], eax
		mov	esi, esp
		lea	ecx, [ebp+var_1F8] ; this
		call	dword ptr ds:__imp_?data@StringPiece@icu_56@@QBEPBDXZ ;	icu_56::StringPiece::data(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1A0], eax
		jmp	short loc_BEF
; ---------------------------------------------------------------------------

loc_B92:				; CODE XREF: _main+A13j
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEAAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode &(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax		; enum UErrorCode *
		lea	eax, [ebp+var_1E8]
		push	eax		; struct icu_56::UnicodeString *
		lea	ecx, [ebp+var_98] ; this
		call	?serializeUChars@DataDict@@QAEXAAVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ; DataDict::serializeUChars(icu_56::UnicodeString &,UErrorCode &)
		mov	esi, esp
		lea	ecx, [ebp+var_1E8] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		shl	eax, 1
		mov	[ebp+var_194], eax
		mov	esi, esp
		lea	ecx, [ebp+var_1E8] ; this
		call	dword ptr ds:__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ ;	icu_56::UnicodeString::getBuffer(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_1A0], eax

loc_BEF:				; CODE XREF: _main+A70j
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_C67
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ ; icu_56::ErrorCode::errorName(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax
		push	offset ??_C@_0HN@LNAFHGH@gendict?3?5got?5failure?5of?5type?5?$CFs?5@ ; "gendict: got failure of	type %s	while s"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ ; icu_56::ErrorCode::reset(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_C67:				; CODE XREF: _main+AE6j
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_C86
		mov	esi, esp
		push	offset ??_C@_0BH@EJAIIDKN@Opening?5output?5file?4?4?4?$AA@ ; "Opening output file..."
		call	dword ptr ds:__imp__puts
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_C86:				; CODE XREF: _main+B4Dj
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEPAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode *(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		mov	eax, [ebp+var_48]
		push	eax
		push	offset _dataInfo
		mov	ecx, [ebp+var_30]
		push	ecx
		push	0
		push	0
		call	_udata_create
		add	esp, 18h
		mov	[ebp+var_204], eax
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_D34
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ ; icu_56::ErrorCode::errorName(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax
		mov	eax, [ebp+var_30]
		push	eax
		push	offset ??_C@_0DA@LKPPJNIH@gendict?3?5could?5not?5open?5output?5f@ ; "gendict: could not	open output file \"%"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ ; icu_56::ErrorCode::reset(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_D34:				; CODE XREF: _main+BAFj
		movsx	eax, [ebp+var_15]
		test	eax, eax
		jz	short loc_D53
		mov	esi, esp
		push	offset ??_C@_0BK@PHCFOODF@Writing?5to?5output?5file?4?4?4?$AA@ ; "Writing to output file..."
		call	dword ptr ds:__imp__puts
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_D53:				; CODE XREF: _main+C1Aj
		mov	[ebp+var_22C], 20h ; ' '
		mov	[ebp+var_228], 0
		mov	[ebp+var_224], 0
		mov	[ebp+var_220], 0
		mov	[ebp+var_21C], 0
		mov	[ebp+var_218], 0
		mov	[ebp+var_214], 0
		mov	[ebp+var_210], 0
		mov	eax, [ebp+var_194]
		add	eax, [ebp+var_22C]
		mov	[ebp+var_238], eax
		mov	eax, [ebp+var_238]
		mov	[ebp+var_228], eax
		mov	eax, [ebp+var_238]
		mov	[ebp+var_224], eax
		mov	eax, [ebp+var_238]
		mov	[ebp+var_220], eax
		movsx	eax, [ebp+var_51]
		test	eax, eax
		jz	short loc_DF1
		mov	ecx, dword ptr ds:__imp_?TRIE_TYPE_BYTES@DictionaryData@icu_56@@2HB ; int const	icu_56::DictionaryData::TRIE_TYPE_BYTES
		mov	edx, [ecx]
		mov	[ebp+var_3A8], edx
		jmp	short loc_DFE
; ---------------------------------------------------------------------------

loc_DF1:				; CODE XREF: _main+CBFj
		mov	eax, dword ptr ds:__imp_?TRIE_TYPE_UCHARS@DictionaryData@icu_56@@2HB ; int const icu_56::DictionaryData::TRIE_TYPE_UCHARS
		mov	ecx, [eax]
		mov	[ebp+var_3A8], ecx

loc_DFE:				; CODE XREF: _main+CCFj
		mov	edx, [ebp+var_3A8]
		mov	[ebp+var_21C], edx
		movsx	eax, [ebp+var_E9]
		test	eax, eax
		jz	short loc_E28
		mov	eax, dword ptr ds:__imp_?TRIE_HAS_VALUES@DictionaryData@icu_56@@2HB ; int const	icu_56::DictionaryData::TRIE_HAS_VALUES
		mov	ecx, [ebp+var_21C]
		or	ecx, [eax]
		mov	[ebp+var_21C], ecx

loc_E28:				; CODE XREF: _main+CF3j
		lea	ecx, [ebp+var_98] ; this
		call	?getTransform@DataDict@@QAEHXZ ; DataDict::getTransform(void)
		mov	[ebp+var_218], eax
		push	20h ; ' '
		lea	eax, [ebp+var_22C]
		push	eax
		mov	ecx, [ebp+var_204]
		push	ecx
		call	_udata_writeBlock
		add	esp, 0Ch
		mov	eax, [ebp+var_194]
		push	eax
		mov	ecx, [ebp+var_1A0]
		push	ecx
		mov	edx, [ebp+var_204]
		push	edx
		call	_udata_writeBlock
		add	esp, 0Ch
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEPAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode *(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		mov	eax, [ebp+var_204]
		push	eax
		call	_udata_finish
		add	esp, 8
		mov	[ebp+var_244], eax
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_F0E
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ ; icu_56::ErrorCode::errorName(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax
		push	offset ??_C@_0CN@HFEJBBAH@gendict?3?5error?5?$CC?$CFs?$CC?5writing?5the?5@ ; "gendict: error \"%s\" writing the	outpu"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		lea	ecx, [ebp+var_68]
		call	dword ptr ds:__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ ; icu_56::ErrorCode::reset(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_F0E:				; CODE XREF: _main+D8Dj
		mov	eax, [ebp+var_244]
		cmp	eax, [ebp+var_238]
		jz	short loc_F5B
		mov	esi, esp
		mov	eax, [ebp+var_30]
		push	eax
		push	offset ??_C@_0CD@IEKCIACJ@Error?5writing?5to?5output?5file?5?$CC?$CFs@ ; "Error	writing	to output file \"%s\"\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	5		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_F5B:				; CODE XREF: _main+DFAj
		movsx	eax, [ebp+var_21]
		test	eax, eax
		jnz	short loc_F8B
		call	?elapsedTime@@YAHXZ ; elapsedTime(void)
		mov	esi, esp
		push	eax
		mov	eax, [ebp+var_30]
		push	eax
		mov	ecx, ds:_progName
		push	ecx
		push	offset ??_C@_0BM@EIKMGPLI@?$CFs?3?5done?5writing?7?$CFs?5?$CI?$CFds?$CJ?4?6?$AA@ ; "%s:	done writing\t%s (%ds).\n"
		call	dword ptr ds:__imp__printf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_F8B:				; CODE XREF: _main+E41j
		mov	[ebp+var_3A0], 0
		mov	byte ptr [ebp+var_4], 2
		mov	esi, esp
		lea	ecx, [ebp+var_1E8] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 1
		mov	esi, esp
		lea	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	byte ptr [ebp+var_4], 0
		lea	ecx, [ebp+var_98] ; this
		call	??1DataDict@@QAE@XZ ; DataDict::~DataDict(void)
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_68] ; this
		call	dword ptr ds:__imp_??1IcuToolErrorCode@icu_56@@UAE@XZ ;	icu_56::IcuToolErrorCode::~IcuToolErrorCode(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+var_3A0]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN76
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 3ACh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_main		endp

; ---------------------------------------------------------------------------
		align 10h
$LN76		dd 9			; DATA XREF: _main+ED9o
		dd offset $LN75
$LN75		dd 0FFFFFF98h, 0Ch	; DATA XREF: .text:00001034o
		dd offset $LN65		; "status"
		dd 0FFFFFF8Ch, 4
		dd offset $LN66		; "codepage"
		dd 0FFFFFF68h, 10h
		dd offset $LN67		; "dict"
		dd 0FFFFFF20h, 40h
		dd offset $LN68		; "fileLine"
		db 90h
		db 0FEh, 2 dup(0FFh)
		dd 10h
		dd offset $LN69		; "s"
		dd 0FFFFFE84h, 4
		dd offset $LN70		; "end"
		dd 0FFFFFE18h, 40h
		dd offset $LN71		; "usp"
		dd 0FFFFFE08h, 8
		dd offset $LN72		; "sp"
		dd 0FFFFFDD4h, 20h
		dd offset $LN73		; "indexes"
$LN73		db 'indexes',0          ; DATA XREF: .text:000010A0o
$LN72		db 'sp',0               ; DATA XREF: .text:00001094o
$LN71		db 'usp',0              ; DATA XREF: .text:00001088o
$LN70		db 'end',0              ; DATA XREF: .text:0000107Co
$LN69		db 's',0                ; DATA XREF: .text:00001070o
$LN68		db 'fileLine',0         ; DATA XREF: .text:00001064o
$LN67		db 'dict',0             ; DATA XREF: .text:00001058o
$LN66		db 'codepage',0         ; DATA XREF: .text:0000104Co
$LN65		db 'status',0           ; DATA XREF: .text:00001040o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 10D8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$0	proc near	; DATA XREF: .xdata$x:0000168Co
		mov	esi, esp
		lea	ecx, [ebp-68h]	; this
		call	dword ptr ds:__imp_??1IcuToolErrorCode@icu_56@@UAE@XZ ;	icu_56::IcuToolErrorCode::~IcuToolErrorCode(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$_main$0	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$1	proc near	; DATA XREF: .xdata$x:00001694o
		lea	ecx, [ebp-98h]	; this
		jmp	??1DataDict@@QAE@XZ ; DataDict::~DataDict(void)
__unwindfunclet$_main$1	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$2	proc near	; DATA XREF: .xdata$x:0000169Co
		mov	esi, esp
		lea	ecx, [ebp-0E0h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$_main$2	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$3	proc near	; DATA XREF: .xdata$x:000016A4o
		mov	esi, esp
		lea	ecx, [ebp-394h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$_main$3	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$4	proc near	; DATA XREF: .xdata$x:000016ACo
		mov	esi, esp
		lea	ecx, [ebp-34Ch]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$_main$4	endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$_main$5	proc near	; DATA XREF: .xdata$x:000016B4o
		mov	esi, esp
		lea	ecx, [ebp-1E8h]	; this
		call	dword ptr ds:__imp_??1UnicodeString@icu_56@@UAE@XZ ; icu_56::UnicodeString::~UnicodeString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$_main$5	endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$_main proc near		; DATA XREF: _main+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-3B0h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$_main
		jmp	___CxxFrameHandler3
__ehhandler$_main endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1174h
		public ??_C@_0BM@EIKMGPLI@?$CFs?3?5done?5writing?7?$CFs?5?$CI?$CFds?$CJ?4?6?$AA@
; char `string'[]
??_C@_0BM@EIKMGPLI@?$CFs?3?5done?5writing?7?$CFs?5?$CI?$CFds?$CJ?4?6?$AA@ db '%s: done writing',9,'%s (%ds).',0Ah,0
					; DATA XREF: _main+E56o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1190h
		public ??_C@_0CD@IEKCIACJ@Error?5writing?5to?5output?5file?5?$CC?$CFs@
; char `string'[]
??_C@_0CD@IEKCIACJ@Error?5writing?5to?5output?5file?5?$CC?$CFs@	db 'Error writing to output file "%s"',0Ah,0
					; DATA XREF: _main+E02o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11B4h
		public ??_C@_0CN@HFEJBBAH@gendict?3?5error?5?$CC?$CFs?$CC?5writing?5the?5@
; char `string'[]
??_C@_0CN@HFEJBBAH@gendict?3?5error?5?$CC?$CFs?$CC?5writing?5the?5@ db 'gendict: error "%s" writing the output file',0Ah,0
					; DATA XREF: _main+DA4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 11E4h
		public ??_C@_0BK@PHCFOODF@Writing?5to?5output?5file?4?4?4?$AA@
; char `string'[]
??_C@_0BK@PHCFOODF@Writing?5to?5output?5file?4?4?4?$AA@	db 'Writing to output file...',0
					; DATA XREF: _main+C1Eo
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1200h
		public ??_C@_0DA@LKPPJNIH@gendict?3?5could?5not?5open?5output?5f@
; char `string'[]
??_C@_0DA@LKPPJNIH@gendict?3?5could?5not?5open?5output?5f@ db 'gendict: could not open output file "%s", "%s"',0Ah,0
					; DATA XREF: _main+BCAo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1230h
		public ??_C@_0BH@EJAIIDKN@Opening?5output?5file?4?4?4?$AA@
; char `string'[]
??_C@_0BH@EJAIIDKN@Opening?5output?5file?4?4?4?$AA@ db 'Opening output file...',0
					; DATA XREF: _main+B51o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1248h
		public ??_C@_0HN@LNAFHGH@gendict?3?5got?5failure?5of?5type?5?$CFs?5@
; char `string'[]
??_C@_0HN@LNAFHGH@gendict?3?5got?5failure?5of?5type?5?$CFs?5@ db 'gendict: got failure of type %s while serializing, if U_ILLEGAL_A'
					; DATA XREF: _main+AFDo
		db 'RGUMENT_ERROR possibly due to duplicate dictionary entries',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12C8h
		public ??_C@_0CE@ICENJNHF@Serializing?5data?4?4?4isBytesTrie?$DP?5@
; char `string'[]
??_C@_0CE@ICENJNHF@Serializing?5data?4?4?4isBytesTrie?$DP?5@ db	'Serializing data...isBytesTrie? %d',0Ah,0
					; DATA XREF: _main+9DFo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 12ECh
		public ??_C@_0DL@FNGKOPNH@warning?3?5file?5contained?5both?5val@
; char `string'[]
??_C@_0DL@FNGKOPNH@warning?3?5file?5contained?5both?5val@ db 'warning: file contained both valued and unvalued strings!',0Ah,0
					; DATA XREF: _main+9A8o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1328h
		public ??_C@_0DK@MENJFFHJ@Processed?5?$CFd?5lines?0?5added?5?$CFd?5wor@
; char `string'[]
??_C@_0DK@MENJFFHJ@Processed?5?$CFd?5lines?0?5added?5?$CFd?5wor@ db 'Processed %d lines, added %d words, minlen %d, maxlen %d',0Ah,0
					; DATA XREF: _main+943o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1364h
		public ??_C@_0EL@PIKECADD@ICU?5Error?5?$CC?$CFs?$CC?3?5Failed?5to?5add?5wo@
; char `string'[]
??_C@_0EL@PIKECADD@ICU?5Error?5?$CC?$CFs?$CC?3?5Failed?5to?5add?5wo@ db	'ICU Error "%s": Failed to add word to trie at input line %d in in'
					; DATA XREF: _main+8CEo
		db 'put file',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13B0h
		public ??_C@_0DK@EGLJDBAN@Error?3?5value?5syntax?5error?5or?5val@
; char `string'[]
??_C@_0DK@EGLJDBAN@Error?3?5value?5syntax?5error?5or?5val@ db 'Error: value syntax error or value too large on line %i!',0Ah,0
					; DATA XREF: _main+6D1o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 13ECh
		public ??_C@_0CD@FDBBOHPK@Error?3?5value?5too?5long?5on?5line?5?$CFi@
; char `string'[]
??_C@_0CD@FDBBOHPK@Error?3?5value?5too?5long?5on?5line?5?$CFi@ db 'Error: value too long on line %i!',0Ah,0
					; DATA XREF: _main+601o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1410h
		public ??_C@_0BM@EKPFKGFP@Error?3?5no?5word?5on?5line?5?$CFi?$CB?6?$AA@
; char `string'[]
??_C@_0BM@EKPFKGFP@Error?3?5no?5word?5on?5line?5?$CFi?$CB?6?$AA@ db 'Error: no word on line %i!',0Ah,0
					; DATA XREF: _main+51Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 142Ch
		public ??_C@_0BO@LELBGLKJ@Adding?5words?5to?5dictionary?4?4?4?$AA@
; char `string'[]
??_C@_0BO@LELBGLKJ@Adding?5words?5to?5dictionary?4?4?4?$AA@ db 'Adding words to dictionary...',0
					; DATA XREF: _main+401o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 144Ch
		public ??_C@_0BO@EFNGAFKA@new?5DataDict?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@
; char `string'[]
??_C@_0BO@EFNGAFKA@new?5DataDict?3?5ICU?5Error?5?$CC?$CFs?$CC?6?$AA@ db	'new DataDict: ICU Error "%s"',0Ah,0
					; DATA XREF: _main+378o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 146Ch
		public ??_C@_0CP@BNCOEFPB@Initializing?5dictionary?5builder?5@
; char `string'[]
??_C@_0CP@BNCOEFPB@Initializing?5dictionary?5builder?5@	db 'Initializing dictionary builder of type %s...',0Ah,0
					; DATA XREF: _main+30Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 149Ch
		public ??_C@_0L@LGIONAHD@UCharsTrie?$AA@
; `string'
??_C@_0L@LGIONAHD@UCharsTrie?$AA@ db 'UCharsTrie',0 ; DATA XREF: _main:loc_41Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14A8h
		public ??_C@_09PFDBNIIM@BytesTrie?$AA@
; `string'
??_C@_09PFDBNIIM@BytesTrie?$AA@	db 'BytesTrie',0 ; DATA XREF: _main+2EFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14B4h
		public ??_C@_0CK@FCIALHCO@error?5opening?5input?5file?3?5ICU?5Er@
; char `string'[]
??_C@_0CK@FCIALHCO@error?5opening?5input?5file?3?5ICU?5Er@ db 'error opening input file: ICU Error "%s"',0Ah,0
					; DATA XREF: _main+295o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14E0h
		public ??_C@_05EGJIMALK@UTF?98?$AA@
; `string'
??_C@_05EGJIMALK@UTF?98?$AA@ db	'UTF-8',0 ; DATA XREF: _main:loc_356o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14E8h
		public ??_C@_0BE@MPNGCDMF@Opening?5file?5?$CFs?4?4?4?6?$AA@
; char `string'[]
??_C@_0BE@MPNGCDMF@Opening?5file?5?$CFs?4?4?4?6?$AA@ db	'Opening file %s...',0Ah,0
					; DATA XREF: _main+221o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14FCh
		public ??_C@_0P@KOHGMPLE@gendict?1main?$CI?$CJ?$AA@
; char `string'[]
??_C@_0P@KOHGMPLE@gendict?1main?$CI?$CJ?$AA@ db	'gendict/main()',0 ; DATA XREF: _main+1F7o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 150Ch
		public ??_C@_0GB@DGJJGBCD@you?5must?5provide?5a?5transformatio@
; char `string'[]
??_C@_0GB@DGJJGBCD@you?5must?5provide?5a?5transformatio@ db 'you must provide a transformation for a bytes trie, and must not '
					; DATA XREF: _main+1C3o
		db 'provide one for a uchars trie!',0Ah,0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1570h
		public ??_C@_0DG@OKDAHDMA@you?5must?5specify?5exactly?5one?5typ@
; char `string'[]
??_C@_0DG@OKDAHDMA@you?5must?5specify?5exactly?5one?5typ@ db 'you must specify exactly one type of trie to output!',0Ah,0
					; DATA XREF: _main+178o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 15A8h
		public ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
; `string'
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@	db ' Copyright (C) 2015, International Business Machines Corporation '
					; DATA XREF: _main+15Do
		db 'and others. All Rights Reserved. ',0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 160Ch
		public ??_C@_0CP@OLKHGAC@input?5and?5output?5file?5must?5both?5@
; char `string'[]
??_C@_0CP@OLKHGAC@input?5and?5output?5file?5must?5both?5@ db 'input and output file must both be specified.',0Ah,0
					; DATA XREF: _main+E3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 163Ch
		public ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
; char `string'[]
??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ db	'error in command line argument "%s"',0Ah,0
					; DATA XREF: _main+79o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1664h
__ehfuncinfo$_main dd 19930522h, 6	; DATA XREF: __ehhandler$_main+1Eo
		dd offset __unwindtable$_main
		dd 5 dup(0)
		dd 1
__unwindtable$_main dd 0FFFFFFFFh	; DATA XREF: .xdata$x:0000166Co
		dd offset __unwindfunclet$_main$0
		dd 0
		dd offset __unwindfunclet$_main$1
		dd 1
		dd offset __unwindfunclet$_main$2
		dd 2
		dd offset __unwindfunclet$_main$3
		dd 2
		dd offset __unwindfunclet$_main$4
		dd 2
		dd offset __unwindfunclet$_main$5
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 16B8h
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 16BCh
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 16C0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl elapsedTime(void)
?elapsedTime@@YAHXZ proc near		; CODE XREF: _main+E43p

var_D4		= qword	ptr -0D4h
var_C0		= byte ptr -0C0h

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		call	_uprv_getRawUTCtime_56
		fsub	ds:?startTime@@3NA ; double startTime
		fdiv	ds:__real@408f400000000000
		sub	esp, 8
		fstp	[esp+0D4h+var_D4]
		call	_uprv_floor_56
		add	esp, 8
		call	__ftol2_sse
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?elapsedTime@@YAHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1718h
		public __real@408f400000000000
__real@408f400000000000	dq 1000.0	; DATA XREF: elapsedTime(void)+29r
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1720h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; int __cdecl usageAndDie(int Code)
?usageAndDie@@YAXW4UErrorCode@@@Z proc near ; CODE XREF: _main+A3p _main+C3p ...

File		= dword	ptr -0C4h
Code		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+File]
		mov	ecx, 31h ; '1'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+Code]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_176B
		mov	esi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	esi, esp
		call	__RTC_CheckEsp
		add	eax, 20h ; ' '
		mov	[ebp+File], eax
		jmp	short loc_1783
; ---------------------------------------------------------------------------

loc_176B:				; CODE XREF: usageAndDie(UErrorCode)+2Fj
		mov	esi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	esi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		mov	[ebp+File], eax

loc_1783:				; CODE XREF: usageAndDie(UErrorCode)+49j
		mov	esi, esp
		mov	edx, ds:_progName
		push	edx
		push	offset ??_C@_0EC@FEFIBPMC@Usage?3?5?$CFs?5?9trietype?5?$FL?9options?$FN?5i@ ; "Usage: %s -trietype [-options] input-di"...
		mov	eax, [ebp+File]
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+Code]
		push	eax
		call	?U_SUCCESS@@YACW4UErrorCode@@@Z	; U_SUCCESS(UErrorCode)
		add	esp, 4
		movsx	ecx, al
		test	ecx, ecx
		jz	short loc_17D5
		mov	esi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	esi, esp
		call	__RTC_CheckEsp
		add	eax, 20h ; ' '
		mov	[ebp+File], eax
		jmp	short loc_17ED
; ---------------------------------------------------------------------------

loc_17D5:				; CODE XREF: usageAndDie(UErrorCode)+99j
		mov	esi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	esi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		mov	[ebp+File], eax

loc_17ED:				; CODE XREF: usageAndDie(UErrorCode)+B3j
		call	_u_getDataDirectory_56
		mov	esi, esp
		push	eax
		push	offset ??_C@_0CNO@PCAFBOMG@?7Read?5in?5a?5word?5list?5and?5write?5o@ ; "\tRead in a word list and write	out a s"...
		mov	edx, [ebp+File]
		push	edx		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax		; Code
		call	dword ptr ds:__imp__exit
?usageAndDie@@YAXW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1838h
		public ??_C@_0CNO@PCAFBOMG@?7Read?5in?5a?5word?5list?5and?5write?5o@
; char `string'[]
??_C@_0CNO@PCAFBOMG@?7Read?5in?5a?5word?5list?5and?5write?5o@ db 9,'Read in a word list and write out a string trie dictionary',0Ah
					; DATA XREF: usageAndDie(UErrorCode)+D5o
		db 'options:',0Ah
		db 9,'-h or -? or --help  this usage text',0Ah
		db 9,'-V or --version     show a version message',0Ah
		db 9,'-c or --copyright   include a copyright notice',0Ah
		db 9,'-v or --verbose     turn on verbose output',0Ah
		db 9,'-q or --quiet       do not display warnings and progress',0Ah
		db 9,'-i or --icudatadir  directory for locating any needed intermedia'
		db 'te data files,',0Ah
		db 9,'                    followed by path, defaults to %s',0Ah
		db 9,'--uchars            output a UCharsTrie (mutually exclusive with'
		db ' -b!)',0Ah
		db 9,'--bytes             output a BytesTrie (mutually exclusive with '
		db '-u!)',0Ah
		db 9,'--transform         the kind of transform to use (eg --transform'
		db ' offset-40A3,',0Ah
		db 9,'                    which specifies an offset transform with con'
		db 'stant 0x40A3)',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1B18h
		public ??_C@_0EC@FEFIBPMC@Usage?3?5?$CFs?5?9trietype?5?$FL?9options?$FN?5i@
; char `string'[]
??_C@_0EC@FEFIBPMC@Usage?3?5?$CFs?5?9trietype?5?$FL?9options?$FN?5i@ db	'Usage: %s -trietype [-options] input-dictionary-file output-file',0Ah
					; DATA XREF: usageAndDie(UErrorCode)+6Co
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B5Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; signed char __cdecl U_SUCCESS(enum  UErrorCode)
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near ; CODE XREF: usageAndDie(UErrorCode)+22p
					; usageAndDie(UErrorCode)+8Cp

var_C0		= byte ptr -0C0h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C0]
		mov	ecx, 30h ; '0'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+arg_0], 0
		setle	al
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?U_SUCCESS@@YACW4UErrorCode@@@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1B88h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	DataDict::DataDict(char, enum UErrorCode *)
		public ??0DataDict@@QAE@CAAW4UErrorCode@@@Z
??0DataDict@@QAE@CAAW4UErrorCode@@@Z proc near ; CODE XREF: _main+341p

var_10C		= dword	ptr -10Ch
var_104		= dword	ptr -104h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= byte ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$??0DataDict@@QAE@CAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 100h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_10C]
		mov	ecx, 40h ; '@'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		push	eax
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_14], ecx
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+var_14]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+var_14]
		mov	ecx, dword ptr ds:__imp_?TRANSFORM_NONE@DictionaryData@icu_56@@2HB ; int const icu_56::DictionaryData::TRANSFORM_NONE
		mov	edx, [ecx]
		mov	[eax+0Ch], edx
		movsx	eax, [ebp+arg_0]
		test	eax, eax
		jz	loc_1C8B
		mov	esi, esp
		push	24h ; '$'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_F8], eax
		mov	[ebp+var_4], 0
		cmp	[ebp+var_F8], 0
		jz	short loc_1C5E
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_F8] ; this
		call	dword ptr ds:__imp_??0BytesTrieBuilder@icu_56@@QAE@AAW4UErrorCode@@@Z ;	icu_56::BytesTrieBuilder::BytesTrieBuilder(UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_F8]
		mov	dword ptr [ecx], offset	??_SBytesTrieBuilder@icu_56@@6B@ ; const icu_56::BytesTrieBuilder::`local vftable'
		mov	edx, [ebp+var_F8]
		mov	[ebp+var_10C], edx
		jmp	short loc_1C68
; ---------------------------------------------------------------------------

loc_1C5E:				; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+A1j
		mov	[ebp+var_10C], 0

loc_1C68:				; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+D4j
		mov	eax, [ebp+var_10C]
		mov	[ebp+var_104], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_104]
		mov	[ecx], edx
		jmp	loc_1D11
; ---------------------------------------------------------------------------

loc_1C8B:				; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+73j
		mov	esi, esp
		push	60h ; '`'       ; unsigned int
		call	dword ptr ds:__imp_??2UMemory@icu_56@@SAPAXI@Z ; icu_56::UMemory::operator new(uint)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_E0], eax
		mov	[ebp+var_4], 1
		cmp	[ebp+var_E0], 0
		jz	short loc_1CE8
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+var_E0] ; this
		call	dword ptr ds:__imp_??0UCharsTrieBuilder@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::UCharsTrieBuilder::UCharsTrieBuilder(UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	ecx, [ebp+var_E0]
		mov	dword ptr [ecx], offset	??_SUCharsTrieBuilder@icu_56@@6B@ ; const icu_56::UCharsTrieBuilder::`local vftable'
		mov	edx, [ebp+var_E0]
		mov	[ebp+var_10C], edx
		jmp	short loc_1CF2
; ---------------------------------------------------------------------------

loc_1CE8:				; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+12Bj
		mov	[ebp+var_10C], 0

loc_1CF2:				; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+15Ej
		mov	eax, [ebp+var_10C]
		mov	[ebp+var_EC], eax
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	ecx, [ebp+var_14]
		mov	edx, [ebp+var_EC]
		mov	[ecx+4], edx

loc_1D11:				; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+FEj
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 10Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
??0DataDict@@QAE@CAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 1D38h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:00001E2Co
		mov	esi, esp
		mov	eax, [ebp-0F8h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$1 proc near
					; DATA XREF: .xdata$x:00001E34o
		mov	esi, esp
		mov	eax, [ebp-0E0h]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$1 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$??0DataDict@@QAE@CAAW4UErrorCode@@@Z proc near
					; DATA XREF: DataDict::DataDict(signed char,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-110h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$??0DataDict@@QAE@CAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$??0DataDict@@QAE@CAAW4UErrorCode@@@Z endp

_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1D88h
		dd offset ??_R4UCharsTrieBuilder@icu_56@@6B@ ; const icu_56::UCharsTrieBuilder::`RTTI Complete Object Locator'
		public ??_SUCharsTrieBuilder@icu_56@@6B@
; const	icu_56::UCharsTrieBuilder::`local vftable'
??_SUCharsTrieBuilder@icu_56@@6B@ dd offset ??_EUCharsTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: DataDict::DataDict(signed char,UErrorCode &)+14Co
					; icu_56::UCharsTrieBuilder::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ?getElementStringLength@UCharsTrieBuilder@icu_56@@EBEHH@Z ; icu_56::UCharsTrieBuilder::getElementStringLength(int)
		dd offset ?getElementUnit@UCharsTrieBuilder@icu_56@@EBE_WHH@Z ;	icu_56::UCharsTrieBuilder::getElementUnit(int,int)
		dd offset ?getElementValue@UCharsTrieBuilder@icu_56@@EBEHH@Z ; icu_56::UCharsTrieBuilder::getElementValue(int)
		dd offset ?getLimitOfLinearMatch@UCharsTrieBuilder@icu_56@@EBEHHHH@Z ; icu_56::UCharsTrieBuilder::getLimitOfLinearMatch(int,int,int)
		dd offset ?countElementUnits@UCharsTrieBuilder@icu_56@@EBEHHHH@Z ; icu_56::UCharsTrieBuilder::countElementUnits(int,int,int)
		dd offset ?skipElementsBySomeUnits@UCharsTrieBuilder@icu_56@@EBEHHHH@Z ; icu_56::UCharsTrieBuilder::skipElementsBySomeUnits(int,int,int)
		dd offset ?indexOfElementWithNextUnit@UCharsTrieBuilder@icu_56@@EBEHHH_W@Z ; icu_56::UCharsTrieBuilder::indexOfElementWithNextUnit(int,int,wchar_t)
		dd offset ?matchNodesCanHaveValues@UCharsTrieBuilder@icu_56@@EBECXZ ; icu_56::UCharsTrieBuilder::matchNodesCanHaveValues(void)
		dd offset ?getMaxBranchLinearSubNodeLength@UCharsTrieBuilder@icu_56@@EBEHXZ ; icu_56::UCharsTrieBuilder::getMaxBranchLinearSubNodeLength(void)
		dd offset ?getMinLinearMatch@UCharsTrieBuilder@icu_56@@EBEHXZ ;	icu_56::UCharsTrieBuilder::getMinLinearMatch(void)
		dd offset ?getMaxLinearMatchLength@UCharsTrieBuilder@icu_56@@EBEHXZ ; icu_56::UCharsTrieBuilder::getMaxLinearMatchLength(void)
		dd offset ?createLinearMatchNode@UCharsTrieBuilder@icu_56@@EBEPAVNode@StringTrieBuilder@2@HHHPAV342@@Z ; icu_56::UCharsTrieBuilder::createLinearMatchNode(int,int,int,icu_56::StringTrieBuilder::Node *)
		dd offset ?write@UCharsTrieBuilder@icu_56@@EAEHH@Z ; icu_56::UCharsTrieBuilder::write(int)
		dd offset ?writeElementUnits@UCharsTrieBuilder@icu_56@@EAEHHHH@Z ; icu_56::UCharsTrieBuilder::writeElementUnits(int,int,int)
		dd offset ?writeValueAndFinal@UCharsTrieBuilder@icu_56@@EAEHHC@Z ; icu_56::UCharsTrieBuilder::writeValueAndFinal(int,signed char)
		dd offset ?writeValueAndType@UCharsTrieBuilder@icu_56@@EAEHCHH@Z ; icu_56::UCharsTrieBuilder::writeValueAndType(signed char,int,int)
		dd offset ?writeDeltaTo@UCharsTrieBuilder@icu_56@@EAEHH@Z ; icu_56::UCharsTrieBuilder::writeDeltaTo(int)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1DD8h
		dd offset ??_R4BytesTrieBuilder@icu_56@@6B@ ; const icu_56::BytesTrieBuilder::`RTTI Complete Object Locator'
		public ??_SBytesTrieBuilder@icu_56@@6B@
; const	icu_56::BytesTrieBuilder::`local vftable'
??_SBytesTrieBuilder@icu_56@@6B@ dd offset ??_EBytesTrieBuilder@icu_56@@UAEPAXI@Z
					; DATA XREF: DataDict::DataDict(signed char,UErrorCode &)+C2o
					; icu_56::BytesTrieBuilder::`vector deleting destructor'(uint)
		dd offset ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ ;	icu_56::UObject::getDynamicClassID(void)
		dd offset ?getElementStringLength@BytesTrieBuilder@icu_56@@EBEHH@Z ; icu_56::BytesTrieBuilder::getElementStringLength(int)
		dd offset ?getElementUnit@BytesTrieBuilder@icu_56@@EBE_WHH@Z ; icu_56::BytesTrieBuilder::getElementUnit(int,int)
		dd offset ?getElementValue@BytesTrieBuilder@icu_56@@EBEHH@Z ; icu_56::BytesTrieBuilder::getElementValue(int)
		dd offset ?getLimitOfLinearMatch@BytesTrieBuilder@icu_56@@EBEHHHH@Z ; icu_56::BytesTrieBuilder::getLimitOfLinearMatch(int,int,int)
		dd offset ?countElementUnits@BytesTrieBuilder@icu_56@@EBEHHHH@Z	; icu_56::BytesTrieBuilder::countElementUnits(int,int,int)
		dd offset ?skipElementsBySomeUnits@BytesTrieBuilder@icu_56@@EBEHHHH@Z ;	icu_56::BytesTrieBuilder::skipElementsBySomeUnits(int,int,int)
		dd offset ?indexOfElementWithNextUnit@BytesTrieBuilder@icu_56@@EBEHHH_W@Z ; icu_56::BytesTrieBuilder::indexOfElementWithNextUnit(int,int,wchar_t)
		dd offset ?matchNodesCanHaveValues@BytesTrieBuilder@icu_56@@EBECXZ ; icu_56::BytesTrieBuilder::matchNodesCanHaveValues(void)
		dd offset ?getMaxBranchLinearSubNodeLength@BytesTrieBuilder@icu_56@@EBEHXZ ; icu_56::BytesTrieBuilder::getMaxBranchLinearSubNodeLength(void)
		dd offset ?getMinLinearMatch@BytesTrieBuilder@icu_56@@EBEHXZ ; icu_56::BytesTrieBuilder::getMinLinearMatch(void)
		dd offset ?getMaxLinearMatchLength@BytesTrieBuilder@icu_56@@EBEHXZ ; icu_56::BytesTrieBuilder::getMaxLinearMatchLength(void)
		dd offset ?createLinearMatchNode@BytesTrieBuilder@icu_56@@EBEPAVNode@StringTrieBuilder@2@HHHPAV342@@Z ;	icu_56::BytesTrieBuilder::createLinearMatchNode(int,int,int,icu_56::StringTrieBuilder::Node *)
		dd offset ?write@BytesTrieBuilder@icu_56@@EAEHH@Z ; icu_56::BytesTrieBuilder::write(int)
		dd offset ?writeElementUnits@BytesTrieBuilder@icu_56@@EAEHHHH@Z	; icu_56::BytesTrieBuilder::writeElementUnits(int,int,int)
		dd offset ?writeValueAndFinal@BytesTrieBuilder@icu_56@@EAEHHC@Z	; icu_56::BytesTrieBuilder::writeValueAndFinal(int,signed char)
		dd offset ?writeValueAndType@BytesTrieBuilder@icu_56@@EAEHCHH@Z	; icu_56::BytesTrieBuilder::writeValueAndType(signed char,int,int)
		dd offset ?writeDeltaTo@BytesTrieBuilder@icu_56@@EAEHH@Z ; icu_56::BytesTrieBuilder::writeDeltaTo(int)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 1E28h
__unwindtable$??0DataDict@@QAE@CAAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:00001E40o
		dd offset __unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$0
		dd 0FFFFFFFFh
		dd offset __unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$1
__ehfuncinfo$??0DataDict@@QAE@CAAW4UErrorCode@@@Z dd 19930522h,	2
					; DATA XREF: __ehhandler$??0DataDict@@QAE@CAAW4UErrorCode@@@Z+14o
		dd offset __unwindtable$??0DataDict@@QAE@CAAW4UErrorCode@@@Z
		dd 5 dup(0)
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1E5Ch
		public ??_R4BytesTrieBuilder@icu_56@@6B@
; const	icu_56::BytesTrieBuilder::`RTTI	Complete Object	Locator'
??_R4BytesTrieBuilder@icu_56@@6B@ dd 3 dup(0) ;	DATA XREF: .rdata:00001DD8o
		dd offset ??_R0?AVBytesTrieBuilder@icu_56@@@8 ;	icu_56::BytesTrieBuilder `RTTI Type Descriptor'
		dd offset ??_R3BytesTrieBuilder@icu_56@@8 ; icu_56::BytesTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1E70h
		public ??_R0?AVBytesTrieBuilder@icu_56@@@8
; class	icu_56::BytesTrieBuilder `RTTI Type Descriptor'
??_R0?AVBytesTrieBuilder@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00001E68o
					; .rdata$r:icu_56::BytesTrieBuilder::`RTTI Base	Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avbytestrieb	db '.?AVBytesTrieBuilder@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1E98h
		public ??_R3BytesTrieBuilder@icu_56@@8
; icu_56::BytesTrieBuilder::`RTTI Class	Hierarchy Descriptor'
??_R3BytesTrieBuilder@icu_56@@8	dd 2 dup(0) ; DATA XREF: .rdata$r:00001E6Co
					; .rdata$r:00001ED4o
		dd 4
		dd offset ??_R2BytesTrieBuilder@icu_56@@8 ; icu_56::BytesTrieBuilder::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1EA8h
		public ??_R2BytesTrieBuilder@icu_56@@8
; icu_56::BytesTrieBuilder::`RTTI Base Class Array'
??_R2BytesTrieBuilder@icu_56@@8	dd offset ??_R1A@?0A@EA@BytesTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00001EA4o
					; icu_56::BytesTrieBuilder::`RTTI Base Class Descriptor	at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1EBCh
		public ??_R1A@?0A@EA@BytesTrieBuilder@icu_56@@8
; icu_56::BytesTrieBuilder::`RTTI Base Class Descriptor	at (0, -1, 0, 64)'
??_R1A@?0A@EA@BytesTrieBuilder@icu_56@@8 dd offset ??_R0?AVBytesTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::BytesTrieBuilder::`RTTI Base Class Array'o
					; icu_56::BytesTrieBuilder `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@+4 ; "ose"
		dd offset ??_R3BytesTrieBuilder@icu_56@@8 ; icu_56::BytesTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1ED8h
		public ??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8 dd offset ??_R0?AVStringTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:00001EACo
					; .rdata$r:icu_56::StringTrieBuilder::`RTTI Base Class Array'o ...
					; icu_56::StringTrieBuilder `RTTI Type Descriptor'
		dd 2, 0
		dd 0FFFFFFFFh, 0
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@+4 ; "ose"
		dd offset ??_R3StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1EF4h
		public ??_R0?AVStringTrieBuilder@icu_56@@@8
; class	icu_56::StringTrieBuilder `RTTI	Type Descriptor'
??_R0?AVStringTrieBuilder@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::StringTrieBuilder::`RTTI Base Class Descriptor at	(0,-1,0,64)'o
					; const	type_info::`vftable'
		dd 0
a_?avstringtrie	db '.?AVStringTrieBuilder@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F1Ch
		public ??_R3StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::`RTTI Class Hierarchy Descriptor'
??_R3StringTrieBuilder@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00001EF0o
		dd 3
		dd offset ??_R2StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F2Ch
		public ??_R2StringTrieBuilder@icu_56@@8
; icu_56::StringTrieBuilder::`RTTI Base	Class Array'
??_R2StringTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:00001F28o
					; icu_56::StringTrieBuilder::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F3Ch
		public ??_R1A@?0A@EA@UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UObject@icu_56@@8	dd offset ??_R0?AVUObject@icu_56@@@8
					; DATA XREF: .rdata$r:00001EB0o
					; .rdata$r:00001F30o ...
					; icu_56::UObject `RTTI	Type Descriptor'
		dd 1, 0
		dd 0FFFFFFFFh, 0
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@+4 ; "ose"
		dd offset ??_R3UObject@icu_56@@8 ; icu_56::UObject::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1F58h
		public ??_R0?AVUObject@icu_56@@@8
; class	icu_56::UObject	`RTTI Type Descriptor'
??_R0?AVUObject@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UObject::`RTTI Base Class	Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avuobject@ic	db '.?AVUObject@icu_56@@',0
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F78h
		public ??_R3UObject@icu_56@@8
; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
??_R3UObject@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001F54o
		dd 2
		dd offset ??_R2UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F88h
		public ??_R2UObject@icu_56@@8
; icu_56::UObject::`RTTI Base Class Array'
??_R2UObject@icu_56@@8 dd offset ??_R1A@?0A@EA@UObject@icu_56@@8
					; DATA XREF: .rdata$r:00001F84o
					; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1F94h
		public ??_R13?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (4, -1, 0, 64)'
??_R13?0A@EA@UMemory@icu_56@@8 dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:00001EB4o
					; .rdata$r:00001F34o ...
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 0
		dd 4, 0FFFFFFFFh, 0
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@+4 ; "ose"
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1FB0h
		public ??_R0?AVUMemory@icu_56@@@8
; class	icu_56::UMemory	`RTTI Type Descriptor'
??_R0?AVUMemory@icu_56@@@8 dd offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Descriptor at (4,-1,0,64)'o
					; .rdata$r:icu_56::UMemory::`RTTI Base Class Descriptor	at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 8
a_?avumemory@ic	db '.?AVUMemory@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1FD0h
		public ??_R3UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
??_R3UMemory@icu_56@@8 dd 2 dup(0)	; DATA XREF: .rdata$r:00001FACo
					; .rdata$r:00002000o
		dd 1
		dd offset ??_R2UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1FE0h
		public ??_R2UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Array'
??_R2UMemory@icu_56@@8 dd offset ??_R1A@?0A@EA@UMemory@icu_56@@8
					; DATA XREF: .rdata$r:00001FDCo
					; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 1FE8h
		public ??_R1A@?0A@EA@UMemory@icu_56@@8
; icu_56::UMemory::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
??_R1A@?0A@EA@UMemory@icu_56@@8	dd offset ??_R0?AVUMemory@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UMemory::`RTTI Base Class	Array'o
					; icu_56::UMemory `RTTI	Type Descriptor'
		dd 2 dup(0)
		dd 0FFFFFFFFh, 0
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@+4 ; "ose"
		dd offset ??_R3UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Class	Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2004h
		public ??_R4UCharsTrieBuilder@icu_56@@6B@
; const	icu_56::UCharsTrieBuilder::`RTTI Complete Object Locator'
??_R4UCharsTrieBuilder@icu_56@@6B@ dd 3	dup(0) ; DATA XREF: .rdata:00001D88o
		dd offset ??_R0?AVUCharsTrieBuilder@icu_56@@@8 ; icu_56::UCharsTrieBuilder `RTTI Type Descriptor'
		dd offset ??_R3UCharsTrieBuilder@icu_56@@8 ; icu_56::UCharsTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 2018h
		public ??_R0?AVUCharsTrieBuilder@icu_56@@@8
; class	icu_56::UCharsTrieBuilder `RTTI	Type Descriptor'
??_R0?AVUCharsTrieBuilder@icu_56@@@8 dd	offset ??_7type_info@@6B@
					; DATA XREF: .rdata$r:00002010o
					; .rdata$r:icu_56::UCharsTrieBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'o
					; const	type_info::`vftable'
		align 10h
a_?avucharstrie	db '.?AVUCharsTrieBuilder@icu_56@@',0
		align 10h
_data		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2040h
		public ??_R3UCharsTrieBuilder@icu_56@@8
; icu_56::UCharsTrieBuilder::`RTTI Class Hierarchy Descriptor'
??_R3UCharsTrieBuilder@icu_56@@8 dd 2 dup(0) ; DATA XREF: .rdata$r:00002014o
					; .rdata$r:0000207Co
		dd 4
		dd offset ??_R2UCharsTrieBuilder@icu_56@@8 ; icu_56::UCharsTrieBuilder::`RTTI Base Class Array'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2050h
		public ??_R2UCharsTrieBuilder@icu_56@@8
; icu_56::UCharsTrieBuilder::`RTTI Base	Class Array'
??_R2UCharsTrieBuilder@icu_56@@8 dd offset ??_R1A@?0A@EA@UCharsTrieBuilder@icu_56@@8
					; DATA XREF: .rdata$r:0000204Co
					; icu_56::UCharsTrieBuilder::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@StringTrieBuilder@icu_56@@8 ; icu_56::StringTrieBuilder::`RTTI Base Class Descriptor at	(0,-1,0,64)'
		dd offset ??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base	Class Descriptor at (0,-1,0,64)'
		dd offset ??_R13?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor	at (4,-1,0,64)'
		db 0
		align 4
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata$r	segment	dword public 'DATA' use32
		assume cs:_rdata$r
		;org 2064h
		public ??_R1A@?0A@EA@UCharsTrieBuilder@icu_56@@8
; icu_56::UCharsTrieBuilder::`RTTI Base	Class Descriptor at (0,	-1, 0, 64)'
??_R1A@?0A@EA@UCharsTrieBuilder@icu_56@@8 dd offset ??_R0?AVUCharsTrieBuilder@icu_56@@@8
					; DATA XREF: .rdata$r:icu_56::UCharsTrieBuilder::`RTTI Base Class Array'o
					; icu_56::UCharsTrieBuilder `RTTI Type Descriptor'
		dd 3, 0
		dd 0FFFFFFFFh, 0
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@+4 ; "ose"
		dd offset ??_R3UCharsTrieBuilder@icu_56@@8 ; icu_56::UCharsTrieBuilder::`RTTI Class Hierarchy Descriptor'
_rdata$r	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2080h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; _DWORD __thiscall DataDict::~DataDict(DataDict *__hidden this)
		public ??1DataDict@@QAE@XZ
??1DataDict@@QAE@XZ proc near		; CODE XREF: _main+EB1p
					; __unwindfunclet$_main$1+6j

var_100		= dword	ptr -100h
var_F8		= dword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_D4		= dword	ptr -0D4h
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 100h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_100]
		mov	ecx, 40h ; '@'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [eax]
		mov	[ebp+var_EC], ecx
		mov	edx, [ebp+var_EC]
		mov	[ebp+var_F8], edx
		cmp	[ebp+var_F8], 0
		jz	short loc_20E8
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_F8]
		mov	edx, [eax]
		mov	ecx, [ebp+var_F8]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_100], eax
		jmp	short loc_20F2
; ---------------------------------------------------------------------------

loc_20E8:				; CODE XREF: DataDict::~DataDict(void)+41j
		mov	[ebp+var_100], 0

loc_20F2:				; CODE XREF: DataDict::~DataDict(void)+66j
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+4]
		mov	[ebp+var_D4], ecx
		mov	edx, [ebp+var_D4]
		mov	[ebp+var_E0], edx
		cmp	[ebp+var_E0], 0
		jz	short loc_2138
		mov	esi, esp
		push	1
		mov	eax, [ebp+var_E0]
		mov	edx, [eax]
		mov	ecx, [ebp+var_E0]
		mov	eax, [edx]
		call	eax
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_100], eax
		jmp	short loc_2142
; ---------------------------------------------------------------------------

loc_2138:				; CODE XREF: DataDict::~DataDict(void)+91j
		mov	[ebp+var_100], 0

loc_2142:				; CODE XREF: DataDict::~DataDict(void)+B6j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 100h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
??1DataDict@@QAE@XZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2158h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall DataDict::setTransform(DataDict *this, const char *)
		public ?setTransform@DataDict@@QAEXPBD@Z
?setTransform@DataDict@@QAEXPBD@Z proc near ; CODE XREF: _main+3D9p

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
EndPtr		= dword	ptr -14h
var_8		= dword	ptr -8
Str1		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		push	7		; MaxCount
		push	offset ??_C@_07GEIFAAFE@offset?9?$AA@ ;	"offset-"
		mov	eax, [ebp+Str1]
		push	eax		; Str1
		call	dword ptr ds:__imp__strncmp
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jnz	loc_2234
		mov	esi, esp
		push	10h		; Radix
		lea	eax, [ebp+EndPtr]
		push	eax		; EndPtr
		mov	ecx, [ebp+Str1]
		add	ecx, 7
		push	ecx		; Str
		call	dword ptr ds:__imp__strtoul
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax
		mov	eax, [ebp+Str1]
		add	eax, 7
		cmp	[ebp+EndPtr], eax
		jz	short loc_21E0
		mov	eax, [ebp+EndPtr]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jnz	short loc_21E0
		cmp	[ebp+var_20], 10FF80h
		jbe	short loc_221B

loc_21E0:				; CODE XREF: DataDict::setTransform(char const *)+73j
					; DataDict::setTransform(char const *)+7Dj
		mov	eax, [ebp+Str1]
		add	eax, 7
		mov	esi, esp
		push	eax
		push	offset ??_C@_0DL@JMLGIMOM@Syntax?5for?5offset?5value?5in?5?9?9tra@ ; "Syntax for offset	value in --transform "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_221B:				; CODE XREF: DataDict::setTransform(char const *)+86j
		mov	eax, [ebp+var_8]
		mov	ecx, dword ptr ds:__imp_?TRANSFORM_TYPE_OFFSET@DictionaryData@icu_56@@2HB ; int	const icu_56::DictionaryData::TRANSFORM_TYPE_OFFSET
		mov	edx, [ecx]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_20]
		mov	[eax+8], ecx
		jmp	short loc_226C
; ---------------------------------------------------------------------------

loc_2234:				; CODE XREF: DataDict::setTransform(char const *)+42j
		mov	esi, esp
		mov	eax, [ebp+Str1]
		push	eax
		push	offset ??_C@_0CB@LHJJDAJE@Invalid?5transform?5specified?3?5?$CFs?6@ ; "Invalid transform specified: %s\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	1		; Code
		call	?usageAndDie@@YAXW4UErrorCode@@@Z ; usageAndDie(UErrorCode)
; ---------------------------------------------------------------------------
		db  83h	; ƒ
		db 0C4h	; Ä
		db    4
; ---------------------------------------------------------------------------

loc_226C:				; CODE XREF: DataDict::setTransform(char const *)+DAj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN9
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
?setTransform@DataDict@@QAEXPBD@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN9		dd 1			; DATA XREF: DataDict::setTransform(char const *)+118o
		dd offset $LN8
$LN8		dd 0FFFFFFECh, 4	; DATA XREF: .text:00002298o
		dd offset $LN7
$LN7		dd 646E65h		; DATA XREF: .text:000022A4o
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22ACh
		public ??_C@_0CB@LHJJDAJE@Invalid?5transform?5specified?3?5?$CFs?6@
; char `string'[]
??_C@_0CB@LHJJDAJE@Invalid?5transform?5specified?3?5?$CFs?6@ db	'Invalid transform specified: %s',0Ah,0
					; DATA XREF: DataDict::setTransform(char const *)+E2o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 22D0h
		public ??_C@_0DL@JMLGIMOM@Syntax?5for?5offset?5value?5in?5?9?9tra@
; char `string'[]
??_C@_0DL@JMLGIMOM@Syntax?5for?5offset?5value?5in?5?9?9tra@ db 'Syntax for offset value in --transform offset-%s invalid!',0Ah,0
					; DATA XREF: DataDict::setTransform(char const *)+91o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 230Ch
		public ??_C@_07GEIFAAFE@offset?9?$AA@
; char `string'[]
??_C@_07GEIFAAFE@offset?9?$AA@ db 'offset-',0
					; DATA XREF: DataDict::setTransform(char const *)+27o
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2314h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall DataDict::addWord(DataDict *__hidden this, const struct icu_56::UnicodeString	*, int,	enum UErrorCode	*)
		public ?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z
?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z proc near
					; CODE XREF: _main+767p _main+831p

var_12C		= byte ptr -12Ch
var_128		= dword	ptr -128h
var_58		= byte ptr -58h
var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	0FFFFFFFFh
		push	offset __ehhandler$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z
		mov	eax, large fs:0
		push	eax
		sub	esp, 120h
		push	ebx
		push	esi
		push	edi		; enum UErrorCode *
		push	ecx
		lea	edi, [ebp+var_12C]
		mov	ecx, 48h ; 'H'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_10], eax
		push	eax		; int
		lea	eax, [ebp+var_C]
		mov	large fs:0, eax
		mov	[ebp+var_18], ecx
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax], 0
		jz	short loc_23DD
		mov	esi, esp
		lea	ecx, [ebp+var_58] ; this
		call	dword ptr ds:__imp_??0CharString@icu_56@@QAE@XZ	; icu_56::CharString::CharString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		lea	ecx, [ebp+var_58]
		push	ecx		; struct icu_56::CharString *
		mov	edx, [ebp+arg_0]
		push	edx		; struct icu_56::UnicodeString *
		mov	ecx, [ebp+var_18] ; this
		call	?transform@DataDict@@AAEXABVUnicodeString@icu_56@@AAVCharString@3@AAW4UErrorCode@@@Z ; DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax
		mov	ecx, [ebp+arg_4]
		push	ecx		; enum UErrorCode *
		mov	edi, esp
		lea	edx, [ebp+var_128]
		push	edx		; int
		lea	ecx, [ebp+var_58]
		call	dword ptr ds:__imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ ; icu_56::CharString::toStringPiece(void)
		cmp	edi, esp
		call	__RTC_CheckEsp
		push	eax		; struct icu_56::StringPiece *
		mov	eax, [ebp+var_18]
		mov	ecx, [eax]	; this
		call	dword ptr ds:__imp_?add@BytesTrieBuilder@icu_56@@QAEAAV12@ABVStringPiece@2@HAAW4UErrorCode@@@Z ; icu_56::BytesTrieBuilder::add(icu_56::StringPiece const &,int,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_4], 0FFFFFFFFh
		mov	esi, esp
		lea	ecx, [ebp+var_58] ; this
		call	dword ptr ds:__imp_??1CharString@icu_56@@QAE@XZ	; icu_56::CharString::~CharString(void)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_23DD:				; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+4Bj
		mov	eax, [ebp+var_18]
		cmp	dword ptr [eax+4], 0
		jz	short loc_2407
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_4]
		push	ecx		; int
		mov	edx, [ebp+arg_0]
		push	edx		; struct icu_56::UnicodeString *
		mov	eax, [ebp+var_18]
		mov	ecx, [eax+4]	; this
		call	dword ptr ds:__imp_?add@UCharsTrieBuilder@icu_56@@QAEAAV12@ABVUnicodeString@2@HAAW4UErrorCode@@@Z ; icu_56::UCharsTrieBuilder::add(icu_56::UnicodeString const &,int,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2407:				; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+D0j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN9_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		mov	ecx, [ebp+var_C]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_10]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 12Ch
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN9_0		dd 1			; DATA XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+F7o
		dd offset $LN8_0
$LN8_0		dd 0FFFFFFA8h, 38h	; DATA XREF: .text:00002448o
		dd offset $LN6
$LN6		dd 667562h		; DATA XREF: .text:00002454o
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text$x		segment	para public 'CODE' use32
		assume cs:_text$x
		;org 245Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


__unwindfunclet$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z$0 proc near
					; DATA XREF: .xdata$x:0000249Co
		mov	esi, esp
		lea	ecx, [ebp-58h]	; this
		call	dword ptr ds:__imp_??1CharString@icu_56@@QAE@XZ	; icu_56::CharString::~CharString(void)
		cmp	esi, esp
		jmp	__RTC_CheckEsp
__unwindfunclet$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z$0 endp


; =============== S U B	R O U T	I N E =======================================


__ehhandler$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z	proc near
					; DATA XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+5o

arg_4		= dword	ptr  8

		mov	edx, [esp+arg_4]
		lea	eax, [edx+0Ch]
		mov	ecx, [edx-130h]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	ecx, [edx-4]
		xor	ecx, eax
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		mov	eax, offset __ehfuncinfo$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z
		jmp	___CxxFrameHandler3
__ehhandler$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z	endp

; ---------------------------------------------------------------------------
		align 4
_text$x		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_xdata$x	segment	dword public 'DATA' use32
		assume cs:_xdata$x
		;org 2498h
__unwindtable$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z dd 0FFFFFFFFh
					; DATA XREF: .xdata$x:000024A8o
		dd offset __unwindfunclet$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z dd 19930522h, 1
					; DATA XREF: __ehhandler$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z+1Eo
		dd offset __unwindtable$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z
		align 20h
		dd 1
_xdata$x	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 24C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall DataDict::transform(DataDict *this, const struct icu_56::UnicodeString *, struct icu_56::CharString *, enum UErrorCode *)
		public ?transform@DataDict@@AAEXABVUnicodeString@icu_56@@AAVCharString@3@AAW4UErrorCode@@@Z
?transform@DataDict@@AAEXABVUnicodeString@icu_56@@AAVCharString@3@AAW4UErrorCode@@@Z proc near
					; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+75p

var_F0		= byte ptr -0F0h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0F0h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_F0]
		mov	ecx, 3Ch ; '<'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	[ebp+var_14], 0
		mov	esi, esp
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?length@UnicodeString@icu_56@@QBEHXZ	; icu_56::UnicodeString::length(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax
		mov	[ebp+var_2C], 0
		jmp	short loc_2521
; ---------------------------------------------------------------------------

loc_250C:				; CODE XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+A8j
		mov	eax, 0FFFFh
		cmp	eax, [ebp+var_14]
		sbb	ecx, ecx
		neg	ecx
		add	ecx, 1
		add	ecx, [ebp+var_2C]
		mov	[ebp+var_2C], ecx

loc_2521:				; CODE XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+46j
		mov	eax, [ebp+var_2C]
		cmp	eax, [ebp+var_20]
		jge	short loc_256E
		mov	esi, esp
		mov	eax, [ebp+var_2C]
		push	eax		; int
		mov	ecx, [ebp+arg_0] ; this
		call	dword ptr ds:__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z ; icu_56::UnicodeString::char32At(int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_14], eax
		mov	esi, esp
		mov	eax, [ebp+arg_8]
		push	eax		; enum UErrorCode *
		mov	ecx, [ebp+arg_8]
		push	ecx		; enum UErrorCode *
		mov	edx, [ebp+var_14]
		push	edx		; int
		mov	ecx, [ebp+var_8] ; this
		call	?transform@DataDict@@AAEDHAAW4UErrorCode@@@Z ; DataDict::transform(int,UErrorCode &)
		movzx	eax, al
		push	eax		; char
		mov	ecx, [ebp+arg_4] ; this
		call	dword ptr ds:__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z ; icu_56::CharString::append(char,UErrorCode	&)
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_250C
; ---------------------------------------------------------------------------

loc_256E:				; CODE XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+63j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	0Ch
?transform@DataDict@@AAEXABVUnicodeString@icu_56@@AAVCharString@3@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2584h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; char __thiscall DataDict::transform(DataDict *this, int, enum	UErrorCode *)
		public ?transform@DataDict@@AAEDHAAW4UErrorCode@@@Z
?transform@DataDict@@AAEDHAAW4UErrorCode@@@Z proc near
					; CODE XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+8Fp

var_D8		= byte ptr -0D8h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, dword ptr ds:__imp_?TRANSFORM_TYPE_OFFSET@DictionaryData@icu_56@@2HB ; int	const icu_56::DictionaryData::TRANSFORM_TYPE_OFFSET
		mov	edx, [eax+0Ch]
		cmp	edx, [ecx]
		jnz	loc_263B
		cmp	[ebp+arg_0], 200Dh
		jnz	short loc_25CA
		or	al, 0FFh
		jmp	short loc_2647
; ---------------------------------------------------------------------------
		jmp	short loc_25D7
; ---------------------------------------------------------------------------

loc_25CA:				; CODE XREF: DataDict::transform(int,UErrorCode	&)+3Ej
		cmp	[ebp+arg_0], 200Ch
		jnz	short loc_25D7
		mov	al, 0FEh ; 'þ'
		jmp	short loc_2647
; ---------------------------------------------------------------------------

loc_25D7:				; CODE XREF: DataDict::transform(int,UErrorCode	&)+44j
					; DataDict::transform(int,UErrorCode &)+4Dj
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		sub	ecx, [eax+8]
		mov	[ebp+var_14], ecx
		js	short loc_25EE
		cmp	[ebp+var_14], 0FDh ; 'ý'
		jle	short loc_2634

loc_25EE:				; CODE XREF: DataDict::transform(int,UErrorCode	&)+5Fj
		mov	esi, esp
		mov	eax, [ebp+var_8]
		mov	ecx, [eax+8]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		push	offset ??_C@_0DO@NFANIDEJ@Codepoint?5U?$CL?$CF04lx?5out?5of?5range?5f@ ; "Codepoint U+%04lx out	of range for --tr"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_2634:				; CODE XREF: DataDict::transform(int,UErrorCode	&)+68j
		mov	al, byte ptr [ebp+var_14]
		jmp	short loc_2647
; ---------------------------------------------------------------------------
		jmp	short loc_2647
; ---------------------------------------------------------------------------

loc_263B:				; CODE XREF: DataDict::transform(int,UErrorCode	&)+31j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 5
		mov	al, byte ptr [ebp+arg_0]

loc_2647:				; CODE XREF: DataDict::transform(int,UErrorCode	&)+42j
					; DataDict::transform(int,UErrorCode &)+51j ...
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?transform@DataDict@@AAEDHAAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2660h
		public ??_C@_0DO@NFANIDEJ@Codepoint?5U?$CL?$CF04lx?5out?5of?5range?5f@
; char `string'[]
??_C@_0DO@NFANIDEJ@Codepoint?5U?$CL?$CF04lx?5out?5of?5range?5f@	db 'Codepoint U+%04lx out of range for --transform offset-%04lx!',0Ah,0
					; DATA XREF: DataDict::transform(int,UErrorCode	&)+77o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 26A0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: class	icu_56::StringPiece __thiscall DataDict::serializeBytes(enum  UErrorCode &)
		public ?serializeBytes@DataDict@@QAE?AVStringPiece@icu_56@@AAW4UErrorCode@@@Z
?serializeBytes@DataDict@@QAE?AVStringPiece@icu_56@@AAW4UErrorCode@@@Z proc near
					; CODE XREF: _main+A35p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		push	1
		mov	ecx, [ebp+arg_0]
		push	ecx
		mov	edx, [ebp+var_8]
		mov	ecx, [edx]
		call	dword ptr ds:__imp_?buildStringPiece@BytesTrieBuilder@icu_56@@QAE?AVStringPiece@2@W4UStringTrieBuildOption@@AAW4UErrorCode@@@Z ; icu_56::BytesTrieBuilder::buildStringPiece(UStringTrieBuildOption,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?serializeBytes@DataDict@@QAE?AVStringPiece@icu_56@@AAW4UErrorCode@@@Z endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 26FCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __thiscall DataDict::serializeUChars(DataDict *this, struct icu_56::UnicodeString *, enum UErrorCode *)
		public ?serializeUChars@DataDict@@QAEXAAVUnicodeString@icu_56@@AAW4UErrorCode@@@Z
?serializeUChars@DataDict@@QAEXAAVUnicodeString@icu_56@@AAW4UErrorCode@@@Z proc	near
					; CODE XREF: _main+A92p

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		push	1
		mov	edx, [ebp+var_8]
		mov	ecx, [edx+4]
		call	dword ptr ds:__imp_?buildUnicodeString@UCharsTrieBuilder@icu_56@@QAEAAVUnicodeString@2@W4UStringTrieBuildOption@@AAV32@AAW4UErrorCode@@@Z ; icu_56::UCharsTrieBuilder::buildUnicodeString(UStringTrieBuildOption,icu_56::UnicodeString &,UErrorCode &)
		cmp	esi, esp
		call	__RTC_CheckEsp
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	8
?serializeUChars@DataDict@@QAEXAAVUnicodeString@icu_56@@AAW4UErrorCode@@@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2754h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __thiscall DataDict::getTransform(DataDict *__hidden this)
		public ?getTransform@DataDict@@QAEHXZ
?getTransform@DataDict@@QAEHXZ proc near ; CODE	XREF: _main+D0Ep

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_8]
		mov	eax, [eax+0Ch]
		or	eax, [ecx+8]
		pop	edi
		pop	esi
		pop	ebx
		mov	esp, ebp
		pop	ebp
		retn
?getTransform@DataDict@@QAEHXZ endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 278Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::BytesTrieBuilder::`scalar deleting destructor'(unsigned int)
		public ??_GBytesTrieBuilder@icu_56@@UAEPAXI@Z
??_GBytesTrieBuilder@icu_56@@UAEPAXI@Z proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1BytesTrieBuilder@icu_56@@UAE@XZ ;	icu_56::BytesTrieBuilder::~BytesTrieBuilder(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_27DF
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_27DF:				; CODE XREF: icu_56::BytesTrieBuilder::`scalar deleting	destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GBytesTrieBuilder@icu_56@@UAEPAXI@Z endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 27F8h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; public: virtual void * __thiscall icu_56::UCharsTrieBuilder::`scalar deleting	destructor'(unsigned int)
		public ??_GUCharsTrieBuilder@icu_56@@UAEPAXI@Z
??_GUCharsTrieBuilder@icu_56@@UAEPAXI@Z	proc near

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		push	ecx
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		pop	ecx
		mov	[ebp+var_8], ecx
		mov	esi, esp
		mov	ecx, [ebp+var_8] ; this
		call	dword ptr ds:__imp_??1UCharsTrieBuilder@icu_56@@UAE@XZ ; icu_56::UCharsTrieBuilder::~UCharsTrieBuilder(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	eax, [ebp+arg_0]
		and	eax, 1
		jz	short loc_284B
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; void *
		call	dword ptr ds:__imp_??3UMemory@icu_56@@SAXPAX@Z ; icu_56::UMemory::operator delete(void *)
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_284B:				; CODE XREF: icu_56::UCharsTrieBuilder::`scalar	deleting destructor'(uint)+3Bj
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn	4
??_GUCharsTrieBuilder@icu_56@@UAEPAXI@Z	endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 2864h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl readLine(int, icu_56::UnicodeString *, icu_56::ErrorCode *)
?readLine@@YACPAUUCHARBUF@@AAVUnicodeString@icu_56@@AAVIcuToolErrorCode@3@@Z proc near
					; CODE XREF: _main+462p

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	esi, esp
		mov	ecx, [ebp+arg_8]
		call	dword ptr ds:__imp_??BErrorCode@icu_56@@QAEPAW4UErrorCode@@XZ ;	icu_56::ErrorCode::operator UErrorCode *(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		push	eax
		lea	eax, [ebp+var_8]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_ucbuf_readline
		add	esp, 0Ch
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_28C7
		mov	esi, esp
		mov	ecx, [ebp+arg_8] ; this
		call	dword ptr ds:__imp_?isFailure@ErrorCode@icu_56@@QBECXZ ; icu_56::ErrorCode::isFailure(void)
		cmp	esi, esp
		call	__RTC_CheckEsp
		movsx	eax, al
		test	eax, eax
		jz	short loc_28CE

loc_28C7:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+48j
		xor	al, al
		jmp	loc_2971
; ---------------------------------------------------------------------------

loc_28CE:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+61j
		mov	eax, [ebp+var_8]
		push	eax
		push	23h ; '#'
		mov	ecx, [ebp+var_14]
		push	ecx
		call	_u_memchr_56
		add	esp, 0Ch
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_28F6
		mov	eax, [ebp+var_20]
		sub	eax, [ebp+var_14]
		sar	eax, 1
		mov	[ebp+var_8], eax
		jmp	short loc_2927
; ---------------------------------------------------------------------------

loc_28F6:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+83j
					; readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+C1j
		cmp	[ebp+var_8], 0
		jle	short loc_2927
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		movzx	edx, word ptr [ecx+eax*2-2]
		cmp	edx, 0Dh
		jz	short loc_291C
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		movzx	edx, word ptr [ecx+eax*2-2]
		cmp	edx, 0Ah
		jnz	short loc_2927

loc_291C:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+A6j
		mov	eax, [ebp+var_8]
		sub	eax, 1
		mov	[ebp+var_8], eax
		jmp	short loc_28F6
; ---------------------------------------------------------------------------

loc_2927:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+90j
					; readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+96j ...
		cmp	[ebp+var_8], 0
		jle	short loc_2953
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+var_14]
		movzx	edx, word ptr [ecx+eax*2-2]
		push	edx
		call	_u_isspace_56
		add	esp, 4
		movsx	eax, al
		test	eax, eax
		jz	short loc_2953
		mov	eax, [ebp+var_8]
		sub	eax, 1
		mov	[ebp+var_8], eax
		jmp	short loc_2927
; ---------------------------------------------------------------------------

loc_2953:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+C7j
					; readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+E2j
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax		; int
		mov	ecx, [ebp+var_14]
		push	ecx		; wchar_t *
		push	0		; signed __int8
		mov	ecx, [ebp+arg_4] ; this
		call	dword ptr ds:__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z ; icu_56::UnicodeString::setTo(signed	char,wchar_t const *,int)
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	al, 1

loc_2971:				; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+65j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN14
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
?readLine@@YACPAUUCHARBUF@@AAVUnicodeString@icu_56@@AAVIcuToolErrorCode@3@@Z endp

; ---------------------------------------------------------------------------
		align 4
$LN14		dd 1			; DATA XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+111o
		dd offset $LN13
$LN13		dd 0FFFFFFF8h, 4	; DATA XREF: .text:0000299Co
		dd offset $LN12		; "lineLength"
$LN12		db 'lineLength',0       ; DATA XREF: .text:000029A8o
_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; _DWORD __thiscall icu_56::IcuToolErrorCode::~IcuToolErrorCode(icu_56::IcuToolErrorCode *__hidden this)
		extrn __imp_??1IcuToolErrorCode@icu_56@@UAE@XZ:near ; CODE XREF: _main+EC2p
					; __unwindfunclet$_main$0+5p
					; DATA XREF: ...
		extrn _udata_finish:near ; CODE	XREF: _main+D68p
		extrn _udata_writeBlock:near ; CODE XREF: _main+D29p
					; _main+D46p
; __declspec(dllimport)	public:	static int const icu_56::DictionaryData::TRIE_HAS_VALUES
		extrn __imp_?TRIE_HAS_VALUES@DictionaryData@icu_56@@2HB:near
					; DATA XREF: _main+CF5r
; __declspec(dllimport)	public:	static int const icu_56::DictionaryData::TRIE_TYPE_UCHARS
		extrn __imp_?TRIE_TYPE_UCHARS@DictionaryData@icu_56@@2HB:near
					; DATA XREF: _main:loc_DF1r
; __declspec(dllimport)	public:	static int const icu_56::DictionaryData::TRIE_TYPE_BYTES
		extrn __imp_?TRIE_TYPE_BYTES@DictionaryData@icu_56@@2HB:near
					; DATA XREF: _main+CC1r
		extrn _udata_create:near ; CODE	XREF: _main+B8Ap
; const	wchar_t	*__thiscall icu_56::UnicodeString::getBuffer(icu_56::UnicodeString *__hidden this)
		extrn __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:near
					; CODE XREF: _main+ABCp
					; DATA XREF: _main+ABCr
; const	char *__thiscall icu_56::StringPiece::data(icu_56::StringPiece *__hidden this)
		extrn __imp_?data@StringPiece@icu_56@@QBEPBDXZ:near ; CODE XREF: _main+A5Dp
					; DATA XREF: _main+A5Dr
; int __thiscall icu_56::StringPiece::size(icu_56::StringPiece *__hidden this)
		extrn __imp_?size@StringPiece@icu_56@@QBEHXZ:near ; CODE XREF: _main+A42p
					; DATA XREF: _main+A42r
; void __thiscall __high icu_56::ErrorCode::set(enum UErrorCode)
		extrn __imp_?set@ErrorCode@icu_56@@QAEXW4UErrorCode@@@Z:near
					; CODE XREF: _main+983p
					; DATA XREF: _main+983r
; signed __int8	__thiscall icu_56::ErrorCode::isSuccess(icu_56::ErrorCode *__hidden this)
		extrn __imp_?isSuccess@ErrorCode@icu_56@@QBECXZ:near ; CODE XREF: _main+968p
					; DATA XREF: _main+968r
; _DWORD __thiscall icu_56::UnicodeString::~UnicodeString(icu_56::UnicodeString	*__hidden this)
		extrn __imp_??1UnicodeString@icu_56@@UAE@XZ:near ; CODE	XREF: _main+778p
					; _main+842p ...
; struct icu_56::UnicodeString __thiscall __high icu_56::UnicodeString::tempSubString(int, int)
		extrn __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near
					; CODE XREF: _main+737p _main+801p
					; DATA XREF: ...
; size_t __cdecl strlen(const char *Str)
		extrn _strlen:near	; CODE XREF: _main+6AFp
; unsigned __int32 __cdecl _strtoul(const char *Str, char **EndPtr, int	Radix)
		extrn __imp__strtoul:near ; CODE XREF: _main+675p
					; DataDict::setTransform(char const *)+57p
					; DATA XREF: ...
; int __thiscall __high	icu_56::UnicodeString::extract(int, int, char *, int, enum icu_56::UnicodeString::EInvariant)
		extrn __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:near
					; CODE XREF: _main+656p
					; DATA XREF: _main+656r
		extrn _u_isspace_56:near ; CODE	XREF: _main+4FAp _main+5ABp ...
; __declspec(dllimport)	public:	wchar_t	__thiscall icu_56::UnicodeString::operator[](int)const
		extrn __imp_??AUnicodeString@icu_56@@QBE_WH@Z:near ; CODE XREF:	_main+4E9p
					; _main+59Ap
					; DATA XREF: ...
; int __thiscall icu_56::UnicodeString::length(icu_56::UnicodeString *__hidden this)
		extrn __imp_?length@UnicodeString@icu_56@@QBEHXZ:near
					; CODE XREF: _main+4C5p _main+576p ...
; signed __int8	__thiscall icu_56::UnicodeString::isEmpty(icu_56::UnicodeString	*__hidden this)
		extrn __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:near
					; CODE XREF: _main+48Cp
					; DATA XREF: _main+48Cr
; int __cdecl _puts(const char *Str)
		extrn __imp__puts:near	; CODE XREF: _main+406p _main+B56p ...
; _DWORD __thiscall icu_56::UnicodeString::UnicodeString(icu_56::UnicodeString *__hidden this)
		extrn __imp_??0UnicodeString@icu_56@@QAE@XZ:near ; CODE	XREF: _main+3E6p
					; _main+9FCp
					; DATA XREF: ...
; __declspec(dllimport)	public:	__thiscall icu_56::ErrorCode::operator enum  UErrorCode	&(void)
		extrn __imp_??BErrorCode@icu_56@@QAEAAW4UErrorCode@@XZ:near
					; CODE XREF: _main+328p _main+70Ap ...
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _main+2D2p _main+3B5p ...
; enum UErrorCode __thiscall __high icu_56::ErrorCode::reset()
		extrn __imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ:near
					; CODE XREF: _main+2C2p _main+3A5p ...
; const	char *__thiscall icu_56::ErrorCode::errorName(icu_56::ErrorCode	*__hidden this)
		extrn __imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ:near
					; CODE XREF: _main+285p _main+368p ...
; signed __int8	__thiscall icu_56::ErrorCode::isFailure(icu_56::ErrorCode *__hidden this)
		extrn __imp_?isFailure@ErrorCode@icu_56@@QBECXZ:near ; CODE XREF: _main+26Cp
					; _main+34Fp ...
		extrn _ucbuf_open:near	; CODE XREF: _main+25Cp
; __declspec(dllimport)	public:	__thiscall icu_56::ErrorCode::operator enum  UErrorCode	*(void)
		extrn __imp_??BErrorCode@icu_56@@QAEPAW4UErrorCode@@XZ:near
					; CODE XREF: _main+242p _main+B6Bp ...
; int _printf(const char *Format, ...)
		extrn __imp__printf:near ; CODE	XREF: _main+226p _main+313p ...
; _DWORD __thiscall icu_56::IcuToolErrorCode::IcuToolErrorCode(icu_56::IcuToolErrorCode	*__hidden this,	const char *)
		extrn __imp_??0IcuToolErrorCode@icu_56@@QAE@PBD@Z:near
					; CODE XREF: _main+1FFp
					; DATA XREF: _main+1FFr
		extrn _u_setDataDirectory_56:near ; CODE XREF: _main+143p
		extrn _uprv_getRawUTCtime_56:near ; CODE XREF: _main+127p
					; elapsedTime(void)+1Ep
; int _fprintf(FILE *File, const char *Format, ...)
		extrn __imp__fprintf:near ; CODE XREF: _main+91p _main+FBp ...
; FILE *__cdecl	___iob_func()
		extrn __imp____iob_func:near ; CODE XREF: _main+80p _main+EAp	...
		extrn _u_parseArgs:near	; CODE XREF: _main+5Ap
		extrn ___security_cookie:near ;	DATA XREF: _main+2Cr
					; DataDict::DataDict(signed char,UErrorCode &)+2Er ...
		extrn ___CxxFrameHandler3:near ; CODE XREF: __ehhandler$_main+23j
					; __ehhandler$??0DataDict@@QAE@CAAW4UErrorCode@@@Z+19j	...
		extrn __fltused:near
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _main+EF9p
					; __ehhandler$_main+Fp	...
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _main+EDFp
					; DataDict::setTransform(char const *)+11Ep ...
		extrn __RTC_CheckEsp:near ; CODE XREF: _main+88p _main+9Cp ...
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
		extrn _uprv_floor_56:near ; CODE XREF: elapsedTime(void)+35p
		extrn __ftol2_sse:near	; CODE XREF: elapsedTime(void)+3Dp
		extrn _u_getDataDirectory_56:near
					; CODE XREF: usageAndDie(UErrorCode):loc_17EDp
; void __cdecl icu_56::UMemory::operator delete(void *)
		extrn __imp_??3UMemory@icu_56@@SAXPAX@Z:near
					; CODE XREF: __unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$0+9p
					; __unwindfunclet$??0DataDict@@QAE@CAAW4UErrorCode@@@Z$1+9p ...
; _DWORD __thiscall icu_56::UCharsTrieBuilder::UCharsTrieBuilder(icu_56::UCharsTrieBuilder *__hidden this, enum	UErrorCode *)
		extrn __imp_??0UCharsTrieBuilder@icu_56@@QAE@AAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+139p
					; DATA XREF: DataDict::DataDict(signed char,UErrorCode &)+139r
; _DWORD __thiscall icu_56::BytesTrieBuilder::BytesTrieBuilder(icu_56::BytesTrieBuilder	*__hidden this,	enum UErrorCode	*)
		extrn __imp_??0BytesTrieBuilder@icu_56@@QAE@AAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+AFp
					; DATA XREF: DataDict::DataDict(signed char,UErrorCode &)+AFr
; void *__cdecl	static icu_56::UMemory::operator new(unsigned int)
		extrn __imp_??2UMemory@icu_56@@SAPAXI@Z:near
					; CODE XREF: DataDict::DataDict(signed char,UErrorCode &)+7Dp
					; DataDict::DataDict(signed char,UErrorCode &)+107p
					; DATA XREF: ...
; __declspec(dllimport)	public:	static int const icu_56::DictionaryData::TRANSFORM_NONE
		extrn __imp_?TRANSFORM_NONE@DictionaryData@icu_56@@2HB:near
					; DATA XREF: DataDict::DataDict(signed char,UErrorCode &)+62r
; const	type_info::`vftable'
		extrn ??_7type_info@@6B@:near
					; DATA XREF: .data:icu_56::BytesTrieBuilder `RTTI Type Descriptor'o
					; .data:icu_56::StringTrieBuilder `RTTI	Type Descriptor'o ...
; public: virtual void * __thiscall icu_56::BytesTrieBuilder::`scalar deleting destructor'(unsigned int)
		extrn ??_GBytesTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::BytesTrieBuilder::`vector deleting destructor'(unsigned int)
		extrn ??_EBytesTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::BytesTrieBuilder::`local vftable'o
; public: virtual void * __thiscall icu_56::UObject::getDynamicClassID(void)const
		extrn ?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near
					; DATA XREF: .rdata:00001D90o
					; .rdata:00001DE0o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::getElementStringLength(int)const
		extrn ?getElementStringLength@BytesTrieBuilder@icu_56@@EBEHH@Z:near
					; DATA XREF: .rdata:00001DE4o
; private: virtual wchar_t __thiscall icu_56::BytesTrieBuilder::getElementUnit(int, int)const
		extrn ?getElementUnit@BytesTrieBuilder@icu_56@@EBE_WHH@Z:near
					; DATA XREF: .rdata:00001DE8o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::getElementValue(int)const
		extrn ?getElementValue@BytesTrieBuilder@icu_56@@EBEHH@Z:near
					; DATA XREF: .rdata:00001DECo
; private: virtual int __thiscall icu_56::BytesTrieBuilder::getLimitOfLinearMatch(int, int, int)const
		extrn ?getLimitOfLinearMatch@BytesTrieBuilder@icu_56@@EBEHHHH@Z:near
					; DATA XREF: .rdata:00001DF0o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::countElementUnits(int, int,	int)const
		extrn ?countElementUnits@BytesTrieBuilder@icu_56@@EBEHHHH@Z:near
					; DATA XREF: .rdata:00001DF4o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::skipElementsBySomeUnits(int, int, int)const
		extrn ?skipElementsBySomeUnits@BytesTrieBuilder@icu_56@@EBEHHHH@Z:near
					; DATA XREF: .rdata:00001DF8o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::indexOfElementWithNextUnit(int, int, wchar_t)const
		extrn ?indexOfElementWithNextUnit@BytesTrieBuilder@icu_56@@EBEHHH_W@Z:near
					; DATA XREF: .rdata:00001DFCo
; private: virtual signed char __thiscall icu_56::BytesTrieBuilder::matchNodesCanHaveValues(void)const
		extrn ?matchNodesCanHaveValues@BytesTrieBuilder@icu_56@@EBECXZ:near
					; DATA XREF: .rdata:00001E00o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::getMaxBranchLinearSubNodeLength(void)const
		extrn ?getMaxBranchLinearSubNodeLength@BytesTrieBuilder@icu_56@@EBEHXZ:near
					; DATA XREF: .rdata:00001E04o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::getMinLinearMatch(void)const
		extrn ?getMinLinearMatch@BytesTrieBuilder@icu_56@@EBEHXZ:near
					; DATA XREF: .rdata:00001E08o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::getMaxLinearMatchLength(void)const
		extrn ?getMaxLinearMatchLength@BytesTrieBuilder@icu_56@@EBEHXZ:near
					; DATA XREF: .rdata:00001E0Co
; private: virtual class icu_56::StringTrieBuilder::Node * __thiscall icu_56::BytesTrieBuilder::createLinearMatchNode(int, int,	int, class icu_56::StringTrieBuilder::Node *)const
		extrn ?createLinearMatchNode@BytesTrieBuilder@icu_56@@EBEPAVNode@StringTrieBuilder@2@HHHPAV342@@Z:near
					; DATA XREF: .rdata:00001E10o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::write(int)
		extrn ?write@BytesTrieBuilder@icu_56@@EAEHH@Z:near
					; DATA XREF: .rdata:00001E14o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::writeElementUnits(int, int,	int)
		extrn ?writeElementUnits@BytesTrieBuilder@icu_56@@EAEHHHH@Z:near
					; DATA XREF: .rdata:00001E18o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::writeValueAndFinal(int, signed char)
		extrn ?writeValueAndFinal@BytesTrieBuilder@icu_56@@EAEHHC@Z:near
					; DATA XREF: .rdata:00001E1Co
; private: virtual int __thiscall icu_56::BytesTrieBuilder::writeValueAndType(signed char, int,	int)
		extrn ?writeValueAndType@BytesTrieBuilder@icu_56@@EAEHCHH@Z:near
					; DATA XREF: .rdata:00001E20o
; private: virtual int __thiscall icu_56::BytesTrieBuilder::writeDeltaTo(int)
		extrn ?writeDeltaTo@BytesTrieBuilder@icu_56@@EAEHH@Z:near
					; DATA XREF: .rdata:00001E24o
; public: virtual void * __thiscall icu_56::UCharsTrieBuilder::`scalar deleting	destructor'(unsigned int)
		extrn ??_GUCharsTrieBuilder@icu_56@@UAEPAXI@Z_0:near
; public: virtual void * __thiscall icu_56::UCharsTrieBuilder::`vector deleting	destructor'(unsigned int)
		extrn ??_EUCharsTrieBuilder@icu_56@@UAEPAXI@Z:near ; weak
					; DATA XREF: .rdata:const icu_56::UCharsTrieBuilder::`local vftable'o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::getElementStringLength(int)const
		extrn ?getElementStringLength@UCharsTrieBuilder@icu_56@@EBEHH@Z:near
					; DATA XREF: .rdata:00001D94o
; private: virtual wchar_t __thiscall icu_56::UCharsTrieBuilder::getElementUnit(int, int)const
		extrn ?getElementUnit@UCharsTrieBuilder@icu_56@@EBE_WHH@Z:near
					; DATA XREF: .rdata:00001D98o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::getElementValue(int)const
		extrn ?getElementValue@UCharsTrieBuilder@icu_56@@EBEHH@Z:near
					; DATA XREF: .rdata:00001D9Co
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::getLimitOfLinearMatch(int,	int, int)const
		extrn ?getLimitOfLinearMatch@UCharsTrieBuilder@icu_56@@EBEHHHH@Z:near
					; DATA XREF: .rdata:00001DA0o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::countElementUnits(int, int, int)const
		extrn ?countElementUnits@UCharsTrieBuilder@icu_56@@EBEHHHH@Z:near
					; DATA XREF: .rdata:00001DA4o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::skipElementsBySomeUnits(int, int, int)const
		extrn ?skipElementsBySomeUnits@UCharsTrieBuilder@icu_56@@EBEHHHH@Z:near
					; DATA XREF: .rdata:00001DA8o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::indexOfElementWithNextUnit(int, int, wchar_t)const
		extrn ?indexOfElementWithNextUnit@UCharsTrieBuilder@icu_56@@EBEHHH_W@Z:near
					; DATA XREF: .rdata:00001DACo
; private: virtual signed char __thiscall icu_56::UCharsTrieBuilder::matchNodesCanHaveValues(void)const
		extrn ?matchNodesCanHaveValues@UCharsTrieBuilder@icu_56@@EBECXZ:near
					; DATA XREF: .rdata:00001DB0o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::getMaxBranchLinearSubNodeLength(void)const
		extrn ?getMaxBranchLinearSubNodeLength@UCharsTrieBuilder@icu_56@@EBEHXZ:near
					; DATA XREF: .rdata:00001DB4o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::getMinLinearMatch(void)const
		extrn ?getMinLinearMatch@UCharsTrieBuilder@icu_56@@EBEHXZ:near
					; DATA XREF: .rdata:00001DB8o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::getMaxLinearMatchLength(void)const
		extrn ?getMaxLinearMatchLength@UCharsTrieBuilder@icu_56@@EBEHXZ:near
					; DATA XREF: .rdata:00001DBCo
; private: virtual class icu_56::StringTrieBuilder::Node * __thiscall icu_56::UCharsTrieBuilder::createLinearMatchNode(int, int, int, class icu_56::StringTrieBuilder::Node *)const
		extrn ?createLinearMatchNode@UCharsTrieBuilder@icu_56@@EBEPAVNode@StringTrieBuilder@2@HHHPAV342@@Z:near
					; DATA XREF: .rdata:00001DC0o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::write(int)
		extrn ?write@UCharsTrieBuilder@icu_56@@EAEHH@Z:near
					; DATA XREF: .rdata:00001DC4o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::writeElementUnits(int, int, int)
		extrn ?writeElementUnits@UCharsTrieBuilder@icu_56@@EAEHHHH@Z:near
					; DATA XREF: .rdata:00001DC8o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::writeValueAndFinal(int, signed char)
		extrn ?writeValueAndFinal@UCharsTrieBuilder@icu_56@@EAEHHC@Z:near
					; DATA XREF: .rdata:00001DCCo
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::writeValueAndType(signed char, int, int)
		extrn ?writeValueAndType@UCharsTrieBuilder@icu_56@@EAEHCHH@Z:near
					; DATA XREF: .rdata:00001DD0o
; private: virtual int __thiscall icu_56::UCharsTrieBuilder::writeDeltaTo(int)
		extrn ?writeDeltaTo@UCharsTrieBuilder@icu_56@@EAEHH@Z:near
					; DATA XREF: .rdata:00001DD4o
; __declspec(dllimport)	public:	static int const icu_56::DictionaryData::TRANSFORM_TYPE_OFFSET
		extrn __imp_?TRANSFORM_TYPE_OFFSET@DictionaryData@icu_56@@2HB:near
					; DATA XREF: DataDict::setTransform(char const *)+C6r
					; DataDict::transform(int,UErrorCode &)+26r
; int __cdecl _strncmp(const char *Str1, const char *Str2, size_t MaxCount)
		extrn __imp__strncmp:near
					; CODE XREF: DataDict::setTransform(char const *)+30p
					; DATA XREF: DataDict::setTransform(char const *)+30r
; struct icu_56::UCharsTrieBuilder *__thiscall icu_56::UCharsTrieBuilder::add(icu_56::UCharsTrieBuilder	*__hidden this,	const struct icu_56::UnicodeString *, int, enum	UErrorCode *)
		extrn __imp_?add@UCharsTrieBuilder@icu_56@@QAEAAV12@ABVUnicodeString@2@HAAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+E6p
					; DATA XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+E6r
; _DWORD __thiscall icu_56::CharString::~CharString(icu_56::CharString *__hidden this)
		extrn __imp_??1CharString@icu_56@@QAE@XZ:near
					; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+BCp
					; __unwindfunclet$?addWord@DataDict@@QAEXABVUnicodeString@icu_56@@HAAW4UErrorCode@@@Z$0+5p
					; DATA XREF: ...
; struct icu_56::BytesTrieBuilder *__thiscall icu_56::BytesTrieBuilder::add(icu_56::BytesTrieBuilder *__hidden this, const struct icu_56::StringPiece *, int, enum UErrorCode *)
		extrn __imp_?add@BytesTrieBuilder@icu_56@@QAEAAV12@ABVStringPiece@2@HAAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+A3p
					; DATA XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+A3r
; struct icu_56::StringPiece __thiscall	__high icu_56::CharString::toStringPiece()
		extrn __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ:near
					; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+90p
					; DATA XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+90r
; _DWORD __thiscall icu_56::CharString::CharString(icu_56::CharString *__hidden	this)
		extrn __imp_??0CharString@icu_56@@QAE@XZ:near
					; CODE XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+52p
					; DATA XREF: DataDict::addWord(icu_56::UnicodeString const &,int,UErrorCode &)+52r
; struct icu_56::CharString *__thiscall	icu_56::CharString::append(icu_56::CharString *__hidden	this, char, enum UErrorCode *)
		extrn __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+9Bp
					; DATA XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+9Br
; int __thiscall icu_56::UnicodeString::char32At(icu_56::UnicodeString *__hidden this, int)
		extrn __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:near
					; CODE XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+6Ep
					; DATA XREF: DataDict::transform(icu_56::UnicodeString const &,icu_56::CharString &,UErrorCode &)+6Er
; struct icu_56::StringPiece __thiscall	__high icu_56::BytesTrieBuilder::buildStringPiece(enum UStringTrieBuildOption, enum UErrorCode *)
		extrn __imp_?buildStringPiece@BytesTrieBuilder@icu_56@@QAE?AVStringPiece@2@W4UStringTrieBuildOption@@AAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::serializeBytes(UErrorCode &)+34p
					; DATA XREF: DataDict::serializeBytes(UErrorCode &)+34r
; struct icu_56::UnicodeString *__thiscall __high icu_56::UCharsTrieBuilder::buildUnicodeString(enum UStringTrieBuildOption, struct icu_56::UnicodeString *, enum UErrorCode *)
		extrn __imp_?buildUnicodeString@UCharsTrieBuilder@icu_56@@QAEAAVUnicodeString@2@W4UStringTrieBuildOption@@AAV32@AAW4UErrorCode@@@Z:near
					; CODE XREF: DataDict::serializeUChars(icu_56::UnicodeString &,UErrorCode &)+35p
					; DATA XREF: DataDict::serializeUChars(icu_56::UnicodeString &,UErrorCode &)+35r
; _DWORD __thiscall icu_56::BytesTrieBuilder::~BytesTrieBuilder(icu_56::BytesTrieBuilder *__hidden this)
		extrn __imp_??1BytesTrieBuilder@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::BytesTrieBuilder::`scalar deleting	destructor'(uint)+28p
					; DATA XREF: icu_56::BytesTrieBuilder::`scalar deleting	destructor'(uint)+28r
; _DWORD __thiscall icu_56::UCharsTrieBuilder::~UCharsTrieBuilder(icu_56::UCharsTrieBuilder *__hidden this)
		extrn __imp_??1UCharsTrieBuilder@icu_56@@UAE@XZ:near
					; CODE XREF: icu_56::UCharsTrieBuilder::`scalar	deleting destructor'(uint)+28p
					; DATA XREF: icu_56::UCharsTrieBuilder::`scalar	deleting destructor'(uint)+28r
; struct icu_56::UnicodeString *__thiscall icu_56::UnicodeString::setTo(icu_56::UnicodeString *__hidden	this, signed __int8, const wchar_t *, int)
		extrn __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z:near
					; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+FEp
					; DATA XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+FEr
		extrn _u_memchr_56:near	; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+74p
		extrn _ucbuf_readline:near
					; CODE XREF: readLine(UCHARBUF *,icu_56::UnicodeString &,icu_56::IcuToolErrorCode &)+39p


		end
